
var Module = {
  canvas: {},
  noInitialRun: true,
  noFSInit: true
};

var worker;

var process = require = false;

Module.initWorker = function () {

  worker = new Worker(__FILE__ + '.worker.js');

  worker.onmessage = function(event) {
    var message = event.data;

    if (message.type === 'stdout') {

      console.log( message.line + '\n' );

    } else if (message.type === 'start') {

      console.log( 'start' );

    } else if (message.type === 'done') {
      //
      console.log( 'Done!' );

    } else if (message.type === 'ready') {

      console.log( 'I\'m ready! ...' );
    }
  };
};


// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;

function jsCall() {
  var args = Array.prototype.slice.call(arguments);
  return Runtime.functionPointers[args[0]].apply(null, args.slice(1));
}








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.

  while (TOTAL_MEMORY <= DYNAMICTOP) { // Simple heuristic.
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  assert(TOTAL_MEMORY <= Math.pow(2, 30)); // 2^30==1GB is a practical maximum - 2^31 is already close to possible negative numbers etc.
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
  HEAP8.set(oldHEAP8);
  _emscripten_replace_memory(HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 24344;





























var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);



























/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a553() } },{ func: function() { __GLOBAL__I_a699() } });

















































































































































































































































































































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);






























































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,0,76,0,0,10,1,0,0,166,0,0,0,86,0,0,0,168,0,0,0,28,0,0,0,30,0,0,0,22,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,16,76,0,0,10,1,0,0,6,1,0,0,86,0,0,0,168,0,0,0,28,0,0,0,46,0,0,0,24,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;














































































































































































































var __ZTIt;
__ZTIt=allocate([160,55,0,0,48,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIs;
__ZTIs=allocate([160,55,0,0,56,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIm;
__ZTIm=allocate([160,55,0,0,64,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIl;
__ZTIl=allocate([160,55,0,0,72,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIj;
__ZTIj=allocate([160,55,0,0,80,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIi;
__ZTIi=allocate([160,55,0,0,88,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIh;
__ZTIh=allocate([160,55,0,0,96,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIf;
__ZTIf=allocate([160,55,0,0,104,56,0,0], "i8", ALLOC_STATIC);;
var __ZTId;
__ZTId=allocate([160,55,0,0,112,56,0,0], "i8", ALLOC_STATIC);;
var __ZTIc;
__ZTIc=allocate([160,55,0,0,120,56,0,0], "i8", ALLOC_STATIC);;


var __ZTIa;
__ZTIa=allocate([160,55,0,0,136,56,0,0], "i8", ALLOC_STATIC);;


var __ZTISt9exception;
var __ZTISt9exception=__ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);


































































































































































































































































































































/* memory initializer */ allocate([98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,99,114,101,97,116,101,32,115,111,108,105,100,32,104,101,105,103,104,116,102,105,101,108,100,46,32,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,115,111,108,105,100,39,46,32,0,0,0,0,0,0,0,0,66,117,105,108,100,105,110,103,32,110,97,118,105,103,97,116,105,111,110,32,0,0,0,0,114,101,115,101,116,84,105,109,101,114,115,32,0,0,0,0,99,111,110,102,105,103,32,0,108,111,97,100,105,110,103,32,102,114,111,109,32,99,111,110,116,101,110,116,115,32,0,0,99,97,110,110,111,116,32,108,111,97,100,32,79,66,74,32,102,105,108,101,32,0,0,0,67,111,109,112,97,99,116,72,101,105,103,104,116,102,105,101,108,100,32,40,109,95,99,104,102,41,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,0,0,0,0,99,108,101,97,110,117,112,32,0,0,0,0,0,0,0,0,67,114,101,97,116,101,32,100,101,116,97,105,108,32,109,101,115,104,46,32,0,0,0,0,66,117,105,108,100,32,112,111,108,121,103,111,110,115,32,109,101,115,104,32,102,114,111,109,32,99,111,110,116,111,117,114,115,46,32,0,0,0,0,0,80,97,114,116,105,116,105,111,110,32,119,97,108,107,97,98,108,101,32,115,117,114,102,97,99,101,32,0,0,0,0,0,102,105,108,116,101,114,115,32,0,0,0,0,0,0,0,0,72,101,105,103,104,116,102,105,101,108,100,32,112,111,108,121,103,111,110,32,115,111,117,112,32,0,0,0,0,0,0,0,0,0,64,64,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,72,66,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,240,65,0,0,0,0,0,0,128,64,0,0,0,0,0,0,0,64,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,102,105,110,100,78,101,97,114,101,115,116,80,111,105,110,116,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,102,105,110,100,78,101,97,114,101,115,116,80,111,108,121,0,103,101,116,78,97,118,72,101,105,103,104,116,102,105,101,108,100,82,101,103,105,111,110,115,0,0,0,0,0,0,0,0,68,101,99,0,0,0,0,0,103,101,116,78,97,118,77,101,115,104,86,101,114,116,105,99,101,115,0,0,0,0,0,0,78,111,118,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,108,111,110,103,0,0,0,0,98,97,114,101,71,101,111,109,86,97,108,105,100,97,116,101,0,0,0,0,0,0,0,0,32,109,95,114,101,103,105,111,110,77,105,110,83,105,122,101,61,37,102,32,10,0,0,0,79,99,116,0,0,0,0,0,98,97,114,101,71,101,111,109,65,100,100,84,114,105,97,110,103,108,101,0,0,0,0,0,83,101,112,0,0,0,0,0,98,97,114,101,71,101,111,109,65,100,100,86,101,114,116,101,120,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,65,117,103,0,0,0,0,0,98,117,105,108,100,80,111,108,121,68,101,116,97,105,108,58,32,67,111,117,108,100,32,110,111,116,32,116,114,105,97,110,103,117,108,97,116,101,32,112,111,108,121,103,111,110,44,32,97,100,100,105,110,103,32,100,101,102,97,117,108,116,32,100,97,116,97,46,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,116,114,105,115,39,32,40,37,100,41,46,0,0,0,0,0,98,97,114,101,71,101,111,109,73,110,105,116,0,0,0,0,74,117,108,0,0,0,0,0,98,117,105,108,100,0,0,0,74,117,110,0,0,0,0,0,105,110,105,116,87,105,116,104,70,105,108,101,67,111,110,116,101,110,116,0,0,0,0,0,110,112,97,116,104,32,60,32,109,95,109,97,120,80,97,116,104,0,0,0,0,0,0,0,65,112,114,0,0,0,0,0,105,110,105,116,87,105,116,104,70,105,108,101,0,0,0,0,77,97,114,0,0,0,0,0,105,110,105,116,0,0,0,0,70,101,98,0,0,0,0,0,74,97,110,0,0,0,0,0,109,95,110,97,118,81,117,101,114,121,61,37,112,32,10,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,105,110,116,0,0,0,0,109,95,110,97,118,77,101,115,104,61,37,112,32,10,0,0,32,109,95,109,111,110,111,116,111,110,101,80,97,114,116,105,116,105,111,110,105,110,103,61,37,117,10,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,99,114,101,97,116,101,32,68,101,116,111,117,114,32,67,114,111,119,100,0,0,0,79,99,116,111,98,101,114,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,32,113,117,101,114,121,0,0,0,0,0,118,101,99,116,111,114,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,105,110,100,105,99,101,115,39,32,40,37,100,41,46,0,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,32,113,117,101,114,121,32,40,37,117,41,32,10,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,65,117,103,117,115,116,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,110,112,97,116,104,32,62,32,48,0,0,0,0,0,0,0,73,110,105,116,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,46,32,37,112,32,10,0,0,0,0,0,0,0,74,117,108,121,0,0,0,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,0,0,0,74,117,110,101,0,0,0,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,32,40,37,117,41,32,10,0,0,0,0,77,97,121,0,0,0,0,0,67,114,101,97,116,101,100,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,46,32,37,112,32,10,0,0,0,0,65,112,114,105,108,0,0,0,67,111,117,108,100,32,110,111,116,32,99,114,101,97,116,101,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,0,77,97,114,99,104,0,0,0,66,117,105,108,116,32,68,101,116,111,117,114,32,110,97,118,100,97,116,97,46,32,37,112,32,10,0,0,0,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,105,110,116,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,98,117,105,108,100,32,68,101,116,111,117,114,32,110,97,118,109,101,115,104,46,0,32,109,95,97,103,101,110,116,77,97,120,83,108,111,112,101,61,37,102,32,10,0,0,0,74,97,110,117,97,114,121,0,67,111,110,102,105,103,46,100,101,116,97,105,108,77,101,115,104,80,111,108,121,32,61,32,37,117,59,0,0,0,0,0,37,46,48,76,102,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,110,101,119,116,39,32,40,37,100,41,46,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,98,117,105,108,100,32,100,101,116,97,105,108,32,109,101,115,104,46,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,102,105,114,115,116,86,101,114,116,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,109,100,116,108,39,46,0,110,97,118,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,109,95,104,101,97,112,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,116,114,105,97,110,103,117,108,97,116,101,32,99,111,110,116,111,117,114,115,46,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,109,101,115,104,39,46,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,84,114,97,99,101,32,97,110,100,32,115,105,109,112,108,105,102,121,32,114,101,103,105,111,110,32,99,111,110,116,111,117,114,115,58,32,37,117,32,99,111,110,116,115,32,40,109,97,120,83,105,109,112,108,105,102,105,99,97,116,105,111,110,69,114,114,111,114,61,32,37,102,44,32,109,97,120,69,100,103,101,76,101,110,61,32,37,117,41,10,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,99,114,101,97,116,101,32,99,111,110,116,111,117,114,115,46,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,99,115,101,116,39,46,0,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,0,32,109,95,97,103,101,110,116,77,97,120,67,108,105,109,98,61,37,102,32,10,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,99,111,110,115,111,108,101,46,108,111,103,40,34,68,101,98,117,103,68,114,97,119,71,76,58,58,101,110,100,34,41,59,32,105,102,32,40,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,100,116,41,32,123,32,118,97,114,32,111,98,106,101,99,116,32,61,32,95,95,116,97,95,117,116,105,108,115,46,109,101,115,104,70,114,111,109,86,101,114,116,105,99,101,115,40,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,44,32,110,101,119,32,84,72,82,69,69,46,77,101,115,104,66,97,115,105,99,77,97,116,101,114,105,97,108,40,123,32,99,111,108,111,114,58,32,48,120,102,102,48,48,48,48,44,32,119,105,114,101,102,114,97,109,101,58,32,116,114,117,101,44,32,116,114,97,110,115,112,97,114,101,110,116,58,32,116,114,117,101,44,32,111,112,97,99,105,116,121,58,32,48,46,53,32,125,41,32,41,59,32,103,97,109,101,46,115,99,101,110,101,46,97,100,100,40,111,98,106,101,99,116,41,59,32,125,59,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,98,117,105,108,100,32,100,105,115,116,97,110,99,101,32,102,105,101,108,100,46,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,110,101,119,118,39,32,40,37,100,41,46,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,98,117,105,108,100,32,114,101,103,105,111,110,115,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,110,101,120,116,86,101,114,116,39,32,40,37,100,41,46,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,70,97,105,108,101,100,32,116,111,32,109,101,114,103,101,32,99,111,110,116,111,117,114,115,32,37,100,32,97,110,100,32,37,100,46,0,0,0,0,109,95,99,97,112,97,99,105,116,121,32,62,32,48,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,101,114,111,100,101,46,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,98,117,105,108,100,32,99,111,109,112,97,99,116,32,100,97,116,97,46,0,0,116,103,116,43,110,32,60,61,32,77,65,88,95,76,79,67,65,76,95,83,69,71,83,0,110,97,118,113,117,101,114,121,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,99,104,102,39,46,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,37,117,32,87,97,108,107,97,98,108,101,32,84,114,105,97,110,103,108,101,115,10,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,110,112,97,116,104,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,115,104,111,114,116,0,0,0,32,109,95,97,103,101,110,116,82,97,100,105,117,115,61,37,102,32,10,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,99,114,101,97,116,101,32,115,111,108,105,100,32,104,101,105,103,104,116,102,105,101,108,100,46,0,0,0,0,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,112,117,115,104,40,110,101,119,32,84,72,82,69,69,46,86,101,99,116,111,114,51,40,37,102,44,32,37,102,44,32,37,102,41,41,0,0,0,0,0,118,111,105,100,0,0,0,0,37,76,102,0,0,0,0,0,102,105,108,116,101,114,83,109,97,108,108,82,101,103,105,111,110,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,114,101,103,105,111,110,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,100,109,101,115,104,46,116,114,105,115,39,32,40,37,100,41,46,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,115,111,108,105,100,39,46,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,109,101,115,104,46,97,114,101,97,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,70,97,105,108,101,100,32,116,111,32,102,105,110,100,32,109,101,114,103,101,32,112,111,105,110,116,115,32,102,111,114,32,37,100,32,97,110,100,32,37,100,46,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,109,95,102,105,114,115,116,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,109,95,110,112,97,116,104,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,32,45,32,37,46,49,102,75,32,118,101,114,116,115,44,32,37,46,49,102,75,32,116,114,105,115,0,0,0,0,0,0,32,45,32,37,100,32,120,32,37,100,32,99,101,108,108,115,0,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,66,117,105,108,100,105,110,103,32,110,97,118,105,103,97,116,105,111,110,58,0,0,0,0,65,77,0,0,0,0,0,0,99,97,110,82,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,101,100,103,101,115,39,32,40,37,100,41,46,0,0,0,0,98,117,105,108,100,78,97,118,105,103,97,116,105,111,110,58,32,73,110,112,117,116,32,109,101,115,104,32,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,100,46,0,0,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,84,111,111,32,109,97,110,121,32,112,111,108,121,103,111,110,115,32,37,100,32,40,109,97,120,58,37,100,41,46,0,0,0,0,32,109,95,97,103,101,110,116,72,101,105,103,104,116,61,37,102,32,10,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,32,61,32,91,93,59,32,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,100,116,32,61,32,39,68,85,95,68,82,65,87,95,81,85,65,68,83,39,59,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,114,101,103,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,82,101,103,105,111,110,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,116,109,112,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,100,109,101,115,104,46,118,101,114,116,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,111,108,121,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,109,101,115,104,46,114,101,103,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,67,111,117,108,100,32,110,111,116,32,102,105,110,100,32,109,101,114,103,101,32,116,97,114,103,101,116,32,102,111,114,32,98,97,100,32,99,111,110,116,111,117,114,32,37,100,46,0,0,0,0,0,0,0,0,109,95,110,101,120,116,0,0,108,111,97,100,105,110,103,32,102,114,111,109,32,102,105,108,101,0,0,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,116,114,105,97,110,103,117,108,97,116,101,40,41,32,114,101,116,117,114,110,101,100,32,98,97,100,32,114,101,115,117,108,116,115,46,0,0,0,0,0,0,0,105,103,110,111,114,101,32,37,102,44,32,37,102,44,32,37,102,0,0,0,0,0,0,0,109,95,112,97,116,104,0,0,70,111,117,110,100,32,97,32,37,117,32,115,116,101,112,115,32,112,97,116,104,32,10,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,116,118,101,114,116,115,39,32,40,37,100,41,46,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,67,97,110,110,111,116,32,102,105,110,100,32,97,32,115,116,114,97,105,103,104,116,32,112,97,116,104,58,32,37,117,10,0,0,0,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,116,114,105,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,70,111,117,110,100,32,97,32,37,117,32,112,111,108,121,115,116,101,112,115,32,112,97,116,104,32,10,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,104,97,114,101,97,39,32,40,37,100,41,46,0,0,0,0,0,0,0,67,97,110,110,111,116,32,102,105,110,100,32,97,32,112,97,116,104,58,32,37,117,10,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,104,114,101,103,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,116,103,116,43,110,32,60,61,32,109,97,120,65,103,101,110,116,115,0,0,0,0,0,0,85,115,101,32,37,117,32,44,32,37,117,32,97,115,32,115,116,97,114,116,32,47,32,101,110,100,32,112,111,108,121,82,101,102,115,32,10,0,0,0,115,105,103,110,101,100,32,99,104,97,114,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,104,111,108,101,39,32,40,37,100,41,46,0,0,0,0,0,0,0,0,32,109,95,99,101,108,108,72,101,105,103,104,116,61,37,102,32,10,0,0,0,0,0,0,83,101,116,32,112,111,108,121,32,37,117,32,97,115,32,117,110,119,97,108,107,97,98,108,101,32,10,0,0,0,0,0,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,32,61,32,91,93,59,32,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,100,116,32,61,32,39,68,85,95,68,82,65,87,95,84,82,73,83,39,59,0,0,0,0,0,0,114,101,109,111,118,101,86,101,114,116,101,120,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,101,100,103,101,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,67,97,110,110,111,116,32,102,105,110,100,32,97,32,112,111,108,121,32,110,101,97,114,58,32,37,102,44,32,37,102,44,32,37,102,32,10,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,100,109,101,115,104,46,109,101,115,104,101,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,37,115,40,123,32,120,58,37,102,44,32,121,58,37,102,44,32,122,58,37,102,32,125,41,59,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,109,101,115,104,46,112,111,108,121,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,114,118,101,114,116,115,39,32,40,37,100,41,46,0,0,0,114,99,66,117,105,108,100,67,111,109,112,97,99,116,72,101,105,103,104,116,102,105,101,108,100,58,32,72,101,105,103,104,116,102,105,101,108,100,32,104,97,115,32,116,111,111,32,109,97,110,121,32,108,97,121,101,114,115,32,37,100,32,40,109,97,120,58,32,37,100,41,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,67,97,110,110,111,116,32,103,101,116,32,116,105,108,101,32,97,110,100,32,112,111,108,121,32,98,121,32,114,101,102,32,35,37,117,32,58,32,37,117,32,10,0,0,0,0,0,0,109,95,110,111,100,101,115,0,67,97,110,110,111,116,32,102,105,110,100,32,110,101,97,114,101,115,116,80,111,108,121,58,32,37,117,10,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,33,109,95,112,97,116,104,0,111,110,32,121,61,37,117,32,10,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,99,115,61,37,102,44,32,99,104,61,37,102,44,32,104,101,105,103,104,116,61,37,117,44,32,119,105,100,116,104,61,37,117,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,68,105,115,116,97,110,99,101,70,105,101,108,100,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,115,114,99,39,32,40,37,100,41,46,0,37,115,40,123,120,58,37,102,44,32,121,58,37,102,44,32,122,58,37,102,125,41,59,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,116,103,116,43,110,32,60,61,32,109,97,120,78,101,105,115,0,0,0,0,0,0,0,0,37,115,40,110,117,108,108,41,59,0,0,0,0,0,0,0,99,104,97,114,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,98,111,117,110,100,115,39,32,40,37,100,41,46,0,0,0,0,0,32,109,95,99,101,108,108,83,105,122,101,61,37,102,32,10,0,0,0,0,0,0,0,0,67,97,110,110,111,116,32,102,105,110,100,32,97,32,114,97,110,100,111,109,32,112,111,105,110,116,58,32,37,117,10,0,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,32,61,32,91,93,59,32,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,100,116,32,61,32,39,68,85,95,68,82,65,87,95,76,73,78,69,83,39,59,0,0,0,0,0,58,32,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,37,115,40,95,95,116,109,112,95,114,101,99,97,115,116,106,115,95,100,97,116,97,41,59,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,104,112,46,100,97,116,97,39,32,40,37,100,41,46,0,0,0,0,95,95,116,109,112,95,114,101,99,97,115,116,106,115,95,100,97,116,97,46,112,117,115,104,40,123,120,58,37,102,44,32,121,58,37,102,44,32,122,58,37,102,125,41,59,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,109,101,115,104,46,118,101,114,116,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,118,101,114,116,115,39,32,40,37,100,41,46,0,0,0,0,114,99,66,117,105,108,100,67,111,109,112,97,99,116,72,101,105,103,104,116,102,105,101,108,100,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,99,104,102,46,97,114,101,97,115,39,32,40,37,100,41,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,84,111,111,32,109,97,110,121,32,118,101,114,116,105,99,101,115,32,37,100,46,0,0,95,95,116,109,112,95,114,101,99,97,115,116,106,115,95,100,97,116,97,32,61,32,91,93,59,0,0,0,0,0,0,0,99,101,108,108,83,105,122,101,32,62,32,48,46,48,102,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,109,95,109,97,120,78,111,100,101,115,32,62,32,48,0,0,110,118,112,61,37,117,44,32,99,115,61,37,102,44,32,99,104,61,37,102,44,32,111,114,105,103,61,123,37,102,44,32,37,102,44,32,37,102,125,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,102,108,97,103,115,39,32,40,37,100,41,46,0,0,0,0,46,46,47,115,114,99,47,68,101,116,111,117,114,67,114,111,119,100,47,83,111,117,114,99,101,47,68,101,116,111,117,114,80,97,116,104,67,111,114,114,105,100,111,114,46,99,112,112,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,101,114,111,100,101,87,97,108,107,97,98,108,101,65,114,101,97,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,100,105,115,116,39,32,40,37,100,41,46,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,67,111,109,112,97,99,116,72,101,105,103,104,116,102,105,101,108,100,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,99,104,102,46,99,101,108,108,115,39,32,40,37,100,41,0,0,0,0,0,0,0,110,97,110,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,84,104,101,32,114,101,115,117,108,116,105,110,103,32,109,101,115,104,32,104,97,115,32,116,111,111,32,109,97,110,121,32,112,111,108,121,103,111,110,115,32,37,100,32,40,109,97,120,32,37,100,41,46,32,68,97,116,97,32,99,97,110,32,98,101,32,99,111,114,114,117,112,116,101,100,46,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,99,111,110,115,111,108,101,46,108,111,103,40,39,37,115,39,41,59,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,84,104,101,32,114,101,115,117,108,116,105,110,103,32,109,101,115,104,32,104,97,115,32,116,111,111,32,109,97,110,121,32,118,101,114,116,105,99,101,115,32,37,100,32,40,109,97,120,32,37,100,41,46,32,68,97,116,97,32,99,97,110,32,98,101,32,99,111,114,114,117,112,116,101,100,46,0,0,0,46,46,47,115,114,99,47,68,101,116,111,117,114,67,114,111,119,100,47,83,111,117,114,99,101,47,68,101,116,111,117,114,76,111,99,97,108,66,111,117,110,100,97,114,121,46,99,112,112,0,0,0,0,0,0,0,46,46,47,115,114,99,47,68,101,116,111,117,114,67,114,111,119,100,47,83,111,117,114,99,101,47,68,101,116,111,117,114,67,114,111,119,100,46,99,112,112,0,0,0,0,0,0,0,115,116,100,58,58,119,115,116,114,105,110,103,0,0,0,0,32,109,95,100,101,116,97,105,108,83,97,109,112,108,101,77,97,120,69,114,114,111,114,61,37,102,32,10,0,0,0,0,98,111,111,108,0,0,0,0,37,100,32,118,101,114,116,115,32,32,32,37,100,32,116,114,105,115,10,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,109,101,115,104,46,102,108,97,103,115,39,32,40,37,100,41,46,0,0,0,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,0,0,0,0,0,0,0,32,109,95,100,101,116,97,105,108,83,97,109,112,108,101,68,105,115,116,61,37,102,32,10,0,0,0,0,0,0,0,0,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,32,61,32,91,93,59,32,119,105,110,100,111,119,46,95,100,100,95,100,97,116,97,46,100,116,32,61,32,39,68,85,95,68,82,65,87,95,80,79,73,78,84,83,39,59,0,0,0,0,108,111,97,100,77,101,115,104,58,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,39,109,95,109,101,115,104,39,46,0,0,0,0,0,0,112,111,111,108,83,105,122,101,32,62,32,48,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,65,100,106,97,99,101,110,99,121,32,102,97,105,108,101,100,46,0,0,0,0,0,0,115,116,100,58,58,115,116,114,105,110,103,0,0,0,0,0,32,109,95,118,101,114,116,115,80,101,114,80,111,108,121,61,37,102,32,10,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,72,101,105,103,104,116,102,105,101,108,100,87,97,108,107,97,98,108,101,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,70,97,105,108,101,100,32,116,111,32,114,101,109,111,118,101,32,101,100,103,101,32,118,101,114,116,101,120,32,37,100,46,0,0,0,0,0,0,0,37,102,32,37,102,32,37,102,0,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,72,101,105,103,104,116,102,105,101,108,100,83,111,108,105,100,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,67,111,110,116,111,117,114,115,0,0,0,0,0,0,0,98,117,105,108,100,84,105,108,101,100,78,97,118,105,103,97,116,105,111,110,58,32,67,111,117,108,100,32,110,111,116,32,108,111,97,100,32,39,37,115,39,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,82,97,119,67,111,110,116,111,117,114,115,0,0,0,0,114,99,66,117,105,108,100,68,105,115,116,97,110,99,101,70,105,101,108,100,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,100,115,116,39,32,40,37,100,41,46,0,83,97,116,0,0,0,0,0,100,101,98,117,103,68,114,97,119,82,101,103,105,111,110,67,111,110,110,101,99,116,105,111,110,115,0,0,0,0,0,0,70,114,105,0,0,0,0,0,100,111,117,98,108,101,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,111,108,121,39,32,40,37,100,41,46,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,78,97,118,77,101,115,104,80,111,114,116,97,108,115,0,32,109,95,101,100,103,101,77,97,120,69,114,114,111,114,61,37,102,32,10,0,0,0,0,84,104,117,0,0,0,0,0,100,101,98,117,103,68,114,97,119,78,97,118,77,101,115,104,0,0,0,0,0,0,0,0,87,101,100,0,0,0,0,0,115,101,116,95,100,101,116,97,105,108,83,97,109,112,108,101,77,97,120,69,114,114,111,114,0,0,0,0,0,0,0,0,84,117,101,0,0,0,0,0,97,100,100,69,100,103,101,58,32,84,111,111,32,109,97,110,121,32,101,100,103,101,115,32,40,37,100,47,37,100,41,46,0,0,0,0,0,0,0,0,115,101,116,95,100,101,116,97,105,108,83,97,109,112,108,101,68,105,115,116,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,118,102,108,97,103,115,39,32,40,37,100,41,46,0,0,0,77,111,110,0,0,0,0,0,115,101,116,95,118,101,114,116,115,80,101,114,80,111,108,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,115,101,116,95,101,100,103,101,77,97,120,69,114,114,111,114,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,84,111,111,32,109,97,110,121,32,112,111,108,121,103,111,110,115,32,37,100,32,40,109,97,120,58,37,100,41,46,0,114,99,66,117,105,108,100,67,111,110,116,111,117,114,115,58,32,69,120,112,97,110,100,105,110,103,32,109,97,120,32,99,111,110,116,111,117,114,115,32,102,114,111,109,32,37,100,32,116,111,32,37,100,46,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,115,101,116,95,101,100,103,101,77,97,120,76,101,110,0,0,70,114,105,100,97,121,0,0,114,99,66,117,105,108,100,67,111,109,112,97,99,116,72,101,105,103,104,116,102,105,101,108,100,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,99,104,102,46,115,112,97,110,115,39,32,40,37,100,41,0,0,0,0,0,0,0,115,101,116,95,114,101,103,105,111,110,77,101,114,103,101,83,105,122,101,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,115,101,116,95,114,101,103,105,111,110,77,105,110,83,105,122,101,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,115,101,116,95,97,103,101,110,116,77,97,120,83,108,111,112,101,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,102,108,111,97,116,0,0,0,115,101,116,95,97,103,101,110,116,77,97,120,67,108,105,109,98,0,0,0,0,0,0,0,32,109,95,101,100,103,101,77,97,120,76,101,110,61,37,102,32,10,0,0,0,0,0,0,77,111,110,100,97,121,0,0,46,46,47,115,114,99,47,68,101,116,111,117,114,67,114,111,119,100,47,83,111,117,114,99,101,47,68,101,116,111,117,114,80,114,111,120,105,109,105,116,121,71,114,105,100,46,99,112,112,0,0,0,0,0,0,0,115,101,116,95,97,103,101,110,116,82,97,100,105,117,115,0,83,117,110,100,97,121,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,115,101,116,95,97,103,101,110,116,72,101,105,103,104,116,0,100,101,108,97,117,110,97,121,72,117,108,108,58,32,82,101,109,111,118,105,110,103,32,100,97,110,103,108,105,110,103,32,102,97,99,101,32,37,100,32,91,37,100,44,37,100,44,37,100,93,46,0,0,0,0,0,115,101,116,95,99,101,108,108,72,101,105,103,104,116,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,66,97,100,32,116,114,105,97,110,103,117,108,97,116,105,111,110,32,67,111,110,116,111,117,114,32,37,100,46,0,0,46,46,47,115,114,99,47,68,101,116,111,117,114,47,83,111,117,114,99,101,47,68,101,116,111,117,114,78,111,100,101,46,99,112,112,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,115,101,116,95,99,101,108,108,83,105,122,101,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,114,101,113,117,101,115,116,77,111,118,101,86,101,108,111,99,105,116,121,0,0,0,0,0,100,116,78,101,120,116,80,111,119,50,40,109,95,104,97,115,104,83,105,122,101,41,32,61,61,32,40,117,110,115,105,103,110,101,100,32,105,110,116,41,109,95,104,97,115,104,83,105,122,101,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,99,114,111,119,100,71,101,116,65,99,116,105,118,101,65,103,101,110,116,115,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,99,114,111,119,100,85,112,100,97,116,101,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,99,114,111,119,100,82,101,113,117,101,115,116,77,111,118,101,84,97,114,103,101,116,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,114,101,109,111,118,101,67,114,111,119,100,65,103,101,110,116,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,0,0,117,112,100,97,116,101,67,114,111,119,100,65,103,101,110,116,80,97,114,97,109,101,116,101,114,115,0,0,0,0,0,0,32,109,95,114,101,103,105,111,110,77,101,114,103,101,83,105,122,101,61,37,102,32,10,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,97,100,100,67,114,111,119,100,65,103,101,110,116,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,105,110,105,116,67,114,111,119,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,68,101,116,97,105,108,58,32,83,104,114,105,110,107,105,110,103,32,116,114,105,97,110,103,108,101,32,99,111,117,110,116,32,102,114,111,109,32,37,100,32,116,111,32,109,97,120,32,37,100,46,0,0,0,0,0,0,103,101,116,82,97,110,100,111,109,80,111,105,110,116,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,115,101,116,80,111,108,121,85,110,119,97,108,107,97,98,108,101,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,102,105,110,100,80,97,116,104,0,0,0,0,0,0,0,0,114,99,66,117,105,108,100,80,111,108,121,77,101,115,104,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,39,112,111,108,121,115,39,32,40,37,100,41,46,0,0,0,0,117,112,100,97,116,101,77,111,118,101,82,101,113,117,101,115,116,0,0,0,0,0,0,0,97,100,100,83,101,103,109,101,110,116,0,0,0,0,0,0,114,101,115,101,116,0,0,0,109,111,118,101,79,118,101,114,79,102,102,109,101,115,104,67,111,110,110,101,99,116,105,111,110,0,0,0,0,0,0,0,111,112,116,105,109,105,122,101,80,97,116,104,86,105,115,105,98,105,108,105,116,121,0,0,111,112,116,105,109,105,122,101,80,97,116,104,84,111,112,111,108,111,103,121,0,0,0,0,109,111,118,101,80,111,115,105,116,105,111,110,0,0,0,0,102,105,120,80,97,116,104,83,116,97,114,116,0,0,0,0,115,101,116,67,111,114,114,105,100,111,114,0,0,0,0,0,102,105,110,100,67,111,114,110,101,114,115,0,0,0,0,0,100,116,78,111,100,101,81,117,101,117,101,0,0,0,0,0,100,116,78,111,100,101,80,111,111,108,0,0,0,0,0,0,97,100,100,84,111,80,97,116,104,81,117,101,117,101,0,0,97,100,100,84,111,79,112,116,81,117,101,117,101,0,0,0,97,100,100,78,101,105,103,104,98,111,117,114,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,118,105,0,0,0,0,0,0,118,105,105,105,105,105,0,0,118,105,105,102,102,102,102,102,102,102,105,102,0,0,0,0,118,105,105,102,102,102,0,0,118,105,105,0,0,0,0,0,118,105,105,0,0,0,0,0,118,105,102,102,102,105,0,0,118,105,102,102,102,102,102,102,105,0,0,0,0,0,0,0,118,105,102,102,102,102,102,102,105,105,0,0,0,0,0,0,118,105,102,102,102,102,102,102,105,0,0,0,0,0,0,0,118,105,102,0,0,0,0,0,118,105,105,0,0,0,0,0,105,105,102,102,102,102,102,102,102,105,102,0,0,0,0,0,105,105,0,0,0,0,0,0,105,105,105,102,102,102,0,0,105,105,105,102,0,0,0,0,105,105,102,0,0,0,0,0,105,105,105,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,6,5,4,0,1,2,3,1,5,6,2,3,7,4,0,2,6,7,3,0,4,5,1,0,0,0,0,168,69,0,0,52,0,0,0,142,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,69,0,0,212,0,0,0,180,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,69,0,0,90,0,0,0,22,1,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,69,0,0,120,0,0,0,28,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,69,0,0,120,0,0,0,40,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,184,0,0,0,104,0,0,0,68,0,0,0,22,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,70,0,0,14,1,0,0,204,0,0,0,68,0,0,0,24,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,70,0,0,178,0,0,0,206,0,0,0,68,0,0,0,28,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,70,0,0,16,1,0,0,158,0,0,0,68,0,0,0,26,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,0,12,1,0,0,116,0,0,0,68,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,71,0,0,176,0,0,0,134,0,0,0,68,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,71,0,0,58,0,0,0,136,0,0,0,68,0,0,0,146,0,0,0,24,0,0,0,52,0,0,0,26,0,0,0,40,0,0,0,76,0,0,0,22,0,0,0,248,255,255,255,64,71,0,0,40,0,0,0,30,0,0,0,52,0,0,0,34,0,0,0,22,0,0,0,50,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,71,0,0,4,1,0,0,242,0,0,0,68,0,0,0,38,0,0,0,36,0,0,0,80,0,0,0,46,0,0,0,38,0,0,0,22,0,0,0,24,0,0,0,248,255,255,255,104,71,0,0,86,0,0,0,126,0,0,0,140,0,0,0,148,0,0,0,116,0,0,0,64,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,71,0,0,98,0,0,0,208,0,0,0,68,0,0,0,66,0,0,0,60,0,0,0,34,0,0,0,66,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,71,0,0,84,0,0,0,88,0,0,0,68,0,0,0,62,0,0,0,104,0,0,0,38,0,0,0,80,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,71,0,0,8,1,0,0,22,0,0,0,68,0,0,0,44,0,0,0,50,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,71,0,0,66,0,0,0,230,0,0,0,68,0,0,0,60,0,0,0,34,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,71,0,0,232,0,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,71,0,0,50,0,0,0,156,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,72,0,0,26,0,0,0,188,0,0,0,68,0,0,0,28,0,0,0,26,0,0,0,32,0,0,0,24,0,0,0,30,0,0,0,24,0,0,0,22,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,72,0,0,122,0,0,0,38,0,0,0,68,0,0,0,40,0,0,0,44,0,0,0,54,0,0,0,42,0,0,0,42,0,0,0,28,0,0,0,26,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,0,0,60,0,0,0,44,0,0,0,68,0,0,0,68,0,0,0,66,0,0,0,58,0,0,0,60,0,0,0,50,0,0,0,64,0,0,0,56,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,72,0,0,72,0,0,0,24,0,0,0,68,0,0,0,96,0,0,0,90,0,0,0,84,0,0,0,86,0,0,0,78,0,0,0,88,0,0,0,82,0,0,0,48,0,0,0,94,0,0,0,92,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,72,0,0,94,0,0,0,114,0,0,0,68,0,0,0,26,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,72,0,0,48,0,0,0,190,0,0,0,68,0,0,0,34,0,0,0,38,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,72,0,0,32,0,0,0,202,0,0,0,68,0,0,0,22,0,0,0,30,0,0,0,40,0,0,0,144,0,0,0,122,0,0,0,44,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,72,0,0,194,0,0,0,150,0,0,0,68,0,0,0,34,0,0,0,36,0,0,0,36,0,0,0,70,0,0,0,28,0,0,0,38,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,72,0,0,194,0,0,0,42,0,0,0,68,0,0,0,26,0,0,0,24,0,0,0,24,0,0,0,120,0,0,0,80,0,0,0,30,0,0,0,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,73,0,0,194,0,0,0,126,0,0,0,68,0,0,0,32,0,0,0,28,0,0,0,42,0,0,0,48,0,0,0,90,0,0,0,28,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,73,0,0,194,0,0,0,54,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,73,0,0,82,0,0,0,172,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,73,0,0,194,0,0,0,100,0,0,0,68,0,0,0,40,0,0,0,22,0,0,0,24,0,0,0,30,0,0,0,38,0,0,0,48,0,0,0,56,0,0,0,26,0,0,0,24,0,0,0,28,0,0,0,30,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,73,0,0,20,1,0,0,56,0,0,0,68,0,0,0,30,0,0,0,24,0,0,0,44,0,0,0,58,0,0,0,28,0,0,0,26,0,0,0,46,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,73,0,0,124,0,0,0,238,0,0,0,94,0,0,0,24,0,0,0,34,0,0,0,54,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,73,0,0,194,0,0,0,106,0,0,0,68,0,0,0,32,0,0,0,28,0,0,0,42,0,0,0,48,0,0,0,90,0,0,0,28,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,73,0,0,194,0,0,0,0,1,0,0,68,0,0,0,32,0,0,0,28,0,0,0,42,0,0,0,48,0,0,0,90,0,0,0,28,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,73,0,0,148,0,0,0,252,0,0,0,46,0,0,0,42,0,0,0,36,0,0,0,36,0,0,0,108,0,0,0,100,0,0,0,56,0,0,0,46,0,0,0,44,0,0,0,26,0,0,0,66,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,73,0,0,30,0,0,0,144,0,0,0,84,0,0,0,62,0,0,0,48,0,0,0,30,0,0,0,68,0,0,0,106,0,0,0,38,0,0,0,26,0,0,0,32,0,0,0,58,0,0,0,36,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,8,74,0,0,62,0,0,0,228,0,0,0,252,255,255,255,252,255,255,255,8,74,0,0,164,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,32,74,0,0,234,0,0,0,254,0,0,0,252,255,255,255,252,255,255,255,32,74,0,0,132,0,0,0,216,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,56,74,0,0,110,0,0,0,24,1,0,0,248,255,255,255,248,255,255,255,56,74,0,0,196,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,80,74,0,0,130,0,0,0,224,0,0,0,248,255,255,255,248,255,255,255,80,74,0,0,154,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,74,0,0,218,0,0,0,198,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,74,0,0,226,0,0,0,246,0,0,0,42,0,0,0,42,0,0,0,36,0,0,0,36,0,0,0,76,0,0,0,100,0,0,0,56,0,0,0,46,0,0,0,44,0,0,0,26,0,0,0,52,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,74,0,0,112,0,0,0,192,0,0,0,60,0,0,0,62,0,0,0,48,0,0,0,30,0,0,0,110,0,0,0,106,0,0,0,38,0,0,0,26,0,0,0,32,0,0,0,58,0,0,0,64,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,75,0,0,240,0,0,0,162,0,0,0,68,0,0,0,84,0,0,0,142,0,0,0,68,0,0,0,104,0,0,0,26,0,0,0,58,0,0,0,72,0,0,0,50,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,75,0,0,128,0,0,0,78,0,0,0,68,0,0,0,134,0,0,0,24,0,0,0,92,0,0,0,100,0,0,0,102,0,0,0,52,0,0,0,138,0,0,0,74,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,75,0,0,244,0,0,0,140,0,0,0,68,0,0,0,36,0,0,0,78,0,0,0,30,0,0,0,70,0,0,0,106,0,0,0,78,0,0,0,114,0,0,0,82,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,75,0,0,96,0,0,0,186,0,0,0,68,0,0,0,124,0,0,0,130,0,0,0,56,0,0,0,98,0,0,0,54,0,0,0,48,0,0,0,96,0,0,0,96,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,75,0,0,226,0,0,0,36,0,0,0,62,0,0,0,42,0,0,0,36,0,0,0,36,0,0,0,108,0,0,0,100,0,0,0,56,0,0,0,88,0,0,0,102,0,0,0,32,0,0,0,66,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,75,0,0,112,0,0,0,236,0,0,0,88,0,0,0,62,0,0,0,48,0,0,0,30,0,0,0,68,0,0,0,106,0,0,0,38,0,0,0,118,0,0,0,42,0,0,0,22,0,0,0,36,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,75,0,0,10,1,0,0,108,0,0,0,86,0,0,0,168,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,75,0,0,10,1,0,0,214,0,0,0,86,0,0,0,168,0,0,0,28,0,0,0,22,0,0,0,26,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,76,0,0,64,0,0,0,174,0,0,0,86,0,0,0,76,0,0,0,22,0,0,0,22,0,0,0,24,0,0,0,34,0,0,0,22,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,0,0,0,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,49,49,100,117,68,101,98,117,103,68,114,97,119,0,0,0,49,49,68,101,98,117,103,68,114,97,119,71,76,0,0,0,160,55,0,0,40,56,0,0,160,55,0,0,128,56,0,0,0,0,0,0,144,56,0,0,0,0,0,0,160,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,56,0,0,232,69,0,0,0,0,0,0,0,0,0,0,240,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,200,55,0,0,24,57,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,248,74,0,0,0,0,0,0,200,55,0,0,96,57,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,0,75,0,0,0,0,0,0,200,55,0,0,168,57,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,8,75,0,0,0,0,0,0,200,55,0,0,240,57,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,16,75,0,0,0,0,0,0,0,0,0,0,56,58,0,0,240,71,0,0,0,0,0,0,0,0,0,0,104,58,0,0,240,71,0,0,0,0,0,0,200,55,0,0,152,58,0,0,0,0,0,0,1,0,0,0,240,73,0,0,0,0,0,0,200,55,0,0,176,58,0,0,0,0,0,0,1,0,0,0,240,73,0,0,0,0,0,0,200,55,0,0,200,58,0,0,0,0,0,0,1,0,0,0,248,73,0,0,0,0,0,0,200,55,0,0,224,58,0,0,0,0,0,0,1,0,0,0,248,73,0,0,0,0,0,0,200,55,0,0,248,58,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,168,75,0,0,0,8,0,0,200,55,0,0,64,59,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,168,75,0,0,0,8,0,0,200,55,0,0,136,59,0,0,0,0,0,0,3,0,0,0,40,73,0,0,2,0,0,0,248,69,0,0,2,0,0,0,144,73,0,0,0,8,0,0,200,55,0,0,208,59,0,0,0,0,0,0,3,0,0,0,40,73,0,0,2,0,0,0,248,69,0,0,2,0,0,0,152,73,0,0,0,8,0,0,0,0,0,0,24,60,0,0,40,73,0,0,0,0,0,0,0,0,0,0,48,60,0,0,40,73,0,0,0,0,0,0,200,55,0,0,72,60,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,0,74,0,0,2,0,0,0,200,55,0,0,96,60,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,0,74,0,0,2,0,0,0,0,0,0,0,120,60,0,0,0,0,0,0,144,60,0,0,104,74,0,0,0,0,0,0,200,55,0,0,176,60,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,160,70,0,0,0,0,0,0,200,55,0,0,248,60,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,184,70,0,0,0,0,0,0,200,55,0,0,64,61,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,208,70,0,0,0,0,0,0,200,55,0,0,136,61,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,232,70,0,0,0,0,0,0,0,0,0,0,208,61,0,0,40,73,0,0,0,0,0,0,0,0,0,0,232,61,0,0,40,73,0,0,0,0,0,0,200,55,0,0,0,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,120,74,0,0,2,0,0,0,200,55,0,0,40,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,120,74,0,0,2,0,0,0,200,55,0,0,80,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,120,74,0,0,2,0,0,0,200,55,0,0,120,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,120,74,0,0,2,0,0,0,0,0,0,0,160,62,0,0,232,73,0,0,0,0,0,0,0,0,0,0,184,62,0,0,40,73,0,0,0,0,0,0,200,55,0,0,208,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,160,75,0,0,2,0,0,0,200,55,0,0,232,62,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,160,75,0,0,2,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,40,63,0,0,0,0,0,0,80,63,0,0,0,0,0,0,120,63,0,0,200,74,0,0,0,0,0,0,0,0,0,0,152,63,0,0,8,73,0,0,0,0,0,0,0,0,0,0,192,63,0,0,8,73,0,0,0,0,0,0,0,0,0,0,232,63,0,0,0,0,0,0,32,64,0,0,0,0,0,0,88,64,0,0,0,0,0,0,120,64,0,0,0,0,0,0,152,64,0,0,0,0,0,0,184,64,0,0,0,0,0,0,216,64,0,0,200,55,0,0,240,64,0,0,0,0,0,0,1,0,0,0,128,70,0,0,3,244,255,255,200,55,0,0,32,65,0,0,0,0,0,0,1,0,0,0,144,70,0,0,3,244,255,255,200,55,0,0,80,65,0,0,0,0,0,0,1,0,0,0,128,70,0,0,3,244,255,255,200,55,0,0,128,65,0,0,0,0,0,0,1,0,0,0,144,70,0,0,3,244,255,255,0,0,0,0,176,65,0,0,200,69,0,0,0,0,0,0,0,0,0,0,200,65,0,0,200,55,0,0,224,65,0,0,0,0,0,0,1,0,0,0,136,73,0,0,0,0,0,0,200,55,0,0,32,66,0,0,0,0,0,0,1,0,0,0,136,73,0,0,0,0,0,0,200,55,0,0,96,66,0,0,0,0,0,0,1,0,0,0,136,73,0,0,0,0,0,0,0,0,0,0,160,66,0,0,224,73,0,0,0,0,0,0,0,0,0,0,184,66,0,0,208,73,0,0,0,0,0,0,0,0,0,0,216,66,0,0,216,73,0,0,0,0,0,0,0,0,0,0,248,66,0,0,0,0,0,0,24,67,0,0,0,0,0,0,56,67,0,0,0,0,0,0,88,67,0,0,200,55,0,0,120,67,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,152,75,0,0,2,0,0,0,200,55,0,0,152,67,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,152,75,0,0,2,0,0,0,200,55,0,0,184,67,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,152,75,0,0,2,0,0,0,200,55,0,0,216,67,0,0,0,0,0,0,2,0,0,0,40,73,0,0,2,0,0,0,152,75,0,0,2,0,0,0,0,0,0,0,248,67,0,0,0,0,0,0,16,68,0,0,0,0,0,0,40,68,0,0,0,0,0,0,64,68,0,0,208,73,0,0,0,0,0,0,0,0,0,0,88,68,0,0,216,73,0,0,0,0,0,0,0,0,0,0,112,68,0,0,0,0,0,0,136,68,0,0,0,0,0,0,168,68,0,0,32,76,0,0,0,0,0,0,0,0,0,0,208,68,0,0,16,76,0,0,0,0,0,0,0,0,0,0,248,68,0,0,16,76,0,0,0,0,0,0,0,0,0,0,32,69,0,0,32,76,0,0,0,0,0,0,0,0,0,0,72,69,0,0,160,69,0,0,0,0,0,0,0,0,0,0,112,69,0,0,0,0,0,0,128,69,0,0,48,76,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  var _cosf=Math_cos;

  var _sinf=Math_sin;

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  var _sqrtf=Math_sqrt;

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;

  
  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces "//" comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the "#" for "//" again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                url = url + addr + ':' + port;
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  var _llvm_memset_p0i8_i32=_memset;

  var _llvm_va_start=undefined;

  
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))>>0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))>>0)]=0;
      return result.length;
    }function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}

  
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      var fd = _fileno(stream);
      return _write(fd, s, _strlen(s));
    }
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }

  var _fabsf=Math_abs;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  var _floorf=Math_floor;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  var _ceilf=Math_ceil;

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function _llvm_invariant_start() {}

  function ___cxa_guard_release() {}

  var _atan2f=Math_atan2;


  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }

  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)>>0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)>>0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)>>0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)>>0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var quarter = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
            if (format[formatIndex] == 'h') {
              quarter = true;
              formatIndex++;
            }
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          var base = 10;
          switch (type) {
            case 'X': case 'x':
              base = 16;
            case 'd': case 'u': case 'i':
              if (quarter) {
                HEAP8[((argPtr)>>0)]=parseInt(text, base);
              } else if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, base);
              } else if (longLong) {
                (tempI64 = [parseInt(text, base)>>>0,(tempDouble=parseInt(text, base),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, base);
              }
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))>>0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))>>0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

   
  Module["_strncpy"] = _strncpy;



  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }

  function _emscripten_run_script(ptr) {
      eval(Pointer_stringify(ptr));
    }

  
   
  Module["_rand_r"] = _rand_r;
  
  var ___rand_seed=allocate([0x0273459b, 0, 0, 0], "i32", ALLOC_STATIC); 
  Module["_rand"] = _rand;

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  function _getThreeJSMeshes() {
  Module['printErr']('missing function: getThreeJSMeshes'); abort(-1);
  }

  function _agentPool_get(idx, position_x, position_y, position_z, velocity_x, velocity_y, velocity_z, radius, active, state, neighbors) {
      agentPoolBuffer.push(agentPool.get(idx, position_x, position_y, position_z, velocity_x, velocity_y, velocity_z, radius, active, state, neighbors));
    }

  function _flush_active_agents_callback(data) {
      postMessage({
        type: 'activeAgents',
        data: agentPoolBuffer,
        funcName: 'crowdUpdate'
      });
    }

  function _agentPool_add(idx) {
      agentPool.add(agentPoolBuffer[idx]);
    }

  function _agentPool_clear(idx) {
      agentPoolBuffer.length = 0;
    }

  function __embind_register_function() {
  Module['printErr']('missing function: _embind_register_function'); abort(-1);
  }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function __embind_register_void() {
  Module['printErr']('missing function: _embind_register_void'); abort(-1);
  }

  function __embind_register_bool() {
  Module['printErr']('missing function: _embind_register_bool'); abort(-1);
  }

  function __embind_register_std_string() {
  Module['printErr']('missing function: _embind_register_std_string'); abort(-1);
  }

  function __embind_register_std_wstring() {
  Module['printErr']('missing function: _embind_register_std_wstring'); abort(-1);
  }

  function __embind_register_emval() {
  Module['printErr']('missing function: _embind_register_emval'); abort(-1);
  }

  function __embind_register_memory_view() {
  Module['printErr']('missing function: _embind_register_memory_view'); abort(-1);
  }

  function __embind_register_float() {
  Module['printErr']('missing function: _embind_register_float'); abort(-1);
  }

  function __embind_register_integer() {
  Module['printErr']('missing function: _embind_register_integer'); abort(-1);
  }

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }



  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }var _getc=_fgetc;

  function __ZNSt9exceptionD2Ev() {}

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _abort() {
      Module['abort']();
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___cxa_guard_abort() {}

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[((str)>>0)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[((str)>>0)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[((str)>>0)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[((str)>>0)] == 48) {
          if (HEAP8[((str+1)>>0)] == 120 ||
              HEAP8[((str+1)>>0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[((str)>>0)] == 48) {
          if (HEAP8[((str+1)>>0)] == 120 ||
              HEAP8[((str+1)>>0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[((str)>>0)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  
  function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }

  var _fabs=Math_abs;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
          function pointerLockChange() {
            Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                  document['mozPointerLockElement'] === canvas ||
                                  document['webkitPointerLockElement'] === canvas ||
                                  document['msPointerLockElement'] === canvas;
          }
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};

   
  Module["_emscripten_replace_memory"] = _emscripten_replace_memory;
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vif(index,a1,a2) {
  try {
    Module["dynCall_vif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vf(index,a1) {
  try {
    Module["dynCall_vf"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iifffffffif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_iifffffffif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vifffi(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_vifffi"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_if(index,a1) {
  try {
    return Module["dynCall_if"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iifff(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iifff"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viifff(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viifff"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vifff(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vifff"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiif(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vifffffffif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_vifffffffif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viffffffii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viffffffii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vffffffi(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_vffffffi"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vffffffii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_vffffffii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iif(index,a1,a2) {
  try {
    return Module["dynCall_iif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vifffiff(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_vifffiff"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vfffi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vfffi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiifff(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiifff"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viffffffi(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viffffffi"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viifffffffif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    Module["dynCall_viifffffffif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viif(index,a1,a2,a3) {
  try {
    Module["dynCall_viif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ifffffffif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_ifffffffif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var ___rand_seed=env.___rand_seed|0;
  var _stdin=env._stdin|0;
  var __ZTIm=env.__ZTIm|0;
  var __ZTIh=env.__ZTIh|0;
  var __ZTIj=env.__ZTIj|0;
  var __ZTId=env.__ZTId|0;
  var __ZTVN10__cxxabiv117__class_type_infoE=env.__ZTVN10__cxxabiv117__class_type_infoE|0;
  var __ZTIc=env.__ZTIc|0;
  var _stderr=env._stderr|0;
  var __ZTIi=env.__ZTIi|0;
  var _stdout=env._stdout|0;
  var __ZTIf=env.__ZTIf|0;
  var __ZTIs=env.__ZTIs|0;
  var __ZTISt9exception=env.__ZTISt9exception|0;
  var __ZTIa=env.__ZTIa|0;
  var __ZTVN10__cxxabiv120__si_class_type_infoE=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;
  var ___dso_handle=env.___dso_handle|0;
  var __ZTIl=env.__ZTIl|0;
  var __ZTIt=env.__ZTIt|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var jsCall=env.jsCall;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vif=env.invoke_vif;
  var invoke_vf=env.invoke_vf;
  var invoke_vi=env.invoke_vi;
  var invoke_iifffffffif=env.invoke_iifffffffif;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_vifffi=env.invoke_vifffi;
  var invoke_if=env.invoke_if;
  var invoke_iifff=env.invoke_iifff;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viifff=env.invoke_viifff;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_vifff=env.invoke_vifff;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iiif=env.invoke_iiif;
  var invoke_vifffffffif=env.invoke_vifffffffif;
  var invoke_viffffffii=env.invoke_viffffffii;
  var invoke_vffffffi=env.invoke_vffffffi;
  var invoke_vffffffii=env.invoke_vffffffii;
  var invoke_iif=env.invoke_iif;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_vifffiff=env.invoke_vifffiff;
  var invoke_vfffi=env.invoke_vfffi;
  var invoke_iiifff=env.invoke_iiifff;
  var invoke_i=env.invoke_i;
  var invoke_viffffffi=env.invoke_viffffffi;
  var invoke_viifffffffif=env.invoke_viifffffffif;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viif=env.invoke_viif;
  var invoke_ifffffffif=env.invoke_ifffffffif;
  var invoke_viiii=env.invoke_viiii;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _lseek=env._lseek;
  var __scanString=env.__scanString;
  var _fclose=env._fclose;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var __embind_register_std_string=env.__embind_register_std_string;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _strtoull=env._strtoull;
  var _fflush=env._fflush;
  var _flush_active_agents_callback=env._flush_active_agents_callback;
  var _fputc=env._fputc;
  var _llvm_stackrestore=env._llvm_stackrestore;
  var _fwrite=env._fwrite;
  var _send=env._send;
  var _fputs=env._fputs;
  var _llvm_umul_with_overflow_i32=env._llvm_umul_with_overflow_i32;
  var __embind_register_emval=env.__embind_register_emval;
  var _isspace=env._isspace;
  var _read=env._read;
  var _isxdigit_l=env._isxdigit_l;
  var _fileno=env._fileno;
  var _fsync=env._fsync;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _newlocale=env._newlocale;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var ___resumeException=env.___resumeException;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _llvm_va_end=env._llvm_va_end;
  var _cosf=env._cosf;
  var _getThreeJSMeshes=env._getThreeJSMeshes;
  var _vsscanf=env._vsscanf;
  var _snprintf=env._snprintf;
  var __embind_register_void=env.__embind_register_void;
  var __getFloat=env.__getFloat;
  var _atexit=env._atexit;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _close=env._close;
  var _isdigit_l=env._isdigit_l;
  var ___setErrNo=env.___setErrNo;
  var _isxdigit=env._isxdigit;
  var __embind_register_integer=env.__embind_register_integer;
  var _ftell=env._ftell;
  var _exit=env._exit;
  var _sprintf=env._sprintf;
  var _asprintf=env._asprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _freelocale=env._freelocale;
  var _atan2f=env._atan2f;
  var _catopen=env._catopen;
  var _catgets=env._catgets;
  var _fmod=env._fmod;
  var __isLeapYear=env.__isLeapYear;
  var __embind_register_float=env.__embind_register_float;
  var ___cxa_is_number_type=env.___cxa_is_number_type;
  var ___cxa_does_inherit=env.___cxa_does_inherit;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var __embind_register_function=env.__embind_register_function;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _sinf=env._sinf;
  var _recv=env._recv;
  var __parseInt64=env.__parseInt64;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _agentPool_add=env._agentPool_add;
  var __ZNSt9exceptionD2Ev=env.__ZNSt9exceptionD2Ev;
  var _llvm_stacksave=env._llvm_stacksave;
  var _mkport=env._mkport;
  var _copysign=env._copysign;
  var _agentPool_clear=env._agentPool_clear;
  var __exit=env.__exit;
  var _strftime=env._strftime;
  var _fabsf=env._fabsf;
  var _floorf=env._floorf;
  var ___cxa_throw=env.___cxa_throw;
  var _agentPool_get=env._agentPool_get;
  var _printf=env._printf;
  var _pread=env._pread;
  var _fopen=env._fopen;
  var _open=env._open;
  var _sqrtf=env._sqrtf;
  var _strtoull_l=env._strtoull_l;
  var __arraySum=env.__arraySum;
  var _sysconf=env._sysconf;
  var _puts=env._puts;
  var _strtoll_l=env._strtoll_l;
  var _fgetc=env._fgetc;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var __formatString=env.__formatString;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var __ZSt9terminatev=env.__ZSt9terminatev;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _sbrk=env._sbrk;
  var ___errno_location=env.___errno_location;
  var _strerror=env._strerror;
  var _catclose=env._catclose;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _ungetc=env._ungetc;
  var _emscripten_run_script=env._emscripten_run_script;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _uselocale=env._uselocale;
  var _vsnprintf=env._vsnprintf;
  var __embind_register_bool=env.__embind_register_bool;
  var _sscanf=env._sscanf;
  var ___assert_fail=env.___assert_fail;
  var _fread=env._fread;
  var _strftime_l=env._strftime_l;
  var _abort=env._abort;
  var _fprintf=env._fprintf;
  var _isdigit=env._isdigit;
  var _strtoll=env._strtoll;
  var __reallyNegative=env.__reallyNegative;
  var __addDays=env.__addDays;
  var _fabs=env._fabs;
  var _fseek=env._fseek;
  var _write=env._write;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _ceilf=env._ceilf;
  var _vasprintf=env._vasprintf;
  var _llvm_invariant_start=env._llvm_invariant_start;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _time=env._time;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZN7dtCrowd18updateWithoutDebugEf($this, $dt) {
 $this = $this | 0;
 $dt = +$dt;
 var $neis_i_i = 0, $visited_i = 0, $h_i = 0, $pat_i = 0, $ncorners_i = 0, $ids_i = 0, $ints_i_i = 0, $stack_i_i = 0, $pa_i_i = 0, $pb_i_i = 0, $segs_i = 0, $nres_i_i = 0, $queue_i120 = 0, $iters_i_i = 0, $queue_i = 0, $reqPath_i = 0, $reqPathCount_i = 0, $agentPos_i = 0, $agentRef_i = 0, $nearest_i = 0, $nearest47_i = 0, $m_velocitySampleCount = 0, $0 = 0, $m_maxAgents = 0, $1 = 0, $m_agents_i = 0, $i_08_i = 0, $n_07_i = 0, $arrayidx_i = 0, $n_1_i = 0, $inc8_i = 0, $n_0_lcssa_i = 0, $cmp62_i = 0, $m_agents_i_i = 0, $arraydecay_i1 = 0, $arrayidx3_i54_i = 0, $arrayidx5_i56_i = 0, $m_navquery_i = 0, $m_filter_i = 0, $arraydecay51_i = 0, $arraydecay54_i = 0, $arrayidx2_i_i2 = 0, $arrayidx4_i_i = 0, $arraydecay19_i = 0, $arrayidx2_i49_i = 0, $arrayidx4_i51_i = 0, $arraydecay51_i_idx1147 = 0, $arraydecay51_i_idx1148 = 0, $m_includeFlags_i_i_i_i = 0, $m_excludeFlags_i_i_i_i = 0, $i_063_i = 0, $8 = 0, $state_i = 0, $targetState_i = 0, $10 = 0, $targetReplanTime_i = 0, $sub_ptr_sub_i_i = 0, $sub_ptr_div_i_i = 0, $corridor_i = 0, $m_npath_i57_i = 0, $cond_i61_i = 0, $arraydecay11_i = 0, $arrayidx2_i53_i = 0, $arrayidx4_i55_i = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $and10_i_i_i = 0, $and11_i_i_i = 0, $25 = 0, $27 = 0, $30 = 0, $34 = 0.0, $37 = 0, $38 = 0, $tobool_i23_i = 0, $_off_i_i = 0, $52 = 0, $replan_0_off0_i = 0, $53 = 0, $targetRef_i = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $and10_i_i76_i = 0, $and11_i_i77_i = 0, $60 = 0, $62 = 0, $65 = 0, $arraydecay49_i = 0, $72 = 0, $replan_1_off0_i = 0, $73 = 0, $74 = 0, $replan_2_off0_i = 0, $81 = 0, $cmp_i_i8_i = 0, $cond_i_i_i = 0, $83 = 0, $84 = 0, $m_tileBits_i_i_i_i = 0, $m_polyBits_i_i_i_i = 0, $m_maxTiles_i_i_i = 0, $m_saltBits_i_i_i_i = 0, $m_tiles_i_i_i = 0, $i_04_i_i = 0, $85 = 0, $86 = 0, $87 = 0, $and10_i_i_i_i = 0, $and11_i_i_i_i = 0, $90 = 0, $92 = 0, $95 = 0, $inc_i_i = 0, $retval_0_i13_i = 0, $replan_2_off0__i = 0, $98 = 0, $cond_i_i13 = 0, $102 = 0, $103 = 0, $arraydecay100_i = 0, $105 = 0, $inc_i16 = 0, $109 = 0, $m_agents_i22 = 0, $112 = 0, $m_navquery_i23 = 0, $m_filter_i24 = 0, $arraydecay30_i = 0, $arraydecay51_i25 = 0, $arrayidx3_i118_i = 0, $arrayidx5_i120_i = 0, $m_nextHandle_i_i = 0, $nqueue_0143_i = 0, $i_0139_i = 0, $113 = 0, $arrayidx_i27 = 0, $targetState_i34 = 0, $116 = 0, $m_path_i_i36 = 0, $117 = 0, $m_npath_i112_i = 0, $118 = 0, $targetRef_i37 = 0, $arraydecay_i38 = 0, $arraydecay20_i = 0, $124 = 0, $status_0_i = 0, $125 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $and10_i_i_i49 = 0, $and11_i_i_i50 = 0, $134 = 0, $arrayidx_i99_i = 0, $136 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $155 = 0.0, $i_04_i_i88 = 0, $inc_i_i90 = 0, $i_0_lcssa_i_i = 0, $add_i_i92 = 0, $sub13_i_i = 0, $sub14_i_i = 0, $cond_i_i_i94 = 0, $slot_0_i_i = 0, $add25_i_i = 0, $nqueue_1_i = 0, $inc_i99 = 0, $i85_0133_i = 0, $163 = 0, $164 = 0, $cond_i_i106 = 0, $167 = 0, $arraydecay_i_i107 = 0, $arraydecay97_i = 0, $i_019_i_i = 0, $ref_i_i = 0, $inc_i15_i = 0, $169 = 0, $inc7_i_i = 0, $m_queueHead_i_i = 0, $m_navquery_i_i = 0, $m_maxPathSize_i_i = 0, $177 = 0, $iterCount_029_i_i = 0, $i_028_i_i = 0, $rem_i_i = 0, $ref_i25_i = 0, $inc_i28_i = 0, $status_i29_i = 0, $179 = 0, $keepAlive_i31_i = 0, $181 = 0, $inc15_i_i = 0, $call21_i_i = 0, $187 = 0, $call28_i_i = 0, $190 = 0, $iterCount_1_i_i = 0, $call35_i_i = 0, $inc42_i_i = 0, $195 = 0, $iterCount_2_i_i = 0, $196 = 0, $m_agents116_i = 0, $arraydecay162_i = 0, $arrayidx3_i99_i = 0, $arrayidx5_i101_i = 0, $m_pathResult_i = 0, $m_maxPathResult_i = 0, $m_navquery233_i = 0, $arraydecay237_i = 0, $arrayidx2_i_i112 = 0, $arrayidx4_i_i113 = 0, $197 = 0, $i110_0129_i = 0, $198 = 0, $targetState122_i = 0, $targetPathqRef136_i = 0, $201 = 0, $i_04_i43_i = 0, $inc_i45_i = 0, $203 = 0, $m_path_i102_i = 0, $205 = 0, $m_npath_i_i115 = 0, $206 = 0, $210 = 0, $211 = 0, $i_08_i_i = 0, $ref2_i52_i = 0, $inc_i54_i = 0, $213 = 0, $cond_i_i59_i = 0, $214 = 0, $sub175_i = 0, $219 = 0, $cmp187_i = 0, $sub191_i = 0, $add197_i = 0, $nres_i_1 = 0, $222 = 0, $j_0127_i = 0, $sub201_i = 0, $add204_i = 0, $arrayidx208_i = 0, $arrayidx210_i = 0, $sub220_i = 0, $nres_i_2 = 0, $227 = 0, $j_1_i = 0, $inc225_i = 0, $nres_i_3 = 0, $228 = 0, $229 = 0, $232 = 0, $233 = 0, $234 = 0, $and10_i_i110_i = 0, $and11_i_i111_i = 0, $237 = 0, $arrayidx_i122_i = 0, $239 = 0, $245 = 0, $storemerge_i = 0, $251 = 0, $m_navquery_i121 = 0, $m_filter_i122 = 0, $arraydecay16_i_i = 0, $nqueue_020_i = 0, $i_019_i = 0, $255 = 0, $257 = 0, $topologyOptTime_i = 0, $add_i130 = 0.0, $cmp63_i_i135 = 0, $i_04_i_i141 = 0, $inc_i_i144 = 0, $i_0_lcssa_i_i146 = 0, $add_i_i147 = 0, $sub13_i_i148 = 0, $sub14_i_i149 = 0, $cond_i_i_i151 = 0, $slot_0_i_i162 = 0, $add25_i_i164 = 0, $nqueue_1_i168 = 0, $i20_015_i = 0, $266 = 0, $267 = 0, $m_path_i_i173 = 0, $268 = 0, $m_npath_i_i174 = 0, $269 = 0, $cmp_i_i6_i = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $furthestVisited_0_us_i_i_i = 0, $i_0_in_us_i_i_i = 0, $furthestPath_0_us_i_i_i = 0, $i_0_us_i_i_i = 0, $j_038_us_in_i_i_i = 0, $furthestPath_137_us_i_i_i = 0, $found_0_off036_us_i_i_i = 0, $furthestVisited_135_us_i_i_i = 0, $cmp6_us_i_i_i = 0, $279 = 0, $furthestVisited_3_i_i_i = 0, $furthestPath_3_i_i_i = 0, $sub19_i_i_i = 0, $cond_i_i_i_i = 0, $sub22_call_i_i_i = 0, $i28_032_i_i_i = 0, $retval_0_i_i_i184 = 0, $m_grid = 0, $283 = 0, $m_navquery33 = 0, $m_agents_i418 = 0, $arrayidx_i2_i = 0, $m_includeFlags_i_i_i304 = 0, $m_excludeFlags_i_i_i305 = 0, $arraydecay_i_i306 = 0, $arraydecay50_i_i = 0, $arraydecay128_i_i = 0, $arraydecay129_i_i = 0, $arrayidx2_i27_i_i = 0, $arrayidx3_i28_i_i = 0, $arrayidx3_i_i48_i_i_i = 0, $arrayidx3_i_i24_i_i_i = 0, $arraydecay_i384 = 0, $i_0540 = 0, $293 = 0, $294 = 0.0, $295 = 0, $conv = 0, $296 = 0.0, $297 = 0.0, $m_invCellSize_i = 0, $conv_i = 0, $conv5_i = 0, $conv9_i = 0, $conv13_i = 0, $arrayidx_i195 = 0, $302 = 0, $arrayidx18_i = 0, $303 = 0, $arrayidx23_i = 0, $304 = 0, $arrayidx28_i = 0, $305 = 0, $m_poolHead_i198 = 0, $m_bucketsSize_i199 = 0, $m_pool_i = 0, $m_buckets_i200 = 0, $306 = 0, $_pre_i = 0, $y_025_i = 0, $mul1_i_i = 0, $conv43_i = 0, $307 = 0, $x_023_i = 0, $and_i_i203 = 0, $inc_i204 = 0, $idxprom_i = 0, $309 = 0, $arrayidx46_i = 0, $312 = 0, $arrayidx3_i_i488 = 0, $arrayidx5_i2_i = 0, $i9_0538 = 0, $315 = 0, $collisionQueryRange = 0, $317 = 0.0, $mul = 0.0, $arraydecay19 = 0, $arraydecay_i300 = 0, $319 = 0.0, $sub_i388 = 0.0, $arrayidx2_i389 = 0, $arrayidx3_i390 = 0, $321 = 0.0, $sub4_i391 = 0.0, $322 = 0, $323 = 0, $324 = 0, $m_tileBits_i_i_i216 = 0, $m_polyBits_i_i_i219 = 0, $m_maxTiles_i_i225 = 0, $m_saltBits_i_i_i228 = 0, $m_tiles_i_i234 = 0, $i_04_i = 0, $325 = 0, $326 = 0, $327 = 0, $and10_i_i_i223 = 0, $and11_i_i_i224 = 0, $330 = 0, $332 = 0, $335 = 0, $inc_i260 = 0, $340 = 0, $341 = 0, $arraydecay4_i = 0, $m_npolys5_i = 0, $m_nav_i_i275 = 0, $343 = 0, $344 = 0, $345 = 0, $and10_i_i_i_i284 = 0, $and11_i_i_i_i285 = 0, $348 = 0, $350 = 0, $m_tinyNodePool_i_i = 0, $352 = 0, $call3_i_i = 0, $mul_i_i_i303 = 0.0, $nstack_1_lcssa_i_i = 0, $status_1_lcssa_i_i = 0, $n_1_lcssa_i_i = 0, $358 = 0, $nstack_094_i_i = 0, $status_093_i_i = 0, $n_092_i_i = 0, $sub_i4_i = 0, $i_070_i_i = 0, $360 = 0, $361 = 0, $363 = 0, $and10_i_i56_i_i = 0, $364 = 0, $arrayidx_i59_i_i = 0, $arrayidx4_i61_i_i = 0, $firstLink_i_i = 0, $i24_080_i_i = 0, $tobool_i_i_i310 = 0, $sub_ptr_lhs_cast_i_i_i = 0, $links_phi_trans_insert_i_i = 0, $366 = 0, $i24_088_i_i = 0, $nstack_186_i_i = 0, $status_184_i_i = 0, $n_182_i_i = 0, $367 = 0, $call33_i_i = 0, $369 = 0, $370 = 0, $372 = 0, $and10_i_i43_i_i = 0, $and11_i_i44_i_i = 0, $373 = 0, $arrayidx_i46_i_i = 0, $374 = 0, $arrayidx4_i48_i_i = 0, $376 = 0, $380 = 0.0, $sub_i26_i_i = 0.0, $382 = 0.0, $sub4_i_i_i = 0.0, $383 = 0.0, $384 = 0.0, $add_i31_i_i = 0.0, $add14_i_i_i = 0.0, $storemerge_i_i_i = 0.0, $385 = 0.0, $sub25_i_i_i = 0.0, $sub30_i_i_i = 0.0, $bf_set67_i_i = 0, $retval_0_i_i_i318 = 0, $388 = 0, $conv75_i_i = 0, $cmp7771_i_i = 0, $389 = 0, $k_072_i_i = 0, $mul_i11_i = 0, $mul82_i_i = 0, $cmp17_i51_i_i_i = 0, $sub_i_i_i324 = 0, $j_079_i_i = 0, $394 = 0, $k92_073_i_i = 0, $395 = 0, $k92_075_i_i = 0, $k92_0_i_i = 0, $397 = 0, $399 = 0, $and10_i_i21_i_i = 0, $and11_i_i22_i_i = 0, $400 = 0, $401 = 0, $402 = 0, $conv112_i_i = 0, $cmp11576_i_i = 0, $403 = 0, $k113_077_i_i = 0, $mul117_i_i = 0, $mul122_i_i = 0, $408 = 0.0, $409 = 0.0, $410 = 0.0, $411 = 0.0, $cmp17_i81_i_i_i = 0, $i_0217_i_i_i = 0, $j_0216_i_i_i = 0, $mul_i7_i_i = 0, $mul1_i_i_i = 0, $sub5_i_i_i326 = 0.0, $sub10_i_i_i = 0.0, $add_i_i_i_i_i = 0.0, $amax_0_load130_i_i_i = 0.0, $416 = 0.0, $i_018_i_i_i_i = 0, $mul_i_i_i_i = 0, $add_i16_i_i_i_i = 0.0, $cond_i11_i_i_i_i = 0.0, $cond_i_i_i_i_i = 0.0, $inc_i_i_i_i = 0, $amin_0_load131_i_i_i = 0.0, $amax_0_load129_i_i_i = 0.0, $add_i_i80_i_i_i = 0.0, $bmax_0_load127_i_i_i = 0.0, $419 = 0.0, $i_018_i82_i_i_i = 0, $mul_i83_i_i_i = 0, $add_i16_i89_i_i_i = 0.0, $cond_i11_i91_i_i_i = 0.0, $cond_i_i93_i_i_i = 0.0, $inc_i94_i_i_i = 0, $bmin_0_load128_i_i_i = 0.0, $bmax_0_load126_i_i_i = 0.0, $inc_i_i_i329 = 0, $sub14_i_i_i = 0, $422 = 0.0, $423 = 0.0, $424 = 0.0, $425 = 0.0, $cmp17_i27_i_i_i = 0, $amax36_0_load124_us_i_i_i = 0.0, $426 = 0.0, $i_018_i52_us_i_i_i = 0, $mul_i53_us_i_i_i = 0, $add_i16_i59_us_i_i_i = 0.0, $phitmp_i_i_i = 0.0, $phitmp218_i_i_i = 0.0, $add_i_i26_us_i_i_i = 0.0, $bmax38_0_load121_us_i_i_i = 0.0, $429 = 0.0, $i_018_i28_us_i_i_i = 0, $mul_i29_us_i_i_i = 0, $add_i16_i35_us_i_i_i = 0.0, $cond_i11_i37_us_i_i_i = 0.0, $cond_i_i39_us_i_i_i = 0.0, $inc_i40_us_i_i_i = 0, $bmin37_0_load122_us_i_i_i = 0.0, $bmax38_0_load120_us_i_i_i = 0.0, $inc45_us_i_i_i = 0, $j13_0137_us_i_i_i = 0, $i12_0136_us_i_i_i = 0, $mul19_us_i_i_i = 0, $mul22_us_i_i_i = 0, $sub28_us_i_i_i = 0.0, $sub34_us_i_i_i = 0.0, $add_i_i50_us_i_i_i = 0.0, $bmax38_0_load121_us182_i_i_i = 0.0, $436 = 0.0, $i_018_i28_us183_i_i_i = 0, $mul_i29_us184_i_i_i = 0, $add_i16_i35_us190_i_i_i = 0.0, $inc45_us205_i_i_i = 0, $j13_0137_us139_i_i_i = 0, $i12_0136_us140_i_i_i = 0, $mul19_us141_i_i_i = 0, $mul22_us143_i_i_i = 0, $sub28_us149_i_i_i = 0.0, $sub34_us151_i_i_i = 0.0, $add_i_i50_us154_i_i_i = 0.0, $add_i_i26_us180_i_i_i = 0.0, $j13_0137_i_i_i = 0, $i12_0136_i_i_i = 0, $mul19_i_i_i = 0, $mul22_i_i_i = 0, $sub28_i_i_i = 0.0, $sub34_i_i_i = 0.0, $add_i_i50_i_i_i = 0.0, $add_i_i26_i_i_i = 0.0, $inc45_i_i_i = 0, $n_2_i_i = 0, $status_2_i_i = 0, $n_3_i_i = 0, $status_3_i_i = 0, $nstack_2_i_i = 0, $447 = 0, $i24_0_i_i = 0, $m_nsegs6_i = 0, $mul_i15_i = 0.0, $arrayidx_i_i331 = 0, $j_019_i = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $and10_i_i_i21_i = 0, $and11_i_i_i22_i = 0, $455 = 0, $arrayidx_i_i32_i = 0, $salt4_i_i33_i = 0, $457 = 0, $459 = 0, $vertCount_i45_i = 0, $460 = 0, $verts54_i_i = 0, $polys_i_i343 = 0, $tobool_i4_i_i = 0, $sub_ptr_lhs_cast_i_i61_i = 0, $firstLink_i53_i = 0, $links_phi_trans_insert_i55_i = 0, $n_0229_i_i = 0, $status_0228_i_i = 0, $i_0227_i_i = 0, $j_0226_i_i = 0, $461 = 0, $conv6_i_i = 0, $k_0214_i_i = 0, $462 = 0, $k_0216_i_i = 0, $463 = 0, $465 = 0, $466 = 0, $468 = 0, $471 = 0, $conv23_i_i = 0, $conv24_i_i = 0, $idx_02_i151_i_i = 0, $inc_i154_i_i = 0, $idx_0_lcssa_i156_i_i = 0, $_pre1261 = 0, $479 = 0, $480 = 0, $sub38_i_i = 0, $482 = 0, $484 = 0, $487 = 0, $retval_0_i11_i_i = 0, $mul_i67_i = 0, $491 = 0, $mul59_i_i = 0, $mul62_i_i = 0, $idx_02_i119_i_i = 0, $inc_i122_i_i = 0, $idx_0_lcssa_i124_i_i = 0, $idx_0_lcssa_i124240_i_i = 0, $_lcssa235237239_i_i = 0, $inc18_i136_i_i = 0, $idx_02_i_i_i = 0, $inc_i_i71_i = 0, $idx_0_lcssa_i_i_i = 0, $505 = 0, $mul79_i_i = 0, $507 = 0, $arrayidx81_i_i = 0, $mul86_i_i = 0, $arrayidx88_i_i = 0, $arrayidx4_i99_i_i = 0, $arrayidx5_i100_i_i = 0, $arrayidx11_i105_i_i = 0, $arrayidx12_i106_i_i = 0, $n_1220_i_i = 0, $status_1219_i_i = 0, $k89_0218_i_i = 0, $509 = 0, $510 = 0, $div140_i_i = 0.0, $div137_i_i = 0.0, $mul144_i_i = 0, $511 = 0.0, $sub_i66_i_i = 0.0, $513 = 0.0, $sub7_i71_i_i = 0.0, $515 = 0.0, $sub14_i77_i_i = 0.0, $status_3_i80_i = 0, $n_3_i81_i = 0, $inc158_i_i = 0, $status_4_i_i = 0, $n_4_i_i = 0, $inc161_i_i = 0, $n_0_lcssa_i_i = 0, $k_017_i = 0, $mul_i346 = 0, $arrayidx14_i = 0, $519 = 0.0, $sub_i82_i = 0.0, $521 = 0.0, $sub4_i_i347 = 0.0, $522 = 0.0, $523 = 0.0, $add_i86_i = 0.0, $add14_i_i = 0.0, $storemerge_i_i = 0.0, $524 = 0.0, $sub25_i_i = 0.0, $sub30_i_i = 0.0, $add33_i_i = 0.0, $525 = 0, $i_015_i_i = 0, $inc_i_i365 = 0, $i_0_lcssa_i_i367 = 0, $add_i_i368 = 0, $sub22_i_i = 0, $sub23_i_i = 0, $cond_i_i_i370 = 0, $arrayidx31_i_i = 0, $seg_0_i_i = 0, $530 = 0, $531 = 0, $532 = 0, $534 = 0.0, $535 = 0.0, $536 = 0.0, $537 = 0.0, $538 = 0, $m_invCellSize_i_i = 0, $conv_i_i386 = 0, $conv5_i_i = 0, $conv9_i_i = 0, $conv13_i_i = 0, $m_pool_i_i = 0, $_pre_i_i389_pre = 0, $_pre41_i_i_pre = 0, $y_037_us_i_i = 0, $n_038_i_i = 0, $y_037_i_i = 0, $mul1_i_i_i388 = 0, $sub_i_i_i391 = 0, $n_132_i_i = 0, $x_031_i_i = 0, $arrayidx_i_i393 = 0, $idx_025_i_i = 0, $idx_028_i_i = 0, $n_227_i_i = 0, $conv18_i_i = 0, $543 = 0, $arrayidx20_i3_i = 0, $add_ptr_i_i = 0, $_pre1267 = 0, $i_023_i_i = 0, $547 = 0, $n_3_i_i400 = 0, $idx_0_i_i = 0, $n_2_lcssa_i_i = 0, $retval_0_i_i4071165 = 0, $arrayidx3_i_i408 = 0, $mul_i4_i = 0.0, $n_09_i = 0, $i_08_i410 = 0, $arrayidx6_i411 = 0, $549 = 0, $sub_i_i415 = 0.0, $sub9_i_i418 = 0.0, $call12_i419 = 0.0, $add8_i_i = 0.0, $conv_i423 = 0, $i_04_i_i431 = 0, $inc_i_i432 = 0, $i_0_lcssa_i_i434 = 0, $add_i_i435 = 0, $sub14_i_i436 = 0, $sub15_i_i = 0, $cond_i_i_i438 = 0, $nneis_pn_i_i = 0, $nei_0_i_i = 0, $562 = 0, $add28_i_i448 = 0, $n_1_i451 = 0, $nneis = 0, $sub_ptr_rhs_cast_i420 = 0, $j_0536 = 0, $idx = 0, $inc59 = 0, $m_agentAnims = 0, $i61_0534 = 0, $567 = 0, $569 = 0, $arraydecay81 = 0, $arraydecay82 = 0, $arraydecay83 = 0, $570 = 0, $m_path_i456 = 0, $571 = 0, $m_npath_i459 = 0, $572 = 0, $arraydecay_i462 = 0, $arrayidx2_i_i463 = 0, $arrayidx3_i_i464 = 0, $add_ptr_i465 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $sub_i_i468 = 0.0, $sub4_i_i469 = 0.0, $dec_i = 0, $i_0_i = 0, $add_i478 = 0, $585 = 0, $sub93 = 0, $mul95 = 0, $587 = 0.0, $588 = 0, $590 = 0.0, $591 = 0.0, $592 = 0.0, $sub_i12_i = 0.0, $sub4_i_i491 = 0.0, $call_i1_i = 0.0, $add_i495 = 0.0, $595 = 0.0, $596 = 0.0, $597 = 0.0, $div_i501 = 0.0, $add_i5_i503 = 0.0, $add11_i_i = 0.0, $599 = 0, $m_nav_i_i506 = 0, $600 = 0, $601 = 0, $602 = 0, $and10_i_i_i_i516 = 0, $and11_i_i_i_i517 = 0, $605 = 0, $607 = 0, $609 = 0, $610 = 0, $611 = 0, $t_i_0 = 0.0, $status_0_i_i = 0, $n_0_i_i = 0, $curRef_0_i_i = 0, $and10_i_i10_i_i = 0, $and11_i_i11_i_i = 0, $612 = 0, $613 = 0, $614 = 0, $conv_i_i547 = 0, $615 = 0, $nv_097_i_i = 0, $mul_i3_i = 0, $mul13_i_i551 = 0, $620 = 0.0, $sub_i_i27_i_i = 0.0, $621 = 0.0, $sub9_i_i_i_i = 0.0, $sub9_i_i_i_i1293 = 0.0, $622 = 0.0, $sub_i_i27_i_i1292 = 0.0, $623 = 0.0, $nv_0_lcssa_i_i1291 = 0, $tmin_i_i_0 = 0.0, $tmax_i_i_0 = 0.0, $segMax_i_i_0 = 0, $624 = 0.0, $625 = 0.0, $i_053_i_i_i = 0, $j_052_i_i_i = 0, $mul_i28_i_i = 0, $mul2_i_i_i = 0, $627 = 0.0, $sub_i40_i_i_i = 0.0, $629 = 0.0, $sub9_i47_i_i_i = 0.0, $sub_i30_i_i_i = 0.0, $sub_i25_i_i_i = 0.0, $div_i33_i_i = 0.0, $tmin_i_i_1 = 0.0, $tmax_i_i_1 = 0.0, $segMax_i_i_1 = 0, $inc_i_i_i568 = 0, $nv_0_lcssa_i_i1286 = 0, $tmax_i_i_2 = 0.0, $segMax_i_i_2 = 0, $t_i_1 = 0.0, $status_1_i_i = 0, $n_1_i_i = 0, $i37_098_i_i = 0, $_pre155_i_i = 0, $vertCount74_i_i = 0, $verts80_i_i614 = 0, $i37_0100_i_i = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $and11_i_i22_i_i593 = 0, $635 = 0, $636 = 0, $638 = 0, $641 = 0, $642 = 0, $mul79_i_i613 = 0, $647 = 0, $arrayidx81_i_i615 = 0, $mul82_i_i616 = 0, $arrayidx84_i_i617 = 0, $649 = 0.0, $sub_i8_i = 0.0, $add101_i_i = 0.0, $add111_i_i = 0.0, $cmp112_i_i = 0, $651 = 0.0, $add120_i_i = 0.0, $653 = 0.0, $sub141_i_i = 0.0, $add147_i_i = 0.0, $add158_i_i = 0.0, $cmp159_i_i = 0, $655 = 0.0, $add167_i_i = 0.0, $i37_0_i_i = 0, $add182_i_i = 0, $cond_i10_i = 0, $mul185_i_i = 0, $sub191_i_i = 0.0, $sub194_i_i = 0.0, $div_i_i_i624 = 0.0, $t_i_2 = 0.0, $nres_i482_0 = 0, $663 = 0, $664 = 0, $665 = 0, $furthestVisited_0_us_i_i = 0, $i_0_in_us_i_i = 0, $furthestPath_0_us_i_i = 0, $i_0_us_i_i = 0, $j_038_us_in_i_i = 0, $furthestPath_137_us_i_i = 0, $found_0_off036_us_i_i = 0, $furthestVisited_135_us_i_i = 0, $cmp6_us_i_i = 0, $667 = 0, $furthestVisited_3_i_i = 0, $furthestPath_3_i_i = 0, $sub19_i_i = 0, $cond_i_i_i635 = 0, $sub22_call_i_i = 0, $i28_032_i_i = 0, $retval_0_i_i641 = 0, $inc104 = 0, $i106_0532 = 0, $671 = 0, $state112 = 0, $673 = 0, $mul128 = 0.0, $ncorners_i441 = 0, $675 = 0, $sub_i443 = 0, $arraydecay_i448 = 0, $mul_i449 = 0, $sub_i_i451 = 0.0, $arrayidx3_i_i454 = 0, $sub4_i_i455 = 0.0, $sub_ptr_div = 0, $682 = 0, $683 = 0, $arraydecay139 = 0, $arraydecay140 = 0, $684 = 0, $685 = 0, $m_npath_i648 = 0, $686 = 0, $polyRef_021_i = 0, $polyRef_0_i = 0, $polyRef_026_i = 0, $npos_025_i = 0, $polyRef_0_pre_i = 0, $polyRef_0_lcssa_i = 0, $687 = 0, $npos_0_lcssa_i = 0, $i_019_i655 = 0, $inc21_i658 = 0, $689 = 0, $_lcssa_i = 0, $690 = 0, $691 = 0, $692 = 0, $and10_i_i_i671 = 0, $and11_i_i_i672 = 0, $695 = 0, $697 = 0, $699 = 0, $i_020_i_i = 0, $701 = 0, $i_022_i_i = 0, $704 = 0, $i_0_i_i = 0, $idx0_0_i_i = 0, $idx1_0_i_i = 0, $mul_i_i706 = 0, $706 = 0, $arrayidx5_i16_i_i710 = 0, $mul41_i_i = 0, $711 = 0.0, $arrayidx3_i_i_i712 = 0, $arrayidx5_i_i_i714 = 0, $sub_i427 = 0.0, $sub4_i430 = 0.0, $call_i725 = 0.0, $inc161 = 0, $m_obstacleQuery = 0, $arrayidx16_i = 0, $arrayidx19_i = 0, $dvel_sroa_0_0 = 0.0, $dvel_sroa_12_0 = 0.0, $dvel_sroa_23_0 = 0.0, $i163_0530 = 0, $725 = 0, $727 = 0, $728 = 0.0, $729 = 0.0, $730 = 0.0, $call_i726 = 0.0, $updateFlags190 = 0, $ncorners_i395 = 0, $732 = 0, $tobool_i396 = 0, $sub_i732 = 0, $mul_i735 = 0, $734 = 0.0, $sub_i_i738 = 0.0, $736 = 0.0, $sub9_i_i740 = 0.0, $sub_i30_i = 0.0, $sub9_i37_i = 0.0, $call_i1_i741 = 0.0, $call_i2_i = 0.0, $div_i748 = 0.0, $dir1_sroa_10_8_load47_i = 0.0, $dir1_sroa_0_0_load46_i = 0.0, $sub22_i = 0.0, $sub29_i = 0.0, $div_i_i755 = 0.0, $sub_i_i400 = 0.0, $sub9_i_i = 0.0, $div_i_i = 0.0, $dvel_sroa_0_2 = 0.0, $dvel_sroa_12_2 = 0.0, $dvel_sroa_23_2 = 0.0, $ncorners_i_pre_phi = 0, $mul201 = 0.0, $744 = 0, $sub_i381 = 0, $mul_i384 = 0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $call_i760 = 0.0, $retval_0_i = 0.0, $750 = 0.0, $mul210 = 0.0, $dvel_sroa_0_3 = 0.0, $dvel_sroa_12_3 = 0.0, $dvel_sroa_23_3 = 0.0, $updateFlags213_pre_phi = 0, $752 = 0.0, $div220 = 0.0, $753 = 0.0, $nneis225 = 0, $754 = 0, $arraydecay235 = 0, $arrayidx7_i369 = 0, $mul_i356 = 0.0, $755 = 0, $w_0521 = 0.0, $j223_0520 = 0, $disp_sroa_7_0_oldload482519 = 0.0, $disp_sroa_4_0_load484518 = 0.0, $disp_sroa_0_0_load473489517 = 0.0, $756 = 0, $757 = 0, $sub_i364 = 0.0, $sub9_i371 = 0.0, $add8_i363 = 0.0, $call248 = 0.0, $mul249 = 0.0, $div256 = 0.0, $762 = 0, $disp_sroa_0_0_load473488 = 0.0, $disp_sroa_4_0_load483 = 0.0, $disp_sroa_7_0_oldload481 = 0.0, $w_1 = 0.0, $div266 = 0.0, $add_i332 = 0.0, $add6_i336 = 0.0, $add11_i341 = 0.0, $add8_i330 = 0.0, $763 = 0.0, $mul_i323 = 0.0, $div275 = 0.0, $dvel_sroa_0_4 = 0.0, $dvel_sroa_12_4 = 0.0, $dvel_sroa_23_4 = 0.0, $dvel_sroa_0_5 = 0.0, $dvel_sroa_12_5 = 0.0, $dvel_sroa_23_5 = 0.0, $i285_0515 = 0, $764 = 0, $767 = 0, $m_ncircles_i = 0, $m_nsegments_i = 0, $768 = 0, $769 = 0, $770 = 0, $m_circles_i = 0, $771 = 0, $j302_0511 = 0, $772 = 0, $773 = 0.0, $inc_i763 = 0, $774 = 0, $784 = 0, $inc322 = 0, $785 = 0, $786 = 0, $arraydecay333 = 0, $arrayidx3_i307 = 0, $787 = 0, $j324_0513 = 0, $add_ptr = 0, $788 = 0.0, $789 = 0.0, $arrayidx2_i306 = 0, $791 = 0.0, $arrayidx8_i309 = 0, $inc_i773 = 0, $795 = 0, $801 = 0, $inc341 = 0, $802 = 0, $arraydecay358 = 0, $arraydecay357 = 0, $arraydecay355 = 0, $804 = 0.0, $805 = 0.0, $arrayidx345 = 0, $m_circles_i_i = 0, $arrayidx4_i_i_i781 = 0, $arrayidx8_i_i_i782 = 0, $arrayidx8_i26_i_i = 0, $806 = 0, $807 = 0, $808 = 0.0, $809 = 0.0, $i_035_i_i = 0, $810 = 0, $arraydecay2_i_i786 = 0, $sub_i_i_i787 = 0.0, $sub5_i_i_i789 = 0.0, $arrayidx6_i_i_i = 0, $sub9_i_i_i790 = 0.0, $arrayidx10_i_i_i791 = 0, $div_i_i_i797 = 0.0, $mul_i30_i_i798 = 0.0, $mul11_i31_i_i = 0.0, $i28_033_i_i = 0, $826 = 0.0, $sub_i1_i_i = 0.0, $828 = 0.0, $sub4_i_i_i812 = 0.0, $add_i6_i_i = 0.0, $add14_i_i_i817 = 0.0, $storemerge_i_i_i821 = 0.0, $829 = 0.0, $sub25_i_i_i830 = 0.0, $sub30_i_i_i833 = 0.0, $830 = 0, $831 = 0, $horizTime_i = 0, $m_invHorizTime_i = 0, $m_invVmax_i = 0, $arrayidx1_i_i841 = 0, $arrayidx2_i_i842 = 0, $833 = 0, $conv_i843 = 0, $834 = 0, $835 = 0, $conv8_i = 0, $cond5_i60_i = 0, $cond5_i_i848 = 0, $mul12_i = 0.0, $arrayidx_i850 = 0, $call14_i = 0.0, $conv21_i = 0.0, $838 = 0, $inc44_us_i = 0, $npat_196_us_i = 0, $i_095_us_i = 0, $a_094_us_i = 0.0, $mul31_us_i = 0.0, $mul32_us_i = 0, $mul36_us_i = 0.0, $npat_0100_us_i = 0, $j_099_us_i = 0, $div22_us_i = 0.0, $npat_0_lcssa_i = 0, $839 = 0.0, $mul52_i = 0.0, $mul56_i = 0.0, $add85_i = 0.0, $mul_i_i852 = 0.0, $m_circles_i3_i = 0, $arrayidx8_i_i4_i = 0, $pos_idx33_i_i = 0, $m_segments_i7_i = 0, $weightDesVel_i_i = 0, $weightCurVel_i_i = 0, $weightSide_i_i = 0, $weightToi_i_i = 0, $inc106_us_i = 0, $i61_079_us_i = 0, $minPenalty_078_us_i = 0.0, $ns_177_us_i = 0, $bvel_sroa_0_0_load6576_us_i = 0.0, $bvel_sroa_6_8_load6974_us_i = 0.0, $mul66_us_i = 0, $add70_us_i = 0.0, $add78_us_i = 0.0, $844 = 0.0, $845 = 0, $tmin_0_lcssa_i_i = 0.0, $side_0_lcssa_i_i = 0.0, $nside_0_lcssa_i_i = 0, $847 = 0, $tmin_0121_i_i = 0.0, $side_0120_i_i = 0.0, $nside_0119_i_i = 0, $848 = 0, $sub_i46_i_i = 0.0, $sub9_i53_i_i = 0.0, $add_i_i854 = 0.0, $mul13_i_i855 = 0.0, $cond_i_i_i856 = 0.0, $cond5_i_i_i = 0.0, $add16_i_i858 = 0.0, $inc_i14_i = 0, $sub_i_i87_i_i = 0.0, $sub9_i_i88_i_i = 0.0, $add_i89_i_i = 0.0, $add_i18_i_i_i = 0.0, $add_i_i_i_i859 = 0.0, $sub8_i_i_i = 0.0, $div_i97_i_i = 0.0, $call_i1_i_i = 0.0, $mul14_i_i_i = 0.0, $858 = 0.0, $859 = 0, $tmin_1_i_i = 0.0, $tmin_2116_i_i = 0.0, $i33_0115_i_i = 0, $860 = 0, $arrayidx37_i_i867 = 0, $arraydecay56_val_i_i = 0.0, $arraydecay56_idx38_val_i_i = 0.0, $sub_i_i_i_i869 = 0.0, $sub9_i_i_i_i870 = 0.0, $sub_i22_i_i_i = 0.0, $sub9_i29_i_i_i = 0.0, $sub_i21_i_i_i = 0.0, $div_i_i20_i = 0.0, $mul_i67_i_i871 = 0.0, $mul13_i_i23_i = 0.0, $867 = 0.0, $mul64_i_i = 0.0, $tmin_3_i_i = 0.0, $inc69_i_i = 0, $tmin_2_lcssa_i_i = 0.0, $side_1_i_i = 0.0, $sub_i55_i_i = 0.0, $sub4_i58_i_i = 0.0, $call_i2_i_i = 0.0, $sub_i42_i_i = 0.0, $sub4_i_i24_i = 0.0, $call_i3_i_i = 0.0, $add92_i_i = 0.0, $inc93_us_i = 0, $bvel_sroa_6_8_load68_us_i = 0.0, $bvel_sroa_0_0_load64_us_i = 0.0, $ns_2_us_i = 0, $minPenalty_1_us_i = 0.0, $k_088_us_i = 0, $ns_087_us_i = 0, $cr_086_us_i = 0.0, $res_sroa_0_0_load7085_us_i = 0.0, $res_sroa_7_8_load7284_us_i = 0.0, $ns_0_lcssa_i = 0, $res_sroa_0_0_load70_lcssa_i = 0.0, $res_sroa_7_8_load72_lcssa_i = 0.0, $inc384 = 0, $m_agents_i295 = 0, $i386_0509 = 0, $884 = 0, $mul_i883 = 0.0, $arraydecay2_i884 = 0, $sub_i_i885 = 0.0, $arrayidx4_i_i887 = 0, $sub5_i_i888 = 0.0, $arrayidx8_i_i890 = 0, $sub9_i_i891 = 0.0, $call_i1_i892 = 0.0, $div_i894 = 0.0, $sub9_i47_i = 0.0, $sub5_i46_i = 0.0, $sub_i45_i = 0.0, $add_i32_i = 0.0, $add5_i_i898 = 0.0, $add9_i_i = 0.0, $arraydecay16_i = 0, $arrayidx3_i12_i = 0, $arrayidx8_i15_i = 0, $iter_0507 = 0, $m_navquery537 = 0, $arraydecay6_i = 0, $arrayidx19_i1129 = 0, $arrayidx4_i_i1130 = 0, $arrayidx_i_i967 = 0, $arraydecay8_i_i970 = 0, $arrayidx10_i136_i_i = 0, $arrayidx17_i142_i_i = 0, $m_includeFlags_i_i_i973 = 0, $m_excludeFlags_i_i_i974 = 0, $arrayidx94_i_i975 = 0, $i403_0504 = 0, $907 = 0, $908 = 0, $sub_ptr_sub_i298 = 0, $arraydecay416 = 0, $arrayidx1_i293 = 0, $arrayidx2_i294 = 0, $nneis420 = 0, $910 = 0, $arraydecay433 = 0, $arrayidx7_i289 = 0, $radius441 = 0, $arrayidx462 = 0, $arrayidx465 = 0, $911 = 0, $912 = 0, $913 = 0.0, $914 = 0.0, $915 = 0.0, $j418_0502 = 0, $w417_0501 = 0.0, $916 = 0, $arrayidx428_idx = 0, $sub_i285 = 0.0, $sub9_i = 0.0, $add8_i = 0.0, $radius443 = 0, $add444 = 0.0, $call449 = 0.0, $923 = 0.0, $diff430_sroa_11_8_load477 = 0.0, $diff430_sroa_0_0_load475 = 0.0, $pen_0 = 0.0, $add_i270 = 0.0, $add6_i = 0.0, $add11_i = 0.0, $931 = 0, $932 = 0.0, $933 = 0.0, $934 = 0.0, $w417_1 = 0.0, $inc487 = 0, $div491 = 0.0, $inc498 = 0, $i500_0506 = 0, $935 = 0, $arraydecay512 = 0, $arrayidx3_i259 = 0, $arrayidx7_i = 0, $943 = 0, $944 = 0, $i523_0499 = 0, $945 = 0, $arraydecay536 = 0, $947 = 0, $m_path_i918 = 0, $948 = 0, $m_npath_i921 = 0, $950 = 0, $arraydecay_i925 = 0, $m_nav_i_i929 = 0, $951 = 0, $952 = 0, $953 = 0, $and10_i_i_i_i939 = 0, $and11_i_i_i_i940 = 0, $956 = 0, $958 = 0, $m_tinyNodePool_i_i961 = 0, $960 = 0, $call5_i_i = 0, $966 = 0.0, $967 = 0.0, $968 = 0.0, $sub_i128_i_i = 0.0, $arrayidx5_i132_i_i = 0, $sub7_i133_i_i = 0.0, $arrayidx12_i138_i_i = 0, $sub14_i139_i_i = 0.0, $add_i1_i = 0.0, $mul_i119_i_i = 0.0, $nstack_1_lcssa_i_i977 = 0, $bestDist_1_lcssa_i_i = 0.0, $bestNode_1_lcssa_i_i = 0, $_lcssa169_i_i = 0.0, $_lcssa168_i_i = 0.0, $_lcssa_i_i = 0.0, $972 = 0, $nstack_0198_i_i = 0, $bestDist_0197_i_i = 0.0, $bestNode_0196_i_i = 0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $sub_i_i981 = 0, $i_0156_i_i = 0, $977 = 0, $978 = 0, $980 = 0, $and10_i_i89_i_i = 0, $and11_i_i90_i_i = 0, $981 = 0, $arrayidx_i92_i_i = 0, $982 = 0, $983 = 0, $conv_i_i988 = 0, $cmp21157_i_i = 0, $984 = 0, $i19_0158_i_i = 0, $mul_i2_i990 = 0, $mul27_i_i991 = 0, $989 = 0.0, $i_021_i_i_i = 0, $j_020_i_i_i = 0, $c_0_off019_i_i_i = 0, $mul_i71_i_i = 0, $mul1_i_i_i996 = 0, $990 = 0.0, $991 = 0.0, $994 = 0.0, $c_1_off0_i_i_i = 0, $inc_i_i_i1002 = 0, $vertCount39_i_i = 0, $tobool_i88_i_i = 0, $sub_ptr_lhs_cast_i90_i_i = 0, $tobool_i45_i_i = 0, $polys_i_i1023 = 0, $sub_ptr_lhs_cast_i47_i_i = 0, $salt_i_i_i1019 = 0, $firstLink_i_i1007 = 0, $links_phi_trans_insert_i_i1009 = 0, $997 = 0, $nstack_1180_i_i = 0, $bestDist_1178_i_i = 0.0, $bestNode_1176_i_i = 0, $i38_0175_i_i = 0, $j_0173_i_i = 0, $998 = 0.0, $999 = 0.0, $1000 = 0.0, $1001 = 0, $conv49_i_i = 0, $k_0159_i_i = 0, $_pre206_i_i = 0, $k_0162_i_i = 0, $nneis_0161_i_i = 0, $1003 = 0, $1004 = 0, $1006 = 0, $1009 = 0, $nneis_1_i_i = 0, $sub86_i_i = 0, $1012 = 0, $1015 = 0, $retval_0_i56_i_i = 0, $or_i_i1022 = 0, $1018 = 0, $nneis_2148_ph208_i_i = 0, $mul127_i_i = 0, $arrayidx128_i_i = 0, $mul130_i_i = 0, $arrayidx131_i_i = 0, $arrayidx2_i5_i_i = 0, $arrayidx3_i_i_i1041 = 0, $mul100_i_i1030 = 0, $mul102_i_i = 0, $1022 = 0.0, $sub_i12_i_i = 0.0, $1024 = 0.0, $sub4_i15_i_i = 0.0, $1025 = 0.0, $1026 = 0.0, $add_i21_i_i = 0.0, $add14_i24_i_i = 0.0, $storemerge_i28_i_i = 0.0, $tseg_i_i917_0 = 0.0, $sub25_i37_i_i = 0.0, $sub30_i40_i_i = 0.0, $add33_i43_i_i = 0.0, $1027 = 0.0, $nstack_2166_i_i = 0, $k110_0165_i_i = 0, $call116_i_i = 0, $1031 = 0, $bf_load121_i_i = 0, $1033 = 0.0, $sub_i4_i_i = 0.0, $1035 = 0.0, $sub4_i_i_i1042 = 0.0, $1036 = 0.0, $1037 = 0.0, $add_i8_i_i = 0.0, $add14_i_i_i1049 = 0.0, $storemerge_i_i_i1052 = 0.0, $1038 = 0.0, $sub25_i_i_i1061 = 0.0, $sub30_i_i_i1064 = 0.0, $retval_0_i96_i_i = 0, $nstack_3_i_i = 0, $1041 = 0, $1042 = 0.0, $1043 = 0.0, $1044 = 0.0, $bestNode_2_i_i = 0, $bestDist_2_i_i = 0.0, $nstack_4_i_i = 0, $inc163_i_i = 0, $1045 = 0.0, $1046 = 0.0, $1047 = 0.0, $bestNode_3_i_i = 0, $prev_0_i_i = 0, $node_0_i_i = 0, $1048 = 0, $bf_load170_i_i = 0, $bf_clear171_i_i = 0, $retval_0_i86_i_i = 0, $retval_0_i80_i_i = 0, $n_0_i_i1081 = 0, $node_1_i_i = 0, $inc183_i_i = 0, $bf_clear192_i_i = 0, $arrayidx_i_i_i1085 = 0, $n_1_i_i1086 = 0, $nvisited_i_0 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $furthestVisited_0_us_i_i1088 = 0, $i_0_in_us_i_i1089 = 0, $furthestPath_0_us_i_i1090 = 0, $i_0_us_i_i1091 = 0, $j_040_us_in_i_i = 0, $furthestPath_139_us_i_i = 0, $found_0_off038_us_i_i = 0, $furthestVisited_137_us_i_i = 0, $cmp6_us_i_i1096 = 0, $1061 = 0, $furthestVisited_3_i_i1104 = 0, $furthestPath_3_i_i1105 = 0, $sub16_i_i = 0, $add_i_i1110 = 0, $cond_i_i_i1112 = 0, $sub17_i_i = 0, $cond_i32_i_i = 0, $sub22_call18_i_i = 0, $sub32_i_i = 0, $i28_034_i_i = 0, $1065 = 0, $retval_0_i_i1127 = 0, $arrayidx14_i1128 = 0, $1069 = 0.0, $arrayidx5_i_i1131 = 0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0, $_pre1259 = 0, $cond_i = 0, $i560_0495 = 0, $active568 = 0, $1079 = 0, $t574 = 0, $add575 = 0.0, $1081 = 0.0, $mul584 = 0.0, $div_i247 = 0.0, $cond5_i_i252 = 0.0, $1082 = 0.0, $1084 = 0.0, $1086 = 0.0, $div_i = 0.0, $cond5_i_i = 0.0, $1088 = 0.0, $1090 = 0.0, $1092 = 0.0, label = 0, sp = 0, $i_070_i_i$looptemp = 0, $i_023_i_i$looptemp = 0, $i_0156_i_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2352 | 0;
 $neis_i_i = sp | 0;
 $visited_i = sp + 32 | 0;
 $h_i = sp + 96 | 0;
 $pat_i = sp + 104 | 0;
 $ncorners_i = sp + 1136 | 0;
 $ids_i = sp + 1144 | 0;
 $ints_i_i = sp + 1208 | 0;
 $stack_i_i = sp + 1336 | 0;
 $pa_i_i = sp + 1528 | 0;
 $pb_i_i = sp + 1600 | 0;
 $segs_i = sp + 1672 | 0;
 $nres_i_i = sp + 2104 | 0;
 $queue_i120 = sp + 2112 | 0;
 $iters_i_i = sp + 2120 | 0;
 $queue_i = sp + 2128 | 0;
 $reqPath_i = sp + 2160 | 0;
 $reqPathCount_i = sp + 2288 | 0;
 $agentPos_i = sp + 2296 | 0;
 $agentRef_i = sp + 2312 | 0;
 $nearest_i = sp + 2320 | 0;
 $nearest47_i = sp + 2336 | 0;
 $m_velocitySampleCount = $this + 996 | 0;
 HEAP32[$m_velocitySampleCount >> 2] = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 $m_maxAgents = $this | 0;
 $1 = HEAP32[$m_maxAgents >> 2] | 0;
 if (($1 | 0) > 0) {
  $m_agents_i = $this + 4 | 0;
  $n_07_i = 0;
  $i_08_i = 0;
  while (1) {
   $arrayidx_i = (HEAP32[$m_agents_i >> 2] | 0) + ($i_08_i * 608 | 0) | 0;
   if ((HEAP8[$arrayidx_i >> 0] | 0) != 0 & ($n_07_i | 0) < ($1 | 0)) {
    HEAP32[$0 + ($n_07_i << 2) >> 2] = $arrayidx_i;
    $n_1_i = $n_07_i + 1 | 0;
   } else {
    $n_1_i = $n_07_i;
   }
   $inc8_i = $i_08_i + 1 | 0;
   if (($inc8_i | 0) < ($1 | 0)) {
    $n_07_i = $n_1_i;
    $i_08_i = $inc8_i;
   } else {
    $n_0_lcssa_i = $n_1_i;
    break;
   }
  }
 } else {
  $n_0_lcssa_i = 0;
 }
 $cmp62_i = ($n_0_lcssa_i | 0) > 0;
 do {
  if ($cmp62_i) {
   $m_agents_i_i = $this + 4 | 0;
   $arraydecay_i1 = $agentPos_i | 0;
   $arrayidx3_i54_i = $agentPos_i + 4 | 0;
   $arrayidx5_i56_i = $agentPos_i + 8 | 0;
   $m_navquery_i = $this + 1e3 | 0;
   $m_filter_i = $this + 732 | 0;
   $arraydecay51_i = $this + 720 | 0;
   $arraydecay54_i = $nearest47_i | 0;
   $arrayidx2_i_i2 = $nearest47_i + 4 | 0;
   $arrayidx4_i_i = $nearest47_i + 8 | 0;
   $arraydecay19_i = $nearest_i | 0;
   $arrayidx2_i49_i = $nearest_i + 4 | 0;
   $arrayidx4_i51_i = $nearest_i + 8 | 0;
   $arraydecay51_i_idx1147 = $this + 724 | 0;
   $arraydecay51_i_idx1148 = $this + 728 | 0;
   $m_includeFlags_i_i_i_i = $this + 988 | 0;
   $m_excludeFlags_i_i_i_i = $this + 990 | 0;
   $i_063_i = 0;
   L11 : while (1) {
    $8 = HEAP32[$0 + ($i_063_i << 2) >> 2] | 0;
    $state_i = $8 + 1 | 0;
    do {
     if ((HEAP8[$state_i >> 0] | 0) == 1) {
      $targetState_i = $8 + 576 | 0;
      $10 = HEAP8[$targetState_i >> 0] | 0;
      if (!(($10 << 24 >> 24 | 0) == 0 | ($10 << 24 >> 24 | 0) == 6)) {
       $targetReplanTime_i = $8 + 604 | 0;
       HEAPF32[$targetReplanTime_i >> 2] = +HEAPF32[$targetReplanTime_i >> 2] + $dt;
       $sub_ptr_sub_i_i = $8 - (HEAP32[$m_agents_i_i >> 2] | 0) | 0;
       $sub_ptr_div_i_i = ($sub_ptr_sub_i_i | 0) / 608 | 0;
       $corridor_i = $8 + 4 | 0;
       $m_npath_i57_i = $8 + 32 | 0;
       if ((HEAP32[$m_npath_i57_i >> 2] | 0) == 0) {
        $cond_i61_i = 0;
       } else {
        $cond_i61_i = HEAP32[HEAP32[$8 + 28 >> 2] >> 2] | 0;
       }
       HEAP32[$agentRef_i >> 2] = $cond_i61_i;
       $arraydecay11_i = $8 + 408 | 0;
       HEAPF32[$arraydecay_i1 >> 2] = +HEAPF32[$arraydecay11_i >> 2];
       $arrayidx2_i53_i = $8 + 412 | 0;
       HEAPF32[$arrayidx3_i54_i >> 2] = +HEAPF32[$arrayidx2_i53_i >> 2];
       $arrayidx4_i55_i = $8 + 416 | 0;
       HEAPF32[$arrayidx5_i56_i >> 2] = +HEAPF32[$arrayidx4_i55_i >> 2];
       $19 = HEAP32[$m_navquery_i >> 2] | 0;
       $20 = HEAP32[$19 >> 2] | 0;
       if (($cond_i61_i | 0) == 0) {
        label = 19;
       } else {
        $21 = HEAP32[$20 + 76 >> 2] | 0;
        $22 = HEAP32[$20 + 80 >> 2] | 0;
        $and10_i_i_i = $cond_i61_i >>> ($22 >>> 0) & (1 << $21) - 1;
        $and11_i_i_i = (1 << $22) - 1 & $cond_i61_i;
        if ($and10_i_i_i >>> 0 < (HEAP32[$20 + 48 >> 2] | 0) >>> 0) {
         $25 = HEAP32[$20 + 68 >> 2] | 0;
         if ((HEAP32[$25 + ($and10_i_i_i * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$20 + 72 >> 2]) - 1 & $cond_i61_i >>> (($22 + $21 | 0) >>> 0) | 0)) {
          $27 = HEAP32[$25 + ($and10_i_i_i * 60 | 0) + 8 >> 2] | 0;
          if (($27 | 0) == 0) {
           label = 19;
          } else {
           if ($and11_i_i_i >>> 0 < (HEAP32[$27 + 24 >> 2] | 0) >>> 0) {
            $30 = HEAP16[(HEAP32[$25 + ($and10_i_i_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i_i << 5) + 28 >> 1] | 0;
            if ((HEAP16[$m_includeFlags_i_i_i_i >> 1] & $30) << 16 >> 16 == 0) {
             label = 19;
            } else {
             if ((HEAP16[$m_excludeFlags_i_i_i_i >> 1] & $30) << 16 >> 16 == 0) {
              $replan_0_off0_i = 0;
              $52 = $10;
             } else {
              label = 19;
             }
            }
           } else {
            label = 19;
           }
          }
         } else {
          label = 19;
         }
        } else {
         label = 19;
        }
       }
       if ((label | 0) == 19) {
        label = 0;
        HEAP32[$agentRef_i >> 2] = 0;
        __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf($19, $arraydecay11_i, +HEAPF32[$arraydecay51_i >> 2], +HEAPF32[$arraydecay51_i_idx1147 >> 2], +HEAPF32[$arraydecay51_i_idx1148 >> 2], $m_filter_i, $agentRef_i, $arraydecay19_i) | 0;
        $34 = +HEAPF32[$arraydecay19_i >> 2];
        HEAPF32[$arraydecay_i1 >> 2] = $34;
        HEAPF32[$arrayidx3_i54_i >> 2] = +HEAPF32[$arrayidx2_i49_i >> 2];
        HEAPF32[$arrayidx5_i56_i >> 2] = +HEAPF32[$arrayidx4_i51_i >> 2];
        $37 = HEAP32[$agentRef_i >> 2] | 0;
        $38 = HEAP32[$8 + 28 >> 2] | 0;
        $tobool_i23_i = ($38 | 0) == 0;
        if (($37 | 0) == 0) {
         if ($tobool_i23_i) {
          label = 21;
          break L11;
         }
         HEAPF32[$corridor_i >> 2] = $34;
         HEAPF32[$8 + 8 >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
         HEAPF32[$8 + 12 >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
         HEAPF32[$8 + 16 >> 2] = +HEAPF32[$arraydecay_i1 >> 2];
         HEAPF32[$8 + 20 >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
         HEAPF32[$8 + 24 >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
         HEAP32[$38 >> 2] = 0;
         HEAP32[$m_npath_i57_i >> 2] = 1;
         HEAPF32[$8 + 40 >> 2] = 3.4028234663852886e+38;
         HEAPF32[$8 + 44 >> 2] = 3.4028234663852886e+38;
         HEAPF32[$8 + 48 >> 2] = 3.4028234663852886e+38;
         HEAP32[$8 + 344 >> 2] = 0;
         HEAP32[$8 + 276 >> 2] = 0;
         HEAP8[$state_i >> 0] = 0;
         break;
        }
        if ($tobool_i23_i) {
         label = 24;
         break L11;
        }
        HEAPF32[$corridor_i >> 2] = $34;
        HEAPF32[$8 + 8 >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
        HEAPF32[$8 + 12 >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
        $_off_i_i = (HEAP32[$m_npath_i57_i >> 2] | 0) - 1 | 0;
        if ($_off_i_i >>> 0 < 2 >>> 0) {
         HEAP32[$38 + 8 >> 2] = HEAP32[$38 + ($_off_i_i << 2) >> 2];
         HEAP32[$38 >> 2] = $37;
         HEAP32[$38 + 4 >> 2] = 0;
         HEAP32[$m_npath_i57_i >> 2] = 3;
        } else {
         HEAP32[$38 >> 2] = $37;
         HEAP32[$38 + 4 >> 2] = 0;
        }
        HEAPF32[$8 + 40 >> 2] = 3.4028234663852886e+38;
        HEAPF32[$8 + 44 >> 2] = 3.4028234663852886e+38;
        HEAPF32[$8 + 48 >> 2] = 3.4028234663852886e+38;
        HEAP32[$8 + 344 >> 2] = 0;
        HEAP32[$8 + 276 >> 2] = 0;
        HEAPF32[$arraydecay11_i >> 2] = +HEAPF32[$arraydecay_i1 >> 2];
        HEAPF32[$arrayidx2_i53_i >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
        HEAPF32[$arrayidx4_i55_i >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
        $replan_0_off0_i = 1;
        $52 = HEAP8[$targetState_i >> 0] | 0;
       }
       if (($52 & 255) >>> 0 < 2 >>> 0) {
        $replan_2_off0_i = $replan_0_off0_i;
       } else {
        $53 = HEAP32[$m_navquery_i >> 2] | 0;
        $targetRef_i = $8 + 580 | 0;
        $54 = HEAP32[$targetRef_i >> 2] | 0;
        $55 = HEAP32[$53 >> 2] | 0;
        if (($54 | 0) == 0) {
         label = 37;
        } else {
         $56 = HEAP32[$55 + 76 >> 2] | 0;
         $57 = HEAP32[$55 + 80 >> 2] | 0;
         $and10_i_i76_i = $54 >>> ($57 >>> 0) & (1 << $56) - 1;
         $and11_i_i77_i = (1 << $57) - 1 & $54;
         if ($and10_i_i76_i >>> 0 < (HEAP32[$55 + 48 >> 2] | 0) >>> 0) {
          $60 = HEAP32[$55 + 68 >> 2] | 0;
          if ((HEAP32[$60 + ($and10_i_i76_i * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$55 + 72 >> 2]) - 1 & $54 >>> (($57 + $56 | 0) >>> 0) | 0)) {
           $62 = HEAP32[$60 + ($and10_i_i76_i * 60 | 0) + 8 >> 2] | 0;
           if (($62 | 0) == 0) {
            label = 37;
           } else {
            if ($and11_i_i77_i >>> 0 < (HEAP32[$62 + 24 >> 2] | 0) >>> 0) {
             $65 = HEAP16[(HEAP32[$60 + ($and10_i_i76_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i77_i << 5) + 28 >> 1] | 0;
             if ((HEAP16[$m_includeFlags_i_i_i_i >> 1] & $65) << 16 >> 16 == 0) {
              label = 37;
             } else {
              if ((HEAP16[$m_excludeFlags_i_i_i_i >> 1] & $65) << 16 >> 16 == 0) {
               $replan_1_off0_i = $replan_0_off0_i;
               $72 = $54;
              } else {
               label = 37;
              }
             }
            } else {
             label = 37;
            }
           }
          } else {
           label = 37;
          }
         } else {
          label = 37;
         }
        }
        if ((label | 0) == 37) {
         label = 0;
         $arraydecay49_i = $8 + 584 | 0;
         __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf($53, $arraydecay49_i, +HEAPF32[$arraydecay51_i >> 2], +HEAPF32[$arraydecay51_i_idx1147 >> 2], +HEAPF32[$arraydecay51_i_idx1148 >> 2], $m_filter_i, $targetRef_i, $arraydecay54_i) | 0;
         HEAPF32[$arraydecay49_i >> 2] = +HEAPF32[$arraydecay54_i >> 2];
         HEAPF32[$8 + 588 >> 2] = +HEAPF32[$arrayidx2_i_i2 >> 2];
         HEAPF32[$8 + 592 >> 2] = +HEAPF32[$arrayidx4_i_i >> 2];
         $replan_1_off0_i = 1;
         $72 = HEAP32[$targetRef_i >> 2] | 0;
        }
        if (($72 | 0) == 0) {
         $73 = HEAP32[$8 + 28 >> 2] | 0;
         if (($73 | 0) == 0) {
          label = 40;
          break L11;
         }
         $74 = HEAP32[$agentRef_i >> 2] | 0;
         HEAPF32[$corridor_i >> 2] = +HEAPF32[$arraydecay_i1 >> 2];
         HEAPF32[$8 + 8 >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
         HEAPF32[$8 + 12 >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
         HEAPF32[$8 + 16 >> 2] = +HEAPF32[$arraydecay_i1 >> 2];
         HEAPF32[$8 + 20 >> 2] = +HEAPF32[$arrayidx3_i54_i >> 2];
         HEAPF32[$8 + 24 >> 2] = +HEAPF32[$arrayidx5_i56_i >> 2];
         HEAP32[$73 >> 2] = $74;
         HEAP32[$m_npath_i57_i >> 2] = 1;
         HEAP8[$targetState_i >> 0] = 0;
         $replan_2_off0_i = $replan_1_off0_i;
        } else {
         $replan_2_off0_i = $replan_1_off0_i;
        }
       }
       $81 = HEAP32[$m_npath_i57_i >> 2] | 0;
       $cmp_i_i8_i = ($81 | 0) < 10;
       $cond_i_i_i = $cmp_i_i8_i ? $81 : 10;
       L53 : do {
        if (($cond_i_i_i | 0) > 0) {
         $83 = HEAP32[$8 + 28 >> 2] | 0;
         $84 = HEAP32[HEAP32[$m_navquery_i >> 2] >> 2] | 0;
         $m_tileBits_i_i_i_i = $84 + 76 | 0;
         $m_polyBits_i_i_i_i = $84 + 80 | 0;
         $m_maxTiles_i_i_i = $84 + 48 | 0;
         $m_saltBits_i_i_i_i = $84 + 72 | 0;
         $m_tiles_i_i_i = $84 + 68 | 0;
         $i_04_i_i = 0;
         while (1) {
          $85 = HEAP32[$83 + ($i_04_i_i << 2) >> 2] | 0;
          if (($85 | 0) == 0) {
           $retval_0_i13_i = 0;
           break L53;
          }
          $86 = HEAP32[$m_tileBits_i_i_i_i >> 2] | 0;
          $87 = HEAP32[$m_polyBits_i_i_i_i >> 2] | 0;
          $and10_i_i_i_i = $85 >>> ($87 >>> 0) & (1 << $86) - 1;
          $and11_i_i_i_i = (1 << $87) - 1 & $85;
          if (!($and10_i_i_i_i >>> 0 < (HEAP32[$m_maxTiles_i_i_i >> 2] | 0) >>> 0)) {
           $retval_0_i13_i = 0;
           break L53;
          }
          $90 = HEAP32[$m_tiles_i_i_i >> 2] | 0;
          if ((HEAP32[$90 + ($and10_i_i_i_i * 60 | 0) >> 2] | 0) != ((1 << HEAP32[$m_saltBits_i_i_i_i >> 2]) - 1 & $85 >>> (($87 + $86 | 0) >>> 0) | 0)) {
           $retval_0_i13_i = 0;
           break L53;
          }
          $92 = HEAP32[$90 + ($and10_i_i_i_i * 60 | 0) + 8 >> 2] | 0;
          if (($92 | 0) == 0) {
           $retval_0_i13_i = 0;
           break L53;
          }
          if (!($and11_i_i_i_i >>> 0 < (HEAP32[$92 + 24 >> 2] | 0) >>> 0)) {
           $retval_0_i13_i = 0;
           break L53;
          }
          $95 = HEAP16[(HEAP32[$90 + ($and10_i_i_i_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i_i_i << 5) + 28 >> 1] | 0;
          if ((HEAP16[$m_includeFlags_i_i_i_i >> 1] & $95) << 16 >> 16 == 0) {
           $retval_0_i13_i = 0;
           break L53;
          }
          $inc_i_i = $i_04_i_i + 1 | 0;
          if (!((HEAP16[$m_excludeFlags_i_i_i_i >> 1] & $95) << 16 >> 16 == 0)) {
           $retval_0_i13_i = 0;
           break L53;
          }
          if (($inc_i_i | 0) < ($cond_i_i_i | 0)) {
           $i_04_i_i = $inc_i_i;
          } else {
           $retval_0_i13_i = 1;
           break;
          }
         }
        } else {
         $retval_0_i13_i = 1;
        }
       } while (0);
       $replan_2_off0__i = $replan_2_off0_i | $retval_0_i13_i ^ 1;
       $98 = HEAP8[$targetState_i >> 0] | 0;
       if ($98 << 24 >> 24 == 2) {
        if (+HEAPF32[$targetReplanTime_i >> 2] > 1.0 ^ 1 | $cmp_i_i8_i ^ 1) {
         label = 57;
        } else {
         if (($81 | 0) == 0) {
          $cond_i_i13 = 0;
         } else {
          $cond_i_i13 = HEAP32[(HEAP32[$8 + 28 >> 2] | 0) + ($81 - 1 << 2) >> 2] | 0;
         }
         $102 = HEAP32[$8 + 580 >> 2] | 0;
         if ($replan_2_off0__i | ($cond_i_i13 | 0) != ($102 | 0)) {
          $103 = $102;
         } else {
          break;
         }
        }
       } else {
        label = 57;
       }
       if ((label | 0) == 57) {
        label = 0;
        if ($retval_0_i13_i & ($replan_2_off0_i ^ 1) | $98 << 24 >> 24 == 0) {
         break;
        }
        $103 = HEAP32[$8 + 580 >> 2] | 0;
       }
       $arraydecay100_i = $8 + 584 | 0;
       if (($sub_ptr_sub_i_i | 0) >= 0) {
        if ((HEAP32[$m_maxAgents >> 2] | 0) >= ($sub_ptr_div_i_i | 0)) {
         $105 = HEAP32[$m_agents_i_i >> 2] | 0;
         HEAP32[$105 + ($sub_ptr_div_i_i * 608 | 0) + 580 >> 2] = $103;
         HEAPF32[$105 + ($sub_ptr_div_i_i * 608 | 0) + 584 >> 2] = +HEAPF32[$arraydecay100_i >> 2];
         HEAPF32[$105 + ($sub_ptr_div_i_i * 608 | 0) + 588 >> 2] = +HEAPF32[$8 + 588 >> 2];
         HEAPF32[$105 + ($sub_ptr_div_i_i * 608 | 0) + 592 >> 2] = +HEAPF32[$8 + 592 >> 2];
         HEAP32[$105 + ($sub_ptr_div_i_i * 608 | 0) + 596 >> 2] = 0;
         HEAP8[$105 + ($sub_ptr_div_i_i * 608 | 0) + 600 >> 0] = 1;
         HEAP8[$105 + ($sub_ptr_div_i_i * 608 | 0) + 576 >> 0] = ($103 | 0) == 0 ? 1 : 3;
        }
       }
      }
     }
    } while (0);
    $inc_i16 = $i_063_i + 1 | 0;
    if (($inc_i16 | 0) < ($n_0_lcssa_i | 0)) {
     $i_063_i = $inc_i16;
    } else {
     label = 63;
     break;
    }
   }
   if ((label | 0) == 21) {
    ___assert_fail(5032, 7256, 232, 10424);
   } else if ((label | 0) == 24) {
    ___assert_fail(5032, 7256, 515, 10528);
   } else if ((label | 0) == 40) {
    ___assert_fail(5032, 7256, 232, 10424);
   } else if ((label | 0) == 63) {
    $109 = HEAP32[$m_maxAgents >> 2] | 0;
    break;
   }
  } else {
   $109 = $1;
  }
 } while (0);
 do {
  if (($109 | 0) > 0) {
   $m_agents_i22 = $this + 4 | 0;
   $112 = $reqPath_i;
   $m_navquery_i23 = $this + 1e3 | 0;
   $m_filter_i24 = $this + 732 | 0;
   $arraydecay30_i = $reqPath_i | 0;
   $arraydecay51_i25 = $agentPos_i | 0;
   $arrayidx3_i118_i = $agentPos_i + 4 | 0;
   $arrayidx5_i120_i = $agentPos_i + 8 | 0;
   $i_0139_i = 0;
   $nqueue_0143_i = 0;
   L86 : while (1) {
    $113 = HEAP32[$m_agents_i22 >> 2] | 0;
    $arrayidx_i27 = $113 + ($i_0139_i * 608 | 0) | 0;
    L88 : do {
     if ((HEAP8[$arrayidx_i27 >> 0] | 0) == 0) {
      $nqueue_1_i = $nqueue_0143_i;
     } else {
      if ((HEAP8[$113 + ($i_0139_i * 608 | 0) + 1 >> 0] | 0) == 0) {
       $nqueue_1_i = $nqueue_0143_i;
      } else {
       $targetState_i34 = $113 + ($i_0139_i * 608 | 0) + 576 | 0;
       $116 = HEAP8[$targetState_i34 >> 0] | 0;
       do {
        if (($116 << 24 >> 24 | 0) == 3) {
         $m_path_i_i36 = $113 + ($i_0139_i * 608 | 0) + 28 | 0;
         $117 = HEAP32[$m_path_i_i36 >> 2] | 0;
         $m_npath_i112_i = $113 + ($i_0139_i * 608 | 0) + 32 | 0;
         $118 = HEAP32[$m_npath_i112_i >> 2] | 0;
         if (($118 | 0) == 0) {
          label = 72;
          break L86;
         }
         HEAP32[$reqPathCount_i >> 2] = 0;
         $targetRef_i37 = $113 + ($i_0139_i * 608 | 0) + 580 | 0;
         $arraydecay_i38 = $113 + ($i_0139_i * 608 | 0) + 408 | 0;
         $arraydecay20_i = $113 + ($i_0139_i * 608 | 0) + 584 | 0;
         __ZN14dtNavMeshQuery18initSlicedFindPathEjjPKfS1_PK13dtQueryFilter(HEAP32[$m_navquery_i23 >> 2] | 0, HEAP32[$117 >> 2] | 0, HEAP32[$targetRef_i37 >> 2] | 0, $arraydecay_i38, $arraydecay20_i, $m_filter_i24) | 0;
         __ZN14dtNavMeshQuery20updateSlicedFindPathEiPi(HEAP32[$m_navquery_i23 >> 2] | 0, 20, 0) | 0;
         $124 = HEAP32[$m_navquery_i23 >> 2] | 0;
         if ((HEAP8[$113 + ($i_0139_i * 608 | 0) + 600 >> 0] | 0) == 0) {
          $status_0_i = __ZN14dtNavMeshQuery22finalizeSlicedFindPathEPjPii($124, $arraydecay30_i, $reqPathCount_i, 32) | 0;
         } else {
          $status_0_i = __ZN14dtNavMeshQuery29finalizeSlicedFindPathPartialEPKjiPjPii($124, $117, $118, $arraydecay30_i, $reqPathCount_i) | 0;
         }
         $125 = HEAP32[$reqPathCount_i >> 2] | 0;
         L98 : do {
          if (($125 | 0) > 0 & ($status_0_i | 0) > -1) {
           $126 = HEAP32[$reqPath_i + ($125 - 1 << 2) >> 2] | 0;
           do {
            if (($126 | 0) == (HEAP32[$targetRef_i37 >> 2] | 0)) {
             HEAPF32[$arraydecay51_i25 >> 2] = +HEAPF32[$arraydecay20_i >> 2];
             HEAPF32[$arrayidx3_i118_i >> 2] = +HEAPF32[$113 + ($i_0139_i * 608 | 0) + 588 >> 2];
             HEAPF32[$arrayidx5_i120_i >> 2] = +HEAPF32[$113 + ($i_0139_i * 608 | 0) + 592 >> 2];
            } else {
             $129 = HEAP32[HEAP32[$m_navquery_i23 >> 2] >> 2] | 0;
             if (($126 | 0) != 0) {
              $130 = HEAP32[$129 + 76 >> 2] | 0;
              $131 = HEAP32[$129 + 80 >> 2] | 0;
              $and10_i_i_i49 = $126 >>> ($131 >>> 0) & (1 << $130) - 1;
              $and11_i_i_i50 = (1 << $131) - 1 & $126;
              if ($and10_i_i_i49 >>> 0 < (HEAP32[$129 + 48 >> 2] | 0) >>> 0) {
               $134 = HEAP32[$129 + 68 >> 2] | 0;
               $arrayidx_i99_i = $134 + ($and10_i_i_i49 * 60 | 0) | 0;
               if ((HEAP32[$arrayidx_i99_i >> 2] | 0) == ((1 << HEAP32[$129 + 72 >> 2]) - 1 & $126 >>> (($131 + $130 | 0) >>> 0) | 0)) {
                $136 = HEAP32[$134 + ($and10_i_i_i49 * 60 | 0) + 8 >> 2] | 0;
                if (($136 | 0) != 0) {
                 if (!($and11_i_i_i50 >>> 0 >= (HEAP32[$136 + 24 >> 2] | 0) >>> 0 | ($arrayidx_i99_i | 0) == 0)) {
                  __ZNK14dtNavMeshQuery24closestPointOnPolyInTileEPK10dtMeshTilePK6dtPolyPKfPf($arrayidx_i99_i, (HEAP32[$134 + ($and10_i_i_i49 * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i_i50 << 5) | 0, $arraydecay20_i, $arraydecay51_i25);
                  break;
                 }
                }
               }
              }
             }
             HEAP32[$reqPathCount_i >> 2] = 0;
             label = 88;
             break L98;
            }
           } while (0);
           if (($125 | 0) == 0) {
            label = 88;
           } else {
            $147 = $125;
            $146 = $126;
           }
          } else {
           HEAP32[$reqPathCount_i >> 2] = 0;
           label = 88;
          }
         } while (0);
         if ((label | 0) == 88) {
          label = 0;
          HEAPF32[$arraydecay51_i25 >> 2] = +HEAPF32[$arraydecay_i38 >> 2];
          HEAPF32[$arrayidx3_i118_i >> 2] = +HEAPF32[$113 + ($i_0139_i * 608 | 0) + 412 >> 2];
          HEAPF32[$arrayidx5_i120_i >> 2] = +HEAPF32[$113 + ($i_0139_i * 608 | 0) + 416 >> 2];
          $145 = HEAP32[$117 >> 2] | 0;
          HEAP32[$arraydecay30_i >> 2] = $145;
          HEAP32[$reqPathCount_i >> 2] = 1;
          $147 = 1;
          $146 = $145;
         }
         $148 = HEAP32[$m_path_i_i36 >> 2] | 0;
         if (($148 | 0) == 0) {
          label = 90;
          break L86;
         }
         if (($147 | 0) <= 0) {
          label = 92;
          break L86;
         }
         if ((HEAP32[$113 + ($i_0139_i * 608 | 0) + 36 >> 2] | 0) <= ($147 | 0)) {
          label = 94;
          break L86;
         }
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 16 >> 2] = +HEAPF32[$arraydecay51_i25 >> 2];
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 20 >> 2] = +HEAPF32[$arrayidx3_i118_i >> 2];
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 24 >> 2] = +HEAPF32[$arrayidx5_i120_i >> 2];
         _memcpy($148 | 0, $112 | 0, $147 << 2) | 0;
         HEAP32[$m_npath_i112_i >> 2] = $147;
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 40 >> 2] = 3.4028234663852886e+38;
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 44 >> 2] = 3.4028234663852886e+38;
         HEAPF32[$113 + ($i_0139_i * 608 | 0) + 48 >> 2] = 3.4028234663852886e+38;
         HEAP32[$113 + ($i_0139_i * 608 | 0) + 344 >> 2] = 0;
         HEAP32[$113 + ($i_0139_i * 608 | 0) + 276 >> 2] = 0;
         if (($146 | 0) == (HEAP32[$targetRef_i37 >> 2] | 0)) {
          HEAP8[$targetState_i34 >> 0] = 2;
          HEAPF32[$113 + ($i_0139_i * 608 | 0) + 604 >> 2] = 0.0;
          $nqueue_1_i = $nqueue_0143_i;
          break L88;
         } else {
          HEAP8[$targetState_i34 >> 0] = 4;
          break;
         }
        } else if (($116 << 24 >> 24 | 0) != 4) {
         $nqueue_1_i = $nqueue_0143_i;
         break L88;
        }
       } while (0);
       do {
        if (($nqueue_0143_i | 0) == 0) {
         $slot_0_i_i = 0;
        } else {
         $155 = +HEAPF32[$113 + ($i_0139_i * 608 | 0) + 604 >> 2];
         if (!($155 > +HEAPF32[(HEAP32[$queue_i + ($nqueue_0143_i - 1 << 2) >> 2] | 0) + 604 >> 2])) {
          if (($nqueue_0143_i | 0) > 7) {
           $nqueue_1_i = $nqueue_0143_i;
           break L88;
          } else {
           $slot_0_i_i = $nqueue_0143_i;
           break;
          }
         }
         L127 : do {
          if (($nqueue_0143_i | 0) > 0) {
           $i_04_i_i88 = 0;
           while (1) {
            $inc_i_i90 = $i_04_i_i88 + 1 | 0;
            if (!($155 < +HEAPF32[(HEAP32[$queue_i + ($i_04_i_i88 << 2) >> 2] | 0) + 604 >> 2])) {
             $i_0_lcssa_i_i = $i_04_i_i88;
             break L127;
            }
            if (($inc_i_i90 | 0) < ($nqueue_0143_i | 0)) {
             $i_04_i_i88 = $inc_i_i90;
            } else {
             $i_0_lcssa_i_i = $inc_i_i90;
             break;
            }
           }
          } else {
           $i_0_lcssa_i_i = 0;
          }
         } while (0);
         $add_i_i92 = $i_0_lcssa_i_i + 1 | 0;
         $sub13_i_i = $nqueue_0143_i - $i_0_lcssa_i_i | 0;
         $sub14_i_i = 7 - $i_0_lcssa_i_i | 0;
         $cond_i_i_i94 = ($sub13_i_i | 0) < ($sub14_i_i | 0) ? $sub13_i_i : $sub14_i_i;
         if (($cond_i_i_i94 + $add_i_i92 | 0) >= 9) {
          label = 105;
          break L86;
         }
         if (($cond_i_i_i94 | 0) > 0) {
          _memmove($queue_i + ($add_i_i92 << 2) | 0, $queue_i + ($i_0_lcssa_i_i << 2) | 0, $cond_i_i_i94 << 2 | 0) | 0;
          $slot_0_i_i = $i_0_lcssa_i_i;
         } else {
          $slot_0_i_i = $i_0_lcssa_i_i;
         }
        }
       } while (0);
       HEAP32[$queue_i + ($slot_0_i_i << 2) >> 2] = $arrayidx_i27;
       $add25_i_i = $nqueue_0143_i + 1 | 0;
       $nqueue_1_i = ($add25_i_i | 0) < 8 ? $add25_i_i : 8;
      }
     }
    } while (0);
    $inc_i99 = $i_0139_i + 1 | 0;
    if (($inc_i99 | 0) < (HEAP32[$m_maxAgents >> 2] | 0)) {
     $i_0139_i = $inc_i99;
     $nqueue_0143_i = $nqueue_1_i;
    } else {
     label = 66;
     break;
    }
   }
   if ((label | 0) == 66) {
    if (($nqueue_1_i | 0) <= 0) {
     break;
    }
    $m_nextHandle_i_i = $this + 464 | 0;
    $i85_0133_i = 0;
    do {
     $163 = HEAP32[$queue_i + ($i85_0133_i << 2) >> 2] | 0;
     $164 = HEAP32[$163 + 32 >> 2] | 0;
     if (($164 | 0) == 0) {
      $cond_i_i106 = 0;
     } else {
      $cond_i_i106 = HEAP32[(HEAP32[$163 + 28 >> 2] | 0) + ($164 - 1 << 2) >> 2] | 0;
     }
     $167 = HEAP32[$163 + 580 >> 2] | 0;
     $arraydecay_i_i107 = $163 + 16 | 0;
     $arraydecay97_i = $163 + 584 | 0;
     $i_019_i_i = 0;
     while (1) {
      $ref_i_i = $this + 16 + ($i_019_i_i * 56 | 0) | 0;
      $inc_i15_i = $i_019_i_i + 1 | 0;
      if ((HEAP32[$ref_i_i >> 2] | 0) == 0) {
       label = 115;
       break;
      }
      if (($inc_i15_i | 0) < 8) {
       $i_019_i_i = $inc_i15_i;
      } else {
       label = 116;
       break;
      }
     }
     if ((label | 0) == 115) {
      label = 0;
      if (($i_019_i_i | 0) == -1) {
       label = 116;
      } else {
       $169 = HEAP32[$m_nextHandle_i_i >> 2] | 0;
       $inc7_i_i = $169 + 1 | 0;
       HEAP32[$m_nextHandle_i_i >> 2] = ($inc7_i_i | 0) == 0 ? $169 + 2 | 0 : $inc7_i_i;
       HEAP32[$ref_i_i >> 2] = $169;
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 4 >> 2] = +HEAPF32[$arraydecay_i_i107 >> 2];
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 8 >> 2] = +HEAPF32[$163 + 20 >> 2];
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 12 >> 2] = +HEAPF32[$163 + 24 >> 2];
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 28 >> 2] = $cond_i_i106;
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 16 >> 2] = +HEAPF32[$arraydecay97_i >> 2];
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 20 >> 2] = +HEAPF32[$163 + 588 >> 2];
       HEAPF32[$this + 16 + ($i_019_i_i * 56 | 0) + 24 >> 2] = +HEAPF32[$163 + 592 >> 2];
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 32 >> 2] = $167;
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 44 >> 2] = 0;
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 40 >> 2] = 0;
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 52 >> 2] = $m_filter_i24;
       HEAP32[$this + 16 + ($i_019_i_i * 56 | 0) + 48 >> 2] = 0;
       HEAP32[$163 + 596 >> 2] = $169;
       if (($169 | 0) != 0) {
        HEAP8[$163 + 576 >> 0] = 5;
       }
      }
     }
     if ((label | 0) == 116) {
      label = 0;
      HEAP32[$163 + 596 >> 2] = 0;
     }
     $i85_0133_i = $i85_0133_i + 1 | 0;
    } while (($i85_0133_i | 0) < ($nqueue_1_i | 0));
   } else if ((label | 0) == 72) {
    ___assert_fail(3584, 7776, 679, 10384);
   } else if ((label | 0) == 90) {
    ___assert_fail(5032, 7256, 504, 10544);
   } else if ((label | 0) == 92) {
    ___assert_fail(1536, 7256, 505, 10544);
   } else if ((label | 0) == 94) {
    ___assert_fail(1096, 7256, 506, 10544);
   } else if ((label | 0) == 105) {
    ___assert_fail(5368, 7776, 281, 10608);
   }
  }
 } while (0);
 $m_queueHead_i_i = $this + 472 | 0;
 $m_navquery_i_i = $this + 476 | 0;
 $m_maxPathSize_i_i = $this + 468 | 0;
 $i_028_i_i = 0;
 $iterCount_029_i_i = 100;
 $177 = HEAP32[$m_queueHead_i_i >> 2] | 0;
 L160 : while (1) {
  $rem_i_i = ($177 | 0) % 8 | 0;
  $ref_i25_i = $this + 16 + ($rem_i_i * 56 | 0) | 0;
  do {
   if ((HEAP32[$ref_i25_i >> 2] | 0) == 0) {
    $inc_i28_i = $177 + 1 | 0;
    HEAP32[$m_queueHead_i_i >> 2] = $inc_i28_i;
    $iterCount_2_i_i = $iterCount_029_i_i;
    $195 = $inc_i28_i;
   } else {
    $status_i29_i = $this + 16 + ($rem_i_i * 56 | 0) + 44 | 0;
    $179 = HEAP32[$status_i29_i >> 2] | 0;
    if ($179 >>> 0 > 1073741823 >>> 0) {
     $keepAlive_i31_i = $this + 16 + ($rem_i_i * 56 | 0) + 48 | 0;
     $181 = HEAP32[$keepAlive_i31_i >> 2] | 0;
     HEAP32[$keepAlive_i31_i >> 2] = $181 + 1;
     if (($181 | 0) > 1) {
      HEAP32[$ref_i25_i >> 2] = 0;
      HEAP32[$status_i29_i >> 2] = 0;
     }
     $inc15_i_i = (HEAP32[$m_queueHead_i_i >> 2] | 0) + 1 | 0;
     HEAP32[$m_queueHead_i_i >> 2] = $inc15_i_i;
     $iterCount_2_i_i = $iterCount_029_i_i;
     $195 = $inc15_i_i;
     break;
    }
    if (($179 | 0) == 0) {
     $call21_i_i = __ZN14dtNavMeshQuery18initSlicedFindPathEjjPKfS1_PK13dtQueryFilter(HEAP32[$m_navquery_i_i >> 2] | 0, HEAP32[$this + 16 + ($rem_i_i * 56 | 0) + 28 >> 2] | 0, HEAP32[$this + 16 + ($rem_i_i * 56 | 0) + 32 >> 2] | 0, $this + 16 + ($rem_i_i * 56 | 0) + 4 | 0, $this + 16 + ($rem_i_i * 56 | 0) + 16 | 0, HEAP32[$this + 16 + ($rem_i_i * 56 | 0) + 52 >> 2] | 0) | 0;
     HEAP32[$status_i29_i >> 2] = $call21_i_i;
     $187 = $call21_i_i;
    } else {
     $187 = $179;
    }
    if (($187 & 536870912 | 0) == 0) {
     $iterCount_1_i_i = $iterCount_029_i_i;
     $190 = $187;
    } else {
     HEAP32[$iters_i_i >> 2] = 0;
     $call28_i_i = __ZN14dtNavMeshQuery20updateSlicedFindPathEiPi(HEAP32[$m_navquery_i_i >> 2] | 0, $iterCount_029_i_i, $iters_i_i) | 0;
     HEAP32[$status_i29_i >> 2] = $call28_i_i;
     $iterCount_1_i_i = $iterCount_029_i_i - (HEAP32[$iters_i_i >> 2] | 0) | 0;
     $190 = $call28_i_i;
    }
    if (($190 & 1073741824 | 0) != 0) {
     $call35_i_i = __ZN14dtNavMeshQuery22finalizeSlicedFindPathEPjPii(HEAP32[$m_navquery_i_i >> 2] | 0, HEAP32[$this + 16 + ($rem_i_i * 56 | 0) + 36 >> 2] | 0, $this + 16 + ($rem_i_i * 56 | 0) + 40 | 0, HEAP32[$m_maxPathSize_i_i >> 2] | 0) | 0;
     HEAP32[$status_i29_i >> 2] = $call35_i_i;
    }
    if (($iterCount_1_i_i | 0) < 1) {
     break L160;
    }
    $inc42_i_i = (HEAP32[$m_queueHead_i_i >> 2] | 0) + 1 | 0;
    HEAP32[$m_queueHead_i_i >> 2] = $inc42_i_i;
    $iterCount_2_i_i = $iterCount_1_i_i;
    $195 = $inc42_i_i;
   }
  } while (0);
  $i_028_i_i = $i_028_i_i + 1 | 0;
  if (($i_028_i_i | 0) >= 8) {
   break;
  } else {
   $iterCount_029_i_i = $iterCount_2_i_i;
   $177 = $195;
  }
 }
 $196 = HEAP32[$m_maxAgents >> 2] | 0;
 L183 : do {
  if (($196 | 0) > 0) {
   $m_agents116_i = $this + 4 | 0;
   $arraydecay162_i = $nearest_i | 0;
   $arrayidx3_i99_i = $nearest_i + 4 | 0;
   $arrayidx5_i101_i = $nearest_i + 8 | 0;
   $m_pathResult_i = $this + 712 | 0;
   $m_maxPathResult_i = $this + 716 | 0;
   $m_navquery233_i = $this + 1e3 | 0;
   $arraydecay237_i = $nearest47_i | 0;
   $arrayidx2_i_i112 = $nearest47_i + 4 | 0;
   $arrayidx4_i_i113 = $nearest47_i + 8 | 0;
   $i110_0129_i = 0;
   $197 = $196;
   L185 : while (1) {
    $198 = HEAP32[$m_agents116_i >> 2] | 0;
    do {
     if ((HEAP8[$198 + ($i110_0129_i * 608 | 0) >> 0] | 0) == 0) {
      $251 = $197;
     } else {
      $targetState122_i = $198 + ($i110_0129_i * 608 | 0) + 576 | 0;
      if ((HEAP8[$targetState122_i >> 0] | 0) == 5) {
       $targetPathqRef136_i = $198 + ($i110_0129_i * 608 | 0) + 596 | 0;
       $201 = HEAP32[$targetPathqRef136_i >> 2] | 0;
       $i_04_i43_i = 0;
       while (1) {
        $inc_i45_i = $i_04_i43_i + 1 | 0;
        if ((HEAP32[$this + 16 + ($i_04_i43_i * 56 | 0) >> 2] | 0) == ($201 | 0)) {
         label = 143;
         break;
        }
        if (($inc_i45_i | 0) < 8) {
         $i_04_i43_i = $inc_i45_i;
        } else {
         break;
        }
       }
       if ((label | 0) == 143) {
        label = 0;
        $203 = HEAP32[$this + 16 + ($i_04_i43_i * 56 | 0) + 44 >> 2] | 0;
        if (($203 | 0) >= 0) {
         if (($203 & 1073741824 | 0) == 0) {
          $251 = $197;
          break;
         }
         $m_path_i102_i = $198 + ($i110_0129_i * 608 | 0) + 28 | 0;
         $205 = HEAP32[$m_path_i102_i >> 2] | 0;
         $m_npath_i_i115 = $198 + ($i110_0129_i * 608 | 0) + 32 | 0;
         $206 = HEAP32[$m_npath_i_i115 >> 2] | 0;
         if (($206 | 0) == 0) {
          label = 147;
          break L185;
         }
         HEAPF32[$arraydecay162_i >> 2] = +HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 584 >> 2];
         HEAPF32[$arrayidx3_i99_i >> 2] = +HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 588 >> 2];
         HEAPF32[$arrayidx5_i101_i >> 2] = +HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 592 >> 2];
         $210 = HEAP32[$m_pathResult_i >> 2] | 0;
         $211 = HEAP32[$m_maxPathResult_i >> 2] | 0;
         $i_08_i_i = 0;
         while (1) {
          $ref2_i52_i = $this + 16 + ($i_08_i_i * 56 | 0) | 0;
          $inc_i54_i = $i_08_i_i + 1 | 0;
          if ((HEAP32[$ref2_i52_i >> 2] | 0) == ($201 | 0)) {
           label = 151;
           break;
          }
          if (($inc_i54_i | 0) < 8) {
           $i_08_i_i = $inc_i54_i;
          } else {
           $storemerge_i = 1;
           break;
          }
         }
         do {
          if ((label | 0) == 151) {
           label = 0;
           HEAP32[$ref2_i52_i >> 2] = 0;
           HEAP32[$this + 16 + ($i_08_i_i * 56 | 0) + 44 >> 2] = 0;
           $213 = HEAP32[$this + 16 + ($i_08_i_i * 56 | 0) + 40 >> 2] | 0;
           $cond_i_i59_i = ($213 | 0) < ($211 | 0) ? $213 : $211;
           $214 = $210;
           _memcpy($214 | 0, HEAP32[$this + 16 + ($i_08_i_i * 56 | 0) + 36 >> 2] | 0, $cond_i_i59_i << 2) | 0;
           if (($cond_i_i59_i | 0) == 0) {
            $storemerge_i = 1;
           } else {
            $sub175_i = $206 - 1 | 0;
            if ((HEAP32[$205 + ($sub175_i << 2) >> 2] | 0) == (HEAP32[$210 >> 2] | 0)) {
             if (($206 | 0) > 1) {
              $219 = HEAP32[$m_maxPathResult_i >> 2] | 0;
              $cmp187_i = ($cond_i_i59_i + $sub175_i | 0) > ($219 | 0);
              $sub191_i = $219 - $sub175_i | 0;
              _memmove($210 + ($sub175_i << 2) | 0, $214 | 0, ($cmp187_i ? $sub191_i : $cond_i_i59_i) << 2 | 0) | 0;
              _memcpy($214 | 0, $205 | 0, $sub175_i << 2) | 0;
              $add197_i = ($cmp187_i ? $sub191_i : $cond_i_i59_i) + $sub175_i | 0;
              if (($add197_i | 0) > 0) {
               $j_0127_i = 0;
               $222 = $add197_i;
               $nres_i_1 = $add197_i;
               while (1) {
                $sub201_i = $j_0127_i - 1 | 0;
                if (($j_0127_i | 0) > 0) {
                 $add204_i = $j_0127_i + 1 | 0;
                 if (($222 | 0) > ($add204_i | 0)) {
                  $arrayidx208_i = $210 + ($sub201_i << 2) | 0;
                  $arrayidx210_i = $210 + ($add204_i << 2) | 0;
                  if ((HEAP32[$arrayidx208_i >> 2] | 0) == (HEAP32[$arrayidx210_i >> 2] | 0)) {
                   _memmove($arrayidx208_i | 0, $arrayidx210_i | 0, $222 - $add204_i << 2 | 0) | 0;
                   $sub220_i = $nres_i_1 - 2 | 0;
                   $j_1_i = $j_0127_i - 2 | 0;
                   $227 = $sub220_i;
                   $nres_i_2 = $sub220_i;
                  } else {
                   $j_1_i = $j_0127_i;
                   $227 = $222;
                   $nres_i_2 = $nres_i_1;
                  }
                 } else {
                  $j_1_i = $j_0127_i;
                  $227 = $222;
                  $nres_i_2 = $nres_i_1;
                 }
                } else {
                 $j_1_i = $j_0127_i;
                 $227 = $222;
                 $nres_i_2 = $nres_i_1;
                }
                $inc225_i = $j_1_i + 1 | 0;
                if (($inc225_i | 0) < ($227 | 0)) {
                 $j_0127_i = $inc225_i;
                 $222 = $227;
                 $nres_i_1 = $nres_i_2;
                } else {
                 $228 = $227;
                 $nres_i_3 = $nres_i_2;
                 break;
                }
               }
              } else {
               $228 = $add197_i;
               $nres_i_3 = $add197_i;
              }
             } else {
              $228 = $cond_i_i59_i;
              $nres_i_3 = $cond_i_i59_i;
             }
             $229 = HEAP32[$210 + ($228 - 1 << 2) >> 2] | 0;
             if (($229 | 0) != (HEAP32[$198 + ($i110_0129_i * 608 | 0) + 580 >> 2] | 0)) {
              $232 = HEAP32[HEAP32[$m_navquery233_i >> 2] >> 2] | 0;
              if (($229 | 0) == 0) {
               $storemerge_i = 1;
               break;
              }
              $233 = HEAP32[$232 + 76 >> 2] | 0;
              $234 = HEAP32[$232 + 80 >> 2] | 0;
              $and10_i_i110_i = $229 >>> ($234 >>> 0) & (1 << $233) - 1;
              $and11_i_i111_i = (1 << $234) - 1 & $229;
              if (!($and10_i_i110_i >>> 0 < (HEAP32[$232 + 48 >> 2] | 0) >>> 0)) {
               $storemerge_i = 1;
               break;
              }
              $237 = HEAP32[$232 + 68 >> 2] | 0;
              $arrayidx_i122_i = $237 + ($and10_i_i110_i * 60 | 0) | 0;
              if ((HEAP32[$arrayidx_i122_i >> 2] | 0) != ((1 << HEAP32[$232 + 72 >> 2]) - 1 & $229 >>> (($234 + $233 | 0) >>> 0) | 0)) {
               $storemerge_i = 1;
               break;
              }
              $239 = HEAP32[$237 + ($and10_i_i110_i * 60 | 0) + 8 >> 2] | 0;
              if (($239 | 0) == 0) {
               $storemerge_i = 1;
               break;
              }
              if ($and11_i_i111_i >>> 0 >= (HEAP32[$239 + 24 >> 2] | 0) >>> 0 | ($arrayidx_i122_i | 0) == 0) {
               $storemerge_i = 1;
               break;
              }
              __ZNK14dtNavMeshQuery24closestPointOnPolyInTileEPK10dtMeshTilePK6dtPolyPKfPf($arrayidx_i122_i, (HEAP32[$237 + ($and10_i_i110_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i111_i << 5) | 0, $arraydecay162_i, $arraydecay237_i);
              HEAPF32[$arraydecay162_i >> 2] = +HEAPF32[$arraydecay237_i >> 2];
              HEAPF32[$arrayidx3_i99_i >> 2] = +HEAPF32[$arrayidx2_i_i112 >> 2];
              HEAPF32[$arrayidx5_i101_i >> 2] = +HEAPF32[$arrayidx4_i_i113 >> 2];
             }
             $245 = HEAP32[$m_path_i102_i >> 2] | 0;
             if (($245 | 0) == 0) {
              label = 168;
              break L185;
             }
             if (($nres_i_3 | 0) <= 0) {
              label = 170;
              break L185;
             }
             if ((HEAP32[$198 + ($i110_0129_i * 608 | 0) + 36 >> 2] | 0) <= ($nres_i_3 | 0)) {
              label = 172;
              break L185;
             }
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 16 >> 2] = +HEAPF32[$arraydecay162_i >> 2];
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 20 >> 2] = +HEAPF32[$arrayidx3_i99_i >> 2];
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 24 >> 2] = +HEAPF32[$arrayidx5_i101_i >> 2];
             _memcpy($245 | 0, $214 | 0, $nres_i_3 << 2) | 0;
             HEAP32[$m_npath_i_i115 >> 2] = $nres_i_3;
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 40 >> 2] = 3.4028234663852886e+38;
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 44 >> 2] = 3.4028234663852886e+38;
             HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 48 >> 2] = 3.4028234663852886e+38;
             HEAP32[$198 + ($i110_0129_i * 608 | 0) + 344 >> 2] = 0;
             HEAP32[$198 + ($i110_0129_i * 608 | 0) + 276 >> 2] = 0;
             $storemerge_i = 2;
            } else {
             $storemerge_i = 1;
            }
           }
          }
         } while (0);
         HEAP8[$targetState122_i >> 0] = $storemerge_i;
         HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 604 >> 2] = 0.0;
         $251 = HEAP32[$m_maxAgents >> 2] | 0;
         break;
        }
       }
       HEAP32[$targetPathqRef136_i >> 2] = 0;
       HEAP8[$targetState122_i >> 0] = (HEAP32[$198 + ($i110_0129_i * 608 | 0) + 580 >> 2] | 0) == 0 ? 1 : 3;
       HEAPF32[$198 + ($i110_0129_i * 608 | 0) + 604 >> 2] = 0.0;
       $251 = $197;
      } else {
       $251 = $197;
      }
     }
    } while (0);
    $i110_0129_i = $i110_0129_i + 1 | 0;
    if (($i110_0129_i | 0) >= ($251 | 0)) {
     break L183;
    } else {
     $197 = $251;
    }
   }
   if ((label | 0) == 147) {
    ___assert_fail(3584, 7776, 793, 10384);
   } else if ((label | 0) == 168) {
    ___assert_fail(5032, 7256, 504, 10544);
   } else if ((label | 0) == 170) {
    ___assert_fail(1536, 7256, 505, 10544);
   } else if ((label | 0) == 172) {
    ___assert_fail(1096, 7256, 506, 10544);
   }
  }
 } while (0);
 L235 : do {
  if ($cmp62_i) {
   $i_019_i = 0;
   $nqueue_020_i = 0;
   L236 : while (1) {
    $255 = HEAP32[$0 + ($i_019_i << 2) >> 2] | 0;
    L238 : do {
     if ((HEAP8[$255 + 1 >> 0] | 0) == 1) {
      $257 = HEAP8[$255 + 576 >> 0] | 0;
      if (($257 << 24 >> 24 | 0) == 0 | ($257 << 24 >> 24 | 0) == 6) {
       $nqueue_1_i168 = $nqueue_020_i;
      } else {
       if ((HEAP8[$255 + 496 >> 0] & 16) == 0) {
        $nqueue_1_i168 = $nqueue_020_i;
       } else {
        $topologyOptTime_i = $255 + 348 | 0;
        $add_i130 = +HEAPF32[$topologyOptTime_i >> 2] + $dt;
        HEAPF32[$topologyOptTime_i >> 2] = $add_i130;
        if ($add_i130 < .5) {
         $nqueue_1_i168 = $nqueue_020_i;
        } else {
         do {
          if (($nqueue_020_i | 0) == 0) {
           $slot_0_i_i162 = 0;
          } else {
           $cmp63_i_i135 = ($nqueue_020_i | 0) > 0;
           if (!($add_i130 > +HEAPF32[(HEAP32[$queue_i120 + ($nqueue_020_i - 1 << 2) >> 2] | 0) + 348 >> 2])) {
            if ($cmp63_i_i135) {
             $nqueue_1_i168 = $nqueue_020_i;
             break L238;
            } else {
             $slot_0_i_i162 = $nqueue_020_i;
             break;
            }
           }
           L248 : do {
            if ($cmp63_i_i135) {
             $i_04_i_i141 = 0;
             while (1) {
              $inc_i_i144 = $i_04_i_i141 + 1 | 0;
              if (!($add_i130 < +HEAPF32[(HEAP32[$queue_i120 + ($i_04_i_i141 << 2) >> 2] | 0) + 348 >> 2])) {
               $i_0_lcssa_i_i146 = $i_04_i_i141;
               break L248;
              }
              if (($inc_i_i144 | 0) < ($nqueue_020_i | 0)) {
               $i_04_i_i141 = $inc_i_i144;
              } else {
               $i_0_lcssa_i_i146 = $inc_i_i144;
               break;
              }
             }
            } else {
             $i_0_lcssa_i_i146 = 0;
            }
           } while (0);
           $add_i_i147 = $i_0_lcssa_i_i146 + 1 | 0;
           $sub13_i_i148 = $nqueue_020_i - $i_0_lcssa_i_i146 | 0;
           $sub14_i_i149 = -$i_0_lcssa_i_i146 | 0;
           $cond_i_i_i151 = ($sub13_i_i148 | 0) < ($sub14_i_i149 | 0) ? $sub13_i_i148 : $sub14_i_i149;
           if (($cond_i_i_i151 + $add_i_i147 | 0) >= 2) {
            label = 190;
            break L236;
           }
           if (($cond_i_i_i151 | 0) > 0) {
            _memmove($queue_i120 + ($add_i_i147 << 2) | 0, $queue_i120 + ($i_0_lcssa_i_i146 << 2) | 0, $cond_i_i_i151 << 2 | 0) | 0;
            $slot_0_i_i162 = $i_0_lcssa_i_i146;
           } else {
            $slot_0_i_i162 = $i_0_lcssa_i_i146;
           }
          }
         } while (0);
         HEAP32[$queue_i120 + ($slot_0_i_i162 << 2) >> 2] = $255;
         $add25_i_i164 = $nqueue_020_i + 1 | 0;
         $nqueue_1_i168 = ($add25_i_i164 | 0) < 1 ? $add25_i_i164 : 1;
        }
       }
      }
     } else {
      $nqueue_1_i168 = $nqueue_020_i;
     }
    } while (0);
    $i_019_i = $i_019_i + 1 | 0;
    if (($i_019_i | 0) >= ($n_0_lcssa_i | 0)) {
     break;
    } else {
     $nqueue_020_i = $nqueue_1_i168;
    }
   }
   if ((label | 0) == 190) {
    ___assert_fail(5368, 7776, 245, 10624);
   }
   if (($nqueue_1_i168 | 0) > 0) {
    $m_navquery_i121 = $this + 1e3 | 0;
    $m_filter_i122 = $this + 732 | 0;
    $arraydecay16_i_i = $reqPath_i | 0;
    $i20_015_i = 0;
    while (1) {
     $266 = HEAP32[$queue_i120 + ($i20_015_i << 2) >> 2] | 0;
     $267 = HEAP32[$m_navquery_i121 >> 2] | 0;
     if (($267 | 0) == 0) {
      label = 196;
      break;
     }
     $m_path_i_i173 = $266 + 28 | 0;
     $268 = HEAP32[$m_path_i_i173 >> 2] | 0;
     if (($268 | 0) == 0) {
      label = 198;
      break;
     }
     $m_npath_i_i174 = $266 + 32 | 0;
     $269 = HEAP32[$m_npath_i_i174 >> 2] | 0;
     if (($269 | 0) >= 3) {
      HEAP32[$nres_i_i >> 2] = 0;
      __ZN14dtNavMeshQuery18initSlicedFindPathEjjPKfS1_PK13dtQueryFilter($267, HEAP32[$268 >> 2] | 0, HEAP32[$268 + ($269 - 1 << 2) >> 2] | 0, $266 + 4 | 0, $266 + 16 | 0, $m_filter_i122) | 0;
      __ZN14dtNavMeshQuery20updateSlicedFindPathEiPi($267, 32, 0) | 0;
      $cmp_i_i6_i = ((__ZN14dtNavMeshQuery29finalizeSlicedFindPathPartialEPKjiPjPii($267, HEAP32[$m_path_i_i173 >> 2] | 0, HEAP32[$m_npath_i_i174 >> 2] | 0, $arraydecay16_i_i, $nres_i_i) | 0) & 1073741824 | 0) != 0;
      $274 = HEAP32[$nres_i_i >> 2] | 0;
      if ($cmp_i_i6_i & ($274 | 0) > 0) {
       $275 = HEAP32[$m_path_i_i173 >> 2] | 0;
       $276 = HEAP32[$m_npath_i_i174 >> 2] | 0;
       $277 = HEAP32[$266 + 36 >> 2] | 0;
       $furthestPath_0_us_i_i_i = -1;
       $i_0_in_us_i_i_i = $276;
       $furthestVisited_0_us_i_i_i = -1;
       while (1) {
        $i_0_us_i_i_i = $i_0_in_us_i_i_i - 1 | 0;
        if (($i_0_in_us_i_i_i | 0) <= 0) {
         $furthestPath_3_i_i_i = $furthestPath_0_us_i_i_i;
         $furthestVisited_3_i_i_i = $furthestVisited_0_us_i_i_i;
         break;
        }
        $279 = HEAP32[$275 + ($i_0_us_i_i_i << 2) >> 2] | 0;
        $furthestVisited_135_us_i_i_i = $furthestVisited_0_us_i_i_i;
        $found_0_off036_us_i_i_i = 0;
        $furthestPath_137_us_i_i_i = $furthestPath_0_us_i_i_i;
        $j_038_us_in_i_i_i = $274;
        do {
         $j_038_us_in_i_i_i = $j_038_us_in_i_i_i - 1 | 0;
         $cmp6_us_i_i_i = ($279 | 0) == (HEAP32[$reqPath_i + ($j_038_us_in_i_i_i << 2) >> 2] | 0);
         $furthestVisited_135_us_i_i_i = $cmp6_us_i_i_i ? $j_038_us_in_i_i_i : $furthestVisited_135_us_i_i_i;
         $found_0_off036_us_i_i_i = $cmp6_us_i_i_i | $found_0_off036_us_i_i_i;
         $furthestPath_137_us_i_i_i = $cmp6_us_i_i_i ? $i_0_us_i_i_i : $furthestPath_137_us_i_i_i;
        } while (($j_038_us_in_i_i_i | 0) > 0);
        if ($found_0_off036_us_i_i_i) {
         $furthestPath_3_i_i_i = $furthestPath_137_us_i_i_i;
         $furthestVisited_3_i_i_i = $furthestVisited_135_us_i_i_i;
         break;
        } else {
         $furthestPath_0_us_i_i_i = $furthestPath_137_us_i_i_i;
         $i_0_in_us_i_i_i = $i_0_us_i_i_i;
         $furthestVisited_0_us_i_i_i = $furthestVisited_135_us_i_i_i;
        }
       }
       if (($furthestPath_3_i_i_i | 0) == -1 | ($furthestVisited_3_i_i_i | 0) == -1 | ($furthestVisited_3_i_i_i | 0) < 1) {
        $retval_0_i_i_i184 = $276;
       } else {
        $sub19_i_i_i = $276 - $furthestPath_3_i_i_i | 0;
        $cond_i_i_i_i = ($sub19_i_i_i | 0) < 0 ? 0 : $sub19_i_i_i;
        $sub22_call_i_i_i = ($cond_i_i_i_i + $furthestVisited_3_i_i_i | 0) > ($277 | 0) ? $277 - $furthestVisited_3_i_i_i | 0 : $cond_i_i_i_i;
        if (($sub22_call_i_i_i | 0) != 0) {
         _memmove($275 + ($furthestVisited_3_i_i_i << 2) | 0, $275 + ($furthestPath_3_i_i_i << 2) | 0, $sub22_call_i_i_i << 2 | 0) | 0;
        }
        if (($furthestVisited_3_i_i_i | 0) > 0) {
         $i28_032_i_i_i = 0;
         do {
          HEAP32[$275 + ($i28_032_i_i_i << 2) >> 2] = HEAP32[$reqPath_i + ($i28_032_i_i_i << 2) >> 2];
          $i28_032_i_i_i = $i28_032_i_i_i + 1 | 0;
         } while (($i28_032_i_i_i | 0) < ($furthestVisited_3_i_i_i | 0));
        }
        $retval_0_i_i_i184 = $sub22_call_i_i_i + $furthestVisited_3_i_i_i | 0;
       }
       HEAP32[$m_npath_i_i174 >> 2] = $retval_0_i_i_i184;
      }
     }
     HEAPF32[$266 + 348 >> 2] = 0.0;
     $i20_015_i = $i20_015_i + 1 | 0;
     if (($i20_015_i | 0) >= ($nqueue_1_i168 | 0)) {
      break L235;
     }
    }
    if ((label | 0) == 196) {
     ___assert_fail(3360, 7256, 355, 10488);
    } else if ((label | 0) == 198) {
     ___assert_fail(5032, 7256, 357, 10488);
    }
   }
  }
 } while (0);
 $m_grid = $this + 708 | 0;
 $283 = HEAP32[$m_grid >> 2] | 0;
 _memset(HEAP32[$283 + 24 >> 2] | 0, -1 | 0, HEAP32[$283 + 28 >> 2] << 1 | 0) | 0;
 HEAP32[$283 + 16 >> 2] = 0;
 HEAP32[$283 + 32 >> 2] = 65535;
 HEAP32[$283 + 36 >> 2] = 65535;
 HEAP32[$283 + 40 >> 2] = -65535;
 HEAP32[$283 + 44 >> 2] = -65535;
 if ($cmp62_i) {
  $i_0540 = 0;
  do {
   $293 = HEAP32[$0 + ($i_0540 << 2) >> 2] | 0;
   $294 = +HEAPF32[$293 + 468 >> 2];
   $295 = HEAP32[$m_grid >> 2] | 0;
   $conv = $i_0540 & 65535;
   $296 = +HEAPF32[$293 + 408 >> 2];
   $297 = +HEAPF32[$293 + 416 >> 2];
   $m_invCellSize_i = $295 + 8 | 0;
   $conv_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i >> 2] * ($296 - $294));
   $conv5_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i >> 2] * ($297 - $294));
   $conv9_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i >> 2] * ($294 + $296));
   $conv13_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i >> 2] * ($294 + $297));
   $arrayidx_i195 = $295 + 32 | 0;
   $302 = HEAP32[$arrayidx_i195 >> 2] | 0;
   HEAP32[$arrayidx_i195 >> 2] = ($302 | 0) < ($conv_i | 0) ? $302 : $conv_i;
   $arrayidx18_i = $295 + 36 | 0;
   $303 = HEAP32[$arrayidx18_i >> 2] | 0;
   HEAP32[$arrayidx18_i >> 2] = ($303 | 0) < ($conv5_i | 0) ? $303 : $conv5_i;
   $arrayidx23_i = $295 + 40 | 0;
   $304 = HEAP32[$arrayidx23_i >> 2] | 0;
   HEAP32[$arrayidx23_i >> 2] = ($304 | 0) > ($conv9_i | 0) ? $304 : $conv9_i;
   $arrayidx28_i = $295 + 44 | 0;
   $305 = HEAP32[$arrayidx28_i >> 2] | 0;
   HEAP32[$arrayidx28_i >> 2] = ($305 | 0) > ($conv13_i | 0) ? $305 : $conv13_i;
   if (($conv5_i | 0) <= ($conv13_i | 0)) {
    $m_poolHead_i198 = $295 + 16 | 0;
    $m_bucketsSize_i199 = $295 + 28 | 0;
    $m_pool_i = $295 + 12 | 0;
    $m_buckets_i200 = $295 + 24 | 0;
    if (($conv_i | 0) <= ($conv9_i | 0)) {
     $306 = HEAP32[$295 + 20 >> 2] | 0;
     $y_025_i = $conv5_i;
     $_pre_i = HEAP32[$m_poolHead_i198 >> 2] | 0;
     while (1) {
      $mul1_i_i = Math_imul($y_025_i, 19349663) | 0;
      $conv43_i = $y_025_i & 65535;
      $x_023_i = $conv_i;
      $307 = $_pre_i;
      while (1) {
       if (($307 | 0) < ($306 | 0)) {
        $and_i_i203 = (HEAP32[$m_bucketsSize_i199 >> 2] | 0) - 1 & ((Math_imul($x_023_i, 73856093) | 0) ^ $mul1_i_i);
        $inc_i204 = $307 + 1 | 0;
        HEAP32[$m_poolHead_i198 >> 2] = $inc_i204;
        $idxprom_i = $307 & 65535;
        $309 = HEAP32[$m_pool_i >> 2] | 0;
        HEAP16[$309 + ($idxprom_i << 3) + 2 >> 1] = $x_023_i;
        HEAP16[$309 + ($idxprom_i << 3) + 4 >> 1] = $conv43_i;
        HEAP16[$309 + ($idxprom_i << 3) >> 1] = $conv;
        $arrayidx46_i = (HEAP32[$m_buckets_i200 >> 2] | 0) + ($and_i_i203 << 1) | 0;
        HEAP16[$309 + ($idxprom_i << 3) + 6 >> 1] = HEAP16[$arrayidx46_i >> 1] | 0;
        HEAP16[$arrayidx46_i >> 1] = $307;
        $312 = $inc_i204;
       } else {
        $312 = $307;
       }
       if (($x_023_i | 0) < ($conv9_i | 0)) {
        $x_023_i = $x_023_i + 1 | 0;
        $307 = $312;
       } else {
        break;
       }
      }
      if (($y_025_i | 0) < ($conv13_i | 0)) {
       $y_025_i = $y_025_i + 1 | 0;
       $_pre_i = $312;
      } else {
       break;
      }
     }
    }
   }
   $i_0540 = $i_0540 + 1 | 0;
  } while (($i_0540 | 0) < ($n_0_lcssa_i | 0));
  $m_navquery33 = $this + 1e3 | 0;
  $m_agents_i418 = $this + 4 | 0;
  $arrayidx_i2_i = $stack_i_i | 0;
  $m_includeFlags_i_i_i304 = $this + 988 | 0;
  $m_excludeFlags_i_i_i305 = $this + 990 | 0;
  $arraydecay_i_i306 = $agentPos_i | 0;
  $arraydecay50_i_i = $nearest_i | 0;
  $arraydecay128_i_i = $pa_i_i | 0;
  $arraydecay129_i_i = $pb_i_i | 0;
  $arrayidx2_i27_i_i = $nearest_i + 8 | 0;
  $arrayidx3_i28_i_i = $agentPos_i + 8 | 0;
  $arrayidx3_i_i48_i_i_i = $pa_i_i + 8 | 0;
  $arrayidx3_i_i24_i_i_i = $pb_i_i + 8 | 0;
  $arraydecay_i384 = $ids_i | 0;
  $i9_0538 = 0;
  L306 : while (1) {
   $315 = HEAP32[$0 + ($i9_0538 << 2) >> 2] | 0;
   L308 : do {
    if ((HEAP8[$315 + 1 >> 0] | 0) == 1) {
     $collisionQueryRange = $315 + 484 | 0;
     $317 = +HEAPF32[$collisionQueryRange >> 2];
     $mul = $317 * .25;
     $arraydecay19 = $315 + 408 | 0;
     $arraydecay_i300 = $315 + 40 | 0;
     $319 = +HEAPF32[$arraydecay19 >> 2];
     $sub_i388 = +HEAPF32[$arraydecay_i300 >> 2] - $319;
     $arrayidx2_i389 = $315 + 48 | 0;
     $arrayidx3_i390 = $315 + 416 | 0;
     $321 = +HEAPF32[$arrayidx3_i390 >> 2];
     $sub4_i391 = +HEAPF32[$arrayidx2_i389 >> 2] - $321;
     L310 : do {
      if ($sub_i388 * $sub_i388 + $sub4_i391 * $sub4_i391 > $mul * $mul) {
       label = 239;
      } else {
       $322 = HEAP32[$m_navquery33 >> 2] | 0;
       $323 = HEAP32[$315 + 344 >> 2] | 0;
       if (($323 | 0) == 0) {
        label = 239;
       } else {
        if (($323 | 0) > 0) {
         $324 = HEAP32[$322 >> 2] | 0;
         $m_tileBits_i_i_i216 = $324 + 76 | 0;
         $m_polyBits_i_i_i219 = $324 + 80 | 0;
         $m_maxTiles_i_i225 = $324 + 48 | 0;
         $m_saltBits_i_i_i228 = $324 + 72 | 0;
         $m_tiles_i_i234 = $324 + 68 | 0;
         $i_04_i = 0;
         while (1) {
          $325 = HEAP32[$315 + 280 + ($i_04_i << 2) >> 2] | 0;
          if (($325 | 0) == 0) {
           label = 239;
           break L310;
          }
          $326 = HEAP32[$m_tileBits_i_i_i216 >> 2] | 0;
          $327 = HEAP32[$m_polyBits_i_i_i219 >> 2] | 0;
          $and10_i_i_i223 = $325 >>> ($327 >>> 0) & (1 << $326) - 1;
          $and11_i_i_i224 = (1 << $327) - 1 & $325;
          if (!($and10_i_i_i223 >>> 0 < (HEAP32[$m_maxTiles_i_i225 >> 2] | 0) >>> 0)) {
           label = 239;
           break L310;
          }
          $330 = HEAP32[$m_tiles_i_i234 >> 2] | 0;
          if ((HEAP32[$330 + ($and10_i_i_i223 * 60 | 0) >> 2] | 0) != ((1 << HEAP32[$m_saltBits_i_i_i228 >> 2]) - 1 & $325 >>> (($327 + $326 | 0) >>> 0) | 0)) {
           label = 239;
           break L310;
          }
          $332 = HEAP32[$330 + ($and10_i_i_i223 * 60 | 0) + 8 >> 2] | 0;
          if (($332 | 0) == 0) {
           label = 239;
           break L310;
          }
          if (!($and11_i_i_i224 >>> 0 < (HEAP32[$332 + 24 >> 2] | 0) >>> 0)) {
           label = 239;
           break L310;
          }
          $335 = HEAP16[(HEAP32[$330 + ($and10_i_i_i223 * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i_i224 << 5) + 28 >> 1] | 0;
          if ((HEAP16[$m_includeFlags_i_i_i304 >> 1] & $335) << 16 >> 16 == 0) {
           label = 239;
           break L310;
          }
          $inc_i260 = $i_04_i + 1 | 0;
          if (!((HEAP16[$m_excludeFlags_i_i_i305 >> 1] & $335) << 16 >> 16 == 0)) {
           label = 239;
           break L310;
          }
          if (($inc_i260 | 0) < ($323 | 0)) {
           $i_04_i = $inc_i260;
          } else {
           $536 = $317;
           $535 = $319;
           $534 = $321;
           break;
          }
         }
        } else {
         $536 = $317;
         $535 = $319;
         $534 = $321;
        }
       }
      }
     } while (0);
     if ((label | 0) == 239) {
      label = 0;
      if ((HEAP32[$315 + 32 >> 2] | 0) == 0) {
       label = 241;
      } else {
       $340 = HEAP32[HEAP32[$315 + 28 >> 2] >> 2] | 0;
       $341 = HEAP32[$m_navquery33 >> 2] | 0;
       if (($340 | 0) == 0) {
        label = 241;
       } else {
        HEAPF32[$arraydecay_i300 >> 2] = $319;
        HEAPF32[$315 + 44 >> 2] = +HEAPF32[$315 + 412 >> 2];
        HEAPF32[$arrayidx2_i389 >> 2] = $321;
        $arraydecay4_i = $315 + 280 | 0;
        $m_npolys5_i = $315 + 344 | 0;
        HEAP32[$m_npolys5_i >> 2] = 0;
        $m_nav_i_i275 = $341 | 0;
        $343 = HEAP32[$m_nav_i_i275 >> 2] | 0;
        $344 = HEAP32[$343 + 76 >> 2] | 0;
        $345 = HEAP32[$343 + 80 >> 2] | 0;
        $and10_i_i_i_i284 = $340 >>> ($345 >>> 0) & (1 << $344) - 1;
        $and11_i_i_i_i285 = (1 << $345) - 1 & $340;
        if ($and10_i_i_i_i284 >>> 0 < (HEAP32[$343 + 48 >> 2] | 0) >>> 0) {
         $348 = HEAP32[$343 + 68 >> 2] | 0;
         if ((HEAP32[$348 + ($and10_i_i_i_i284 * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$343 + 72 >> 2]) - 1 & $340 >>> (($345 + $344 | 0) >>> 0) | 0)) {
          $350 = HEAP32[$348 + ($and10_i_i_i_i284 * 60 | 0) + 8 >> 2] | 0;
          if (($350 | 0) != 0) {
           if ($and11_i_i_i_i285 >>> 0 < (HEAP32[$350 + 24 >> 2] | 0) >>> 0) {
            $m_tinyNodePool_i_i = $341 + 52 | 0;
            $352 = HEAP32[$m_tinyNodePool_i_i >> 2] | 0;
            _memset(HEAP32[$352 + 4 >> 2] | 0, -1 | 0, HEAP32[$352 + 16 >> 2] << 1 | 0) | 0;
            HEAP32[$352 + 20 >> 2] = 0;
            $call3_i_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_tinyNodePool_i_i >> 2] | 0, $340) | 0;
            HEAP32[$call3_i_i + 24 >> 2] = $340;
            HEAP32[$call3_i_i + 20 >> 2] = -2147483648;
            HEAP32[$arrayidx_i2_i >> 2] = $call3_i_i;
            $mul_i_i_i303 = $317 * $317;
            HEAP32[$arraydecay4_i >> 2] = $340;
            $n_092_i_i = 1;
            $status_093_i_i = 1073741824;
            $nstack_094_i_i = 1;
            $358 = $call3_i_i;
            while (1) {
             $sub_i4_i = $nstack_094_i_i - 1 | 0;
             if (($sub_i4_i | 0) > 0) {
              $i_070_i_i = 0;
              do {
               $i_070_i_i$looptemp = $i_070_i_i;
               $i_070_i_i = $i_070_i_i + 1 | 0;
               HEAP32[$stack_i_i + ($i_070_i_i$looptemp << 2) >> 2] = HEAP32[$stack_i_i + ($i_070_i_i << 2) >> 2];
              } while (($i_070_i_i | 0) < ($sub_i4_i | 0));
             }
             $360 = HEAP32[$358 + 24 >> 2] | 0;
             $361 = HEAP32[$m_nav_i_i275 >> 2] | 0;
             $363 = HEAP32[$361 + 80 >> 2] | 0;
             $and10_i_i56_i_i = $360 >>> ($363 >>> 0) & (1 << HEAP32[$361 + 76 >> 2]) - 1;
             $364 = HEAP32[$361 + 68 >> 2] | 0;
             $arrayidx_i59_i_i = $364 + ($and10_i_i56_i_i * 60 | 0) | 0;
             $arrayidx4_i61_i_i = (HEAP32[$364 + ($and10_i_i56_i_i * 60 | 0) + 12 >> 2] | 0) + (((1 << $363) - 1 & $360) << 5) | 0;
             $firstLink_i_i = $arrayidx4_i61_i_i | 0;
             $i24_080_i_i = HEAP32[$firstLink_i_i >> 2] | 0;
             if (($i24_080_i_i | 0) == -1) {
              $n_1_lcssa_i_i = $n_092_i_i;
              $status_1_lcssa_i_i = $status_093_i_i;
              $nstack_1_lcssa_i_i = $sub_i4_i;
             } else {
              $tobool_i_i_i310 = ($358 | 0) == 0;
              $sub_ptr_lhs_cast_i_i_i = $358;
              $links_phi_trans_insert_i_i = $364 + ($and10_i_i56_i_i * 60 | 0) + 20 | 0;
              $n_182_i_i = $n_092_i_i;
              $status_184_i_i = $status_093_i_i;
              $nstack_186_i_i = $sub_i4_i;
              $i24_088_i_i = $i24_080_i_i;
              $366 = HEAP32[$links_phi_trans_insert_i_i >> 2] | 0;
              while (1) {
               $367 = HEAP32[$366 + ($i24_088_i_i * 12 | 0) >> 2] | 0;
               L343 : do {
                if (($367 | 0) == 0) {
                 $nstack_2_i_i = $nstack_186_i_i;
                 $status_3_i_i = $status_184_i_i;
                 $n_3_i_i = $n_182_i_i;
                } else {
                 $call33_i_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_tinyNodePool_i_i >> 2] | 0, $367) | 0;
                 if (($call33_i_i | 0) == 0) {
                  $nstack_2_i_i = $nstack_186_i_i;
                  $status_3_i_i = $status_184_i_i;
                  $n_3_i_i = $n_182_i_i;
                 } else {
                  $369 = $call33_i_i + 20 | 0;
                  if ((HEAP32[$369 >> 2] | 0) < 0) {
                   $nstack_2_i_i = $nstack_186_i_i;
                   $status_3_i_i = $status_184_i_i;
                   $n_3_i_i = $n_182_i_i;
                  } else {
                   $370 = HEAP32[$m_nav_i_i275 >> 2] | 0;
                   $372 = HEAP32[$370 + 80 >> 2] | 0;
                   $and10_i_i43_i_i = $367 >>> ($372 >>> 0) & (1 << HEAP32[$370 + 76 >> 2]) - 1;
                   $and11_i_i44_i_i = (1 << $372) - 1 & $367;
                   $373 = HEAP32[$370 + 68 >> 2] | 0;
                   $arrayidx_i46_i_i = $373 + ($and10_i_i43_i_i * 60 | 0) | 0;
                   $374 = HEAP32[$373 + ($and10_i_i43_i_i * 60 | 0) + 12 >> 2] | 0;
                   $arrayidx4_i48_i_i = $374 + ($and11_i_i44_i_i << 5) | 0;
                   if ((HEAP8[$374 + ($and11_i_i44_i_i << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
                    $nstack_2_i_i = $nstack_186_i_i;
                    $status_3_i_i = $status_184_i_i;
                    $n_3_i_i = $n_182_i_i;
                   } else {
                    $376 = HEAP16[$374 + ($and11_i_i44_i_i << 5) + 28 >> 1] | 0;
                    if ((HEAP16[$m_includeFlags_i_i_i304 >> 1] & $376) << 16 >> 16 == 0) {
                     $nstack_2_i_i = $nstack_186_i_i;
                     $status_3_i_i = $status_184_i_i;
                     $n_3_i_i = $n_182_i_i;
                    } else {
                     if ((HEAP16[$m_excludeFlags_i_i_i305 >> 1] & $376) << 16 >> 16 == 0) {
                      if ((__ZNK14dtNavMeshQuery15getPortalPointsEjPK6dtPolyPK10dtMeshTilejS2_S5_PfS6_($360, $arrayidx4_i61_i_i, $arrayidx_i59_i_i, $367, $arrayidx4_i48_i_i, $arrayidx_i46_i_i, $arraydecay_i_i306, $arraydecay50_i_i) | 0) == 0) {
                       $nstack_2_i_i = $nstack_186_i_i;
                       $status_3_i_i = $status_184_i_i;
                       $n_3_i_i = $n_182_i_i;
                      } else {
                       $380 = +HEAPF32[$arraydecay_i_i306 >> 2];
                       $sub_i26_i_i = +HEAPF32[$arraydecay50_i_i >> 2] - $380;
                       $382 = +HEAPF32[$arrayidx3_i28_i_i >> 2];
                       $sub4_i_i_i = +HEAPF32[$arrayidx2_i27_i_i >> 2] - $382;
                       $383 = +HEAPF32[$arraydecay19 >> 2];
                       $384 = +HEAPF32[$arrayidx3_i390 >> 2];
                       $add_i31_i_i = $sub_i26_i_i * $sub_i26_i_i + $sub4_i_i_i * $sub4_i_i_i;
                       $add14_i_i_i = $sub_i26_i_i * ($383 - $380) + $sub4_i_i_i * ($384 - $382);
                       if ($add_i31_i_i > 0.0) {
                        $storemerge_i_i_i = $add14_i_i_i / $add_i31_i_i;
                       } else {
                        $storemerge_i_i_i = $add14_i_i_i;
                       }
                       if ($storemerge_i_i_i < 0.0) {
                        $385 = 0.0;
                       } else {
                        if ($storemerge_i_i_i > 1.0) {
                         $385 = 1.0;
                        } else {
                         $385 = $storemerge_i_i_i;
                        }
                       }
                       $sub25_i_i_i = $380 + $sub_i26_i_i * $385 - $383;
                       $sub30_i_i_i = $sub4_i_i_i * $385 + $382 - $384;
                       if ($sub25_i_i_i * $sub25_i_i_i + $sub30_i_i_i * $sub30_i_i_i > $mul_i_i_i303) {
                        $nstack_2_i_i = $nstack_186_i_i;
                        $status_3_i_i = $status_184_i_i;
                        $n_3_i_i = $n_182_i_i;
                       } else {
                        $bf_set67_i_i = HEAP32[$369 >> 2] | -2147483648;
                        HEAP32[$369 >> 2] = $bf_set67_i_i;
                        if ($tobool_i_i_i310) {
                         $retval_0_i_i_i318 = 0;
                        } else {
                         $retval_0_i_i_i318 = (($sub_ptr_lhs_cast_i_i_i - (HEAP32[HEAP32[$m_tinyNodePool_i_i >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
                        }
                        HEAP32[$369 >> 2] = $bf_set67_i_i & -1073741824 | $retval_0_i_i_i318;
                        $388 = HEAP8[$374 + ($and11_i_i44_i_i << 5) + 30 >> 0] | 0;
                        $conv75_i_i = $388 & 255;
                        $cmp7771_i_i = $388 << 24 >> 24 == 0;
                        if (!$cmp7771_i_i) {
                         $389 = HEAP32[$373 + ($and10_i_i43_i_i * 60 | 0) + 16 >> 2] | 0;
                         $k_072_i_i = 0;
                         do {
                          $mul_i11_i = $k_072_i_i * 3 | 0;
                          $mul82_i_i = (HEAPU16[$374 + ($and11_i_i44_i_i << 5) + 4 + ($k_072_i_i << 1) >> 1] | 0) * 3 | 0;
                          HEAPF32[$pa_i_i + ($mul_i11_i << 2) >> 2] = +HEAPF32[$389 + ($mul82_i_i << 2) >> 2];
                          HEAPF32[$pa_i_i + ($mul_i11_i + 1 << 2) >> 2] = +HEAPF32[$389 + ($mul82_i_i + 1 << 2) >> 2];
                          HEAPF32[$pa_i_i + ($mul_i11_i + 2 << 2) >> 2] = +HEAPF32[$389 + ($mul82_i_i + 2 << 2) >> 2];
                          $k_072_i_i = $k_072_i_i + 1 | 0;
                         } while (($k_072_i_i | 0) < ($conv75_i_i | 0));
                        }
                        if (($n_182_i_i | 0) > 0) {
                         $cmp17_i51_i_i_i = ($388 & 255) >>> 0 > 1 >>> 0;
                         $sub_i_i_i324 = $conv75_i_i - 1 | 0;
                         $j_079_i_i = 0;
                         do {
                          $394 = HEAP32[$315 + 280 + ($j_079_i_i << 2) >> 2] | 0;
                          $k92_073_i_i = HEAP32[$firstLink_i_i >> 2] | 0;
                          L371 : do {
                           if (($k92_073_i_i | 0) == -1) {
                            label = 277;
                           } else {
                            $395 = HEAP32[$links_phi_trans_insert_i_i >> 2] | 0;
                            $k92_075_i_i = $k92_073_i_i;
                            while (1) {
                             if ((HEAP32[$395 + ($k92_075_i_i * 12 | 0) >> 2] | 0) == ($394 | 0)) {
                              break L371;
                             }
                             $k92_0_i_i = HEAP32[$395 + ($k92_075_i_i * 12 | 0) + 4 >> 2] | 0;
                             if (($k92_0_i_i | 0) == -1) {
                              label = 277;
                              break;
                             } else {
                              $k92_075_i_i = $k92_0_i_i;
                             }
                            }
                           }
                          } while (0);
                          L376 : do {
                           if ((label | 0) == 277) {
                            label = 0;
                            $397 = HEAP32[$m_nav_i_i275 >> 2] | 0;
                            $399 = HEAP32[$397 + 80 >> 2] | 0;
                            $and10_i_i21_i_i = $394 >>> ($399 >>> 0) & (1 << HEAP32[$397 + 76 >> 2]) - 1;
                            $and11_i_i22_i_i = (1 << $399) - 1 & $394;
                            $400 = HEAP32[$397 + 68 >> 2] | 0;
                            $401 = HEAP32[$400 + ($and10_i_i21_i_i * 60 | 0) + 12 >> 2] | 0;
                            $402 = HEAP8[$401 + ($and11_i_i22_i_i << 5) + 30 >> 0] | 0;
                            $conv112_i_i = $402 & 255;
                            $cmp11576_i_i = $402 << 24 >> 24 == 0;
                            if (!$cmp11576_i_i) {
                             $403 = HEAP32[$400 + ($and10_i_i21_i_i * 60 | 0) + 16 >> 2] | 0;
                             $k113_077_i_i = 0;
                             do {
                              $mul117_i_i = $k113_077_i_i * 3 | 0;
                              $mul122_i_i = (HEAPU16[$401 + ($and11_i_i22_i_i << 5) + 4 + ($k113_077_i_i << 1) >> 1] | 0) * 3 | 0;
                              HEAPF32[$pb_i_i + ($mul117_i_i << 2) >> 2] = +HEAPF32[$403 + ($mul122_i_i << 2) >> 2];
                              HEAPF32[$pb_i_i + ($mul117_i_i + 1 << 2) >> 2] = +HEAPF32[$403 + ($mul122_i_i + 1 << 2) >> 2];
                              HEAPF32[$pb_i_i + ($mul117_i_i + 2 << 2) >> 2] = +HEAPF32[$403 + ($mul122_i_i + 2 << 2) >> 2];
                              $k113_077_i_i = $k113_077_i_i + 1 | 0;
                             } while (($k113_077_i_i | 0) < ($conv112_i_i | 0));
                            }
                            if (!$cmp7771_i_i) {
                             $408 = +HEAPF32[$arraydecay128_i_i >> 2];
                             $409 = +HEAPF32[$arrayidx3_i_i48_i_i_i >> 2];
                             $410 = +HEAPF32[$arraydecay129_i_i >> 2];
                             $411 = +HEAPF32[$arrayidx3_i_i24_i_i_i >> 2];
                             $cmp17_i81_i_i_i = ($402 & 255) >>> 0 > 1 >>> 0;
                             $j_0216_i_i_i = $sub_i_i_i324;
                             $i_0217_i_i_i = 0;
                             while (1) {
                              $mul_i7_i_i = $j_0216_i_i_i * 3 | 0;
                              $mul1_i_i_i = $i_0217_i_i_i * 3 | 0;
                              $sub5_i_i_i326 = +HEAPF32[$pa_i_i + ($mul1_i_i_i + 2 << 2) >> 2] - +HEAPF32[$pa_i_i + ($mul_i7_i_i + 2 << 2) >> 2];
                              $sub10_i_i_i = -0.0 - (+HEAPF32[$pa_i_i + ($mul1_i_i_i << 2) >> 2] - +HEAPF32[$pa_i_i + ($mul_i7_i_i << 2) >> 2]);
                              $add_i_i_i_i_i = $sub5_i_i_i326 * $408 + $409 * $sub10_i_i_i;
                              if ($cmp17_i51_i_i_i) {
                               $i_018_i_i_i_i = 1;
                               $416 = $add_i_i_i_i_i;
                               $amax_0_load130_i_i_i = $add_i_i_i_i_i;
                               while (1) {
                                $mul_i_i_i_i = $i_018_i_i_i_i * 3 | 0;
                                $add_i16_i_i_i_i = $sub5_i_i_i326 * +HEAPF32[$pa_i_i + ($mul_i_i_i_i << 2) >> 2] + +HEAPF32[$pa_i_i + ($mul_i_i_i_i + 2 << 2) >> 2] * $sub10_i_i_i;
                                $cond_i11_i_i_i_i = $416 < $add_i16_i_i_i_i ? $416 : $add_i16_i_i_i_i;
                                $cond_i_i_i_i_i = $amax_0_load130_i_i_i > $add_i16_i_i_i_i ? $amax_0_load130_i_i_i : $add_i16_i_i_i_i;
                                $inc_i_i_i_i = $i_018_i_i_i_i + 1 | 0;
                                if (($inc_i_i_i_i | 0) < ($conv75_i_i | 0)) {
                                 $i_018_i_i_i_i = $inc_i_i_i_i;
                                 $416 = $cond_i11_i_i_i_i;
                                 $amax_0_load130_i_i_i = $cond_i_i_i_i_i;
                                } else {
                                 $amax_0_load129_i_i_i = $cond_i_i_i_i_i;
                                 $amin_0_load131_i_i_i = $cond_i11_i_i_i_i;
                                 break;
                                }
                               }
                              } else {
                               $amax_0_load129_i_i_i = $add_i_i_i_i_i;
                               $amin_0_load131_i_i_i = $add_i_i_i_i_i;
                              }
                              $add_i_i80_i_i_i = $sub5_i_i_i326 * $410 + $411 * $sub10_i_i_i;
                              if ($cmp17_i81_i_i_i) {
                               $i_018_i82_i_i_i = 1;
                               $419 = $add_i_i80_i_i_i;
                               $bmax_0_load127_i_i_i = $add_i_i80_i_i_i;
                               while (1) {
                                $mul_i83_i_i_i = $i_018_i82_i_i_i * 3 | 0;
                                $add_i16_i89_i_i_i = $sub5_i_i_i326 * +HEAPF32[$pb_i_i + ($mul_i83_i_i_i << 2) >> 2] + +HEAPF32[$pb_i_i + ($mul_i83_i_i_i + 2 << 2) >> 2] * $sub10_i_i_i;
                                $cond_i11_i91_i_i_i = $419 < $add_i16_i89_i_i_i ? $419 : $add_i16_i89_i_i_i;
                                $cond_i_i93_i_i_i = $bmax_0_load127_i_i_i > $add_i16_i89_i_i_i ? $bmax_0_load127_i_i_i : $add_i16_i89_i_i_i;
                                $inc_i94_i_i_i = $i_018_i82_i_i_i + 1 | 0;
                                if (($inc_i94_i_i_i | 0) < ($conv112_i_i | 0)) {
                                 $i_018_i82_i_i_i = $inc_i94_i_i_i;
                                 $419 = $cond_i11_i91_i_i_i;
                                 $bmax_0_load127_i_i_i = $cond_i_i93_i_i_i;
                                } else {
                                 $bmax_0_load126_i_i_i = $cond_i_i93_i_i_i;
                                 $bmin_0_load128_i_i_i = $cond_i11_i91_i_i_i;
                                 break;
                                }
                               }
                              } else {
                               $bmax_0_load126_i_i_i = $add_i_i80_i_i_i;
                               $bmin_0_load128_i_i_i = $add_i_i80_i_i_i;
                              }
                              $inc_i_i_i329 = $i_0217_i_i_i + 1 | 0;
                              if (!($amin_0_load131_i_i_i + 9999999747378752.0e-20 <= $bmax_0_load126_i_i_i & $amax_0_load129_i_i_i + -9999999747378752.0e-20 >= $bmin_0_load128_i_i_i)) {
                               break L376;
                              }
                              if (($inc_i_i_i329 | 0) < ($conv75_i_i | 0)) {
                               $j_0216_i_i_i = $i_0217_i_i_i;
                               $i_0217_i_i_i = $inc_i_i_i329;
                              } else {
                               break;
                              }
                             }
                            }
                            $sub14_i_i_i = $conv112_i_i - 1 | 0;
                            if ($cmp11576_i_i) {
                             $nstack_2_i_i = $nstack_186_i_i;
                             $status_3_i_i = $status_184_i_i;
                             $n_3_i_i = $n_182_i_i;
                             break L343;
                            }
                            $422 = +HEAPF32[$arraydecay128_i_i >> 2];
                            $423 = +HEAPF32[$arrayidx3_i_i48_i_i_i >> 2];
                            $424 = +HEAPF32[$arraydecay129_i_i >> 2];
                            $425 = +HEAPF32[$arrayidx3_i_i24_i_i_i >> 2];
                            $cmp17_i27_i_i_i = ($402 & 255) >>> 0 > 1 >>> 0;
                            if ($cmp17_i51_i_i_i) {
                             $i12_0136_us_i_i_i = 0;
                             $j13_0137_us_i_i_i = $sub14_i_i_i;
                             while (1) {
                              $mul19_us_i_i_i = $j13_0137_us_i_i_i * 3 | 0;
                              $mul22_us_i_i_i = $i12_0136_us_i_i_i * 3 | 0;
                              $sub28_us_i_i_i = +HEAPF32[$pb_i_i + ($mul22_us_i_i_i + 2 << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_us_i_i_i + 2 << 2) >> 2];
                              $sub34_us_i_i_i = -0.0 - (+HEAPF32[$pb_i_i + ($mul22_us_i_i_i << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_us_i_i_i << 2) >> 2]);
                              $add_i_i50_us_i_i_i = $sub28_us_i_i_i * $422 + $423 * $sub34_us_i_i_i;
                              $i_018_i52_us_i_i_i = 1;
                              $426 = $add_i_i50_us_i_i_i;
                              $amax36_0_load124_us_i_i_i = $add_i_i50_us_i_i_i;
                              do {
                               $mul_i53_us_i_i_i = $i_018_i52_us_i_i_i * 3 | 0;
                               $add_i16_i59_us_i_i_i = $sub28_us_i_i_i * +HEAPF32[$pa_i_i + ($mul_i53_us_i_i_i << 2) >> 2] + +HEAPF32[$pa_i_i + ($mul_i53_us_i_i_i + 2 << 2) >> 2] * $sub34_us_i_i_i;
                               $426 = $426 < $add_i16_i59_us_i_i_i ? $426 : $add_i16_i59_us_i_i_i;
                               $amax36_0_load124_us_i_i_i = $amax36_0_load124_us_i_i_i > $add_i16_i59_us_i_i_i ? $amax36_0_load124_us_i_i_i : $add_i16_i59_us_i_i_i;
                               $i_018_i52_us_i_i_i = $i_018_i52_us_i_i_i + 1 | 0;
                              } while (($i_018_i52_us_i_i_i | 0) < ($conv75_i_i | 0));
                              $phitmp_i_i_i = $426 + 9999999747378752.0e-20;
                              $phitmp218_i_i_i = $amax36_0_load124_us_i_i_i + -9999999747378752.0e-20;
                              $add_i_i26_us_i_i_i = $sub28_us_i_i_i * $424 + $425 * $sub34_us_i_i_i;
                              if ($cmp17_i27_i_i_i) {
                               $i_018_i28_us_i_i_i = 1;
                               $429 = $add_i_i26_us_i_i_i;
                               $bmax38_0_load121_us_i_i_i = $add_i_i26_us_i_i_i;
                               while (1) {
                                $mul_i29_us_i_i_i = $i_018_i28_us_i_i_i * 3 | 0;
                                $add_i16_i35_us_i_i_i = $sub28_us_i_i_i * +HEAPF32[$pb_i_i + ($mul_i29_us_i_i_i << 2) >> 2] + +HEAPF32[$pb_i_i + ($mul_i29_us_i_i_i + 2 << 2) >> 2] * $sub34_us_i_i_i;
                                $cond_i11_i37_us_i_i_i = $429 < $add_i16_i35_us_i_i_i ? $429 : $add_i16_i35_us_i_i_i;
                                $cond_i_i39_us_i_i_i = $bmax38_0_load121_us_i_i_i > $add_i16_i35_us_i_i_i ? $bmax38_0_load121_us_i_i_i : $add_i16_i35_us_i_i_i;
                                $inc_i40_us_i_i_i = $i_018_i28_us_i_i_i + 1 | 0;
                                if (($inc_i40_us_i_i_i | 0) < ($conv112_i_i | 0)) {
                                 $i_018_i28_us_i_i_i = $inc_i40_us_i_i_i;
                                 $429 = $cond_i11_i37_us_i_i_i;
                                 $bmax38_0_load121_us_i_i_i = $cond_i_i39_us_i_i_i;
                                } else {
                                 $bmax38_0_load120_us_i_i_i = $cond_i_i39_us_i_i_i;
                                 $bmin37_0_load122_us_i_i_i = $cond_i11_i37_us_i_i_i;
                                 break;
                                }
                               }
                              } else {
                               $bmax38_0_load120_us_i_i_i = $add_i_i26_us_i_i_i;
                               $bmin37_0_load122_us_i_i_i = $add_i_i26_us_i_i_i;
                              }
                              $inc45_us_i_i_i = $i12_0136_us_i_i_i + 1 | 0;
                              if (!($phitmp_i_i_i <= $bmax38_0_load120_us_i_i_i & $phitmp218_i_i_i >= $bmin37_0_load122_us_i_i_i)) {
                               break L376;
                              }
                              if (($inc45_us_i_i_i | 0) < ($conv112_i_i | 0)) {
                               $j13_0137_us_i_i_i = $i12_0136_us_i_i_i;
                               $i12_0136_us_i_i_i = $inc45_us_i_i_i;
                              } else {
                               $nstack_2_i_i = $nstack_186_i_i;
                               $status_3_i_i = $status_184_i_i;
                               $n_3_i_i = $n_182_i_i;
                               break L343;
                              }
                             }
                            }
                            if ($cmp17_i27_i_i_i) {
                             $i12_0136_us140_i_i_i = 0;
                             $j13_0137_us139_i_i_i = $sub14_i_i_i;
                            } else {
                             $i12_0136_i_i_i = 0;
                             $j13_0137_i_i_i = $sub14_i_i_i;
                             while (1) {
                              $mul19_i_i_i = $j13_0137_i_i_i * 3 | 0;
                              $mul22_i_i_i = $i12_0136_i_i_i * 3 | 0;
                              $sub28_i_i_i = +HEAPF32[$pb_i_i + ($mul22_i_i_i + 2 << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_i_i_i + 2 << 2) >> 2];
                              $sub34_i_i_i = -0.0 - (+HEAPF32[$pb_i_i + ($mul22_i_i_i << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_i_i_i << 2) >> 2]);
                              $add_i_i50_i_i_i = $sub28_i_i_i * $422 + $423 * $sub34_i_i_i;
                              $add_i_i26_i_i_i = $sub28_i_i_i * $424 + $425 * $sub34_i_i_i;
                              $inc45_i_i_i = $i12_0136_i_i_i + 1 | 0;
                              if (!($add_i_i50_i_i_i + 9999999747378752.0e-20 <= $add_i_i26_i_i_i & $add_i_i50_i_i_i + -9999999747378752.0e-20 >= $add_i_i26_i_i_i)) {
                               break L376;
                              }
                              if (($inc45_i_i_i | 0) < ($conv112_i_i | 0)) {
                               $j13_0137_i_i_i = $i12_0136_i_i_i;
                               $i12_0136_i_i_i = $inc45_i_i_i;
                              } else {
                               $nstack_2_i_i = $nstack_186_i_i;
                               $status_3_i_i = $status_184_i_i;
                               $n_3_i_i = $n_182_i_i;
                               break L343;
                              }
                             }
                            }
                            while (1) {
                             $mul19_us141_i_i_i = $j13_0137_us139_i_i_i * 3 | 0;
                             $mul22_us143_i_i_i = $i12_0136_us140_i_i_i * 3 | 0;
                             $sub28_us149_i_i_i = +HEAPF32[$pb_i_i + ($mul22_us143_i_i_i + 2 << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_us141_i_i_i + 2 << 2) >> 2];
                             $sub34_us151_i_i_i = -0.0 - (+HEAPF32[$pb_i_i + ($mul22_us143_i_i_i << 2) >> 2] - +HEAPF32[$pb_i_i + ($mul19_us141_i_i_i << 2) >> 2]);
                             $add_i_i50_us154_i_i_i = $sub28_us149_i_i_i * $422 + $423 * $sub34_us151_i_i_i;
                             $add_i_i26_us180_i_i_i = $sub28_us149_i_i_i * $424 + $425 * $sub34_us151_i_i_i;
                             $i_018_i28_us183_i_i_i = 1;
                             $436 = $add_i_i26_us180_i_i_i;
                             $bmax38_0_load121_us182_i_i_i = $add_i_i26_us180_i_i_i;
                             do {
                              $mul_i29_us184_i_i_i = $i_018_i28_us183_i_i_i * 3 | 0;
                              $add_i16_i35_us190_i_i_i = $sub28_us149_i_i_i * +HEAPF32[$pb_i_i + ($mul_i29_us184_i_i_i << 2) >> 2] + +HEAPF32[$pb_i_i + ($mul_i29_us184_i_i_i + 2 << 2) >> 2] * $sub34_us151_i_i_i;
                              $436 = $436 < $add_i16_i35_us190_i_i_i ? $436 : $add_i16_i35_us190_i_i_i;
                              $bmax38_0_load121_us182_i_i_i = $bmax38_0_load121_us182_i_i_i > $add_i16_i35_us190_i_i_i ? $bmax38_0_load121_us182_i_i_i : $add_i16_i35_us190_i_i_i;
                              $i_018_i28_us183_i_i_i = $i_018_i28_us183_i_i_i + 1 | 0;
                             } while (($i_018_i28_us183_i_i_i | 0) < ($conv112_i_i | 0));
                             $inc45_us205_i_i_i = $i12_0136_us140_i_i_i + 1 | 0;
                             if (!($add_i_i50_us154_i_i_i + 9999999747378752.0e-20 <= $bmax38_0_load121_us182_i_i_i & $add_i_i50_us154_i_i_i + -9999999747378752.0e-20 >= $436)) {
                              break L376;
                             }
                             if (($inc45_us205_i_i_i | 0) < ($conv112_i_i | 0)) {
                              $j13_0137_us139_i_i_i = $i12_0136_us140_i_i_i;
                              $i12_0136_us140_i_i_i = $inc45_us205_i_i_i;
                             } else {
                              $nstack_2_i_i = $nstack_186_i_i;
                              $status_3_i_i = $status_184_i_i;
                              $n_3_i_i = $n_182_i_i;
                              break L343;
                             }
                            }
                           }
                          } while (0);
                          $j_079_i_i = $j_079_i_i + 1 | 0;
                         } while (($j_079_i_i | 0) < ($n_182_i_i | 0));
                         if (($n_182_i_i | 0) < 16) {
                          label = 305;
                         } else {
                          $status_2_i_i = $status_184_i_i | 16;
                          $n_2_i_i = $n_182_i_i;
                         }
                        } else {
                         label = 305;
                        }
                        if ((label | 0) == 305) {
                         label = 0;
                         HEAP32[$315 + 280 + ($n_182_i_i << 2) >> 2] = $367;
                         $status_2_i_i = $status_184_i_i;
                         $n_2_i_i = $n_182_i_i + 1 | 0;
                        }
                        if (($nstack_186_i_i | 0) < 48) {
                         HEAP32[$stack_i_i + ($nstack_186_i_i << 2) >> 2] = $call33_i_i;
                         $nstack_2_i_i = $nstack_186_i_i + 1 | 0;
                         $status_3_i_i = $status_2_i_i;
                         $n_3_i_i = $n_2_i_i;
                        } else {
                         $nstack_2_i_i = $nstack_186_i_i;
                         $status_3_i_i = $status_2_i_i;
                         $n_3_i_i = $n_2_i_i;
                        }
                       }
                      }
                     } else {
                      $nstack_2_i_i = $nstack_186_i_i;
                      $status_3_i_i = $status_184_i_i;
                      $n_3_i_i = $n_182_i_i;
                     }
                    }
                   }
                  }
                 }
                }
               } while (0);
               $447 = HEAP32[$links_phi_trans_insert_i_i >> 2] | 0;
               $i24_0_i_i = HEAP32[$447 + ($i24_088_i_i * 12 | 0) + 4 >> 2] | 0;
               if (($i24_0_i_i | 0) == -1) {
                $n_1_lcssa_i_i = $n_3_i_i;
                $status_1_lcssa_i_i = $status_3_i_i;
                $nstack_1_lcssa_i_i = $nstack_2_i_i;
                break;
               } else {
                $n_182_i_i = $n_3_i_i;
                $status_184_i_i = $status_3_i_i;
                $nstack_186_i_i = $nstack_2_i_i;
                $i24_088_i_i = $i24_0_i_i;
                $366 = $447;
               }
              }
             }
             if (($nstack_1_lcssa_i_i | 0) == 0) {
              break;
             }
             $n_092_i_i = $n_1_lcssa_i_i;
             $status_093_i_i = $status_1_lcssa_i_i;
             $nstack_094_i_i = $nstack_1_lcssa_i_i;
             $358 = HEAP32[$arrayidx_i2_i >> 2] | 0;
            }
            HEAP32[$m_npolys5_i >> 2] = $n_1_lcssa_i_i;
           }
          }
         }
        }
        $m_nsegs6_i = $315 + 276 | 0;
        HEAP32[$m_nsegs6_i >> 2] = 0;
        if ((HEAP32[$m_npolys5_i >> 2] | 0) > 0) {
         $mul_i15_i = $317 * $317;
         $arrayidx_i_i331 = $315 + 52 | 0;
         $j_019_i = 0;
         do {
          $449 = HEAP32[$315 + 280 + ($j_019_i << 2) >> 2] | 0;
          $450 = HEAP32[$m_nav_i_i275 >> 2] | 0;
          if (($449 | 0) != 0) {
           $451 = HEAP32[$450 + 76 >> 2] | 0;
           $452 = HEAP32[$450 + 80 >> 2] | 0;
           $and10_i_i_i21_i = $449 >>> ($452 >>> 0) & (1 << $451) - 1;
           $and11_i_i_i22_i = (1 << $452) - 1 & $449;
           if ($and10_i_i_i21_i >>> 0 < (HEAP32[$450 + 48 >> 2] | 0) >>> 0) {
            $455 = HEAP32[$450 + 68 >> 2] | 0;
            $arrayidx_i_i32_i = $455 + ($and10_i_i_i21_i * 60 | 0) | 0;
            $salt4_i_i33_i = $arrayidx_i_i32_i | 0;
            if ((HEAP32[$salt4_i_i33_i >> 2] | 0) == ((1 << HEAP32[$450 + 72 >> 2]) - 1 & $449 >>> (($452 + $451 | 0) >>> 0) | 0)) {
             $457 = HEAP32[$455 + ($and10_i_i_i21_i * 60 | 0) + 8 >> 2] | 0;
             if (($457 | 0) != 0) {
              if ($and11_i_i_i22_i >>> 0 < (HEAP32[$457 + 24 >> 2] | 0) >>> 0) {
               $459 = HEAP32[$455 + ($and10_i_i_i21_i * 60 | 0) + 12 >> 2] | 0;
               $vertCount_i45_i = $459 + ($and11_i_i_i22_i << 5) + 30 | 0;
               $460 = HEAP8[$vertCount_i45_i >> 0] | 0;
               if (!($460 << 24 >> 24 == 0)) {
                $verts54_i_i = $455 + ($and10_i_i_i21_i * 60 | 0) + 16 | 0;
                $polys_i_i343 = $455 + ($and10_i_i_i21_i * 60 | 0) + 12 | 0;
                $tobool_i4_i_i = ($arrayidx_i_i32_i | 0) == 0;
                $sub_ptr_lhs_cast_i_i61_i = $arrayidx_i_i32_i;
                $firstLink_i53_i = $459 + ($and11_i_i_i22_i << 5) | 0;
                $links_phi_trans_insert_i55_i = $455 + ($and10_i_i_i21_i * 60 | 0) + 20 | 0;
                $j_0226_i_i = ($460 & 255) - 1 | 0;
                $i_0227_i_i = 0;
                $status_0228_i_i = 1073741824;
                $n_0229_i_i = 0;
                while (1) {
                 $461 = HEAP16[$459 + ($and11_i_i_i22_i << 5) + 16 + ($j_0226_i_i << 1) >> 1] | 0;
                 $conv6_i_i = $461 & 65535;
                 do {
                  if (($conv6_i_i & 32768 | 0) == 0) {
                   if (!($461 << 16 >> 16 == 0)) {
                    $sub38_i_i = $conv6_i_i - 1 | 0;
                    $482 = HEAP16[(HEAP32[$polys_i_i343 >> 2] | 0) + ($sub38_i_i << 5) + 28 >> 1] | 0;
                    if (!((HEAP16[$m_includeFlags_i_i_i304 >> 1] & $482) << 16 >> 16 == 0)) {
                     $484 = HEAP32[$m_nav_i_i275 >> 2] | 0;
                     if ($tobool_i4_i_i) {
                      $retval_0_i11_i_i = 0;
                     } else {
                      $487 = HEAP32[$484 + 80 >> 2] | 0;
                      $retval_0_i11_i_i = HEAP32[$salt4_i_i33_i >> 2] << (HEAP32[$484 + 76 >> 2] | 0) + $487 | (($sub_ptr_lhs_cast_i_i61_i - (HEAP32[$484 + 68 >> 2] | 0) | 0) / 60 | 0) << $487;
                     }
                     if (!(($retval_0_i11_i_i | $sub38_i_i | 0) == 0 | (HEAP16[$m_excludeFlags_i_i_i305 >> 1] & $482) << 16 >> 16 != 0)) {
                      $n_4_i_i = $n_0229_i_i;
                      $status_4_i_i = $status_0228_i_i;
                      break;
                     }
                    }
                   }
                   if (($n_0229_i_i | 0) < 18) {
                    $mul_i67_i = (HEAPU16[$459 + ($and11_i_i_i22_i << 5) + 4 + ($j_0226_i_i << 1) >> 1] | 0) * 3 | 0;
                    $491 = HEAP32[$verts54_i_i >> 2] | 0;
                    $mul59_i_i = (HEAPU16[$459 + ($and11_i_i_i22_i << 5) + 4 + ($i_0227_i_i << 1) >> 1] | 0) * 3 | 0;
                    $mul62_i_i = $n_0229_i_i * 6 | 0;
                    HEAPF32[$segs_i + ($mul62_i_i << 2) >> 2] = +HEAPF32[$491 + ($mul_i67_i << 2) >> 2];
                    HEAPF32[$segs_i + (($mul62_i_i | 1) << 2) >> 2] = +HEAPF32[$491 + ($mul_i67_i + 1 << 2) >> 2];
                    HEAPF32[$segs_i + ($mul62_i_i + 2 << 2) >> 2] = +HEAPF32[$491 + ($mul_i67_i + 2 << 2) >> 2];
                    HEAPF32[$segs_i + ($mul62_i_i + 3 << 2) >> 2] = +HEAPF32[$491 + ($mul59_i_i << 2) >> 2];
                    HEAPF32[$segs_i + ($mul62_i_i + 4 << 2) >> 2] = +HEAPF32[$491 + ($mul59_i_i + 1 << 2) >> 2];
                    HEAPF32[$segs_i + ($mul62_i_i + 5 << 2) >> 2] = +HEAPF32[$491 + ($mul59_i_i + 2 << 2) >> 2];
                    $n_4_i_i = $n_0229_i_i + 1 | 0;
                    $status_4_i_i = $status_0228_i_i;
                    break;
                   } else {
                    $n_4_i_i = $n_0229_i_i;
                    $status_4_i_i = $status_0228_i_i | 16;
                    break;
                   }
                  } else {
                   $k_0214_i_i = HEAP32[$firstLink_i53_i >> 2] | 0;
                   if (($k_0214_i_i | 0) == -1) {
                    $_lcssa235237239_i_i = 0;
                    $idx_0_lcssa_i124240_i_i = 0;
                    label = 349;
                   } else {
                    $463 = 0;
                    $k_0216_i_i = $k_0214_i_i;
                    $462 = HEAP32[$links_phi_trans_insert_i55_i >> 2] | 0;
                    while (1) {
                     if ((HEAPU8[$462 + ($k_0216_i_i * 12 | 0) + 8 >> 0] | 0) == ($j_0226_i_i | 0)) {
                      $465 = HEAP32[$462 + ($k_0216_i_i * 12 | 0) >> 2] | 0;
                      if (($465 | 0) == 0) {
                       $480 = $463;
                       $479 = $462;
                      } else {
                       $466 = HEAP32[$m_nav_i_i275 >> 2] | 0;
                       $468 = HEAP32[$466 + 80 >> 2] | 0;
                       $471 = HEAP16[(HEAP32[(HEAP32[$466 + 68 >> 2] | 0) + (($465 >>> ($468 >>> 0) & (1 << HEAP32[$466 + 76 >> 2]) - 1) * 60 | 0) + 12 >> 2] | 0) + (((1 << $468) - 1 & $465) << 5) + 28 >> 1] | 0;
                       if ((HEAP16[$m_includeFlags_i_i_i304 >> 1] & $471) << 16 >> 16 == 0) {
                        $480 = $463;
                        $479 = $462;
                       } else {
                        if ((HEAP16[$m_excludeFlags_i_i_i305 >> 1] & $471) << 16 >> 16 == 0) {
                         $conv23_i_i = HEAPU8[$462 + ($k_0216_i_i * 12 | 0) + 10 >> 0] | 0;
                         $conv24_i_i = HEAPU8[$462 + ($k_0216_i_i * 12 | 0) + 11 >> 0] | 0;
                         if (($463 | 0) > 15) {
                          $480 = $463;
                          $479 = $462;
                         } else {
                          L456 : do {
                           if (($463 | 0) > 0) {
                            $idx_02_i151_i_i = 0;
                            while (1) {
                             $inc_i154_i_i = $idx_02_i151_i_i + 1 | 0;
                             if (!((HEAP16[$ints_i_i + ($idx_02_i151_i_i << 3) + 4 >> 1] | 0) < $conv24_i_i << 16 >> 16)) {
                              $idx_0_lcssa_i156_i_i = $idx_02_i151_i_i;
                              break L456;
                             }
                             if (($inc_i154_i_i | 0) < ($463 | 0)) {
                              $idx_02_i151_i_i = $inc_i154_i_i;
                             } else {
                              $idx_0_lcssa_i156_i_i = $inc_i154_i_i;
                              break;
                             }
                            }
                           } else {
                            $idx_0_lcssa_i156_i_i = 0;
                           }
                          } while (0);
                          if (($463 | 0) == ($idx_0_lcssa_i156_i_i | 0)) {
                           $_pre1261 = $462;
                          } else {
                           _memmove($ints_i_i + ($idx_0_lcssa_i156_i_i + 1 << 3) | 0, $ints_i_i + ($idx_0_lcssa_i156_i_i << 3) | 0, $463 - $idx_0_lcssa_i156_i_i << 3 | 0) | 0;
                           $_pre1261 = HEAP32[$links_phi_trans_insert_i55_i >> 2] | 0;
                          }
                          HEAP32[$ints_i_i + ($idx_0_lcssa_i156_i_i << 3) >> 2] = $465;
                          HEAP16[$ints_i_i + ($idx_0_lcssa_i156_i_i << 3) + 4 >> 1] = $conv23_i_i;
                          HEAP16[$ints_i_i + ($idx_0_lcssa_i156_i_i << 3) + 6 >> 1] = $conv24_i_i;
                          $480 = $463 + 1 | 0;
                          $479 = $_pre1261;
                         }
                        } else {
                         $480 = $463;
                         $479 = $462;
                        }
                       }
                      }
                     } else {
                      $480 = $463;
                      $479 = $462;
                     }
                     $k_0216_i_i = HEAP32[$479 + ($k_0216_i_i * 12 | 0) + 4 >> 2] | 0;
                     if (($k_0216_i_i | 0) == -1) {
                      break;
                     } else {
                      $463 = $480;
                      $462 = $479;
                     }
                    }
                    if (($480 | 0) > 15) {
                     $505 = $480;
                    } else {
                     L467 : do {
                      if (($480 | 0) > 0) {
                       $idx_02_i119_i_i = 0;
                       while (1) {
                        $inc_i122_i_i = $idx_02_i119_i_i + 1 | 0;
                        if ((HEAP16[$ints_i_i + ($idx_02_i119_i_i << 3) + 4 >> 1] | 0) >= 0) {
                         $idx_0_lcssa_i124_i_i = $idx_02_i119_i_i;
                         break L467;
                        }
                        if (($inc_i122_i_i | 0) < ($480 | 0)) {
                         $idx_02_i119_i_i = $inc_i122_i_i;
                        } else {
                         $idx_0_lcssa_i124_i_i = $inc_i122_i_i;
                         break;
                        }
                       }
                      } else {
                       $idx_0_lcssa_i124_i_i = 0;
                      }
                     } while (0);
                     if (($480 | 0) == ($idx_0_lcssa_i124_i_i | 0)) {
                      $_lcssa235237239_i_i = $480;
                      $idx_0_lcssa_i124240_i_i = $480;
                      label = 349;
                     } else {
                      _memmove($ints_i_i + ($idx_0_lcssa_i124_i_i + 1 << 3) | 0, $ints_i_i + ($idx_0_lcssa_i124_i_i << 3) | 0, $480 - $idx_0_lcssa_i124_i_i << 3 | 0) | 0;
                      $_lcssa235237239_i_i = $480;
                      $idx_0_lcssa_i124240_i_i = $idx_0_lcssa_i124_i_i;
                      label = 349;
                     }
                    }
                   }
                   if ((label | 0) == 349) {
                    label = 0;
                    HEAP32[$ints_i_i + ($idx_0_lcssa_i124240_i_i << 3) >> 2] = 0;
                    HEAP16[$ints_i_i + ($idx_0_lcssa_i124240_i_i << 3) + 4 >> 1] = -1;
                    HEAP16[$ints_i_i + ($idx_0_lcssa_i124240_i_i << 3) + 6 >> 1] = 0;
                    $inc18_i136_i_i = $_lcssa235237239_i_i + 1 | 0;
                    if (($_lcssa235237239_i_i | 0) > 14) {
                     $505 = $inc18_i136_i_i;
                    } else {
                     L476 : do {
                      if (($_lcssa235237239_i_i | 0) > -1) {
                       $idx_02_i_i_i = 0;
                       while (1) {
                        $inc_i_i71_i = $idx_02_i_i_i + 1 | 0;
                        if ((HEAP16[$ints_i_i + ($idx_02_i_i_i << 3) + 4 >> 1] | 0) >= 256) {
                         $idx_0_lcssa_i_i_i = $idx_02_i_i_i;
                         break L476;
                        }
                        if (($inc_i_i71_i | 0) < ($inc18_i136_i_i | 0)) {
                         $idx_02_i_i_i = $inc_i_i71_i;
                        } else {
                         $idx_0_lcssa_i_i_i = $inc_i_i71_i;
                         break;
                        }
                       }
                      } else {
                       $idx_0_lcssa_i_i_i = 0;
                      }
                     } while (0);
                     if (($inc18_i136_i_i | 0) != ($idx_0_lcssa_i_i_i | 0)) {
                      _memmove($ints_i_i + ($idx_0_lcssa_i_i_i + 1 << 3) | 0, $ints_i_i + ($idx_0_lcssa_i_i_i << 3) | 0, $inc18_i136_i_i - $idx_0_lcssa_i_i_i << 3 | 0) | 0;
                     }
                     HEAP32[$ints_i_i + ($idx_0_lcssa_i_i_i << 3) >> 2] = 0;
                     HEAP16[$ints_i_i + ($idx_0_lcssa_i_i_i << 3) + 4 >> 1] = 255;
                     HEAP16[$ints_i_i + ($idx_0_lcssa_i_i_i << 3) + 6 >> 1] = 256;
                     $505 = $_lcssa235237239_i_i + 2 | 0;
                    }
                   }
                   $mul79_i_i = (HEAPU16[$459 + ($and11_i_i_i22_i << 5) + 4 + ($j_0226_i_i << 1) >> 1] | 0) * 3 | 0;
                   $507 = HEAP32[$verts54_i_i >> 2] | 0;
                   $arrayidx81_i_i = $507 + ($mul79_i_i << 2) | 0;
                   $mul86_i_i = (HEAPU16[$459 + ($and11_i_i_i22_i << 5) + 4 + ($i_0227_i_i << 1) >> 1] | 0) * 3 | 0;
                   $arrayidx88_i_i = $507 + ($mul86_i_i << 2) | 0;
                   if (($505 | 0) > 1) {
                    $arrayidx4_i99_i_i = $507 + ($mul79_i_i + 1 << 2) | 0;
                    $arrayidx5_i100_i_i = $507 + ($mul86_i_i + 1 << 2) | 0;
                    $arrayidx11_i105_i_i = $507 + ($mul79_i_i + 2 << 2) | 0;
                    $arrayidx12_i106_i_i = $507 + ($mul86_i_i + 2 << 2) | 0;
                    $k89_0218_i_i = 1;
                    $status_1219_i_i = $status_0228_i_i;
                    $n_1220_i_i = $n_0229_i_i;
                    while (1) {
                     $509 = HEAP16[$ints_i_i + ($k89_0218_i_i - 1 << 3) + 6 >> 1] | 0;
                     $510 = HEAP16[$ints_i_i + ($k89_0218_i_i << 3) + 4 >> 1] | 0;
                     do {
                      if ($509 << 16 >> 16 == $510 << 16 >> 16) {
                       $n_3_i81_i = $n_1220_i_i;
                       $status_3_i80_i = $status_1219_i_i;
                      } else {
                       if (($n_1220_i_i | 0) < 18) {
                        $div140_i_i = +($510 << 16 >> 16 | 0) / 255.0;
                        $div137_i_i = +($509 << 16 >> 16 | 0) / 255.0;
                        $mul144_i_i = $n_1220_i_i * 6 | 0;
                        $511 = +HEAPF32[$arrayidx81_i_i >> 2];
                        $sub_i66_i_i = +HEAPF32[$arrayidx88_i_i >> 2] - $511;
                        HEAPF32[$segs_i + ($mul144_i_i << 2) >> 2] = $511 + $div137_i_i * $sub_i66_i_i;
                        $513 = +HEAPF32[$arrayidx4_i99_i_i >> 2];
                        $sub7_i71_i_i = +HEAPF32[$arrayidx5_i100_i_i >> 2] - $513;
                        HEAPF32[$segs_i + (($mul144_i_i | 1) << 2) >> 2] = $513 + $div137_i_i * $sub7_i71_i_i;
                        $515 = +HEAPF32[$arrayidx11_i105_i_i >> 2];
                        $sub14_i77_i_i = +HEAPF32[$arrayidx12_i106_i_i >> 2] - $515;
                        HEAPF32[$segs_i + ($mul144_i_i + 2 << 2) >> 2] = $515 + $div137_i_i * $sub14_i77_i_i;
                        HEAPF32[$segs_i + ($mul144_i_i + 3 << 2) >> 2] = $511 + $div140_i_i * $sub_i66_i_i;
                        HEAPF32[$segs_i + ($mul144_i_i + 4 << 2) >> 2] = $513 + $div140_i_i * $sub7_i71_i_i;
                        HEAPF32[$segs_i + ($mul144_i_i + 5 << 2) >> 2] = $515 + $div140_i_i * $sub14_i77_i_i;
                        $n_3_i81_i = $n_1220_i_i + 1 | 0;
                        $status_3_i80_i = $status_1219_i_i;
                        break;
                       } else {
                        $n_3_i81_i = $n_1220_i_i;
                        $status_3_i80_i = $status_1219_i_i | 16;
                        break;
                       }
                      }
                     } while (0);
                     $inc158_i_i = $k89_0218_i_i + 1 | 0;
                     if (($inc158_i_i | 0) < ($505 | 0)) {
                      $k89_0218_i_i = $inc158_i_i;
                      $status_1219_i_i = $status_3_i80_i;
                      $n_1220_i_i = $n_3_i81_i;
                     } else {
                      $n_4_i_i = $n_3_i81_i;
                      $status_4_i_i = $status_3_i80_i;
                      break;
                     }
                    }
                   } else {
                    $n_4_i_i = $n_0229_i_i;
                    $status_4_i_i = $status_0228_i_i;
                   }
                  }
                 } while (0);
                 $inc161_i_i = $i_0227_i_i + 1 | 0;
                 if (($inc161_i_i | 0) < (HEAPU8[$vertCount_i45_i >> 0] | 0)) {
                  $j_0226_i_i = $i_0227_i_i;
                  $i_0227_i_i = $inc161_i_i;
                  $status_0228_i_i = $status_4_i_i;
                  $n_0229_i_i = $n_4_i_i;
                 } else {
                  $n_0_lcssa_i_i = $n_4_i_i;
                  break;
                 }
                }
                if (($n_0_lcssa_i_i | 0) > 0) {
                 $k_017_i = 0;
                 do {
                  $mul_i346 = $k_017_i * 6 | 0;
                  $arrayidx14_i = $segs_i + ($mul_i346 << 2) | 0;
                  $519 = +HEAPF32[$arrayidx14_i >> 2];
                  $sub_i82_i = +HEAPF32[$segs_i + ($mul_i346 + 3 << 2) >> 2] - $519;
                  $521 = +HEAPF32[$segs_i + ($mul_i346 + 2 << 2) >> 2];
                  $sub4_i_i347 = +HEAPF32[$segs_i + ($mul_i346 + 5 << 2) >> 2] - $521;
                  $522 = +HEAPF32[$arraydecay19 >> 2];
                  $523 = +HEAPF32[$arrayidx3_i390 >> 2];
                  $add_i86_i = $sub_i82_i * $sub_i82_i + $sub4_i_i347 * $sub4_i_i347;
                  $add14_i_i = $sub_i82_i * ($522 - $519) + $sub4_i_i347 * ($523 - $521);
                  if ($add_i86_i > 0.0) {
                   $storemerge_i_i = $add14_i_i / $add_i86_i;
                  } else {
                   $storemerge_i_i = $add14_i_i;
                  }
                  if ($storemerge_i_i < 0.0) {
                   $524 = 0.0;
                  } else {
                   if ($storemerge_i_i > 1.0) {
                    $524 = 1.0;
                   } else {
                    $524 = $storemerge_i_i;
                   }
                  }
                  $sub25_i_i = $519 + $sub_i82_i * $524 - $522;
                  $sub30_i_i = $sub4_i_i347 * $524 + $521 - $523;
                  $add33_i_i = $sub25_i_i * $sub25_i_i + $sub30_i_i * $sub30_i_i;
                  L516 : do {
                   if (!($add33_i_i > $mul_i15_i)) {
                    $525 = HEAP32[$m_nsegs6_i >> 2] | 0;
                    do {
                     if (($525 | 0) == 0) {
                      $seg_0_i_i = $arrayidx_i_i331;
                     } else {
                      if (!(+HEAPF32[$315 + 52 + (($525 - 1 | 0) * 28 | 0) + 24 >> 2] > $add33_i_i)) {
                       if (($525 | 0) > 7) {
                        break L516;
                       }
                       $seg_0_i_i = $315 + 52 + ($525 * 28 | 0) | 0;
                       break;
                      }
                      L524 : do {
                       if (($525 | 0) > 0) {
                        $i_015_i_i = 0;
                        while (1) {
                         $inc_i_i365 = $i_015_i_i + 1 | 0;
                         if (!(+HEAPF32[$315 + 52 + ($i_015_i_i * 28 | 0) + 24 >> 2] < $add33_i_i)) {
                          $i_0_lcssa_i_i367 = $i_015_i_i;
                          break L524;
                         }
                         if (($inc_i_i365 | 0) < ($525 | 0)) {
                          $i_015_i_i = $inc_i_i365;
                         } else {
                          $i_0_lcssa_i_i367 = $inc_i_i365;
                          break;
                         }
                        }
                       } else {
                        $i_0_lcssa_i_i367 = 0;
                       }
                      } while (0);
                      $add_i_i368 = $i_0_lcssa_i_i367 + 1 | 0;
                      $sub22_i_i = $525 - $i_0_lcssa_i_i367 | 0;
                      $sub23_i_i = 7 - $i_0_lcssa_i_i367 | 0;
                      $cond_i_i_i370 = ($sub22_i_i | 0) < ($sub23_i_i | 0) ? $sub22_i_i : $sub23_i_i;
                      if (($cond_i_i_i370 + $add_i_i368 | 0) >= 9) {
                       label = 379;
                       break L306;
                      }
                      if (($cond_i_i_i370 | 0) > 0) {
                       $arrayidx31_i_i = $315 + 52 + ($i_0_lcssa_i_i367 * 28 | 0) | 0;
                       _memmove($315 + 52 + ($add_i_i368 * 28 | 0) | 0, $arrayidx31_i_i | 0, $cond_i_i_i370 * 28 | 0 | 0) | 0;
                       $seg_0_i_i = $arrayidx31_i_i;
                       break;
                      } else {
                       $seg_0_i_i = $315 + 52 + ($i_0_lcssa_i_i367 * 28 | 0) | 0;
                       break;
                      }
                     }
                    } while (0);
                    HEAPF32[$seg_0_i_i + 24 >> 2] = $add33_i_i;
                    $530 = $seg_0_i_i;
                    $531 = $arrayidx14_i;
                    HEAP32[$530 >> 2] = HEAP32[$531 >> 2];
                    HEAP32[$530 + 4 >> 2] = HEAP32[$531 + 4 >> 2];
                    HEAP32[$530 + 8 >> 2] = HEAP32[$531 + 8 >> 2];
                    HEAP32[$530 + 12 >> 2] = HEAP32[$531 + 12 >> 2];
                    HEAP32[$530 + 16 >> 2] = HEAP32[$531 + 16 >> 2];
                    HEAP32[$530 + 20 >> 2] = HEAP32[$531 + 20 >> 2];
                    $532 = HEAP32[$m_nsegs6_i >> 2] | 0;
                    if (($532 | 0) < 8) {
                     HEAP32[$m_nsegs6_i >> 2] = $532 + 1;
                    }
                   }
                  } while (0);
                  $k_017_i = $k_017_i + 1 | 0;
                 } while (($k_017_i | 0) < ($n_0_lcssa_i_i | 0));
                }
               }
              }
             }
            }
           }
          }
          $j_019_i = $j_019_i + 1 | 0;
         } while (($j_019_i | 0) < (HEAP32[$m_npolys5_i >> 2] | 0));
        }
       }
      }
      if ((label | 0) == 241) {
       label = 0;
       HEAPF32[$arraydecay_i300 >> 2] = 3.4028234663852886e+38;
       HEAPF32[$315 + 44 >> 2] = 3.4028234663852886e+38;
       HEAPF32[$arrayidx2_i389 >> 2] = 3.4028234663852886e+38;
       HEAP32[$315 + 276 >> 2] = 0;
       HEAP32[$315 + 344 >> 2] = 0;
      }
      $536 = +HEAPF32[$collisionQueryRange >> 2];
      $535 = +HEAPF32[$arraydecay19 >> 2];
      $534 = +HEAPF32[$arrayidx3_i390 >> 2];
     }
     $537 = +HEAPF32[$315 + 472 >> 2];
     $538 = HEAP32[$m_grid >> 2] | 0;
     $m_invCellSize_i_i = $538 + 8 | 0;
     $conv_i_i386 = ~~+Math_floor(+HEAPF32[$m_invCellSize_i_i >> 2] * ($535 - $536));
     $conv5_i_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i_i >> 2] * ($534 - $536));
     $conv9_i_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i_i >> 2] * ($535 + $536));
     $conv13_i_i = ~~+Math_floor(+HEAPF32[$m_invCellSize_i_i >> 2] * ($534 + $536));
     L541 : do {
      if (($conv5_i_i | 0) <= ($conv13_i_i | 0)) {
       $m_pool_i_i = $538 + 12 | 0;
       if (($conv_i_i386 | 0) > ($conv9_i_i | 0)) {
        $y_037_us_i_i = $conv5_i_i;
        while (1) {
         if (($y_037_us_i_i | 0) < ($conv13_i_i | 0)) {
          $y_037_us_i_i = $y_037_us_i_i + 1 | 0;
         } else {
          break L541;
         }
        }
       }
       $_pre_i_i389_pre = HEAP32[$538 + 28 >> 2] | 0;
       $_pre41_i_i_pre = HEAP32[$538 + 24 >> 2] | 0;
       $y_037_i_i = $conv5_i_i;
       $n_038_i_i = 0;
       L547 : while (1) {
        $mul1_i_i_i388 = Math_imul($y_037_i_i, 19349663) | 0;
        $sub_i_i_i391 = $_pre_i_i389_pre - 1 | 0;
        $x_031_i_i = $conv_i_i386;
        $n_132_i_i = $n_038_i_i;
        while (1) {
         $arrayidx_i_i393 = $_pre41_i_i_pre + (($sub_i_i_i391 & ((Math_imul($x_031_i_i, 73856093) | 0) ^ $mul1_i_i_i388)) << 1) | 0;
         $idx_025_i_i = HEAP16[$arrayidx_i_i393 >> 1] | 0;
         if ($idx_025_i_i << 16 >> 16 == -1) {
          $n_2_lcssa_i_i = $n_132_i_i;
         } else {
          $n_227_i_i = $n_132_i_i;
          $idx_028_i_i = $idx_025_i_i;
          while (1) {
           $conv18_i_i = $idx_028_i_i & 65535;
           $543 = HEAP32[$m_pool_i_i >> 2] | 0;
           $arrayidx20_i3_i = $543 + ($conv18_i_i << 3) | 0;
           L554 : do {
            if ((HEAP16[$543 + ($conv18_i_i << 3) + 2 >> 1] | 0) == ($x_031_i_i | 0)) {
             if ((HEAP16[$543 + ($conv18_i_i << 3) + 4 >> 1] | 0) == ($y_037_i_i | 0)) {
              $add_ptr_i_i = $ids_i + ($n_227_i_i << 1) | 0;
              $_pre1267 = HEAP16[$arrayidx20_i3_i >> 1] | 0;
              if (($n_227_i_i | 0) == 0) {
               $547 = $_pre1267;
              } else {
               $i_023_i_i = $arraydecay_i384;
               do {
                $i_023_i_i$looptemp = $i_023_i_i;
                $i_023_i_i = $i_023_i_i + 2 | 0;
                if ((HEAP16[$i_023_i_i$looptemp >> 1] | 0) == $_pre1267 << 16 >> 16) {
                 $n_3_i_i400 = $n_227_i_i;
                 break L554;
                }
               } while (($i_023_i_i | 0) != ($add_ptr_i_i | 0));
               if (($n_227_i_i | 0) < 32) {
                $547 = $_pre1267;
               } else {
                $retval_0_i_i4071165 = $n_227_i_i;
                break L547;
               }
              }
              HEAP16[$add_ptr_i_i >> 1] = $547;
              $n_3_i_i400 = $n_227_i_i + 1 | 0;
             } else {
              $n_3_i_i400 = $n_227_i_i;
             }
            } else {
             $n_3_i_i400 = $n_227_i_i;
            }
           } while (0);
           $idx_0_i_i = HEAP16[$543 + ($conv18_i_i << 3) + 6 >> 1] | 0;
           if ($idx_0_i_i << 16 >> 16 == -1) {
            $n_2_lcssa_i_i = $n_3_i_i400;
            break;
           } else {
            $n_227_i_i = $n_3_i_i400;
            $idx_028_i_i = $idx_0_i_i;
           }
          }
         }
         if (($x_031_i_i | 0) < ($conv9_i_i | 0)) {
          $x_031_i_i = $x_031_i_i + 1 | 0;
          $n_132_i_i = $n_2_lcssa_i_i;
         } else {
          break;
         }
        }
        if (($y_037_i_i | 0) < ($conv13_i_i | 0)) {
         $y_037_i_i = $y_037_i_i + 1 | 0;
         $n_038_i_i = $n_2_lcssa_i_i;
        } else {
         label = 404;
         break;
        }
       }
       if ((label | 0) == 404) {
        label = 0;
        if (($n_2_lcssa_i_i | 0) > 0) {
         $retval_0_i_i4071165 = $n_2_lcssa_i_i;
        } else {
         break;
        }
       }
       $arrayidx3_i_i408 = $315 + 412 | 0;
       $mul_i4_i = $536 * $536;
       $i_08_i410 = 0;
       $n_09_i = 0;
       while (1) {
        $arrayidx6_i411 = $ids_i + ($i_08_i410 << 1) | 0;
        $549 = HEAP32[$0 + (HEAPU16[$arrayidx6_i411 >> 1] << 2) >> 2] | 0;
        L571 : do {
         if (($549 | 0) == ($315 | 0)) {
          $n_1_i451 = $n_09_i;
         } else {
          $sub_i_i415 = +HEAPF32[$arraydecay19 >> 2] - +HEAPF32[$549 + 408 >> 2];
          $sub9_i_i418 = +HEAPF32[$arrayidx3_i390 >> 2] - +HEAPF32[$549 + 416 >> 2];
          $call12_i419 = +Math_abs(+(+HEAPF32[$arrayidx3_i_i408 >> 2] - +HEAPF32[$549 + 412 >> 2]));
          if ($call12_i419 < (+HEAPF32[$549 + 472 >> 2] + $537) * .5) {
           $add8_i_i = $sub_i_i415 * $sub_i_i415 + 0.0 + $sub9_i_i418 * $sub9_i_i418;
           if ($add8_i_i > $mul_i4_i) {
            $n_1_i451 = $n_09_i;
           } else {
            $conv_i423 = HEAPU16[$arrayidx6_i411 >> 1] | 0;
            do {
             if (($n_09_i | 0) == 0) {
              $nneis_pn_i_i = 0;
             } else {
              if (!(+HEAPF32[$315 + 352 + ($n_09_i - 1 << 3) + 4 >> 2] > $add8_i_i)) {
               if (($n_09_i | 0) > 5) {
                $n_1_i451 = $n_09_i;
                break L571;
               } else {
                $nneis_pn_i_i = $n_09_i;
                break;
               }
              }
              L580 : do {
               if (($n_09_i | 0) > 0) {
                $i_04_i_i431 = 0;
                while (1) {
                 $inc_i_i432 = $i_04_i_i431 + 1 | 0;
                 if (!(+HEAPF32[$315 + 352 + ($i_04_i_i431 << 3) + 4 >> 2] < $add8_i_i)) {
                  $i_0_lcssa_i_i434 = $i_04_i_i431;
                  break L580;
                 }
                 if (($inc_i_i432 | 0) < ($n_09_i | 0)) {
                  $i_04_i_i431 = $inc_i_i432;
                 } else {
                  $i_0_lcssa_i_i434 = $inc_i_i432;
                  break;
                 }
                }
               } else {
                $i_0_lcssa_i_i434 = 0;
               }
              } while (0);
              $add_i_i435 = $i_0_lcssa_i_i434 + 1 | 0;
              $sub14_i_i436 = $n_09_i - $i_0_lcssa_i_i434 | 0;
              $sub15_i_i = 5 - $i_0_lcssa_i_i434 | 0;
              $cond_i_i_i438 = ($sub14_i_i436 | 0) < ($sub15_i_i | 0) ? $sub14_i_i436 : $sub15_i_i;
              if (($cond_i_i_i438 + $add_i_i435 | 0) >= 7) {
               label = 416;
               break L306;
              }
              if (($cond_i_i_i438 | 0) > 0) {
               _memmove($315 + 352 + ($add_i_i435 << 3) | 0, $315 + 352 + ($i_0_lcssa_i_i434 << 3) | 0, $cond_i_i_i438 << 3 | 0) | 0;
               $nneis_pn_i_i = $i_0_lcssa_i_i434;
              } else {
               $nneis_pn_i_i = $i_0_lcssa_i_i434;
              }
             }
            } while (0);
            $nei_0_i_i = $315 + 352 + ($nneis_pn_i_i << 3) | 0;
            $562 = $nei_0_i_i;
            HEAP32[$562 >> 2] = 0;
            HEAP32[$562 + 4 >> 2] = 0;
            HEAP32[$nei_0_i_i >> 2] = $conv_i423;
            HEAPF32[$315 + 352 + ($nneis_pn_i_i << 3) + 4 >> 2] = $add8_i_i;
            $add28_i_i448 = $n_09_i + 1 | 0;
            $n_1_i451 = ($add28_i_i448 | 0) < 6 ? $add28_i_i448 : 6;
           }
          } else {
           $n_1_i451 = $n_09_i;
          }
         }
        } while (0);
        $i_08_i410 = $i_08_i410 + 1 | 0;
        if (($i_08_i410 | 0) >= ($retval_0_i_i4071165 | 0)) {
         break;
        } else {
         $n_09_i = $n_1_i451;
        }
       }
       $nneis = $315 + 400 | 0;
       HEAP32[$nneis >> 2] = $n_1_i451;
       if (($n_1_i451 | 0) <= 0) {
        break L308;
       }
       $sub_ptr_rhs_cast_i420 = HEAP32[$m_agents_i418 >> 2] | 0;
       $j_0536 = 0;
       while (1) {
        $idx = $315 + 352 + ($j_0536 << 3) | 0;
        HEAP32[$idx >> 2] = ((HEAP32[$0 + (HEAP32[$idx >> 2] << 2) >> 2] | 0) - $sub_ptr_rhs_cast_i420 | 0) / 608 | 0;
        $j_0536 = $j_0536 + 1 | 0;
        if (($j_0536 | 0) >= (HEAP32[$nneis >> 2] | 0)) {
         break L308;
        }
       }
      }
     } while (0);
     HEAP32[$315 + 400 >> 2] = 0;
    }
   } while (0);
   $inc59 = $i9_0538 + 1 | 0;
   if (($inc59 | 0) < ($n_0_lcssa_i | 0)) {
    $i9_0538 = $inc59;
   } else {
    label = 225;
    break;
   }
  }
  if ((label | 0) == 225) {
   $arrayidx3_i_i488 = $agentPos_i + 4 | 0;
   $arrayidx5_i2_i = $nearest_i + 4 | 0;
   $i61_0534 = 0;
   while (1) {
    $567 = HEAP32[$0 + ($i61_0534 << 2) >> 2] | 0;
    if ((HEAP8[$567 + 1 >> 0] | 0) == 1) {
     $569 = HEAP8[$567 + 576 >> 0] | 0;
     if (!(($569 << 24 >> 24 | 0) == 0 | ($569 << 24 >> 24 | 0) == 6)) {
      $arraydecay81 = $567 + 504 | 0;
      $arraydecay82 = $567 + 552 | 0;
      $arraydecay83 = $567 + 556 | 0;
      $570 = HEAP32[$m_navquery33 >> 2] | 0;
      $m_path_i456 = $567 + 28 | 0;
      $571 = HEAP32[$m_path_i456 >> 2] | 0;
      if (($571 | 0) == 0) {
       label = 430;
       break;
      }
      $m_npath_i459 = $567 + 32 | 0;
      $572 = HEAP32[$m_npath_i459 >> 2] | 0;
      if (($572 | 0) == 0) {
       label = 432;
       break;
      }
      HEAP32[$ncorners_i >> 2] = 0;
      $arraydecay_i462 = $567 + 4 | 0;
      __ZNK14dtNavMeshQuery16findStraightPathEPKfS1_PKjiPfPhPjPiii($570, $arraydecay_i462, $567 + 16 | 0, $571, $572, $arraydecay81, $arraydecay82, $arraydecay83, $ncorners_i, 4) | 0;
      $arrayidx2_i_i463 = $567 + 12 | 0;
      $arrayidx3_i_i464 = $567 + 512 | 0;
      $add_ptr_i465 = $567 + 553 | 0;
      $574 = $arraydecay83;
      $575 = $567 + 560 | 0;
      $576 = $arraydecay81;
      $577 = $567 + 516 | 0;
      $578 = HEAP32[$ncorners_i >> 2] | 0;
      while (1) {
       if (($578 | 0) == 0) {
        $i_0_i = 0;
        break;
       }
       if (!((HEAP8[$arraydecay82 >> 0] & 4) == 0)) {
        $i_0_i = 0;
        break;
       }
       $sub_i_i468 = +HEAPF32[$arraydecay_i462 >> 2] - +HEAPF32[$arraydecay81 >> 2];
       $sub4_i_i469 = +HEAPF32[$arrayidx2_i_i463 >> 2] - +HEAPF32[$arrayidx3_i_i464 >> 2];
       if ($sub_i_i468 * $sub_i_i468 + $sub4_i_i469 * $sub4_i_i469 > 9999999747378752.0e-20) {
        $i_0_i = 0;
        break;
       }
       $dec_i = $578 - 1 | 0;
       HEAP32[$ncorners_i >> 2] = $dec_i;
       if (($dec_i | 0) == 0) {
        $578 = 0;
        continue;
       }
       _memmove($arraydecay82 | 0, $add_ptr_i465 | 0, $dec_i | 0) | 0;
       _memmove($574 | 0, $575 | 0, $dec_i << 2 | 0) | 0;
       _memmove($576 | 0, $577 | 0, $dec_i * 12 | 0 | 0) | 0;
       $578 = $dec_i;
      }
      while (1) {
       if (($i_0_i | 0) >= ($578 | 0)) {
        $585 = $578;
        break;
       }
       $add_i478 = $i_0_i + 1 | 0;
       if ((HEAP8[$567 + 552 + $i_0_i >> 0] & 4) == 0) {
        $i_0_i = $add_i478;
       } else {
        label = 441;
        break;
       }
      }
      if ((label | 0) == 441) {
       label = 0;
       HEAP32[$ncorners_i >> 2] = $add_i478;
       $585 = $add_i478;
      }
      HEAP32[$567 + 572 >> 2] = $585;
      if ((HEAP8[$567 + 496 >> 0] & 8) != 0 & ($585 | 0) > 0) {
       $sub93 = $585 - 1 | 0;
       $mul95 = ($sub93 | 0) > 1 ? 3 : $sub93 * 3 | 0;
       $587 = +HEAPF32[$567 + 488 >> 2];
       $588 = HEAP32[$m_navquery33 >> 2] | 0;
       if ((HEAP32[$m_path_i456 >> 2] | 0) == 0) {
        label = 444;
        break;
       }
       $590 = +HEAPF32[$567 + 504 + ($mul95 << 2) >> 2];
       HEAPF32[$arraydecay_i_i306 >> 2] = $590;
       $591 = +HEAPF32[$567 + 504 + ($mul95 + 1 << 2) >> 2];
       HEAPF32[$arrayidx3_i_i488 >> 2] = $591;
       $592 = +HEAPF32[$567 + 504 + ($mul95 + 2 << 2) >> 2];
       HEAPF32[$arrayidx3_i28_i_i >> 2] = $592;
       $sub_i12_i = $590 - +HEAPF32[$arraydecay_i462 >> 2];
       $sub4_i_i491 = $592 - +HEAPF32[$arrayidx2_i_i463 >> 2];
       $call_i1_i = +Math_sqrt($sub_i12_i * $sub_i12_i + $sub4_i_i491 * $sub4_i_i491);
       if (!($call_i1_i < .009999999776482582)) {
        $add_i495 = $call_i1_i + .009999999776482582;
        $595 = +HEAPF32[$arraydecay_i462 >> 2];
        $596 = +HEAPF32[$567 + 8 >> 2];
        $597 = +HEAPF32[$arrayidx2_i_i463 >> 2];
        $div_i501 = $587 / ($add_i495 < $587 ? $add_i495 : $587);
        $add_i5_i503 = $595 + ($590 - $595) * $div_i501;
        HEAPF32[$arraydecay_i_i306 >> 2] = $add_i5_i503;
        HEAPF32[$arrayidx3_i_i488 >> 2] = $596 + ($591 - $596) * $div_i501;
        $add11_i_i = ($592 - $597) * $div_i501 + $597;
        HEAPF32[$arrayidx3_i28_i_i >> 2] = $add11_i_i;
        $599 = HEAP32[HEAP32[$m_path_i456 >> 2] >> 2] | 0;
        if (($599 | 0) != 0) {
         $m_nav_i_i506 = $588 | 0;
         $600 = HEAP32[$m_nav_i_i506 >> 2] | 0;
         $601 = HEAP32[$600 + 76 >> 2] | 0;
         $602 = HEAP32[$600 + 80 >> 2] | 0;
         $and10_i_i_i_i516 = $599 >>> ($602 >>> 0) & (1 << $601) - 1;
         $and11_i_i_i_i517 = (1 << $602) - 1 & $599;
         if ($and10_i_i_i_i516 >>> 0 < (HEAP32[$600 + 48 >> 2] | 0) >>> 0) {
          $605 = HEAP32[$600 + 68 >> 2] | 0;
          if ((HEAP32[$605 + ($and10_i_i_i_i516 * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$600 + 72 >> 2]) - 1 & $599 >>> (($602 + $601 | 0) >>> 0) | 0)) {
           $607 = HEAP32[$605 + ($and10_i_i_i_i516 * 60 | 0) + 8 >> 2] | 0;
           if (($607 | 0) != 0) {
            if ($and11_i_i_i_i517 >>> 0 < (HEAP32[$607 + 24 >> 2] | 0) >>> 0) {
             HEAPF32[$arraydecay50_i_i >> 2] = 0.0;
             HEAPF32[$arrayidx5_i2_i >> 2] = 0.0;
             HEAPF32[$arrayidx2_i27_i_i >> 2] = 0.0;
             $curRef_0_i_i = $599;
             $n_0_i_i = 0;
             $status_0_i_i = 1073741824;
             $t_i_0 = 0.0;
             $611 = $601;
             $610 = $602;
             $609 = $605;
             L624 : while (1) {
              if (($curRef_0_i_i | 0) == 0) {
               $nres_i482_0 = $n_0_i_i;
               $t_i_2 = $t_i_0;
               break;
              }
              $and10_i_i10_i_i = $curRef_0_i_i >>> ($610 >>> 0) & (1 << $611) - 1;
              $and11_i_i11_i_i = (1 << $610) - 1 & $curRef_0_i_i;
              $612 = HEAP32[$609 + ($and10_i_i10_i_i * 60 | 0) + 12 >> 2] | 0;
              $613 = HEAP8[$612 + ($and11_i_i11_i_i << 5) + 30 >> 0] | 0;
              L627 : do {
               if ($613 << 24 >> 24 == 0) {
                $segMax_i_i_2 = -1;
                $tmax_i_i_2 = 1.0;
                $nv_0_lcssa_i_i1286 = 0;
               } else {
                $614 = HEAP32[$609 + ($and10_i_i10_i_i * 60 | 0) + 16 >> 2] | 0;
                $conv_i_i547 = $613 & 255;
                $615 = ($613 & 255) >>> 0 > 1 >>> 0;
                $nv_097_i_i = 0;
                do {
                 $mul_i3_i = $nv_097_i_i * 3 | 0;
                 $mul13_i_i551 = (HEAPU16[$612 + ($and11_i_i11_i_i << 5) + 4 + ($nv_097_i_i << 1) >> 1] | 0) * 3 | 0;
                 HEAPF32[$pa_i_i + ($mul_i3_i << 2) >> 2] = +HEAPF32[$614 + ($mul13_i_i551 << 2) >> 2];
                 HEAPF32[$pa_i_i + ($mul_i3_i + 1 << 2) >> 2] = +HEAPF32[$614 + ($mul13_i_i551 + 1 << 2) >> 2];
                 HEAPF32[$pa_i_i + ($mul_i3_i + 2 << 2) >> 2] = +HEAPF32[$614 + ($mul13_i_i551 + 2 << 2) >> 2];
                 $nv_097_i_i = $nv_097_i_i + 1 | 0;
                } while (($nv_097_i_i | 0) < ($conv_i_i547 | 0));
                $620 = +HEAPF32[$arraydecay_i462 >> 2];
                $sub_i_i27_i_i = $add_i5_i503 - $620;
                $621 = +HEAPF32[$arrayidx2_i_i463 >> 2];
                $sub9_i_i_i_i = $add11_i_i - $621;
                if ($615) {
                 if (($conv_i_i547 | 0) == 0) {
                  $segMax_i_i_2 = -1;
                  $tmax_i_i_2 = 1.0;
                  $nv_0_lcssa_i_i1286 = $conv_i_i547;
                  break;
                 } else {
                  $nv_0_lcssa_i_i1291 = $conv_i_i547;
                  $623 = $620;
                  $sub_i_i27_i_i1292 = $sub_i_i27_i_i;
                  $622 = $621;
                  $sub9_i_i_i_i1293 = $sub9_i_i_i_i;
                 }
                } else {
                 $nv_0_lcssa_i_i1291 = 1;
                 $623 = $620;
                 $sub_i_i27_i_i1292 = $sub_i_i27_i_i;
                 $622 = $621;
                 $sub9_i_i_i_i1293 = $sub9_i_i_i_i;
                }
                $j_052_i_i_i = $nv_0_lcssa_i_i1291 - 1 | 0;
                $i_053_i_i_i = 0;
                $625 = $623;
                $624 = $622;
                $segMax_i_i_0 = -1;
                $tmax_i_i_0 = 1.0;
                $tmin_i_i_0 = 0.0;
                while (1) {
                 $mul_i28_i_i = $i_053_i_i_i * 3 | 0;
                 $mul2_i_i_i = $j_052_i_i_i * 3 | 0;
                 $627 = +HEAPF32[$pa_i_i + ($mul2_i_i_i << 2) >> 2];
                 $sub_i40_i_i_i = +HEAPF32[$pa_i_i + ($mul_i28_i_i << 2) >> 2] - $627;
                 $629 = +HEAPF32[$pa_i_i + ($mul2_i_i_i + 2 << 2) >> 2];
                 $sub9_i47_i_i_i = +HEAPF32[$pa_i_i + ($mul_i28_i_i + 2 << 2) >> 2] - $629;
                 $sub_i30_i_i_i = $sub9_i47_i_i_i * ($625 - $627) - $sub_i40_i_i_i * ($624 - $629);
                 $sub_i25_i_i_i = $sub9_i_i_i_i1293 * $sub_i40_i_i_i - $sub_i_i27_i_i1292 * $sub9_i47_i_i_i;
                 do {
                  if (+Math_abs(+$sub_i25_i_i_i) < 9.99999993922529e-9) {
                   if ($sub_i30_i_i_i < 0.0) {
                    $nres_i482_0 = $n_0_i_i;
                    $t_i_2 = $t_i_0;
                    break L624;
                   } else {
                    $segMax_i_i_1 = $segMax_i_i_0;
                    $tmax_i_i_1 = $tmax_i_i_0;
                    $tmin_i_i_1 = $tmin_i_i_0;
                   }
                  } else {
                   $div_i33_i_i = $sub_i30_i_i_i / $sub_i25_i_i_i;
                   if ($sub_i25_i_i_i < 0.0) {
                    if (!($div_i33_i_i > $tmin_i_i_0)) {
                     $segMax_i_i_1 = $segMax_i_i_0;
                     $tmax_i_i_1 = $tmax_i_i_0;
                     $tmin_i_i_1 = $tmin_i_i_0;
                     break;
                    }
                    if ($div_i33_i_i > $tmax_i_i_0) {
                     $nres_i482_0 = $n_0_i_i;
                     $t_i_2 = $t_i_0;
                     break L624;
                    } else {
                     $segMax_i_i_1 = $segMax_i_i_0;
                     $tmax_i_i_1 = $tmax_i_i_0;
                     $tmin_i_i_1 = $div_i33_i_i;
                     break;
                    }
                   } else {
                    if (!($div_i33_i_i < $tmax_i_i_0)) {
                     $segMax_i_i_1 = $segMax_i_i_0;
                     $tmax_i_i_1 = $tmax_i_i_0;
                     $tmin_i_i_1 = $tmin_i_i_0;
                     break;
                    }
                    if ($div_i33_i_i < $tmin_i_i_0) {
                     $nres_i482_0 = $n_0_i_i;
                     $t_i_2 = $t_i_0;
                     break L624;
                    } else {
                     $segMax_i_i_1 = $j_052_i_i_i;
                     $tmax_i_i_1 = $div_i33_i_i;
                     $tmin_i_i_1 = $tmin_i_i_0;
                     break;
                    }
                   }
                  }
                 } while (0);
                 $inc_i_i_i568 = $i_053_i_i_i + 1 | 0;
                 if (($inc_i_i_i568 | 0) >= ($nv_0_lcssa_i_i1291 | 0)) {
                  $segMax_i_i_2 = $segMax_i_i_1;
                  $tmax_i_i_2 = $tmax_i_i_1;
                  $nv_0_lcssa_i_i1286 = $nv_0_lcssa_i_i1291;
                  break L627;
                 }
                 $j_052_i_i_i = $i_053_i_i_i;
                 $i_053_i_i_i = $inc_i_i_i568;
                 $625 = +HEAPF32[$arraydecay_i462 >> 2];
                 $624 = +HEAPF32[$arrayidx2_i_i463 >> 2];
                 $segMax_i_i_0 = $segMax_i_i_1;
                 $tmax_i_i_0 = $tmax_i_i_1;
                 $tmin_i_i_0 = $tmin_i_i_1;
                }
               }
              } while (0);
              $t_i_1 = $tmax_i_i_2 > $t_i_0 ? $tmax_i_i_2 : $t_i_0;
              if (($n_0_i_i | 0) < 32) {
               HEAP32[$reqPath_i + ($n_0_i_i << 2) >> 2] = $curRef_0_i_i;
               $n_1_i_i = $n_0_i_i + 1 | 0;
               $status_1_i_i = $status_0_i_i;
              } else {
               $n_1_i_i = $n_0_i_i;
               $status_1_i_i = $status_0_i_i | 16;
              }
              if (($segMax_i_i_2 | 0) == -1) {
               $nres_i482_0 = $n_1_i_i;
               $t_i_2 = 3.4028234663852886e+38;
               break;
              }
              $i37_098_i_i = HEAP32[$612 + ($and11_i_i11_i_i << 5) >> 2] | 0;
              if (($i37_098_i_i | 0) == -1) {
               label = 486;
               break;
              }
              $_pre155_i_i = HEAP32[$609 + ($and10_i_i10_i_i * 60 | 0) + 20 >> 2] | 0;
              $vertCount74_i_i = $612 + ($and11_i_i11_i_i << 5) + 30 | 0;
              $verts80_i_i614 = $609 + ($and10_i_i10_i_i * 60 | 0) + 16 | 0;
              $i37_0100_i_i = $i37_098_i_i;
              L654 : while (1) {
               do {
                if ((HEAPU8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 8 >> 0] | 0) == ($segMax_i_i_2 | 0)) {
                 $631 = HEAP32[$m_nav_i_i506 >> 2] | 0;
                 $632 = HEAP32[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) >> 2] | 0;
                 $633 = HEAP32[$631 + 76 >> 2] | 0;
                 $634 = HEAP32[$631 + 80 >> 2] | 0;
                 $and11_i_i22_i_i593 = (1 << $634) - 1 & $632;
                 $635 = HEAP32[$631 + 68 >> 2] | 0;
                 $636 = HEAP32[$635 + (($632 >>> ($634 >>> 0) & (1 << $633) - 1) * 60 | 0) + 12 >> 2] | 0;
                 if (!((HEAP8[$636 + ($and11_i_i22_i_i593 << 5) + 31 >> 0] & -64) << 24 >> 24 == 64)) {
                  $638 = HEAP16[$636 + ($and11_i_i22_i_i593 << 5) + 28 >> 1] | 0;
                  if (!((HEAP16[$m_includeFlags_i_i_i304 >> 1] & $638) << 16 >> 16 == 0)) {
                   if ((HEAP16[$m_excludeFlags_i_i_i305 >> 1] & $638) << 16 >> 16 == 0) {
                    $641 = HEAP8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 9 >> 0] | 0;
                    if ($641 << 24 >> 24 == -1) {
                     break L654;
                    }
                    $642 = HEAP8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 10 >> 0] | 0;
                    if ($642 << 24 >> 24 == 0) {
                     if ((HEAP8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 11 >> 0] | 0) == -1) {
                      break L654;
                     }
                    }
                    $mul79_i_i613 = (HEAPU16[$612 + ($and11_i_i11_i_i << 5) + 4 + ($segMax_i_i_2 << 1) >> 1] | 0) * 3 | 0;
                    $647 = HEAP32[$verts80_i_i614 >> 2] | 0;
                    $arrayidx81_i_i615 = $647 + ($mul79_i_i613 << 2) | 0;
                    $mul82_i_i616 = (HEAPU16[$612 + ($and11_i_i11_i_i << 5) + 4 + (((($segMax_i_i_2 + 1 | 0) >>> 0) % ((HEAPU8[$vertCount74_i_i >> 0] | 0) >>> 0) | 0) << 1) >> 1] | 0) * 3 | 0;
                    $arrayidx84_i_i617 = $647 + ($mul82_i_i616 << 2) | 0;
                    if (($641 << 24 >> 24 | 0) == 0 | ($641 << 24 >> 24 | 0) == 4) {
                     $649 = +HEAPF32[$647 + ($mul79_i_i613 + 2 << 2) >> 2];
                     $sub_i8_i = +HEAPF32[$647 + ($mul82_i_i616 + 2 << 2) >> 2] - $649;
                     $add101_i_i = $649 + $sub_i8_i * +($642 & 255 | 0) * .003921568859368563;
                     $add111_i_i = $649 + $sub_i8_i * +(HEAPU8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 11 >> 0] | 0) * .003921568859368563;
                     $cmp112_i_i = $add101_i_i > $add111_i_i;
                     $651 = +HEAPF32[$arrayidx2_i_i463 >> 2];
                     $add120_i_i = $651 + ($add11_i_i - $651) * $tmax_i_i_2;
                     if ($add120_i_i < ($cmp112_i_i ? $add111_i_i : $add101_i_i) | $add120_i_i > ($cmp112_i_i ? $add101_i_i : $add111_i_i)) {
                      break;
                     } else {
                      break L654;
                     }
                    } else if (($641 << 24 >> 24 | 0) == 2 | ($641 << 24 >> 24 | 0) == 6) {
                     $653 = +HEAPF32[$arrayidx81_i_i615 >> 2];
                     $sub141_i_i = +HEAPF32[$arrayidx84_i_i617 >> 2] - $653;
                     $add147_i_i = $653 + $sub141_i_i * +($642 & 255 | 0) * .003921568859368563;
                     $add158_i_i = $653 + $sub141_i_i * +(HEAPU8[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 11 >> 0] | 0) * .003921568859368563;
                     $cmp159_i_i = $add147_i_i > $add158_i_i;
                     $655 = +HEAPF32[$arraydecay_i462 >> 2];
                     $add167_i_i = $655 + ($add_i5_i503 - $655) * $tmax_i_i_2;
                     if ($add167_i_i < ($cmp159_i_i ? $add158_i_i : $add147_i_i) | $add167_i_i > ($cmp159_i_i ? $add147_i_i : $add158_i_i)) {
                      break;
                     } else {
                      break L654;
                     }
                    } else {
                     break;
                    }
                   }
                  }
                 }
                }
               } while (0);
               $i37_0_i_i = HEAP32[$_pre155_i_i + ($i37_0100_i_i * 12 | 0) + 4 >> 2] | 0;
               if (($i37_0_i_i | 0) == -1) {
                label = 486;
                break L624;
               } else {
                $i37_0100_i_i = $i37_0_i_i;
               }
              }
              if (($632 | 0) == 0) {
               label = 486;
               break;
              } else {
               $curRef_0_i_i = $632;
               $n_0_i_i = $n_1_i_i;
               $status_0_i_i = $status_1_i_i;
               $t_i_0 = $t_i_1;
               $611 = $633;
               $610 = $634;
               $609 = $635;
              }
             }
             if ((label | 0) == 486) {
              label = 0;
              $add182_i_i = $segMax_i_i_2 + 1 | 0;
              if (($add182_i_i | 0) < ($nv_0_lcssa_i_i1286 | 0)) {
               $cond_i10_i = $add182_i_i * 3 | 0;
              } else {
               $cond_i10_i = 0;
              }
              $mul185_i_i = $segMax_i_i_2 * 3 | 0;
              $sub191_i_i = +HEAPF32[$pa_i_i + ($cond_i10_i << 2) >> 2] - +HEAPF32[$pa_i_i + ($mul185_i_i << 2) >> 2];
              $sub194_i_i = +HEAPF32[$pa_i_i + ($cond_i10_i + 2 << 2) >> 2] - +HEAPF32[$pa_i_i + ($mul185_i_i + 2 << 2) >> 2];
              HEAPF32[$arraydecay50_i_i >> 2] = $sub194_i_i;
              HEAPF32[$arrayidx5_i2_i >> 2] = 0.0;
              HEAPF32[$arrayidx2_i27_i_i >> 2] = -0.0 - $sub191_i_i;
              $div_i_i_i624 = 1.0 / +Math_sqrt($sub191_i_i * $sub191_i_i + ($sub194_i_i * $sub194_i_i + 0.0));
              HEAPF32[$arraydecay50_i_i >> 2] = $div_i_i_i624 * +HEAPF32[$arraydecay50_i_i >> 2];
              HEAPF32[$arrayidx5_i2_i >> 2] = $div_i_i_i624 * +HEAPF32[$arrayidx5_i2_i >> 2];
              HEAPF32[$arrayidx2_i27_i_i >> 2] = $div_i_i_i624 * +HEAPF32[$arrayidx2_i27_i_i >> 2];
              $nres_i482_0 = $n_1_i_i;
              $t_i_2 = $t_i_1;
             }
             if (($nres_i482_0 | 0) > 1 & $t_i_2 > .9900000095367432) {
              $663 = HEAP32[$m_path_i456 >> 2] | 0;
              $664 = HEAP32[$m_npath_i459 >> 2] | 0;
              $665 = HEAP32[$567 + 36 >> 2] | 0;
              if (($nres_i482_0 | 0) > 0) {
               $furthestPath_0_us_i_i = -1;
               $i_0_in_us_i_i = $664;
               $furthestVisited_0_us_i_i = -1;
               while (1) {
                $i_0_us_i_i = $i_0_in_us_i_i - 1 | 0;
                if (($i_0_in_us_i_i | 0) <= 0) {
                 $furthestPath_3_i_i = $furthestPath_0_us_i_i;
                 $furthestVisited_3_i_i = $furthestVisited_0_us_i_i;
                 break;
                }
                $667 = HEAP32[$663 + ($i_0_us_i_i << 2) >> 2] | 0;
                $furthestVisited_135_us_i_i = $furthestVisited_0_us_i_i;
                $found_0_off036_us_i_i = 0;
                $furthestPath_137_us_i_i = $furthestPath_0_us_i_i;
                $j_038_us_in_i_i = $nres_i482_0;
                do {
                 $j_038_us_in_i_i = $j_038_us_in_i_i - 1 | 0;
                 $cmp6_us_i_i = ($667 | 0) == (HEAP32[$reqPath_i + ($j_038_us_in_i_i << 2) >> 2] | 0);
                 $furthestVisited_135_us_i_i = $cmp6_us_i_i ? $j_038_us_in_i_i : $furthestVisited_135_us_i_i;
                 $found_0_off036_us_i_i = $cmp6_us_i_i | $found_0_off036_us_i_i;
                 $furthestPath_137_us_i_i = $cmp6_us_i_i ? $i_0_us_i_i : $furthestPath_137_us_i_i;
                } while (($j_038_us_in_i_i | 0) > 0);
                if ($found_0_off036_us_i_i) {
                 $furthestPath_3_i_i = $furthestPath_137_us_i_i;
                 $furthestVisited_3_i_i = $furthestVisited_135_us_i_i;
                 break;
                } else {
                 $furthestPath_0_us_i_i = $furthestPath_137_us_i_i;
                 $i_0_in_us_i_i = $i_0_us_i_i;
                 $furthestVisited_0_us_i_i = $furthestVisited_135_us_i_i;
                }
               }
               if (($furthestPath_3_i_i | 0) == -1 | ($furthestVisited_3_i_i | 0) == -1 | ($furthestVisited_3_i_i | 0) < 1) {
                $retval_0_i_i641 = $664;
               } else {
                $sub19_i_i = $664 - $furthestPath_3_i_i | 0;
                $cond_i_i_i635 = ($sub19_i_i | 0) < 0 ? 0 : $sub19_i_i;
                $sub22_call_i_i = ($cond_i_i_i635 + $furthestVisited_3_i_i | 0) > ($665 | 0) ? $665 - $furthestVisited_3_i_i | 0 : $cond_i_i_i635;
                if (($sub22_call_i_i | 0) != 0) {
                 _memmove($663 + ($furthestVisited_3_i_i << 2) | 0, $663 + ($furthestPath_3_i_i << 2) | 0, $sub22_call_i_i << 2 | 0) | 0;
                }
                if (($furthestVisited_3_i_i | 0) > 0) {
                 $i28_032_i_i = 0;
                 do {
                  HEAP32[$663 + ($i28_032_i_i << 2) >> 2] = HEAP32[$reqPath_i + ($i28_032_i_i << 2) >> 2];
                  $i28_032_i_i = $i28_032_i_i + 1 | 0;
                 } while (($i28_032_i_i | 0) < ($furthestVisited_3_i_i | 0));
                }
                $retval_0_i_i641 = $sub22_call_i_i + $furthestVisited_3_i_i | 0;
               }
              } else {
               $retval_0_i_i641 = $664;
              }
              HEAP32[$m_npath_i459 >> 2] = $retval_0_i_i641;
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $inc104 = $i61_0534 + 1 | 0;
    if (($inc104 | 0) < ($n_0_lcssa_i | 0)) {
     $i61_0534 = $inc104;
    } else {
     label = 426;
     break;
    }
   }
   if ((label | 0) == 426) {
    $m_agentAnims = $this + 12 | 0;
    $i106_0532 = 0;
    while (1) {
     $671 = HEAP32[$0 + ($i106_0532 << 2) >> 2] | 0;
     $state112 = $671 + 1 | 0;
     if ((HEAP8[$state112 >> 0] | 0) == 1) {
      $673 = HEAP8[$671 + 576 >> 0] | 0;
      if (!(($673 << 24 >> 24 | 0) == 0 | ($673 << 24 >> 24 | 0) == 6)) {
       $mul128 = +HEAPF32[$671 + 468 >> 2] * 2.25;
       $ncorners_i441 = $671 + 572 | 0;
       $675 = HEAP32[$ncorners_i441 >> 2] | 0;
       if (($675 | 0) != 0) {
        $sub_i443 = $675 - 1 | 0;
        if (!((HEAP8[$671 + 552 + $sub_i443 >> 0] & 4) == 0)) {
         $arraydecay_i448 = $671 + 408 | 0;
         $mul_i449 = $sub_i443 * 3 | 0;
         $sub_i_i451 = +HEAPF32[$671 + 504 + ($mul_i449 << 2) >> 2] - +HEAPF32[$arraydecay_i448 >> 2];
         $arrayidx3_i_i454 = $671 + 416 | 0;
         $sub4_i_i455 = +HEAPF32[$671 + 504 + ($mul_i449 + 2 << 2) >> 2] - +HEAPF32[$arrayidx3_i_i454 >> 2];
         if ($sub_i_i451 * $sub_i_i451 + $sub4_i_i455 * $sub4_i_i455 < $mul128 * $mul128) {
          $sub_ptr_div = ($671 - (HEAP32[$m_agents_i418 >> 2] | 0) | 0) / 608 | 0;
          $682 = HEAP32[$m_agentAnims >> 2] | 0;
          $683 = HEAP32[$671 + 556 + ($sub_i443 << 2) >> 2] | 0;
          $arraydecay139 = $682 + ($sub_ptr_div * 52 | 0) + 16 | 0;
          $arraydecay140 = $682 + ($sub_ptr_div * 52 | 0) + 28 | 0;
          $684 = HEAP32[$m_navquery33 >> 2] | 0;
          if (($684 | 0) == 0) {
           label = 509;
           break;
          }
          $685 = HEAP32[$671 + 28 >> 2] | 0;
          if (($685 | 0) == 0) {
           label = 511;
           break;
          }
          $m_npath_i648 = $671 + 32 | 0;
          $686 = HEAP32[$m_npath_i648 >> 2] | 0;
          if (($686 | 0) == 0) {
           label = 514;
           break;
          }
          $polyRef_021_i = HEAP32[$685 >> 2] | 0;
          L708 : do {
           if (($686 | 0) < 1 | ($polyRef_021_i | 0) == ($683 | 0)) {
            $npos_0_lcssa_i = 0;
            $687 = 0;
            $polyRef_0_lcssa_i = $polyRef_021_i;
           } else {
            $npos_025_i = 1;
            $polyRef_026_i = $polyRef_021_i;
            $polyRef_0_i = $polyRef_021_i;
            while (1) {
             if (($npos_025_i | 0) >= ($686 | 0) | ($polyRef_0_i | 0) == ($683 | 0)) {
              $npos_0_lcssa_i = $npos_025_i;
              $687 = $polyRef_026_i;
              $polyRef_0_lcssa_i = $polyRef_0_i;
              break L708;
             }
             $polyRef_0_pre_i = HEAP32[$685 + ($npos_025_i << 2) >> 2] | 0;
             $npos_025_i = $npos_025_i + 1 | 0;
             $polyRef_026_i = $polyRef_0_i;
             $polyRef_0_i = $polyRef_0_pre_i;
            }
           }
          } while (0);
          if (($npos_0_lcssa_i | 0) != ($686 | 0)) {
           if (($npos_0_lcssa_i | 0) < ($686 | 0)) {
            $i_019_i655 = $npos_0_lcssa_i;
            while (1) {
             HEAP32[$685 + ($i_019_i655 - $npos_0_lcssa_i << 2) >> 2] = HEAP32[$685 + ($i_019_i655 << 2) >> 2];
             $inc21_i658 = $i_019_i655 + 1 | 0;
             $689 = HEAP32[$m_npath_i648 >> 2] | 0;
             if (($inc21_i658 | 0) < ($689 | 0)) {
              $i_019_i655 = $inc21_i658;
             } else {
              $_lcssa_i = $689;
              break;
             }
            }
           } else {
            $_lcssa_i = $686;
           }
           HEAP32[$m_npath_i648 >> 2] = $_lcssa_i - $npos_0_lcssa_i;
           $690 = HEAP32[$684 >> 2] | 0;
           if (($690 | 0) == 0) {
            label = 521;
            break;
           }
           if (($polyRef_0_lcssa_i | 0) != 0) {
            $691 = HEAP32[$690 + 76 >> 2] | 0;
            $692 = HEAP32[$690 + 80 >> 2] | 0;
            $and10_i_i_i671 = $polyRef_0_lcssa_i >>> ($692 >>> 0) & (1 << $691) - 1;
            $and11_i_i_i672 = (1 << $692) - 1 & $polyRef_0_lcssa_i;
            if ($and10_i_i_i671 >>> 0 < (HEAP32[$690 + 48 >> 2] | 0) >>> 0) {
             $695 = HEAP32[$690 + 68 >> 2] | 0;
             if ((HEAP32[$695 + ($and10_i_i_i671 * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$690 + 72 >> 2]) - 1 & $polyRef_0_lcssa_i >>> (($692 + $691 | 0) >>> 0) | 0)) {
              $697 = HEAP32[$695 + ($and10_i_i_i671 * 60 | 0) + 8 >> 2] | 0;
              if (($697 | 0) != 0) {
               if ($and11_i_i_i672 >>> 0 < (HEAP32[$697 + 24 >> 2] | 0) >>> 0) {
                $699 = HEAP32[$695 + ($and10_i_i_i671 * 60 | 0) + 12 >> 2] | 0;
                if ((HEAP8[$699 + ($and11_i_i_i672 << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
                 $i_020_i_i = HEAP32[$699 + ($and11_i_i_i672 << 5) >> 2] | 0;
                 L725 : do {
                  if (($i_020_i_i | 0) == -1) {
                   $idx1_0_i_i = 1;
                   $idx0_0_i_i = 0;
                  } else {
                   $701 = HEAP32[$695 + ($and10_i_i_i671 * 60 | 0) + 20 >> 2] | 0;
                   $i_022_i_i = $i_020_i_i;
                   while (1) {
                    if ((HEAP8[$701 + ($i_022_i_i * 12 | 0) + 8 >> 0] | 0) == 0) {
                     break;
                    }
                    $i_0_i_i = HEAP32[$701 + ($i_022_i_i * 12 | 0) + 4 >> 2] | 0;
                    if (($i_0_i_i | 0) == -1) {
                     $idx1_0_i_i = 1;
                     $idx0_0_i_i = 0;
                     break L725;
                    } else {
                     $i_022_i_i = $i_0_i_i;
                    }
                   }
                   $704 = (HEAP32[$701 + ($i_022_i_i * 12 | 0) >> 2] | 0) == ($687 | 0) | 0;
                   $idx1_0_i_i = $704;
                   $idx0_0_i_i = $704 ^ 1;
                  }
                 } while (0);
                 $mul_i_i706 = (HEAPU16[$699 + ($and11_i_i_i672 << 5) + 4 + ($idx0_0_i_i << 1) >> 1] | 0) * 3 | 0;
                 $706 = HEAP32[$695 + ($and10_i_i_i671 * 60 | 0) + 16 >> 2] | 0;
                 HEAPF32[$arraydecay139 >> 2] = +HEAPF32[$706 + ($mul_i_i706 << 2) >> 2];
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 20 >> 2] = +HEAPF32[$706 + ($mul_i_i706 + 1 << 2) >> 2];
                 $arrayidx5_i16_i_i710 = $682 + ($sub_ptr_div * 52 | 0) + 24 | 0;
                 HEAPF32[$arrayidx5_i16_i_i710 >> 2] = +HEAPF32[$706 + ($mul_i_i706 + 2 << 2) >> 2];
                 $mul41_i_i = (HEAPU16[$699 + ($and11_i_i_i672 << 5) + 4 + ($idx1_0_i_i << 1) >> 1] | 0) * 3 | 0;
                 $711 = +HEAPF32[$706 + ($mul41_i_i << 2) >> 2];
                 HEAPF32[$arraydecay140 >> 2] = $711;
                 $arrayidx3_i_i_i712 = $682 + ($sub_ptr_div * 52 | 0) + 32 | 0;
                 HEAPF32[$arrayidx3_i_i_i712 >> 2] = +HEAPF32[$706 + ($mul41_i_i + 1 << 2) >> 2];
                 $arrayidx5_i_i_i714 = $682 + ($sub_ptr_div * 52 | 0) + 36 | 0;
                 HEAPF32[$arrayidx5_i_i_i714 >> 2] = +HEAPF32[$706 + ($mul41_i_i + 2 << 2) >> 2];
                 HEAPF32[$671 + 4 >> 2] = $711;
                 HEAPF32[$671 + 8 >> 2] = +HEAPF32[$arrayidx3_i_i_i712 >> 2];
                 HEAPF32[$671 + 12 >> 2] = +HEAPF32[$arrayidx5_i_i_i714 >> 2];
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 4 >> 2] = +HEAPF32[$arraydecay_i448 >> 2];
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 8 >> 2] = +HEAPF32[$671 + 412 >> 2];
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 12 >> 2] = +HEAPF32[$arrayidx3_i_i454 >> 2];
                 HEAP32[$682 + ($sub_ptr_div * 52 | 0) + 40 >> 2] = $polyRef_0_lcssa_i;
                 HEAP8[$682 + ($sub_ptr_div * 52 | 0) >> 0] = 1;
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 44 >> 2] = 0.0;
                 $sub_i427 = +HEAPF32[$arraydecay140 >> 2] - +HEAPF32[$arraydecay139 >> 2];
                 $sub4_i430 = +HEAPF32[$arrayidx5_i_i_i714 >> 2] - +HEAPF32[$arrayidx5_i16_i_i710 >> 2];
                 $call_i725 = +Math_sqrt($sub_i427 * $sub_i427 + $sub4_i430 * $sub4_i430);
                 HEAPF32[$682 + ($sub_ptr_div * 52 | 0) + 48 >> 2] = $call_i725 / +HEAPF32[$671 + 480 >> 2] * .5;
                 HEAP8[$state112 >> 0] = 2;
                 HEAP32[$ncorners_i441 >> 2] = 0;
                 HEAP32[$671 + 400 >> 2] = 0;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
     $inc161 = $i106_0532 + 1 | 0;
     if (($inc161 | 0) < ($n_0_lcssa_i | 0)) {
      $i106_0532 = $inc161;
     } else {
      $i163_0530 = 0;
      $dvel_sroa_23_0 = 0.0;
      $dvel_sroa_12_0 = 0.0;
      $dvel_sroa_0_0 = 0.0;
      label = 536;
      break;
     }
    }
    if ((label | 0) == 509) {
     ___assert_fail(3360, 7256, 384, 10432);
    } else if ((label | 0) == 511) {
     ___assert_fail(5032, 7256, 385, 10432);
    } else if ((label | 0) == 514) {
     ___assert_fail(4168, 7256, 386, 10432);
    } else if ((label | 0) == 521) {
     ___assert_fail(2152, 7256, 412, 10432);
    } else if ((label | 0) == 536) {
     while (1) {
      label = 0;
      $725 = HEAP32[$0 + ($i163_0530 << 2) >> 2] | 0;
      do {
       if ((HEAP8[$725 + 1 >> 0] | 0) == 1) {
        $727 = HEAP8[$725 + 576 >> 0] | 0;
        if (($727 << 24 >> 24 | 0) == 6) {
         $728 = +HEAPF32[$725 + 584 >> 2];
         $729 = +HEAPF32[$725 + 588 >> 2];
         $730 = +HEAPF32[$725 + 592 >> 2];
         $call_i726 = +Math_sqrt($728 * $728 + $729 * $729 + $730 * $730);
         HEAPF32[$725 + 404 >> 2] = $call_i726;
         $updateFlags213_pre_phi = $725 + 496 | 0;
         $dvel_sroa_23_3 = $730;
         $dvel_sroa_12_3 = $729;
         $dvel_sroa_0_3 = $728;
        } else if (($727 << 24 >> 24 | 0) == 0) {
         $dvel_sroa_23_5 = $dvel_sroa_23_0;
         $dvel_sroa_12_5 = $dvel_sroa_12_0;
         $dvel_sroa_0_5 = $dvel_sroa_0_0;
         break;
        } else {
         $updateFlags190 = $725 + 496 | 0;
         $ncorners_i395 = $725 + 572 | 0;
         $732 = HEAP32[$ncorners_i395 >> 2] | 0;
         $tobool_i396 = ($732 | 0) == 0;
         if ((HEAP8[$updateFlags190 >> 0] & 1) == 0) {
          if ($tobool_i396) {
           $ncorners_i_pre_phi = $ncorners_i395;
           $dvel_sroa_23_2 = 0.0;
           $dvel_sroa_12_2 = 0.0;
           $dvel_sroa_0_2 = 0.0;
          } else {
           $sub_i_i400 = +HEAPF32[$725 + 504 >> 2] - +HEAPF32[$725 + 408 >> 2];
           $sub9_i_i = +HEAPF32[$725 + 512 >> 2] - +HEAPF32[$725 + 416 >> 2];
           $div_i_i = 1.0 / +Math_sqrt($sub_i_i400 * $sub_i_i400 + 0.0 + $sub9_i_i * $sub9_i_i);
           $ncorners_i_pre_phi = $ncorners_i395;
           $dvel_sroa_23_2 = $div_i_i * $sub9_i_i;
           $dvel_sroa_12_2 = $div_i_i * 0.0;
           $dvel_sroa_0_2 = $div_i_i * $sub_i_i400;
          }
         } else {
          if ($tobool_i396) {
           $ncorners_i_pre_phi = $ncorners_i395;
           $dvel_sroa_23_2 = 0.0;
           $dvel_sroa_12_2 = 0.0;
           $dvel_sroa_0_2 = 0.0;
          } else {
           $sub_i732 = $732 - 1 | 0;
           $mul_i735 = ($sub_i732 | 0) > 1 ? 3 : $sub_i732 * 3 | 0;
           $734 = +HEAPF32[$725 + 408 >> 2];
           $sub_i_i738 = +HEAPF32[$725 + 504 >> 2] - $734;
           $736 = +HEAPF32[$725 + 416 >> 2];
           $sub9_i_i740 = +HEAPF32[$725 + 512 >> 2] - $736;
           $sub_i30_i = +HEAPF32[$725 + 504 + ($mul_i735 << 2) >> 2] - $734;
           $sub9_i37_i = +HEAPF32[$725 + 504 + ($mul_i735 + 2 << 2) >> 2] - $736;
           $call_i1_i741 = +Math_sqrt($sub_i_i738 * $sub_i_i738 + 0.0 + $sub9_i_i740 * $sub9_i_i740);
           $call_i2_i = +Math_sqrt($sub_i30_i * $sub_i30_i + 0.0 + $sub9_i37_i * $sub9_i37_i);
           if ($call_i2_i > .0010000000474974513) {
            $div_i748 = 1.0 / $call_i2_i;
            $dir1_sroa_0_0_load46_i = $sub_i30_i * $div_i748;
            $dir1_sroa_10_8_load47_i = $sub9_i37_i * $div_i748;
           } else {
            $dir1_sroa_0_0_load46_i = $sub_i30_i;
            $dir1_sroa_10_8_load47_i = $sub9_i37_i;
           }
           $sub22_i = $sub_i_i738 - $call_i1_i741 * $dir1_sroa_0_0_load46_i * .5;
           $sub29_i = $sub9_i_i740 - $call_i1_i741 * $dir1_sroa_10_8_load47_i * .5;
           $div_i_i755 = 1.0 / +Math_sqrt($sub29_i * $sub29_i + ($sub22_i * $sub22_i + 0.0));
           $ncorners_i_pre_phi = $ncorners_i395;
           $dvel_sroa_23_2 = $div_i_i755 * $sub29_i;
           $dvel_sroa_12_2 = $div_i_i755 * 0.0;
           $dvel_sroa_0_2 = $div_i_i755 * $sub22_i;
          }
         }
         $mul201 = +HEAPF32[$725 + 468 >> 2] * 2.0;
         $744 = HEAP32[$ncorners_i_pre_phi >> 2] | 0;
         if (($744 | 0) == 0) {
          $retval_0_i = $mul201;
         } else {
          $sub_i381 = $744 - 1 | 0;
          if ((HEAP8[$725 + 552 + $sub_i381 >> 0] & 2) == 0) {
           $retval_0_i = $mul201;
          } else {
           $mul_i384 = $sub_i381 * 3 | 0;
           $sub_i_i = +HEAPF32[$725 + 504 + ($mul_i384 << 2) >> 2] - +HEAPF32[$725 + 408 >> 2];
           $sub4_i_i = +HEAPF32[$725 + 504 + ($mul_i384 + 2 << 2) >> 2] - +HEAPF32[$725 + 416 >> 2];
           $call_i760 = +Math_sqrt($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i);
           $retval_0_i = $call_i760 < $mul201 ? $call_i760 : $mul201;
          }
         }
         $750 = +HEAPF32[$725 + 480 >> 2];
         HEAPF32[$725 + 404 >> 2] = $750;
         $mul210 = $retval_0_i / $mul201 * $750;
         $updateFlags213_pre_phi = $updateFlags190;
         $dvel_sroa_23_3 = $mul210 * $dvel_sroa_23_2;
         $dvel_sroa_12_3 = $mul210 * $dvel_sroa_12_2;
         $dvel_sroa_0_3 = $dvel_sroa_0_2 * $mul210;
        }
        if ((HEAP8[$updateFlags213_pre_phi >> 0] & 4) == 0) {
         $dvel_sroa_23_4 = $dvel_sroa_23_3;
         $dvel_sroa_12_4 = $dvel_sroa_12_3;
         $dvel_sroa_0_4 = $dvel_sroa_0_3;
        } else {
         $752 = +HEAPF32[$725 + 484 >> 2];
         $div220 = 1.0 / $752;
         $753 = +HEAPF32[$725 + 492 >> 2];
         $nneis225 = $725 + 400 | 0;
         $754 = HEAP32[$nneis225 >> 2] | 0;
         if (($754 | 0) > 0) {
          $arraydecay235 = $725 + 408 | 0;
          $arrayidx7_i369 = $725 + 416 | 0;
          $mul_i356 = $752 * $752;
          $disp_sroa_0_0_load473489517 = 0.0;
          $disp_sroa_4_0_load484518 = 0.0;
          $disp_sroa_7_0_oldload482519 = 0.0;
          $j223_0520 = 0;
          $w_0521 = 0.0;
          $755 = $754;
          while (1) {
           $756 = HEAP32[$725 + 352 + ($j223_0520 << 3) >> 2] | 0;
           $757 = HEAP32[$m_agents_i418 >> 2] | 0;
           $sub_i364 = +HEAPF32[$arraydecay235 >> 2] - +HEAPF32[$757 + ($756 * 608 | 0) + 408 >> 2];
           $sub9_i371 = +HEAPF32[$arrayidx7_i369 >> 2] - +HEAPF32[$757 + ($756 * 608 | 0) + 416 >> 2];
           $add8_i363 = $sub_i364 * $sub_i364 + 0.0 + $sub9_i371 * $sub9_i371;
           if ($add8_i363 < 9999999747378752.0e-21 | $add8_i363 > $mul_i356) {
            $w_1 = $w_0521;
            $disp_sroa_7_0_oldload481 = $disp_sroa_7_0_oldload482519;
            $disp_sroa_4_0_load483 = $disp_sroa_4_0_load484518;
            $disp_sroa_0_0_load473488 = $disp_sroa_0_0_load473489517;
            $762 = $755;
           } else {
            $call248 = +Math_sqrt($add8_i363);
            $mul249 = $div220 * $call248;
            $div256 = $753 * (1.0 - $mul249 * $mul249) / $call248;
            $w_1 = $w_0521 + 1.0;
            $disp_sroa_7_0_oldload481 = $disp_sroa_7_0_oldload482519 + $sub9_i371 * $div256;
            $disp_sroa_4_0_load483 = $disp_sroa_4_0_load484518 + $div256 * 0.0;
            $disp_sroa_0_0_load473488 = $disp_sroa_0_0_load473489517 + $sub_i364 * $div256;
            $762 = HEAP32[$nneis225 >> 2] | 0;
           }
           $j223_0520 = $j223_0520 + 1 | 0;
           if (($j223_0520 | 0) >= ($762 | 0)) {
            break;
           } else {
            $disp_sroa_0_0_load473489517 = $disp_sroa_0_0_load473488;
            $disp_sroa_4_0_load484518 = $disp_sroa_4_0_load483;
            $disp_sroa_7_0_oldload482519 = $disp_sroa_7_0_oldload481;
            $w_0521 = $w_1;
            $755 = $762;
           }
          }
          if ($w_1 > 9999999747378752.0e-20) {
           $div266 = 1.0 / $w_1;
           $add_i332 = $dvel_sroa_0_3 + $disp_sroa_0_0_load473488 * $div266;
           $add6_i336 = $disp_sroa_4_0_load483 * $div266 + $dvel_sroa_12_3;
           $add11_i341 = $disp_sroa_7_0_oldload481 * $div266 + $dvel_sroa_23_3;
           $add8_i330 = $add11_i341 * $add11_i341 + ($add_i332 * $add_i332 + $add6_i336 * $add6_i336);
           $763 = +HEAPF32[$725 + 404 >> 2];
           $mul_i323 = $763 * $763;
           if ($add8_i330 > $mul_i323) {
            $div275 = $mul_i323 / $add8_i330;
            $dvel_sroa_23_4 = $div275 * $add11_i341;
            $dvel_sroa_12_4 = $div275 * $add6_i336;
            $dvel_sroa_0_4 = $add_i332 * $div275;
           } else {
            $dvel_sroa_23_4 = $add11_i341;
            $dvel_sroa_12_4 = $add6_i336;
            $dvel_sroa_0_4 = $add_i332;
           }
          } else {
           $dvel_sroa_23_4 = $dvel_sroa_23_3;
           $dvel_sroa_12_4 = $dvel_sroa_12_3;
           $dvel_sroa_0_4 = $dvel_sroa_0_3;
          }
         } else {
          $dvel_sroa_23_4 = $dvel_sroa_23_3;
          $dvel_sroa_12_4 = $dvel_sroa_12_3;
          $dvel_sroa_0_4 = $dvel_sroa_0_3;
         }
        }
        HEAPF32[$725 + 432 >> 2] = $dvel_sroa_0_4;
        HEAPF32[$725 + 436 >> 2] = $dvel_sroa_12_4;
        HEAPF32[$725 + 440 >> 2] = $dvel_sroa_23_4;
        $dvel_sroa_23_5 = $dvel_sroa_23_4;
        $dvel_sroa_12_5 = $dvel_sroa_12_4;
        $dvel_sroa_0_5 = $dvel_sroa_0_4;
       } else {
        $dvel_sroa_23_5 = $dvel_sroa_23_0;
        $dvel_sroa_12_5 = $dvel_sroa_12_0;
        $dvel_sroa_0_5 = $dvel_sroa_0_0;
       }
      } while (0);
      $i163_0530 = $i163_0530 + 1 | 0;
      if (($i163_0530 | 0) >= ($n_0_lcssa_i | 0)) {
       break;
      } else {
       $dvel_sroa_23_0 = $dvel_sroa_23_5;
       $dvel_sroa_12_0 = $dvel_sroa_12_5;
       $dvel_sroa_0_0 = $dvel_sroa_0_5;
       label = 536;
      }
     }
     $m_obstacleQuery = $this + 704 | 0;
     $arrayidx16_i = $pat_i | 0;
     $arrayidx19_i = $pat_i + 4 | 0;
     $i285_0515 = 0;
     while (1) {
      $764 = HEAP32[$0 + ($i285_0515 << 2) >> 2] | 0;
      do {
       if ((HEAP8[$764 + 1 >> 0] | 0) == 1) {
        if ((HEAP8[$764 + 496 >> 0] & 2) == 0) {
         HEAPF32[$764 + 444 >> 2] = +HEAPF32[$764 + 432 >> 2];
         HEAPF32[$764 + 448 >> 2] = +HEAPF32[$764 + 436 >> 2];
         HEAPF32[$764 + 452 >> 2] = +HEAPF32[$764 + 440 >> 2];
         break;
        }
        $767 = HEAP32[$m_obstacleQuery >> 2] | 0;
        $m_ncircles_i = $767 + 48 | 0;
        HEAP32[$m_ncircles_i >> 2] = 0;
        $m_nsegments_i = $767 + 60 | 0;
        HEAP32[$m_nsegments_i >> 2] = 0;
        $768 = HEAP32[$764 + 400 >> 2] | 0;
        if (($768 | 0) > 0) {
         $769 = HEAP32[$m_agents_i418 >> 2] | 0;
         $770 = HEAP32[$767 + 40 >> 2] | 0;
         $m_circles_i = $767 + 44 | 0;
         $j302_0511 = 0;
         $771 = 0;
         while (1) {
          $772 = HEAP32[$764 + 352 + ($j302_0511 << 3) >> 2] | 0;
          if (($771 | 0) < ($770 | 0)) {
           $773 = +HEAPF32[$769 + ($772 * 608 | 0) + 468 >> 2];
           $inc_i763 = $771 + 1 | 0;
           HEAP32[$m_ncircles_i >> 2] = $inc_i763;
           $774 = HEAP32[$m_circles_i >> 2] | 0;
           HEAPF32[$774 + ($771 << 6) >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 408 >> 2];
           HEAPF32[$774 + ($771 << 6) + 4 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 412 >> 2];
           HEAPF32[$774 + ($771 << 6) + 8 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 416 >> 2];
           HEAPF32[$774 + ($771 << 6) + 36 >> 2] = $773;
           HEAPF32[$774 + ($771 << 6) + 12 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 456 >> 2];
           HEAPF32[$774 + ($771 << 6) + 16 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 460 >> 2];
           HEAPF32[$774 + ($771 << 6) + 20 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 464 >> 2];
           HEAPF32[$774 + ($771 << 6) + 24 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 432 >> 2];
           HEAPF32[$774 + ($771 << 6) + 28 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 436 >> 2];
           HEAPF32[$774 + ($771 << 6) + 32 >> 2] = +HEAPF32[$769 + ($772 * 608 | 0) + 440 >> 2];
           $784 = $inc_i763;
          } else {
           $784 = $771;
          }
          $inc322 = $j302_0511 + 1 | 0;
          if (($inc322 | 0) < ($768 | 0)) {
           $j302_0511 = $inc322;
           $771 = $784;
          } else {
           $785 = $784;
           break;
          }
         }
        } else {
         $785 = 0;
        }
        $786 = HEAP32[$764 + 276 >> 2] | 0;
        $arraydecay333 = $764 + 408 | 0;
        if (($786 | 0) > 0) {
         $arrayidx3_i307 = $764 + 416 | 0;
         $j324_0513 = 0;
         $787 = 0;
         while (1) {
          $add_ptr = $764 + 52 + ($j324_0513 * 28 | 0) + 12 | 0;
          $788 = +HEAPF32[$764 + 52 + ($j324_0513 * 28 | 0) >> 2];
          $789 = +HEAPF32[$arraydecay333 >> 2];
          $arrayidx2_i306 = $764 + 52 + ($j324_0513 * 28 | 0) + 8 | 0;
          $791 = +HEAPF32[$arrayidx3_i307 >> 2];
          $arrayidx8_i309 = $764 + 52 + ($j324_0513 * 28 | 0) + 20 | 0;
          if ((+HEAPF32[$arrayidx2_i306 >> 2] - $791) * (+HEAPF32[$add_ptr >> 2] - $789) - ($788 - $789) * (+HEAPF32[$arrayidx8_i309 >> 2] - $791) < 0.0) {
           $801 = $787;
          } else {
           if (($787 | 0) > (HEAP32[$767 + 52 >> 2] | 0)) {
            $801 = $787;
           } else {
            $inc_i773 = $787 + 1 | 0;
            HEAP32[$m_nsegments_i >> 2] = $inc_i773;
            $795 = HEAP32[$767 + 56 >> 2] | 0;
            HEAPF32[$795 + ($787 * 28 | 0) >> 2] = $788;
            HEAPF32[$795 + ($787 * 28 | 0) + 4 >> 2] = +HEAPF32[$764 + 52 + ($j324_0513 * 28 | 0) + 4 >> 2];
            HEAPF32[$795 + ($787 * 28 | 0) + 8 >> 2] = +HEAPF32[$arrayidx2_i306 >> 2];
            HEAPF32[$795 + ($787 * 28 | 0) + 12 >> 2] = +HEAPF32[$add_ptr >> 2];
            HEAPF32[$795 + ($787 * 28 | 0) + 16 >> 2] = +HEAPF32[$764 + 52 + ($j324_0513 * 28 | 0) + 16 >> 2];
            HEAPF32[$795 + ($787 * 28 | 0) + 20 >> 2] = +HEAPF32[$arrayidx8_i309 >> 2];
            $801 = $inc_i773;
           }
          }
          $inc341 = $j324_0513 + 1 | 0;
          if (($inc341 | 0) < ($786 | 0)) {
           $j324_0513 = $inc341;
           $787 = $801;
          } else {
           $802 = $801;
           break;
          }
         }
        } else {
         $802 = 0;
        }
        $arraydecay358 = $764 + 444 | 0;
        $arraydecay357 = $764 + 432 | 0;
        $arraydecay355 = $764 + 456 | 0;
        $804 = +HEAPF32[$764 + 404 >> 2];
        $805 = +HEAPF32[$764 + 468 >> 2];
        $arrayidx345 = $this + 480 + ((HEAPU8[$764 + 497 >> 0] | 0) * 28 | 0) | 0;
        if (($785 | 0) > 0) {
         $m_circles_i_i = $767 + 44 | 0;
         $arrayidx4_i_i_i781 = $764 + 412 | 0;
         $arrayidx8_i_i_i782 = $764 + 416 | 0;
         $arrayidx8_i26_i_i = $764 + 440 | 0;
         $i_035_i_i = 0;
         do {
          $810 = HEAP32[$m_circles_i_i >> 2] | 0;
          $arraydecay2_i_i786 = $810 + ($i_035_i_i << 6) + 40 | 0;
          $sub_i_i_i787 = +HEAPF32[$810 + ($i_035_i_i << 6) >> 2] - +HEAPF32[$arraydecay333 >> 2];
          HEAPF32[$arraydecay2_i_i786 >> 2] = $sub_i_i_i787;
          $sub5_i_i_i789 = +HEAPF32[$810 + ($i_035_i_i << 6) + 4 >> 2] - +HEAPF32[$arrayidx4_i_i_i781 >> 2];
          $arrayidx6_i_i_i = $810 + ($i_035_i_i << 6) + 44 | 0;
          HEAPF32[$arrayidx6_i_i_i >> 2] = $sub5_i_i_i789;
          $sub9_i_i_i790 = +HEAPF32[$810 + ($i_035_i_i << 6) + 8 >> 2] - +HEAPF32[$arrayidx8_i_i_i782 >> 2];
          $arrayidx10_i_i_i791 = $810 + ($i_035_i_i << 6) + 48 | 0;
          HEAPF32[$arrayidx10_i_i_i791 >> 2] = $sub9_i_i_i790;
          $div_i_i_i797 = 1.0 / +Math_sqrt($sub9_i_i_i790 * $sub9_i_i_i790 + ($sub_i_i_i787 * $sub_i_i_i787 + $sub5_i_i_i789 * $sub5_i_i_i789));
          $mul_i30_i_i798 = $div_i_i_i797 * +HEAPF32[$arraydecay2_i_i786 >> 2];
          HEAPF32[$arraydecay2_i_i786 >> 2] = $mul_i30_i_i798;
          HEAPF32[$arrayidx6_i_i_i >> 2] = $div_i_i_i797 * +HEAPF32[$arrayidx6_i_i_i >> 2];
          $mul11_i31_i_i = $div_i_i_i797 * +HEAPF32[$arrayidx10_i_i_i791 >> 2];
          HEAPF32[$arrayidx10_i_i_i791 >> 2] = $mul11_i31_i_i;
          if ($mul11_i31_i_i * (+HEAPF32[$810 + ($i_035_i_i << 6) + 24 >> 2] - +HEAPF32[$arraydecay357 >> 2]) - $mul_i30_i_i798 * (+HEAPF32[$810 + ($i_035_i_i << 6) + 32 >> 2] - +HEAPF32[$arrayidx8_i26_i_i >> 2]) < .009999999776482582) {
           HEAPF32[$810 + ($i_035_i_i << 6) + 52 >> 2] = -0.0 - $mul11_i31_i_i;
           HEAPF32[$810 + ($i_035_i_i << 6) + 60 >> 2] = $mul_i30_i_i798;
          } else {
           HEAPF32[$810 + ($i_035_i_i << 6) + 52 >> 2] = $mul11_i31_i_i;
           HEAPF32[$810 + ($i_035_i_i << 6) + 60 >> 2] = -0.0 - $mul_i30_i_i798;
          }
          $i_035_i_i = $i_035_i_i + 1 | 0;
         } while (($i_035_i_i | 0) < (HEAP32[$m_ncircles_i >> 2] | 0));
         $806 = HEAP32[$m_nsegments_i >> 2] | 0;
        } else {
         $806 = $802;
        }
        if (($806 | 0) > 0) {
         $807 = HEAP32[$767 + 56 >> 2] | 0;
         $808 = +HEAPF32[$arraydecay333 >> 2];
         $809 = +HEAPF32[$764 + 416 >> 2];
         $i28_033_i_i = 0;
         do {
          $826 = +HEAPF32[$807 + ($i28_033_i_i * 28 | 0) >> 2];
          $sub_i1_i_i = +HEAPF32[$807 + ($i28_033_i_i * 28 | 0) + 12 >> 2] - $826;
          $828 = +HEAPF32[$807 + ($i28_033_i_i * 28 | 0) + 8 >> 2];
          $sub4_i_i_i812 = +HEAPF32[$807 + ($i28_033_i_i * 28 | 0) + 20 >> 2] - $828;
          $add_i6_i_i = $sub_i1_i_i * $sub_i1_i_i + $sub4_i_i_i812 * $sub4_i_i_i812;
          $add14_i_i_i817 = $sub_i1_i_i * ($808 - $826) + $sub4_i_i_i812 * ($809 - $828);
          if ($add_i6_i_i > 0.0) {
           $storemerge_i_i_i821 = $add14_i_i_i817 / $add_i6_i_i;
          } else {
           $storemerge_i_i_i821 = $add14_i_i_i817;
          }
          if ($storemerge_i_i_i821 < 0.0) {
           $829 = 0.0;
          } else {
           if ($storemerge_i_i_i821 > 1.0) {
            $829 = 1.0;
           } else {
            $829 = $storemerge_i_i_i821;
           }
          }
          $sub25_i_i_i830 = $826 + $sub_i1_i_i * $829 - $808;
          $sub30_i_i_i833 = $sub4_i_i_i812 * $829 + $828 - $809;
          HEAP8[$807 + ($i28_033_i_i * 28 | 0) + 24 >> 0] = $sub25_i_i_i830 * $sub25_i_i_i830 + $sub30_i_i_i833 * $sub30_i_i_i833 < 9999999747378752.0e-20 | 0;
          $i28_033_i_i = $i28_033_i_i + 1 | 0;
         } while (($i28_033_i_i | 0) < ($806 | 0));
        }
        $830 = $767;
        $831 = $arrayidx345;
        HEAP32[$830 >> 2] = HEAP32[$831 >> 2];
        HEAP32[$830 + 4 >> 2] = HEAP32[$831 + 4 >> 2];
        HEAP32[$830 + 8 >> 2] = HEAP32[$831 + 8 >> 2];
        HEAP32[$830 + 12 >> 2] = HEAP32[$831 + 12 >> 2];
        HEAP32[$830 + 16 >> 2] = HEAP32[$831 + 16 >> 2];
        HEAP32[$830 + 20 >> 2] = HEAP32[$831 + 20 >> 2];
        HEAP32[$830 + 24 >> 2] = HEAP32[$831 + 24 >> 2];
        $horizTime_i = $767 + 20 | 0;
        $m_invHorizTime_i = $767 + 28 | 0;
        HEAPF32[$m_invHorizTime_i >> 2] = 1.0 / +HEAPF32[$horizTime_i >> 2];
        HEAPF32[$767 + 32 >> 2] = $804;
        $m_invVmax_i = $767 + 36 | 0;
        HEAPF32[$m_invVmax_i >> 2] = 1.0 / $804;
        HEAPF32[$arraydecay358 >> 2] = 0.0;
        $arrayidx1_i_i841 = $764 + 448 | 0;
        HEAPF32[$arrayidx1_i_i841 >> 2] = 0.0;
        $arrayidx2_i_i842 = $764 + 452 | 0;
        HEAPF32[$arrayidx2_i_i842 >> 2] = 0.0;
        $833 = HEAP8[$767 + 25 >> 0] | 0;
        $conv_i843 = $833 & 255;
        $834 = HEAP8[$767 + 26 >> 0] | 0;
        $835 = HEAP8[$767 + 27 >> 0] | 0;
        $conv8_i = $835 & 255;
        if ($833 << 24 >> 24 == 0) {
         $cond5_i60_i = 1;
        } else {
         $cond5_i60_i = $conv_i843 >>> 0 > 32 >>> 0 ? 32 : $conv_i843;
        }
        if ($834 << 24 >> 24 == 0) {
         $cond5_i_i848 = 1;
        } else {
         $cond5_i_i848 = ($834 & 255) >>> 0 > 4 >>> 0 ? 4 : $834 & 255;
        }
        $mul12_i = 1.0 / +($cond5_i60_i | 0) * 3.1415927410125732 * 2.0;
        $arrayidx_i850 = $764 + 440 | 0;
        $call14_i = +Math_atan2(+(+HEAPF32[$arrayidx_i850 >> 2]), +(+HEAPF32[$arraydecay357 >> 2]));
        HEAPF32[$arrayidx16_i >> 2] = 0.0;
        HEAPF32[$arrayidx19_i >> 2] = 0.0;
        if (($cond5_i_i848 | 0) == 0) {
         $npat_0_lcssa_i = 1;
        } else {
         $conv21_i = +($cond5_i_i848 | 0);
         if (($cond5_i60_i | 0) > 0) {
          $j_099_us_i = 0;
          $npat_0100_us_i = 1;
          while (1) {
           $div22_us_i = +($cond5_i_i848 - $j_099_us_i | 0) / $conv21_i;
           $a_094_us_i = $call14_i + $mul12_i * +($j_099_us_i & 1 | 0) * .5;
           $i_095_us_i = 0;
           $npat_196_us_i = $npat_0100_us_i;
           while (1) {
            $mul31_us_i = $div22_us_i * +Math_cos($a_094_us_i);
            $mul32_us_i = $npat_196_us_i << 1;
            HEAPF32[$pat_i + ($mul32_us_i << 2) >> 2] = $mul31_us_i;
            $mul36_us_i = $div22_us_i * +Math_sin($a_094_us_i);
            HEAPF32[$pat_i + (($mul32_us_i | 1) << 2) >> 2] = $mul36_us_i;
            $i_095_us_i = $i_095_us_i + 1 | 0;
            if (($i_095_us_i | 0) >= ($cond5_i60_i | 0)) {
             break;
            } else {
             $a_094_us_i = $mul12_i + $a_094_us_i;
             $npat_196_us_i = $npat_196_us_i + 1 | 0;
            }
           }
           $838 = $cond5_i60_i + $npat_0100_us_i | 0;
           $inc44_us_i = $j_099_us_i + 1 | 0;
           if (($cond5_i_i848 | 0) > ($inc44_us_i | 0)) {
            $j_099_us_i = $inc44_us_i;
            $npat_0100_us_i = $838;
           } else {
            $npat_0_lcssa_i = $838;
            break;
           }
          }
         } else {
          $npat_0_lcssa_i = 1;
         }
        }
        $839 = +HEAPF32[$767 >> 2];
        $mul52_i = $839 * +HEAPF32[$arraydecay357 >> 2];
        $mul56_i = $839 * +HEAPF32[$arrayidx_i850 >> 2];
        if ($835 << 24 >> 24 == 0) {
         $res_sroa_7_8_load72_lcssa_i = $mul56_i;
         $res_sroa_0_0_load70_lcssa_i = $mul52_i;
         $ns_0_lcssa_i = 0;
        } else {
         $add85_i = $804 + .0010000000474974513;
         $mul_i_i852 = $add85_i * $add85_i;
         if (($npat_0_lcssa_i | 0) > 0) {
          $m_circles_i3_i = $767 + 44 | 0;
          $arrayidx8_i_i4_i = $764 + 464 | 0;
          $pos_idx33_i_i = $764 + 416 | 0;
          $m_segments_i7_i = $767 + 56 | 0;
          $weightDesVel_i_i = $767 + 4 | 0;
          $weightCurVel_i_i = $767 + 8 | 0;
          $weightSide_i_i = $767 + 12 | 0;
          $weightToi_i_i = $767 + 16 | 0;
          $res_sroa_7_8_load7284_us_i = $mul56_i;
          $res_sroa_0_0_load7085_us_i = $mul52_i;
          $cr_086_us_i = (1.0 - $839) * $804;
          $ns_087_us_i = 0;
          $k_088_us_i = 0;
          while (1) {
           $bvel_sroa_6_8_load6974_us_i = 0.0;
           $bvel_sroa_0_0_load6576_us_i = 0.0;
           $ns_177_us_i = $ns_087_us_i;
           $minPenalty_078_us_i = 3.4028234663852886e+38;
           $i61_079_us_i = 0;
           while (1) {
            $mul66_us_i = $i61_079_us_i << 1;
            $add70_us_i = $res_sroa_0_0_load7085_us_i + $cr_086_us_i * +HEAPF32[$pat_i + ($mul66_us_i << 2) >> 2];
            HEAPF32[$arraydecay_i_i306 >> 2] = $add70_us_i;
            HEAPF32[$arrayidx3_i_i488 >> 2] = 0.0;
            $add78_us_i = $res_sroa_7_8_load7284_us_i + $cr_086_us_i * +HEAPF32[$pat_i + (($mul66_us_i | 1) << 2) >> 2];
            HEAPF32[$arrayidx3_i28_i_i >> 2] = $add78_us_i;
            if ($add70_us_i * $add70_us_i + $add78_us_i * $add78_us_i > $mul_i_i852) {
             $minPenalty_1_us_i = $minPenalty_078_us_i;
             $ns_2_us_i = $ns_177_us_i;
             $bvel_sroa_0_0_load64_us_i = $bvel_sroa_0_0_load6576_us_i;
             $bvel_sroa_6_8_load68_us_i = $bvel_sroa_6_8_load6974_us_i;
            } else {
             $844 = +HEAPF32[$horizTime_i >> 2];
             $845 = HEAP32[$m_ncircles_i >> 2] | 0;
             if (($845 | 0) > 0) {
              $nside_0119_i_i = 0;
              $side_0120_i_i = 0.0;
              $tmin_0121_i_i = $844;
              $847 = $845;
              while (1) {
               $848 = HEAP32[$m_circles_i3_i >> 2] | 0;
               $sub_i46_i_i = $add70_us_i * 2.0 - +HEAPF32[$arraydecay355 >> 2] - +HEAPF32[$848 + ($nside_0119_i_i << 6) + 12 >> 2];
               $sub9_i53_i_i = $add78_us_i * 2.0 - +HEAPF32[$arrayidx8_i_i4_i >> 2] - +HEAPF32[$848 + ($nside_0119_i_i << 6) + 20 >> 2];
               $add_i_i854 = ($sub_i46_i_i * +HEAPF32[$848 + ($nside_0119_i_i << 6) + 40 >> 2] + $sub9_i53_i_i * +HEAPF32[$848 + ($nside_0119_i_i << 6) + 48 >> 2]) * .5 + .5;
               $mul13_i_i855 = ($sub_i46_i_i * +HEAPF32[$848 + ($nside_0119_i_i << 6) + 52 >> 2] + $sub9_i53_i_i * +HEAPF32[$848 + ($nside_0119_i_i << 6) + 60 >> 2]) * 2.0;
               $cond_i_i_i856 = $add_i_i854 < $mul13_i_i855 ? $add_i_i854 : $mul13_i_i855;
               if ($cond_i_i_i856 < 0.0) {
                $cond5_i_i_i = 0.0;
               } else {
                $cond5_i_i_i = $cond_i_i_i856 > 1.0 ? 1.0 : $cond_i_i_i856;
               }
               $add16_i_i858 = $side_0120_i_i + $cond5_i_i_i;
               $inc_i14_i = $nside_0119_i_i + 1 | 0;
               $sub_i_i87_i_i = +HEAPF32[$848 + ($nside_0119_i_i << 6) >> 2] - +HEAPF32[$arraydecay333 >> 2];
               $sub9_i_i88_i_i = +HEAPF32[$848 + ($nside_0119_i_i << 6) + 8 >> 2] - +HEAPF32[$pos_idx33_i_i >> 2];
               $add_i89_i_i = +HEAPF32[$848 + ($nside_0119_i_i << 6) + 36 >> 2] + $805;
               $add_i18_i_i_i = $sub_i46_i_i * $sub_i46_i_i + $sub9_i53_i_i * $sub9_i53_i_i;
               if ($add_i18_i_i_i < 9999999747378752.0e-20) {
                $tmin_1_i_i = $tmin_0121_i_i;
                $859 = $847;
               } else {
                $add_i_i_i_i859 = $sub_i46_i_i * $sub_i_i87_i_i + $sub9_i53_i_i * $sub9_i_i88_i_i;
                $sub8_i_i_i = $add_i_i_i_i859 * $add_i_i_i_i859 - $add_i18_i_i_i * ($sub_i_i87_i_i * $sub_i_i87_i_i + $sub9_i_i88_i_i * $sub9_i_i88_i_i - $add_i89_i_i * $add_i89_i_i);
                if ($sub8_i_i_i < 0.0) {
                 $tmin_1_i_i = $tmin_0121_i_i;
                 $859 = $847;
                } else {
                 $div_i97_i_i = 1.0 / $add_i18_i_i_i;
                 $call_i1_i_i = +Math_sqrt($sub8_i_i_i);
                 $mul14_i_i_i = $div_i97_i_i * ($add_i_i_i_i859 - $call_i1_i_i);
                 if ($mul14_i_i_i < 0.0 & $div_i97_i_i * ($add_i_i_i_i859 + $call_i1_i_i) > 0.0) {
                  $858 = $mul14_i_i_i * -.5;
                 } else {
                  $858 = $mul14_i_i_i;
                 }
                 $tmin_1_i_i = $858 >= 0.0 & $858 < $tmin_0121_i_i ? $858 : $tmin_0121_i_i;
                 $859 = HEAP32[$m_ncircles_i >> 2] | 0;
                }
               }
               if (($inc_i14_i | 0) < ($859 | 0)) {
                $nside_0119_i_i = $inc_i14_i;
                $side_0120_i_i = $add16_i_i858;
                $tmin_0121_i_i = $tmin_1_i_i;
                $847 = $859;
               } else {
                $nside_0_lcssa_i_i = $inc_i14_i;
                $side_0_lcssa_i_i = $add16_i_i858;
                $tmin_0_lcssa_i_i = $tmin_1_i_i;
                break;
               }
              }
             } else {
              $nside_0_lcssa_i_i = 0;
              $side_0_lcssa_i_i = 0.0;
              $tmin_0_lcssa_i_i = $844;
             }
             if ((HEAP32[$m_nsegments_i >> 2] | 0) > 0) {
              $i33_0115_i_i = 0;
              $tmin_2116_i_i = $tmin_0_lcssa_i_i;
              while (1) {
               $860 = HEAP32[$m_segments_i7_i >> 2] | 0;
               $arrayidx37_i_i867 = $860 + ($i33_0115_i_i * 28 | 0) | 0;
               if ((HEAP8[$860 + ($i33_0115_i_i * 28 | 0) + 24 >> 0] | 0) == 0) {
                $arraydecay56_val_i_i = +HEAPF32[$arrayidx37_i_i867 >> 2];
                $arraydecay56_idx38_val_i_i = +HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 8 >> 2];
                $sub_i_i_i_i869 = +HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 12 >> 2] - $arraydecay56_val_i_i;
                $sub9_i_i_i_i870 = +HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 20 >> 2] - $arraydecay56_idx38_val_i_i;
                $sub_i22_i_i_i = +HEAPF32[$arraydecay333 >> 2] - $arraydecay56_val_i_i;
                $sub9_i29_i_i_i = +HEAPF32[$pos_idx33_i_i >> 2] - $arraydecay56_idx38_val_i_i;
                $sub_i21_i_i_i = $sub_i_i_i_i869 * $add78_us_i - $sub9_i_i_i_i870 * $add70_us_i;
                if (+Math_abs(+$sub_i21_i_i_i) < 9.999999974752427e-7) {
                 $tmin_3_i_i = $tmin_2116_i_i;
                } else {
                 $div_i_i20_i = 1.0 / $sub_i21_i_i_i;
                 $mul_i67_i_i871 = ($sub_i22_i_i_i * $sub9_i_i_i_i870 - $sub9_i29_i_i_i * $sub_i_i_i_i869) * $div_i_i20_i;
                 if ($mul_i67_i_i871 < 0.0 | $mul_i67_i_i871 > 1.0) {
                  $tmin_3_i_i = $tmin_2116_i_i;
                 } else {
                  $mul13_i_i23_i = $div_i_i20_i * ($sub_i22_i_i_i * $add78_us_i - $sub9_i29_i_i_i * $add70_us_i);
                  if ($mul13_i_i23_i < 0.0 | $mul13_i_i23_i > 1.0) {
                   $tmin_3_i_i = $tmin_2116_i_i;
                  } else {
                   $867 = $mul_i67_i_i871;
                   label = 618;
                  }
                 }
                }
               } else {
                if ((+HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 12 >> 2] - +HEAPF32[$arrayidx37_i_i867 >> 2]) * $add78_us_i - (+HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 20 >> 2] - +HEAPF32[$860 + ($i33_0115_i_i * 28 | 0) + 8 >> 2]) * $add70_us_i < 0.0) {
                 $tmin_3_i_i = $tmin_2116_i_i;
                } else {
                 $867 = 0.0;
                 label = 618;
                }
               }
               if ((label | 0) == 618) {
                label = 0;
                $mul64_i_i = $867 * 2.0;
                if ($mul64_i_i < $tmin_2116_i_i) {
                 $tmin_3_i_i = $mul64_i_i;
                } else {
                 $tmin_3_i_i = $tmin_2116_i_i;
                }
               }
               $inc69_i_i = $i33_0115_i_i + 1 | 0;
               if (($inc69_i_i | 0) < (HEAP32[$m_nsegments_i >> 2] | 0)) {
                $i33_0115_i_i = $inc69_i_i;
                $tmin_2116_i_i = $tmin_3_i_i;
               } else {
                $tmin_2_lcssa_i_i = $tmin_3_i_i;
                break;
               }
              }
             } else {
              $tmin_2_lcssa_i_i = $tmin_0_lcssa_i_i;
             }
             if (($nside_0_lcssa_i_i | 0) == 0) {
              $side_1_i_i = $side_0_lcssa_i_i;
             } else {
              $side_1_i_i = $side_0_lcssa_i_i / +($nside_0_lcssa_i_i | 0);
             }
             $sub_i55_i_i = +HEAPF32[$arraydecay357 >> 2] - $add70_us_i;
             $sub4_i58_i_i = +HEAPF32[$arrayidx_i850 >> 2] - $add78_us_i;
             $call_i2_i_i = +Math_sqrt($sub_i55_i_i * $sub_i55_i_i + $sub4_i58_i_i * $sub4_i58_i_i);
             $sub_i42_i_i = +HEAPF32[$arraydecay355 >> 2] - $add70_us_i;
             $sub4_i_i24_i = +HEAPF32[$arrayidx8_i_i4_i >> 2] - $add78_us_i;
             $call_i3_i_i = +Math_sqrt($sub_i42_i_i * $sub_i42_i_i + $sub4_i_i24_i * $sub4_i_i24_i);
             $add92_i_i = $side_1_i_i * +HEAPF32[$weightSide_i_i >> 2] + (+HEAPF32[$weightDesVel_i_i >> 2] * $call_i2_i_i * +HEAPF32[$m_invVmax_i >> 2] + +HEAPF32[$weightCurVel_i_i >> 2] * $call_i3_i_i * +HEAPF32[$m_invVmax_i >> 2]) + +HEAPF32[$weightToi_i_i >> 2] * (1.0 / ($tmin_2_lcssa_i_i * +HEAPF32[$m_invHorizTime_i >> 2] + .10000000149011612));
             $inc93_us_i = $ns_177_us_i + 1 | 0;
             if ($add92_i_i < $minPenalty_078_us_i) {
              $minPenalty_1_us_i = $add92_i_i;
              $ns_2_us_i = $inc93_us_i;
              $bvel_sroa_0_0_load64_us_i = $add70_us_i;
              $bvel_sroa_6_8_load68_us_i = $add78_us_i;
             } else {
              $minPenalty_1_us_i = $minPenalty_078_us_i;
              $ns_2_us_i = $inc93_us_i;
              $bvel_sroa_0_0_load64_us_i = $bvel_sroa_0_0_load6576_us_i;
              $bvel_sroa_6_8_load68_us_i = $bvel_sroa_6_8_load6974_us_i;
             }
            }
            $i61_079_us_i = $i61_079_us_i + 1 | 0;
            if (($i61_079_us_i | 0) >= ($npat_0_lcssa_i | 0)) {
             break;
            } else {
             $bvel_sroa_6_8_load6974_us_i = $bvel_sroa_6_8_load68_us_i;
             $bvel_sroa_0_0_load6576_us_i = $bvel_sroa_0_0_load64_us_i;
             $ns_177_us_i = $ns_2_us_i;
             $minPenalty_078_us_i = $minPenalty_1_us_i;
            }
           }
           $inc106_us_i = $k_088_us_i + 1 | 0;
           if (($inc106_us_i | 0) < ($conv8_i | 0)) {
            $res_sroa_7_8_load7284_us_i = $bvel_sroa_6_8_load68_us_i;
            $res_sroa_0_0_load7085_us_i = $bvel_sroa_0_0_load64_us_i;
            $cr_086_us_i = $cr_086_us_i * .5;
            $ns_087_us_i = $ns_2_us_i;
            $k_088_us_i = $inc106_us_i;
           } else {
            $res_sroa_7_8_load72_lcssa_i = $bvel_sroa_6_8_load68_us_i;
            $res_sroa_0_0_load70_lcssa_i = $bvel_sroa_0_0_load64_us_i;
            $ns_0_lcssa_i = $ns_2_us_i;
            break;
           }
          }
         } else {
          $res_sroa_7_8_load72_lcssa_i = 0.0;
          $res_sroa_0_0_load70_lcssa_i = 0.0;
          $ns_0_lcssa_i = 0;
         }
        }
        HEAPF32[$arraydecay358 >> 2] = $res_sroa_0_0_load70_lcssa_i;
        HEAPF32[$arrayidx1_i_i841 >> 2] = 0.0;
        HEAPF32[$arrayidx2_i_i842 >> 2] = $res_sroa_7_8_load72_lcssa_i;
        HEAP32[$m_velocitySampleCount >> 2] = (HEAP32[$m_velocitySampleCount >> 2] | 0) + $ns_0_lcssa_i;
       }
      } while (0);
      $inc384 = $i285_0515 + 1 | 0;
      if (($inc384 | 0) < ($n_0_lcssa_i | 0)) {
       $i285_0515 = $inc384;
      } else {
       $i386_0509 = 0;
       break;
      }
     }
     do {
      $884 = HEAP32[$0 + ($i386_0509 << 2) >> 2] | 0;
      do {
       if ((HEAP8[$884 + 1 >> 0] | 0) == 1) {
        $mul_i883 = +HEAPF32[$884 + 476 >> 2] * $dt;
        $arraydecay2_i884 = $884 + 456 | 0;
        $sub_i_i885 = +HEAPF32[$884 + 444 >> 2] - +HEAPF32[$arraydecay2_i884 >> 2];
        $arrayidx4_i_i887 = $884 + 460 | 0;
        $sub5_i_i888 = +HEAPF32[$884 + 448 >> 2] - +HEAPF32[$arrayidx4_i_i887 >> 2];
        $arrayidx8_i_i890 = $884 + 464 | 0;
        $sub9_i_i891 = +HEAPF32[$884 + 452 >> 2] - +HEAPF32[$arrayidx8_i_i890 >> 2];
        $call_i1_i892 = +Math_sqrt($sub_i_i885 * $sub_i_i885 + $sub5_i_i888 * $sub5_i_i888 + $sub9_i_i891 * $sub9_i_i891);
        if ($call_i1_i892 > $mul_i883) {
         $div_i894 = $mul_i883 / $call_i1_i892;
         $sub_i45_i = $sub_i_i885 * $div_i894;
         $sub5_i46_i = $sub5_i_i888 * $div_i894;
         $sub9_i47_i = $sub9_i_i891 * $div_i894;
        } else {
         $sub_i45_i = $sub_i_i885;
         $sub5_i46_i = $sub5_i_i888;
         $sub9_i47_i = $sub9_i_i891;
        }
        $add_i32_i = $sub_i45_i + +HEAPF32[$arraydecay2_i884 >> 2];
        HEAPF32[$arraydecay2_i884 >> 2] = $add_i32_i;
        $add5_i_i898 = $sub5_i46_i + +HEAPF32[$arrayidx4_i_i887 >> 2];
        HEAPF32[$arrayidx4_i_i887 >> 2] = $add5_i_i898;
        $add9_i_i = $sub9_i47_i + +HEAPF32[$arrayidx8_i_i890 >> 2];
        HEAPF32[$arrayidx8_i_i890 >> 2] = $add9_i_i;
        if (+Math_sqrt($add9_i_i * $add9_i_i + ($add_i32_i * $add_i32_i + $add5_i_i898 * $add5_i_i898)) > 9999999747378752.0e-20) {
         $arraydecay16_i = $884 + 408 | 0;
         HEAPF32[$arraydecay16_i >> 2] = +HEAPF32[$arraydecay16_i >> 2] + +HEAPF32[$arraydecay2_i884 >> 2] * $dt;
         $arrayidx3_i12_i = $884 + 412 | 0;
         HEAPF32[$arrayidx3_i12_i >> 2] = +HEAPF32[$arrayidx3_i12_i >> 2] + +HEAPF32[$arrayidx4_i_i887 >> 2] * $dt;
         $arrayidx8_i15_i = $884 + 416 | 0;
         HEAPF32[$arrayidx8_i15_i >> 2] = +HEAPF32[$arrayidx8_i15_i >> 2] + +HEAPF32[$arrayidx8_i_i890 >> 2] * $dt;
         break;
        } else {
         HEAPF32[$arraydecay2_i884 >> 2] = 0.0;
         HEAPF32[$arrayidx4_i_i887 >> 2] = 0.0;
         HEAPF32[$arrayidx8_i_i890 >> 2] = 0.0;
         break;
        }
       }
      } while (0);
      $i386_0509 = $i386_0509 + 1 | 0;
     } while (($i386_0509 | 0) < ($n_0_lcssa_i | 0));
    }
   } else if ((label | 0) == 430) {
    ___assert_fail(5032, 7256, 255, 10560);
   } else if ((label | 0) == 432) {
    ___assert_fail(4168, 7256, 256, 10560);
   } else if ((label | 0) == 444) {
    ___assert_fail(5032, 7256, 313, 10464);
   }
  } else if ((label | 0) == 379) {
   ___assert_fail(3336, 7720, 71, 10408);
  } else if ((label | 0) == 416) {
   ___assert_fail(6408, 7776, 173, 10640);
  }
 }
 $m_agents_i295 = $this + 4 | 0;
 $iter_0507 = 0;
 do {
  if ($cmp62_i) {
   $i403_0504 = 0;
   while (1) {
    $907 = HEAP32[$0 + ($i403_0504 << 2) >> 2] | 0;
    $908 = HEAP32[$m_agents_i295 >> 2] | 0;
    $sub_ptr_sub_i298 = $907 - $908 | 0;
    if ((HEAP8[$907 + 1 >> 0] | 0) == 1) {
     $arraydecay416 = $907 + 420 | 0;
     HEAPF32[$arraydecay416 >> 2] = 0.0;
     $arrayidx1_i293 = $907 + 424 | 0;
     HEAPF32[$arrayidx1_i293 >> 2] = 0.0;
     $arrayidx2_i294 = $907 + 428 | 0;
     HEAPF32[$arrayidx2_i294 >> 2] = 0.0;
     $nneis420 = $907 + 400 | 0;
     $910 = HEAP32[$nneis420 >> 2] | 0;
     if (($910 | 0) > 0) {
      $arraydecay433 = $907 + 408 | 0;
      $arrayidx7_i289 = $907 + 416 | 0;
      $radius441 = $907 + 468 | 0;
      $arrayidx462 = $907 + 440 | 0;
      $arrayidx465 = $907 + 432 | 0;
      $w417_0501 = 0.0;
      $j418_0502 = 0;
      $915 = 0.0;
      $914 = 0.0;
      $913 = 0.0;
      $912 = $908;
      $911 = $910;
      while (1) {
       $916 = HEAP32[$907 + 352 + ($j418_0502 << 3) >> 2] | 0;
       $arrayidx428_idx = $916 * 608 | 0;
       $sub_i285 = +HEAPF32[$arraydecay433 >> 2] - +HEAPF32[$912 + ($916 * 608 | 0) + 408 >> 2];
       $sub9_i = +HEAPF32[$arrayidx7_i289 >> 2] - +HEAPF32[$912 + ($916 * 608 | 0) + 416 >> 2];
       $add8_i = $sub_i285 * $sub_i285 + 0.0 + $sub9_i * $sub9_i;
       $radius443 = $912 + ($916 * 608 | 0) + 468 | 0;
       $add444 = +HEAPF32[$radius441 >> 2] + +HEAPF32[$radius443 >> 2];
       if ($add8_i > $add444 * $add444) {
        $w417_1 = $w417_0501;
        $934 = $915;
        $933 = $914;
        $932 = $913;
        $931 = $911;
       } else {
        $call449 = +Math_sqrt($add8_i);
        do {
         if ($call449 < 9999999747378752.0e-20) {
          $923 = +HEAPF32[$arrayidx462 >> 2];
          if (($sub_ptr_sub_i298 | 0) > ($arrayidx428_idx | 0)) {
           $pen_0 = .009999999776482582;
           $diff430_sroa_0_0_load475 = -0.0 - $923;
           $diff430_sroa_11_8_load477 = +HEAPF32[$arrayidx465 >> 2];
           break;
          } else {
           $pen_0 = .009999999776482582;
           $diff430_sroa_0_0_load475 = $923;
           $diff430_sroa_11_8_load477 = -0.0 - +HEAPF32[$arrayidx465 >> 2];
           break;
          }
         } else {
          $pen_0 = 1.0 / $call449 * (+HEAPF32[$radius443 >> 2] + +HEAPF32[$radius441 >> 2] - $call449) * .5 * .699999988079071;
          $diff430_sroa_0_0_load475 = $sub_i285;
          $diff430_sroa_11_8_load477 = $sub9_i;
         }
        } while (0);
        $add_i270 = +HEAPF32[$arraydecay416 >> 2] + $diff430_sroa_0_0_load475 * $pen_0;
        HEAPF32[$arraydecay416 >> 2] = $add_i270;
        $add6_i = $pen_0 * 0.0 + +HEAPF32[$arrayidx1_i293 >> 2];
        HEAPF32[$arrayidx1_i293 >> 2] = $add6_i;
        $add11_i = $diff430_sroa_11_8_load477 * $pen_0 + +HEAPF32[$arrayidx2_i294 >> 2];
        HEAPF32[$arrayidx2_i294 >> 2] = $add11_i;
        $w417_1 = $w417_0501 + 1.0;
        $934 = $add_i270;
        $933 = $add6_i;
        $932 = $add11_i;
        $931 = HEAP32[$nneis420 >> 2] | 0;
       }
       $inc487 = $j418_0502 + 1 | 0;
       if (($inc487 | 0) >= ($931 | 0)) {
        break;
       }
       $w417_0501 = $w417_1;
       $j418_0502 = $inc487;
       $915 = $934;
       $914 = $933;
       $913 = $932;
       $912 = HEAP32[$m_agents_i295 >> 2] | 0;
       $911 = $931;
      }
      if ($w417_1 > 9999999747378752.0e-20) {
       $div491 = 1.0 / $w417_1;
       HEAPF32[$arraydecay416 >> 2] = $div491 * $934;
       HEAPF32[$arrayidx1_i293 >> 2] = $div491 * $933;
       HEAPF32[$arrayidx2_i294 >> 2] = $div491 * $932;
      }
     }
    }
    $inc498 = $i403_0504 + 1 | 0;
    if (($inc498 | 0) < ($n_0_lcssa_i | 0)) {
     $i403_0504 = $inc498;
    } else {
     $i500_0506 = 0;
     break;
    }
   }
   do {
    $935 = HEAP32[$0 + ($i500_0506 << 2) >> 2] | 0;
    if ((HEAP8[$935 + 1 >> 0] | 0) == 1) {
     $arraydecay512 = $935 + 408 | 0;
     HEAPF32[$arraydecay512 >> 2] = +HEAPF32[$arraydecay512 >> 2] + +HEAPF32[$935 + 420 >> 2];
     $arrayidx3_i259 = $935 + 412 | 0;
     HEAPF32[$arrayidx3_i259 >> 2] = +HEAPF32[$arrayidx3_i259 >> 2] + +HEAPF32[$935 + 424 >> 2];
     $arrayidx7_i = $935 + 416 | 0;
     HEAPF32[$arrayidx7_i >> 2] = +HEAPF32[$arrayidx7_i >> 2] + +HEAPF32[$935 + 428 >> 2];
    }
    $i500_0506 = $i500_0506 + 1 | 0;
   } while (($i500_0506 | 0) < ($n_0_lcssa_i | 0));
  }
  $iter_0507 = $iter_0507 + 1 | 0;
 } while (($iter_0507 | 0) < 4);
 L925 : do {
  if ($cmp62_i) {
   $m_navquery537 = $this + 1e3 | 0;
   $arraydecay6_i = $nearest_i | 0;
   $arrayidx19_i1129 = $nearest_i + 4 | 0;
   $arrayidx4_i_i1130 = $nearest_i + 8 | 0;
   $arrayidx_i_i967 = $stack_i_i | 0;
   $arraydecay8_i_i970 = $agentPos_i | 0;
   $arrayidx10_i136_i_i = $agentPos_i + 4 | 0;
   $arrayidx17_i142_i_i = $agentPos_i + 8 | 0;
   $m_includeFlags_i_i_i973 = $this + 988 | 0;
   $m_excludeFlags_i_i_i974 = $this + 990 | 0;
   $arrayidx94_i_i975 = $neis_i_i | 0;
   $i523_0499 = 0;
   while (1) {
    $945 = HEAP32[$0 + ($i523_0499 << 2) >> 2] | 0;
    if ((HEAP8[$945 + 1 >> 0] | 0) == 1) {
     $arraydecay536 = $945 + 408 | 0;
     $947 = HEAP32[$m_navquery537 >> 2] | 0;
     $m_path_i918 = $945 + 28 | 0;
     $948 = HEAP32[$m_path_i918 >> 2] | 0;
     if (($948 | 0) == 0) {
      label = 664;
      break;
     }
     $m_npath_i921 = $945 + 32 | 0;
     if ((HEAP32[$m_npath_i921 >> 2] | 0) == 0) {
      label = 666;
      break;
     }
     $950 = HEAP32[$948 >> 2] | 0;
     $arraydecay_i925 = $945 + 4 | 0;
     if (($950 | 0) == 0) {
      $nvisited_i_0 = 0;
     } else {
      $m_nav_i_i929 = $947 | 0;
      $951 = HEAP32[$m_nav_i_i929 >> 2] | 0;
      $952 = HEAP32[$951 + 76 >> 2] | 0;
      $953 = HEAP32[$951 + 80 >> 2] | 0;
      $and10_i_i_i_i939 = $950 >>> ($953 >>> 0) & (1 << $952) - 1;
      $and11_i_i_i_i940 = (1 << $953) - 1 & $950;
      if ($and10_i_i_i_i939 >>> 0 < (HEAP32[$951 + 48 >> 2] | 0) >>> 0) {
       $956 = HEAP32[$951 + 68 >> 2] | 0;
       if ((HEAP32[$956 + ($and10_i_i_i_i939 * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$951 + 72 >> 2]) - 1 & $950 >>> (($953 + $952 | 0) >>> 0) | 0)) {
        $958 = HEAP32[$956 + ($and10_i_i_i_i939 * 60 | 0) + 8 >> 2] | 0;
        if (($958 | 0) == 0) {
         $nvisited_i_0 = 0;
        } else {
         if ($and11_i_i_i_i940 >>> 0 < (HEAP32[$958 + 24 >> 2] | 0) >>> 0) {
          $m_tinyNodePool_i_i961 = $947 + 52 | 0;
          $960 = HEAP32[$m_tinyNodePool_i_i961 >> 2] | 0;
          _memset(HEAP32[$960 + 4 >> 2] | 0, -1 | 0, HEAP32[$960 + 16 >> 2] << 1 | 0) | 0;
          HEAP32[$960 + 20 >> 2] = 0;
          $call5_i_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_tinyNodePool_i_i961 >> 2] | 0, $950) | 0;
          HEAPF32[$call5_i_i + 12 >> 2] = 0.0;
          HEAPF32[$call5_i_i + 16 >> 2] = 0.0;
          HEAP32[$call5_i_i + 24 >> 2] = $950;
          HEAP32[$call5_i_i + 20 >> 2] = -2147483648;
          HEAP32[$arrayidx_i_i967 >> 2] = $call5_i_i;
          $966 = +HEAPF32[$arraydecay_i925 >> 2];
          $967 = +HEAPF32[$945 + 8 >> 2];
          $968 = +HEAPF32[$945 + 12 >> 2];
          $sub_i128_i_i = +HEAPF32[$arraydecay536 >> 2] - $966;
          HEAPF32[$arraydecay8_i_i970 >> 2] = $966 + $sub_i128_i_i * .5;
          $arrayidx5_i132_i_i = $945 + 412 | 0;
          $sub7_i133_i_i = +HEAPF32[$arrayidx5_i132_i_i >> 2] - $967;
          HEAPF32[$arrayidx10_i136_i_i >> 2] = $967 + $sub7_i133_i_i * .5;
          $arrayidx12_i138_i_i = $945 + 416 | 0;
          $sub14_i139_i_i = +HEAPF32[$arrayidx12_i138_i_i >> 2] - $968;
          HEAPF32[$arrayidx17_i142_i_i >> 2] = $968 + $sub14_i139_i_i * .5;
          $add_i1_i = +Math_sqrt($sub_i128_i_i * $sub_i128_i_i + $sub7_i133_i_i * $sub7_i133_i_i + $sub14_i139_i_i * $sub14_i139_i_i) * .5 + .0010000000474974513;
          $mul_i119_i_i = $add_i1_i * $add_i1_i;
          $975 = $968;
          $974 = $967;
          $973 = $966;
          $bestNode_0196_i_i = 0;
          $bestDist_0197_i_i = 3.4028234663852886e+38;
          $nstack_0198_i_i = 1;
          $972 = $call5_i_i;
          while (1) {
           $sub_i_i981 = $nstack_0198_i_i - 1 | 0;
           if (($sub_i_i981 | 0) > 0) {
            $i_0156_i_i = 0;
            do {
             $i_0156_i_i$looptemp = $i_0156_i_i;
             $i_0156_i_i = $i_0156_i_i + 1 | 0;
             HEAP32[$stack_i_i + ($i_0156_i_i$looptemp << 2) >> 2] = HEAP32[$stack_i_i + ($i_0156_i_i << 2) >> 2];
            } while (($i_0156_i_i | 0) < ($sub_i_i981 | 0));
           }
           $977 = HEAP32[$972 + 24 >> 2] | 0;
           $978 = HEAP32[$m_nav_i_i929 >> 2] | 0;
           $980 = HEAP32[$978 + 80 >> 2] | 0;
           $and10_i_i89_i_i = $977 >>> ($980 >>> 0) & (1 << HEAP32[$978 + 76 >> 2]) - 1;
           $and11_i_i90_i_i = (1 << $980) - 1 & $977;
           $981 = HEAP32[$978 + 68 >> 2] | 0;
           $arrayidx_i92_i_i = $981 + ($and10_i_i89_i_i * 60 | 0) | 0;
           $982 = HEAP32[$981 + ($and10_i_i89_i_i * 60 | 0) + 12 >> 2] | 0;
           $983 = HEAP8[$982 + ($and11_i_i90_i_i << 5) + 30 >> 0] | 0;
           $conv_i_i988 = $983 & 255;
           $cmp21157_i_i = $983 << 24 >> 24 == 0;
           if ($cmp21157_i_i) {
            $_lcssa_i_i = $975;
            $_lcssa168_i_i = $974;
            $_lcssa169_i_i = $973;
            $bestNode_1_lcssa_i_i = $bestNode_0196_i_i;
            $bestDist_1_lcssa_i_i = $bestDist_0197_i_i;
            $nstack_1_lcssa_i_i977 = $sub_i_i981;
           } else {
            $984 = HEAP32[$981 + ($and10_i_i89_i_i * 60 | 0) + 16 >> 2] | 0;
            $i19_0158_i_i = 0;
            do {
             $mul_i2_i990 = $i19_0158_i_i * 3 | 0;
             $mul27_i_i991 = (HEAPU16[$982 + ($and11_i_i90_i_i << 5) + 4 + ($i19_0158_i_i << 1) >> 1] | 0) * 3 | 0;
             HEAPF32[$pa_i_i + ($mul_i2_i990 << 2) >> 2] = +HEAPF32[$984 + ($mul27_i_i991 << 2) >> 2];
             HEAPF32[$pa_i_i + ($mul_i2_i990 + 1 << 2) >> 2] = +HEAPF32[$984 + ($mul27_i_i991 + 1 << 2) >> 2];
             HEAPF32[$pa_i_i + ($mul_i2_i990 + 2 << 2) >> 2] = +HEAPF32[$984 + ($mul27_i_i991 + 2 << 2) >> 2];
             $i19_0158_i_i = $i19_0158_i_i + 1 | 0;
            } while (($i19_0158_i_i | 0) < ($conv_i_i988 | 0));
            $989 = +HEAPF32[$arrayidx12_i138_i_i >> 2];
            $c_0_off019_i_i_i = 0;
            $j_020_i_i_i = $conv_i_i988 - 1 | 0;
            $i_021_i_i_i = 0;
            while (1) {
             $mul_i71_i_i = $i_021_i_i_i * 3 | 0;
             $mul1_i_i_i996 = $j_020_i_i_i * 3 | 0;
             $990 = +HEAPF32[$pa_i_i + ($mul_i71_i_i + 2 << 2) >> 2];
             $991 = +HEAPF32[$pa_i_i + ($mul1_i_i_i996 + 2 << 2) >> 2];
             if ($990 > $989 ^ $991 > $989) {
              $994 = +HEAPF32[$pa_i_i + ($mul_i71_i_i << 2) >> 2];
              if (+HEAPF32[$arraydecay536 >> 2] < $994 + ($989 - $990) * (+HEAPF32[$pa_i_i + ($mul1_i_i_i996 << 2) >> 2] - $994) / ($991 - $990)) {
               $c_1_off0_i_i_i = $c_0_off019_i_i_i ^ 1;
              } else {
               $c_1_off0_i_i_i = $c_0_off019_i_i_i;
              }
             } else {
              $c_1_off0_i_i_i = $c_0_off019_i_i_i;
             }
             $inc_i_i_i1002 = $i_021_i_i_i + 1 | 0;
             if (($inc_i_i_i1002 | 0) < ($conv_i_i988 | 0)) {
              $c_0_off019_i_i_i = $c_1_off0_i_i_i;
              $j_020_i_i_i = $i_021_i_i_i;
              $i_021_i_i_i = $inc_i_i_i1002;
             } else {
              break;
             }
            }
            if ($c_1_off0_i_i_i) {
             label = 686;
             break;
            }
            $vertCount39_i_i = $982 + ($and11_i_i90_i_i << 5) + 30 | 0;
            if ($cmp21157_i_i) {
             $_lcssa_i_i = $975;
             $_lcssa168_i_i = $974;
             $_lcssa169_i_i = $973;
             $bestNode_1_lcssa_i_i = $bestNode_0196_i_i;
             $bestDist_1_lcssa_i_i = $bestDist_0197_i_i;
             $nstack_1_lcssa_i_i977 = $sub_i_i981;
            } else {
             $tobool_i88_i_i = ($972 | 0) == 0;
             $sub_ptr_lhs_cast_i90_i_i = $972;
             $tobool_i45_i_i = ($arrayidx_i92_i_i | 0) == 0;
             $polys_i_i1023 = $981 + ($and10_i_i89_i_i * 60 | 0) + 12 | 0;
             $sub_ptr_lhs_cast_i47_i_i = $arrayidx_i92_i_i;
             $salt_i_i_i1019 = $arrayidx_i92_i_i | 0;
             $firstLink_i_i1007 = $982 + ($and11_i_i90_i_i << 5) | 0;
             $links_phi_trans_insert_i_i1009 = $981 + ($and10_i_i89_i_i * 60 | 0) + 20 | 0;
             $1000 = $975;
             $999 = $974;
             $998 = $973;
             $j_0173_i_i = $conv_i_i988 - 1 | 0;
             $i38_0175_i_i = 0;
             $bestNode_1176_i_i = $bestNode_0196_i_i;
             $bestDist_1178_i_i = $bestDist_0197_i_i;
             $nstack_1180_i_i = $sub_i_i981;
             $997 = $983;
             while (1) {
              $1001 = HEAP16[$982 + ($and11_i_i90_i_i << 5) + 16 + ($j_0173_i_i << 1) >> 1] | 0;
              $conv49_i_i = $1001 & 65535;
              if (($conv49_i_i & 32768 | 0) == 0) {
               if ($1001 << 16 >> 16 == 0) {
                label = 707;
               } else {
                $sub86_i_i = $conv49_i_i - 1 | 0;
                $1012 = HEAP32[$m_nav_i_i929 >> 2] | 0;
                if ($tobool_i45_i_i) {
                 $retval_0_i56_i_i = 0;
                } else {
                 $1015 = HEAP32[$1012 + 80 >> 2] | 0;
                 $retval_0_i56_i_i = HEAP32[$salt_i_i_i1019 >> 2] << (HEAP32[$1012 + 76 >> 2] | 0) + $1015 | (($sub_ptr_lhs_cast_i47_i_i - (HEAP32[$1012 + 68 >> 2] | 0) | 0) / 60 | 0) << $1015;
                }
                $or_i_i1022 = $retval_0_i56_i_i | $sub86_i_i;
                $1018 = HEAP16[(HEAP32[$polys_i_i1023 >> 2] | 0) + ($sub86_i_i << 5) + 28 >> 1] | 0;
                if ((HEAP16[$m_includeFlags_i_i_i973 >> 1] & $1018) << 16 >> 16 == 0) {
                 label = 707;
                } else {
                 if ((HEAP16[$m_excludeFlags_i_i_i974 >> 1] & $1018) << 16 >> 16 == 0) {
                  HEAP32[$arrayidx94_i_i975 >> 2] = $or_i_i1022;
                  $nneis_2148_ph208_i_i = 1;
                  label = 705;
                 } else {
                  label = 707;
                 }
                }
               }
              } else {
               $k_0159_i_i = HEAP32[$firstLink_i_i1007 >> 2] | 0;
               if (($k_0159_i_i | 0) == -1) {
                label = 707;
               } else {
                $_pre206_i_i = HEAP32[$links_phi_trans_insert_i_i1009 >> 2] | 0;
                $nneis_0161_i_i = 0;
                $k_0162_i_i = $k_0159_i_i;
                while (1) {
                 if ((HEAPU8[$_pre206_i_i + ($k_0162_i_i * 12 | 0) + 8 >> 0] | 0) == ($j_0173_i_i | 0)) {
                  $1003 = HEAP32[$_pre206_i_i + ($k_0162_i_i * 12 | 0) >> 2] | 0;
                  if (($1003 | 0) == 0) {
                   $nneis_1_i_i = $nneis_0161_i_i;
                  } else {
                   $1004 = HEAP32[$m_nav_i_i929 >> 2] | 0;
                   $1006 = HEAP32[$1004 + 80 >> 2] | 0;
                   $1009 = HEAP16[(HEAP32[(HEAP32[$1004 + 68 >> 2] | 0) + (($1003 >>> ($1006 >>> 0) & (1 << HEAP32[$1004 + 76 >> 2]) - 1) * 60 | 0) + 12 >> 2] | 0) + (((1 << $1006) - 1 & $1003) << 5) + 28 >> 1] | 0;
                   if ((HEAP16[$m_includeFlags_i_i_i973 >> 1] & $1009) << 16 >> 16 == 0) {
                    $nneis_1_i_i = $nneis_0161_i_i;
                   } else {
                    if ((HEAP16[$m_excludeFlags_i_i_i974 >> 1] & $1009) << 16 >> 16 == 0 & ($nneis_0161_i_i | 0) < 8) {
                     HEAP32[$neis_i_i + ($nneis_0161_i_i << 2) >> 2] = $1003;
                     $nneis_1_i_i = $nneis_0161_i_i + 1 | 0;
                    } else {
                     $nneis_1_i_i = $nneis_0161_i_i;
                    }
                   }
                  }
                 } else {
                  $nneis_1_i_i = $nneis_0161_i_i;
                 }
                 $k_0162_i_i = HEAP32[$_pre206_i_i + ($k_0162_i_i * 12 | 0) + 4 >> 2] | 0;
                 if (($k_0162_i_i | 0) == -1) {
                  break;
                 } else {
                  $nneis_0161_i_i = $nneis_1_i_i;
                 }
                }
                if (($nneis_1_i_i | 0) == 0) {
                 label = 707;
                } else {
                 if (($nneis_1_i_i | 0) > 0) {
                  $nneis_2148_ph208_i_i = $nneis_1_i_i;
                  label = 705;
                 } else {
                  $nstack_4_i_i = $nstack_1180_i_i;
                  $bestDist_2_i_i = $bestDist_1178_i_i;
                  $bestNode_2_i_i = $bestNode_1176_i_i;
                  $1044 = $998;
                  $1043 = $999;
                  $1042 = $1000;
                  $1041 = $997;
                 }
                }
               }
              }
              if ((label | 0) == 705) {
               label = 0;
               $mul127_i_i = $j_0173_i_i * 3 | 0;
               $arrayidx128_i_i = $pa_i_i + ($mul127_i_i << 2) | 0;
               $mul130_i_i = $i38_0175_i_i * 3 | 0;
               $arrayidx131_i_i = $pa_i_i + ($mul130_i_i << 2) | 0;
               $arrayidx2_i5_i_i = $pa_i_i + ($mul130_i_i + 2 << 2) | 0;
               $arrayidx3_i_i_i1041 = $pa_i_i + ($mul127_i_i + 2 << 2) | 0;
               $k110_0165_i_i = 0;
               $nstack_2166_i_i = $nstack_1180_i_i;
               while (1) {
                $call116_i_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_tinyNodePool_i_i961 >> 2] | 0, HEAP32[$neis_i_i + ($k110_0165_i_i << 2) >> 2] | 0) | 0;
                if (($call116_i_i | 0) == 0) {
                 $nstack_3_i_i = $nstack_2166_i_i;
                } else {
                 $1031 = $call116_i_i + 20 | 0;
                 $bf_load121_i_i = HEAP32[$1031 >> 2] | 0;
                 if (($bf_load121_i_i | 0) < 0) {
                  $nstack_3_i_i = $nstack_2166_i_i;
                 } else {
                  $1033 = +HEAPF32[$arrayidx128_i_i >> 2];
                  $sub_i4_i_i = +HEAPF32[$arrayidx131_i_i >> 2] - $1033;
                  $1035 = +HEAPF32[$arrayidx3_i_i_i1041 >> 2];
                  $sub4_i_i_i1042 = +HEAPF32[$arrayidx2_i5_i_i >> 2] - $1035;
                  $1036 = +HEAPF32[$arraydecay8_i_i970 >> 2];
                  $1037 = +HEAPF32[$arrayidx17_i142_i_i >> 2];
                  $add_i8_i_i = $sub_i4_i_i * $sub_i4_i_i + $sub4_i_i_i1042 * $sub4_i_i_i1042;
                  $add14_i_i_i1049 = $sub_i4_i_i * ($1036 - $1033) + $sub4_i_i_i1042 * ($1037 - $1035);
                  if ($add_i8_i_i > 0.0) {
                   $storemerge_i_i_i1052 = $add14_i_i_i1049 / $add_i8_i_i;
                  } else {
                   $storemerge_i_i_i1052 = $add14_i_i_i1049;
                  }
                  if ($storemerge_i_i_i1052 < 0.0) {
                   $1038 = 0.0;
                  } else {
                   if ($storemerge_i_i_i1052 > 1.0) {
                    $1038 = 1.0;
                   } else {
                    $1038 = $storemerge_i_i_i1052;
                   }
                  }
                  $sub25_i_i_i1061 = $1033 + $sub_i4_i_i * $1038 - $1036;
                  $sub30_i_i_i1064 = $sub4_i_i_i1042 * $1038 + $1035 - $1037;
                  if ($sub25_i_i_i1061 * $sub25_i_i_i1061 + $sub30_i_i_i1064 * $sub30_i_i_i1064 <= $mul_i119_i_i & ($nstack_2166_i_i | 0) < 48) {
                   if ($tobool_i88_i_i) {
                    $retval_0_i96_i_i = -2147483648;
                   } else {
                    $retval_0_i96_i_i = (($sub_ptr_lhs_cast_i90_i_i - (HEAP32[HEAP32[$m_tinyNodePool_i_i961 >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823 | -2147483648;
                   }
                   HEAP32[$1031 >> 2] = $retval_0_i96_i_i | $bf_load121_i_i & 1073741824;
                   HEAP32[$stack_i_i + ($nstack_2166_i_i << 2) >> 2] = $call116_i_i;
                   $nstack_3_i_i = $nstack_2166_i_i + 1 | 0;
                  } else {
                   $nstack_3_i_i = $nstack_2166_i_i;
                  }
                 }
                }
                $k110_0165_i_i = $k110_0165_i_i + 1 | 0;
                if (($k110_0165_i_i | 0) >= ($nneis_2148_ph208_i_i | 0)) {
                 break;
                } else {
                 $nstack_2166_i_i = $nstack_3_i_i;
                }
               }
               $nstack_4_i_i = $nstack_3_i_i;
               $bestDist_2_i_i = $bestDist_1178_i_i;
               $bestNode_2_i_i = $bestNode_1176_i_i;
               $1044 = $998;
               $1043 = $999;
               $1042 = $1000;
               $1041 = HEAP8[$vertCount39_i_i >> 0] | 0;
              } else if ((label | 0) == 707) {
               label = 0;
               $mul100_i_i1030 = $j_0173_i_i * 3 | 0;
               $mul102_i_i = $i38_0175_i_i * 3 | 0;
               $1022 = +HEAPF32[$pa_i_i + ($mul100_i_i1030 << 2) >> 2];
               $sub_i12_i_i = +HEAPF32[$pa_i_i + ($mul102_i_i << 2) >> 2] - $1022;
               $1024 = +HEAPF32[$pa_i_i + ($mul100_i_i1030 + 2 << 2) >> 2];
               $sub4_i15_i_i = +HEAPF32[$pa_i_i + ($mul102_i_i + 2 << 2) >> 2] - $1024;
               $1025 = +HEAPF32[$arraydecay536 >> 2];
               $1026 = +HEAPF32[$arrayidx12_i138_i_i >> 2];
               $add_i21_i_i = $sub_i12_i_i * $sub_i12_i_i + $sub4_i15_i_i * $sub4_i15_i_i;
               $add14_i24_i_i = $sub_i12_i_i * ($1025 - $1022) + $sub4_i15_i_i * ($1026 - $1024);
               if ($add_i21_i_i > 0.0) {
                $storemerge_i28_i_i = $add14_i24_i_i / $add_i21_i_i;
               } else {
                $storemerge_i28_i_i = $add14_i24_i_i;
               }
               if ($storemerge_i28_i_i < 0.0) {
                $tseg_i_i917_0 = 0.0;
               } else {
                if ($storemerge_i28_i_i > 1.0) {
                 $tseg_i_i917_0 = 1.0;
                } else {
                 $tseg_i_i917_0 = $storemerge_i28_i_i;
                }
               }
               $sub25_i37_i_i = $1022 + $sub_i12_i_i * $tseg_i_i917_0 - $1025;
               $sub30_i40_i_i = $sub4_i15_i_i * $tseg_i_i917_0 + $1024 - $1026;
               $add33_i43_i_i = $sub25_i37_i_i * $sub25_i37_i_i + $sub30_i40_i_i * $sub30_i40_i_i;
               if ($add33_i43_i_i < $bestDist_1178_i_i) {
                $1027 = +HEAPF32[$pa_i_i + ($mul100_i_i1030 + 1 << 2) >> 2];
                $nstack_4_i_i = $nstack_1180_i_i;
                $bestDist_2_i_i = $add33_i43_i_i;
                $bestNode_2_i_i = $972;
                $1044 = $1022 + $tseg_i_i917_0 * $sub_i12_i_i;
                $1043 = $1027 + $tseg_i_i917_0 * (+HEAPF32[$pa_i_i + ($mul102_i_i + 1 << 2) >> 2] - $1027);
                $1042 = $1024 + $tseg_i_i917_0 * $sub4_i15_i_i;
                $1041 = $997;
               } else {
                $nstack_4_i_i = $nstack_1180_i_i;
                $bestDist_2_i_i = $bestDist_1178_i_i;
                $bestNode_2_i_i = $bestNode_1176_i_i;
                $1044 = $998;
                $1043 = $999;
                $1042 = $1000;
                $1041 = $997;
               }
              }
              $inc163_i_i = $i38_0175_i_i + 1 | 0;
              if (($inc163_i_i | 0) < ($1041 & 255 | 0)) {
               $1000 = $1042;
               $999 = $1043;
               $998 = $1044;
               $j_0173_i_i = $i38_0175_i_i;
               $i38_0175_i_i = $inc163_i_i;
               $bestNode_1176_i_i = $bestNode_2_i_i;
               $bestDist_1178_i_i = $bestDist_2_i_i;
               $nstack_1180_i_i = $nstack_4_i_i;
               $997 = $1041;
              } else {
               $_lcssa_i_i = $1042;
               $_lcssa168_i_i = $1043;
               $_lcssa169_i_i = $1044;
               $bestNode_1_lcssa_i_i = $bestNode_2_i_i;
               $bestDist_1_lcssa_i_i = $bestDist_2_i_i;
               $nstack_1_lcssa_i_i977 = $nstack_4_i_i;
               break;
              }
             }
            }
           }
           if (($nstack_1_lcssa_i_i977 | 0) == 0) {
            $bestNode_3_i_i = $bestNode_1_lcssa_i_i;
            $1047 = $_lcssa169_i_i;
            $1046 = $_lcssa168_i_i;
            $1045 = $_lcssa_i_i;
            break;
           }
           $975 = $_lcssa_i_i;
           $974 = $_lcssa168_i_i;
           $973 = $_lcssa169_i_i;
           $bestNode_0196_i_i = $bestNode_1_lcssa_i_i;
           $bestDist_0197_i_i = $bestDist_1_lcssa_i_i;
           $nstack_0198_i_i = $nstack_1_lcssa_i_i977;
           $972 = HEAP32[$arrayidx_i_i967 >> 2] | 0;
          }
          if ((label | 0) == 686) {
           label = 0;
           $bestNode_3_i_i = $972;
           $1047 = +HEAPF32[$arraydecay536 >> 2];
           $1046 = +HEAPF32[$arrayidx5_i132_i_i >> 2];
           $1045 = $989;
          }
          L1016 : do {
           if (($bestNode_3_i_i | 0) == 0) {
            $n_1_i_i1086 = 0;
           } else {
            $node_0_i_i = $bestNode_3_i_i;
            $prev_0_i_i = 0;
            while (1) {
             $1048 = $node_0_i_i + 20 | 0;
             $bf_load170_i_i = HEAP32[$1048 >> 2] | 0;
             $bf_clear171_i_i = $bf_load170_i_i & 1073741823;
             if (($bf_clear171_i_i | 0) == 0) {
              $retval_0_i86_i_i = 0;
             } else {
              $retval_0_i86_i_i = (HEAP32[HEAP32[$m_tinyNodePool_i_i961 >> 2] >> 2] | 0) + (($bf_clear171_i_i - 1 | 0) * 28 | 0) | 0;
             }
             if (($prev_0_i_i | 0) == 0) {
              $retval_0_i80_i_i = 0;
             } else {
              $retval_0_i80_i_i = (($prev_0_i_i - (HEAP32[HEAP32[$m_tinyNodePool_i_i961 >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
             }
             HEAP32[$1048 >> 2] = $bf_load170_i_i & -1073741824 | $retval_0_i80_i_i;
             if (($retval_0_i86_i_i | 0) == 0) {
              $node_1_i_i = $node_0_i_i;
              $n_0_i_i1081 = 0;
              break;
             } else {
              $prev_0_i_i = $node_0_i_i;
              $node_0_i_i = $retval_0_i86_i_i;
             }
            }
            while (1) {
             $inc183_i_i = $n_0_i_i1081 + 1 | 0;
             HEAP32[$visited_i + ($n_0_i_i1081 << 2) >> 2] = HEAP32[$node_1_i_i + 24 >> 2];
             if (($inc183_i_i | 0) >= 16) {
              $n_1_i_i1086 = $inc183_i_i;
              break L1016;
             }
             $bf_clear192_i_i = HEAP32[$node_1_i_i + 20 >> 2] & 1073741823;
             if (($bf_clear192_i_i | 0) == 0) {
              $n_1_i_i1086 = $inc183_i_i;
              break L1016;
             }
             $arrayidx_i_i_i1085 = (HEAP32[HEAP32[$m_tinyNodePool_i_i961 >> 2] >> 2] | 0) + (($bf_clear192_i_i - 1 | 0) * 28 | 0) | 0;
             if (($arrayidx_i_i_i1085 | 0) == 0) {
              $n_1_i_i1086 = $inc183_i_i;
              break;
             } else {
              $node_1_i_i = $arrayidx_i_i_i1085;
              $n_0_i_i1081 = $inc183_i_i;
             }
            }
           }
          } while (0);
          HEAPF32[$arraydecay6_i >> 2] = $1047;
          HEAPF32[$arrayidx19_i1129 >> 2] = $1046;
          HEAPF32[$arrayidx4_i_i1130 >> 2] = $1045;
          $nvisited_i_0 = $n_1_i_i1086;
         } else {
          $nvisited_i_0 = 0;
         }
        }
       } else {
        $nvisited_i_0 = 0;
       }
      } else {
       $nvisited_i_0 = 0;
      }
     }
     $1057 = HEAP32[$m_path_i918 >> 2] | 0;
     $1058 = HEAP32[$m_npath_i921 >> 2] | 0;
     $1059 = HEAP32[$945 + 36 >> 2] | 0;
     if (($nvisited_i_0 | 0) > 0) {
      $furthestPath_0_us_i_i1090 = -1;
      $i_0_in_us_i_i1089 = $1058;
      $furthestVisited_0_us_i_i1088 = -1;
      while (1) {
       $i_0_us_i_i1091 = $i_0_in_us_i_i1089 - 1 | 0;
       if (($i_0_in_us_i_i1089 | 0) <= 0) {
        $furthestPath_3_i_i1105 = $furthestPath_0_us_i_i1090;
        $furthestVisited_3_i_i1104 = $furthestVisited_0_us_i_i1088;
        break;
       }
       $1061 = HEAP32[$1057 + ($i_0_us_i_i1091 << 2) >> 2] | 0;
       $furthestVisited_137_us_i_i = $furthestVisited_0_us_i_i1088;
       $found_0_off038_us_i_i = 0;
       $furthestPath_139_us_i_i = $furthestPath_0_us_i_i1090;
       $j_040_us_in_i_i = $nvisited_i_0;
       do {
        $j_040_us_in_i_i = $j_040_us_in_i_i - 1 | 0;
        $cmp6_us_i_i1096 = ($1061 | 0) == (HEAP32[$visited_i + ($j_040_us_in_i_i << 2) >> 2] | 0);
        $furthestVisited_137_us_i_i = $cmp6_us_i_i1096 ? $j_040_us_in_i_i : $furthestVisited_137_us_i_i;
        $found_0_off038_us_i_i = $cmp6_us_i_i1096 | $found_0_off038_us_i_i;
        $furthestPath_139_us_i_i = $cmp6_us_i_i1096 ? $i_0_us_i_i1091 : $furthestPath_139_us_i_i;
       } while (($j_040_us_in_i_i | 0) > 0);
       if ($found_0_off038_us_i_i) {
        $furthestPath_3_i_i1105 = $furthestPath_139_us_i_i;
        $furthestVisited_3_i_i1104 = $furthestVisited_137_us_i_i;
        break;
       } else {
        $furthestPath_0_us_i_i1090 = $furthestPath_139_us_i_i;
        $i_0_in_us_i_i1089 = $i_0_us_i_i1091;
        $furthestVisited_0_us_i_i1088 = $furthestVisited_137_us_i_i;
       }
      }
      if (($furthestPath_3_i_i1105 | 0) == -1 | ($furthestVisited_3_i_i1104 | 0) == -1) {
       $retval_0_i_i1127 = $1058;
       $1065 = $1057;
      } else {
       $sub16_i_i = $nvisited_i_0 - $furthestVisited_3_i_i1104 | 0;
       $add_i_i1110 = $furthestPath_3_i_i1105 + 1 | 0;
       $cond_i_i_i1112 = ($add_i_i1110 | 0) < ($1058 | 0) ? $add_i_i1110 : $1058;
       $sub17_i_i = $1058 - $cond_i_i_i1112 | 0;
       $cond_i32_i_i = ($sub17_i_i | 0) < 0 ? 0 : $sub17_i_i;
       $sub22_call18_i_i = ($cond_i32_i_i + $sub16_i_i | 0) > ($1059 | 0) ? $1059 - $sub16_i_i | 0 : $cond_i32_i_i;
       if (($sub22_call18_i_i | 0) != 0) {
        _memmove($1057 + ($sub16_i_i << 2) | 0, $1057 + ($cond_i_i_i1112 << 2) | 0, $sub22_call18_i_i << 2 | 0) | 0;
       }
       if (($sub16_i_i | 0) > 0) {
        $sub32_i_i = $nvisited_i_0 - 1 | 0;
        $i28_034_i_i = 0;
        do {
         HEAP32[$1057 + ($i28_034_i_i << 2) >> 2] = HEAP32[$visited_i + ($sub32_i_i - $i28_034_i_i << 2) >> 2];
         $i28_034_i_i = $i28_034_i_i + 1 | 0;
        } while (($i28_034_i_i | 0) < ($sub16_i_i | 0));
       }
       $retval_0_i_i1127 = $sub22_call18_i_i + $sub16_i_i | 0;
       $1065 = HEAP32[$m_path_i918 >> 2] | 0;
      }
     } else {
      $retval_0_i_i1127 = $1058;
      $1065 = $1057;
     }
     HEAP32[$m_npath_i921 >> 2] = $retval_0_i_i1127;
     $arrayidx14_i1128 = $945 + 8 | 0;
     HEAPF32[$h_i >> 2] = +HEAPF32[$arrayidx14_i1128 >> 2];
     __ZNK14dtNavMeshQuery13getPolyHeightEjPKfPf(HEAP32[$947 >> 2] | 0, HEAP32[$1065 >> 2] | 0, $arraydecay6_i, $h_i) | 0;
     $1069 = +HEAPF32[$h_i >> 2];
     HEAPF32[$arrayidx19_i1129 >> 2] = $1069;
     HEAPF32[$arraydecay_i925 >> 2] = +HEAPF32[$arraydecay6_i >> 2];
     HEAPF32[$arrayidx14_i1128 >> 2] = $1069;
     $arrayidx5_i_i1131 = $945 + 12 | 0;
     HEAPF32[$arrayidx5_i_i1131 >> 2] = +HEAPF32[$arrayidx4_i_i1130 >> 2];
     $1072 = +HEAPF32[$arraydecay_i925 >> 2];
     HEAPF32[$arraydecay536 >> 2] = $1072;
     $1073 = +HEAPF32[$arrayidx14_i1128 >> 2];
     HEAPF32[$945 + 412 >> 2] = $1073;
     $1074 = +HEAPF32[$arrayidx5_i_i1131 >> 2];
     HEAPF32[$945 + 416 >> 2] = $1074;
     $1075 = HEAP8[$945 + 576 >> 0] | 0;
     if (($1075 << 24 >> 24 | 0) == 0 | ($1075 << 24 >> 24 | 0) == 6) {
      $_pre1259 = HEAP32[$m_path_i918 >> 2] | 0;
      if ((HEAP32[$m_npath_i921 >> 2] | 0) == 0) {
       $cond_i = 0;
      } else {
       $cond_i = HEAP32[$_pre1259 >> 2] | 0;
      }
      if (($_pre1259 | 0) == 0) {
       label = 754;
       break;
      }
      HEAPF32[$arraydecay_i925 >> 2] = $1072;
      HEAPF32[$arrayidx14_i1128 >> 2] = $1073;
      HEAPF32[$arrayidx5_i_i1131 >> 2] = $1074;
      HEAPF32[$945 + 16 >> 2] = $1072;
      HEAPF32[$945 + 20 >> 2] = $1073;
      HEAPF32[$945 + 24 >> 2] = $1074;
      HEAP32[$_pre1259 >> 2] = $cond_i;
      HEAP32[$m_npath_i921 >> 2] = 1;
     }
    }
    $i523_0499 = $i523_0499 + 1 | 0;
    if (($i523_0499 | 0) >= ($n_0_lcssa_i | 0)) {
     break L925;
    }
   }
   if ((label | 0) == 664) {
    ___assert_fail(5032, 7256, 441, 10512);
   } else if ((label | 0) == 666) {
    ___assert_fail(4168, 7256, 442, 10512);
   } else if ((label | 0) == 754) {
    ___assert_fail(5032, 7256, 232, 10424);
   }
  }
 } while (0);
 $943 = HEAP32[$m_maxAgents >> 2] | 0;
 if (($943 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $944 = HEAP32[$this + 12 >> 2] | 0;
 $i560_0495 = 0;
 do {
  $active568 = $944 + ($i560_0495 * 52 | 0) | 0;
  do {
   if ((HEAP8[$active568 >> 0] | 0) != 0) {
    $1079 = HEAP32[$0 + ($i560_0495 << 2) >> 2] | 0;
    $t574 = $944 + ($i560_0495 * 52 | 0) + 44 | 0;
    $add575 = +HEAPF32[$t574 >> 2] + $dt;
    HEAPF32[$t574 >> 2] = $add575;
    $1081 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 48 >> 2];
    if ($add575 > $1081) {
     HEAP8[$active568 >> 0] = 0;
     HEAP8[$1079 + 1 >> 0] = 1;
     break;
    }
    $mul584 = $1081 * .15000000596046448;
    if ($add575 < $mul584) {
     $div_i247 = $add575 / $mul584;
     if ($div_i247 < 0.0) {
      $cond5_i_i252 = 0.0;
     } else {
      $cond5_i_i252 = $div_i247 > 1.0 ? 1.0 : $div_i247;
     }
     $1082 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 4 >> 2];
     HEAPF32[$1079 + 408 >> 2] = $1082 + $cond5_i_i252 * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 16 >> 2] - $1082);
     $1084 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 8 >> 2];
     HEAPF32[$1079 + 412 >> 2] = $1084 + $cond5_i_i252 * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 20 >> 2] - $1084);
     $1086 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 12 >> 2];
     HEAPF32[$1079 + 416 >> 2] = $1086 + $cond5_i_i252 * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 24 >> 2] - $1086);
    } else {
     $div_i = ($add575 - $mul584) / ($1081 - $mul584);
     if ($div_i < 0.0) {
      $cond5_i_i = 0.0;
     } else {
      $cond5_i_i = $div_i > 1.0 ? 1.0 : $div_i;
     }
     $1088 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 16 >> 2];
     HEAPF32[$1079 + 408 >> 2] = $1088 + $cond5_i_i * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 28 >> 2] - $1088);
     $1090 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 20 >> 2];
     HEAPF32[$1079 + 412 >> 2] = $1090 + $cond5_i_i * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 32 >> 2] - $1090);
     $1092 = +HEAPF32[$944 + ($i560_0495 * 52 | 0) + 24 >> 2];
     HEAPF32[$1079 + 416 >> 2] = $1092 + $cond5_i_i * (+HEAPF32[$944 + ($i560_0495 * 52 | 0) + 36 >> 2] - $1092);
    }
    HEAPF32[$1079 + 456 >> 2] = 0.0;
    HEAPF32[$1079 + 460 >> 2] = 0.0;
    HEAPF32[$1079 + 464 >> 2] = 0.0;
    HEAPF32[$1079 + 432 >> 2] = 0.0;
    HEAPF32[$1079 + 436 >> 2] = 0.0;
    HEAPF32[$1079 + 440 >> 2] = 0.0;
   }
  } while (0);
  $i560_0495 = $i560_0495 + 1 | 0;
 } while (($i560_0495 | 0) < ($943 | 0));
 STACKTOP = sp;
 return;
}
function __Z21rcBuildPolyMeshDetailP9rcContextRK10rcPolyMeshRK20rcCompactHeightfieldffR16rcPolyMeshDetail($ctx, $mesh, $chf, $sampleDist, $sampleMaxError, $dmesh) {
 $ctx = $ctx | 0;
 $mesh = $mesh | 0;
 $chf = $chf | 0;
 $sampleDist = +$sampleDist;
 $sampleMaxError = +$sampleMaxError;
 $dmesh = $dmesh | 0;
 var $edge_i = 0, $hull_i = 0, $idx_i = 0, $edges = 0, $tris = 0, $stack_sroa_66 = 0, $samples_sroa_27 = 0, $verts = 0, $m_timerEnabled_i = 0, $npolys = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $arraydecay = 0, $8 = 0, $m_data_i = 0, $m_size_i = 0, $m_cap_i = 0, $9 = 0, $m_data_i208 = 0, $m_size_i209 = 0, $m_cap_i210 = 0, $call_i1_i26 = 0, $11 = 0, $14 = 0, $call_i1_i56 = 0, $16 = 0, $stack_sroa_66_0_load1217 = 0, $call_i1_i86 = 0, $17 = 0, $samples_sroa_27_0_load1088 = 0, $call_i_i = 0, $19 = 0, $call_i_i101 = 0, $24 = 0, $mul40 = 0, $26 = 0, $width = 0, $height = 0, $cmp62662 = 0, $verts71 = 0, $nPolyVerts_0670 = 0, $maxhw_0669 = 0, $maxhh_0668 = 0, $i_0667 = 0, $mul41 = 0, $mul42 = 0, $arrayidx45 = 0, $arrayidx50 = 0, $arrayidx55 = 0, $arrayidx60 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $nPolyVerts_1664 = 0, $j_0663 = 0, $36 = 0, $mul70 = 0, $37 = 0, $conv74 = 0, $cond_i = 0, $cond_i240 = 0, $conv82 = 0, $cond_i242 = 0, $cond_i246 = 0, $inc = 0, $inc89 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $nPolyVerts_1_lcssa = 0, $sub = 0, $cond_i248 = 0, $44 = 0, $add93 = 0, $cond_i253 = 0, $sub96 = 0, $cond_i255 = 0, $45 = 0, $add100 = 0, $cond_i260 = 0, $sub108 = 0, $sub111 = 0, $maxhh_1 = 0, $maxhw_1 = 0, $inc115 = 0, $nPolyVerts_0_lcssa = 0, $maxhw_0_lcssa = 0, $maxhh_0_lcssa = 0, $call_i_i105 = 0, $47 = 0, $mul124 = 0, $48 = 0, $nmeshes = 0, $nverts128 = 0, $ntris = 0, $call_i_i106 = 0, $meshes = 0, $add141 = 0, $call_i_i107 = 0, $verts148 = 0, $call_i_i108 = 0, $tris160 = 0, $mul173 = 0, $polys175 = 0, $cmp179600 = 0, $verts259 = 0, $width42_i = 0, $cells_i = 0, $spans_i = 0, $arraydecay264 = 0, $arraydecay_i = 0, $arrayidx304 = 0, $arrayidx311 = 0, $ch279 = 0, $55 = 0, $56 = 0, $div234_i = 0.0, $cs3_i573 = 0, $cmp4_i575 = 0, $57 = 0, $arrayinit_element_i = 0, $mul_i45_i = 0.0, $stack_sroa_146_0 = 0, $stack_sroa_0_2 = 0, $samples_sroa_54_0 = 0, $samples_sroa_0_3 = 0, $i167_0661 = 0, $tcap_0660 = 0, $vcap_0659 = 0, $mul174 = 0, $58 = 0, $j177_0602 = 0, $59 = 0, $mul189 = 0, $60 = 0, $mul196 = 0, $inc221 = 0, $npoly_0_lcssa = 0, $mul223 = 0, $64 = 0, $add230198 = 0, $65 = 0, $add236199 = 0, $66 = 0, $sub245 = 0, $add248200 = 0, $67 = 0, $sub257 = 0, $68 = 0, $mul1_i = 0, $69 = 0, $mul_i118 = 0, $call_i1_i124 = 0, $70 = 0, $stack_sroa_66_0_load1244 = 0, $stack_sroa_146_1 = 0, $stack_sroa_0_3 = 0, $cmp361_i = 0, $stack_sroa_146_2 = 0, $stack_sroa_0_4 = 0, $j_0362_i = 0, $mul5_i = 0, $conv7_i = 0, $conv17_i = 0, $conv23_i = 0, $cx_0360_i = 0, $cz_0359_i = 0, $ci_0358_i = 0, $dmin_0357_i = 0, $k_0356_i = 0, $mul8_i = 0, $add11_i = 0, $add27_i = 0, $add44_i = 0, $bf_load_i = 0, $bf_clear_i = 0, $bf_lshr_i = 0, $add49_i = 0, $82 = 0, $cx_1351_i = 0, $cz_1350_i = 0, $ci_1349_i = 0, $dmin_1348_i = 0, $i_0347_i = 0, $sub_i = 0, $cond_i_i = 0, $cmp55_i = 0, $call_dmin_1_i = 0, $i_0_ci_1_i = 0, $add27_cz_1_i = 0, $add11_cx_1_i = 0, $inc_i = 0, $dmin_3_i = 0, $ci_3_i = 0, $cz_3_i = 0, $cx_3_i = 0, $stack_sroa_66_0_load1247 = 0, $add_i188_i = 0, $84 = 0, $mul_i148 = 0, $stack_sroa_146_3 = 0, $call_i1_i154 = 0, $85 = 0, $stack_sroa_66_0_load1246 = 0, $stack_sroa_146_4 = 0, $stack_sroa_0_5 = 0, $stack_sroa_66_0_load1230 = 0, $add_i193_i = 0, $88 = 0, $mul_i178 = 0, $stack_sroa_146_5 = 0, $call_i1_i184 = 0, $89 = 0, $stack_sroa_66_0_load1238 = 0, $stack_sroa_146_6 = 0, $stack_sroa_0_6 = 0, $stack_sroa_66_0_load1215 = 0, $add_i198_i = 0, $92 = 0, $mul_i208 = 0, $stack_sroa_146_7 = 0, $call_i1_i214 = 0, $93 = 0, $stack_sroa_66_0_load1222 = 0, $stack_sroa_146_8 = 0, $stack_sroa_0_7 = 0, $stack_sroa_146_9 = 0, $stack_sroa_0_8 = 0, $inc65_i = 0, $pcx_0343_i = 0, $pcz_0342_i = 0, $j67_0341_i = 0, $mul73_i = 0, $stack_sroa_66_0_load1212_pre = 0, $div_i = 0, $div88_i = 0, $i89_0337_i = 0, $arrayidx107_i = 0, $add109_i = 0, $stack_sroa_66_0_load1221 = 0, $stack_sroa_146_11 = 0, $stack_sroa_0_10 = 0, $101 = 0, $102 = 0, $dec_i_i = 0, $103 = 0, $dec_i269_i = 0, $104 = 0, $dec_i297_i = 0, $105 = 0, $106 = 0, $sub119_i = 0, $sub122_i = 0, $107 = 0, $mul_i238 = 0, $call_i1_i244 = 0, $108 = 0, $stack_sroa_66_0_load = 0, $stack_sroa_146_12 = 0, $stack_sroa_0_11 = 0, $111 = 0, $mul_i268 = 0, $stack_sroa_146_13 = 0, $_lcssa_i272 = 0, $call_i1_i274 = 0, $112 = 0, $stack_sroa_66_0_load1216 = 0, $stack_sroa_146_14 = 0, $stack_sroa_0_12 = 0, $stack_sroa_66_0_load1251 = 0, $add_i303_i = 0, $115 = 0, $mul_i298 = 0, $stack_sroa_146_15 = 0, $call_i1_i304 = 0, $116 = 0, $stack_sroa_66_0_load1223 = 0, $stack_sroa_146_16 = 0, $stack_sroa_0_13 = 0, $stack_sroa_66_0_load1249 = 0, $add_i291_i = 0, $119 = 0, $mul_i328 = 0, $stack_sroa_146_17 = 0, $call_i1_i334 = 0, $120 = 0, $stack_sroa_66_0_load1231 = 0, $stack_sroa_146_18 = 0, $stack_sroa_0_14 = 0, $124 = 0, $stack_sroa_146_19 = 0, $stack_sroa_0_15 = 0, $125 = 0, $dir_0330_i = 0, $and_i289_i = 0, $add138_i = 0, $add141_i = 0, $arrayidx167_i = 0, $add176_i = 0, $add182_i = 0, $stack_sroa_66_0_load1242 = 0, $add_i263_i = 0, $132 = 0, $mul_i358 = 0, $stack_sroa_146_20 = 0, $call_i1_i364 = 0, $133 = 0, $stack_sroa_66_0_load1239 = 0, $stack_sroa_146_21 = 0, $stack_sroa_0_16 = 0, $stack_sroa_66_0_load1235 = 0, $add_i254_i = 0, $136 = 0, $mul_i389 = 0, $stack_sroa_146_22 = 0, $call_i1_i395 = 0, $137 = 0, $stack_sroa_66_0_load1248 = 0, $stack_sroa_146_23 = 0, $stack_sroa_0_17 = 0, $stack_sroa_66_0_load1233 = 0, $add_i248_i = 0, $140 = 0, $mul_i419 = 0, $stack_sroa_146_24 = 0, $call_i1_i425 = 0, $141 = 0, $stack_sroa_66_0_load1245 = 0, $stack_sroa_146_25 = 0, $stack_sroa_0_18 = 0, $stack_sroa_146_26 = 0, $stack_sroa_0_19 = 0, $144 = 0, $stack_sroa_146_27 = 0, $stack_sroa_0_20 = 0, $stack_sroa_66_0_load1226 = 0, $145 = 0, $i201_0329_i = 0, $add222_i = 0, $add230_i = 0, $stack_sroa_66_0_load1225 = 0, $mul233_i = 0, $stack_sroa_146_28 = 0, $stack_sroa_0_21 = 0, $mul233327_i = 0, $head_0326_i = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $inc249_i = 0, $156 = 0, $sub262_i = 0, $157 = 0, $mul_i449 = 0, $stack_sroa_146_29 = 0, $call_i1_i455 = 0, $158 = 0, $stack_sroa_66_0_load1229 = 0, $stack_sroa_146_30 = 0, $stack_sroa_0_22 = 0, $stack_sroa_146_31 = 0, $stack_sroa_0_23 = 0, $head_1_i = 0, $162 = 0, $stack_sroa_146_32 = 0, $stack_sroa_0_24 = 0, $dir267_0324_i = 0, $and_i226_i = 0, $add277_i = 0, $add280_i = 0, $arrayidx306_i = 0, $add316_i = 0, $add322_i = 0, $stack_sroa_66_0_load1219 = 0, $add_i211_i = 0, $171 = 0, $mul_i479 = 0, $stack_sroa_146_33 = 0, $call_i1_i485 = 0, $172 = 0, $stack_sroa_66_0_load1213 = 0, $stack_sroa_146_34 = 0, $stack_sroa_0_25 = 0, $stack_sroa_66_0_load1211 = 0, $add_i204_i = 0, $175 = 0, $mul_i509 = 0, $stack_sroa_146_35 = 0, $call_i1_i515 = 0, $176 = 0, $stack_sroa_66_0_load1224 = 0, $stack_sroa_146_36 = 0, $stack_sroa_0_26 = 0, $stack_sroa_66_0_load1209 = 0, $add_i_i = 0, $179 = 0, $mul_i539 = 0, $stack_sroa_146_37 = 0, $call_i1_i545 = 0, $180 = 0, $stack_sroa_66_0_load1240 = 0, $stack_sroa_146_38 = 0, $stack_sroa_0_27 = 0, $stack_sroa_146_39 = 0, $stack_sroa_0_28 = 0, $stack_sroa_146_40 = 0, $stack_sroa_0_29 = 0, $183 = 0.0, $i_0260_i = 0, $mul_i312 = 0, $arrayidx2_sum_i = 0, $arrayidx2_sum185_i = 0, $187 = 0.0, $div_i316 = 0.0, $188 = 0, $nhull_0257_i = 0, $i5_0256_i = 0, $j_0255_i = 0, $mul9_i = 0, $arrayidx10_i318 = 0, $mul11_i = 0, $arrayidx12_i = 0, $arrayidx10171_i = 0, $arrayidx12170_i = 0, $swapped_0_off0_i = 0, $sub30_i = 0.0, $arrayidx32_i = 0, $sub33_i = 0.0, $arrayidx35_i = 0, $sub36_i = 0.0, $add42_i = 0, $_add42_i = 0, $sub49__add42_i = 0, $conv55_i = 0.0, $201 = 0.0, $k_0223_i = 0, $div56_i = 0.0, $mul57_i = 0, $add61_i = 0.0, $add65_i = 0.0, $arrayidx66_i = 0, $add69_i = 0.0, $conv4_i395 = 0, $sub_i397 = 0, $cond5_i_i403 = 0, $sub6_i405 = 0, $cond5_i6_i412 = 0, $arrayidx_i416 = 0, $205 = 0, $h_010_i419 = 0, $dmin_09_i420 = 0.0, $i_08_i421 = 0, $mul13_i422 = 0, $add16_i424 = 0, $add20_i427 = 0, $arrayidx34_i435 = 0, $210 = 0, $call43_i454 = 0.0, $dmin_1_i445 = 0.0, $h_1_i446 = 0, $inc_i447 = 0, $h_2_i450 = 0, $sub85235_i = 0, $nidx_0_ph253_i = 0, $k83_0_ph252_i = 0, $arrayidx88_i = 0, $add89_i = 0, $arrayidx90_i = 0, $212 = 0, $nidx_0237_i = 0, $213 = 0, $mul91_i = 0, $mul93_i = 0, $m_0224_i = 0, $arrayidx92_val_i = 0.0, $arrayidx92_idx_val_i = 0.0, $arrayidx92_idx5_val_i = 0.0, $sub_i35_i = 0.0, $sub4_i_i = 0.0, $sub7_i_i = 0.0, $add19_i_i = 0.0, $cmp_i38_i = 0, $m_0228_i = 0, $maxi_0227_i = 0, $maxd_0226_i = 0.0, $mul99_i = 0, $arrayidx100_val_i = 0.0, $arrayidx100_idx_val_i = 0.0, $arrayidx100_idx4_val_i = 0.0, $add24_i_i = 0.0, $t_0_i_i = 0.0, $t_1_i_i = 0.0, $sub35_i_i = 0.0, $sub40_i_i = 0.0, $sub45_i_i = 0.0, $add50_i_i = 0.0, $cmp102_i = 0, $m112_0232_i = 0, $sub85_lcssa_i = 0, $nidx_0_lcssa_i = 0, $inc128_i = 0, $215 = 0, $sub132_i = 0, $216 = 0, $nhull_1247_i = 0, $k131_0246_i = 0, $mul136_i = 0, $mul139_i = 0, $221 = 0, $nhull_2242_i = 0, $k148_0241_i = 0, $mul153_i = 0, $mul156_i = 0, $231 = 0, $nhull_3_i = 0, $inc166_i = 0, $div_i316577 = 0.0, $232 = 0.0, $233 = 0, $nhull_4_i = 0, $234 = 0, $235 = 0, $mul_i569 = 0, $call_i1_i575 = 0, $237 = 0, $238 = 0, $241 = 0, $242 = 0, $mul_i599 = 0, $call_i1_i605 = 0, $244 = 0, $247 = 0, $249 = 0, $i172_0188_i = 0, $250 = 0, $add_i119_i = 0, $251 = 0, $252 = 0, $_lcssa_i633 = 0, $call_i1_i635 = 0, $253 = 0, $254 = 0, $257 = 0, $259 = 0, $260 = 0, $add_i124_i = 0, $261 = 0, $262 = 0, $_lcssa_i663 = 0, $call_i1_i665 = 0, $263 = 0, $264 = 0, $267 = 0, $269 = 0, $270 = 0, $add_i129_i = 0, $271 = 0, $272 = 0, $_lcssa_i693 = 0, $call_i1_i695 = 0, $273 = 0, $274 = 0, $277 = 0, $279 = 0, $280 = 0, $add_i114_i = 0, $281 = 0, $282 = 0, $_lcssa_i723 = 0, $call_i1_i725 = 0, $283 = 0, $284 = 0, $287 = 0, $289 = 0, $inc178_i = 0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $i185_0215_i = 0, $bmax_sroa_0_0_load164214_i = 0.0, $bmax_sroa_4_4_load165213_i = 0.0, $bmax_sroa_8_8_load166212_i = 0.0, $bmin_sroa_0_0_load167211_i = 0.0, $bmin_sroa_4_4_load168210_i = 0.0, $bmin_sroa_8_8_load169209_i = 0.0, $mul190_i = 0, $293 = 0.0, $cond_i_i96_i = 0.0, $294 = 0.0, $cond_i11_i100_i = 0.0, $295 = 0.0, $cond_i9_i104_i = 0.0, $cond_i_i91_i = 0.0, $cond_i11_i_i = 0.0, $cond_i9_i_i = 0.0, $inc196_i = 0, $bmax_sroa_0_0_load164_lcssa_i = 0.0, $bmax_sroa_4_4_load165_lcssa_i = 0.0, $bmax_sroa_8_8_load166_lcssa_i = 0.0, $bmin_sroa_0_0_load167_lcssa_i = 0.0, $bmin_sroa_4_4_load168_lcssa_i = 0.0, $bmin_sroa_8_8_load169_lcssa_i = 0.0, $conv201_i = 0, $conv205_i = 0, $conv209_i = 0, $conv213_i = 0, $296 = 0, $mul_i749 = 0, $call_i1_i755 = 0, $297 = 0, $samples_sroa_27_0_load = 0, $samples_sroa_54_1 = 0, $samples_sroa_0_4 = 0, $cmp218203_i = 0, $mul226_i = 0.0, $sub_i65_i = 0, $samples_sroa_54_2 = 0, $samples_sroa_0_5 = 0, $z_0206_i = 0, $mul229_i = 0.0, $add2_i = 0.0, $samples_sroa_54_3 = 0, $samples_sroa_0_6 = 0, $x_0204_i = 0, $mul221_i324 = 0.0, $dmin_026_i_i = 0.0, $i_025_i_i = 0, $c_024_i_i = 0, $j_023_i_i = 0, $mul_i69_i = 0, $mul1_i71_i = 0, $300 = 0.0, $301 = 0.0, $302 = 0.0, $303 = 0.0, $c_1_i_i = 0, $sub_i_i81_i = 0.0, $sub4_i_i_i = 0.0, $add_i_i83_i = 0.0, $add14_i_i_i = 0.0, $t_0_i_i_i = 0.0, $t_1_i_i_i = 0.0, $sub25_i_i_i = 0.0, $sub30_i_i_i = 0.0, $add33_i_i_i = 0.0, $inc_i88_i = 0, $cond_i_i325 = 0.0, $samples_sroa_27_0_load1089 = 0, $add_i60_i = 0, $304 = 0, $mul_i779 = 0, $samples_sroa_54_4 = 0, $call_i1_i785 = 0, $305 = 0, $samples_sroa_27_0_load1091 = 0, $samples_sroa_54_5 = 0, $samples_sroa_0_7 = 0, $308 = 0.0, $conv4_i = 0, $sub_i365 = 0, $cond5_i_i = 0, $sub6_i = 0, $cond5_i6_i = 0, $arrayidx_i373 = 0, $309 = 0, $h_010_i = 0, $dmin_09_i = 0.0, $i_08_i = 0, $mul13_i = 0, $add16_i = 0, $add20_i = 0, $arrayidx34_i378 = 0, $314 = 0, $call43_i384 = 0.0, $dmin_1_i = 0.0, $h_1_i = 0, $inc_i380 = 0, $h_2_i = 0, $samples_sroa_27_0_load1095 = 0, $add_i47_i = 0, $315 = 0, $mul_i809 = 0, $samples_sroa_54_6 = 0, $call_i1_i815 = 0, $316 = 0, $samples_sroa_27_0_load1097 = 0, $samples_sroa_54_7 = 0, $samples_sroa_0_8 = 0, $samples_sroa_27_0_load1100 = 0, $add_i41_i = 0, $319 = 0, $mul_i839 = 0, $samples_sroa_54_8 = 0, $call_i1_i845 = 0, $320 = 0, $samples_sroa_27_0_load1101 = 0, $samples_sroa_54_9 = 0, $samples_sroa_0_9 = 0, $samples_sroa_27_0_load1098 = 0, $add_i_i327 = 0, $323 = 0, $mul_i869 = 0, $samples_sroa_54_10 = 0, $call_i1_i875 = 0, $324 = 0, $samples_sroa_54_11 = 0, $samples_sroa_0_10 = 0, $samples_sroa_54_12 = 0, $samples_sroa_0_11 = 0, $inc245_i = 0, $samples_sroa_54_13 = 0, $samples_sroa_0_12 = 0, $samples_sroa_27_0_load1092_pre = 0, $div251_i = 0, $327 = 0, $iter_0202_us_i = 0, $mul314_us_i = 0, $inc317_us_i = 0, $328 = 0, $329 = 0, $mul_i899 = 0, $call_i1_i905 = 0, $331 = 0, $332 = 0, $335 = 0, $336 = 0, $mul_i929 = 0, $call_i1_i935 = 0, $338 = 0, $341 = 0, $inc320_us_i = 0, $i258_0195_us_i = 0, $besti_0194_us_i = 0, $bestd_0193_us_i = 0.0, $bestpt_sroa_5_0_oldload157192_us_i = 0.0, $mul280159191_us_i = 0.0, $add275162190_us_i = 0.0, $mul262_us_i = 0, $add275_us_i = 0.0, $mul280_us_i = 0.0, $add288_us_i = 0.0, $348 = 0, $349 = 0, $div294_us_i = 0, $dmin_012_i_us_i = 0.0, $i_011_i_us_i = 0, $mul_i_us_i = 0, $mul1_i_us_i = 0, $mul6_i_us_i = 0, $mul11_i_us_i = 0, $arrayidx2_val_i_us_i = 0.0, $arrayidx2_idx_val_i_us_i = 0.0, $arrayidx2_idx4_val_i_us_i = 0.0, $sub_i_i_i_us_i = 0.0, $sub9_i_i_i_us_i = 0.0, $sub_i48_i_i_us_i = 0.0, $sub9_i55_i_i_us_i = 0.0, $sub_i39_i_i_us_i = 0.0, $sub9_i46_i_i_us_i = 0.0, $add_i38_i_i_us_i = 0.0, $add_i33_i_i_us_i = 0.0, $add_i28_i_i_us_i = 0.0, $add_i23_i_i_us_i = 0.0, $add_i_i_i_us_i = 0.0, $div_i_i_us_i = 0.0, $mul21_i_i_us_i = 0.0, $mul25_i_i_us_i = 0.0, $retval_0_i_i_us_i = 0.0, $dmin_1_i_us_i = 0.0, $inc_i_us_i = 0, $dmin_0_lcssa_i_us_i = 0.0, $_dmin_0_i_us_i = 0.0, $or_cond3_us_i = 0, $add275161_us_i = 0.0, $mul280158_us_i = 0.0, $bestpt_sroa_5_0_oldload156_us_i = 0.0, $bestd_1_us_i = 0.0, $besti_1_us_i = 0, $samples_sroa_0_131269 = 0, $samples_sroa_54_141268 = 0, $353 = 0, $samples_sroa_54_15 = 0, $samples_sroa_0_14 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $mul_i959 = 0, $storemerge = 0, $_lcssa_i963 = 0, $call_i1_i965 = 0, $359 = 0, $362 = 0, $samples_sroa_54_16 = 0, $samples_sroa_0_15 = 0, $364 = 0, $cmp271648 = 0, $365 = 0.0, $add280 = 0.0, $368 = 0.0, $j269_0649 = 0, $mul274 = 0, $arrayidx276 = 0, $arrayidx283 = 0, $arrayidx288 = 0, $j293_0651 = 0, $mul298 = 0, $arrayidx302 = 0, $arrayidx309 = 0, $arrayidx316 = 0, $378 = 0, $div324 = 0, $380 = 0, $add344 = 0, $387 = 0, $call_i_i980 = 0, $389 = 0, $392 = 0, $vcap_2 = 0, $394 = 0, $nverts128_promoted = 0, $395 = 0, $j371_0653 = 0, $mul375 = 0, $mul379 = 0, $add405 = 0, $405 = 0, $mul416 = 0, $call_i_i985 = 0, $406 = 0, $408 = 0, $tcap_2 = 0, $409 = 0, $j435_0655 = 0, $mul439 = 0, $410 = 0, $arrayidx_i386 = 0, $arrayidx449 = 0, $arrayidx456 = 0, $arrayidx465 = 0, $arrayidx468 = 0, $arrayidx471 = 0, $call_i = 0, $or7_i = 0, $or13_i = 0, $inc487 = 0, $stack_sroa_0_30 = 0, $samples_sroa_0_16 = 0, $stack_sroa_0_31 = 0, $samples_sroa_0_17 = 0, $retval_0 = 0, $stack_sroa_0_33 = 0, $samples_sroa_0_19 = 0, $retval_110481050 = 0, $432 = 0, $434 = 0, $retval_2 = 0, label = 0, tempVarArgs = 0, sp = 0, $m112_0232_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4144 | 0;
 $edge_i = sp | 0;
 $hull_i = sp + 400 | 0;
 $idx_i = sp + 912 | 0;
 $edges = sp + 1040 | 0;
 $tris = sp + 1056 | 0;
 $verts = sp + 1072 | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 26);
 }
 if ((HEAP32[$mesh + 20 >> 2] | 0) == 0) {
  $retval_2 = 1;
  STACKTOP = sp;
  return $retval_2 | 0;
 }
 $npolys = $mesh + 24 | 0;
 if ((HEAP32[$npolys >> 2] | 0) == 0) {
  $retval_2 = 1;
  STACKTOP = sp;
  return $retval_2 | 0;
 }
 $5 = HEAP32[$mesh + 32 >> 2] | 0;
 $6 = +HEAPF32[$mesh + 60 >> 2];
 $7 = +HEAPF32[$mesh + 64 >> 2];
 $arraydecay = $mesh + 36 | 0;
 $8 = HEAP32[$mesh + 68 >> 2] | 0;
 $m_data_i = $edges | 0;
 HEAP32[$m_data_i >> 2] = 0;
 $m_size_i = $edges + 4 | 0;
 HEAP32[$m_size_i >> 2] = 0;
 $m_cap_i = $edges + 8 | 0;
 HEAP32[$m_cap_i >> 2] = 64;
 $9 = _malloc(256) | 0;
 HEAP32[$m_data_i >> 2] = $9;
 HEAP32[$m_size_i >> 2] = 64;
 $m_data_i208 = $tris | 0;
 HEAP32[$m_data_i208 >> 2] = 0;
 $m_size_i209 = $tris + 4 | 0;
 HEAP32[$m_size_i209 >> 2] = 0;
 $m_cap_i210 = $tris + 8 | 0;
 HEAP32[$m_cap_i210 >> 2] = 512;
 $call_i1_i26 = _malloc(2048) | 0;
 $11 = HEAP32[$m_size_i209 >> 2] | 0;
 if (($11 | 0) != 0 & ($call_i1_i26 | 0) != 0) {
  _memcpy($call_i1_i26 | 0, HEAP32[$m_data_i208 >> 2] | 0, $11 << 2) | 0;
 }
 $14 = HEAP32[$m_data_i208 >> 2] | 0;
 if (($14 | 0) != 0) {
  _free($14);
 }
 HEAP32[$m_data_i208 >> 2] = $call_i1_i26;
 HEAP32[$m_size_i209 >> 2] = 512;
 $stack_sroa_66 = 0;
 $call_i1_i56 = _malloc(2048) | 0;
 $16 = $call_i1_i56;
 $stack_sroa_66_0_load1217 = $stack_sroa_66;
 if (($stack_sroa_66_0_load1217 | 0) != 0 & ($call_i1_i56 | 0) != 0) {
  _memcpy($call_i1_i56 | 0, 0, $stack_sroa_66_0_load1217 << 2) | 0;
 }
 $stack_sroa_66 = 512;
 $samples_sroa_27 = 0;
 $call_i1_i86 = _malloc(2048) | 0;
 $17 = $call_i1_i86;
 $samples_sroa_27_0_load1088 = $samples_sroa_27;
 if (($samples_sroa_27_0_load1088 | 0) != 0 & ($call_i1_i86 | 0) != 0) {
  _memcpy($call_i1_i86 | 0, 0, $samples_sroa_27_0_load1088 << 2) | 0;
 }
 $samples_sroa_27 = 512;
 $call_i_i = _malloc(HEAP32[$npolys >> 2] << 4) | 0;
 $19 = $call_i_i;
 do {
  if (($call_i_i | 0) == 0) {
   __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$npolys >> 2] << 2, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $retval_110481050 = 0;
   $samples_sroa_0_19 = $17;
   $stack_sroa_0_33 = $16;
  } else {
   $call_i_i101 = _malloc($5 * 12 | 0) | 0;
   $24 = $call_i_i101;
   if (($call_i_i101 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8584, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $5 * 3 | 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    _free($call_i_i);
    $retval_110481050 = 0;
    $samples_sroa_0_19 = $17;
    $stack_sroa_0_33 = $16;
    break;
   }
   if ((HEAP32[$npolys >> 2] | 0) > 0) {
    $mul40 = $5 << 1;
    $26 = HEAP32[$mesh + 4 >> 2] | 0;
    $width = $chf | 0;
    $height = $chf + 4 | 0;
    $cmp62662 = ($5 | 0) > 0;
    $verts71 = $mesh | 0;
    $i_0667 = 0;
    $maxhh_0668 = 0;
    $maxhw_0669 = 0;
    $nPolyVerts_0670 = 0;
    while (1) {
     $mul41 = Math_imul($mul40, $i_0667) | 0;
     $mul42 = $i_0667 << 2;
     $arrayidx45 = $19 + ($mul42 << 2) | 0;
     $arrayidx50 = $19 + (($mul42 | 1) << 2) | 0;
     $arrayidx55 = $19 + (($mul42 | 2) << 2) | 0;
     $arrayidx60 = $19 + (($mul42 | 3) << 2) | 0;
     $30 = HEAP32[$width >> 2] | 0;
     HEAP32[$arrayidx45 >> 2] = $30;
     HEAP32[$arrayidx50 >> 2] = 0;
     $31 = HEAP32[$height >> 2] | 0;
     HEAP32[$arrayidx55 >> 2] = $31;
     HEAP32[$arrayidx60 >> 2] = 0;
     L33 : do {
      if ($cmp62662) {
       $j_0663 = 0;
       $nPolyVerts_1664 = $nPolyVerts_0670;
       $35 = $30;
       $34 = 0;
       $33 = $31;
       $32 = 0;
       while (1) {
        $36 = HEAP16[$26 + ($j_0663 + $mul41 << 1) >> 1] | 0;
        if ($36 << 16 >> 16 == -1) {
         $nPolyVerts_1_lcssa = $nPolyVerts_1664;
         $43 = $35;
         $42 = $34;
         $41 = $33;
         $40 = $32;
         break L33;
        }
        $mul70 = ($36 & 65535) * 3 | 0;
        $37 = HEAP32[$verts71 >> 2] | 0;
        $conv74 = HEAPU16[$37 + ($mul70 << 1) >> 1] | 0;
        $cond_i = ($35 | 0) < ($conv74 | 0) ? $35 : $conv74;
        HEAP32[$arrayidx45 >> 2] = $cond_i;
        $cond_i240 = ($34 | 0) > ($conv74 | 0) ? $34 : $conv74;
        HEAP32[$arrayidx50 >> 2] = $cond_i240;
        $conv82 = HEAPU16[$37 + ($mul70 + 2 << 1) >> 1] | 0;
        $cond_i242 = ($33 | 0) < ($conv82 | 0) ? $33 : $conv82;
        HEAP32[$arrayidx55 >> 2] = $cond_i242;
        $cond_i246 = ($32 | 0) > ($conv82 | 0) ? $32 : $conv82;
        HEAP32[$arrayidx60 >> 2] = $cond_i246;
        $inc = $nPolyVerts_1664 + 1 | 0;
        $inc89 = $j_0663 + 1 | 0;
        if (($inc89 | 0) < ($5 | 0)) {
         $j_0663 = $inc89;
         $nPolyVerts_1664 = $inc;
         $35 = $cond_i;
         $34 = $cond_i240;
         $33 = $cond_i242;
         $32 = $cond_i246;
        } else {
         $nPolyVerts_1_lcssa = $inc;
         $43 = $cond_i;
         $42 = $cond_i240;
         $41 = $cond_i242;
         $40 = $cond_i246;
         break;
        }
       }
      } else {
       $nPolyVerts_1_lcssa = $nPolyVerts_0670;
       $43 = $30;
       $42 = 0;
       $41 = $31;
       $40 = 0;
      }
     } while (0);
     $sub = $43 - 1 | 0;
     $cond_i248 = ($sub | 0) < 0 ? 0 : $sub;
     HEAP32[$arrayidx45 >> 2] = $cond_i248;
     $44 = HEAP32[$width >> 2] | 0;
     $add93 = $42 + 1 | 0;
     $cond_i253 = ($44 | 0) < ($add93 | 0) ? $44 : $add93;
     HEAP32[$arrayidx50 >> 2] = $cond_i253;
     $sub96 = $41 - 1 | 0;
     $cond_i255 = ($sub96 | 0) < 0 ? 0 : $sub96;
     HEAP32[$arrayidx55 >> 2] = $cond_i255;
     $45 = HEAP32[$height >> 2] | 0;
     $add100 = $40 + 1 | 0;
     $cond_i260 = ($45 | 0) < ($add100 | 0) ? $45 : $add100;
     HEAP32[$arrayidx60 >> 2] = $cond_i260;
     if (($cond_i253 | 0) > ($cond_i248 | 0) & ($cond_i260 | 0) > ($cond_i255 | 0)) {
      $sub108 = $cond_i253 - $cond_i248 | 0;
      $sub111 = $cond_i260 - $cond_i255 | 0;
      $maxhw_1 = ($maxhw_0669 | 0) > ($sub108 | 0) ? $maxhw_0669 : $sub108;
      $maxhh_1 = ($maxhh_0668 | 0) > ($sub111 | 0) ? $maxhh_0668 : $sub111;
     } else {
      $maxhw_1 = $maxhw_0669;
      $maxhh_1 = $maxhh_0668;
     }
     $inc115 = $i_0667 + 1 | 0;
     if (($inc115 | 0) < (HEAP32[$npolys >> 2] | 0)) {
      $i_0667 = $inc115;
      $maxhh_0668 = $maxhh_1;
      $maxhw_0669 = $maxhw_1;
      $nPolyVerts_0670 = $nPolyVerts_1_lcssa;
     } else {
      $maxhh_0_lcssa = $maxhh_1;
      $maxhw_0_lcssa = $maxhw_1;
      $nPolyVerts_0_lcssa = $nPolyVerts_1_lcssa;
      break;
     }
    }
   } else {
    $maxhh_0_lcssa = 0;
    $maxhw_0_lcssa = 0;
    $nPolyVerts_0_lcssa = 0;
   }
   $call_i_i105 = _malloc(Math_imul($maxhh_0_lcssa << 1, $maxhw_0_lcssa) | 0) | 0;
   $47 = $call_i_i105;
   L42 : do {
    if (($call_i_i105 | 0) == 0) {
     $mul124 = Math_imul($maxhw_0_lcssa, $maxhh_0_lcssa) | 0;
     __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6752, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul124, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
     $retval_0 = 0;
     $samples_sroa_0_17 = $17;
     $stack_sroa_0_31 = $16;
    } else {
     $48 = HEAP32[$npolys >> 2] | 0;
     $nmeshes = $dmesh + 12 | 0;
     HEAP32[$nmeshes >> 2] = $48;
     $nverts128 = $dmesh + 16 | 0;
     HEAP32[$nverts128 >> 2] = 0;
     $ntris = $dmesh + 20 | 0;
     HEAP32[$ntris >> 2] = 0;
     $call_i_i106 = _malloc($48 << 4) | 0;
     $meshes = $dmesh | 0;
     HEAP32[$meshes >> 2] = $call_i_i106;
     if (($call_i_i106 | 0) == 0) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 5704, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$nmeshes >> 2] << 2, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_0 = 0;
      $samples_sroa_0_17 = $17;
      $stack_sroa_0_31 = $16;
      break;
     }
     $add141 = (($nPolyVerts_0_lcssa | 0) / 2 | 0) + $nPolyVerts_0_lcssa | 0;
     HEAP32[$nverts128 >> 2] = 0;
     $call_i_i107 = _malloc($add141 * 12 | 0) | 0;
     $verts148 = $dmesh + 4 | 0;
     HEAP32[$verts148 >> 2] = $call_i_i107;
     if (($call_i_i107 | 0) == 0) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4680, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $add141 * 3 | 0, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_0 = 0;
      $samples_sroa_0_17 = $17;
      $stack_sroa_0_31 = $16;
      break;
     }
     HEAP32[$ntris >> 2] = 0;
     $call_i_i108 = _malloc($add141 << 5) | 0;
     $tris160 = $dmesh + 8 | 0;
     HEAP32[$tris160 >> 2] = $call_i_i108;
     if (($call_i_i108 | 0) == 0) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 3880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $add141 << 3, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_0 = 0;
      $samples_sroa_0_17 = $17;
      $stack_sroa_0_31 = $16;
      break;
     }
     L54 : do {
      if ((HEAP32[$npolys >> 2] | 0) > 0) {
       $mul173 = $5 << 1;
       $polys175 = $mesh + 4 | 0;
       $cmp179600 = ($5 | 0) > 0;
       $verts259 = $mesh | 0;
       $width42_i = $chf | 0;
       $cells_i = $chf + 60 | 0;
       $spans_i = $chf + 64 | 0;
       $arraydecay264 = $verts | 0;
       $arraydecay_i = $hull_i | 0;
       $arrayidx304 = $mesh + 40 | 0;
       $arrayidx311 = $mesh + 44 | 0;
       $ch279 = $chf + 56 | 0;
       $55 = $call_i_i101 + 4 | 0;
       $56 = $call_i_i101 + 8 | 0;
       $div234_i = $sampleDist * -.5;
       $cs3_i573 = $chf + 52 | 0;
       $cmp4_i575 = $sampleDist > 0.0;
       $57 = $idx_i;
       $arrayinit_element_i = $idx_i + 4 | 0;
       $mul_i45_i = $sampleMaxError * $sampleMaxError;
       $vcap_0659 = $add141;
       $tcap_0660 = $add141 << 1;
       $i167_0661 = 0;
       $samples_sroa_0_3 = $17;
       $samples_sroa_54_0 = 512;
       $stack_sroa_0_2 = $16;
       $stack_sroa_146_0 = 512;
       while (1) {
        $mul174 = Math_imul($mul173, $i167_0661) | 0;
        $58 = HEAP32[$polys175 >> 2] | 0;
        L58 : do {
         if ($cmp179600) {
          $j177_0602 = 0;
          while (1) {
           $59 = HEAP16[$58 + ($j177_0602 + $mul174 << 1) >> 1] | 0;
           if ($59 << 16 >> 16 == -1) {
            $npoly_0_lcssa = $j177_0602;
            break L58;
           }
           $mul189 = ($59 & 65535) * 3 | 0;
           $60 = HEAP32[$verts259 >> 2] | 0;
           $mul196 = $j177_0602 * 3 | 0;
           HEAPF32[$24 + ($mul196 << 2) >> 2] = $6 * +(HEAPU16[$60 + ($mul189 << 1) >> 1] | 0);
           HEAPF32[$24 + ($mul196 + 1 << 2) >> 2] = $7 * +(HEAPU16[$60 + ($mul189 + 1 << 1) >> 1] | 0);
           HEAPF32[$24 + ($mul196 + 2 << 2) >> 2] = $6 * +(HEAPU16[$60 + ($mul189 + 2 << 1) >> 1] | 0);
           $inc221 = $j177_0602 + 1 | 0;
           if (($inc221 | 0) < ($5 | 0)) {
            $j177_0602 = $inc221;
           } else {
            $npoly_0_lcssa = $inc221;
            break;
           }
          }
         } else {
          $npoly_0_lcssa = 0;
         }
        } while (0);
        $mul223 = $i167_0661 << 2;
        $64 = HEAP32[$19 + ($mul223 << 2) >> 2] | 0;
        $add230198 = $mul223 | 2;
        $65 = HEAP32[$19 + ($add230198 << 2) >> 2] | 0;
        $add236199 = $mul223 | 1;
        $66 = HEAP32[$19 + ($add236199 << 2) >> 2] | 0;
        $sub245 = $66 - $64 | 0;
        $add248200 = $mul223 | 3;
        $67 = HEAP32[$19 + ($add248200 << 2) >> 2] | 0;
        $sub257 = $67 - $65 | 0;
        $68 = HEAP32[$verts259 >> 2] | 0;
        $mul1_i = Math_imul($sub245 << 1, $sub257) | 0;
        _memset($call_i_i105 | 0, 0, $mul1_i | 0) | 0;
        if (($stack_sroa_146_0 | 0) < 0) {
         $69 = $stack_sroa_146_0;
         while (1) {
          $mul_i118 = $69 << 1;
          if (($69 | 0) < 0) {
           $69 = $mul_i118;
          } else {
           break;
          }
         }
         $call_i1_i124 = _malloc($69 << 3) | 0;
         $70 = $call_i1_i124;
         $stack_sroa_66_0_load1244 = $stack_sroa_66;
         if (($stack_sroa_66_0_load1244 | 0) != 0 & ($call_i1_i124 | 0) != 0) {
          _memcpy($call_i1_i124 | 0, $stack_sroa_0_2 | 0, $stack_sroa_66_0_load1244 << 2) | 0;
         }
         if (($stack_sroa_0_2 | 0) == 0) {
          $stack_sroa_0_3 = $70;
          $stack_sroa_146_1 = $mul_i118;
         } else {
          _free($stack_sroa_0_2);
          $stack_sroa_0_3 = $70;
          $stack_sroa_146_1 = $mul_i118;
         }
        } else {
         $stack_sroa_0_3 = $stack_sroa_0_2;
         $stack_sroa_146_1 = $stack_sroa_146_0;
        }
        $stack_sroa_66 = 0;
        $cmp361_i = ($npoly_0_lcssa | 0) > 0;
        L72 : do {
         if ($cmp361_i) {
          $j_0362_i = 0;
          $stack_sroa_0_4 = $stack_sroa_0_3;
          $stack_sroa_146_2 = $stack_sroa_146_1;
          while (1) {
           $mul5_i = (HEAPU16[$58 + ($j_0362_i + $mul174 << 1) >> 1] | 0) * 3 | 0;
           $conv7_i = HEAPU16[$68 + ($mul5_i << 1) >> 1] | 0;
           $conv17_i = HEAPU16[$68 + ($mul5_i + 1 << 1) >> 1] | 0;
           $conv23_i = HEAPU16[$68 + ($mul5_i + 2 << 1) >> 1] | 0;
           $k_0356_i = 0;
           $dmin_0357_i = 65535;
           $ci_0358_i = -1;
           $cz_0359_i = 0;
           $cx_0360_i = 0;
           while (1) {
            $mul8_i = $k_0356_i << 1;
            $add11_i = (HEAP32[11416 + ($mul8_i << 2) >> 2] | 0) + $conv7_i | 0;
            $add27_i = (HEAP32[11416 + (($mul8_i | 1) << 2) >> 2] | 0) + $conv23_i | 0;
            if (($add27_i | 0) < ($67 | 0) & ((($add11_i | 0) >= ($66 | 0) | ($add11_i | 0) < ($64 | 0) | ($add27_i | 0) < ($65 | 0)) ^ 1)) {
             $add44_i = $add11_i + $8 + (Math_imul(HEAP32[$width42_i >> 2] | 0, $add27_i + $8 | 0) | 0) | 0;
             $bf_load_i = HEAP32[(HEAP32[$cells_i >> 2] | 0) + ($add44_i << 2) >> 2] | 0;
             $bf_clear_i = $bf_load_i & 16777215;
             $bf_lshr_i = $bf_load_i >>> 24;
             $add49_i = $bf_clear_i + $bf_lshr_i | 0;
             if (($bf_lshr_i | 0) == 0) {
              $cx_3_i = $cx_0360_i;
              $cz_3_i = $cz_0359_i;
              $ci_3_i = $ci_0358_i;
              $dmin_3_i = $dmin_0357_i;
             } else {
              $82 = HEAP32[$spans_i >> 2] | 0;
              $i_0347_i = $bf_clear_i;
              $dmin_1348_i = $dmin_0357_i;
              $ci_1349_i = $ci_0358_i;
              $cz_1350_i = $cz_0359_i;
              $cx_1351_i = $cx_0360_i;
              while (1) {
               $sub_i = $conv17_i - (HEAPU16[$82 + ($i_0347_i << 3) >> 1] | 0) | 0;
               $cond_i_i = ($sub_i | 0) < 0 ? -$sub_i | 0 : $sub_i;
               $cmp55_i = ($cond_i_i | 0) < ($dmin_1348_i | 0);
               $call_dmin_1_i = $cmp55_i ? $cond_i_i : $dmin_1348_i;
               $i_0_ci_1_i = $cmp55_i ? $i_0347_i : $ci_1349_i;
               $add27_cz_1_i = $cmp55_i ? $add27_i : $cz_1350_i;
               $add11_cx_1_i = $cmp55_i ? $add11_i : $cx_1351_i;
               $inc_i = $i_0347_i + 1 | 0;
               if (($inc_i | 0) < ($add49_i | 0)) {
                $i_0347_i = $inc_i;
                $dmin_1348_i = $call_dmin_1_i;
                $ci_1349_i = $i_0_ci_1_i;
                $cz_1350_i = $add27_cz_1_i;
                $cx_1351_i = $add11_cx_1_i;
               } else {
                $cx_3_i = $add11_cx_1_i;
                $cz_3_i = $add27_cz_1_i;
                $ci_3_i = $i_0_ci_1_i;
                $dmin_3_i = $call_dmin_1_i;
                break;
               }
              }
             }
            } else {
             $cx_3_i = $cx_0360_i;
             $cz_3_i = $cz_0359_i;
             $ci_3_i = $ci_0358_i;
             $dmin_3_i = $dmin_0357_i;
            }
            $k_0356_i = $k_0356_i + 1 | 0;
            if (($k_0356_i | 0) >= 9) {
             break;
            } else {
             $dmin_0357_i = $dmin_3_i;
             $ci_0358_i = $ci_3_i;
             $cz_0359_i = $cz_3_i;
             $cx_0360_i = $cx_3_i;
            }
           }
           if (($ci_3_i | 0) == -1) {
            $stack_sroa_0_8 = $stack_sroa_0_4;
            $stack_sroa_146_9 = $stack_sroa_146_2;
           } else {
            $stack_sroa_66_0_load1247 = $stack_sroa_66;
            $add_i188_i = $stack_sroa_66_0_load1247 + 1 | 0;
            if (($stack_sroa_146_2 | 0) < ($add_i188_i | 0)) {
             if (($stack_sroa_146_2 | 0) == 0) {
              $stack_sroa_146_3 = $add_i188_i;
             } else {
              $84 = $stack_sroa_146_2;
              while (1) {
               $mul_i148 = $84 << 1;
               if (($mul_i148 | 0) < ($add_i188_i | 0)) {
                $84 = $mul_i148;
               } else {
                $stack_sroa_146_3 = $mul_i148;
                break;
               }
              }
             }
             $call_i1_i154 = _malloc($stack_sroa_146_3 << 2) | 0;
             $85 = $call_i1_i154;
             $stack_sroa_66_0_load1246 = $stack_sroa_66;
             if (($stack_sroa_66_0_load1246 | 0) != 0 & ($call_i1_i154 | 0) != 0) {
              _memcpy($call_i1_i154 | 0, $stack_sroa_0_4 | 0, $stack_sroa_66_0_load1246 << 2) | 0;
             }
             if (($stack_sroa_0_4 | 0) == 0) {
              $stack_sroa_0_5 = $85;
              $stack_sroa_146_4 = $stack_sroa_146_3;
             } else {
              _free($stack_sroa_0_4);
              $stack_sroa_0_5 = $85;
              $stack_sroa_146_4 = $stack_sroa_146_3;
             }
            } else {
             $stack_sroa_0_5 = $stack_sroa_0_4;
             $stack_sroa_146_4 = $stack_sroa_146_2;
            }
            $stack_sroa_66 = $add_i188_i;
            HEAP32[$stack_sroa_0_5 + ($stack_sroa_66_0_load1247 << 2) >> 2] = $cx_3_i;
            $stack_sroa_66_0_load1230 = $stack_sroa_66;
            $add_i193_i = $stack_sroa_66_0_load1230 + 1 | 0;
            if (($stack_sroa_146_4 | 0) < ($add_i193_i | 0)) {
             if (($stack_sroa_146_4 | 0) == 0) {
              $stack_sroa_146_5 = $add_i193_i;
             } else {
              $88 = $stack_sroa_146_4;
              while (1) {
               $mul_i178 = $88 << 1;
               if (($mul_i178 | 0) < ($add_i193_i | 0)) {
                $88 = $mul_i178;
               } else {
                $stack_sroa_146_5 = $mul_i178;
                break;
               }
              }
             }
             $call_i1_i184 = _malloc($stack_sroa_146_5 << 2) | 0;
             $89 = $call_i1_i184;
             $stack_sroa_66_0_load1238 = $stack_sroa_66;
             if (($stack_sroa_66_0_load1238 | 0) != 0 & ($call_i1_i184 | 0) != 0) {
              _memcpy($call_i1_i184 | 0, $stack_sroa_0_5 | 0, $stack_sroa_66_0_load1238 << 2) | 0;
             }
             if (($stack_sroa_0_5 | 0) == 0) {
              $stack_sroa_0_6 = $89;
              $stack_sroa_146_6 = $stack_sroa_146_5;
             } else {
              _free($stack_sroa_0_5);
              $stack_sroa_0_6 = $89;
              $stack_sroa_146_6 = $stack_sroa_146_5;
             }
            } else {
             $stack_sroa_0_6 = $stack_sroa_0_5;
             $stack_sroa_146_6 = $stack_sroa_146_4;
            }
            $stack_sroa_66 = $add_i193_i;
            HEAP32[$stack_sroa_0_6 + ($stack_sroa_66_0_load1230 << 2) >> 2] = $cz_3_i;
            $stack_sroa_66_0_load1215 = $stack_sroa_66;
            $add_i198_i = $stack_sroa_66_0_load1215 + 1 | 0;
            if (($stack_sroa_146_6 | 0) < ($add_i198_i | 0)) {
             if (($stack_sroa_146_6 | 0) == 0) {
              $stack_sroa_146_7 = $add_i198_i;
             } else {
              $92 = $stack_sroa_146_6;
              while (1) {
               $mul_i208 = $92 << 1;
               if (($mul_i208 | 0) < ($add_i198_i | 0)) {
                $92 = $mul_i208;
               } else {
                $stack_sroa_146_7 = $mul_i208;
                break;
               }
              }
             }
             $call_i1_i214 = _malloc($stack_sroa_146_7 << 2) | 0;
             $93 = $call_i1_i214;
             $stack_sroa_66_0_load1222 = $stack_sroa_66;
             if (($stack_sroa_66_0_load1222 | 0) != 0 & ($call_i1_i214 | 0) != 0) {
              _memcpy($call_i1_i214 | 0, $stack_sroa_0_6 | 0, $stack_sroa_66_0_load1222 << 2) | 0;
             }
             if (($stack_sroa_0_6 | 0) == 0) {
              $stack_sroa_0_7 = $93;
              $stack_sroa_146_8 = $stack_sroa_146_7;
             } else {
              _free($stack_sroa_0_6);
              $stack_sroa_0_7 = $93;
              $stack_sroa_146_8 = $stack_sroa_146_7;
             }
            } else {
             $stack_sroa_0_7 = $stack_sroa_0_6;
             $stack_sroa_146_8 = $stack_sroa_146_6;
            }
            $stack_sroa_66 = $add_i198_i;
            HEAP32[$stack_sroa_0_7 + ($stack_sroa_66_0_load1215 << 2) >> 2] = $ci_3_i;
            $stack_sroa_0_8 = $stack_sroa_0_7;
            $stack_sroa_146_9 = $stack_sroa_146_8;
           }
           $inc65_i = $j_0362_i + 1 | 0;
           if (($inc65_i | 0) < ($npoly_0_lcssa | 0)) {
            $j_0362_i = $inc65_i;
            $stack_sroa_0_4 = $stack_sroa_0_8;
            $stack_sroa_146_2 = $stack_sroa_146_9;
           } else {
            $j67_0341_i = 0;
            $pcz_0342_i = 0;
            $pcx_0343_i = 0;
            break;
           }
          }
          do {
           $mul73_i = (HEAPU16[$58 + ($j67_0341_i + $mul174 << 1) >> 1] | 0) * 3 | 0;
           $pcx_0343_i = (HEAPU16[$68 + ($mul73_i << 1) >> 1] | 0) + $pcx_0343_i | 0;
           $pcz_0342_i = (HEAPU16[$68 + ($mul73_i + 2 << 1) >> 1] | 0) + $pcz_0342_i | 0;
           $j67_0341_i = $j67_0341_i + 1 | 0;
          } while (($j67_0341_i | 0) < ($npoly_0_lcssa | 0));
          $stack_sroa_66_0_load1212_pre = $stack_sroa_66;
          $div_i = ($pcx_0343_i | 0) / ($npoly_0_lcssa | 0) | 0;
          $div88_i = ($pcz_0342_i | 0) / ($npoly_0_lcssa | 0) | 0;
          if (($stack_sroa_66_0_load1212_pre | 0) > 0) {
           $i89_0337_i = 0;
           while (1) {
            $arrayidx107_i = $47 + ((HEAP32[$stack_sroa_0_8 + ($i89_0337_i << 2) >> 2] | 0) - $64 + (Math_imul((HEAP32[$stack_sroa_0_8 + ($i89_0337_i + 1 << 2) >> 2] | 0) - $65 | 0, $sub245) | 0) << 1) | 0;
            HEAP16[$arrayidx107_i >> 1] = 1;
            $add109_i = $i89_0337_i + 3 | 0;
            if (($add109_i | 0) < ($stack_sroa_66_0_load1212_pre | 0)) {
             $i89_0337_i = $add109_i;
            } else {
             $102 = $stack_sroa_66_0_load1212_pre;
             $101 = $stack_sroa_0_8;
             $stack_sroa_0_10 = $stack_sroa_0_8;
             $stack_sroa_146_11 = $stack_sroa_146_9;
             break;
            }
           }
           while (1) {
            $dec_i_i = $102 - 1 | 0;
            $stack_sroa_66 = $dec_i_i;
            $103 = HEAP32[$101 + ($dec_i_i << 2) >> 2] | 0;
            if (($dec_i_i | 0) > 0) {
             $dec_i269_i = $102 - 2 | 0;
             $stack_sroa_66 = $dec_i269_i;
             $104 = HEAP32[$101 + ($dec_i269_i << 2) >> 2] | 0;
             if (($dec_i269_i | 0) > 0) {
              $dec_i297_i = $102 - 3 | 0;
              $stack_sroa_66 = $dec_i297_i;
              $106 = $104;
              $105 = HEAP32[$101 + ($dec_i297_i << 2) >> 2] | 0;
             } else {
              $106 = $104;
              $105 = $104;
             }
            } else {
             $106 = $103;
             $105 = $103;
            }
            $sub119_i = $105 - $div_i | 0;
            if (((($sub119_i | 0) < 0 ? -$sub119_i | 0 : $sub119_i) | 0) < 2) {
             $sub122_i = $106 - $div88_i | 0;
             if (((($sub122_i | 0) < 0 ? -$sub122_i | 0 : $sub122_i) | 0) < 2) {
              break;
             }
            }
            $124 = (HEAP32[$spans_i >> 2] | 0) + ($103 << 3) + 4 | 0;
            $dir_0330_i = 0;
            $125 = $101;
            $stack_sroa_0_15 = $stack_sroa_0_10;
            $stack_sroa_146_19 = $stack_sroa_146_11;
            while (1) {
             $and_i289_i = (HEAP32[$124 >> 2] & 16777215) >>> (($dir_0330_i * 6 | 0) >>> 0) & 63;
             if (($and_i289_i | 0) == 63) {
              $144 = $125;
              $stack_sroa_0_19 = $stack_sroa_0_15;
              $stack_sroa_146_26 = $stack_sroa_146_19;
             } else {
              $add138_i = (HEAP32[11520 + ($dir_0330_i << 2) >> 2] | 0) + $105 | 0;
              $add141_i = (HEAP32[11504 + ($dir_0330_i << 2) >> 2] | 0) + $106 | 0;
              if (($add141_i | 0) < ($67 | 0) & ((($add138_i | 0) >= ($66 | 0) | ($add138_i | 0) < ($64 | 0) | ($add141_i | 0) < ($65 | 0)) ^ 1)) {
               $arrayidx167_i = $47 + ($add138_i - $64 + (Math_imul($add141_i - $65 | 0, $sub245) | 0) << 1) | 0;
               if ((HEAP16[$arrayidx167_i >> 1] | 0) == 0) {
                $add176_i = $add138_i + $8 + (Math_imul(HEAP32[$width42_i >> 2] | 0, $add141_i + $8 | 0) | 0) | 0;
                $add182_i = (HEAP32[(HEAP32[$cells_i >> 2] | 0) + ($add176_i << 2) >> 2] & 16777215) + $and_i289_i | 0;
                HEAP16[$arrayidx167_i >> 1] = 1;
                $stack_sroa_66_0_load1242 = $stack_sroa_66;
                $add_i263_i = $stack_sroa_66_0_load1242 + 1 | 0;
                if (($stack_sroa_146_19 | 0) < ($add_i263_i | 0)) {
                 if (($stack_sroa_146_19 | 0) == 0) {
                  $stack_sroa_146_20 = $add_i263_i;
                 } else {
                  $132 = $stack_sroa_146_19;
                  while (1) {
                   $mul_i358 = $132 << 1;
                   if (($mul_i358 | 0) < ($add_i263_i | 0)) {
                    $132 = $mul_i358;
                   } else {
                    $stack_sroa_146_20 = $mul_i358;
                    break;
                   }
                  }
                 }
                 $call_i1_i364 = _malloc($stack_sroa_146_20 << 2) | 0;
                 $133 = $call_i1_i364;
                 $stack_sroa_66_0_load1239 = $stack_sroa_66;
                 if (($stack_sroa_66_0_load1239 | 0) != 0 & ($call_i1_i364 | 0) != 0) {
                  _memcpy($call_i1_i364 | 0, $stack_sroa_0_15 | 0, $stack_sroa_66_0_load1239 << 2) | 0;
                 }
                 if (($stack_sroa_0_15 | 0) == 0) {
                  $stack_sroa_0_16 = $133;
                  $stack_sroa_146_21 = $stack_sroa_146_20;
                 } else {
                  _free($stack_sroa_0_15);
                  $stack_sroa_0_16 = $133;
                  $stack_sroa_146_21 = $stack_sroa_146_20;
                 }
                } else {
                 $stack_sroa_0_16 = $stack_sroa_0_15;
                 $stack_sroa_146_21 = $stack_sroa_146_19;
                }
                $stack_sroa_66 = $add_i263_i;
                HEAP32[$stack_sroa_0_16 + ($stack_sroa_66_0_load1242 << 2) >> 2] = $add138_i;
                $stack_sroa_66_0_load1235 = $stack_sroa_66;
                $add_i254_i = $stack_sroa_66_0_load1235 + 1 | 0;
                if (($stack_sroa_146_21 | 0) < ($add_i254_i | 0)) {
                 if (($stack_sroa_146_21 | 0) == 0) {
                  $stack_sroa_146_22 = $add_i254_i;
                 } else {
                  $136 = $stack_sroa_146_21;
                  while (1) {
                   $mul_i389 = $136 << 1;
                   if (($mul_i389 | 0) < ($add_i254_i | 0)) {
                    $136 = $mul_i389;
                   } else {
                    $stack_sroa_146_22 = $mul_i389;
                    break;
                   }
                  }
                 }
                 $call_i1_i395 = _malloc($stack_sroa_146_22 << 2) | 0;
                 $137 = $call_i1_i395;
                 $stack_sroa_66_0_load1248 = $stack_sroa_66;
                 if (($stack_sroa_66_0_load1248 | 0) != 0 & ($call_i1_i395 | 0) != 0) {
                  _memcpy($call_i1_i395 | 0, $stack_sroa_0_16 | 0, $stack_sroa_66_0_load1248 << 2) | 0;
                 }
                 if (($stack_sroa_0_16 | 0) == 0) {
                  $stack_sroa_0_17 = $137;
                  $stack_sroa_146_23 = $stack_sroa_146_22;
                 } else {
                  _free($stack_sroa_0_16);
                  $stack_sroa_0_17 = $137;
                  $stack_sroa_146_23 = $stack_sroa_146_22;
                 }
                } else {
                 $stack_sroa_0_17 = $stack_sroa_0_16;
                 $stack_sroa_146_23 = $stack_sroa_146_21;
                }
                $stack_sroa_66 = $add_i254_i;
                HEAP32[$stack_sroa_0_17 + ($stack_sroa_66_0_load1235 << 2) >> 2] = $add141_i;
                $stack_sroa_66_0_load1233 = $stack_sroa_66;
                $add_i248_i = $stack_sroa_66_0_load1233 + 1 | 0;
                if (($stack_sroa_146_23 | 0) < ($add_i248_i | 0)) {
                 if (($stack_sroa_146_23 | 0) == 0) {
                  $stack_sroa_146_24 = $add_i248_i;
                 } else {
                  $140 = $stack_sroa_146_23;
                  while (1) {
                   $mul_i419 = $140 << 1;
                   if (($mul_i419 | 0) < ($add_i248_i | 0)) {
                    $140 = $mul_i419;
                   } else {
                    $stack_sroa_146_24 = $mul_i419;
                    break;
                   }
                  }
                 }
                 $call_i1_i425 = _malloc($stack_sroa_146_24 << 2) | 0;
                 $141 = $call_i1_i425;
                 $stack_sroa_66_0_load1245 = $stack_sroa_66;
                 if (($stack_sroa_66_0_load1245 | 0) != 0 & ($call_i1_i425 | 0) != 0) {
                  _memcpy($call_i1_i425 | 0, $stack_sroa_0_17 | 0, $stack_sroa_66_0_load1245 << 2) | 0;
                 }
                 if (($stack_sroa_0_17 | 0) == 0) {
                  $stack_sroa_0_18 = $141;
                  $stack_sroa_146_25 = $stack_sroa_146_24;
                 } else {
                  _free($stack_sroa_0_17);
                  $stack_sroa_0_18 = $141;
                  $stack_sroa_146_25 = $stack_sroa_146_24;
                 }
                } else {
                 $stack_sroa_0_18 = $stack_sroa_0_17;
                 $stack_sroa_146_25 = $stack_sroa_146_23;
                }
                $stack_sroa_66 = $add_i248_i;
                HEAP32[$stack_sroa_0_18 + ($stack_sroa_66_0_load1233 << 2) >> 2] = $add182_i;
                $144 = $stack_sroa_0_18;
                $stack_sroa_0_19 = $stack_sroa_0_18;
                $stack_sroa_146_26 = $stack_sroa_146_25;
               } else {
                $144 = $125;
                $stack_sroa_0_19 = $stack_sroa_0_15;
                $stack_sroa_146_26 = $stack_sroa_146_19;
               }
              } else {
               $144 = $125;
               $stack_sroa_0_19 = $stack_sroa_0_15;
               $stack_sroa_146_26 = $stack_sroa_146_19;
              }
             }
             $dir_0330_i = $dir_0330_i + 1 | 0;
             if (($dir_0330_i | 0) >= 4) {
              break;
             } else {
              $125 = $144;
              $stack_sroa_0_15 = $stack_sroa_0_19;
              $stack_sroa_146_19 = $stack_sroa_146_26;
             }
            }
            $stack_sroa_66_0_load1221 = $stack_sroa_66;
            if (($stack_sroa_66_0_load1221 | 0) > 0) {
             $102 = $stack_sroa_66_0_load1221;
             $101 = $144;
             $stack_sroa_0_10 = $stack_sroa_0_19;
             $stack_sroa_146_11 = $stack_sroa_146_26;
            } else {
             $stack_sroa_0_20 = $stack_sroa_0_19;
             $stack_sroa_146_27 = $stack_sroa_146_26;
             break L72;
            }
           }
           if (($stack_sroa_146_11 | 0) < 0) {
            $107 = $stack_sroa_146_11;
            while (1) {
             $mul_i238 = $107 << 1;
             if (($107 | 0) < 0) {
              $107 = $mul_i238;
             } else {
              break;
             }
            }
            $call_i1_i244 = _malloc($107 << 3) | 0;
            $108 = $call_i1_i244;
            $stack_sroa_66_0_load = $stack_sroa_66;
            if (($stack_sroa_66_0_load | 0) != 0 & ($call_i1_i244 | 0) != 0) {
             _memcpy($call_i1_i244 | 0, $stack_sroa_0_10 | 0, $stack_sroa_66_0_load << 2) | 0;
            }
            if (($stack_sroa_0_10 | 0) == 0) {
             $stack_sroa_0_11 = $108;
             $stack_sroa_146_12 = $mul_i238;
            } else {
             _free($stack_sroa_0_10);
             $stack_sroa_0_11 = $108;
             $stack_sroa_146_12 = $mul_i238;
            }
           } else {
            $stack_sroa_0_11 = $stack_sroa_0_10;
            $stack_sroa_146_12 = $stack_sroa_146_11;
           }
           $stack_sroa_66 = 0;
           if (($stack_sroa_146_12 | 0) < 1) {
            if (($stack_sroa_146_12 | 0) == 0) {
             $_lcssa_i272 = 4;
             $stack_sroa_146_13 = 1;
            } else {
             $111 = $stack_sroa_146_12;
             while (1) {
              $mul_i268 = $111 << 1;
              if (($111 | 0) < 1) {
               $111 = $mul_i268;
              } else {
               break;
              }
             }
             $_lcssa_i272 = $111 << 3;
             $stack_sroa_146_13 = $mul_i268;
            }
            $call_i1_i274 = _malloc($_lcssa_i272) | 0;
            $112 = $call_i1_i274;
            $stack_sroa_66_0_load1216 = $stack_sroa_66;
            if (($stack_sroa_66_0_load1216 | 0) != 0 & ($call_i1_i274 | 0) != 0) {
             _memcpy($call_i1_i274 | 0, $stack_sroa_0_11 | 0, $stack_sroa_66_0_load1216 << 2) | 0;
            }
            if (($stack_sroa_0_11 | 0) == 0) {
             $stack_sroa_0_12 = $112;
             $stack_sroa_146_14 = $stack_sroa_146_13;
            } else {
             _free($stack_sroa_0_11);
             $stack_sroa_0_12 = $112;
             $stack_sroa_146_14 = $stack_sroa_146_13;
            }
           } else {
            $stack_sroa_0_12 = $stack_sroa_0_11;
            $stack_sroa_146_14 = $stack_sroa_146_12;
           }
           $stack_sroa_66 = 1;
           HEAP32[$stack_sroa_0_12 >> 2] = $105;
           $stack_sroa_66_0_load1251 = $stack_sroa_66;
           $add_i303_i = $stack_sroa_66_0_load1251 + 1 | 0;
           if (($stack_sroa_146_14 | 0) < ($add_i303_i | 0)) {
            if (($stack_sroa_146_14 | 0) == 0) {
             $stack_sroa_146_15 = $add_i303_i;
            } else {
             $115 = $stack_sroa_146_14;
             while (1) {
              $mul_i298 = $115 << 1;
              if (($mul_i298 | 0) < ($add_i303_i | 0)) {
               $115 = $mul_i298;
              } else {
               $stack_sroa_146_15 = $mul_i298;
               break;
              }
             }
            }
            $call_i1_i304 = _malloc($stack_sroa_146_15 << 2) | 0;
            $116 = $call_i1_i304;
            $stack_sroa_66_0_load1223 = $stack_sroa_66;
            if (($stack_sroa_66_0_load1223 | 0) != 0 & ($call_i1_i304 | 0) != 0) {
             _memcpy($call_i1_i304 | 0, $stack_sroa_0_12 | 0, $stack_sroa_66_0_load1223 << 2) | 0;
            }
            if (($stack_sroa_0_12 | 0) == 0) {
             $stack_sroa_0_13 = $116;
             $stack_sroa_146_16 = $stack_sroa_146_15;
            } else {
             _free($stack_sroa_0_12);
             $stack_sroa_0_13 = $116;
             $stack_sroa_146_16 = $stack_sroa_146_15;
            }
           } else {
            $stack_sroa_0_13 = $stack_sroa_0_12;
            $stack_sroa_146_16 = $stack_sroa_146_14;
           }
           $stack_sroa_66 = $add_i303_i;
           HEAP32[$stack_sroa_0_13 + ($stack_sroa_66_0_load1251 << 2) >> 2] = $106;
           $stack_sroa_66_0_load1249 = $stack_sroa_66;
           $add_i291_i = $stack_sroa_66_0_load1249 + 1 | 0;
           if (($stack_sroa_146_16 | 0) < ($add_i291_i | 0)) {
            if (($stack_sroa_146_16 | 0) == 0) {
             $stack_sroa_146_17 = $add_i291_i;
            } else {
             $119 = $stack_sroa_146_16;
             while (1) {
              $mul_i328 = $119 << 1;
              if (($mul_i328 | 0) < ($add_i291_i | 0)) {
               $119 = $mul_i328;
              } else {
               $stack_sroa_146_17 = $mul_i328;
               break;
              }
             }
            }
            $call_i1_i334 = _malloc($stack_sroa_146_17 << 2) | 0;
            $120 = $call_i1_i334;
            $stack_sroa_66_0_load1231 = $stack_sroa_66;
            if (($stack_sroa_66_0_load1231 | 0) != 0 & ($call_i1_i334 | 0) != 0) {
             _memcpy($call_i1_i334 | 0, $stack_sroa_0_13 | 0, $stack_sroa_66_0_load1231 << 2) | 0;
            }
            if (($stack_sroa_0_13 | 0) == 0) {
             $stack_sroa_0_14 = $120;
             $stack_sroa_146_18 = $stack_sroa_146_17;
            } else {
             _free($stack_sroa_0_13);
             $stack_sroa_0_14 = $120;
             $stack_sroa_146_18 = $stack_sroa_146_17;
            }
           } else {
            $stack_sroa_0_14 = $stack_sroa_0_13;
            $stack_sroa_146_18 = $stack_sroa_146_16;
           }
           $stack_sroa_66 = $add_i291_i;
           HEAP32[$stack_sroa_0_14 + ($stack_sroa_66_0_load1249 << 2) >> 2] = $103;
           $stack_sroa_0_20 = $stack_sroa_0_14;
           $stack_sroa_146_27 = $stack_sroa_146_18;
          } else {
           $stack_sroa_0_20 = $stack_sroa_0_8;
           $stack_sroa_146_27 = $stack_sroa_146_9;
          }
         } else {
          $stack_sroa_0_20 = $stack_sroa_0_3;
          $stack_sroa_146_27 = $stack_sroa_146_1;
         }
        } while (0);
        _memset($call_i_i105 | 0, -1 | 0, $mul1_i | 0) | 0;
        $stack_sroa_66_0_load1226 = $stack_sroa_66;
        if (($stack_sroa_66_0_load1226 | 0) > 0) {
         $145 = HEAP32[$spans_i >> 2] | 0;
         $i201_0329_i = 0;
         while (1) {
          $add222_i = (HEAP32[$stack_sroa_0_20 + ($i201_0329_i << 2) >> 2] | 0) - $64 + (Math_imul((HEAP32[$stack_sroa_0_20 + ($i201_0329_i + 1 << 2) >> 2] | 0) - $65 | 0, $sub245) | 0) | 0;
          HEAP16[$47 + ($add222_i << 1) >> 1] = HEAP16[$145 + (HEAP32[$stack_sroa_0_20 + ($i201_0329_i + 2 << 2) >> 2] << 3) >> 1] | 0;
          $add230_i = $i201_0329_i + 3 | 0;
          if (($add230_i | 0) < ($stack_sroa_66_0_load1226 | 0)) {
           $i201_0329_i = $add230_i;
          } else {
           $150 = $stack_sroa_66_0_load1226;
           $head_0326_i = 0;
           $mul233327_i = 0;
           $stack_sroa_0_21 = $stack_sroa_0_20;
           $stack_sroa_146_28 = $stack_sroa_146_27;
           break;
          }
         }
         while (1) {
          $151 = HEAP32[$stack_sroa_0_21 + ($mul233327_i << 2) >> 2] | 0;
          $152 = HEAP32[$stack_sroa_0_21 + ($mul233327_i + 1 << 2) >> 2] | 0;
          $153 = HEAP32[$stack_sroa_0_21 + ($mul233327_i + 2 << 2) >> 2] | 0;
          $inc249_i = $head_0326_i + 1 | 0;
          if (($head_0326_i | 0) > 254) {
           if (($150 | 0) > 768) {
            _memmove($stack_sroa_0_21 | 0, $stack_sroa_0_21 + 3072 | 0, ($150 << 2) - 3072 | 0) | 0;
            $156 = $stack_sroa_66;
           } else {
            $156 = $150;
           }
           $sub262_i = $156 - 768 | 0;
           if (($stack_sroa_146_28 | 0) < ($sub262_i | 0)) {
            if (($stack_sroa_146_28 | 0) == 0) {
             $stack_sroa_146_29 = $sub262_i;
            } else {
             $157 = $stack_sroa_146_28;
             while (1) {
              $mul_i449 = $157 << 1;
              if (($mul_i449 | 0) < ($sub262_i | 0)) {
               $157 = $mul_i449;
              } else {
               $stack_sroa_146_29 = $mul_i449;
               break;
              }
             }
            }
            $call_i1_i455 = _malloc($stack_sroa_146_29 << 2) | 0;
            $158 = $call_i1_i455;
            $stack_sroa_66_0_load1229 = $stack_sroa_66;
            if (($stack_sroa_66_0_load1229 | 0) != 0 & ($call_i1_i455 | 0) != 0) {
             _memcpy($call_i1_i455 | 0, $stack_sroa_0_21 | 0, $stack_sroa_66_0_load1229 << 2) | 0;
            }
            if (($stack_sroa_0_21 | 0) == 0) {
             $stack_sroa_0_22 = $158;
             $stack_sroa_146_30 = $stack_sroa_146_29;
            } else {
             _free($stack_sroa_0_21);
             $stack_sroa_0_22 = $158;
             $stack_sroa_146_30 = $stack_sroa_146_29;
            }
           } else {
            $stack_sroa_0_22 = $stack_sroa_0_21;
            $stack_sroa_146_30 = $stack_sroa_146_28;
           }
           $stack_sroa_66 = $sub262_i;
           $head_1_i = 0;
           $stack_sroa_0_23 = $stack_sroa_0_22;
           $stack_sroa_146_31 = $stack_sroa_146_30;
          } else {
           $head_1_i = $inc249_i;
           $stack_sroa_0_23 = $stack_sroa_0_21;
           $stack_sroa_146_31 = $stack_sroa_146_28;
          }
          $162 = (HEAP32[$spans_i >> 2] | 0) + ($153 << 3) + 4 | 0;
          $dir267_0324_i = 0;
          $stack_sroa_0_24 = $stack_sroa_0_23;
          $stack_sroa_146_32 = $stack_sroa_146_31;
          while (1) {
           $and_i226_i = (HEAP32[$162 >> 2] & 16777215) >>> (($dir267_0324_i * 6 | 0) >>> 0) & 63;
           if (($and_i226_i | 0) == 63) {
            $stack_sroa_0_28 = $stack_sroa_0_24;
            $stack_sroa_146_39 = $stack_sroa_146_32;
           } else {
            $add277_i = (HEAP32[11520 + ($dir267_0324_i << 2) >> 2] | 0) + $151 | 0;
            $add280_i = (HEAP32[11504 + ($dir267_0324_i << 2) >> 2] | 0) + $152 | 0;
            if (($add280_i | 0) < ($67 | 0) & ((($add277_i | 0) >= ($66 | 0) | ($add277_i | 0) < ($64 | 0) | ($add280_i | 0) < ($65 | 0)) ^ 1)) {
             $arrayidx306_i = $47 + ($add277_i - $64 + (Math_imul($add280_i - $65 | 0, $sub245) | 0) << 1) | 0;
             if ((HEAP16[$arrayidx306_i >> 1] | 0) == -1) {
              $add316_i = $add277_i + $8 + (Math_imul(HEAP32[$width42_i >> 2] | 0, $add280_i + $8 | 0) | 0) | 0;
              $add322_i = (HEAP32[(HEAP32[$cells_i >> 2] | 0) + ($add316_i << 2) >> 2] & 16777215) + $and_i226_i | 0;
              HEAP16[$arrayidx306_i >> 1] = HEAP16[(HEAP32[$spans_i >> 2] | 0) + ($add322_i << 3) >> 1] | 0;
              $stack_sroa_66_0_load1219 = $stack_sroa_66;
              $add_i211_i = $stack_sroa_66_0_load1219 + 1 | 0;
              if (($stack_sroa_146_32 | 0) < ($add_i211_i | 0)) {
               if (($stack_sroa_146_32 | 0) == 0) {
                $stack_sroa_146_33 = $add_i211_i;
               } else {
                $171 = $stack_sroa_146_32;
                while (1) {
                 $mul_i479 = $171 << 1;
                 if (($mul_i479 | 0) < ($add_i211_i | 0)) {
                  $171 = $mul_i479;
                 } else {
                  $stack_sroa_146_33 = $mul_i479;
                  break;
                 }
                }
               }
               $call_i1_i485 = _malloc($stack_sroa_146_33 << 2) | 0;
               $172 = $call_i1_i485;
               $stack_sroa_66_0_load1213 = $stack_sroa_66;
               if (($stack_sroa_66_0_load1213 | 0) != 0 & ($call_i1_i485 | 0) != 0) {
                _memcpy($call_i1_i485 | 0, $stack_sroa_0_24 | 0, $stack_sroa_66_0_load1213 << 2) | 0;
               }
               if (($stack_sroa_0_24 | 0) == 0) {
                $stack_sroa_0_25 = $172;
                $stack_sroa_146_34 = $stack_sroa_146_33;
               } else {
                _free($stack_sroa_0_24);
                $stack_sroa_0_25 = $172;
                $stack_sroa_146_34 = $stack_sroa_146_33;
               }
              } else {
               $stack_sroa_0_25 = $stack_sroa_0_24;
               $stack_sroa_146_34 = $stack_sroa_146_32;
              }
              $stack_sroa_66 = $add_i211_i;
              HEAP32[$stack_sroa_0_25 + ($stack_sroa_66_0_load1219 << 2) >> 2] = $add277_i;
              $stack_sroa_66_0_load1211 = $stack_sroa_66;
              $add_i204_i = $stack_sroa_66_0_load1211 + 1 | 0;
              if (($stack_sroa_146_34 | 0) < ($add_i204_i | 0)) {
               if (($stack_sroa_146_34 | 0) == 0) {
                $stack_sroa_146_35 = $add_i204_i;
               } else {
                $175 = $stack_sroa_146_34;
                while (1) {
                 $mul_i509 = $175 << 1;
                 if (($mul_i509 | 0) < ($add_i204_i | 0)) {
                  $175 = $mul_i509;
                 } else {
                  $stack_sroa_146_35 = $mul_i509;
                  break;
                 }
                }
               }
               $call_i1_i515 = _malloc($stack_sroa_146_35 << 2) | 0;
               $176 = $call_i1_i515;
               $stack_sroa_66_0_load1224 = $stack_sroa_66;
               if (($stack_sroa_66_0_load1224 | 0) != 0 & ($call_i1_i515 | 0) != 0) {
                _memcpy($call_i1_i515 | 0, $stack_sroa_0_25 | 0, $stack_sroa_66_0_load1224 << 2) | 0;
               }
               if (($stack_sroa_0_25 | 0) == 0) {
                $stack_sroa_0_26 = $176;
                $stack_sroa_146_36 = $stack_sroa_146_35;
               } else {
                _free($stack_sroa_0_25);
                $stack_sroa_0_26 = $176;
                $stack_sroa_146_36 = $stack_sroa_146_35;
               }
              } else {
               $stack_sroa_0_26 = $stack_sroa_0_25;
               $stack_sroa_146_36 = $stack_sroa_146_34;
              }
              $stack_sroa_66 = $add_i204_i;
              HEAP32[$stack_sroa_0_26 + ($stack_sroa_66_0_load1211 << 2) >> 2] = $add280_i;
              $stack_sroa_66_0_load1209 = $stack_sroa_66;
              $add_i_i = $stack_sroa_66_0_load1209 + 1 | 0;
              if (($stack_sroa_146_36 | 0) < ($add_i_i | 0)) {
               if (($stack_sroa_146_36 | 0) == 0) {
                $stack_sroa_146_37 = $add_i_i;
               } else {
                $179 = $stack_sroa_146_36;
                while (1) {
                 $mul_i539 = $179 << 1;
                 if (($mul_i539 | 0) < ($add_i_i | 0)) {
                  $179 = $mul_i539;
                 } else {
                  $stack_sroa_146_37 = $mul_i539;
                  break;
                 }
                }
               }
               $call_i1_i545 = _malloc($stack_sroa_146_37 << 2) | 0;
               $180 = $call_i1_i545;
               $stack_sroa_66_0_load1240 = $stack_sroa_66;
               if (($stack_sroa_66_0_load1240 | 0) != 0 & ($call_i1_i545 | 0) != 0) {
                _memcpy($call_i1_i545 | 0, $stack_sroa_0_26 | 0, $stack_sroa_66_0_load1240 << 2) | 0;
               }
               if (($stack_sroa_0_26 | 0) == 0) {
                $stack_sroa_0_27 = $180;
                $stack_sroa_146_38 = $stack_sroa_146_37;
               } else {
                _free($stack_sroa_0_26);
                $stack_sroa_0_27 = $180;
                $stack_sroa_146_38 = $stack_sroa_146_37;
               }
              } else {
               $stack_sroa_0_27 = $stack_sroa_0_26;
               $stack_sroa_146_38 = $stack_sroa_146_36;
              }
              $stack_sroa_66 = $add_i_i;
              HEAP32[$stack_sroa_0_27 + ($stack_sroa_66_0_load1209 << 2) >> 2] = $add322_i;
              $stack_sroa_0_28 = $stack_sroa_0_27;
              $stack_sroa_146_39 = $stack_sroa_146_38;
             } else {
              $stack_sroa_0_28 = $stack_sroa_0_24;
              $stack_sroa_146_39 = $stack_sroa_146_32;
             }
            } else {
             $stack_sroa_0_28 = $stack_sroa_0_24;
             $stack_sroa_146_39 = $stack_sroa_146_32;
            }
           }
           $dir267_0324_i = $dir267_0324_i + 1 | 0;
           if (($dir267_0324_i | 0) >= 4) {
            break;
           } else {
            $stack_sroa_0_24 = $stack_sroa_0_28;
            $stack_sroa_146_32 = $stack_sroa_146_39;
           }
          }
          $stack_sroa_66_0_load1225 = $stack_sroa_66;
          $mul233_i = $head_1_i * 3 | 0;
          if (($mul233_i | 0) < ($stack_sroa_66_0_load1225 | 0)) {
           $150 = $stack_sroa_66_0_load1225;
           $head_0326_i = $head_1_i;
           $mul233327_i = $mul233_i;
           $stack_sroa_0_21 = $stack_sroa_0_28;
           $stack_sroa_146_28 = $stack_sroa_146_39;
          } else {
           $stack_sroa_0_29 = $stack_sroa_0_28;
           $stack_sroa_146_40 = $stack_sroa_146_39;
           break;
          }
         }
        } else {
         $stack_sroa_0_29 = $stack_sroa_0_20;
         $stack_sroa_146_40 = $stack_sroa_146_27;
        }
        if ($cmp361_i) {
         $i_0260_i = 0;
         do {
          $mul_i312 = $i_0260_i * 3 | 0;
          HEAPF32[$verts + ($mul_i312 << 2) >> 2] = +HEAPF32[$24 + ($mul_i312 << 2) >> 2];
          $arrayidx2_sum_i = $mul_i312 + 1 | 0;
          HEAPF32[$verts + ($arrayidx2_sum_i << 2) >> 2] = +HEAPF32[$24 + ($arrayidx2_sum_i << 2) >> 2];
          $arrayidx2_sum185_i = $mul_i312 + 2 | 0;
          HEAPF32[$verts + ($arrayidx2_sum185_i << 2) >> 2] = +HEAPF32[$24 + ($arrayidx2_sum185_i << 2) >> 2];
          $i_0260_i = $i_0260_i + 1 | 0;
         } while (($i_0260_i | 0) < ($npoly_0_lcssa | 0));
         $187 = +HEAPF32[$cs3_i573 >> 2];
         $div_i316 = 1.0 / $187;
         if ($cmp4_i575) {
          $j_0255_i = $npoly_0_lcssa - 1 | 0;
          $i5_0256_i = 0;
          $nhull_0257_i = 0;
          $188 = $npoly_0_lcssa;
          while (1) {
           $mul9_i = $j_0255_i * 3 | 0;
           $arrayidx10_i318 = $24 + ($mul9_i << 2) | 0;
           $mul11_i = $i5_0256_i * 3 | 0;
           $arrayidx12_i = $24 + ($mul11_i << 2) | 0;
           if (+Math_abs(+(+HEAPF32[$arrayidx10_i318 >> 2] - +HEAPF32[$arrayidx12_i >> 2])) < 9.999999974752427e-7) {
            if (+HEAPF32[$24 + ($mul9_i + 2 << 2) >> 2] > +HEAPF32[$24 + ($mul11_i + 2 << 2) >> 2]) {
             $swapped_0_off0_i = 1;
             $arrayidx12170_i = $arrayidx10_i318;
             $arrayidx10171_i = $arrayidx12_i;
            } else {
             $swapped_0_off0_i = 0;
             $arrayidx12170_i = $arrayidx12_i;
             $arrayidx10171_i = $arrayidx10_i318;
            }
           } else {
            if (+HEAPF32[$arrayidx10_i318 >> 2] > +HEAPF32[$arrayidx12_i >> 2]) {
             $swapped_0_off0_i = 1;
             $arrayidx12170_i = $arrayidx10_i318;
             $arrayidx10171_i = $arrayidx12_i;
            } else {
             $swapped_0_off0_i = 0;
             $arrayidx12170_i = $arrayidx12_i;
             $arrayidx10171_i = $arrayidx10_i318;
            }
           }
           $sub30_i = +HEAPF32[$arrayidx12170_i >> 2] - +HEAPF32[$arrayidx10171_i >> 2];
           $arrayidx32_i = $arrayidx10171_i + 4 | 0;
           $sub33_i = +HEAPF32[$arrayidx12170_i + 4 >> 2] - +HEAPF32[$arrayidx32_i >> 2];
           $arrayidx35_i = $arrayidx10171_i + 8 | 0;
           $sub36_i = +HEAPF32[$arrayidx12170_i + 8 >> 2] - +HEAPF32[$arrayidx35_i >> 2];
           $add42_i = ~~+Math_floor(+Math_sqrt($sub30_i * $sub30_i + $sub36_i * $sub36_i) / $sampleDist) + 1 | 0;
           $_add42_i = ($add42_i | 0) > 31 ? 31 : $add42_i;
           $sub49__add42_i = ($_add42_i + $188 | 0) > 126 ? 126 - $188 | 0 : $_add42_i;
           if (($sub49__add42_i | 0) >= 0) {
            $conv55_i = +($sub49__add42_i | 0);
            $k_0223_i = 0;
            $201 = +HEAPF32[$ch279 >> 2];
            while (1) {
             $div56_i = +($k_0223_i | 0) / $conv55_i;
             $mul57_i = $k_0223_i * 3 | 0;
             $add61_i = +HEAPF32[$arrayidx10171_i >> 2] + $sub30_i * $div56_i;
             HEAPF32[$edge_i + ($mul57_i << 2) >> 2] = $add61_i;
             $add65_i = $sub33_i * $div56_i + +HEAPF32[$arrayidx32_i >> 2];
             $arrayidx66_i = $edge_i + ($mul57_i + 1 << 2) | 0;
             $add69_i = $sub36_i * $div56_i + +HEAPF32[$arrayidx35_i >> 2];
             HEAPF32[$edge_i + ($mul57_i + 2 << 2) >> 2] = $add69_i;
             $conv4_i395 = ~~+Math_floor($div_i316 * $add69_i + .009999999776482582);
             $sub_i397 = ~~+Math_floor($div_i316 * $add61_i + .009999999776482582) - $64 | 0;
             if (($sub_i397 | 0) < 0) {
              $cond5_i_i403 = 0;
             } else {
              $cond5_i_i403 = ($sub_i397 | 0) > ($sub245 | 0) ? $sub245 : $sub_i397;
             }
             $sub6_i405 = $conv4_i395 - $65 | 0;
             if (($sub6_i405 | 0) < 0) {
              $cond5_i6_i412 = 0;
             } else {
              $cond5_i6_i412 = ($sub6_i405 | 0) > ($sub257 | 0) ? $sub257 : $sub6_i405;
             }
             $arrayidx_i416 = $47 + ((Math_imul($cond5_i6_i412, $sub245) | 0) + $cond5_i_i403 << 1) | 0;
             $205 = HEAP16[$arrayidx_i416 >> 1] | 0;
             if ($205 << 16 >> 16 == -1) {
              $i_08_i421 = 0;
              $dmin_09_i420 = 3.4028234663852886e+38;
              $h_010_i419 = -1;
              while (1) {
               $mul13_i422 = $i_08_i421 << 1;
               $add16_i424 = (HEAP32[11352 + ($mul13_i422 << 2) >> 2] | 0) + $cond5_i_i403 | 0;
               $add20_i427 = (HEAP32[11352 + (($mul13_i422 | 1) << 2) >> 2] | 0) + $cond5_i6_i412 | 0;
               if (($add20_i427 | $add16_i424 | 0) > -1 & ($add16_i424 | 0) < ($sub245 | 0) & ($add20_i427 | 0) < ($sub257 | 0)) {
                $arrayidx34_i435 = $47 + ((Math_imul($add20_i427, $sub245) | 0) + $add16_i424 << 1) | 0;
                $210 = HEAP16[$arrayidx34_i435 >> 1] | 0;
                if ($210 << 16 >> 16 == -1) {
                 $h_1_i446 = $h_010_i419;
                 $dmin_1_i445 = $dmin_09_i420;
                } else {
                 $call43_i454 = +Math_abs(+($201 * +($210 & 65535 | 0) - $add65_i));
                 if ($call43_i454 < $dmin_09_i420) {
                  $h_1_i446 = $210;
                  $dmin_1_i445 = $call43_i454;
                 } else {
                  $h_1_i446 = $h_010_i419;
                  $dmin_1_i445 = $dmin_09_i420;
                 }
                }
               } else {
                $h_1_i446 = $h_010_i419;
                $dmin_1_i445 = $dmin_09_i420;
               }
               $inc_i447 = $i_08_i421 + 1 | 0;
               if (($inc_i447 | 0) < 8) {
                $i_08_i421 = $inc_i447;
                $dmin_09_i420 = $dmin_1_i445;
                $h_010_i419 = $h_1_i446;
               } else {
                $h_2_i450 = $h_1_i446;
                break;
               }
              }
             } else {
              $h_2_i450 = $205;
             }
             $201 = +HEAPF32[$ch279 >> 2];
             HEAPF32[$arrayidx66_i >> 2] = $201 * +($h_2_i450 & 65535 | 0);
             if (($k_0223_i | 0) >= ($sub49__add42_i | 0)) {
              break;
             } else {
              $k_0223_i = $k_0223_i + 1 | 0;
             }
            }
           }
           _memset($57 | 0, 0, 128) | 0;
           HEAP32[$arrayinit_element_i >> 2] = $sub49__add42_i;
           $k83_0_ph252_i = 0;
           $nidx_0_ph253_i = 2;
           L325 : while (1) {
            $arrayidx88_i = $idx_i + ($k83_0_ph252_i << 2) | 0;
            $add89_i = $k83_0_ph252_i + 1 | 0;
            $arrayidx90_i = $idx_i + ($add89_i << 2) | 0;
            $nidx_0237_i = $nidx_0_ph253_i;
            $212 = HEAP32[$arrayidx90_i >> 2] | 0;
            while (1) {
             $213 = HEAP32[$arrayidx88_i >> 2] | 0;
             $mul91_i = $213 * 3 | 0;
             $mul93_i = $212 * 3 | 0;
             $m_0224_i = $213 + 1 | 0;
             if (($m_0224_i | 0) >= ($212 | 0)) {
              break;
             }
             $arrayidx92_val_i = +HEAPF32[$edge_i + ($mul91_i << 2) >> 2];
             $arrayidx92_idx_val_i = +HEAPF32[$edge_i + ($mul91_i + 1 << 2) >> 2];
             $arrayidx92_idx5_val_i = +HEAPF32[$edge_i + ($mul91_i + 2 << 2) >> 2];
             $sub_i35_i = +HEAPF32[$edge_i + ($mul93_i << 2) >> 2] - $arrayidx92_val_i;
             $sub4_i_i = +HEAPF32[$edge_i + ($mul93_i + 1 << 2) >> 2] - $arrayidx92_idx_val_i;
             $sub7_i_i = +HEAPF32[$edge_i + ($mul93_i + 2 << 2) >> 2] - $arrayidx92_idx5_val_i;
             $add19_i_i = $sub_i35_i * $sub_i35_i + $sub4_i_i * $sub4_i_i + $sub7_i_i * $sub7_i_i;
             $cmp_i38_i = $add19_i_i > 0.0;
             $maxd_0226_i = 0.0;
             $maxi_0227_i = -1;
             $m_0228_i = $m_0224_i;
             do {
              $mul99_i = $m_0228_i * 3 | 0;
              $arrayidx100_val_i = +HEAPF32[$edge_i + ($mul99_i << 2) >> 2];
              $arrayidx100_idx_val_i = +HEAPF32[$edge_i + ($mul99_i + 1 << 2) >> 2];
              $arrayidx100_idx4_val_i = +HEAPF32[$edge_i + ($mul99_i + 2 << 2) >> 2];
              $add24_i_i = $sub_i35_i * ($arrayidx100_val_i - $arrayidx92_val_i) + $sub4_i_i * ($arrayidx100_idx_val_i - $arrayidx92_idx_val_i) + $sub7_i_i * ($arrayidx100_idx4_val_i - $arrayidx92_idx5_val_i);
              if ($cmp_i38_i) {
               $t_0_i_i = $add24_i_i / $add19_i_i;
              } else {
               $t_0_i_i = $add24_i_i;
              }
              if ($t_0_i_i < 0.0) {
               $t_1_i_i = 0.0;
              } else {
               if ($t_0_i_i > 1.0) {
                $t_1_i_i = 1.0;
               } else {
                $t_1_i_i = $t_0_i_i;
               }
              }
              $sub35_i_i = $arrayidx92_val_i + $sub_i35_i * $t_1_i_i - $arrayidx100_val_i;
              $sub40_i_i = $arrayidx92_idx_val_i + $sub4_i_i * $t_1_i_i - $arrayidx100_idx_val_i;
              $sub45_i_i = $arrayidx92_idx5_val_i + $sub7_i_i * $t_1_i_i - $arrayidx100_idx4_val_i;
              $add50_i_i = $sub45_i_i * $sub45_i_i + ($sub35_i_i * $sub35_i_i + $sub40_i_i * $sub40_i_i);
              $cmp102_i = $add50_i_i > $maxd_0226_i;
              $maxd_0226_i = $cmp102_i ? $add50_i_i : $maxd_0226_i;
              $maxi_0227_i = $cmp102_i ? $m_0228_i : $maxi_0227_i;
              $m_0228_i = $m_0228_i + 1 | 0;
             } while (($m_0228_i | 0) < ($212 | 0));
             if (!(($maxi_0227_i | 0) != -1 & $maxd_0226_i > $mul_i45_i)) {
              break;
             }
             if (($nidx_0237_i | 0) > ($k83_0_ph252_i | 0)) {
              $m112_0232_i = $nidx_0237_i;
             } else {
              label = 237;
              break L325;
             }
             do {
              $m112_0232_i$looptemp = $m112_0232_i;
              $m112_0232_i = $m112_0232_i - 1 | 0;
              HEAP32[$idx_i + ($m112_0232_i$looptemp << 2) >> 2] = HEAP32[$idx_i + ($m112_0232_i << 2) >> 2];
             } while (($m112_0232_i | 0) > ($k83_0_ph252_i | 0));
             HEAP32[$arrayidx90_i >> 2] = $maxi_0227_i;
             $nidx_0237_i = $nidx_0237_i + 1 | 0;
             $212 = $maxi_0227_i;
            }
            $sub85235_i = $nidx_0237_i - 1 | 0;
            if (($add89_i | 0) < ($sub85235_i | 0)) {
             $k83_0_ph252_i = $add89_i;
             $nidx_0_ph253_i = $nidx_0237_i;
            } else {
             $nidx_0_lcssa_i = $nidx_0237_i;
             $sub85_lcssa_i = $sub85235_i;
             break;
            }
           }
           if ((label | 0) == 237) {
            label = 0;
            HEAP32[$arrayidx90_i >> 2] = $maxi_0227_i;
            $nidx_0_lcssa_i = $nidx_0237_i + 1 | 0;
            $sub85_lcssa_i = $nidx_0237_i;
           }
           $inc128_i = $nhull_0257_i + 1 | 0;
           HEAP32[$hull_i + ($nhull_0257_i << 2) >> 2] = $j_0255_i;
           if ($swapped_0_off0_i) {
            $sub132_i = $nidx_0_lcssa_i - 2 | 0;
            if (($sub132_i | 0) > 0) {
             $k131_0246_i = $sub132_i;
             $nhull_1247_i = $inc128_i;
             $216 = $188;
             while (1) {
              $mul136_i = $216 * 3 | 0;
              $mul139_i = (HEAP32[$idx_i + ($k131_0246_i << 2) >> 2] | 0) * 3 | 0;
              HEAPF32[$verts + ($mul136_i << 2) >> 2] = +HEAPF32[$edge_i + ($mul139_i << 2) >> 2];
              HEAPF32[$verts + ($mul136_i + 1 << 2) >> 2] = +HEAPF32[$edge_i + ($mul139_i + 1 << 2) >> 2];
              HEAPF32[$verts + ($mul136_i + 2 << 2) >> 2] = +HEAPF32[$edge_i + ($mul139_i + 2 << 2) >> 2];
              HEAP32[$hull_i + ($nhull_1247_i << 2) >> 2] = $216;
              $k131_0246_i = $k131_0246_i - 1 | 0;
              if (($k131_0246_i | 0) <= 0) {
               break;
              } else {
               $nhull_1247_i = $nhull_1247_i + 1 | 0;
               $216 = $216 + 1 | 0;
              }
             }
             $nhull_3_i = $nhull_0257_i - 1 + $nidx_0_lcssa_i | 0;
             $231 = $sub132_i + $188 | 0;
            } else {
             $nhull_3_i = $inc128_i;
             $231 = $188;
            }
           } else {
            if (($sub85_lcssa_i | 0) > 1) {
             $215 = $188 - 1 | 0;
             $k148_0241_i = 1;
             $nhull_2242_i = $inc128_i;
             $221 = $188;
             while (1) {
              $mul153_i = $221 * 3 | 0;
              $mul156_i = (HEAP32[$idx_i + ($k148_0241_i << 2) >> 2] | 0) * 3 | 0;
              HEAPF32[$verts + ($mul153_i << 2) >> 2] = +HEAPF32[$edge_i + ($mul156_i << 2) >> 2];
              HEAPF32[$verts + ($mul153_i + 1 << 2) >> 2] = +HEAPF32[$edge_i + ($mul156_i + 1 << 2) >> 2];
              HEAPF32[$verts + ($mul153_i + 2 << 2) >> 2] = +HEAPF32[$edge_i + ($mul156_i + 2 << 2) >> 2];
              HEAP32[$hull_i + ($nhull_2242_i << 2) >> 2] = $221;
              $k148_0241_i = $k148_0241_i + 1 | 0;
              if (($k148_0241_i | 0) >= ($sub85_lcssa_i | 0)) {
               break;
              } else {
               $nhull_2242_i = $nhull_2242_i + 1 | 0;
               $221 = $221 + 1 | 0;
              }
             }
             $nhull_3_i = $sub85_lcssa_i + $nhull_0257_i | 0;
             $231 = $215 + $sub85_lcssa_i | 0;
            } else {
             $nhull_3_i = $inc128_i;
             $231 = $188;
            }
           }
           $inc166_i = $i5_0256_i + 1 | 0;
           if (($inc166_i | 0) < ($npoly_0_lcssa | 0)) {
            $j_0255_i = $i5_0256_i;
            $i5_0256_i = $inc166_i;
            $nhull_0257_i = $nhull_3_i;
            $188 = $231;
           } else {
            $nhull_4_i = $nhull_3_i;
            $233 = $231;
            $232 = $187;
            $div_i316577 = $div_i316;
            break;
           }
          }
         } else {
          $nhull_4_i = 0;
          $233 = $npoly_0_lcssa;
          $232 = $187;
          $div_i316577 = $div_i316;
         }
        } else {
         $183 = +HEAPF32[$cs3_i573 >> 2];
         $nhull_4_i = 0;
         $233 = $npoly_0_lcssa;
         $232 = $183;
         $div_i316577 = 1.0 / $183;
        }
        $234 = HEAP32[$m_cap_i >> 2] | 0;
        if (($234 | 0) < 0) {
         $235 = $234;
         while (1) {
          $mul_i569 = $235 << 1;
          if (($235 | 0) < 0) {
           $235 = $mul_i569;
          } else {
           break;
          }
         }
         HEAP32[$m_cap_i >> 2] = $mul_i569;
         $call_i1_i575 = _malloc($235 << 3) | 0;
         $237 = HEAP32[$m_size_i >> 2] | 0;
         $238 = HEAP32[$m_data_i >> 2] | 0;
         if (($237 | 0) != 0 & ($call_i1_i575 | 0) != 0) {
          _memcpy($call_i1_i575 | 0, $238 | 0, $237 << 2) | 0;
         }
         if (($238 | 0) != 0) {
          _free($238);
         }
         HEAP32[$m_data_i >> 2] = $call_i1_i575;
        }
        HEAP32[$m_size_i >> 2] = 0;
        $241 = HEAP32[$m_cap_i210 >> 2] | 0;
        if (($241 | 0) < 0) {
         $242 = $241;
         while (1) {
          $mul_i599 = $242 << 1;
          if (($242 | 0) < 0) {
           $242 = $mul_i599;
          } else {
           break;
          }
         }
         HEAP32[$m_cap_i210 >> 2] = $mul_i599;
         $call_i1_i605 = _malloc($242 << 3) | 0;
         $244 = HEAP32[$m_size_i209 >> 2] | 0;
         if (($244 | 0) != 0 & ($call_i1_i605 | 0) != 0) {
          _memcpy($call_i1_i605 | 0, HEAP32[$m_data_i208 >> 2] | 0, $244 << 2) | 0;
         }
         $247 = HEAP32[$m_data_i208 >> 2] | 0;
         if (($247 | 0) != 0) {
          _free($247);
         }
         HEAP32[$m_data_i208 >> 2] = $call_i1_i605;
        }
        HEAP32[$m_size_i209 >> 2] = 0;
        __ZL12delaunayHullP9rcContextiPKfiPKiR10rcIntArrayS6_($ctx, $233, $arraydecay264, $nhull_4_i, $arraydecay_i, $tris, $edges);
        $249 = HEAP32[$m_size_i209 >> 2] | 0;
        if (($249 | 0) == 0) {
         __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
         STACKTOP = tempVarArgs;
         if (($233 | 0) > 2) {
          $i172_0188_i = 2;
          while (1) {
           $250 = HEAP32[$m_size_i209 >> 2] | 0;
           $add_i119_i = $250 + 1 | 0;
           $251 = HEAP32[$m_cap_i210 >> 2] | 0;
           if (($251 | 0) < ($add_i119_i | 0)) {
            if (($251 | 0) == 0) {
             HEAP32[$m_cap_i210 >> 2] = $add_i119_i;
             $_lcssa_i633 = $add_i119_i;
            } else {
             $252 = $251;
             do {
              $252 = $252 << 1;
             } while (($252 | 0) < ($add_i119_i | 0));
             HEAP32[$m_cap_i210 >> 2] = $252;
             $_lcssa_i633 = $252;
            }
            $call_i1_i635 = _malloc($_lcssa_i633 << 2) | 0;
            $253 = $call_i1_i635;
            $254 = HEAP32[$m_size_i209 >> 2] | 0;
            if (($254 | 0) != 0 & ($call_i1_i635 | 0) != 0) {
             _memcpy($call_i1_i635 | 0, HEAP32[$m_data_i208 >> 2] | 0, $254 << 2) | 0;
            }
            $257 = HEAP32[$m_data_i208 >> 2] | 0;
            if (($257 | 0) != 0) {
             _free($257);
            }
            HEAP32[$m_data_i208 >> 2] = $253;
            $259 = $253;
           } else {
            $259 = HEAP32[$m_data_i208 >> 2] | 0;
           }
           HEAP32[$m_size_i209 >> 2] = $add_i119_i;
           HEAP32[$259 + ($250 << 2) >> 2] = 0;
           $260 = HEAP32[$m_size_i209 >> 2] | 0;
           $add_i124_i = $260 + 1 | 0;
           $261 = HEAP32[$m_cap_i210 >> 2] | 0;
           if (($261 | 0) < ($add_i124_i | 0)) {
            if (($261 | 0) == 0) {
             HEAP32[$m_cap_i210 >> 2] = $add_i124_i;
             $_lcssa_i663 = $add_i124_i;
            } else {
             $262 = $261;
             do {
              $262 = $262 << 1;
             } while (($262 | 0) < ($add_i124_i | 0));
             HEAP32[$m_cap_i210 >> 2] = $262;
             $_lcssa_i663 = $262;
            }
            $call_i1_i665 = _malloc($_lcssa_i663 << 2) | 0;
            $263 = $call_i1_i665;
            $264 = HEAP32[$m_size_i209 >> 2] | 0;
            if (($264 | 0) != 0 & ($call_i1_i665 | 0) != 0) {
             _memcpy($call_i1_i665 | 0, HEAP32[$m_data_i208 >> 2] | 0, $264 << 2) | 0;
            }
            $267 = HEAP32[$m_data_i208 >> 2] | 0;
            if (($267 | 0) != 0) {
             _free($267);
            }
            HEAP32[$m_data_i208 >> 2] = $263;
            $269 = $263;
           } else {
            $269 = $259;
           }
           HEAP32[$m_size_i209 >> 2] = $add_i124_i;
           HEAP32[$269 + ($260 << 2) >> 2] = $i172_0188_i - 1;
           $270 = HEAP32[$m_size_i209 >> 2] | 0;
           $add_i129_i = $270 + 1 | 0;
           $271 = HEAP32[$m_cap_i210 >> 2] | 0;
           if (($271 | 0) < ($add_i129_i | 0)) {
            if (($271 | 0) == 0) {
             HEAP32[$m_cap_i210 >> 2] = $add_i129_i;
             $_lcssa_i693 = $add_i129_i;
            } else {
             $272 = $271;
             do {
              $272 = $272 << 1;
             } while (($272 | 0) < ($add_i129_i | 0));
             HEAP32[$m_cap_i210 >> 2] = $272;
             $_lcssa_i693 = $272;
            }
            $call_i1_i695 = _malloc($_lcssa_i693 << 2) | 0;
            $273 = $call_i1_i695;
            $274 = HEAP32[$m_size_i209 >> 2] | 0;
            if (($274 | 0) != 0 & ($call_i1_i695 | 0) != 0) {
             _memcpy($call_i1_i695 | 0, HEAP32[$m_data_i208 >> 2] | 0, $274 << 2) | 0;
            }
            $277 = HEAP32[$m_data_i208 >> 2] | 0;
            if (($277 | 0) != 0) {
             _free($277);
            }
            HEAP32[$m_data_i208 >> 2] = $273;
            $279 = $273;
           } else {
            $279 = $269;
           }
           HEAP32[$m_size_i209 >> 2] = $add_i129_i;
           HEAP32[$279 + ($270 << 2) >> 2] = $i172_0188_i;
           $280 = HEAP32[$m_size_i209 >> 2] | 0;
           $add_i114_i = $280 + 1 | 0;
           $281 = HEAP32[$m_cap_i210 >> 2] | 0;
           if (($281 | 0) < ($add_i114_i | 0)) {
            if (($281 | 0) == 0) {
             HEAP32[$m_cap_i210 >> 2] = $add_i114_i;
             $_lcssa_i723 = $add_i114_i;
            } else {
             $282 = $281;
             do {
              $282 = $282 << 1;
             } while (($282 | 0) < ($add_i114_i | 0));
             HEAP32[$m_cap_i210 >> 2] = $282;
             $_lcssa_i723 = $282;
            }
            $call_i1_i725 = _malloc($_lcssa_i723 << 2) | 0;
            $283 = $call_i1_i725;
            $284 = HEAP32[$m_size_i209 >> 2] | 0;
            if (($284 | 0) != 0 & ($call_i1_i725 | 0) != 0) {
             _memcpy($call_i1_i725 | 0, HEAP32[$m_data_i208 >> 2] | 0, $284 << 2) | 0;
            }
            $287 = HEAP32[$m_data_i208 >> 2] | 0;
            if (($287 | 0) != 0) {
             _free($287);
            }
            HEAP32[$m_data_i208 >> 2] = $283;
            $289 = $283;
           } else {
            $289 = $279;
           }
           HEAP32[$m_size_i209 >> 2] = $add_i114_i;
           HEAP32[$289 + ($280 << 2) >> 2] = 0;
           $inc178_i = $i172_0188_i + 1 | 0;
           if (($inc178_i | 0) < ($233 | 0)) {
            $i172_0188_i = $inc178_i;
           } else {
            $364 = $233;
            $samples_sroa_0_15 = $samples_sroa_0_3;
            $samples_sroa_54_16 = $samples_sroa_54_0;
            break;
           }
          }
         } else {
          $364 = $233;
          $samples_sroa_0_15 = $samples_sroa_0_3;
          $samples_sroa_54_16 = $samples_sroa_54_0;
         }
        } else {
         if ($cmp4_i575) {
          $290 = +HEAPF32[$24 >> 2];
          $291 = +HEAPF32[$55 >> 2];
          $292 = +HEAPF32[$56 >> 2];
          if (($npoly_0_lcssa | 0) > 1) {
           $bmin_sroa_8_8_load169209_i = $292;
           $bmin_sroa_4_4_load168210_i = $291;
           $bmin_sroa_0_0_load167211_i = $290;
           $bmax_sroa_8_8_load166212_i = $292;
           $bmax_sroa_4_4_load165213_i = $291;
           $bmax_sroa_0_0_load164214_i = $290;
           $i185_0215_i = 1;
           while (1) {
            $mul190_i = $i185_0215_i * 3 | 0;
            $293 = +HEAPF32[$24 + ($mul190_i << 2) >> 2];
            $cond_i_i96_i = $bmin_sroa_0_0_load167211_i < $293 ? $bmin_sroa_0_0_load167211_i : $293;
            $294 = +HEAPF32[$24 + ($mul190_i + 1 << 2) >> 2];
            $cond_i11_i100_i = $bmin_sroa_4_4_load168210_i < $294 ? $bmin_sroa_4_4_load168210_i : $294;
            $295 = +HEAPF32[$24 + ($mul190_i + 2 << 2) >> 2];
            $cond_i9_i104_i = $bmin_sroa_8_8_load169209_i < $295 ? $bmin_sroa_8_8_load169209_i : $295;
            $cond_i_i91_i = $bmax_sroa_0_0_load164214_i > $293 ? $bmax_sroa_0_0_load164214_i : $293;
            $cond_i11_i_i = $bmax_sroa_4_4_load165213_i > $294 ? $bmax_sroa_4_4_load165213_i : $294;
            $cond_i9_i_i = $bmax_sroa_8_8_load166212_i > $295 ? $bmax_sroa_8_8_load166212_i : $295;
            $inc196_i = $i185_0215_i + 1 | 0;
            if (($inc196_i | 0) < ($npoly_0_lcssa | 0)) {
             $bmin_sroa_8_8_load169209_i = $cond_i9_i104_i;
             $bmin_sroa_4_4_load168210_i = $cond_i11_i100_i;
             $bmin_sroa_0_0_load167211_i = $cond_i_i96_i;
             $bmax_sroa_8_8_load166212_i = $cond_i9_i_i;
             $bmax_sroa_4_4_load165213_i = $cond_i11_i_i;
             $bmax_sroa_0_0_load164214_i = $cond_i_i91_i;
             $i185_0215_i = $inc196_i;
            } else {
             $bmin_sroa_8_8_load169_lcssa_i = $cond_i9_i104_i;
             $bmin_sroa_4_4_load168_lcssa_i = $cond_i11_i100_i;
             $bmin_sroa_0_0_load167_lcssa_i = $cond_i_i96_i;
             $bmax_sroa_8_8_load166_lcssa_i = $cond_i9_i_i;
             $bmax_sroa_4_4_load165_lcssa_i = $cond_i11_i_i;
             $bmax_sroa_0_0_load164_lcssa_i = $cond_i_i91_i;
             break;
            }
           }
          } else {
           $bmin_sroa_8_8_load169_lcssa_i = $292;
           $bmin_sroa_4_4_load168_lcssa_i = $291;
           $bmin_sroa_0_0_load167_lcssa_i = $290;
           $bmax_sroa_8_8_load166_lcssa_i = $292;
           $bmax_sroa_4_4_load165_lcssa_i = $291;
           $bmax_sroa_0_0_load164_lcssa_i = $290;
          }
          $conv201_i = ~~+Math_floor($bmin_sroa_0_0_load167_lcssa_i / $sampleDist);
          $conv205_i = ~~+Math_ceil($bmax_sroa_0_0_load164_lcssa_i / $sampleDist);
          $conv209_i = ~~+Math_floor($bmin_sroa_8_8_load169_lcssa_i / $sampleDist);
          $conv213_i = ~~+Math_ceil($bmax_sroa_8_8_load166_lcssa_i / $sampleDist);
          if (($samples_sroa_54_0 | 0) < 0) {
           $296 = $samples_sroa_54_0;
           while (1) {
            $mul_i749 = $296 << 1;
            if (($296 | 0) < 0) {
             $296 = $mul_i749;
            } else {
             break;
            }
           }
           $call_i1_i755 = _malloc($296 << 3) | 0;
           $297 = $call_i1_i755;
           $samples_sroa_27_0_load = $samples_sroa_27;
           if (($samples_sroa_27_0_load | 0) != 0 & ($call_i1_i755 | 0) != 0) {
            _memcpy($call_i1_i755 | 0, $samples_sroa_0_3 | 0, $samples_sroa_27_0_load << 2) | 0;
           }
           if (($samples_sroa_0_3 | 0) == 0) {
            $samples_sroa_0_4 = $297;
            $samples_sroa_54_1 = $mul_i749;
           } else {
            _free($samples_sroa_0_3);
            $samples_sroa_0_4 = $297;
            $samples_sroa_54_1 = $mul_i749;
           }
          } else {
           $samples_sroa_0_4 = $samples_sroa_0_3;
           $samples_sroa_54_1 = $samples_sroa_54_0;
          }
          $samples_sroa_27 = 0;
          L469 : do {
           if (($conv209_i | 0) < ($conv213_i | 0)) {
            $cmp218203_i = ($conv201_i | 0) < ($conv205_i | 0);
            $mul226_i = ($bmax_sroa_4_4_load165_lcssa_i + $bmin_sroa_4_4_load168_lcssa_i) * .5;
            $sub_i65_i = $npoly_0_lcssa - 1 | 0;
            $z_0206_i = $conv209_i;
            $samples_sroa_0_5 = $samples_sroa_0_4;
            $samples_sroa_54_2 = $samples_sroa_54_1;
            while (1) {
             if ($cmp218203_i) {
              $mul229_i = +($z_0206_i | 0) * $sampleDist;
              $add2_i = $div_i316577 * $mul229_i + .009999999776482582;
              $x_0204_i = $conv201_i;
              $samples_sroa_0_6 = $samples_sroa_0_5;
              $samples_sroa_54_3 = $samples_sroa_54_2;
              while (1) {
               $mul221_i324 = +($x_0204_i | 0) * $sampleDist;
               if ($cmp361_i) {
                $j_023_i_i = $sub_i65_i;
                $c_024_i_i = 0;
                $i_025_i_i = 0;
                $dmin_026_i_i = 3.4028234663852886e+38;
                while (1) {
                 $mul_i69_i = $i_025_i_i * 3 | 0;
                 $mul1_i71_i = $j_023_i_i * 3 | 0;
                 $300 = +HEAPF32[$24 + ($mul_i69_i + 2 << 2) >> 2];
                 $301 = +HEAPF32[$24 + ($mul1_i71_i + 2 << 2) >> 2];
                 $302 = +HEAPF32[$24 + ($mul1_i71_i << 2) >> 2];
                 $303 = +HEAPF32[$24 + ($mul_i69_i << 2) >> 2];
                 if ($300 > $mul229_i ^ $301 > $mul229_i) {
                  if ($mul221_i324 < $303 + ($mul229_i - $300) * ($302 - $303) / ($301 - $300)) {
                   $c_1_i_i = ($c_024_i_i | 0) == 0 | 0;
                  } else {
                   $c_1_i_i = $c_024_i_i;
                  }
                 } else {
                  $c_1_i_i = $c_024_i_i;
                 }
                 $sub_i_i81_i = $303 - $302;
                 $sub4_i_i_i = $300 - $301;
                 $add_i_i83_i = $sub4_i_i_i * $sub4_i_i_i + $sub_i_i81_i * $sub_i_i81_i;
                 $add14_i_i_i = ($mul229_i - $301) * $sub4_i_i_i + ($mul221_i324 - $302) * $sub_i_i81_i;
                 if ($add_i_i83_i > 0.0) {
                  $t_0_i_i_i = $add14_i_i_i / $add_i_i83_i;
                 } else {
                  $t_0_i_i_i = $add14_i_i_i;
                 }
                 if ($t_0_i_i_i < 0.0) {
                  $t_1_i_i_i = 0.0;
                 } else {
                  if ($t_0_i_i_i > 1.0) {
                   $t_1_i_i_i = 1.0;
                  } else {
                   $t_1_i_i_i = $t_0_i_i_i;
                  }
                 }
                 $sub25_i_i_i = $302 + $sub_i_i81_i * $t_1_i_i_i - $mul221_i324;
                 $sub30_i_i_i = $301 + $sub4_i_i_i * $t_1_i_i_i - $mul229_i;
                 $add33_i_i_i = $sub25_i_i_i * $sub25_i_i_i + $sub30_i_i_i * $sub30_i_i_i;
                 $dmin_026_i_i = $dmin_026_i_i < $add33_i_i_i ? $dmin_026_i_i : $add33_i_i_i;
                 $inc_i88_i = $i_025_i_i + 1 | 0;
                 if (($inc_i88_i | 0) >= ($npoly_0_lcssa | 0)) {
                  break;
                 } else {
                  $j_023_i_i = $i_025_i_i;
                  $c_024_i_i = $c_1_i_i;
                  $i_025_i_i = $inc_i88_i;
                 }
                }
                if (($c_1_i_i | 0) == 0) {
                 $cond_i_i325 = $dmin_026_i_i;
                } else {
                 $cond_i_i325 = -0.0 - $dmin_026_i_i;
                }
               } else {
                $cond_i_i325 = 3.4028234663852886e+38;
               }
               if ($cond_i_i325 > $div234_i) {
                $samples_sroa_0_11 = $samples_sroa_0_6;
                $samples_sroa_54_12 = $samples_sroa_54_3;
               } else {
                $samples_sroa_27_0_load1089 = $samples_sroa_27;
                $add_i60_i = $samples_sroa_27_0_load1089 + 1 | 0;
                if (($samples_sroa_54_3 | 0) < ($add_i60_i | 0)) {
                 if (($samples_sroa_54_3 | 0) == 0) {
                  $samples_sroa_54_4 = $add_i60_i;
                 } else {
                  $304 = $samples_sroa_54_3;
                  while (1) {
                   $mul_i779 = $304 << 1;
                   if (($mul_i779 | 0) < ($add_i60_i | 0)) {
                    $304 = $mul_i779;
                   } else {
                    $samples_sroa_54_4 = $mul_i779;
                    break;
                   }
                  }
                 }
                 $call_i1_i785 = _malloc($samples_sroa_54_4 << 2) | 0;
                 $305 = $call_i1_i785;
                 $samples_sroa_27_0_load1091 = $samples_sroa_27;
                 if (($samples_sroa_27_0_load1091 | 0) != 0 & ($call_i1_i785 | 0) != 0) {
                  _memcpy($call_i1_i785 | 0, $samples_sroa_0_6 | 0, $samples_sroa_27_0_load1091 << 2) | 0;
                 }
                 if (($samples_sroa_0_6 | 0) == 0) {
                  $samples_sroa_0_7 = $305;
                  $samples_sroa_54_5 = $samples_sroa_54_4;
                 } else {
                  _free($samples_sroa_0_6);
                  $samples_sroa_0_7 = $305;
                  $samples_sroa_54_5 = $samples_sroa_54_4;
                 }
                } else {
                 $samples_sroa_0_7 = $samples_sroa_0_6;
                 $samples_sroa_54_5 = $samples_sroa_54_3;
                }
                $samples_sroa_27 = $add_i60_i;
                HEAP32[$samples_sroa_0_7 + ($samples_sroa_27_0_load1089 << 2) >> 2] = $x_0204_i;
                $308 = +HEAPF32[$ch279 >> 2];
                $conv4_i = ~~+Math_floor($add2_i);
                $sub_i365 = ~~+Math_floor($div_i316577 * $mul221_i324 + .009999999776482582) - $64 | 0;
                if (($sub_i365 | 0) < 0) {
                 $cond5_i_i = 0;
                } else {
                 $cond5_i_i = ($sub_i365 | 0) > ($sub245 | 0) ? $sub245 : $sub_i365;
                }
                $sub6_i = $conv4_i - $65 | 0;
                if (($sub6_i | 0) < 0) {
                 $cond5_i6_i = 0;
                } else {
                 $cond5_i6_i = ($sub6_i | 0) > ($sub257 | 0) ? $sub257 : $sub6_i;
                }
                $arrayidx_i373 = $47 + ((Math_imul($cond5_i6_i, $sub245) | 0) + $cond5_i_i << 1) | 0;
                $309 = HEAP16[$arrayidx_i373 >> 1] | 0;
                if ($309 << 16 >> 16 == -1) {
                 $i_08_i = 0;
                 $dmin_09_i = 3.4028234663852886e+38;
                 $h_010_i = -1;
                 while (1) {
                  $mul13_i = $i_08_i << 1;
                  $add16_i = (HEAP32[11352 + ($mul13_i << 2) >> 2] | 0) + $cond5_i_i | 0;
                  $add20_i = (HEAP32[11352 + (($mul13_i | 1) << 2) >> 2] | 0) + $cond5_i6_i | 0;
                  if (($add20_i | $add16_i | 0) > -1 & ($add16_i | 0) < ($sub245 | 0) & ($add20_i | 0) < ($sub257 | 0)) {
                   $arrayidx34_i378 = $47 + ((Math_imul($add20_i, $sub245) | 0) + $add16_i << 1) | 0;
                   $314 = HEAP16[$arrayidx34_i378 >> 1] | 0;
                   if ($314 << 16 >> 16 == -1) {
                    $h_1_i = $h_010_i;
                    $dmin_1_i = $dmin_09_i;
                   } else {
                    $call43_i384 = +Math_abs(+($308 * +($314 & 65535 | 0) - $mul226_i));
                    if ($call43_i384 < $dmin_09_i) {
                     $h_1_i = $314;
                     $dmin_1_i = $call43_i384;
                    } else {
                     $h_1_i = $h_010_i;
                     $dmin_1_i = $dmin_09_i;
                    }
                   }
                  } else {
                   $h_1_i = $h_010_i;
                   $dmin_1_i = $dmin_09_i;
                  }
                  $inc_i380 = $i_08_i + 1 | 0;
                  if (($inc_i380 | 0) < 8) {
                   $i_08_i = $inc_i380;
                   $dmin_09_i = $dmin_1_i;
                   $h_010_i = $h_1_i;
                  } else {
                   $h_2_i = $h_1_i;
                   break;
                  }
                 }
                } else {
                 $h_2_i = $309;
                }
                $samples_sroa_27_0_load1095 = $samples_sroa_27;
                $add_i47_i = $samples_sroa_27_0_load1095 + 1 | 0;
                if (($samples_sroa_54_5 | 0) < ($add_i47_i | 0)) {
                 if (($samples_sroa_54_5 | 0) == 0) {
                  $samples_sroa_54_6 = $add_i47_i;
                 } else {
                  $315 = $samples_sroa_54_5;
                  while (1) {
                   $mul_i809 = $315 << 1;
                   if (($mul_i809 | 0) < ($add_i47_i | 0)) {
                    $315 = $mul_i809;
                   } else {
                    $samples_sroa_54_6 = $mul_i809;
                    break;
                   }
                  }
                 }
                 $call_i1_i815 = _malloc($samples_sroa_54_6 << 2) | 0;
                 $316 = $call_i1_i815;
                 $samples_sroa_27_0_load1097 = $samples_sroa_27;
                 if (($samples_sroa_27_0_load1097 | 0) != 0 & ($call_i1_i815 | 0) != 0) {
                  _memcpy($call_i1_i815 | 0, $samples_sroa_0_7 | 0, $samples_sroa_27_0_load1097 << 2) | 0;
                 }
                 if (($samples_sroa_0_7 | 0) == 0) {
                  $samples_sroa_0_8 = $316;
                  $samples_sroa_54_7 = $samples_sroa_54_6;
                 } else {
                  _free($samples_sroa_0_7);
                  $samples_sroa_0_8 = $316;
                  $samples_sroa_54_7 = $samples_sroa_54_6;
                 }
                } else {
                 $samples_sroa_0_8 = $samples_sroa_0_7;
                 $samples_sroa_54_7 = $samples_sroa_54_5;
                }
                $samples_sroa_27 = $add_i47_i;
                HEAP32[$samples_sroa_0_8 + ($samples_sroa_27_0_load1095 << 2) >> 2] = $h_2_i & 65535;
                $samples_sroa_27_0_load1100 = $samples_sroa_27;
                $add_i41_i = $samples_sroa_27_0_load1100 + 1 | 0;
                if (($samples_sroa_54_7 | 0) < ($add_i41_i | 0)) {
                 if (($samples_sroa_54_7 | 0) == 0) {
                  $samples_sroa_54_8 = $add_i41_i;
                 } else {
                  $319 = $samples_sroa_54_7;
                  while (1) {
                   $mul_i839 = $319 << 1;
                   if (($mul_i839 | 0) < ($add_i41_i | 0)) {
                    $319 = $mul_i839;
                   } else {
                    $samples_sroa_54_8 = $mul_i839;
                    break;
                   }
                  }
                 }
                 $call_i1_i845 = _malloc($samples_sroa_54_8 << 2) | 0;
                 $320 = $call_i1_i845;
                 $samples_sroa_27_0_load1101 = $samples_sroa_27;
                 if (($samples_sroa_27_0_load1101 | 0) != 0 & ($call_i1_i845 | 0) != 0) {
                  _memcpy($call_i1_i845 | 0, $samples_sroa_0_8 | 0, $samples_sroa_27_0_load1101 << 2) | 0;
                 }
                 if (($samples_sroa_0_8 | 0) == 0) {
                  $samples_sroa_0_9 = $320;
                  $samples_sroa_54_9 = $samples_sroa_54_8;
                 } else {
                  _free($samples_sroa_0_8);
                  $samples_sroa_0_9 = $320;
                  $samples_sroa_54_9 = $samples_sroa_54_8;
                 }
                } else {
                 $samples_sroa_0_9 = $samples_sroa_0_8;
                 $samples_sroa_54_9 = $samples_sroa_54_7;
                }
                $samples_sroa_27 = $add_i41_i;
                HEAP32[$samples_sroa_0_9 + ($samples_sroa_27_0_load1100 << 2) >> 2] = $z_0206_i;
                $samples_sroa_27_0_load1098 = $samples_sroa_27;
                $add_i_i327 = $samples_sroa_27_0_load1098 + 1 | 0;
                if (($samples_sroa_54_9 | 0) < ($add_i_i327 | 0)) {
                 if (($samples_sroa_54_9 | 0) == 0) {
                  $samples_sroa_54_10 = $add_i_i327;
                 } else {
                  $323 = $samples_sroa_54_9;
                  while (1) {
                   $mul_i869 = $323 << 1;
                   if (($mul_i869 | 0) < ($add_i_i327 | 0)) {
                    $323 = $mul_i869;
                   } else {
                    $samples_sroa_54_10 = $mul_i869;
                    break;
                   }
                  }
                 }
                 $call_i1_i875 = _malloc($samples_sroa_54_10 << 2) | 0;
                 $324 = $call_i1_i875;
                 if (($samples_sroa_27_0_load1098 | 0) != 0 & ($call_i1_i875 | 0) != 0) {
                  _memcpy($call_i1_i875 | 0, $samples_sroa_0_9 | 0, $samples_sroa_27_0_load1098 << 2) | 0;
                 }
                 if (($samples_sroa_0_9 | 0) == 0) {
                  $samples_sroa_0_10 = $324;
                  $samples_sroa_54_11 = $samples_sroa_54_10;
                 } else {
                  _free($samples_sroa_0_9);
                  $samples_sroa_0_10 = $324;
                  $samples_sroa_54_11 = $samples_sroa_54_10;
                 }
                } else {
                 $samples_sroa_0_10 = $samples_sroa_0_9;
                 $samples_sroa_54_11 = $samples_sroa_54_9;
                }
                $samples_sroa_27 = $add_i_i327;
                HEAP32[$samples_sroa_0_10 + ($samples_sroa_27_0_load1098 << 2) >> 2] = 0;
                $samples_sroa_0_11 = $samples_sroa_0_10;
                $samples_sroa_54_12 = $samples_sroa_54_11;
               }
               $inc245_i = $x_0204_i + 1 | 0;
               if (($inc245_i | 0) < ($conv205_i | 0)) {
                $x_0204_i = $inc245_i;
                $samples_sroa_0_6 = $samples_sroa_0_11;
                $samples_sroa_54_3 = $samples_sroa_54_12;
               } else {
                $samples_sroa_0_12 = $samples_sroa_0_11;
                $samples_sroa_54_13 = $samples_sroa_54_12;
                break;
               }
              }
             } else {
              $samples_sroa_0_12 = $samples_sroa_0_5;
              $samples_sroa_54_13 = $samples_sroa_54_2;
             }
             $z_0206_i = $z_0206_i + 1 | 0;
             if (($z_0206_i | 0) >= ($conv213_i | 0)) {
              break;
             } else {
              $samples_sroa_0_5 = $samples_sroa_0_12;
              $samples_sroa_54_2 = $samples_sroa_54_13;
             }
            }
            $samples_sroa_27_0_load1092_pre = $samples_sroa_27;
            $div251_i = ($samples_sroa_27_0_load1092_pre | 0) / 4 | 0;
            if (($samples_sroa_27_0_load1092_pre | 0) > 3) {
             $iter_0202_us_i = 0;
             $327 = $233;
             while (1) {
              if (($327 | 0) > 126) {
               $353 = $327;
               $samples_sroa_54_141268 = $samples_sroa_54_13;
               $samples_sroa_0_131269 = $samples_sroa_0_12;
               break L469;
              } else {
               $add275162190_us_i = 0.0;
               $mul280159191_us_i = 0.0;
               $bestpt_sroa_5_0_oldload157192_us_i = 0.0;
               $bestd_0193_us_i = 0.0;
               $besti_0194_us_i = -1;
               $i258_0195_us_i = 0;
              }
              while (1) {
               $mul262_us_i = $i258_0195_us_i << 2;
               if ((HEAP32[$samples_sroa_0_12 + (($mul262_us_i | 3) << 2) >> 2] | 0) == 0) {
                $add275_us_i = +(HEAP32[$samples_sroa_0_12 + ($mul262_us_i << 2) >> 2] | 0) * $sampleDist + $232 * (+(((Math_imul($i258_0195_us_i, -1918454973) | 0) & 65535) >>> 0 >>> 0) / 65535.0 * 2.0 + -1.0) * .10000000149011612;
                $mul280_us_i = +(HEAP32[$samples_sroa_0_12 + (($mul262_us_i | 1) << 2) >> 2] | 0) * +HEAPF32[$ch279 >> 2];
                $add288_us_i = +(HEAP32[$samples_sroa_0_12 + (($mul262_us_i | 2) << 2) >> 2] | 0) * $sampleDist + $232 * (+(((Math_imul($i258_0195_us_i, -669632447) | 0) & 65535) >>> 0 >>> 0) / 65535.0 * 2.0 + -1.0) * .10000000149011612;
                $348 = HEAP32[$m_data_i208 >> 2] | 0;
                $349 = HEAP32[$m_size_i209 >> 2] | 0;
                $div294_us_i = ($349 | 0) / 4 | 0;
                if (($349 | 0) > 3) {
                 $i_011_i_us_i = 0;
                 $dmin_012_i_us_i = 3.4028234663852886e+38;
                 while (1) {
                  $mul_i_us_i = $i_011_i_us_i << 2;
                  $mul1_i_us_i = (HEAP32[$348 + ($mul_i_us_i << 2) >> 2] | 0) * 3 | 0;
                  $mul6_i_us_i = (HEAP32[$348 + (($mul_i_us_i | 1) << 2) >> 2] | 0) * 3 | 0;
                  $mul11_i_us_i = (HEAP32[$348 + (($mul_i_us_i | 2) << 2) >> 2] | 0) * 3 | 0;
                  $arrayidx2_val_i_us_i = +HEAPF32[$verts + ($mul1_i_us_i << 2) >> 2];
                  $arrayidx2_idx_val_i_us_i = +HEAPF32[$verts + ($mul1_i_us_i + 1 << 2) >> 2];
                  $arrayidx2_idx4_val_i_us_i = +HEAPF32[$verts + ($mul1_i_us_i + 2 << 2) >> 2];
                  $sub_i_i_i_us_i = +HEAPF32[$verts + ($mul11_i_us_i << 2) >> 2] - $arrayidx2_val_i_us_i;
                  $sub9_i_i_i_us_i = +HEAPF32[$verts + ($mul11_i_us_i + 2 << 2) >> 2] - $arrayidx2_idx4_val_i_us_i;
                  $sub_i48_i_i_us_i = +HEAPF32[$verts + ($mul6_i_us_i << 2) >> 2] - $arrayidx2_val_i_us_i;
                  $sub9_i55_i_i_us_i = +HEAPF32[$verts + ($mul6_i_us_i + 2 << 2) >> 2] - $arrayidx2_idx4_val_i_us_i;
                  $sub_i39_i_i_us_i = $add275_us_i - $arrayidx2_val_i_us_i;
                  $sub9_i46_i_i_us_i = $add288_us_i - $arrayidx2_idx4_val_i_us_i;
                  $add_i38_i_i_us_i = $sub_i_i_i_us_i * $sub_i_i_i_us_i + $sub9_i_i_i_us_i * $sub9_i_i_i_us_i;
                  $add_i33_i_i_us_i = $sub_i48_i_i_us_i * $sub_i_i_i_us_i + $sub9_i55_i_i_us_i * $sub9_i_i_i_us_i;
                  $add_i28_i_i_us_i = $sub_i39_i_i_us_i * $sub_i_i_i_us_i + $sub9_i46_i_i_us_i * $sub9_i_i_i_us_i;
                  $add_i23_i_i_us_i = $sub_i48_i_i_us_i * $sub_i48_i_i_us_i + $sub9_i55_i_i_us_i * $sub9_i55_i_i_us_i;
                  $add_i_i_i_us_i = $sub_i39_i_i_us_i * $sub_i48_i_i_us_i + $sub9_i46_i_i_us_i * $sub9_i55_i_i_us_i;
                  $div_i_i_us_i = 1.0 / ($add_i23_i_i_us_i * $add_i38_i_i_us_i - $add_i33_i_i_us_i * $add_i33_i_i_us_i);
                  $mul21_i_i_us_i = $div_i_i_us_i * ($add_i23_i_i_us_i * $add_i28_i_i_us_i - $add_i_i_i_us_i * $add_i33_i_i_us_i);
                  $mul25_i_i_us_i = $div_i_i_us_i * ($add_i_i_i_us_i * $add_i38_i_i_us_i - $add_i33_i_i_us_i * $add_i28_i_i_us_i);
                  if ($mul25_i_i_us_i < -9999999747378752.0e-20 | $mul21_i_i_us_i < -9999999747378752.0e-20 | $mul21_i_i_us_i + $mul25_i_i_us_i > 1.000100016593933) {
                   $retval_0_i_i_us_i = 3.4028234663852886e+38;
                  } else {
                   $retval_0_i_i_us_i = +Math_abs(+($mul25_i_i_us_i * (+HEAPF32[$verts + ($mul6_i_us_i + 1 << 2) >> 2] - $arrayidx2_idx_val_i_us_i) + ($arrayidx2_idx_val_i_us_i + $mul21_i_i_us_i * (+HEAPF32[$verts + ($mul11_i_us_i + 1 << 2) >> 2] - $arrayidx2_idx_val_i_us_i)) - $mul280_us_i));
                  }
                  $dmin_1_i_us_i = $retval_0_i_i_us_i < $dmin_012_i_us_i ? $retval_0_i_i_us_i : $dmin_012_i_us_i;
                  $inc_i_us_i = $i_011_i_us_i + 1 | 0;
                  if (($inc_i_us_i | 0) < ($div294_us_i | 0)) {
                   $i_011_i_us_i = $inc_i_us_i;
                   $dmin_012_i_us_i = $dmin_1_i_us_i;
                  } else {
                   $dmin_0_lcssa_i_us_i = $dmin_1_i_us_i;
                   break;
                  }
                 }
                } else {
                 $dmin_0_lcssa_i_us_i = 3.4028234663852886e+38;
                }
                $_dmin_0_i_us_i = $dmin_0_lcssa_i_us_i == 3.4028234663852886e+38 ? -1.0 : $dmin_0_lcssa_i_us_i;
                $or_cond3_us_i = $_dmin_0_i_us_i >= 0.0 & $_dmin_0_i_us_i > $bestd_0193_us_i;
                $besti_1_us_i = $or_cond3_us_i ? $i258_0195_us_i : $besti_0194_us_i;
                $bestd_1_us_i = $or_cond3_us_i ? $_dmin_0_i_us_i : $bestd_0193_us_i;
                $bestpt_sroa_5_0_oldload156_us_i = $or_cond3_us_i ? $add288_us_i : $bestpt_sroa_5_0_oldload157192_us_i;
                $mul280158_us_i = $or_cond3_us_i ? $mul280_us_i : $mul280159191_us_i;
                $add275161_us_i = $or_cond3_us_i ? $add275_us_i : $add275162190_us_i;
               } else {
                $besti_1_us_i = $besti_0194_us_i;
                $bestd_1_us_i = $bestd_0193_us_i;
                $bestpt_sroa_5_0_oldload156_us_i = $bestpt_sroa_5_0_oldload157192_us_i;
                $mul280158_us_i = $mul280159191_us_i;
                $add275161_us_i = $add275162190_us_i;
               }
               $i258_0195_us_i = $i258_0195_us_i + 1 | 0;
               if (($i258_0195_us_i | 0) >= ($div251_i | 0)) {
                break;
               } else {
                $add275162190_us_i = $add275161_us_i;
                $mul280159191_us_i = $mul280158_us_i;
                $bestpt_sroa_5_0_oldload157192_us_i = $bestpt_sroa_5_0_oldload156_us_i;
                $bestd_0193_us_i = $bestd_1_us_i;
                $besti_0194_us_i = $besti_1_us_i;
               }
              }
              if ($bestd_1_us_i <= $sampleMaxError | ($besti_1_us_i | 0) == -1) {
               $353 = $327;
               $samples_sroa_54_141268 = $samples_sroa_54_13;
               $samples_sroa_0_131269 = $samples_sroa_0_12;
               break L469;
              }
              HEAP32[$samples_sroa_0_12 + (($besti_1_us_i << 2 | 3) << 2) >> 2] = 1;
              $mul314_us_i = $327 * 3 | 0;
              HEAPF32[$verts + ($mul314_us_i << 2) >> 2] = $add275161_us_i;
              HEAPF32[$verts + ($mul314_us_i + 1 << 2) >> 2] = $mul280158_us_i;
              HEAPF32[$verts + ($mul314_us_i + 2 << 2) >> 2] = $bestpt_sroa_5_0_oldload156_us_i;
              $inc317_us_i = $327 + 1 | 0;
              $328 = HEAP32[$m_cap_i >> 2] | 0;
              if (($328 | 0) < 0) {
               $329 = $328;
               while (1) {
                $mul_i899 = $329 << 1;
                if (($329 | 0) < 0) {
                 $329 = $mul_i899;
                } else {
                 break;
                }
               }
               HEAP32[$m_cap_i >> 2] = $mul_i899;
               $call_i1_i905 = _malloc($329 << 3) | 0;
               $331 = HEAP32[$m_size_i >> 2] | 0;
               $332 = HEAP32[$m_data_i >> 2] | 0;
               if (($331 | 0) != 0 & ($call_i1_i905 | 0) != 0) {
                _memcpy($call_i1_i905 | 0, $332 | 0, $331 << 2) | 0;
               }
               if (($332 | 0) != 0) {
                _free($332);
               }
               HEAP32[$m_data_i >> 2] = $call_i1_i905;
              }
              HEAP32[$m_size_i >> 2] = 0;
              $335 = HEAP32[$m_cap_i210 >> 2] | 0;
              if (($335 | 0) < 0) {
               $336 = $335;
               while (1) {
                $mul_i929 = $336 << 1;
                if (($336 | 0) < 0) {
                 $336 = $mul_i929;
                } else {
                 break;
                }
               }
               HEAP32[$m_cap_i210 >> 2] = $mul_i929;
               $call_i1_i935 = _malloc($336 << 3) | 0;
               $338 = HEAP32[$m_size_i209 >> 2] | 0;
               if (($338 | 0) != 0 & ($call_i1_i935 | 0) != 0) {
                _memcpy($call_i1_i935 | 0, HEAP32[$m_data_i208 >> 2] | 0, $338 << 2) | 0;
               }
               $341 = HEAP32[$m_data_i208 >> 2] | 0;
               if (($341 | 0) != 0) {
                _free($341);
               }
               HEAP32[$m_data_i208 >> 2] = $call_i1_i935;
              }
              HEAP32[$m_size_i209 >> 2] = 0;
              __ZL12delaunayHullP9rcContextiPKfiPKiR10rcIntArrayS6_($ctx, $inc317_us_i, $arraydecay264, $nhull_4_i, $arraydecay_i, $tris, $edges);
              $inc320_us_i = $iter_0202_us_i + 1 | 0;
              if (($inc320_us_i | 0) < ($div251_i | 0)) {
               $iter_0202_us_i = $inc320_us_i;
               $327 = $inc317_us_i;
              } else {
               $353 = $inc317_us_i;
               $samples_sroa_54_141268 = $samples_sroa_54_13;
               $samples_sroa_0_131269 = $samples_sroa_0_12;
               break;
              }
             }
            } else {
             $353 = $233;
             $samples_sroa_54_141268 = $samples_sroa_54_13;
             $samples_sroa_0_131269 = $samples_sroa_0_12;
            }
           } else {
            $353 = $233;
            $samples_sroa_54_141268 = $samples_sroa_54_1;
            $samples_sroa_0_131269 = $samples_sroa_0_4;
           }
          } while (0);
          $355 = HEAP32[$m_size_i209 >> 2] | 0;
          $354 = $353;
          $samples_sroa_0_14 = $samples_sroa_0_131269;
          $samples_sroa_54_15 = $samples_sroa_54_141268;
         } else {
          $355 = $249;
          $354 = $233;
          $samples_sroa_0_14 = $samples_sroa_0_3;
          $samples_sroa_54_15 = $samples_sroa_54_0;
         }
         if (($355 | 0) > 1023) {
          $356 = HEAP32[$m_cap_i210 >> 2] | 0;
          if (($356 | 0) < 1020) {
           if (($356 | 0) == 0) {
            $_lcssa_i963 = 4080;
            $storemerge = 1020;
           } else {
            $357 = $356;
            while (1) {
             $mul_i959 = $357 << 1;
             if (($mul_i959 | 0) < 1020) {
              $357 = $mul_i959;
             } else {
              break;
             }
            }
            $_lcssa_i963 = $357 << 3;
            $storemerge = $mul_i959;
           }
           HEAP32[$m_cap_i210 >> 2] = $storemerge;
           $call_i1_i965 = _malloc($_lcssa_i963) | 0;
           $359 = HEAP32[$m_size_i209 >> 2] | 0;
           if (($359 | 0) != 0 & ($call_i1_i965 | 0) != 0) {
            _memcpy($call_i1_i965 | 0, HEAP32[$m_data_i208 >> 2] | 0, $359 << 2) | 0;
           }
           $362 = HEAP32[$m_data_i208 >> 2] | 0;
           if (($362 | 0) != 0) {
            _free($362);
           }
           HEAP32[$m_data_i208 >> 2] = $call_i1_i965;
          }
          HEAP32[$m_size_i209 >> 2] = 1020;
          __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 10136, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = ($355 | 0) / 4 | 0, HEAP32[tempVarArgs + 8 >> 2] = 255, tempVarArgs) | 0);
          STACKTOP = tempVarArgs;
          $364 = $354;
          $samples_sroa_0_15 = $samples_sroa_0_14;
          $samples_sroa_54_16 = $samples_sroa_54_15;
         } else {
          $364 = $354;
          $samples_sroa_0_15 = $samples_sroa_0_14;
          $samples_sroa_54_16 = $samples_sroa_54_15;
         }
        }
        $cmp271648 = ($364 | 0) > 0;
        if ($cmp271648) {
         $365 = +HEAPF32[$arraydecay >> 2];
         $add280 = +HEAPF32[$arrayidx304 >> 2] + +HEAPF32[$ch279 >> 2];
         $368 = +HEAPF32[$arrayidx311 >> 2];
         $j269_0649 = 0;
         do {
          $mul274 = $j269_0649 * 3 | 0;
          $arrayidx276 = $verts + ($mul274 << 2) | 0;
          HEAPF32[$arrayidx276 >> 2] = $365 + +HEAPF32[$arrayidx276 >> 2];
          $arrayidx283 = $verts + ($mul274 + 1 << 2) | 0;
          HEAPF32[$arrayidx283 >> 2] = +HEAPF32[$arrayidx283 >> 2] + $add280;
          $arrayidx288 = $verts + ($mul274 + 2 << 2) | 0;
          HEAPF32[$arrayidx288 >> 2] = $368 + +HEAPF32[$arrayidx288 >> 2];
          $j269_0649 = $j269_0649 + 1 | 0;
         } while (($j269_0649 | 0) < ($364 | 0));
        }
        if ($cmp361_i) {
         $j293_0651 = 0;
         do {
          $mul298 = $j293_0651 * 3 | 0;
          $arrayidx302 = $24 + ($mul298 << 2) | 0;
          HEAPF32[$arrayidx302 >> 2] = +HEAPF32[$arraydecay >> 2] + +HEAPF32[$arrayidx302 >> 2];
          $arrayidx309 = $24 + ($mul298 + 1 << 2) | 0;
          HEAPF32[$arrayidx309 >> 2] = +HEAPF32[$arrayidx304 >> 2] + +HEAPF32[$arrayidx309 >> 2];
          $arrayidx316 = $24 + ($mul298 + 2 << 2) | 0;
          HEAPF32[$arrayidx316 >> 2] = +HEAPF32[$arrayidx311 >> 2] + +HEAPF32[$arrayidx316 >> 2];
          $j293_0651 = $j293_0651 + 1 | 0;
         } while (($j293_0651 | 0) < ($npoly_0_lcssa | 0));
        }
        $378 = HEAP32[$m_size_i209 >> 2] | 0;
        $div324 = ($378 | 0) / 4 | 0;
        $380 = HEAP32[$meshes >> 2] | 0;
        HEAP32[$380 + ($mul223 << 2) >> 2] = HEAP32[$nverts128 >> 2];
        HEAP32[$380 + ($add236199 << 2) >> 2] = $364;
        HEAP32[$380 + ($add230198 << 2) >> 2] = HEAP32[$ntris >> 2];
        HEAP32[$380 + ($add248200 << 2) >> 2] = $div324;
        $add344 = (HEAP32[$nverts128 >> 2] | 0) + $364 | 0;
        if (($add344 | 0) > ($vcap_0659 | 0)) {
         $387 = $vcap_0659 + ((($vcap_0659 | 0) > ($add344 | 0) ? $vcap_0659 : $add344) + 255 - $vcap_0659 & -256) | 0;
         $call_i_i980 = _malloc($387 * 12 | 0) | 0;
         if (($call_i_i980 | 0) == 0) {
          label = 428;
          break;
         }
         $389 = HEAP32[$nverts128 >> 2] | 0;
         if (($389 | 0) != 0) {
          _memcpy($call_i_i980 | 0, HEAP32[$verts148 >> 2] | 0, $389 * 12 | 0) | 0;
         }
         $392 = HEAP32[$verts148 >> 2] | 0;
         if (($392 | 0) != 0) {
          _free($392);
         }
         HEAP32[$verts148 >> 2] = $call_i_i980;
         $vcap_2 = $387;
        } else {
         $vcap_2 = $vcap_0659;
        }
        if ($cmp271648) {
         $394 = HEAP32[$verts148 >> 2] | 0;
         $nverts128_promoted = HEAP32[$nverts128 >> 2] | 0;
         $j371_0653 = 0;
         $395 = $nverts128_promoted;
         while (1) {
          $mul375 = $j371_0653 * 3 | 0;
          $mul379 = $395 * 3 | 0;
          HEAPF32[$394 + ($mul379 << 2) >> 2] = +HEAPF32[$verts + ($mul375 << 2) >> 2];
          HEAPF32[$394 + ($mul379 + 1 << 2) >> 2] = +HEAPF32[$verts + ($mul375 + 1 << 2) >> 2];
          HEAPF32[$394 + ($mul379 + 2 << 2) >> 2] = +HEAPF32[$verts + ($mul375 + 2 << 2) >> 2];
          $j371_0653 = $j371_0653 + 1 | 0;
          if (($j371_0653 | 0) >= ($364 | 0)) {
           break;
          } else {
           $395 = $395 + 1 | 0;
          }
         }
         HEAP32[$nverts128 >> 2] = $364 + $nverts128_promoted;
        }
        $add405 = (HEAP32[$ntris >> 2] | 0) + $div324 | 0;
        if (($add405 | 0) > ($tcap_0660 | 0)) {
         $405 = $tcap_0660 + ((($tcap_0660 | 0) > ($add405 | 0) ? $tcap_0660 : $add405) + 255 - $tcap_0660 & -256) | 0;
         $mul416 = $405 << 2;
         $call_i_i985 = _malloc($mul416) | 0;
         if (($call_i_i985 | 0) == 0) {
          label = 440;
          break;
         }
         $406 = HEAP32[$ntris >> 2] | 0;
         if (($406 | 0) != 0) {
          _memcpy($call_i_i985 | 0, HEAP32[$tris160 >> 2] | 0, $406 << 2) | 0;
         }
         $408 = HEAP32[$tris160 >> 2] | 0;
         if (($408 | 0) != 0) {
          _free($408);
         }
         HEAP32[$tris160 >> 2] = $call_i_i985;
         $tcap_2 = $405;
        } else {
         $tcap_2 = $tcap_0660;
        }
        if (($378 | 0) > 3) {
         $j435_0655 = 0;
         $409 = HEAP32[$ntris >> 2] | 0;
         do {
          $mul439 = $j435_0655 << 2;
          $410 = HEAP32[$m_data_i208 >> 2] | 0;
          $arrayidx_i386 = $410 + ($mul439 << 2) | 0;
          HEAP8[(HEAP32[$tris160 >> 2] | 0) + ($409 << 2) >> 0] = HEAP32[$arrayidx_i386 >> 2];
          $arrayidx449 = $410 + (($mul439 | 1) << 2) | 0;
          HEAP8[(HEAP32[$tris160 >> 2] | 0) + (HEAP32[$ntris >> 2] << 2 | 1) >> 0] = HEAP32[$arrayidx449 >> 2];
          $arrayidx456 = $410 + (($mul439 | 2) << 2) | 0;
          HEAP8[(HEAP32[$tris160 >> 2] | 0) + (HEAP32[$ntris >> 2] << 2 | 2) >> 0] = HEAP32[$arrayidx456 >> 2];
          $arrayidx465 = $verts + (((HEAP32[$arrayidx_i386 >> 2] | 0) * 3 | 0) << 2) | 0;
          $arrayidx468 = $verts + (((HEAP32[$arrayidx449 >> 2] | 0) * 3 | 0) << 2) | 0;
          $arrayidx471 = $verts + (((HEAP32[$arrayidx456 >> 2] | 0) * 3 | 0) << 2) | 0;
          $call_i = __ZL12getEdgeFlagsPKfS0_S0_i($arrayidx465, $arrayidx468, $24, $npoly_0_lcssa) | 0;
          $or7_i = (__ZL12getEdgeFlagsPKfS0_S0_i($arrayidx468, $arrayidx471, $24, $npoly_0_lcssa) | 0) << 2 | $call_i;
          $or13_i = $or7_i | (__ZL12getEdgeFlagsPKfS0_S0_i($arrayidx471, $arrayidx465, $24, $npoly_0_lcssa) | 0) << 4;
          HEAP8[(HEAP32[$tris160 >> 2] | 0) + (HEAP32[$ntris >> 2] << 2 | 3) >> 0] = $or13_i;
          $409 = (HEAP32[$ntris >> 2] | 0) + 1 | 0;
          HEAP32[$ntris >> 2] = $409;
          $j435_0655 = $j435_0655 + 1 | 0;
         } while (($j435_0655 | 0) < ($div324 | 0));
        }
        $inc487 = $i167_0661 + 1 | 0;
        if (($inc487 | 0) < (HEAP32[$npolys >> 2] | 0)) {
         $vcap_0659 = $vcap_2;
         $tcap_0660 = $tcap_2;
         $i167_0661 = $inc487;
         $samples_sroa_0_3 = $samples_sroa_0_15;
         $samples_sroa_54_0 = $samples_sroa_54_16;
         $stack_sroa_0_2 = $stack_sroa_0_29;
         $stack_sroa_146_0 = $stack_sroa_146_40;
        } else {
         $samples_sroa_0_16 = $samples_sroa_0_15;
         $stack_sroa_0_30 = $stack_sroa_0_29;
         break L54;
        }
       }
       if ((label | 0) == 428) {
        __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 2968, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $387 * 3 | 0, tempVarArgs) | 0);
        STACKTOP = tempVarArgs;
        $retval_0 = 0;
        $samples_sroa_0_17 = $samples_sroa_0_15;
        $stack_sroa_0_31 = $stack_sroa_0_29;
        break L42;
       } else if ((label | 0) == 440) {
        __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 1936, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul416, tempVarArgs) | 0);
        STACKTOP = tempVarArgs;
        $retval_0 = 0;
        $samples_sroa_0_17 = $samples_sroa_0_15;
        $stack_sroa_0_31 = $stack_sroa_0_29;
        break L42;
       }
      } else {
       $samples_sroa_0_16 = $17;
       $stack_sroa_0_30 = $16;
      }
     } while (0);
     if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
      $retval_0 = 1;
      $samples_sroa_0_17 = $samples_sroa_0_16;
      $stack_sroa_0_31 = $stack_sroa_0_30;
     } else {
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 26);
      $retval_0 = 1;
      $samples_sroa_0_17 = $samples_sroa_0_16;
      $stack_sroa_0_31 = $stack_sroa_0_30;
     }
    }
   } while (0);
   _free($call_i_i101);
   _free($call_i_i);
   if (($47 | 0) == 0) {
    $retval_110481050 = $retval_0;
    $samples_sroa_0_19 = $samples_sroa_0_17;
    $stack_sroa_0_33 = $stack_sroa_0_31;
   } else {
    _free($47);
    $retval_110481050 = $retval_0;
    $samples_sroa_0_19 = $samples_sroa_0_17;
    $stack_sroa_0_33 = $stack_sroa_0_31;
   }
  }
 } while (0);
 if (($samples_sroa_0_19 | 0) != 0) {
  _free($samples_sroa_0_19);
 }
 if (($stack_sroa_0_33 | 0) != 0) {
  _free($stack_sroa_0_33);
 }
 $432 = HEAP32[$m_data_i208 >> 2] | 0;
 if (($432 | 0) != 0) {
  _free($432);
 }
 $434 = HEAP32[$m_data_i >> 2] | 0;
 if (($434 | 0) == 0) {
  $retval_2 = $retval_110481050;
  STACKTOP = sp;
  return $retval_2 | 0;
 }
 _free($434);
 $retval_2 = $retval_110481050;
 STACKTOP = sp;
 return $retval_2 | 0;
}
function __Z15rcBuildContoursP9rcContextR20rcCompactHeightfieldfiR12rcContourSeti($ctx, $chf, $maxError, $maxEdgeLen, $cset) {
 $ctx = $ctx | 0;
 $chf = $chf | 0;
 $maxError = +$maxError;
 $maxEdgeLen = $maxEdgeLen | 0;
 $cset = $cset | 0;
 var $regs_i_i = 0, $verts_sroa_36 = 0, $simplified_sroa_73 = 0, $width = 0, $0 = 0, $height = 0, $1 = 0, $borderSize1 = 0, $2 = 0, $m_timerEnabled_i = 0, $arraydecay = 0, $6 = 0.0, $8 = 0.0, $arrayidx5_i = 0, $arraydecay4 = 0, $9 = 0.0, $11 = 0.0, $arrayidx5_i191 = 0, $cmp = 0, $cs = 0, $mul = 0.0, $cs16_pre_phi = 0, $16 = 0, $mul21 = 0, $conv31 = 0, $cond_i = 0, $call_i_i = 0, $conts = 0, $nconts = 0, $spanCount = 0, $call_i_i1 = 0, $cmp46530 = 0, $cmp48527 = 0, $cells = 0, $spans = 0, $y_0531 = 0, $mul50 = 0, $mul87_3 = 0, $add86_1 = 0, $mul87_1 = 0, $x_0528 = 0, $bf_load = 0, $bf_clear = 0, $bf_lshr = 0, $add56 = 0, $add88_3 = 0, $add83_2 = 0, $add88_2 = 0, $add88_1 = 0, $add88 = 0, $i_0525 = 0, $30 = 0, $31 = 0, $bf_load_i = 0, $conv104 = 0, $and_i = 0, $r_0 = 0, $_ = 0, $and_i_1 = 0, $inc116 = 0, $inc119_pre_phi = 0, $inc122_pre_phi = 0, $call_i1_i = 0, $40 = 0, $verts_sroa_36_0_load = 0, $call_i1_i28 = 0, $41 = 0, $simplified_sroa_73_0_load841 = 0, $cmp134513 = 0, $cells139 = 0, $spans171 = 0, $areas = 0, $42 = 0, $arrayidx7_i_i = 0, $arrayidx97_i_i = 0, $arrayidx132_i_i = 0, $arrayidx30_i_i = 0, $mul154_i = 0.0, $cmp224_i = 0, $43 = 0, $mul295_i = 0, $verts_sroa_66_0 = 0, $verts_sroa_0_0 = 0, $simplified_sroa_158_0 = 0, $simplified_sroa_0_0 = 0, $maxContours_0521 = 0, $y128_0519 = 0, $mul137 = 0, $verts_sroa_0_1 = 0, $simplified_sroa_0_1 = 0, $44 = 0, $verts_sroa_66_1 = 0, $verts_sroa_0_2 = 0, $simplified_sroa_158_1 = 0, $simplified_sroa_0_2 = 0, $maxContours_1516 = 0, $x132_0514 = 0, $bf_load142 = 0, $bf_clear143 = 0, $bf_lshr148 = 0, $add149 = 0, $verts_sroa_66_2 = 0, $verts_sroa_0_3 = 0, $simplified_sroa_158_2 = 0, $simplified_sroa_0_3 = 0, $maxContours_2503 = 0, $i141_0500 = 0, $arrayidx156 = 0, $47 = 0, $52 = 0, $55 = 0, $56 = 0, $mul_i54 = 0, $call_i1_i60 = 0, $57 = 0, $verts_sroa_36_0_load927 = 0, $verts_sroa_66_3 = 0, $verts_sroa_0_7 = 0, $60 = 0, $mul_i84 = 0, $call_i1_i90 = 0, $61 = 0, $simplified_sroa_73_0_load868 = 0, $simplified_sroa_158_3 = 0, $simplified_sroa_0_7 = 0, $conv_i = 0, $dir_0_i = 0, $68 = 0, $verts_sroa_66_4 = 0, $verts_sroa_0_8 = 0, $iter_0_i = 0, $dir_1_i = 0, $i_addr_0_i = 0, $y_addr_0_i = 0, $x_addr_0_i = 0, $inc4_i = 0, $arrayidx7_i = 0, $conv9_i = 0, $shl10_i = 0, $70 = 0, $conv_i_i = 0, $and_i_i = 0, $73 = 0, $mul_i_i_i = 0, $bf_clear_i_i_i = 0, $and_i_i_i = 0, $cmp_i_i = 0, $and_i138_i_i = 0, $add9_i_i = 0, $add11_i_i = 0, $78 = 0, $add12_i_i = 0, $79 = 0, $add15_i_i = 0, $conv19_i_i = 0, $cond_i129_i_i = 0, $mul_i122_i_i = 0, $and_i127_i_i = 0, $87 = 0, $add46_i_i = 0, $conv50_i_i = 0, $mul_i106_pre_phi_i_i = 0, $ch_0_i_i = 0, $and_i111_i_i = 0, $add68_i_i = 0, $add71_i_i = 0, $93 = 0, $add75_i_i = 0, $94 = 0, $add81_i_i = 0, $conv86_i_i = 0, $cond_i97_i_i = 0, $and_i95_i_i = 0, $and_i88_i_i = 0, $102 = 0, $add116_i_i = 0, $conv121_i_i = 0, $ch_1_i_i = 0, $j_0_i_i = 0, $add136_i_i = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $pz_0_i = 0, $px_0_i = 0, $and_i83_i = 0, $add30_i = 0, $add34_i = 0, $r_0_i = 0, $isAreaBorder_0_off0_i = 0, $r_0_or_i = 0, $r_2_i = 0, $verts_sroa_36_0_load928 = 0, $add_i93_i = 0, $119 = 0, $mul_i114 = 0, $verts_sroa_66_5 = 0, $call_i1_i120 = 0, $120 = 0, $verts_sroa_36_0_load933 = 0, $verts_sroa_66_6 = 0, $verts_sroa_0_9 = 0, $verts_sroa_36_0_load937 = 0, $add_i86_i = 0, $123 = 0, $mul_i144 = 0, $verts_sroa_66_7 = 0, $call_i1_i150 = 0, $124 = 0, $verts_sroa_36_0_load939 = 0, $verts_sroa_66_8 = 0, $verts_sroa_0_10 = 0, $verts_sroa_36_0_load942 = 0, $add_i79_i = 0, $127 = 0, $mul_i174 = 0, $verts_sroa_66_9 = 0, $call_i1_i180 = 0, $128 = 0, $verts_sroa_36_0_load943 = 0, $verts_sroa_66_10 = 0, $verts_sroa_0_11 = 0, $verts_sroa_36_0_load940 = 0, $add_i70_i = 0, $131 = 0, $mul_i205 = 0, $verts_sroa_66_11 = 0, $call_i1_i211 = 0, $132 = 0, $verts_sroa_36_0_load931 = 0, $verts_sroa_66_12 = 0, $verts_sroa_0_12 = 0, $and_i68_i = 0, $add64_i = 0, $add67_i = 0, $and_i66_i = 0, $add77_i = 0, $add84_i = 0, $verts_sroa_66_13 = 0, $verts_sroa_0_13 = 0, $dir_2_in_i = 0, $i_addr_1_i = 0, $y_addr_1_i = 0, $x_addr_1_i = 0, $dir_2_i = 0, $verts_sroa_66_14 = 0, $verts_sroa_0_14 = 0, $verts_sroa_36_0_load935 = 0, $i_0539_i = 0, $add3_i = 0, $div_i = 0, $simplified_sroa_158_4 = 0, $simplified_sroa_0_8 = 0, $i5_0533_i = 0, $add10_i = 0, $mul_i297 = 0, $152 = 0, $simplified_sroa_73_0_load870 = 0, $add_i444_i = 0, $153 = 0, $mul_i236 = 0, $simplified_sroa_158_5 = 0, $call_i1_i242 = 0, $154 = 0, $simplified_sroa_73_0_load876 = 0, $simplified_sroa_158_6 = 0, $simplified_sroa_0_9 = 0, $157 = 0, $simplified_sroa_73_0_load852 = 0, $add_i474_i = 0, $158 = 0, $mul_i266 = 0, $simplified_sroa_158_7 = 0, $call_i1_i272 = 0, $159 = 0, $simplified_sroa_73_0_load859 = 0, $simplified_sroa_158_8 = 0, $simplified_sroa_0_10 = 0, $162 = 0, $simplified_sroa_73_0_load835 = 0, $add_i481_i = 0, $163 = 0, $mul_i296 = 0, $simplified_sroa_158_9 = 0, $call_i1_i302 = 0, $164 = 0, $simplified_sroa_73_0_load843 = 0, $simplified_sroa_158_10 = 0, $simplified_sroa_0_11 = 0, $simplified_sroa_73_0_load831 = 0, $add_i469_i = 0, $167 = 0, $mul_i326 = 0, $simplified_sroa_158_11 = 0, $call_i1_i332 = 0, $168 = 0, $simplified_sroa_73_0_load861 = 0, $simplified_sroa_158_12 = 0, $simplified_sroa_0_12 = 0, $simplified_sroa_158_13 = 0, $simplified_sroa_0_13 = 0, $simplified_sroa_158_14 = 0, $simplified_sroa_0_14 = 0, $simplified_sroa_73_0_load839 = 0, $171 = 0, $172 = 0, $173 = 0, $verts_sroa_36_0_load934 = 0, $174 = 0, $llx_0523_i = 0, $lly_0522_i = 0, $llz_0521_i = 0, $lli_0520_i = 0, $urx_0519_i = 0, $ury_0518_i = 0, $urz_0517_i = 0, $uri_0516_i = 0, $i54_0515_i = 0, $175 = 0, $176 = 0, $lli_1_i = 0, $llz_1_i = 0, $lly_1_i = 0, $llx_1_i = 0, $uri_1_i = 0, $urz_1_i = 0, $ury_1_i = 0, $urx_1_i = 0, $add81_i = 0, $llx_0_lcssa_i = 0, $lly_0_lcssa_i = 0, $llz_0_lcssa_i = 0, $lli_0_lcssa_i = 0, $urx_0_lcssa_i = 0, $ury_0_lcssa_i = 0, $urz_0_lcssa_i = 0, $uri_0_lcssa_i = 0, $177 = 0, $mul_i356 = 0, $simplified_sroa_158_15 = 0, $_lcssa_i360 = 0, $call_i1_i362 = 0, $178 = 0, $simplified_sroa_73_0_load834 = 0, $simplified_sroa_158_16 = 0, $simplified_sroa_0_15 = 0, $simplified_sroa_73_0_load849 = 0, $add_i432_i = 0, $181 = 0, $mul_i386 = 0, $simplified_sroa_158_17 = 0, $call_i1_i392 = 0, $182 = 0, $simplified_sroa_73_0_load842 = 0, $simplified_sroa_158_18 = 0, $simplified_sroa_0_16 = 0, $simplified_sroa_73_0_load857 = 0, $add_i425_i = 0, $185 = 0, $mul_i416 = 0, $simplified_sroa_158_19 = 0, $call_i1_i422 = 0, $186 = 0, $simplified_sroa_73_0_load851 = 0, $simplified_sroa_158_20 = 0, $simplified_sroa_0_17 = 0, $simplified_sroa_73_0_load874 = 0, $add_i418_i = 0, $189 = 0, $mul_i446 = 0, $simplified_sroa_158_21 = 0, $call_i1_i452 = 0, $190 = 0, $simplified_sroa_73_0_load860 = 0, $simplified_sroa_158_22 = 0, $simplified_sroa_0_18 = 0, $simplified_sroa_73_0_load873 = 0, $add_i411_i = 0, $193 = 0, $mul_i476 = 0, $simplified_sroa_158_23 = 0, $call_i1_i482 = 0, $194 = 0, $simplified_sroa_73_0_load869 = 0, $simplified_sroa_158_24 = 0, $simplified_sroa_0_19 = 0, $simplified_sroa_73_0_load871 = 0, $add_i404_i = 0, $197 = 0, $mul_i506 = 0, $simplified_sroa_158_25 = 0, $call_i1_i512 = 0, $198 = 0, $simplified_sroa_73_0_load877 = 0, $simplified_sroa_158_26 = 0, $simplified_sroa_0_20 = 0, $simplified_sroa_73_0_load863 = 0, $add_i398_i = 0, $201 = 0, $mul_i536 = 0, $simplified_sroa_158_27 = 0, $call_i1_i542 = 0, $202 = 0, $simplified_sroa_73_0_load865 = 0, $simplified_sroa_158_28 = 0, $simplified_sroa_0_21 = 0, $simplified_sroa_73_0_load855 = 0, $add_i391_i = 0, $205 = 0, $mul_i566 = 0, $simplified_sroa_158_29 = 0, $call_i1_i572 = 0, $206 = 0, $simplified_sroa_73_0_load847 = 0, $simplified_sroa_158_30 = 0, $simplified_sroa_0_22 = 0, $simplified_sroa_158_31 = 0, $simplified_sroa_0_23 = 0, $209 = 0, $div85_i = 0, $sub_i = 0, $div89511_i = 0, $simplified_sroa_158_32 = 0, $simplified_sroa_0_24 = 0, $_pre555_i = 0, $210 = 0, $div89511548_i = 0, $i86_0_ph547_i = 0, $add93_i = 0, $mul97_i = 0, $add101250_i = 0, $add104251_i = 0, $mul199_i = 0, $add207256_i = 0, $add214258_i = 0, $add218259_i = 0, $simplified_sroa_158_33 = 0, $simplified_sroa_0_25 = 0, $211 = 0, $212 = 0, $div89513_i = 0, $213 = 0, $214 = 0, $215 = 0, $mul106_i = 0, $216 = 0, $217 = 0, $218 = 0, $cinc_0_i = 0, $endi_0_i = 0, $add121_pn_i = 0, $ci_0_i = 0, $219 = 0, $conv_i_i302 = 0.0, $conv2_i_i = 0.0, $add_i_i304 = 0.0, $cmp_i_i305 = 0, $conv17_i_i = 0.0, $conv22_i_i = 0.0, $maxd_0505_i = 0.0, $maxi_0504_i = 0, $ci_1503_i = 0, $mul139_i = 0, $220 = 0, $221 = 0, $add10_i_i = 0.0, $t_0_i_i = 0.0, $t_1_i_i = 0.0, $sub21_i_i = 0.0, $sub26_i_i = 0.0, $add29_i_i = 0.0, $cmp146_i = 0, $add158_i = 0, $222 = 0, $mul_i596 = 0, $simplified_sroa_158_34 = 0, $call_i1_i602 = 0, $223 = 0, $simplified_sroa_73_0_load830 = 0, $simplified_sroa_158_35 = 0, $simplified_sroa_0_26 = 0, $div160_i = 0, $j_0507_i = 0, $j_0510_i = 0, $j_0_in509_i = 0, $sub165_i = 0, $mul169_i = 0, $j_0_i = 0, $mul195_i = 0, $simplified_sroa_73_0_load845 = 0, $div89_i = 0, $simplified_sroa_158_36 = 0, $simplified_sroa_0_27 = 0, $233 = 0, $div232499_i = 0, $simplified_sroa_158_37 = 0, $simplified_sroa_0_28 = 0, $_pre551_i = 0, $_pr421563 = 0, $234 = 0, $div232499544_i = 0, $i229_0_ph543_i = 0, $add236_i = 0, $mul241_i = 0, $add246235_i = 0, $add250236_i = 0, $mul370_i = 0, $add378241_i = 0, $add385243_i = 0, $add389244_i = 0, $simplified_sroa_158_38 = 0, $simplified_sroa_0_29 = 0, $_pr421561 = 0, $235 = 0, $simplified_sroa_158_39 = 0, $simplified_sroa_0_30 = 0, $_pr421562 = 0, $236 = 0, $237 = 0, $div232501_i = 0, $238 = 0, $239 = 0, $240 = 0, $mul253_i = 0, $241 = 0, $242 = 0, $243 = 0, $sub290_i = 0, $sub291_i = 0, $cond_i309 = 0, $cond_sink_i = 0, $rem313_i = 0, $add326_i = 0, $246 = 0, $mul_i626 = 0, $simplified_sroa_158_40 = 0, $call_i1_i632 = 0, $247 = 0, $simplified_sroa_73_0_load848 = 0, $simplified_sroa_158_41 = 0, $simplified_sroa_0_31 = 0, $div329_i = 0, $j330_0495_i = 0, $j330_0498_i = 0, $j330_0_in497_i = 0, $sub335_i = 0, $mul339_i = 0, $j330_0_i = 0, $mul366_i = 0, $simplified_sroa_73_0_load838 = 0, $div232_i = 0, $i396_0494_i = 0, $arrayidx_i283_i = 0, $257 = 0, $inc424_i = 0, $simplified_sroa_73_0_load837 = 0, $260 = 0, $simplified_sroa_158_42 = 0, $simplified_sroa_0_32 = 0, $261 = 0, $div72_i = 0, $i_071_i = 0, $add_i328 = 0, $mul_i329 = 0, $mul6_i = 0, $simplified_sroa_158_43 = 0, $simplified_sroa_0_33 = 0, $264 = 0, $div_i331 = 0, $j_068_i = 0, $add23_i = 0, $mul24_i = 0, $mul27_i = 0, $simplified_sroa_73_0_load836 = 0, $_lcssa_i = 0, $sub52_i = 0, $271 = 0, $mul_i656 = 0, $simplified_sroa_158_44 = 0, $call_i1_i662 = 0, $272 = 0, $simplified_sroa_73_0_load866 = 0, $simplified_sroa_158_45 = 0, $simplified_sroa_0_34 = 0, $simplified_sroa_158_46 = 0, $simplified_sroa_0_35 = 0, $275 = 0, $278 = 0, $279 = 0, $mul200 = 0, $280 = 0, $_pre558 = 0, $282 = 0, $j_0481 = 0, $283 = 0, $284 = 0, $285 = 0, $inc217 = 0, $287 = 0, $289 = 0, $290 = 0, $maxContours_3 = 0, $291 = 0, $div230 = 0, $nverts = 0, $call_i_i681 = 0, $verts236 = 0, $297 = 0, $j251_0483 = 0, $mul256 = 0, $arrayidx258 = 0, $arrayidx261 = 0, $div269 = 0, $nrverts = 0, $call_i_i682 = 0, $rverts275 = 0, $306 = 0, $j290_0485 = 0, $mul296 = 0, $arrayidx298 = 0, $arrayidx301 = 0, $verts_sroa_66_15 = 0, $verts_sroa_0_15 = 0, $simplified_sroa_158_47 = 0, $simplified_sroa_0_36 = 0, $maxContours_4 = 0, $inc311 = 0, $verts_sroa_66_16 = 0, $verts_sroa_0_16 = 0, $simplified_sroa_158_48 = 0, $simplified_sroa_0_37 = 0, $maxContours_2_lcssa = 0, $inc314 = 0, $verts_sroa_66_17 = 0, $verts_sroa_0_17 = 0, $simplified_sroa_158_49 = 0, $simplified_sroa_0_38 = 0, $maxContours_1_lcssa = 0, $inc317 = 0, $310 = 0, $i319_0437 = 0, $311 = 0, $verts327 = 0, $312 = 0, $nverts328 = 0, $313 = 0, $area_013_i = 0, $i_012_i = 0, $j_011_i = 0, $mul_i351 = 0, $mul1_i = 0, $mul5_i355 = 0, $inc_i359 = 0, $reg349 = 0, $j333_0431 = 0, $nverts343 = 0, $318 = 0, $verts355 = 0, $321 = 0, $sub_i364 = 0, $area_013_i366 = 0, $i_012_i367 = 0, $j_011_i368 = 0, $mul_i369 = 0, $mul1_i371 = 0, $mul5_i375 = 0, $inc_i381 = 0, $inc366 = 0, $327 = 0, $328 = 0, $closestDist_047_i = 0, $i_046_i = 0, $mul_i394 = 0, $mul3_i397 = 0, $arrayidx4_i398 = 0, $mul5_i399 = 0, $arrayidx8_i33_i = 0, $330 = 0, $331 = 0, $sub_i_i402 = 0, $332 = 0, $333 = 0, $sub10_i_i = 0, $334 = 0, $335 = 0, $closestDist_144_i = 0, $j_043_i = 0, $mul10_i = 0, $336 = 0, $mul_i_i403 = 0, $337 = 0, $sub4_i30_i = 0, $mul_i31_i = 0, $sub7_i32_i = 0, $add21_i = 0, $cmp22_i = 0, $340 = 0, $341 = 0, $closestDist_2_i = 0, $call_i_i683 = 0, $342 = 0, $343 = 0, $344 = 0, $nv_0_lcssa_i = 0, $345 = 0, $346 = 0, $347 = 0, $nv_053_i = 0, $mul5_i = 0, $mul8_i = 0, $inc_i = 0, $352 = 0, $353 = 0, $nv_150_i = 0, $i20_049_i = 0, $mul26_i = 0, $mul32_i = 0, $inc43_i = 0, $358 = 0, $nv_1_lcssa_i = 0, $359 = 0, $361 = 0, $verts_sroa_0_18 = 0, $simplified_sroa_0_39 = 0, $retval_0 = 0, $retval_2 = 0, $r_0_1 = 0, $or_1__ = 0, $and_i_2 = 0, $r_0_2 = 0, $or_2_or_1__ = 0, $and_i_3 = 0, $r_0_3 = 0, label = 0, tempVarArgs = 0, sp = 0, $i_046_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $regs_i_i = sp | 0;
 $width = $chf | 0;
 $0 = HEAP32[$width >> 2] | 0;
 $height = $chf + 4 | 0;
 $1 = HEAP32[$height >> 2] | 0;
 $borderSize1 = $chf + 20 | 0;
 $2 = HEAP32[$borderSize1 >> 2] | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 4);
 }
 $arraydecay = $cset + 8 | 0;
 $6 = +HEAPF32[$chf + 28 >> 2];
 HEAPF32[$arraydecay >> 2] = $6;
 HEAPF32[$cset + 12 >> 2] = +HEAPF32[$chf + 32 >> 2];
 $8 = +HEAPF32[$chf + 36 >> 2];
 $arrayidx5_i = $cset + 16 | 0;
 HEAPF32[$arrayidx5_i >> 2] = $8;
 $arraydecay4 = $cset + 20 | 0;
 $9 = +HEAPF32[$chf + 40 >> 2];
 HEAPF32[$arraydecay4 >> 2] = $9;
 HEAPF32[$cset + 24 >> 2] = +HEAPF32[$chf + 44 >> 2];
 $11 = +HEAPF32[$chf + 48 >> 2];
 $arrayidx5_i191 = $cset + 28 | 0;
 HEAPF32[$arrayidx5_i191 >> 2] = $11;
 $cmp = ($2 | 0) > 0;
 if ($cmp) {
  $cs = $chf + 52 | 0;
  $mul = +($2 | 0) * +HEAPF32[$cs >> 2];
  HEAPF32[$arraydecay >> 2] = $6 + $mul;
  HEAPF32[$arrayidx5_i >> 2] = $mul + $8;
  HEAPF32[$arraydecay4 >> 2] = $9 - $mul;
  HEAPF32[$arrayidx5_i191 >> 2] = $11 - $mul;
  $cs16_pre_phi = $cs;
 } else {
  $cs16_pre_phi = $chf + 52 | 0;
 }
 HEAPF32[$cset + 32 >> 2] = +HEAPF32[$cs16_pre_phi >> 2];
 HEAPF32[$cset + 36 >> 2] = +HEAPF32[$chf + 56 >> 2];
 $16 = HEAP32[$borderSize1 >> 2] | 0;
 $mul21 = $16 << 1;
 HEAP32[$cset + 40 >> 2] = (HEAP32[$width >> 2] | 0) - $mul21;
 HEAP32[$cset + 44 >> 2] = (HEAP32[$height >> 2] | 0) - $mul21;
 HEAP32[$cset + 48 >> 2] = $16;
 $conv31 = HEAPU16[$chf + 26 >> 1] | 0;
 $cond_i = $conv31 >>> 0 > 8 >>> 0 ? $conv31 : 8;
 $call_i_i = _malloc($cond_i * 20 | 0) | 0;
 $conts = $cset | 0;
 HEAP32[$conts >> 2] = $call_i_i;
 if (($call_i_i | 0) == 0) {
  $retval_2 = 0;
  STACKTOP = sp;
  return $retval_2 | 0;
 }
 $nconts = $cset + 4 | 0;
 HEAP32[$nconts >> 2] = 0;
 $spanCount = $chf + 8 | 0;
 $call_i_i1 = _malloc(HEAP32[$spanCount >> 2] | 0) | 0;
 if (($call_i_i1 | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$spanCount >> 2], tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_2 = 0;
  STACKTOP = sp;
  return $retval_2 | 0;
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 5);
 }
 $cmp46530 = ($1 | 0) > 0;
 if ($cmp46530) {
  $cmp48527 = ($0 | 0) > 0;
  $cells = $chf + 60 | 0;
  $spans = $chf + 64 | 0;
  $y_0531 = 0;
  while (1) {
   if ($cmp48527) {
    $mul50 = Math_imul($y_0531, $0) | 0;
    $mul87_3 = Math_imul($y_0531 - 1 | 0, $0) | 0;
    $add86_1 = $y_0531 + 1 | 0;
    $mul87_1 = Math_imul($add86_1, $0) | 0;
    $x_0528 = 0;
    while (1) {
     $bf_load = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x_0528 + $mul50 << 2) >> 2] | 0;
     $bf_clear = $bf_load & 16777215;
     $bf_lshr = $bf_load >>> 24;
     $add56 = $bf_clear + $bf_lshr | 0;
     if (($bf_lshr | 0) == 0) {
      $inc119_pre_phi = $x_0528 + 1 | 0;
     } else {
      $add88_3 = $x_0528 + $mul87_3 | 0;
      $add83_2 = $x_0528 + 1 | 0;
      $add88_2 = $add83_2 + $mul50 | 0;
      $add88_1 = $x_0528 + $mul87_1 | 0;
      $add88 = $x_0528 - 1 + $mul50 | 0;
      $i_0525 = $bf_clear;
      while (1) {
       $30 = HEAP32[$spans >> 2] | 0;
       $31 = HEAP16[$30 + ($i_0525 << 3) + 2 >> 1] | 0;
       if ($31 << 16 >> 16 < 1) {
        HEAP8[$call_i_i1 + $i_0525 >> 0] = 0;
       } else {
        $bf_load_i = HEAP32[$30 + ($i_0525 << 3) + 4 >> 2] | 0;
        $conv104 = $31 & 65535;
        $and_i = $bf_load_i & 63;
        if (($and_i | 0) == 63) {
         $r_0 = 0;
        } else {
         $r_0 = HEAPU16[$30 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add88 << 2) >> 2] & 16777215) + $and_i << 3) + 2 >> 1] | 0;
        }
        $_ = ($r_0 | 0) == ($conv104 | 0) | 0;
        $and_i_1 = $bf_load_i >>> 6 & 63;
        if (($and_i_1 | 0) == 63) {
         $r_0_1 = 0;
        } else {
         $r_0_1 = HEAPU16[$30 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add88_1 << 2) >> 2] & 16777215) + $and_i_1 << 3) + 2 >> 1] | 0;
        }
        $or_1__ = ($r_0_1 | 0) == ($conv104 | 0) ? $_ | 2 : $_;
        $and_i_2 = $bf_load_i >>> 12 & 63;
        if (($and_i_2 | 0) == 63) {
         $r_0_2 = 0;
        } else {
         $r_0_2 = HEAPU16[$30 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add88_2 << 2) >> 2] & 16777215) + $and_i_2 << 3) + 2 >> 1] | 0;
        }
        $or_2_or_1__ = ($r_0_2 | 0) == ($conv104 | 0) ? $or_1__ | 4 : $or_1__;
        $and_i_3 = $bf_load_i >>> 18 & 63;
        if (($and_i_3 | 0) == 63) {
         $r_0_3 = 0;
        } else {
         $r_0_3 = HEAPU16[$30 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add88_3 << 2) >> 2] & 16777215) + $and_i_3 << 3) + 2 >> 1] | 0;
        }
        HEAP8[$call_i_i1 + $i_0525 >> 0] = (($r_0_3 | 0) == ($conv104 | 0) ? $or_2_or_1__ | 8 : $or_2_or_1__) ^ 15;
       }
       $inc116 = $i_0525 + 1 | 0;
       if (($inc116 | 0) < ($add56 | 0)) {
        $i_0525 = $inc116;
       } else {
        $inc119_pre_phi = $add83_2;
        break;
       }
      }
     }
     if (($inc119_pre_phi | 0) < ($0 | 0)) {
      $x_0528 = $inc119_pre_phi;
     } else {
      $inc122_pre_phi = $add86_1;
      break;
     }
    }
   } else {
    $inc122_pre_phi = $y_0531 + 1 | 0;
   }
   if (($inc122_pre_phi | 0) < ($1 | 0)) {
    $y_0531 = $inc122_pre_phi;
   } else {
    break;
   }
  }
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 5);
 }
 $verts_sroa_36 = 0;
 $call_i1_i = _malloc(1024) | 0;
 $40 = $call_i1_i;
 $verts_sroa_36_0_load = $verts_sroa_36;
 if (($verts_sroa_36_0_load | 0) != 0 & ($call_i1_i | 0) != 0) {
  _memcpy($call_i1_i | 0, 0, $verts_sroa_36_0_load << 2) | 0;
 }
 $verts_sroa_36 = 256;
 $simplified_sroa_73 = 0;
 $call_i1_i28 = _malloc(256) | 0;
 $41 = $call_i1_i28;
 $simplified_sroa_73_0_load841 = $simplified_sroa_73;
 if (($simplified_sroa_73_0_load841 | 0) != 0 & ($call_i1_i28 | 0) != 0) {
  _memcpy($call_i1_i28 | 0, 0, $simplified_sroa_73_0_load841 << 2) | 0;
 }
 $simplified_sroa_73 = 64;
 L60 : do {
  if ($cmp46530) {
   $cmp134513 = ($0 | 0) > 0;
   $cells139 = $chf + 60 | 0;
   $spans171 = $chf + 64 | 0;
   $areas = $chf + 72 | 0;
   $42 = $regs_i_i;
   $arrayidx7_i_i = $regs_i_i | 0;
   $arrayidx97_i_i = $regs_i_i + 12 | 0;
   $arrayidx132_i_i = $regs_i_i + 8 | 0;
   $arrayidx30_i_i = $regs_i_i + 4 | 0;
   $mul154_i = $maxError * $maxError;
   $cmp224_i = ($maxEdgeLen | 0) < 1;
   $43 = $ctx;
   $mul295_i = Math_imul($maxEdgeLen, $maxEdgeLen) | 0;
   $y128_0519 = 0;
   $maxContours_0521 = $cond_i;
   $simplified_sroa_0_0 = $41;
   $simplified_sroa_158_0 = 64;
   $verts_sroa_0_0 = $40;
   $verts_sroa_66_0 = 256;
   L62 : while (1) {
    if ($cmp134513) {
     $mul137 = Math_imul($y128_0519, $0) | 0;
     $x132_0514 = 0;
     $maxContours_1516 = $maxContours_0521;
     $simplified_sroa_0_2 = $simplified_sroa_0_0;
     $simplified_sroa_158_1 = $simplified_sroa_158_0;
     $verts_sroa_0_2 = $verts_sroa_0_0;
     $verts_sroa_66_1 = $verts_sroa_66_0;
     while (1) {
      $bf_load142 = HEAP32[(HEAP32[$cells139 >> 2] | 0) + ($x132_0514 + $mul137 << 2) >> 2] | 0;
      $bf_clear143 = $bf_load142 & 16777215;
      $bf_lshr148 = $bf_load142 >>> 24;
      $add149 = $bf_clear143 + $bf_lshr148 | 0;
      if (($bf_lshr148 | 0) == 0) {
       $maxContours_2_lcssa = $maxContours_1516;
       $simplified_sroa_0_37 = $simplified_sroa_0_2;
       $simplified_sroa_158_48 = $simplified_sroa_158_1;
       $verts_sroa_0_16 = $verts_sroa_0_2;
       $verts_sroa_66_16 = $verts_sroa_66_1;
      } else {
       $i141_0500 = $bf_clear143;
       $maxContours_2503 = $maxContours_1516;
       $simplified_sroa_0_3 = $simplified_sroa_0_2;
       $simplified_sroa_158_2 = $simplified_sroa_158_1;
       $verts_sroa_0_3 = $verts_sroa_0_2;
       $verts_sroa_66_2 = $verts_sroa_66_1;
       while (1) {
        $arrayidx156 = $call_i_i1 + $i141_0500 | 0;
        $47 = HEAP8[$arrayidx156 >> 0] | 0;
        if (($47 << 24 >> 24 | 0) == 0 | ($47 << 24 >> 24 | 0) == 15) {
         HEAP8[$arrayidx156 >> 0] = 0;
         $maxContours_4 = $maxContours_2503;
         $simplified_sroa_0_36 = $simplified_sroa_0_3;
         $simplified_sroa_158_47 = $simplified_sroa_158_2;
         $verts_sroa_0_15 = $verts_sroa_0_3;
         $verts_sroa_66_15 = $verts_sroa_66_2;
        } else {
         $52 = HEAP16[(HEAP32[$spans171 >> 2] | 0) + ($i141_0500 << 3) + 2 >> 1] | 0;
         if ($52 << 16 >> 16 < 1) {
          $maxContours_4 = $maxContours_2503;
          $simplified_sroa_0_36 = $simplified_sroa_0_3;
          $simplified_sroa_158_47 = $simplified_sroa_158_2;
          $verts_sroa_0_15 = $verts_sroa_0_3;
          $verts_sroa_66_15 = $verts_sroa_66_2;
         } else {
          $55 = HEAP8[(HEAP32[$areas >> 2] | 0) + $i141_0500 >> 0] | 0;
          if (($verts_sroa_66_2 | 0) < 0) {
           $56 = $verts_sroa_66_2;
           while (1) {
            $mul_i54 = $56 << 1;
            if (($56 | 0) < 0) {
             $56 = $mul_i54;
            } else {
             break;
            }
           }
           $call_i1_i60 = _malloc($56 << 3) | 0;
           $57 = $call_i1_i60;
           $verts_sroa_36_0_load927 = $verts_sroa_36;
           if (($verts_sroa_36_0_load927 | 0) != 0 & ($call_i1_i60 | 0) != 0) {
            _memcpy($call_i1_i60 | 0, $verts_sroa_0_3 | 0, $verts_sroa_36_0_load927 << 2) | 0;
           }
           if (($verts_sroa_0_3 | 0) == 0) {
            $verts_sroa_0_7 = $57;
            $verts_sroa_66_3 = $mul_i54;
           } else {
            _free($verts_sroa_0_3);
            $verts_sroa_0_7 = $57;
            $verts_sroa_66_3 = $mul_i54;
           }
          } else {
           $verts_sroa_0_7 = $verts_sroa_0_3;
           $verts_sroa_66_3 = $verts_sroa_66_2;
          }
          $verts_sroa_36 = 0;
          if (($simplified_sroa_158_2 | 0) < 0) {
           $60 = $simplified_sroa_158_2;
           while (1) {
            $mul_i84 = $60 << 1;
            if (($60 | 0) < 0) {
             $60 = $mul_i84;
            } else {
             break;
            }
           }
           $call_i1_i90 = _malloc($60 << 3) | 0;
           $61 = $call_i1_i90;
           $simplified_sroa_73_0_load868 = $simplified_sroa_73;
           if (($simplified_sroa_73_0_load868 | 0) != 0 & ($call_i1_i90 | 0) != 0) {
            _memcpy($call_i1_i90 | 0, $simplified_sroa_0_3 | 0, $simplified_sroa_73_0_load868 << 2) | 0;
           }
           if (($simplified_sroa_0_3 | 0) == 0) {
            $simplified_sroa_0_7 = $61;
            $simplified_sroa_158_3 = $mul_i84;
           } else {
            _free($simplified_sroa_0_3);
            $simplified_sroa_0_7 = $61;
            $simplified_sroa_158_3 = $mul_i84;
           }
          } else {
           $simplified_sroa_0_7 = $simplified_sroa_0_3;
           $simplified_sroa_158_3 = $simplified_sroa_158_2;
          }
          $simplified_sroa_73 = 0;
          if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
           FUNCTION_TABLE_vii[HEAP32[(HEAP32[$43 >> 2] | 0) + 20 >> 2] & 127]($ctx, 5);
          }
          $conv_i = HEAPU8[$arrayidx156 >> 0] | 0;
          $dir_0_i = 0;
          while (1) {
           if ((1 << ($dir_0_i & 255) & $conv_i | 0) == 0) {
            $dir_0_i = $dir_0_i + 1 & 255;
           } else {
            break;
           }
          }
          $68 = HEAP8[(HEAP32[$areas >> 2] | 0) + $i141_0500 >> 0] | 0;
          $x_addr_0_i = $x132_0514;
          $y_addr_0_i = $y128_0519;
          $i_addr_0_i = $i141_0500;
          $dir_1_i = $dir_0_i;
          $iter_0_i = 0;
          $verts_sroa_0_8 = $verts_sroa_0_7;
          $verts_sroa_66_4 = $verts_sroa_66_3;
          while (1) {
           $inc4_i = $iter_0_i + 1 | 0;
           if (($inc4_i | 0) >= 4e4) {
            $verts_sroa_0_14 = $verts_sroa_0_8;
            $verts_sroa_66_14 = $verts_sroa_66_4;
            break;
           }
           $arrayidx7_i = $call_i_i1 + $i_addr_0_i | 0;
           $conv9_i = $dir_1_i & 255;
           $shl10_i = 1 << $conv9_i;
           if ((HEAPU8[$arrayidx7_i >> 0] & $shl10_i | 0) == 0) {
            $and_i68_i = $conv9_i & 3;
            $add64_i = (HEAP32[11520 + ($and_i68_i << 2) >> 2] | 0) + $x_addr_0_i | 0;
            $add67_i = (HEAP32[11504 + ($and_i68_i << 2) >> 2] | 0) + $y_addr_0_i | 0;
            $and_i66_i = (HEAP32[(HEAP32[$spans171 >> 2] | 0) + ($i_addr_0_i << 3) + 4 >> 2] & 16777215) >>> (($conv9_i * 6 | 0) >>> 0) & 63;
            if (($and_i66_i | 0) == 63) {
             $verts_sroa_0_14 = $verts_sroa_0_8;
             $verts_sroa_66_14 = $verts_sroa_66_4;
             break;
            }
            $add77_i = (Math_imul(HEAP32[$width >> 2] | 0, $add67_i) | 0) + $add64_i | 0;
            $add84_i = (HEAP32[(HEAP32[$cells139 >> 2] | 0) + ($add77_i << 2) >> 2] & 16777215) + $and_i66_i | 0;
            if (($add84_i | 0) == -1) {
             $verts_sroa_0_14 = $verts_sroa_0_8;
             $verts_sroa_66_14 = $verts_sroa_66_4;
             break;
            }
            $x_addr_1_i = $add64_i;
            $y_addr_1_i = $add67_i;
            $i_addr_1_i = $add84_i;
            $dir_2_in_i = $dir_1_i + 3 & 255;
            $verts_sroa_0_13 = $verts_sroa_0_8;
            $verts_sroa_66_13 = $verts_sroa_66_4;
           } else {
            $70 = HEAP32[$spans171 >> 2] | 0;
            $conv_i_i = HEAPU16[$70 + ($i_addr_0_i << 3) >> 1] | 0;
            $and_i_i = $conv9_i + 1 & 3;
            _memset($42 | 0, 0, 16) | 0;
            $73 = HEAP32[$areas >> 2] | 0;
            HEAP32[$arrayidx7_i_i >> 2] = HEAPU8[$73 + $i_addr_0_i >> 0] << 16 | HEAPU16[$70 + ($i_addr_0_i << 3) + 2 >> 1];
            $mul_i_i_i = $conv9_i * 6 | 0;
            $bf_clear_i_i_i = HEAP32[$70 + ($i_addr_0_i << 3) + 4 >> 2] & 16777215;
            $and_i_i_i = $bf_clear_i_i_i >>> ($mul_i_i_i >>> 0) & 63;
            $cmp_i_i = ($and_i_i_i | 0) == 63;
            if ($cmp_i_i) {
             $ch_0_i_i = $conv_i_i;
             $mul_i106_pre_phi_i_i = $and_i_i * 6 | 0;
            } else {
             $and_i138_i_i = $conv9_i & 3;
             $add9_i_i = (HEAP32[11520 + ($and_i138_i_i << 2) >> 2] | 0) + $x_addr_0_i | 0;
             $add11_i_i = (HEAP32[11504 + ($and_i138_i_i << 2) >> 2] | 0) + $y_addr_0_i | 0;
             $78 = HEAP32[$width >> 2] | 0;
             $add12_i_i = (Math_imul($add11_i_i, $78) | 0) + $add9_i_i | 0;
             $79 = HEAP32[$cells139 >> 2] | 0;
             $add15_i_i = (HEAP32[$79 + ($add12_i_i << 2) >> 2] & 16777215) + $and_i_i_i | 0;
             $conv19_i_i = HEAPU16[$70 + ($add15_i_i << 3) >> 1] | 0;
             $cond_i129_i_i = $conv_i_i >>> 0 > $conv19_i_i >>> 0 ? $conv_i_i : $conv19_i_i;
             HEAP32[$arrayidx30_i_i >> 2] = HEAPU8[$73 + $add15_i_i >> 0] << 16 | HEAPU16[$70 + ($add15_i_i << 3) + 2 >> 1];
             $mul_i122_i_i = $and_i_i * 6 | 0;
             $and_i127_i_i = (HEAP32[$70 + ($add15_i_i << 3) + 4 >> 2] & 16777215) >>> ($mul_i122_i_i >>> 0) & 63;
             if (($and_i127_i_i | 0) == 63) {
              $ch_0_i_i = $cond_i129_i_i;
              $mul_i106_pre_phi_i_i = $mul_i122_i_i;
             } else {
              $87 = $79 + ((HEAP32[11520 + ($and_i_i << 2) >> 2] | 0) + $add9_i_i + (Math_imul((HEAP32[11504 + ($and_i_i << 2) >> 2] | 0) + $add11_i_i | 0, $78) | 0) << 2) | 0;
              $add46_i_i = (HEAP32[$87 >> 2] & 16777215) + $and_i127_i_i | 0;
              $conv50_i_i = HEAPU16[$70 + ($add46_i_i << 3) >> 1] | 0;
              HEAP32[$arrayidx132_i_i >> 2] = HEAPU8[$73 + $add46_i_i >> 0] << 16 | HEAPU16[$70 + ($add46_i_i << 3) + 2 >> 1];
              $ch_0_i_i = $cond_i129_i_i >>> 0 > $conv50_i_i >>> 0 ? $cond_i129_i_i : $conv50_i_i;
              $mul_i106_pre_phi_i_i = $mul_i122_i_i;
             }
            }
            $and_i111_i_i = $bf_clear_i_i_i >>> ($mul_i106_pre_phi_i_i >>> 0) & 63;
            if (($and_i111_i_i | 0) == 63) {
             $ch_1_i_i = $ch_0_i_i;
            } else {
             $add68_i_i = (HEAP32[11520 + ($and_i_i << 2) >> 2] | 0) + $x_addr_0_i | 0;
             $add71_i_i = (HEAP32[11504 + ($and_i_i << 2) >> 2] | 0) + $y_addr_0_i | 0;
             $93 = HEAP32[$width >> 2] | 0;
             $add75_i_i = (Math_imul($add71_i_i, $93) | 0) + $add68_i_i | 0;
             $94 = HEAP32[$cells139 >> 2] | 0;
             $add81_i_i = (HEAP32[$94 + ($add75_i_i << 2) >> 2] & 16777215) + $and_i111_i_i | 0;
             $conv86_i_i = HEAPU16[$70 + ($add81_i_i << 3) >> 1] | 0;
             $cond_i97_i_i = ($ch_0_i_i | 0) > ($conv86_i_i | 0) ? $ch_0_i_i : $conv86_i_i;
             HEAP32[$arrayidx97_i_i >> 2] = HEAPU8[$73 + $add81_i_i >> 0] << 16 | HEAPU16[$70 + ($add81_i_i << 3) + 2 >> 1];
             $and_i95_i_i = (HEAP32[$70 + ($add81_i_i << 3) + 4 >> 2] & 16777215) >>> ($mul_i_i_i >>> 0) & 63;
             if (($and_i95_i_i | 0) == 63) {
              $ch_1_i_i = $cond_i97_i_i;
             } else {
              $and_i88_i_i = $conv9_i & 3;
              $102 = $94 + ((HEAP32[11520 + ($and_i88_i_i << 2) >> 2] | 0) + $add68_i_i + (Math_imul((HEAP32[11504 + ($and_i88_i_i << 2) >> 2] | 0) + $add71_i_i | 0, $93) | 0) << 2) | 0;
              $add116_i_i = (HEAP32[$102 >> 2] & 16777215) + $and_i95_i_i | 0;
              $conv121_i_i = HEAPU16[$70 + ($add116_i_i << 3) >> 1] | 0;
              HEAP32[$arrayidx132_i_i >> 2] = HEAPU8[$73 + $add116_i_i >> 0] << 16 | HEAPU16[$70 + ($add116_i_i << 3) + 2 >> 1];
              $ch_1_i_i = ($cond_i97_i_i | 0) > ($conv121_i_i | 0) ? $cond_i97_i_i : $conv121_i_i;
             }
            }
            $j_0_i_i = 0;
            while (1) {
             if (($j_0_i_i | 0) >= 4) {
              $111 = 0;
              break;
             }
             $add136_i_i = $j_0_i_i + 1 | 0;
             $106 = HEAP32[$regs_i_i + ($j_0_i_i << 2) >> 2] | 0;
             $107 = HEAP32[$regs_i_i + (($add136_i_i & 3) << 2) >> 2] | 0;
             $108 = HEAP32[$regs_i_i + (($j_0_i_i + 2 & 3) << 2) >> 2] | 0;
             $109 = HEAP32[$regs_i_i + (($j_0_i_i + 3 & 3) << 2) >> 2] | 0;
             if (($106 | 0) == 0) {
              $110 = 1;
             } else {
              $110 = ($109 | 0) != 0 & (($108 | 0) != 0 & ($107 | 0) != 0) ^ 1;
             }
             if (($106 & 32768 & $107 | 0) == 0 | ($106 | 0) != ($107 | 0) | (($109 | $108) & 32768 | 0) != 0 | ($109 ^ $108) >>> 0 > 65535 >>> 0 | $110) {
              $j_0_i_i = $add136_i_i;
             } else {
              $111 = 1;
              break;
             }
            }
            if (($conv9_i | 0) == 0) {
             $px_0_i = $x_addr_0_i;
             $pz_0_i = $y_addr_0_i + 1 | 0;
            } else if (($conv9_i | 0) == 1) {
             $px_0_i = $x_addr_0_i + 1 | 0;
             $pz_0_i = $y_addr_0_i + 1 | 0;
            } else if (($conv9_i | 0) == 2) {
             $px_0_i = $x_addr_0_i + 1 | 0;
             $pz_0_i = $y_addr_0_i;
            } else {
             $px_0_i = $x_addr_0_i;
             $pz_0_i = $y_addr_0_i;
            }
            if ($cmp_i_i) {
             $isAreaBorder_0_off0_i = 0;
             $r_0_i = 0;
            } else {
             $and_i83_i = $conv9_i & 3;
             $add30_i = (HEAP32[11520 + ($and_i83_i << 2) >> 2] | 0) + $x_addr_0_i + (Math_imul((HEAP32[11504 + ($and_i83_i << 2) >> 2] | 0) + $y_addr_0_i | 0, HEAP32[$width >> 2] | 0) | 0) | 0;
             $add34_i = (HEAP32[(HEAP32[$cells139 >> 2] | 0) + ($add30_i << 2) >> 2] & 16777215) + $and_i_i_i | 0;
             $isAreaBorder_0_off0_i = $68 << 24 >> 24 != (HEAP8[$73 + $add34_i >> 0] | 0);
             $r_0_i = HEAPU16[$70 + ($add34_i << 3) + 2 >> 1] | 0;
            }
            $r_0_or_i = $111 << 24 >> 24 == 0 ? $r_0_i : $r_0_i | 65536;
            $r_2_i = $isAreaBorder_0_off0_i ? $r_0_or_i | 131072 : $r_0_or_i;
            $verts_sroa_36_0_load928 = $verts_sroa_36;
            $add_i93_i = $verts_sroa_36_0_load928 + 1 | 0;
            if (($verts_sroa_66_4 | 0) < ($add_i93_i | 0)) {
             if (($verts_sroa_66_4 | 0) == 0) {
              $verts_sroa_66_5 = $add_i93_i;
             } else {
              $119 = $verts_sroa_66_4;
              while (1) {
               $mul_i114 = $119 << 1;
               if (($mul_i114 | 0) < ($add_i93_i | 0)) {
                $119 = $mul_i114;
               } else {
                $verts_sroa_66_5 = $mul_i114;
                break;
               }
              }
             }
             $call_i1_i120 = _malloc($verts_sroa_66_5 << 2) | 0;
             $120 = $call_i1_i120;
             $verts_sroa_36_0_load933 = $verts_sroa_36;
             if (($verts_sroa_36_0_load933 | 0) != 0 & ($call_i1_i120 | 0) != 0) {
              _memcpy($call_i1_i120 | 0, $verts_sroa_0_8 | 0, $verts_sroa_36_0_load933 << 2) | 0;
             }
             if (($verts_sroa_0_8 | 0) == 0) {
              $verts_sroa_0_9 = $120;
              $verts_sroa_66_6 = $verts_sroa_66_5;
             } else {
              _free($verts_sroa_0_8);
              $verts_sroa_0_9 = $120;
              $verts_sroa_66_6 = $verts_sroa_66_5;
             }
            } else {
             $verts_sroa_0_9 = $verts_sroa_0_8;
             $verts_sroa_66_6 = $verts_sroa_66_4;
            }
            $verts_sroa_36 = $add_i93_i;
            HEAP32[$verts_sroa_0_9 + ($verts_sroa_36_0_load928 << 2) >> 2] = $px_0_i;
            $verts_sroa_36_0_load937 = $verts_sroa_36;
            $add_i86_i = $verts_sroa_36_0_load937 + 1 | 0;
            if (($verts_sroa_66_6 | 0) < ($add_i86_i | 0)) {
             if (($verts_sroa_66_6 | 0) == 0) {
              $verts_sroa_66_7 = $add_i86_i;
             } else {
              $123 = $verts_sroa_66_6;
              while (1) {
               $mul_i144 = $123 << 1;
               if (($mul_i144 | 0) < ($add_i86_i | 0)) {
                $123 = $mul_i144;
               } else {
                $verts_sroa_66_7 = $mul_i144;
                break;
               }
              }
             }
             $call_i1_i150 = _malloc($verts_sroa_66_7 << 2) | 0;
             $124 = $call_i1_i150;
             $verts_sroa_36_0_load939 = $verts_sroa_36;
             if (($verts_sroa_36_0_load939 | 0) != 0 & ($call_i1_i150 | 0) != 0) {
              _memcpy($call_i1_i150 | 0, $verts_sroa_0_9 | 0, $verts_sroa_36_0_load939 << 2) | 0;
             }
             if (($verts_sroa_0_9 | 0) == 0) {
              $verts_sroa_0_10 = $124;
              $verts_sroa_66_8 = $verts_sroa_66_7;
             } else {
              _free($verts_sroa_0_9);
              $verts_sroa_0_10 = $124;
              $verts_sroa_66_8 = $verts_sroa_66_7;
             }
            } else {
             $verts_sroa_0_10 = $verts_sroa_0_9;
             $verts_sroa_66_8 = $verts_sroa_66_6;
            }
            $verts_sroa_36 = $add_i86_i;
            HEAP32[$verts_sroa_0_10 + ($verts_sroa_36_0_load937 << 2) >> 2] = $ch_1_i_i;
            $verts_sroa_36_0_load942 = $verts_sroa_36;
            $add_i79_i = $verts_sroa_36_0_load942 + 1 | 0;
            if (($verts_sroa_66_8 | 0) < ($add_i79_i | 0)) {
             if (($verts_sroa_66_8 | 0) == 0) {
              $verts_sroa_66_9 = $add_i79_i;
             } else {
              $127 = $verts_sroa_66_8;
              while (1) {
               $mul_i174 = $127 << 1;
               if (($mul_i174 | 0) < ($add_i79_i | 0)) {
                $127 = $mul_i174;
               } else {
                $verts_sroa_66_9 = $mul_i174;
                break;
               }
              }
             }
             $call_i1_i180 = _malloc($verts_sroa_66_9 << 2) | 0;
             $128 = $call_i1_i180;
             $verts_sroa_36_0_load943 = $verts_sroa_36;
             if (($verts_sroa_36_0_load943 | 0) != 0 & ($call_i1_i180 | 0) != 0) {
              _memcpy($call_i1_i180 | 0, $verts_sroa_0_10 | 0, $verts_sroa_36_0_load943 << 2) | 0;
             }
             if (($verts_sroa_0_10 | 0) == 0) {
              $verts_sroa_0_11 = $128;
              $verts_sroa_66_10 = $verts_sroa_66_9;
             } else {
              _free($verts_sroa_0_10);
              $verts_sroa_0_11 = $128;
              $verts_sroa_66_10 = $verts_sroa_66_9;
             }
            } else {
             $verts_sroa_0_11 = $verts_sroa_0_10;
             $verts_sroa_66_10 = $verts_sroa_66_8;
            }
            $verts_sroa_36 = $add_i79_i;
            HEAP32[$verts_sroa_0_11 + ($verts_sroa_36_0_load942 << 2) >> 2] = $pz_0_i;
            $verts_sroa_36_0_load940 = $verts_sroa_36;
            $add_i70_i = $verts_sroa_36_0_load940 + 1 | 0;
            if (($verts_sroa_66_10 | 0) < ($add_i70_i | 0)) {
             if (($verts_sroa_66_10 | 0) == 0) {
              $verts_sroa_66_11 = $add_i70_i;
             } else {
              $131 = $verts_sroa_66_10;
              while (1) {
               $mul_i205 = $131 << 1;
               if (($mul_i205 | 0) < ($add_i70_i | 0)) {
                $131 = $mul_i205;
               } else {
                $verts_sroa_66_11 = $mul_i205;
                break;
               }
              }
             }
             $call_i1_i211 = _malloc($verts_sroa_66_11 << 2) | 0;
             $132 = $call_i1_i211;
             $verts_sroa_36_0_load931 = $verts_sroa_36;
             if (($verts_sroa_36_0_load931 | 0) != 0 & ($call_i1_i211 | 0) != 0) {
              _memcpy($call_i1_i211 | 0, $verts_sroa_0_11 | 0, $verts_sroa_36_0_load931 << 2) | 0;
             }
             if (($verts_sroa_0_11 | 0) == 0) {
              $verts_sroa_0_12 = $132;
              $verts_sroa_66_12 = $verts_sroa_66_11;
             } else {
              _free($verts_sroa_0_11);
              $verts_sroa_0_12 = $132;
              $verts_sroa_66_12 = $verts_sroa_66_11;
             }
            } else {
             $verts_sroa_0_12 = $verts_sroa_0_11;
             $verts_sroa_66_12 = $verts_sroa_66_10;
            }
            $verts_sroa_36 = $add_i70_i;
            HEAP32[$verts_sroa_0_12 + ($verts_sroa_36_0_load940 << 2) >> 2] = $r_2_i;
            HEAP8[$arrayidx7_i >> 0] = HEAPU8[$arrayidx7_i >> 0] & ($shl10_i ^ 255);
            $x_addr_1_i = $x_addr_0_i;
            $y_addr_1_i = $y_addr_0_i;
            $i_addr_1_i = $i_addr_0_i;
            $dir_2_in_i = $dir_1_i + 1 & 255;
            $verts_sroa_0_13 = $verts_sroa_0_12;
            $verts_sroa_66_13 = $verts_sroa_66_12;
           }
           $dir_2_i = $dir_2_in_i & 3;
           if (($i_addr_1_i | 0) == ($i141_0500 | 0) & $dir_0_i << 24 >> 24 == $dir_2_i << 24 >> 24) {
            $verts_sroa_0_14 = $verts_sroa_0_13;
            $verts_sroa_66_14 = $verts_sroa_66_13;
            break;
           } else {
            $x_addr_0_i = $x_addr_1_i;
            $y_addr_0_i = $y_addr_1_i;
            $i_addr_0_i = $i_addr_1_i;
            $dir_1_i = $dir_2_i;
            $iter_0_i = $inc4_i;
            $verts_sroa_0_8 = $verts_sroa_0_13;
            $verts_sroa_66_4 = $verts_sroa_66_13;
           }
          }
          if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
           FUNCTION_TABLE_vii[HEAP32[(HEAP32[$43 >> 2] | 0) + 24 >> 2] & 127]($ctx, 5);
           if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
            FUNCTION_TABLE_vii[HEAP32[(HEAP32[$43 >> 2] | 0) + 20 >> 2] & 127]($ctx, 6);
           }
          }
          $verts_sroa_36_0_load935 = $verts_sroa_36;
          L182 : do {
           if (($verts_sroa_36_0_load935 | 0) > 0) {
            $i_0539_i = 0;
            while (1) {
             $add3_i = $i_0539_i + 4 | 0;
             if ((HEAP32[$verts_sroa_0_14 + (($i_0539_i | 3) << 2) >> 2] & 65535 | 0) != 0) {
              break;
             }
             if (($add3_i | 0) < ($verts_sroa_36_0_load935 | 0)) {
              $i_0539_i = $add3_i;
             } else {
              $simplified_sroa_0_14 = $simplified_sroa_0_7;
              $simplified_sroa_158_14 = $simplified_sroa_158_3;
              break L182;
             }
            }
            $div_i = ($verts_sroa_36_0_load935 | 0) / 4 | 0;
            if (($verts_sroa_36_0_load935 | 0) > 3) {
             $i5_0533_i = 0;
             $simplified_sroa_0_8 = $simplified_sroa_0_7;
             $simplified_sroa_158_4 = $simplified_sroa_158_3;
             while (1) {
              $add10_i = $i5_0533_i + 1 | 0;
              $mul_i297 = $i5_0533_i << 2;
              if (((HEAP32[$verts_sroa_0_14 + (((($add10_i | 0) % ($div_i | 0) | 0) << 2 | 3) << 2) >> 2] ^ HEAP32[$verts_sroa_0_14 + (($mul_i297 | 3) << 2) >> 2]) & 196607 | 0) == 0) {
               $simplified_sroa_0_13 = $simplified_sroa_0_8;
               $simplified_sroa_158_13 = $simplified_sroa_158_4;
              } else {
               $152 = HEAP32[$verts_sroa_0_14 + ($mul_i297 << 2) >> 2] | 0;
               $simplified_sroa_73_0_load870 = $simplified_sroa_73;
               $add_i444_i = $simplified_sroa_73_0_load870 + 1 | 0;
               if (($simplified_sroa_158_4 | 0) < ($add_i444_i | 0)) {
                if (($simplified_sroa_158_4 | 0) == 0) {
                 $simplified_sroa_158_5 = $add_i444_i;
                } else {
                 $153 = $simplified_sroa_158_4;
                 while (1) {
                  $mul_i236 = $153 << 1;
                  if (($mul_i236 | 0) < ($add_i444_i | 0)) {
                   $153 = $mul_i236;
                  } else {
                   $simplified_sroa_158_5 = $mul_i236;
                   break;
                  }
                 }
                }
                $call_i1_i242 = _malloc($simplified_sroa_158_5 << 2) | 0;
                $154 = $call_i1_i242;
                $simplified_sroa_73_0_load876 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load876 | 0) != 0 & ($call_i1_i242 | 0) != 0) {
                 _memcpy($call_i1_i242 | 0, $simplified_sroa_0_8 | 0, $simplified_sroa_73_0_load876 << 2) | 0;
                }
                if (($simplified_sroa_0_8 | 0) == 0) {
                 $simplified_sroa_0_9 = $154;
                 $simplified_sroa_158_6 = $simplified_sroa_158_5;
                } else {
                 _free($simplified_sroa_0_8);
                 $simplified_sroa_0_9 = $154;
                 $simplified_sroa_158_6 = $simplified_sroa_158_5;
                }
               } else {
                $simplified_sroa_0_9 = $simplified_sroa_0_8;
                $simplified_sroa_158_6 = $simplified_sroa_158_4;
               }
               $simplified_sroa_73 = $add_i444_i;
               HEAP32[$simplified_sroa_0_9 + ($simplified_sroa_73_0_load870 << 2) >> 2] = $152;
               $157 = HEAP32[$verts_sroa_0_14 + (($mul_i297 | 1) << 2) >> 2] | 0;
               $simplified_sroa_73_0_load852 = $simplified_sroa_73;
               $add_i474_i = $simplified_sroa_73_0_load852 + 1 | 0;
               if (($simplified_sroa_158_6 | 0) < ($add_i474_i | 0)) {
                if (($simplified_sroa_158_6 | 0) == 0) {
                 $simplified_sroa_158_7 = $add_i474_i;
                } else {
                 $158 = $simplified_sroa_158_6;
                 while (1) {
                  $mul_i266 = $158 << 1;
                  if (($mul_i266 | 0) < ($add_i474_i | 0)) {
                   $158 = $mul_i266;
                  } else {
                   $simplified_sroa_158_7 = $mul_i266;
                   break;
                  }
                 }
                }
                $call_i1_i272 = _malloc($simplified_sroa_158_7 << 2) | 0;
                $159 = $call_i1_i272;
                $simplified_sroa_73_0_load859 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load859 | 0) != 0 & ($call_i1_i272 | 0) != 0) {
                 _memcpy($call_i1_i272 | 0, $simplified_sroa_0_9 | 0, $simplified_sroa_73_0_load859 << 2) | 0;
                }
                if (($simplified_sroa_0_9 | 0) == 0) {
                 $simplified_sroa_0_10 = $159;
                 $simplified_sroa_158_8 = $simplified_sroa_158_7;
                } else {
                 _free($simplified_sroa_0_9);
                 $simplified_sroa_0_10 = $159;
                 $simplified_sroa_158_8 = $simplified_sroa_158_7;
                }
               } else {
                $simplified_sroa_0_10 = $simplified_sroa_0_9;
                $simplified_sroa_158_8 = $simplified_sroa_158_6;
               }
               $simplified_sroa_73 = $add_i474_i;
               HEAP32[$simplified_sroa_0_10 + ($simplified_sroa_73_0_load852 << 2) >> 2] = $157;
               $162 = HEAP32[$verts_sroa_0_14 + (($mul_i297 | 2) << 2) >> 2] | 0;
               $simplified_sroa_73_0_load835 = $simplified_sroa_73;
               $add_i481_i = $simplified_sroa_73_0_load835 + 1 | 0;
               if (($simplified_sroa_158_8 | 0) < ($add_i481_i | 0)) {
                if (($simplified_sroa_158_8 | 0) == 0) {
                 $simplified_sroa_158_9 = $add_i481_i;
                } else {
                 $163 = $simplified_sroa_158_8;
                 while (1) {
                  $mul_i296 = $163 << 1;
                  if (($mul_i296 | 0) < ($add_i481_i | 0)) {
                   $163 = $mul_i296;
                  } else {
                   $simplified_sroa_158_9 = $mul_i296;
                   break;
                  }
                 }
                }
                $call_i1_i302 = _malloc($simplified_sroa_158_9 << 2) | 0;
                $164 = $call_i1_i302;
                $simplified_sroa_73_0_load843 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load843 | 0) != 0 & ($call_i1_i302 | 0) != 0) {
                 _memcpy($call_i1_i302 | 0, $simplified_sroa_0_10 | 0, $simplified_sroa_73_0_load843 << 2) | 0;
                }
                if (($simplified_sroa_0_10 | 0) == 0) {
                 $simplified_sroa_0_11 = $164;
                 $simplified_sroa_158_10 = $simplified_sroa_158_9;
                } else {
                 _free($simplified_sroa_0_10);
                 $simplified_sroa_0_11 = $164;
                 $simplified_sroa_158_10 = $simplified_sroa_158_9;
                }
               } else {
                $simplified_sroa_0_11 = $simplified_sroa_0_10;
                $simplified_sroa_158_10 = $simplified_sroa_158_8;
               }
               $simplified_sroa_73 = $add_i481_i;
               HEAP32[$simplified_sroa_0_11 + ($simplified_sroa_73_0_load835 << 2) >> 2] = $162;
               $simplified_sroa_73_0_load831 = $simplified_sroa_73;
               $add_i469_i = $simplified_sroa_73_0_load831 + 1 | 0;
               if (($simplified_sroa_158_10 | 0) < ($add_i469_i | 0)) {
                if (($simplified_sroa_158_10 | 0) == 0) {
                 $simplified_sroa_158_11 = $add_i469_i;
                } else {
                 $167 = $simplified_sroa_158_10;
                 while (1) {
                  $mul_i326 = $167 << 1;
                  if (($mul_i326 | 0) < ($add_i469_i | 0)) {
                   $167 = $mul_i326;
                  } else {
                   $simplified_sroa_158_11 = $mul_i326;
                   break;
                  }
                 }
                }
                $call_i1_i332 = _malloc($simplified_sroa_158_11 << 2) | 0;
                $168 = $call_i1_i332;
                $simplified_sroa_73_0_load861 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load861 | 0) != 0 & ($call_i1_i332 | 0) != 0) {
                 _memcpy($call_i1_i332 | 0, $simplified_sroa_0_11 | 0, $simplified_sroa_73_0_load861 << 2) | 0;
                }
                if (($simplified_sroa_0_11 | 0) == 0) {
                 $simplified_sroa_0_12 = $168;
                 $simplified_sroa_158_12 = $simplified_sroa_158_11;
                } else {
                 _free($simplified_sroa_0_11);
                 $simplified_sroa_0_12 = $168;
                 $simplified_sroa_158_12 = $simplified_sroa_158_11;
                }
               } else {
                $simplified_sroa_0_12 = $simplified_sroa_0_11;
                $simplified_sroa_158_12 = $simplified_sroa_158_10;
               }
               $simplified_sroa_73 = $add_i469_i;
               HEAP32[$simplified_sroa_0_12 + ($simplified_sroa_73_0_load831 << 2) >> 2] = $i5_0533_i;
               $simplified_sroa_0_13 = $simplified_sroa_0_12;
               $simplified_sroa_158_13 = $simplified_sroa_158_12;
              }
              if (($add10_i | 0) < ($div_i | 0)) {
               $i5_0533_i = $add10_i;
               $simplified_sroa_0_8 = $simplified_sroa_0_13;
               $simplified_sroa_158_4 = $simplified_sroa_158_13;
              } else {
               $simplified_sroa_0_14 = $simplified_sroa_0_13;
               $simplified_sroa_158_14 = $simplified_sroa_158_13;
               break;
              }
             }
            } else {
             $simplified_sroa_0_14 = $simplified_sroa_0_7;
             $simplified_sroa_158_14 = $simplified_sroa_158_3;
            }
           } else {
            $simplified_sroa_0_14 = $simplified_sroa_0_7;
            $simplified_sroa_158_14 = $simplified_sroa_158_3;
           }
          } while (0);
          $simplified_sroa_73_0_load839 = $simplified_sroa_73;
          if (($simplified_sroa_73_0_load839 | 0) == 0) {
           $171 = HEAP32[$verts_sroa_0_14 >> 2] | 0;
           $172 = HEAP32[$verts_sroa_0_14 + 4 >> 2] | 0;
           $173 = HEAP32[$verts_sroa_0_14 + 8 >> 2] | 0;
           $verts_sroa_36_0_load934 = $verts_sroa_36;
           L239 : do {
            if (($verts_sroa_36_0_load934 | 0) > 0) {
             $i54_0515_i = 0;
             $uri_0516_i = 0;
             $urz_0517_i = $173;
             $ury_0518_i = $172;
             $urx_0519_i = $171;
             $lli_0520_i = 0;
             $llz_0521_i = $173;
             $lly_0522_i = $172;
             $llx_0523_i = $171;
             $174 = $171;
             while (1) {
              $175 = HEAP32[$verts_sroa_0_14 + (($i54_0515_i | 1) << 2) >> 2] | 0;
              $176 = HEAP32[$verts_sroa_0_14 + (($i54_0515_i | 2) << 2) >> 2] | 0;
              if (($174 | 0) < ($llx_0523_i | 0)) {
               label = 161;
              } else {
               if (($174 | 0) == ($llx_0523_i | 0) & ($176 | 0) < ($llz_0521_i | 0)) {
                label = 161;
               } else {
                $llx_1_i = $llx_0523_i;
                $lly_1_i = $lly_0522_i;
                $llz_1_i = $llz_0521_i;
                $lli_1_i = $lli_0520_i;
               }
              }
              if ((label | 0) == 161) {
               label = 0;
               $llx_1_i = $174;
               $lly_1_i = $175;
               $llz_1_i = $176;
               $lli_1_i = ($i54_0515_i | 0) / 4 | 0;
              }
              if (($174 | 0) > ($urx_0519_i | 0)) {
               label = 164;
              } else {
               if (($174 | 0) == ($urx_0519_i | 0) & ($176 | 0) > ($urz_0517_i | 0)) {
                label = 164;
               } else {
                $urx_1_i = $urx_0519_i;
                $ury_1_i = $ury_0518_i;
                $urz_1_i = $urz_0517_i;
                $uri_1_i = $uri_0516_i;
               }
              }
              if ((label | 0) == 164) {
               label = 0;
               $urx_1_i = $174;
               $ury_1_i = $175;
               $urz_1_i = $176;
               $uri_1_i = ($i54_0515_i | 0) / 4 | 0;
              }
              $add81_i = $i54_0515_i + 4 | 0;
              if (($add81_i | 0) >= ($verts_sroa_36_0_load934 | 0)) {
               $uri_0_lcssa_i = $uri_1_i;
               $urz_0_lcssa_i = $urz_1_i;
               $ury_0_lcssa_i = $ury_1_i;
               $urx_0_lcssa_i = $urx_1_i;
               $lli_0_lcssa_i = $lli_1_i;
               $llz_0_lcssa_i = $llz_1_i;
               $lly_0_lcssa_i = $lly_1_i;
               $llx_0_lcssa_i = $llx_1_i;
               break L239;
              }
              $i54_0515_i = $add81_i;
              $uri_0516_i = $uri_1_i;
              $urz_0517_i = $urz_1_i;
              $ury_0518_i = $ury_1_i;
              $urx_0519_i = $urx_1_i;
              $lli_0520_i = $lli_1_i;
              $llz_0521_i = $llz_1_i;
              $lly_0522_i = $lly_1_i;
              $llx_0523_i = $llx_1_i;
              $174 = HEAP32[$verts_sroa_0_14 + ($add81_i << 2) >> 2] | 0;
             }
            } else {
             $uri_0_lcssa_i = 0;
             $urz_0_lcssa_i = $173;
             $ury_0_lcssa_i = $172;
             $urx_0_lcssa_i = $171;
             $lli_0_lcssa_i = 0;
             $llz_0_lcssa_i = $173;
             $lly_0_lcssa_i = $172;
             $llx_0_lcssa_i = $171;
            }
           } while (0);
           if (($simplified_sroa_158_14 | 0) < 1) {
            if (($simplified_sroa_158_14 | 0) == 0) {
             $_lcssa_i360 = 4;
             $simplified_sroa_158_15 = 1;
            } else {
             $177 = $simplified_sroa_158_14;
             while (1) {
              $mul_i356 = $177 << 1;
              if (($177 | 0) < 1) {
               $177 = $mul_i356;
              } else {
               break;
              }
             }
             $_lcssa_i360 = $177 << 3;
             $simplified_sroa_158_15 = $mul_i356;
            }
            $call_i1_i362 = _malloc($_lcssa_i360) | 0;
            $178 = $call_i1_i362;
            $simplified_sroa_73_0_load834 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load834 | 0) != 0 & ($call_i1_i362 | 0) != 0) {
             _memcpy($call_i1_i362 | 0, $simplified_sroa_0_14 | 0, $simplified_sroa_73_0_load834 << 2) | 0;
            }
            if (($simplified_sroa_0_14 | 0) == 0) {
             $simplified_sroa_0_15 = $178;
             $simplified_sroa_158_16 = $simplified_sroa_158_15;
            } else {
             _free($simplified_sroa_0_14);
             $simplified_sroa_0_15 = $178;
             $simplified_sroa_158_16 = $simplified_sroa_158_15;
            }
           } else {
            $simplified_sroa_0_15 = $simplified_sroa_0_14;
            $simplified_sroa_158_16 = $simplified_sroa_158_14;
           }
           $simplified_sroa_73 = 1;
           HEAP32[$simplified_sroa_0_15 >> 2] = $llx_0_lcssa_i;
           $simplified_sroa_73_0_load849 = $simplified_sroa_73;
           $add_i432_i = $simplified_sroa_73_0_load849 + 1 | 0;
           if (($simplified_sroa_158_16 | 0) < ($add_i432_i | 0)) {
            if (($simplified_sroa_158_16 | 0) == 0) {
             $simplified_sroa_158_17 = $add_i432_i;
            } else {
             $181 = $simplified_sroa_158_16;
             while (1) {
              $mul_i386 = $181 << 1;
              if (($mul_i386 | 0) < ($add_i432_i | 0)) {
               $181 = $mul_i386;
              } else {
               $simplified_sroa_158_17 = $mul_i386;
               break;
              }
             }
            }
            $call_i1_i392 = _malloc($simplified_sroa_158_17 << 2) | 0;
            $182 = $call_i1_i392;
            $simplified_sroa_73_0_load842 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load842 | 0) != 0 & ($call_i1_i392 | 0) != 0) {
             _memcpy($call_i1_i392 | 0, $simplified_sroa_0_15 | 0, $simplified_sroa_73_0_load842 << 2) | 0;
            }
            if (($simplified_sroa_0_15 | 0) == 0) {
             $simplified_sroa_0_16 = $182;
             $simplified_sroa_158_18 = $simplified_sroa_158_17;
            } else {
             _free($simplified_sroa_0_15);
             $simplified_sroa_0_16 = $182;
             $simplified_sroa_158_18 = $simplified_sroa_158_17;
            }
           } else {
            $simplified_sroa_0_16 = $simplified_sroa_0_15;
            $simplified_sroa_158_18 = $simplified_sroa_158_16;
           }
           $simplified_sroa_73 = $add_i432_i;
           HEAP32[$simplified_sroa_0_16 + ($simplified_sroa_73_0_load849 << 2) >> 2] = $lly_0_lcssa_i;
           $simplified_sroa_73_0_load857 = $simplified_sroa_73;
           $add_i425_i = $simplified_sroa_73_0_load857 + 1 | 0;
           if (($simplified_sroa_158_18 | 0) < ($add_i425_i | 0)) {
            if (($simplified_sroa_158_18 | 0) == 0) {
             $simplified_sroa_158_19 = $add_i425_i;
            } else {
             $185 = $simplified_sroa_158_18;
             while (1) {
              $mul_i416 = $185 << 1;
              if (($mul_i416 | 0) < ($add_i425_i | 0)) {
               $185 = $mul_i416;
              } else {
               $simplified_sroa_158_19 = $mul_i416;
               break;
              }
             }
            }
            $call_i1_i422 = _malloc($simplified_sroa_158_19 << 2) | 0;
            $186 = $call_i1_i422;
            $simplified_sroa_73_0_load851 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load851 | 0) != 0 & ($call_i1_i422 | 0) != 0) {
             _memcpy($call_i1_i422 | 0, $simplified_sroa_0_16 | 0, $simplified_sroa_73_0_load851 << 2) | 0;
            }
            if (($simplified_sroa_0_16 | 0) == 0) {
             $simplified_sroa_0_17 = $186;
             $simplified_sroa_158_20 = $simplified_sroa_158_19;
            } else {
             _free($simplified_sroa_0_16);
             $simplified_sroa_0_17 = $186;
             $simplified_sroa_158_20 = $simplified_sroa_158_19;
            }
           } else {
            $simplified_sroa_0_17 = $simplified_sroa_0_16;
            $simplified_sroa_158_20 = $simplified_sroa_158_18;
           }
           $simplified_sroa_73 = $add_i425_i;
           HEAP32[$simplified_sroa_0_17 + ($simplified_sroa_73_0_load857 << 2) >> 2] = $llz_0_lcssa_i;
           $simplified_sroa_73_0_load874 = $simplified_sroa_73;
           $add_i418_i = $simplified_sroa_73_0_load874 + 1 | 0;
           if (($simplified_sroa_158_20 | 0) < ($add_i418_i | 0)) {
            if (($simplified_sroa_158_20 | 0) == 0) {
             $simplified_sroa_158_21 = $add_i418_i;
            } else {
             $189 = $simplified_sroa_158_20;
             while (1) {
              $mul_i446 = $189 << 1;
              if (($mul_i446 | 0) < ($add_i418_i | 0)) {
               $189 = $mul_i446;
              } else {
               $simplified_sroa_158_21 = $mul_i446;
               break;
              }
             }
            }
            $call_i1_i452 = _malloc($simplified_sroa_158_21 << 2) | 0;
            $190 = $call_i1_i452;
            $simplified_sroa_73_0_load860 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load860 | 0) != 0 & ($call_i1_i452 | 0) != 0) {
             _memcpy($call_i1_i452 | 0, $simplified_sroa_0_17 | 0, $simplified_sroa_73_0_load860 << 2) | 0;
            }
            if (($simplified_sroa_0_17 | 0) == 0) {
             $simplified_sroa_0_18 = $190;
             $simplified_sroa_158_22 = $simplified_sroa_158_21;
            } else {
             _free($simplified_sroa_0_17);
             $simplified_sroa_0_18 = $190;
             $simplified_sroa_158_22 = $simplified_sroa_158_21;
            }
           } else {
            $simplified_sroa_0_18 = $simplified_sroa_0_17;
            $simplified_sroa_158_22 = $simplified_sroa_158_20;
           }
           $simplified_sroa_73 = $add_i418_i;
           HEAP32[$simplified_sroa_0_18 + ($simplified_sroa_73_0_load874 << 2) >> 2] = $lli_0_lcssa_i;
           $simplified_sroa_73_0_load873 = $simplified_sroa_73;
           $add_i411_i = $simplified_sroa_73_0_load873 + 1 | 0;
           if (($simplified_sroa_158_22 | 0) < ($add_i411_i | 0)) {
            if (($simplified_sroa_158_22 | 0) == 0) {
             $simplified_sroa_158_23 = $add_i411_i;
            } else {
             $193 = $simplified_sroa_158_22;
             while (1) {
              $mul_i476 = $193 << 1;
              if (($mul_i476 | 0) < ($add_i411_i | 0)) {
               $193 = $mul_i476;
              } else {
               $simplified_sroa_158_23 = $mul_i476;
               break;
              }
             }
            }
            $call_i1_i482 = _malloc($simplified_sroa_158_23 << 2) | 0;
            $194 = $call_i1_i482;
            $simplified_sroa_73_0_load869 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load869 | 0) != 0 & ($call_i1_i482 | 0) != 0) {
             _memcpy($call_i1_i482 | 0, $simplified_sroa_0_18 | 0, $simplified_sroa_73_0_load869 << 2) | 0;
            }
            if (($simplified_sroa_0_18 | 0) == 0) {
             $simplified_sroa_0_19 = $194;
             $simplified_sroa_158_24 = $simplified_sroa_158_23;
            } else {
             _free($simplified_sroa_0_18);
             $simplified_sroa_0_19 = $194;
             $simplified_sroa_158_24 = $simplified_sroa_158_23;
            }
           } else {
            $simplified_sroa_0_19 = $simplified_sroa_0_18;
            $simplified_sroa_158_24 = $simplified_sroa_158_22;
           }
           $simplified_sroa_73 = $add_i411_i;
           HEAP32[$simplified_sroa_0_19 + ($simplified_sroa_73_0_load873 << 2) >> 2] = $urx_0_lcssa_i;
           $simplified_sroa_73_0_load871 = $simplified_sroa_73;
           $add_i404_i = $simplified_sroa_73_0_load871 + 1 | 0;
           if (($simplified_sroa_158_24 | 0) < ($add_i404_i | 0)) {
            if (($simplified_sroa_158_24 | 0) == 0) {
             $simplified_sroa_158_25 = $add_i404_i;
            } else {
             $197 = $simplified_sroa_158_24;
             while (1) {
              $mul_i506 = $197 << 1;
              if (($mul_i506 | 0) < ($add_i404_i | 0)) {
               $197 = $mul_i506;
              } else {
               $simplified_sroa_158_25 = $mul_i506;
               break;
              }
             }
            }
            $call_i1_i512 = _malloc($simplified_sroa_158_25 << 2) | 0;
            $198 = $call_i1_i512;
            $simplified_sroa_73_0_load877 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load877 | 0) != 0 & ($call_i1_i512 | 0) != 0) {
             _memcpy($call_i1_i512 | 0, $simplified_sroa_0_19 | 0, $simplified_sroa_73_0_load877 << 2) | 0;
            }
            if (($simplified_sroa_0_19 | 0) == 0) {
             $simplified_sroa_0_20 = $198;
             $simplified_sroa_158_26 = $simplified_sroa_158_25;
            } else {
             _free($simplified_sroa_0_19);
             $simplified_sroa_0_20 = $198;
             $simplified_sroa_158_26 = $simplified_sroa_158_25;
            }
           } else {
            $simplified_sroa_0_20 = $simplified_sroa_0_19;
            $simplified_sroa_158_26 = $simplified_sroa_158_24;
           }
           $simplified_sroa_73 = $add_i404_i;
           HEAP32[$simplified_sroa_0_20 + ($simplified_sroa_73_0_load871 << 2) >> 2] = $ury_0_lcssa_i;
           $simplified_sroa_73_0_load863 = $simplified_sroa_73;
           $add_i398_i = $simplified_sroa_73_0_load863 + 1 | 0;
           if (($simplified_sroa_158_26 | 0) < ($add_i398_i | 0)) {
            if (($simplified_sroa_158_26 | 0) == 0) {
             $simplified_sroa_158_27 = $add_i398_i;
            } else {
             $201 = $simplified_sroa_158_26;
             while (1) {
              $mul_i536 = $201 << 1;
              if (($mul_i536 | 0) < ($add_i398_i | 0)) {
               $201 = $mul_i536;
              } else {
               $simplified_sroa_158_27 = $mul_i536;
               break;
              }
             }
            }
            $call_i1_i542 = _malloc($simplified_sroa_158_27 << 2) | 0;
            $202 = $call_i1_i542;
            $simplified_sroa_73_0_load865 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load865 | 0) != 0 & ($call_i1_i542 | 0) != 0) {
             _memcpy($call_i1_i542 | 0, $simplified_sroa_0_20 | 0, $simplified_sroa_73_0_load865 << 2) | 0;
            }
            if (($simplified_sroa_0_20 | 0) == 0) {
             $simplified_sroa_0_21 = $202;
             $simplified_sroa_158_28 = $simplified_sroa_158_27;
            } else {
             _free($simplified_sroa_0_20);
             $simplified_sroa_0_21 = $202;
             $simplified_sroa_158_28 = $simplified_sroa_158_27;
            }
           } else {
            $simplified_sroa_0_21 = $simplified_sroa_0_20;
            $simplified_sroa_158_28 = $simplified_sroa_158_26;
           }
           $simplified_sroa_73 = $add_i398_i;
           HEAP32[$simplified_sroa_0_21 + ($simplified_sroa_73_0_load863 << 2) >> 2] = $urz_0_lcssa_i;
           $simplified_sroa_73_0_load855 = $simplified_sroa_73;
           $add_i391_i = $simplified_sroa_73_0_load855 + 1 | 0;
           if (($simplified_sroa_158_28 | 0) < ($add_i391_i | 0)) {
            if (($simplified_sroa_158_28 | 0) == 0) {
             $simplified_sroa_158_29 = $add_i391_i;
            } else {
             $205 = $simplified_sroa_158_28;
             while (1) {
              $mul_i566 = $205 << 1;
              if (($mul_i566 | 0) < ($add_i391_i | 0)) {
               $205 = $mul_i566;
              } else {
               $simplified_sroa_158_29 = $mul_i566;
               break;
              }
             }
            }
            $call_i1_i572 = _malloc($simplified_sroa_158_29 << 2) | 0;
            $206 = $call_i1_i572;
            $simplified_sroa_73_0_load847 = $simplified_sroa_73;
            if (($simplified_sroa_73_0_load847 | 0) != 0 & ($call_i1_i572 | 0) != 0) {
             _memcpy($call_i1_i572 | 0, $simplified_sroa_0_21 | 0, $simplified_sroa_73_0_load847 << 2) | 0;
            }
            if (($simplified_sroa_0_21 | 0) == 0) {
             $simplified_sroa_0_22 = $206;
             $simplified_sroa_158_30 = $simplified_sroa_158_29;
            } else {
             _free($simplified_sroa_0_21);
             $simplified_sroa_0_22 = $206;
             $simplified_sroa_158_30 = $simplified_sroa_158_29;
            }
           } else {
            $simplified_sroa_0_22 = $simplified_sroa_0_21;
            $simplified_sroa_158_30 = $simplified_sroa_158_28;
           }
           $simplified_sroa_73 = $add_i391_i;
           HEAP32[$simplified_sroa_0_22 + ($simplified_sroa_73_0_load855 << 2) >> 2] = $uri_0_lcssa_i;
           $209 = $simplified_sroa_73;
           $simplified_sroa_0_23 = $simplified_sroa_0_22;
           $simplified_sroa_158_31 = $simplified_sroa_158_30;
          } else {
           $209 = $simplified_sroa_73_0_load839;
           $simplified_sroa_0_23 = $simplified_sroa_0_14;
           $simplified_sroa_158_31 = $simplified_sroa_158_14;
          }
          $div85_i = ($verts_sroa_36 | 0) / 4 | 0;
          L344 : do {
           if (($209 | 0) > 3) {
            $sub_i = $div85_i - 1 | 0;
            $i86_0_ph547_i = 0;
            $div89511548_i = ($209 | 0) / 4 | 0;
            $210 = $209;
            $_pre555_i = $simplified_sroa_0_23;
            $simplified_sroa_0_24 = $simplified_sroa_0_23;
            $simplified_sroa_158_32 = $simplified_sroa_158_31;
            while (1) {
             $add93_i = $i86_0_ph547_i + 1 | 0;
             $mul97_i = $i86_0_ph547_i << 2;
             $add101250_i = $mul97_i | 2;
             $add104251_i = $mul97_i | 3;
             $mul199_i = $add93_i << 2;
             $add207256_i = $mul199_i | 1;
             $add214258_i = $mul199_i | 2;
             $add218259_i = $mul199_i | 3;
             $div89513_i = $div89511548_i;
             $212 = $_pre555_i;
             $211 = $210;
             $simplified_sroa_0_25 = $simplified_sroa_0_24;
             $simplified_sroa_158_33 = $simplified_sroa_158_32;
             while (1) {
              $213 = HEAP32[$212 + ($mul97_i << 2) >> 2] | 0;
              $214 = HEAP32[$212 + ($add101250_i << 2) >> 2] | 0;
              $215 = HEAP32[$212 + ($add104251_i << 2) >> 2] | 0;
              $mul106_i = (($add93_i | 0) % ($div89513_i | 0) | 0) << 2;
              $216 = HEAP32[$212 + ($mul106_i << 2) >> 2] | 0;
              $217 = HEAP32[$212 + (($mul106_i | 2) << 2) >> 2] | 0;
              $218 = HEAP32[$212 + (($mul106_i | 3) << 2) >> 2] | 0;
              if (($216 | 0) > ($213 | 0)) {
               label = 231;
              } else {
               if (($216 | 0) == ($213 | 0) & ($217 | 0) > ($214 | 0)) {
                label = 231;
               } else {
                $add121_pn_i = $218 + $sub_i | 0;
                $endi_0_i = $215;
                $cinc_0_i = $sub_i;
               }
              }
              if ((label | 0) == 231) {
               label = 0;
               $add121_pn_i = $215 + 1 | 0;
               $endi_0_i = $218;
               $cinc_0_i = 1;
              }
              $ci_0_i = ($add121_pn_i | 0) % ($div85_i | 0) | 0;
              $219 = HEAP32[$verts_sroa_0_14 + (($ci_0_i << 2 | 3) << 2) >> 2] | 0;
              if (($219 & 65535 | 0) != 0 & ($219 & 131072 | 0) == 0 | ($ci_0_i | 0) == ($endi_0_i | 0)) {
               break;
              }
              $conv_i_i302 = +($216 - $213 | 0);
              $conv2_i_i = +($217 - $214 | 0);
              $add_i_i304 = $conv_i_i302 * $conv_i_i302 + $conv2_i_i * $conv2_i_i;
              $cmp_i_i305 = $add_i_i304 > 0.0;
              $conv17_i_i = +($213 | 0);
              $conv22_i_i = +($214 | 0);
              $ci_1503_i = $ci_0_i;
              $maxi_0504_i = -1;
              $maxd_0505_i = 0.0;
              do {
               $mul139_i = $ci_1503_i << 2;
               $220 = HEAP32[$verts_sroa_0_14 + ($mul139_i << 2) >> 2] | 0;
               $221 = HEAP32[$verts_sroa_0_14 + (($mul139_i | 2) << 2) >> 2] | 0;
               $add10_i_i = $conv_i_i302 * +($220 - $213 | 0) + $conv2_i_i * +($221 - $214 | 0);
               if ($cmp_i_i305) {
                $t_0_i_i = $add10_i_i / $add_i_i304;
               } else {
                $t_0_i_i = $add10_i_i;
               }
               if ($t_0_i_i < 0.0) {
                $t_1_i_i = 0.0;
               } else {
                if ($t_0_i_i > 1.0) {
                 $t_1_i_i = 1.0;
                } else {
                 $t_1_i_i = $t_0_i_i;
                }
               }
               $sub21_i_i = $conv17_i_i + $conv_i_i302 * $t_1_i_i - +($220 | 0);
               $sub26_i_i = $conv22_i_i + $conv2_i_i * $t_1_i_i - +($221 | 0);
               $add29_i_i = $sub21_i_i * $sub21_i_i + $sub26_i_i * $sub26_i_i;
               $cmp146_i = $add29_i_i > $maxd_0505_i;
               $maxi_0504_i = $cmp146_i ? $ci_1503_i : $maxi_0504_i;
               $maxd_0505_i = $cmp146_i ? $add29_i_i : $maxd_0505_i;
               $ci_1503_i = ($ci_1503_i + $cinc_0_i | 0) % ($div85_i | 0) | 0;
              } while (($ci_1503_i | 0) != ($endi_0_i | 0));
              if (!(($maxi_0504_i | 0) != -1 & $maxd_0505_i > $mul154_i)) {
               break;
              }
              $add158_i = $211 + 4 | 0;
              if (($simplified_sroa_158_33 | 0) < ($add158_i | 0)) {
               if (($simplified_sroa_158_33 | 0) == 0) {
                $simplified_sroa_158_34 = $add158_i;
               } else {
                $222 = $simplified_sroa_158_33;
                while (1) {
                 $mul_i596 = $222 << 1;
                 if (($mul_i596 | 0) < ($add158_i | 0)) {
                  $222 = $mul_i596;
                 } else {
                  $simplified_sroa_158_34 = $mul_i596;
                  break;
                 }
                }
               }
               $call_i1_i602 = _malloc($simplified_sroa_158_34 << 2) | 0;
               $223 = $call_i1_i602;
               $simplified_sroa_73_0_load830 = $simplified_sroa_73;
               if (($simplified_sroa_73_0_load830 | 0) != 0 & ($call_i1_i602 | 0) != 0) {
                _memcpy($call_i1_i602 | 0, $simplified_sroa_0_25 | 0, $simplified_sroa_73_0_load830 << 2) | 0;
               }
               if (($simplified_sroa_0_25 | 0) == 0) {
                $simplified_sroa_0_26 = $223;
                $simplified_sroa_158_35 = $simplified_sroa_158_34;
               } else {
                _free($simplified_sroa_0_25);
                $simplified_sroa_0_26 = $223;
                $simplified_sroa_158_35 = $simplified_sroa_158_34;
               }
              } else {
               $simplified_sroa_0_26 = $simplified_sroa_0_25;
               $simplified_sroa_158_35 = $simplified_sroa_158_33;
              }
              $simplified_sroa_73 = $add158_i;
              $div160_i = ($add158_i | 0) / 4 | 0;
              $j_0507_i = $div160_i - 1 | 0;
              if (($j_0507_i | 0) > ($i86_0_ph547_i | 0)) {
               $j_0_in509_i = $div160_i;
               $j_0510_i = $j_0507_i;
               while (1) {
                $sub165_i = $j_0_in509_i << 2;
                $mul169_i = $j_0510_i << 2;
                HEAP32[$simplified_sroa_0_26 + ($mul169_i << 2) >> 2] = HEAP32[$simplified_sroa_0_26 + ($sub165_i - 8 << 2) >> 2];
                HEAP32[$simplified_sroa_0_26 + (($mul169_i | 1) << 2) >> 2] = HEAP32[$simplified_sroa_0_26 + ($sub165_i - 7 << 2) >> 2];
                HEAP32[$simplified_sroa_0_26 + (($mul169_i | 2) << 2) >> 2] = HEAP32[$simplified_sroa_0_26 + ($sub165_i - 6 << 2) >> 2];
                HEAP32[$simplified_sroa_0_26 + (($mul169_i | 3) << 2) >> 2] = HEAP32[$simplified_sroa_0_26 + ($sub165_i - 5 << 2) >> 2];
                $j_0_i = $j_0510_i - 1 | 0;
                if (($j_0_i | 0) > ($i86_0_ph547_i | 0)) {
                 $j_0_in509_i = $j_0510_i;
                 $j_0510_i = $j_0_i;
                } else {
                 break;
                }
               }
              }
              $mul195_i = $maxi_0504_i << 2;
              HEAP32[$simplified_sroa_0_26 + ($mul199_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + ($mul195_i << 2) >> 2];
              HEAP32[$simplified_sroa_0_26 + ($add207256_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + (($mul195_i | 1) << 2) >> 2];
              HEAP32[$simplified_sroa_0_26 + ($add214258_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + (($mul195_i | 2) << 2) >> 2];
              HEAP32[$simplified_sroa_0_26 + ($add218259_i << 2) >> 2] = $maxi_0504_i;
              $simplified_sroa_73_0_load845 = $simplified_sroa_73;
              $div89_i = ($simplified_sroa_73_0_load845 | 0) / 4 | 0;
              if (($i86_0_ph547_i | 0) < ($div89_i | 0)) {
               $div89513_i = $div89_i;
               $212 = $simplified_sroa_0_26;
               $211 = $simplified_sroa_73_0_load845;
               $simplified_sroa_0_25 = $simplified_sroa_0_26;
               $simplified_sroa_158_33 = $simplified_sroa_158_35;
              } else {
               $233 = $simplified_sroa_73_0_load845;
               $simplified_sroa_0_27 = $simplified_sroa_0_26;
               $simplified_sroa_158_36 = $simplified_sroa_158_35;
               break L344;
              }
             }
             $div89511_i = ($211 | 0) / 4 | 0;
             if (($add93_i | 0) < ($div89511_i | 0)) {
              $i86_0_ph547_i = $add93_i;
              $div89511548_i = $div89511_i;
              $210 = $211;
              $_pre555_i = $212;
              $simplified_sroa_0_24 = $simplified_sroa_0_25;
              $simplified_sroa_158_32 = $simplified_sroa_158_33;
             } else {
              $233 = $211;
              $simplified_sroa_0_27 = $simplified_sroa_0_25;
              $simplified_sroa_158_36 = $simplified_sroa_158_33;
              break;
             }
            }
           } else {
            $233 = $209;
            $simplified_sroa_0_27 = $simplified_sroa_0_23;
            $simplified_sroa_158_36 = $simplified_sroa_158_31;
           }
          } while (0);
          L385 : do {
           if ($cmp224_i) {
            $235 = $233;
            $_pr421561 = $233;
            $simplified_sroa_0_29 = $simplified_sroa_0_27;
            $simplified_sroa_158_38 = $simplified_sroa_158_36;
            label = 257;
           } else {
            if (($233 | 0) > 3) {
             $i229_0_ph543_i = 0;
             $div232499544_i = ($233 | 0) / 4 | 0;
             $234 = $233;
             $_pr421563 = $233;
             $_pre551_i = $simplified_sroa_0_27;
             $simplified_sroa_0_28 = $simplified_sroa_0_27;
             $simplified_sroa_158_37 = $simplified_sroa_158_36;
             while (1) {
              $add236_i = $i229_0_ph543_i + 1 | 0;
              $mul241_i = $i229_0_ph543_i << 2;
              $add246235_i = $mul241_i | 2;
              $add250236_i = $mul241_i | 3;
              $mul370_i = $add236_i << 2;
              $add378241_i = $mul370_i | 1;
              $add385243_i = $mul370_i | 2;
              $add389244_i = $mul370_i | 3;
              $div232501_i = $div232499544_i;
              $237 = $234;
              $236 = $_pre551_i;
              $_pr421562 = $_pr421563;
              $simplified_sroa_0_30 = $simplified_sroa_0_28;
              $simplified_sroa_158_39 = $simplified_sroa_158_37;
              while (1) {
               $238 = HEAP32[$236 + ($mul241_i << 2) >> 2] | 0;
               $239 = HEAP32[$236 + ($add246235_i << 2) >> 2] | 0;
               $240 = HEAP32[$236 + ($add250236_i << 2) >> 2] | 0;
               $mul253_i = (($add236_i | 0) % ($div232501_i | 0) | 0) << 2;
               $241 = HEAP32[$236 + ($mul253_i << 2) >> 2] | 0;
               $242 = HEAP32[$236 + (($mul253_i | 2) << 2) >> 2] | 0;
               $243 = HEAP32[$236 + (($mul253_i | 3) << 2) >> 2] | 0;
               if ((HEAP32[$verts_sroa_0_14 + (((($240 + 1 | 0) % ($div85_i | 0) | 0) << 2 | 3) << 2) >> 2] & 65535 | 0) != 0) {
                break;
               }
               $sub290_i = $241 - $238 | 0;
               $sub291_i = $242 - $239 | 0;
               if (((Math_imul($sub291_i, $sub291_i) | 0) + (Math_imul($sub290_i, $sub290_i) | 0) | 0) <= ($mul295_i | 0)) {
                break;
               }
               $cond_i309 = (($243 | 0) < ($240 | 0) ? $div85_i : 0) + ($243 - $240) | 0;
               if (($cond_i309 | 0) <= 1) {
                break;
               }
               if (($241 | 0) > ($238 | 0)) {
                $cond_sink_i = $cond_i309;
               } else {
                $cond_sink_i = $cond_i309 + (($241 | 0) == ($238 | 0) & ($242 | 0) > ($239 | 0) & 1 ^ 1) | 0;
               }
               $rem313_i = ((($cond_sink_i | 0) / 2 | 0) + $240 | 0) % ($div85_i | 0) | 0;
               if (($rem313_i | 0) == -1) {
                break;
               }
               $add326_i = $237 + 4 | 0;
               if (($simplified_sroa_158_39 | 0) < ($add326_i | 0)) {
                if (($simplified_sroa_158_39 | 0) == 0) {
                 $simplified_sroa_158_40 = $add326_i;
                } else {
                 $246 = $simplified_sroa_158_39;
                 while (1) {
                  $mul_i626 = $246 << 1;
                  if (($mul_i626 | 0) < ($add326_i | 0)) {
                   $246 = $mul_i626;
                  } else {
                   $simplified_sroa_158_40 = $mul_i626;
                   break;
                  }
                 }
                }
                $call_i1_i632 = _malloc($simplified_sroa_158_40 << 2) | 0;
                $247 = $call_i1_i632;
                $simplified_sroa_73_0_load848 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load848 | 0) != 0 & ($call_i1_i632 | 0) != 0) {
                 _memcpy($call_i1_i632 | 0, $simplified_sroa_0_30 | 0, $simplified_sroa_73_0_load848 << 2) | 0;
                }
                if (($simplified_sroa_0_30 | 0) == 0) {
                 $simplified_sroa_0_31 = $247;
                 $simplified_sroa_158_41 = $simplified_sroa_158_40;
                } else {
                 _free($simplified_sroa_0_30);
                 $simplified_sroa_0_31 = $247;
                 $simplified_sroa_158_41 = $simplified_sroa_158_40;
                }
               } else {
                $simplified_sroa_0_31 = $simplified_sroa_0_30;
                $simplified_sroa_158_41 = $simplified_sroa_158_39;
               }
               $simplified_sroa_73 = $add326_i;
               $div329_i = ($add326_i | 0) / 4 | 0;
               $j330_0495_i = $div329_i - 1 | 0;
               if (($j330_0495_i | 0) > ($i229_0_ph543_i | 0)) {
                $j330_0_in497_i = $div329_i;
                $j330_0498_i = $j330_0495_i;
                while (1) {
                 $sub335_i = $j330_0_in497_i << 2;
                 $mul339_i = $j330_0498_i << 2;
                 HEAP32[$simplified_sroa_0_31 + ($mul339_i << 2) >> 2] = HEAP32[$simplified_sroa_0_31 + ($sub335_i - 8 << 2) >> 2];
                 HEAP32[$simplified_sroa_0_31 + (($mul339_i | 1) << 2) >> 2] = HEAP32[$simplified_sroa_0_31 + ($sub335_i - 7 << 2) >> 2];
                 HEAP32[$simplified_sroa_0_31 + (($mul339_i | 2) << 2) >> 2] = HEAP32[$simplified_sroa_0_31 + ($sub335_i - 6 << 2) >> 2];
                 HEAP32[$simplified_sroa_0_31 + (($mul339_i | 3) << 2) >> 2] = HEAP32[$simplified_sroa_0_31 + ($sub335_i - 5 << 2) >> 2];
                 $j330_0_i = $j330_0498_i - 1 | 0;
                 if (($j330_0_i | 0) > ($i229_0_ph543_i | 0)) {
                  $j330_0_in497_i = $j330_0498_i;
                  $j330_0498_i = $j330_0_i;
                 } else {
                  break;
                 }
                }
               }
               $mul366_i = $rem313_i << 2;
               HEAP32[$simplified_sroa_0_31 + ($mul370_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + ($mul366_i << 2) >> 2];
               HEAP32[$simplified_sroa_0_31 + ($add378241_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + (($mul366_i | 1) << 2) >> 2];
               HEAP32[$simplified_sroa_0_31 + ($add385243_i << 2) >> 2] = HEAP32[$verts_sroa_0_14 + (($mul366_i | 2) << 2) >> 2];
               HEAP32[$simplified_sroa_0_31 + ($add389244_i << 2) >> 2] = $rem313_i;
               $simplified_sroa_73_0_load838 = $simplified_sroa_73;
               $div232_i = ($simplified_sroa_73_0_load838 | 0) / 4 | 0;
               if (($i229_0_ph543_i | 0) < ($div232_i | 0)) {
                $div232501_i = $div232_i;
                $237 = $simplified_sroa_73_0_load838;
                $236 = $simplified_sroa_0_31;
                $_pr421562 = $simplified_sroa_73_0_load838;
                $simplified_sroa_0_30 = $simplified_sroa_0_31;
                $simplified_sroa_158_39 = $simplified_sroa_158_41;
               } else {
                $235 = $simplified_sroa_73_0_load838;
                $_pr421561 = $simplified_sroa_73_0_load838;
                $simplified_sroa_0_29 = $simplified_sroa_0_31;
                $simplified_sroa_158_38 = $simplified_sroa_158_41;
                label = 257;
                break L385;
               }
              }
              $div232499_i = ($237 | 0) / 4 | 0;
              if (($add236_i | 0) < ($div232499_i | 0)) {
               $i229_0_ph543_i = $add236_i;
               $div232499544_i = $div232499_i;
               $234 = $237;
               $_pr421563 = $_pr421562;
               $_pre551_i = $236;
               $simplified_sroa_0_28 = $simplified_sroa_0_30;
               $simplified_sroa_158_37 = $simplified_sroa_158_39;
              } else {
               $235 = $237;
               $_pr421561 = $_pr421562;
               $simplified_sroa_0_29 = $simplified_sroa_0_30;
               $simplified_sroa_158_38 = $simplified_sroa_158_39;
               label = 257;
               break;
              }
             }
            } else {
             $275 = $233;
             $simplified_sroa_0_35 = $simplified_sroa_0_27;
             $simplified_sroa_158_46 = $simplified_sroa_158_36;
            }
           }
          } while (0);
          if ((label | 0) == 257) {
           label = 0;
           if (($235 | 0) > 3) {
            $i396_0494_i = 0;
            while (1) {
             $arrayidx_i283_i = $simplified_sroa_0_29 + (($i396_0494_i << 2 | 3) << 2) | 0;
             $257 = HEAP32[$arrayidx_i283_i >> 2] | 0;
             HEAP32[$arrayidx_i283_i >> 2] = HEAP32[$verts_sroa_0_14 + (($257 << 2 | 3) << 2) >> 2] & 65536 | HEAP32[$verts_sroa_0_14 + (((($257 + 1 | 0) % ($div85_i | 0) | 0) << 2 | 3) << 2) >> 2] & 196607;
             $inc424_i = $i396_0494_i + 1 | 0;
             $simplified_sroa_73_0_load837 = $simplified_sroa_73;
             if (($inc424_i | 0) < (($simplified_sroa_73_0_load837 | 0) / 4 | 0 | 0)) {
              $i396_0494_i = $inc424_i;
             } else {
              $260 = $simplified_sroa_73_0_load837;
              break;
             }
            }
           } else {
            $260 = $_pr421561;
           }
           if (($260 | 0) > 3) {
            $i_071_i = 0;
            $div72_i = ($260 | 0) / 4 | 0;
            $261 = $260;
            $simplified_sroa_0_32 = $simplified_sroa_0_29;
            $simplified_sroa_158_42 = $simplified_sroa_158_38;
            while (1) {
             $add_i328 = $i_071_i + 1 | 0;
             $mul_i329 = $i_071_i << 2;
             $mul6_i = ($add_i328 | 0) < ($div72_i | 0) ? $add_i328 << 2 : 0;
             if ((HEAP32[$simplified_sroa_0_32 + ($mul_i329 << 2) >> 2] | 0) == (HEAP32[$simplified_sroa_0_32 + ($mul6_i << 2) >> 2] | 0)) {
              if ((HEAP32[$simplified_sroa_0_32 + (($mul_i329 | 2) << 2) >> 2] | 0) == (HEAP32[$simplified_sroa_0_32 + (($mul6_i | 2) << 2) >> 2] | 0)) {
               if (($i_071_i | 0) < ((($261 | 0) / 4 | 0) - 1 | 0)) {
                $j_068_i = $i_071_i;
                while (1) {
                 $add23_i = $j_068_i + 1 | 0;
                 $mul24_i = $add23_i << 2;
                 $mul27_i = $j_068_i << 2;
                 HEAP32[$simplified_sroa_0_32 + ($mul27_i << 2) >> 2] = HEAP32[$simplified_sroa_0_32 + ($mul24_i << 2) >> 2];
                 HEAP32[$simplified_sroa_0_32 + (($mul27_i | 1) << 2) >> 2] = HEAP32[$simplified_sroa_0_32 + (($mul24_i | 1) << 2) >> 2];
                 HEAP32[$simplified_sroa_0_32 + (($mul27_i | 2) << 2) >> 2] = HEAP32[$simplified_sroa_0_32 + (($mul24_i | 2) << 2) >> 2];
                 HEAP32[$simplified_sroa_0_32 + (($mul27_i | 3) << 2) >> 2] = HEAP32[$simplified_sroa_0_32 + (($mul24_i | 3) << 2) >> 2];
                 $simplified_sroa_73_0_load836 = $simplified_sroa_73;
                 if (($add23_i | 0) < ((($simplified_sroa_73_0_load836 | 0) / 4 | 0) - 1 | 0)) {
                  $j_068_i = $add23_i;
                 } else {
                  $_lcssa_i = $simplified_sroa_73_0_load836;
                  break;
                 }
                }
               } else {
                $_lcssa_i = $261;
               }
               $sub52_i = $_lcssa_i - 4 | 0;
               if (($simplified_sroa_158_42 | 0) < ($sub52_i | 0)) {
                if (($simplified_sroa_158_42 | 0) == 0) {
                 $simplified_sroa_158_44 = $sub52_i;
                } else {
                 $271 = $simplified_sroa_158_42;
                 while (1) {
                  $mul_i656 = $271 << 1;
                  if (($mul_i656 | 0) < ($sub52_i | 0)) {
                   $271 = $mul_i656;
                  } else {
                   $simplified_sroa_158_44 = $mul_i656;
                   break;
                  }
                 }
                }
                $call_i1_i662 = _malloc($simplified_sroa_158_44 << 2) | 0;
                $272 = $call_i1_i662;
                $simplified_sroa_73_0_load866 = $simplified_sroa_73;
                if (($simplified_sroa_73_0_load866 | 0) != 0 & ($call_i1_i662 | 0) != 0) {
                 _memcpy($call_i1_i662 | 0, $simplified_sroa_0_32 | 0, $simplified_sroa_73_0_load866 << 2) | 0;
                }
                if (($simplified_sroa_0_32 | 0) == 0) {
                 $simplified_sroa_0_34 = $272;
                 $simplified_sroa_158_45 = $simplified_sroa_158_44;
                } else {
                 _free($simplified_sroa_0_32);
                 $simplified_sroa_0_34 = $272;
                 $simplified_sroa_158_45 = $simplified_sroa_158_44;
                }
               } else {
                $simplified_sroa_0_34 = $simplified_sroa_0_32;
                $simplified_sroa_158_45 = $simplified_sroa_158_42;
               }
               $simplified_sroa_73 = $sub52_i;
               $264 = $sub52_i;
               $simplified_sroa_0_33 = $simplified_sroa_0_34;
               $simplified_sroa_158_43 = $simplified_sroa_158_45;
              } else {
               $264 = $261;
               $simplified_sroa_0_33 = $simplified_sroa_0_32;
               $simplified_sroa_158_43 = $simplified_sroa_158_42;
              }
             } else {
              $264 = $261;
              $simplified_sroa_0_33 = $simplified_sroa_0_32;
              $simplified_sroa_158_43 = $simplified_sroa_158_42;
             }
             $div_i331 = ($264 | 0) / 4 | 0;
             if (($add_i328 | 0) < ($div_i331 | 0)) {
              $i_071_i = $add_i328;
              $div72_i = $div_i331;
              $261 = $264;
              $simplified_sroa_0_32 = $simplified_sroa_0_33;
              $simplified_sroa_158_42 = $simplified_sroa_158_43;
             } else {
              $275 = $264;
              $simplified_sroa_0_35 = $simplified_sroa_0_33;
              $simplified_sroa_158_46 = $simplified_sroa_158_43;
              break;
             }
            }
           } else {
            $275 = $260;
            $simplified_sroa_0_35 = $simplified_sroa_0_29;
            $simplified_sroa_158_46 = $simplified_sroa_158_38;
           }
          }
          if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
           $278 = $275;
          } else {
           FUNCTION_TABLE_vii[HEAP32[(HEAP32[$43 >> 2] | 0) + 24 >> 2] & 127]($ctx, 6);
           $278 = $simplified_sroa_73;
          }
          if (($278 | 0) > 11) {
           $279 = HEAP32[$nconts >> 2] | 0;
           if (($279 | 0) < ($maxContours_2503 | 0)) {
            $maxContours_3 = $maxContours_2503;
            $290 = $279;
            $289 = $278;
           } else {
            $mul200 = $maxContours_2503 << 1;
            $280 = _malloc($maxContours_2503 * 40 | 0) | 0;
            $_pre558 = HEAP32[$conts >> 2] | 0;
            if ((HEAP32[$nconts >> 2] | 0) > 0) {
             $j_0481 = 0;
             $282 = $_pre558;
             while (1) {
              $283 = $280 + ($j_0481 * 20 | 0) | 0;
              $284 = $282 + ($j_0481 * 20 | 0) | 0;
              HEAP32[$283 >> 2] = HEAP32[$284 >> 2];
              HEAP32[$283 + 4 >> 2] = HEAP32[$284 + 4 >> 2];
              HEAP32[$283 + 8 >> 2] = HEAP32[$284 + 8 >> 2];
              HEAP32[$283 + 12 >> 2] = HEAP32[$284 + 12 >> 2];
              HEAP32[$283 + 16 >> 2] = HEAP32[$284 + 16 >> 2];
              $285 = HEAP32[$conts >> 2] | 0;
              HEAP32[$285 + ($j_0481 * 20 | 0) >> 2] = 0;
              HEAP32[$285 + ($j_0481 * 20 | 0) + 8 >> 2] = 0;
              $inc217 = $j_0481 + 1 | 0;
              if (($inc217 | 0) < (HEAP32[$nconts >> 2] | 0)) {
               $j_0481 = $inc217;
               $282 = $285;
              } else {
               $287 = $285;
               break;
              }
             }
            } else {
             $287 = $_pre558;
            }
            if (($287 | 0) != 0) {
             _free($287);
            }
            HEAP32[$conts >> 2] = $280;
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 8992, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $maxContours_2503, HEAP32[tempVarArgs + 8 >> 2] = $mul200, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            $maxContours_3 = $mul200;
            $290 = HEAP32[$nconts >> 2] | 0;
            $289 = $simplified_sroa_73;
           }
           HEAP32[$nconts >> 2] = $290 + 1;
           $291 = HEAP32[$conts >> 2] | 0;
           $div230 = ($289 | 0) / 4 | 0;
           $nverts = $291 + ($290 * 20 | 0) + 4 | 0;
           HEAP32[$nverts >> 2] = $div230;
           $call_i_i681 = _malloc($div230 << 4) | 0;
           $verts236 = $291 + ($290 * 20 | 0) | 0;
           HEAP32[$verts236 >> 2] = $call_i_i681;
           if (($call_i_i681 | 0) == 0) {
            label = 302;
            break L62;
           }
           _memcpy($call_i_i681 | 0, $simplified_sroa_0_35 | 0, HEAP32[$nverts >> 2] << 4) | 0;
           if ($cmp) {
            if ((HEAP32[$nverts >> 2] | 0) > 0) {
             $297 = HEAP32[$verts236 >> 2] | 0;
             $j251_0483 = 0;
             do {
              $mul256 = $j251_0483 << 2;
              $arrayidx258 = $297 + ($mul256 << 2) | 0;
              HEAP32[$arrayidx258 >> 2] = (HEAP32[$arrayidx258 >> 2] | 0) - $2;
              $arrayidx261 = $297 + (($mul256 | 2) << 2) | 0;
              HEAP32[$arrayidx261 >> 2] = (HEAP32[$arrayidx261 >> 2] | 0) - $2;
              $j251_0483 = $j251_0483 + 1 | 0;
             } while (($j251_0483 | 0) < (HEAP32[$nverts >> 2] | 0));
            }
           }
           $div269 = ($verts_sroa_36 | 0) / 4 | 0;
           $nrverts = $291 + ($290 * 20 | 0) + 12 | 0;
           HEAP32[$nrverts >> 2] = $div269;
           $call_i_i682 = _malloc($div269 << 4) | 0;
           $rverts275 = $291 + ($290 * 20 | 0) + 8 | 0;
           HEAP32[$rverts275 >> 2] = $call_i_i682;
           if (($call_i_i682 | 0) == 0) {
            label = 308;
            break L62;
           }
           _memcpy($call_i_i682 | 0, $verts_sroa_0_14 | 0, HEAP32[$nrverts >> 2] << 4) | 0;
           if ($cmp) {
            if ((HEAP32[$nrverts >> 2] | 0) > 0) {
             $306 = HEAP32[$rverts275 >> 2] | 0;
             $j290_0485 = 0;
             do {
              $mul296 = $j290_0485 << 2;
              $arrayidx298 = $306 + ($mul296 << 2) | 0;
              HEAP32[$arrayidx298 >> 2] = (HEAP32[$arrayidx298 >> 2] | 0) - $2;
              $arrayidx301 = $306 + (($mul296 | 2) << 2) | 0;
              HEAP32[$arrayidx301 >> 2] = (HEAP32[$arrayidx301 >> 2] | 0) - $2;
              $j290_0485 = $j290_0485 + 1 | 0;
             } while (($j290_0485 | 0) < (HEAP32[$nrverts >> 2] | 0));
            }
           }
           HEAP16[$291 + ($290 * 20 | 0) + 16 >> 1] = $52;
           HEAP8[$291 + ($290 * 20 | 0) + 18 >> 0] = $55;
           $maxContours_4 = $maxContours_3;
           $simplified_sroa_0_36 = $simplified_sroa_0_35;
           $simplified_sroa_158_47 = $simplified_sroa_158_46;
           $verts_sroa_0_15 = $verts_sroa_0_14;
           $verts_sroa_66_15 = $verts_sroa_66_14;
          } else {
           $maxContours_4 = $maxContours_2503;
           $simplified_sroa_0_36 = $simplified_sroa_0_35;
           $simplified_sroa_158_47 = $simplified_sroa_158_46;
           $verts_sroa_0_15 = $verts_sroa_0_14;
           $verts_sroa_66_15 = $verts_sroa_66_14;
          }
         }
        }
        $inc311 = $i141_0500 + 1 | 0;
        if (($inc311 | 0) < ($add149 | 0)) {
         $i141_0500 = $inc311;
         $maxContours_2503 = $maxContours_4;
         $simplified_sroa_0_3 = $simplified_sroa_0_36;
         $simplified_sroa_158_2 = $simplified_sroa_158_47;
         $verts_sroa_0_3 = $verts_sroa_0_15;
         $verts_sroa_66_2 = $verts_sroa_66_15;
        } else {
         $maxContours_2_lcssa = $maxContours_4;
         $simplified_sroa_0_37 = $simplified_sroa_0_36;
         $simplified_sroa_158_48 = $simplified_sroa_158_47;
         $verts_sroa_0_16 = $verts_sroa_0_15;
         $verts_sroa_66_16 = $verts_sroa_66_15;
         break;
        }
       }
      }
      $inc314 = $x132_0514 + 1 | 0;
      if (($inc314 | 0) < ($0 | 0)) {
       $x132_0514 = $inc314;
       $maxContours_1516 = $maxContours_2_lcssa;
       $simplified_sroa_0_2 = $simplified_sroa_0_37;
       $simplified_sroa_158_1 = $simplified_sroa_158_48;
       $verts_sroa_0_2 = $verts_sroa_0_16;
       $verts_sroa_66_1 = $verts_sroa_66_16;
      } else {
       $maxContours_1_lcssa = $maxContours_2_lcssa;
       $simplified_sroa_0_38 = $simplified_sroa_0_37;
       $simplified_sroa_158_49 = $simplified_sroa_158_48;
       $verts_sroa_0_17 = $verts_sroa_0_16;
       $verts_sroa_66_17 = $verts_sroa_66_16;
       break;
      }
     }
    } else {
     $maxContours_1_lcssa = $maxContours_0521;
     $simplified_sroa_0_38 = $simplified_sroa_0_0;
     $simplified_sroa_158_49 = $simplified_sroa_158_0;
     $verts_sroa_0_17 = $verts_sroa_0_0;
     $verts_sroa_66_17 = $verts_sroa_66_0;
    }
    $inc317 = $y128_0519 + 1 | 0;
    if (($inc317 | 0) < ($1 | 0)) {
     $y128_0519 = $inc317;
     $maxContours_0521 = $maxContours_1_lcssa;
     $simplified_sroa_0_0 = $simplified_sroa_0_38;
     $simplified_sroa_158_0 = $simplified_sroa_158_49;
     $verts_sroa_0_0 = $verts_sroa_0_17;
     $verts_sroa_66_0 = $verts_sroa_66_17;
    } else {
     $simplified_sroa_0_1 = $simplified_sroa_0_38;
     $verts_sroa_0_1 = $verts_sroa_0_17;
     label = 38;
     break L60;
    }
   }
   if ((label | 0) == 302) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$nverts >> 2], tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_0 = 0;
    $simplified_sroa_0_39 = $simplified_sroa_0_35;
    $verts_sroa_0_18 = $verts_sroa_0_14;
    break;
   } else if ((label | 0) == 308) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 5856, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$nrverts >> 2], tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_0 = 0;
    $simplified_sroa_0_39 = $simplified_sroa_0_35;
    $verts_sroa_0_18 = $verts_sroa_0_14;
    break;
   }
  } else {
   $simplified_sroa_0_1 = $41;
   $verts_sroa_0_1 = $40;
   label = 38;
  }
 } while (0);
 if ((label | 0) == 38) {
  $44 = HEAP32[$nconts >> 2] | 0;
  if (($44 | 0) > 0) {
   $i319_0437 = 0;
   $310 = $44;
   do {
    $311 = HEAP32[$conts >> 2] | 0;
    $verts327 = $311 + ($i319_0437 * 20 | 0) | 0;
    $312 = HEAP32[$verts327 >> 2] | 0;
    $nverts328 = $311 + ($i319_0437 * 20 | 0) + 4 | 0;
    $313 = HEAP32[$nverts328 >> 2] | 0;
    L485 : do {
     if (($313 | 0) > 0) {
      $j_011_i = $313 - 1 | 0;
      $i_012_i = 0;
      $area_013_i = 0;
      while (1) {
       $mul_i351 = $i_012_i << 2;
       $mul1_i = $j_011_i << 2;
       $mul5_i355 = Math_imul(HEAP32[$312 + (($mul1_i | 2) << 2) >> 2] | 0, HEAP32[$312 + ($mul_i351 << 2) >> 2] | 0) | 0;
       $area_013_i = $mul5_i355 + $area_013_i - (Math_imul(HEAP32[$312 + (($mul_i351 | 2) << 2) >> 2] | 0, HEAP32[$312 + ($mul1_i << 2) >> 2] | 0) | 0) | 0;
       $inc_i359 = $i_012_i + 1 | 0;
       if (($inc_i359 | 0) >= ($313 | 0)) {
        break;
       } else {
        $j_011_i = $i_012_i;
        $i_012_i = $inc_i359;
       }
      }
      if (($area_013_i + 1 | 0) < -1) {
       L491 : do {
        if (($310 | 0) > 0) {
         $reg349 = $311 + ($i319_0437 * 20 | 0) + 16 | 0;
         $j333_0431 = 0;
         while (1) {
          if (($i319_0437 | 0) != ($j333_0431 | 0)) {
           $nverts343 = $311 + ($j333_0431 * 20 | 0) + 4 | 0;
           $318 = HEAP32[$nverts343 >> 2] | 0;
           if (($318 | 0) != 0) {
            if ((HEAP16[$311 + ($j333_0431 * 20 | 0) + 16 >> 1] | 0) == (HEAP16[$reg349 >> 1] | 0)) {
             $verts355 = $311 + ($j333_0431 * 20 | 0) | 0;
             $321 = HEAP32[$verts355 >> 2] | 0;
             if (($318 | 0) > 0) {
              $sub_i364 = $318 - 1 | 0;
              $j_011_i368 = $sub_i364;
              $i_012_i367 = 0;
              $area_013_i366 = 0;
              while (1) {
               $mul_i369 = $i_012_i367 << 2;
               $mul1_i371 = $j_011_i368 << 2;
               $mul5_i375 = Math_imul(HEAP32[$321 + (($mul1_i371 | 2) << 2) >> 2] | 0, HEAP32[$321 + ($mul_i369 << 2) >> 2] | 0) | 0;
               $area_013_i366 = $mul5_i375 + $area_013_i366 - (Math_imul(HEAP32[$321 + (($mul_i369 | 2) << 2) >> 2] | 0, HEAP32[$321 + ($mul1_i371 << 2) >> 2] | 0) | 0) | 0;
               $inc_i381 = $i_012_i367 + 1 | 0;
               if (($inc_i381 | 0) >= ($318 | 0)) {
                break;
               } else {
                $j_011_i368 = $i_012_i367;
                $i_012_i367 = $inc_i381;
               }
              }
              if (!(($area_013_i366 + 2 | 0) >>> 0 < 3 >>> 0)) {
               break;
              }
             }
            }
           }
          }
          $inc366 = $j333_0431 + 1 | 0;
          if (($inc366 | 0) < ($310 | 0)) {
           $j333_0431 = $inc366;
          } else {
           break L491;
          }
         }
         if (!(($j333_0431 | 0) == -1)) {
          $i_046_i = 0;
          $closestDist_047_i = 268435455;
          $328 = -1;
          $327 = -1;
          while (1) {
           $i_046_i$looptemp = $i_046_i;
           $i_046_i = $i_046_i + 1 | 0;
           $mul_i394 = $i_046_i$looptemp << 2;
           $mul3_i397 = ($i_046_i | 0) == ($318 | 0) ? 0 : $i_046_i << 2;
           $arrayidx4_i398 = $321 + ($mul3_i397 << 2) | 0;
           $mul5_i399 = (($sub_i364 + $i_046_i$looptemp | 0) % ($318 | 0) | 0) << 2;
           $arrayidx8_i33_i = $321 + (($mul3_i397 | 2) << 2) | 0;
           $330 = HEAP32[$321 + ($mul_i394 << 2) >> 2] | 0;
           $331 = HEAP32[$321 + ($mul5_i399 << 2) >> 2] | 0;
           $sub_i_i402 = $330 - $331 | 0;
           $332 = HEAP32[$321 + (($mul5_i399 | 2) << 2) >> 2] | 0;
           $333 = HEAP32[$321 + (($mul_i394 | 2) << 2) >> 2] | 0;
           $sub10_i_i = $333 - $332 | 0;
           $j_043_i = 0;
           $closestDist_144_i = $closestDist_047_i;
           $335 = $328;
           $334 = $327;
           while (1) {
            $mul10_i = $j_043_i << 2;
            $336 = HEAP32[$312 + (($mul10_i | 2) << 2) >> 2] | 0;
            $mul_i_i403 = Math_imul($336 - $332 | 0, $sub_i_i402) | 0;
            $337 = HEAP32[$312 + ($mul10_i << 2) >> 2] | 0;
            if (($mul_i_i403 - (Math_imul($sub10_i_i, $337 - $331 | 0) | 0) | 0) < 1) {
             $sub4_i30_i = $336 - $333 | 0;
             $mul_i31_i = Math_imul((HEAP32[$arrayidx4_i398 >> 2] | 0) - $330 | 0, $sub4_i30_i) | 0;
             $sub7_i32_i = $337 - $330 | 0;
             if (($mul_i31_i - (Math_imul((HEAP32[$arrayidx8_i33_i >> 2] | 0) - $333 | 0, $sub7_i32_i) | 0) | 0) < 1) {
              $add21_i = (Math_imul($sub4_i30_i, $sub4_i30_i) | 0) + (Math_imul($sub7_i32_i, $sub7_i32_i) | 0) | 0;
              $cmp22_i = ($add21_i | 0) < ($closestDist_144_i | 0);
              $closestDist_2_i = $cmp22_i ? $add21_i : $closestDist_144_i;
              $341 = $cmp22_i ? $j_043_i : $335;
              $340 = $cmp22_i ? $i_046_i$looptemp : $334;
             } else {
              $closestDist_2_i = $closestDist_144_i;
              $341 = $335;
              $340 = $334;
             }
            } else {
             $closestDist_2_i = $closestDist_144_i;
             $341 = $335;
             $340 = $334;
            }
            $j_043_i = $j_043_i + 1 | 0;
            if (($j_043_i | 0) >= ($313 | 0)) {
             break;
            } else {
             $closestDist_144_i = $closestDist_2_i;
             $335 = $341;
             $334 = $340;
            }
           }
           if (($i_046_i | 0) >= ($318 | 0)) {
            break;
           } else {
            $closestDist_047_i = $closestDist_2_i;
            $328 = $341;
            $327 = $340;
           }
          }
          if (($340 | 0) == -1 | ($341 | 0) == -1) {
           __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 4032, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $i319_0437, HEAP32[tempVarArgs + 8 >> 2] = $j333_0431, tempVarArgs) | 0);
           STACKTOP = tempVarArgs;
           break L485;
          }
          $call_i_i683 = _malloc(($313 + $318 << 4) + 32 | 0) | 0;
          $342 = $call_i_i683;
          if (($call_i_i683 | 0) == 0) {
           __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 3120, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $i319_0437, HEAP32[tempVarArgs + 8 >> 2] = $j333_0431, tempVarArgs) | 0);
           STACKTOP = tempVarArgs;
           break L485;
          }
          $343 = HEAP32[$nverts343 >> 2] | 0;
          if (($343 | 0) < 0) {
           $nv_0_lcssa_i = 0;
          } else {
           $344 = HEAP32[$verts355 >> 2] | 0;
           $nv_053_i = 0;
           $347 = $343;
           while (1) {
            $mul5_i = $nv_053_i << 2;
            $mul8_i = (($nv_053_i + $340 | 0) % ($347 | 0) | 0) << 2;
            HEAP32[$342 + ($mul5_i << 2) >> 2] = HEAP32[$344 + ($mul8_i << 2) >> 2];
            HEAP32[$342 + (($mul5_i | 1) << 2) >> 2] = HEAP32[$344 + (($mul8_i | 1) << 2) >> 2];
            HEAP32[$342 + (($mul5_i | 2) << 2) >> 2] = HEAP32[$344 + (($mul8_i | 2) << 2) >> 2];
            HEAP32[$342 + (($mul5_i | 3) << 2) >> 2] = HEAP32[$344 + (($mul8_i | 3) << 2) >> 2];
            $inc_i = $nv_053_i + 1 | 0;
            $352 = HEAP32[$nverts343 >> 2] | 0;
            if (($nv_053_i | 0) < ($352 | 0)) {
             $nv_053_i = $inc_i;
             $347 = $352;
            } else {
             $nv_0_lcssa_i = $inc_i;
             break;
            }
           }
          }
          $345 = HEAP32[$nverts328 >> 2] | 0;
          if (($345 | 0) < 0) {
           $nv_1_lcssa_i = $nv_0_lcssa_i;
          } else {
           $346 = HEAP32[$verts327 >> 2] | 0;
           $i20_049_i = 0;
           $nv_150_i = $nv_0_lcssa_i;
           $353 = $345;
           while (1) {
            $mul26_i = $nv_150_i << 2;
            $mul32_i = (($i20_049_i + $341 | 0) % ($353 | 0) | 0) << 2;
            HEAP32[$342 + ($mul26_i << 2) >> 2] = HEAP32[$346 + ($mul32_i << 2) >> 2];
            HEAP32[$342 + (($mul26_i | 1) << 2) >> 2] = HEAP32[$346 + (($mul32_i | 1) << 2) >> 2];
            HEAP32[$342 + (($mul26_i | 2) << 2) >> 2] = HEAP32[$346 + (($mul32_i | 2) << 2) >> 2];
            HEAP32[$342 + (($mul26_i | 3) << 2) >> 2] = HEAP32[$346 + (($mul32_i | 3) << 2) >> 2];
            $inc43_i = $nv_150_i + 1 | 0;
            $358 = HEAP32[$nverts328 >> 2] | 0;
            if (($i20_049_i | 0) < ($358 | 0)) {
             $i20_049_i = $i20_049_i + 1 | 0;
             $nv_150_i = $inc43_i;
             $353 = $358;
            } else {
             $nv_1_lcssa_i = $inc43_i;
             break;
            }
           }
          }
          $359 = HEAP32[$verts355 >> 2] | 0;
          if (($359 | 0) != 0) {
           _free($359);
          }
          HEAP32[$verts355 >> 2] = $342;
          HEAP32[$nverts343 >> 2] = $nv_1_lcssa_i;
          $361 = HEAP32[$verts327 >> 2] | 0;
          if (($361 | 0) != 0) {
           _free($361);
          }
          HEAP32[$verts327 >> 2] = 0;
          HEAP32[$nverts328 >> 2] = 0;
          break L485;
         }
        }
       } while (0);
       __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 4848, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $i319_0437, tempVarArgs) | 0);
       STACKTOP = tempVarArgs;
      }
     }
    } while (0);
    $i319_0437 = $i319_0437 + 1 | 0;
    $310 = HEAP32[$nconts >> 2] | 0;
   } while (($i319_0437 | 0) < ($310 | 0));
  }
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
   $retval_0 = 1;
   $simplified_sroa_0_39 = $simplified_sroa_0_1;
   $verts_sroa_0_18 = $verts_sroa_0_1;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 4);
   $retval_0 = 1;
   $simplified_sroa_0_39 = $simplified_sroa_0_1;
   $verts_sroa_0_18 = $verts_sroa_0_1;
  }
 }
 if (($simplified_sroa_0_39 | 0) != 0) {
  _free($simplified_sroa_0_39);
 }
 if (($verts_sroa_0_18 | 0) != 0) {
  _free($verts_sroa_0_18);
 }
 _free($call_i_i1);
 $retval_2 = $retval_0;
 STACKTOP = sp;
 return $retval_2 | 0;
}
function __Z15rcBuildPolyMeshP9rcContextR12rcContourSetiR10rcPolyMesh($ctx, $cset, $nvp, $mesh) {
 $ctx = $ctx | 0;
 $cset = $cset | 0;
 $nvp = $nvp | 0;
 $mesh = $mesh | 0;
 var $ea628_i = 0, $eb629_i = 0, $ea = 0, $eb = 0, $m_timerEnabled_i = 0, $borderSize8 = 0, $nconts = 0, $12 = 0, $13 = 0, $maxVertices_0736 = 0, $maxTris_0735 = 0, $maxVertsPerCont_0734 = 0, $i_0733 = 0, $14 = 0, $maxVertsPerCont_1 = 0, $maxTris_1 = 0, $maxVertices_1 = 0, $maxVertsPerCont_0_lcssa931 = 0, $maxTris_0_lcssa930 = 0, $maxVertices_0_lcssa929 = 0, $call_i_i = 0, $mul31 = 0, $call_i_i1 = 0, $verts = 0, $mul39 = 0, $mul40 = 0, $mul41 = 0, $call_i_i2 = 0, $polys = 0, $mul48 = 0, $call_i_i3 = 0, $regs = 0, $call_i_i4 = 0, $areas = 0, $nverts67 = 0, $npolys = 0, $nvp68 = 0, $mul80 = 0, $call_i_i5 = 0, $28 = 0, $call_i_i6 = 0, $32 = 0, $call_i_i7 = 0, $36 = 0, $call_i_i8 = 0, $40 = 0, $call_i_i9 = 0, $44 = 0, $mul150 = 0, $conts162 = 0, $mul235 = 0, $cmp293 = 0, $cmp361721 = 0, $48 = 0, $49 = 0, $i157_0729 = 0, $52 = 0, $nverts164 = 0, $j_0688 = 0, $54 = 0, $verts179 = 0, $call187 = 0, $ntris_0 = 0, $j193_0691 = 0, $mul198 = 0, $57 = 0, $58 = 0, $conv = 0, $59 = 0, $conv203 = 0, $60 = 0, $conv205 = 0, $61 = 0, $arrayidx_i = 0, $i_027_i = 0, $conv9_i = 0, $i_029_i = 0, $mul_i = 0, $sub_i = 0, $i_0_i = 0, $65 = 0, $mul20_i = 0, $_sink = 0, $conv214 = 0, $j236_0694 = 0, $npolys231_0693 = 0, $mul240 = 0, $69 = 0, $70 = 0, $71 = 0, $mul260 = 0, $npolys231_1 = 0, $npolys231_2 = 0, $sub298 = 0, $bestEb_1_lcssa = 0, $bestEa_1_lcssa = 0, $bestPb_1_lcssa = 0, $bestPa_1_lcssa = 0, $bestMergeVal_1_lcssa = 0, $j296_0714 = 0, $bestEb_0713 = 0, $bestEa_0712 = 0, $bestPb_0711 = 0, $bestPa_0710 = 0, $bestMergeVal_0709 = 0, $arrayidx304 = 0, $k_0702 = 0, $bestEb_1701 = 0, $bestEa_1700 = 0, $bestPb_1699 = 0, $bestPa_1698 = 0, $bestMergeVal_1697 = 0, $arrayidx312 = 0, $call316 = 0, $bestMergeVal_2 = 0, $bestPa_2 = 0, $bestPb_2 = 0, $bestEa_2 = 0, $bestEb_2 = 0, $inc321 = 0, $mul328 = 0, $arrayidx331 = 0, $mul332 = 0, $arrayidx335 = 0, $i_05_i_i356 = 0, $inc_i_i359 = 0, $retval_0_i_i361 = 0, $i_05_i20_i = 0, $inc_i23_i = 0, $retval_0_i27_i = 0, $retval_0_i25_i = 0, $sub_i363 = 0, $add_i364 = 0, $n_0_lcssa_i = 0, $sub12_i = 0, $add15_i = 0, $i_033_i = 0, $inc8_i = 0, $i10_030_i = 0, $n_129_i = 0, $npolys231_3 = 0, $reg = 0, $area = 0, $85 = 0, $j346_0724 = 0, $mul352 = 0, $86 = 0, $mul355 = 0, $k359_0722 = 0, $92 = 0, $inc386 = 0, $94 = 0, $i388_0684 = 0, $conv398 = 0, $96 = 0, $97 = 0, $mul_i376 = 0, $98 = 0, $cmp4_i_i378 = 0, $numTouchedVerts_0107_i = 0, $numRemainingEdges_0106_i = 0, $i_0105_i = 0, $mul2_i380 = 0, $i_05_i_i384 = 0, $inc_i_i387 = 0, $retval_0_i_i389 = 0, $numTouchedVerts_1100_i = 0, $numRemoved_099_i = 0, $numVerts_098_i = 0, $numRemoved_1_i = 0, $numTouchedVerts_2_i = 0, $numTouchedVerts_1_lcssa114_i = 0, $numRemainingEdges_1_i = 0, $call_i_i13 = 0, $101 = 0, $102 = 0, $103 = 0, $i_05_i58_us_i = 0, $inc_i61_us_i = 0, $retval_0_i63_ph_us_i = 0, $105 = 0, $nedges_1_lcssa_us_i = 0, $k_090_us_i = 0, $j45_089_us_i = 0, $nedges_188_us_i = 0, $106 = 0, $_pre926 = 0, $107 = 0, $conv60_us_i = 0, $conv62_us_i = 0, $cmp64_us_i = 0, $conv62_conv60_us_i = 0, $conv60_conv62_us_i = 0, $mul87_us_i = 0, $nedges_2_us_i = 0, $inc98_us_i = 0, $m_085_us_i = 0, $exists_0_off084_us_i = 0, $mul71_us_i = 0, $arrayidx78_us_i = 0, $exists_1_off0_us_i = 0, $110 = 0, $i32_094_us_i = 0, $nedges_093_us_i = 0, $mul39_us_i = 0, $i103_082_i = 0, $numOpenEdges_081_i = 0, $113 = 0, $114 = 0, $mul_i328 = 0, $115 = 0, $cmp4_i_i = 0, $numRemovedVerts_0665_i = 0, $i_0664_i = 0, $mul2_i = 0, $i_05_i_i = 0, $inc_i_i = 0, $retval_0_i_i = 0, $numRemovedVerts_1661_i = 0, $j_0660_i = 0, $inc_numRemovedVerts_1_i = 0, $inc9_i = 0, $numRemovedVerts_1_lcssa_i = 0, $inc11_i = 0, $numRemovedVerts_0_lcssa_i = 0, $mul14_i = 0, $call_i_i19 = 0, $118 = 0, $mul20_i333 = 0, $call_i_i20 = 0, $122 = 0, $mul33_i = 0, $call_i_i21 = 0, $126 = 0, $mul46_i = 0, $call_i_i22 = 0, $130 = 0, $131 = 0, $mul68_i = 0, $cmp4_i281_i = 0, $mul59_i = 0, $135 = 0, $nedges_0657_i = 0, $i62_0656_i = 0, $mul69_i = 0, $136 = 0, $arrayidx71_i = 0, $i_05_i284_i = 0, $inc_i287_i = 0, $retval_0_i289_i = 0, $hasRem_0_off0648_i = 0, $j75_0647_i = 0, $nedges_1653_i = 0, $j90_0652_i = 0, $k_0651_i = 0, $139 = 0, $140 = 0, $mul103_i = 0, $nedges_2_i = 0, $inc122_i = 0, $sub133_i = 0, $149 = 0, $151 = 0, $dec_i = 0, $154 = 0, $i62_1_i = 0, $nedges_3_i = 0, $inc148_i = 0, $155 = 0, $nedges_0_lcssa_i = 0, $conv151_i = 0, $156 = 0, $157 = 0, $i150_0643_i = 0, $mul155_i = 0, $mul158_i = 0, $mul191_i = 0, $161 = 0, $cmp4_i295_i = 0, $i185_0641_i = 0, $mul192_i = 0, $i_05_i298_i = 0, $inc_i301_i = 0, $retval_0_i303_i = 0, $j198_0639_i = 0, $arrayidx202_i = 0, $163 = 0, $i216_0637_i = 0, $mul220_i = 0, $arrayidx224_i = 0, $164 = 0, $arrayidx239_i = 0, $165 = 0, $_ph_i = 0, $_ph632_i = 0, $_ph633_i = 0, $match_0_off0_ph_i = 0, $i275_0_ph_i = 0, $nedges_5_ph_i = 0, $match_0_off0_us_i = 0, $i275_0_us_i = 0, $i275_0_lcssa_i = 0, $match_0_off0_lcssa_i = 0, $mul279_i = 0, $arrayidx283_i = 0, $171 = 0, $arrayidx288_i = 0, $172 = 0, $arrayidx293_i = 0, $173 = 0, $arrayidx298_i = 0, $174 = 0, $i_08_i_i = 0, $i_08_i366_i = 0, $i_08_i379_i = 0, $sub333_i = 0, $187 = 0, $188 = 0, $189 = 0, $match_1_off0_i = 0, $i275_1_i = 0, $nedges_6_i = 0, $call_i_i23 = 0, $190 = 0, $call_i_i24 = 0, $194 = 0, $mul409_i = 0, $call_i_i25 = 0, $198 = 0, $199 = 0, $i423_0631_i = 0, $mul430_i = 0, $mul435_i = 0, $call480_i = 0, $ntris_0_i = 0, $add487_i = 0, $mul488_i = 0, $call_i_i26 = 0, $207 = 0, $mul499_i = 0, $call_i_i27 = 0, $211 = 0, $call_i_i28 = 0, $mul524_i = 0, $arrayidx527_i = 0, $j533_0628_i = 0, $npolys528_0627_i = 0, $mul537_i = 0, $218 = 0, $219 = 0, $220 = 0, $mul558_i = 0, $npolys528_1_i = 0, $226 = 0, $sub612_i481 = 0, $sub612_i484 = 0, $npolys528_2_i483 = 0, $bestEb_1_lcssa_i = 0, $bestEa_1_lcssa_i = 0, $bestPb_1_lcssa_i = 0, $bestPa_1_lcssa_i = 0, $bestMergeVal_1_lcssa_i = 0, $j610_0619_i = 0, $bestEb_0618_i = 0, $bestEa_0617_i = 0, $bestPb_0616_i = 0, $bestPa_0615_i = 0, $bestMergeVal_0614_i = 0, $arrayidx618_i = 0, $k619_0608_i = 0, $bestEb_1607_i = 0, $bestEa_1606_i = 0, $bestPb_1605_i = 0, $bestPa_1604_i = 0, $bestMergeVal_1603_i = 0, $arrayidx627_i = 0, $call632_i = 0, $bestMergeVal_2_i = 0, $bestPa_2_i = 0, $bestPb_2_i = 0, $bestEa_2_i = 0, $bestEb_2_i = 0, $inc637_i = 0, $mul644_i = 0, $arrayidx647_i = 0, $mul648_i = 0, $arrayidx651_i = 0, $i_05_i_i_i = 0, $inc_i_i_i = 0, $retval_0_i_i_i = 0, $i_05_i20_i_i = 0, $inc_i23_i_i = 0, $retval_0_i25_i_i = 0, $sub_i_i337 = 0, $add_i_i = 0, $n_0_lcssa_i_i = 0, $sub12_i_i = 0, $add15_i_i = 0, $i_033_i_i = 0, $inc8_i_i = 0, $i10_030_i_i = 0, $n_129_i_i = 0, $sub612_i = 0, $npolys528_3_i = 0, $mul693_i = 0, $cmp696598_i = 0, $239 = 0, $i678_0601_i = 0, $mul689_i = 0, $240 = 0, $mul698_i = 0, $j694_0599_i = 0, $244 = 0, $248 = 0, $inc720_i = 0, $inc728_i = 0, $retval_0_i = 0, $retval_2_i = 0, $retval_2_i193 = 0, $retval_5_i = 0, $retval_6_i = 0, $249 = 0, $j409_0486 = 0, $add414 = 0, $251 = 0, $252 = 0, $253 = 0, $i388_1 = 0, $inc427 = 0, $_lcssa511 = 0, $254 = 0, $255 = 0, $mul_i109 = 0, $call_i_i_i = 0, $256 = 0, $call_i_i1_i = 0, $257 = 0, $cmp71103_i = 0, $edgeCount_0110_i = 0, $i7_0109_i = 0, $mul12_i = 0, $arrayidx13_i115 = 0, $conv39_i = 0, $j_0_ph_i = 0, $edgeCount_1_ph_i = 0, $j_0_i = 0, $259 = 0, $add22_i = 0, $260 = 0, $cond_i117 = 0, $arrayidx48_i = 0, $i61_0106_i = 0, $mul67_i = 0, $arrayidx68_i = 0, $conv121_i = 0, $j69_0104_i = 0, $263 = 0, $cmp82_i118 = 0, $264 = 0, $cond94_i = 0, $e_099_i = 0, $conv102102_in_i = 0, $conv102102_i = 0, $arrayidx117_i = 0, $i139_096_i = 0, $arrayidx146_i = 0, $269 = 0, $270 = 0, $mul157_i = 0, $mul163_i = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $cmp452471 = 0, $i440_0474 = 0, $mul447 = 0, $add459 = 0, $j450_0472 = 0, $279 = 0, $arrayidx460 = 0, $nj_0 = 0, $mul474 = 0, $282 = 0, $mul479 = 0, $arrayidx481 = 0, $284 = 0, $286 = 0, $inc533 = 0, $290 = 0, $call_i_i126 = 0, $292 = 0, $293 = 0, $294 = 0, $retval_0 = 0, $retval_1 = 0, $retval_2 = 0, $retval_3 = 0, $retval_4 = 0, $retval_5 = 0, $retval_6 = 0, label = 0, tempVarArgs = 0, sp = 0, $j296_0714$looptemp = 0, $i150_0643_i$looptemp = 0, $i_08_i_i$looptemp = 0, $i_08_i366_i$looptemp = 0, $i_08_i379_i$looptemp = 0, $j610_0619_i$looptemp = 0, $j69_0104_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $ea628_i = sp | 0;
 $eb629_i = sp + 8 | 0;
 $ea = sp + 16 | 0;
 $eb = sp + 24 | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 11);
 }
 HEAPF32[$mesh + 36 >> 2] = +HEAPF32[$cset + 8 >> 2];
 HEAPF32[$mesh + 40 >> 2] = +HEAPF32[$cset + 12 >> 2];
 HEAPF32[$mesh + 44 >> 2] = +HEAPF32[$cset + 16 >> 2];
 HEAPF32[$mesh + 48 >> 2] = +HEAPF32[$cset + 20 >> 2];
 HEAPF32[$mesh + 52 >> 2] = +HEAPF32[$cset + 24 >> 2];
 HEAPF32[$mesh + 56 >> 2] = +HEAPF32[$cset + 28 >> 2];
 HEAPF32[$mesh + 60 >> 2] = +HEAPF32[$cset + 32 >> 2];
 HEAPF32[$mesh + 64 >> 2] = +HEAPF32[$cset + 36 >> 2];
 $borderSize8 = $mesh + 68 | 0;
 HEAP32[$borderSize8 >> 2] = HEAP32[$cset + 48 >> 2];
 $nconts = $cset + 4 | 0;
 $12 = HEAP32[$nconts >> 2] | 0;
 if (($12 | 0) > 0) {
  $13 = HEAP32[$cset >> 2] | 0;
  $i_0733 = 0;
  $maxVertsPerCont_0734 = 0;
  $maxTris_0735 = 0;
  $maxVertices_0736 = 0;
  while (1) {
   $14 = HEAP32[$13 + ($i_0733 * 20 | 0) + 4 >> 2] | 0;
   if (($14 | 0) < 3) {
    $maxVertices_1 = $maxVertices_0736;
    $maxTris_1 = $maxTris_0735;
    $maxVertsPerCont_1 = $maxVertsPerCont_0734;
   } else {
    $maxVertices_1 = $14 + $maxVertices_0736 | 0;
    $maxTris_1 = $maxTris_0735 - 2 + $14 | 0;
    $maxVertsPerCont_1 = ($maxVertsPerCont_0734 | 0) > ($14 | 0) ? $maxVertsPerCont_0734 : $14;
   }
   $i_0733 = $i_0733 + 1 | 0;
   if (($i_0733 | 0) >= ($12 | 0)) {
    break;
   } else {
    $maxVertsPerCont_0734 = $maxVertsPerCont_1;
    $maxTris_0735 = $maxTris_1;
    $maxVertices_0736 = $maxVertices_1;
   }
  }
  if (($maxVertices_1 | 0) > 65533) {
   __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7024, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertices_1, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $retval_6 = 0;
   STACKTOP = sp;
   return $retval_6 | 0;
  } else {
   $maxVertices_0_lcssa929 = $maxVertices_1;
   $maxTris_0_lcssa930 = $maxTris_1;
   $maxVertsPerCont_0_lcssa931 = $maxVertsPerCont_1;
  }
 } else {
  $maxVertices_0_lcssa929 = 0;
  $maxTris_0_lcssa930 = 0;
  $maxVertsPerCont_0_lcssa931 = 0;
 }
 $call_i_i = _malloc($maxVertices_0_lcssa929) | 0;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8832, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertices_0_lcssa929, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_6 = 0;
  STACKTOP = sp;
  return $retval_6 | 0;
 }
 _memset($call_i_i | 0, 0, $maxVertices_0_lcssa929 | 0) | 0;
 $mul31 = $maxVertices_0_lcssa929 * 6 | 0;
 $call_i_i1 = _malloc($mul31) | 0;
 $verts = $mesh | 0;
 HEAP32[$verts >> 2] = $call_i_i1;
 do {
  if (($call_i_i1 | 0) == 0) {
   __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6856, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertices_0_lcssa929, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $retval_5 = 0;
  } else {
   $mul39 = $maxTris_0_lcssa930 << 1;
   $mul40 = $nvp << 1;
   $mul41 = Math_imul($mul40, $mul39) | 0;
   $call_i_i2 = _malloc($mul41) | 0;
   $polys = $mesh + 4 | 0;
   HEAP32[$polys >> 2] = $call_i_i2;
   if (($call_i_i2 | 0) == 0) {
    $mul48 = Math_imul($mul40, $maxTris_0_lcssa930) | 0;
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 5800, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul48, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_5 = 0;
    break;
   }
   $call_i_i3 = _malloc($mul39) | 0;
   $regs = $mesh + 8 | 0;
   HEAP32[$regs >> 2] = $call_i_i3;
   if (($call_i_i3 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxTris_0_lcssa930, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_5 = 0;
    break;
   }
   $call_i_i4 = _malloc($maxTris_0_lcssa930) | 0;
   $areas = $mesh + 16 | 0;
   HEAP32[$areas >> 2] = $call_i_i4;
   if (($call_i_i4 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 3976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxTris_0_lcssa930, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_5 = 0;
    break;
   }
   $nverts67 = $mesh + 20 | 0;
   HEAP32[$nverts67 >> 2] = 0;
   $npolys = $mesh + 24 | 0;
   HEAP32[$npolys >> 2] = 0;
   $nvp68 = $mesh + 32 | 0;
   HEAP32[$nvp68 >> 2] = $nvp;
   HEAP32[$mesh + 28 >> 2] = $maxTris_0_lcssa930;
   _memset(HEAP32[$verts >> 2] | 0, 0, $mul31 | 0) | 0;
   _memset(HEAP32[$polys >> 2] | 0, -1 | 0, $mul41 | 0) | 0;
   _memset(HEAP32[$regs >> 2] | 0, 0, $mul39 | 0) | 0;
   _memset(HEAP32[$areas >> 2] | 0, 0, $maxTris_0_lcssa930 | 0) | 0;
   $mul80 = $maxVertices_0_lcssa929 << 2;
   $call_i_i5 = _malloc($mul80) | 0;
   $28 = $call_i_i5;
   if (($call_i_i5 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 3072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertices_0_lcssa929, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_5 = 0;
    break;
   }
   _memset($call_i_i5 | 0, 0, $mul80 | 0) | 0;
   $call_i_i6 = _malloc(16384) | 0;
   $32 = $call_i_i6;
   if (($call_i_i6 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 2040, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 4096, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_4 = 0;
   } else {
    _memset($call_i_i6 | 0, -1 | 0, 16384) | 0;
    $call_i_i7 = _malloc($maxVertsPerCont_0_lcssa931 << 2) | 0;
    $36 = $call_i_i7;
    if (($call_i_i7 | 0) == 0) {
     __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 1400, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertsPerCont_0_lcssa931, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
     $retval_3 = 0;
    } else {
     $call_i_i8 = _malloc($maxVertsPerCont_0_lcssa931 * 12 | 0) | 0;
     $40 = $call_i_i8;
     if (($call_i_i8 | 0) == 0) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $maxVertsPerCont_0_lcssa931 * 3 | 0, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_2 = 0;
     } else {
      $call_i_i9 = _malloc(Math_imul(($maxVertsPerCont_0_lcssa931 << 1) + 2 | 0, $nvp) | 0) | 0;
      $44 = $call_i_i9;
      $mul150 = Math_imul($maxVertsPerCont_0_lcssa931, $nvp) | 0;
      if (($call_i_i9 | 0) == 0) {
       __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 10336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul150, tempVarArgs) | 0);
       STACKTOP = tempVarArgs;
       $retval_1 = 0;
      } else {
       L46 : do {
        if ((HEAP32[$nconts >> 2] | 0) > 0) {
         $conts162 = $cset | 0;
         $mul235 = $mul150 << 1;
         $cmp293 = ($nvp | 0) > 3;
         $cmp361721 = ($nvp | 0) > 0;
         $48 = $44 + ($mul150 << 1) | 0;
         $i157_0729 = 0;
         L48 : while (1) {
          $52 = HEAP32[$conts162 >> 2] | 0;
          $nverts164 = $52 + ($i157_0729 * 20 | 0) + 4 | 0;
          if ((HEAP32[$nverts164 >> 2] | 0) >= 3) {
           $j_0688 = 0;
           do {
            HEAP32[$36 + ($j_0688 << 2) >> 2] = $j_0688;
            $j_0688 = $j_0688 + 1 | 0;
            $54 = HEAP32[$nverts164 >> 2] | 0;
           } while (($j_0688 | 0) < ($54 | 0));
           $verts179 = $52 + ($i157_0729 * 20 | 0) | 0;
           $call187 = __ZL11triangulateiPKiPiS1_($54, HEAP32[$verts179 >> 2] | 0, $36, $40) | 0;
           if (($call187 | 0) < 1) {
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 9536, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $i157_0729, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            $ntris_0 = -$call187 | 0;
           } else {
            $ntris_0 = $call187;
           }
           if ((HEAP32[$nverts164 >> 2] | 0) > 0) {
            $j193_0691 = 0;
            do {
             $mul198 = $j193_0691 << 2;
             $57 = HEAP32[$verts179 >> 2] | 0;
             $58 = HEAP32[$57 + ($mul198 << 2) >> 2] | 0;
             $conv = $58 & 65535;
             $59 = HEAP32[$57 + (($mul198 | 1) << 2) >> 2] | 0;
             $conv203 = $59 & 65535;
             $60 = HEAP32[$57 + (($mul198 | 2) << 2) >> 2] | 0;
             $conv205 = $60 & 65535;
             $61 = HEAP32[$verts >> 2] | 0;
             $arrayidx_i = $32 + (((Math_imul($60 & 65535, -887442657) | 0) + (Math_imul($58 & 65535, -1918454973) | 0) & 4095) << 2) | 0;
             $i_027_i = HEAP32[$arrayidx_i >> 2] | 0;
             L61 : do {
              if (($i_027_i | 0) == -1) {
               label = 55;
              } else {
               $conv9_i = $59 & 65535;
               $i_029_i = $i_027_i;
               while (1) {
                $mul_i = $i_029_i * 3 | 0;
                if ((HEAP16[$61 + ($mul_i << 1) >> 1] | 0) == $conv << 16 >> 16) {
                 $sub_i = (HEAPU16[$61 + ($mul_i + 1 << 1) >> 1] | 0) - $conv9_i | 0;
                 if (((($sub_i | 0) < 0 ? -$sub_i | 0 : $sub_i) | 0) < 3) {
                  if ((HEAP16[$61 + ($mul_i + 2 << 1) >> 1] | 0) == $conv205 << 16 >> 16) {
                   $_sink = $i_029_i;
                   break L61;
                  }
                 }
                }
                $i_0_i = HEAP32[$28 + ($i_029_i << 2) >> 2] | 0;
                if (($i_0_i | 0) == -1) {
                 label = 55;
                 break;
                } else {
                 $i_029_i = $i_0_i;
                }
               }
              }
             } while (0);
             if ((label | 0) == 55) {
              label = 0;
              $65 = HEAP32[$nverts67 >> 2] | 0;
              HEAP32[$nverts67 >> 2] = $65 + 1;
              $mul20_i = $65 * 3 | 0;
              HEAP16[$61 + ($mul20_i << 1) >> 1] = $conv;
              HEAP16[$61 + ($mul20_i + 1 << 1) >> 1] = $conv203;
              HEAP16[$61 + ($mul20_i + 2 << 1) >> 1] = $conv205;
              HEAP32[$28 + ($65 << 2) >> 2] = HEAP32[$arrayidx_i >> 2];
              HEAP32[$arrayidx_i >> 2] = $65;
              $_sink = $65;
             }
             $conv214 = $_sink & 65535;
             HEAP32[$36 + ($j193_0691 << 2) >> 2] = $conv214;
             if ((HEAP32[$57 + (($mul198 | 3) << 2) >> 2] & 65536 | 0) != 0) {
              HEAP8[$call_i_i + $conv214 >> 0] = 1;
             }
             $j193_0691 = $j193_0691 + 1 | 0;
            } while (($j193_0691 | 0) < (HEAP32[$nverts164 >> 2] | 0));
           }
           _memset($call_i_i9 | 0, -1 | 0, $mul235 | 0) | 0;
           if (($ntris_0 | 0) > 0) {
            $npolys231_0693 = 0;
            $j236_0694 = 0;
            while (1) {
             $mul240 = $j236_0694 * 3 | 0;
             $69 = HEAP32[$40 + ($mul240 << 2) >> 2] | 0;
             $70 = HEAP32[$40 + ($mul240 + 1 << 2) >> 2] | 0;
             if (($69 | 0) == ($70 | 0)) {
              $npolys231_1 = $npolys231_0693;
             } else {
              $71 = HEAP32[$40 + ($mul240 + 2 << 2) >> 2] | 0;
              if (($69 | 0) == ($71 | 0) | ($70 | 0) == ($71 | 0)) {
               $npolys231_1 = $npolys231_0693;
              } else {
               $mul260 = Math_imul($npolys231_0693, $nvp) | 0;
               HEAP16[$44 + ($mul260 << 1) >> 1] = HEAP32[$36 + ($69 << 2) >> 2];
               HEAP16[$44 + ($mul260 + 1 << 1) >> 1] = HEAP32[$36 + ($70 << 2) >> 2];
               HEAP16[$44 + ($mul260 + 2 << 1) >> 1] = HEAP32[$36 + ($71 << 2) >> 2];
               $npolys231_1 = $npolys231_0693 + 1 | 0;
              }
             }
             $j236_0694 = $j236_0694 + 1 | 0;
             if (($j236_0694 | 0) >= ($ntris_0 | 0)) {
              break;
             } else {
              $npolys231_0693 = $npolys231_1;
             }
            }
            if (($npolys231_1 | 0) != 0) {
             L84 : do {
              if ($cmp293) {
               $npolys231_2 = $npolys231_1;
               while (1) {
                $sub298 = $npolys231_2 - 1 | 0;
                if (($sub298 | 0) > 0) {
                 $bestMergeVal_0709 = 0;
                 $bestPa_0710 = 0;
                 $bestPb_0711 = 0;
                 $bestEa_0712 = 0;
                 $bestEb_0713 = 0;
                 $j296_0714 = 0;
                } else {
                 $npolys231_3 = $npolys231_2;
                 break L84;
                }
                while (1) {
                 $arrayidx304 = $44 + ((Math_imul($j296_0714, $nvp) | 0) << 1) | 0;
                 $j296_0714$looptemp = $j296_0714;
                 $j296_0714 = $j296_0714 + 1 | 0;
                 if (($j296_0714 | 0) < ($npolys231_2 | 0)) {
                  $bestMergeVal_1697 = $bestMergeVal_0709;
                  $bestPa_1698 = $bestPa_0710;
                  $bestPb_1699 = $bestPb_0711;
                  $bestEa_1700 = $bestEa_0712;
                  $bestEb_1701 = $bestEb_0713;
                  $k_0702 = $j296_0714;
                  while (1) {
                   $arrayidx312 = $44 + ((Math_imul($k_0702, $nvp) | 0) << 1) | 0;
                   $call316 = __ZL17getPolyMergeValuePtS_PKtRiS2_i($arrayidx304, $arrayidx312, HEAP32[$verts >> 2] | 0, $ea, $eb, $nvp) | 0;
                   if (($call316 | 0) > ($bestMergeVal_1697 | 0)) {
                    $bestEb_2 = HEAP32[$eb >> 2] | 0;
                    $bestEa_2 = HEAP32[$ea >> 2] | 0;
                    $bestPb_2 = $k_0702;
                    $bestPa_2 = $j296_0714$looptemp;
                    $bestMergeVal_2 = $call316;
                   } else {
                    $bestEb_2 = $bestEb_1701;
                    $bestEa_2 = $bestEa_1700;
                    $bestPb_2 = $bestPb_1699;
                    $bestPa_2 = $bestPa_1698;
                    $bestMergeVal_2 = $bestMergeVal_1697;
                   }
                   $inc321 = $k_0702 + 1 | 0;
                   if (($inc321 | 0) < ($npolys231_2 | 0)) {
                    $bestMergeVal_1697 = $bestMergeVal_2;
                    $bestPa_1698 = $bestPa_2;
                    $bestPb_1699 = $bestPb_2;
                    $bestEa_1700 = $bestEa_2;
                    $bestEb_1701 = $bestEb_2;
                    $k_0702 = $inc321;
                   } else {
                    $bestMergeVal_1_lcssa = $bestMergeVal_2;
                    $bestPa_1_lcssa = $bestPa_2;
                    $bestPb_1_lcssa = $bestPb_2;
                    $bestEa_1_lcssa = $bestEa_2;
                    $bestEb_1_lcssa = $bestEb_2;
                    break;
                   }
                  }
                 } else {
                  $bestMergeVal_1_lcssa = $bestMergeVal_0709;
                  $bestPa_1_lcssa = $bestPa_0710;
                  $bestPb_1_lcssa = $bestPb_0711;
                  $bestEa_1_lcssa = $bestEa_0712;
                  $bestEb_1_lcssa = $bestEb_0713;
                 }
                 if (($j296_0714 | 0) >= ($sub298 | 0)) {
                  break;
                 } else {
                  $bestMergeVal_0709 = $bestMergeVal_1_lcssa;
                  $bestPa_0710 = $bestPa_1_lcssa;
                  $bestPb_0711 = $bestPb_1_lcssa;
                  $bestEa_0712 = $bestEa_1_lcssa;
                  $bestEb_0713 = $bestEb_1_lcssa;
                 }
                }
                if (($bestMergeVal_1_lcssa | 0) <= 0) {
                 $npolys231_3 = $npolys231_2;
                 break L84;
                }
                $mul328 = Math_imul($bestPa_1_lcssa, $nvp) | 0;
                $arrayidx331 = $44 + ($mul328 << 1) | 0;
                $mul332 = Math_imul($bestPb_1_lcssa, $nvp) | 0;
                $arrayidx335 = $44 + ($mul332 << 1) | 0;
                L98 : do {
                 if ($cmp361721) {
                  $i_05_i_i356 = 0;
                  while (1) {
                   $inc_i_i359 = $i_05_i_i356 + 1 | 0;
                   if ((HEAP16[$44 + ($i_05_i_i356 + $mul328 << 1) >> 1] | 0) == -1) {
                    $retval_0_i_i361 = $i_05_i_i356;
                    break;
                   }
                   if (($inc_i_i359 | 0) < ($nvp | 0)) {
                    $i_05_i_i356 = $inc_i_i359;
                   } else {
                    $retval_0_i_i361 = $nvp;
                    break;
                   }
                  }
                  $i_05_i20_i = 0;
                  while (1) {
                   $inc_i23_i = $i_05_i20_i + 1 | 0;
                   if ((HEAP16[$44 + ($i_05_i20_i + $mul332 << 1) >> 1] | 0) == -1) {
                    $retval_0_i25_i = $i_05_i20_i;
                    $retval_0_i27_i = $retval_0_i_i361;
                    break L98;
                   }
                   if (($inc_i23_i | 0) < ($nvp | 0)) {
                    $i_05_i20_i = $inc_i23_i;
                   } else {
                    $retval_0_i25_i = $nvp;
                    $retval_0_i27_i = $retval_0_i_i361;
                    break;
                   }
                  }
                 } else {
                  $retval_0_i25_i = $nvp;
                  $retval_0_i27_i = $nvp;
                 }
                } while (0);
                _memset($48 | 0, -1 | 0, $mul40 | 0) | 0;
                $sub_i363 = $retval_0_i27_i - 1 | 0;
                if (($sub_i363 | 0) > 0) {
                 $add_i364 = $bestEa_1_lcssa + 1 | 0;
                 $i_033_i = 0;
                 while (1) {
                  $inc8_i = $i_033_i + 1 | 0;
                  HEAP16[$44 + ($i_033_i + $mul150 << 1) >> 1] = HEAP16[$44 + ((($add_i364 + $i_033_i | 0) % ($retval_0_i27_i | 0) | 0) + $mul328 << 1) >> 1] | 0;
                  if (($inc8_i | 0) < ($sub_i363 | 0)) {
                   $i_033_i = $inc8_i;
                  } else {
                   $n_0_lcssa_i = $sub_i363;
                   break;
                  }
                 }
                } else {
                 $n_0_lcssa_i = 0;
                }
                $sub12_i = $retval_0_i25_i - 1 | 0;
                if (($sub12_i | 0) > 0) {
                 $add15_i = $bestEb_1_lcssa + 1 | 0;
                 $n_129_i = $n_0_lcssa_i;
                 $i10_030_i = 0;
                 while (1) {
                  HEAP16[$44 + ($n_129_i + $mul150 << 1) >> 1] = HEAP16[$44 + ((($add15_i + $i10_030_i | 0) % ($retval_0_i25_i | 0) | 0) + $mul332 << 1) >> 1] | 0;
                  $i10_030_i = $i10_030_i + 1 | 0;
                  if (($i10_030_i | 0) >= ($sub12_i | 0)) {
                   break;
                  } else {
                   $n_129_i = $n_129_i + 1 | 0;
                  }
                 }
                }
                _memcpy($arrayidx331 | 0, $48 | 0, $mul40) | 0;
                _memcpy($arrayidx335 | 0, $44 + ((Math_imul($sub298, $nvp) | 0) << 1) | 0, $mul40) | 0;
                $npolys231_2 = $sub298;
               }
              } else {
               $npolys231_3 = $npolys231_1;
              }
             } while (0);
             if (($npolys231_3 | 0) > 0) {
              $reg = $52 + ($i157_0729 * 20 | 0) + 16 | 0;
              $area = $52 + ($i157_0729 * 20 | 0) + 18 | 0;
              $j346_0724 = 0;
              $85 = HEAP32[$npolys >> 2] | 0;
              do {
               $mul352 = Math_imul($mul40, $85) | 0;
               $86 = HEAP32[$polys >> 2] | 0;
               $mul355 = Math_imul($j346_0724, $nvp) | 0;
               if ($cmp361721) {
                $k359_0722 = 0;
                do {
                 HEAP16[$86 + ($k359_0722 + $mul352 << 1) >> 1] = HEAP16[$44 + ($k359_0722 + $mul355 << 1) >> 1] | 0;
                 $k359_0722 = $k359_0722 + 1 | 0;
                } while (($k359_0722 | 0) < ($nvp | 0));
               }
               HEAP16[(HEAP32[$regs >> 2] | 0) + ($85 << 1) >> 1] = HEAP16[$reg >> 1] | 0;
               HEAP8[(HEAP32[$areas >> 2] | 0) + $85 >> 0] = HEAP8[$area >> 0] | 0;
               $92 = HEAP32[$npolys >> 2] | 0;
               $85 = $92 + 1 | 0;
               HEAP32[$npolys >> 2] = $85;
               $j346_0724 = $j346_0724 + 1 | 0;
               if (($92 | 0) >= ($maxTris_0_lcssa930 | 0)) {
                break L48;
               }
              } while (($j346_0724 | 0) < ($npolys231_3 | 0));
             }
            }
           }
          }
          $inc386 = $i157_0729 + 1 | 0;
          if (($inc386 | 0) < (HEAP32[$nconts >> 2] | 0)) {
           $i157_0729 = $inc386;
          } else {
           label = 41;
           break L46;
          }
         }
         __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8944, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $85, HEAP32[tempVarArgs + 8 >> 2] = $maxTris_0_lcssa930, tempVarArgs) | 0);
         STACKTOP = tempVarArgs;
         $retval_0 = 0;
        } else {
         label = 41;
        }
       } while (0);
       L128 : do {
        if ((label | 0) == 41) {
         $49 = HEAP32[$nverts67 >> 2] | 0;
         L130 : do {
          if (($49 | 0) > 0) {
           $i388_0684 = 0;
           $94 = $49;
           L132 : while (1) {
            L134 : do {
             if ((HEAP8[$call_i_i + $i388_0684 >> 0] | 0) == 0) {
              $i388_1 = $i388_0684;
              $253 = $94;
             } else {
              $conv398 = $i388_0684 & 65535;
              $96 = HEAP32[$nvp68 >> 2] | 0;
              $97 = HEAP32[$npolys >> 2] | 0;
              if (($97 | 0) > 0) {
               $mul_i376 = $96 << 1;
               $98 = HEAP32[$polys >> 2] | 0;
               $cmp4_i_i378 = ($96 | 0) > 0;
               $i_0105_i = 0;
               $numRemainingEdges_0106_i = 0;
               $numTouchedVerts_0107_i = 0;
               while (1) {
                $mul2_i380 = Math_imul($i_0105_i, $mul_i376) | 0;
                if ($cmp4_i_i378) {
                 $i_05_i_i384 = 0;
                 while (1) {
                  $inc_i_i387 = $i_05_i_i384 + 1 | 0;
                  if ((HEAP16[$98 + ($i_05_i_i384 + $mul2_i380 << 1) >> 1] | 0) == -1) {
                   $retval_0_i_i389 = $i_05_i_i384;
                   break;
                  }
                  if (($inc_i_i387 | 0) < ($96 | 0)) {
                   $i_05_i_i384 = $inc_i_i387;
                  } else {
                   $retval_0_i_i389 = $96;
                   break;
                  }
                 }
                 if (($retval_0_i_i389 | 0) > 0) {
                  $numVerts_098_i = 0;
                  $numRemoved_099_i = 0;
                  $numTouchedVerts_1100_i = $numTouchedVerts_0107_i;
                  while (1) {
                   if ((HEAP16[$98 + ($numVerts_098_i + $mul2_i380 << 1) >> 1] | 0) == $conv398 << 16 >> 16) {
                    $numTouchedVerts_2_i = $numTouchedVerts_1100_i + 1 | 0;
                    $numRemoved_1_i = $numRemoved_099_i + 1 | 0;
                   } else {
                    $numTouchedVerts_2_i = $numTouchedVerts_1100_i;
                    $numRemoved_1_i = $numRemoved_099_i;
                   }
                   $numVerts_098_i = $numVerts_098_i + 1 | 0;
                   if (($numVerts_098_i | 0) >= ($retval_0_i_i389 | 0)) {
                    break;
                   } else {
                    $numRemoved_099_i = $numRemoved_1_i;
                    $numTouchedVerts_1100_i = $numTouchedVerts_2_i;
                   }
                  }
                  if (($numRemoved_1_i | 0) == 0) {
                   $numRemainingEdges_1_i = $numRemainingEdges_0106_i;
                   $numTouchedVerts_1_lcssa114_i = $numTouchedVerts_2_i;
                  } else {
                   $numRemainingEdges_1_i = $numRemainingEdges_0106_i - 1 + $retval_0_i_i389 - $numRemoved_1_i | 0;
                   $numTouchedVerts_1_lcssa114_i = $numTouchedVerts_2_i;
                  }
                 } else {
                  $numRemainingEdges_1_i = $numRemainingEdges_0106_i;
                  $numTouchedVerts_1_lcssa114_i = $numTouchedVerts_0107_i;
                 }
                } else {
                 $numRemainingEdges_1_i = $numRemainingEdges_0106_i;
                 $numTouchedVerts_1_lcssa114_i = $numTouchedVerts_0107_i;
                }
                $i_0105_i = $i_0105_i + 1 | 0;
                if (($i_0105_i | 0) >= ($97 | 0)) {
                 break;
                } else {
                 $numRemainingEdges_0106_i = $numRemainingEdges_1_i;
                 $numTouchedVerts_0107_i = $numTouchedVerts_1_lcssa114_i;
                }
               }
               if (($numRemainingEdges_1_i | 0) < 3) {
                $i388_1 = $i388_0684;
                $253 = $94;
               } else {
                $call_i_i13 = _malloc($numTouchedVerts_1_lcssa114_i * 24 | 0) | 0;
                $101 = $call_i_i13;
                L154 : do {
                 if (($call_i_i13 | 0) == 0) {
                  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 4304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $numTouchedVerts_1_lcssa114_i * 6 | 0, tempVarArgs) | 0);
                  STACKTOP = tempVarArgs;
                 } else {
                  $102 = HEAP32[$npolys >> 2] | 0;
                  do {
                   if (($102 | 0) > 0) {
                    $103 = HEAP32[$polys >> 2] | 0;
                    if ($cmp4_i_i378) {
                     $nedges_093_us_i = 0;
                     $i32_094_us_i = 0;
                     $110 = $102;
                     while (1) {
                      $mul39_us_i = Math_imul($i32_094_us_i, $mul_i376) | 0;
                      $i_05_i58_us_i = 0;
                      while (1) {
                       $inc_i61_us_i = $i_05_i58_us_i + 1 | 0;
                       if ((HEAP16[$103 + ($i_05_i58_us_i + $mul39_us_i << 1) >> 1] | 0) == -1) {
                        $retval_0_i63_ph_us_i = $i_05_i58_us_i;
                        break;
                       }
                       if (($inc_i61_us_i | 0) < ($96 | 0)) {
                        $i_05_i58_us_i = $inc_i61_us_i;
                       } else {
                        $retval_0_i63_ph_us_i = $96;
                        break;
                       }
                      }
                      if (($retval_0_i63_ph_us_i | 0) > 0) {
                       $nedges_188_us_i = $nedges_093_us_i;
                       $j45_089_us_i = 0;
                       $k_090_us_i = $retval_0_i63_ph_us_i - 1 | 0;
                       while (1) {
                        $106 = HEAP16[$103 + ($j45_089_us_i + $mul39_us_i << 1) >> 1] | 0;
                        $_pre926 = HEAP16[$103 + ($k_090_us_i + $mul39_us_i << 1) >> 1] | 0;
                        if ($106 << 16 >> 16 == $conv398 << 16 >> 16) {
                         $107 = $_pre926;
                         label = 118;
                        } else {
                         if ($_pre926 << 16 >> 16 == $conv398 << 16 >> 16) {
                          $107 = $conv398;
                          label = 118;
                         } else {
                          $nedges_2_us_i = $nedges_188_us_i;
                         }
                        }
                        do {
                         if ((label | 0) == 118) {
                          label = 0;
                          $conv60_us_i = $106 & 65535;
                          $conv62_us_i = $107 & 65535;
                          $cmp64_us_i = $107 << 16 >> 16 == $conv398 << 16 >> 16;
                          $conv62_conv60_us_i = $cmp64_us_i ? $conv62_us_i : $conv60_us_i;
                          $conv60_conv62_us_i = $cmp64_us_i ? $conv60_us_i : $conv62_us_i;
                          if (($nedges_188_us_i | 0) > 0) {
                           $exists_0_off084_us_i = 0;
                           $m_085_us_i = 0;
                           while (1) {
                            $mul71_us_i = $m_085_us_i * 3 | 0;
                            if ((HEAP32[$101 + ($mul71_us_i + 1 << 2) >> 2] | 0) == ($conv60_conv62_us_i | 0)) {
                             $arrayidx78_us_i = $101 + ($mul71_us_i + 2 << 2) | 0;
                             HEAP32[$arrayidx78_us_i >> 2] = (HEAP32[$arrayidx78_us_i >> 2] | 0) + 1;
                             $exists_1_off0_us_i = 1;
                            } else {
                             $exists_1_off0_us_i = $exists_0_off084_us_i;
                            }
                            $m_085_us_i = $m_085_us_i + 1 | 0;
                            if (($m_085_us_i | 0) >= ($nedges_188_us_i | 0)) {
                             break;
                            } else {
                             $exists_0_off084_us_i = $exists_1_off0_us_i;
                            }
                           }
                           if ($exists_1_off0_us_i) {
                            $nedges_2_us_i = $nedges_188_us_i;
                            break;
                           }
                          }
                          $mul87_us_i = $nedges_188_us_i * 3 | 0;
                          HEAP32[$101 + ($mul87_us_i << 2) >> 2] = $conv62_conv60_us_i;
                          HEAP32[$101 + ($mul87_us_i + 1 << 2) >> 2] = $conv60_conv62_us_i;
                          HEAP32[$101 + ($mul87_us_i + 2 << 2) >> 2] = 1;
                          $nedges_2_us_i = $nedges_188_us_i + 1 | 0;
                         }
                        } while (0);
                        $inc98_us_i = $j45_089_us_i + 1 | 0;
                        if (($inc98_us_i | 0) < ($retval_0_i63_ph_us_i | 0)) {
                         $nedges_188_us_i = $nedges_2_us_i;
                         $k_090_us_i = $j45_089_us_i;
                         $j45_089_us_i = $inc98_us_i;
                        } else {
                         break;
                        }
                       }
                       $nedges_1_lcssa_us_i = $nedges_2_us_i;
                       $105 = HEAP32[$npolys >> 2] | 0;
                      } else {
                       $nedges_1_lcssa_us_i = $nedges_093_us_i;
                       $105 = $110;
                      }
                      $i32_094_us_i = $i32_094_us_i + 1 | 0;
                      if (($i32_094_us_i | 0) >= ($105 | 0)) {
                       break;
                      } else {
                       $nedges_093_us_i = $nedges_1_lcssa_us_i;
                       $110 = $105;
                      }
                     }
                     if (($nedges_1_lcssa_us_i | 0) > 0) {
                      $numOpenEdges_081_i = 0;
                      $i103_082_i = 0;
                      do {
                       $numOpenEdges_081_i = ((HEAP32[$101 + (($i103_082_i * 3 | 0) + 2 << 2) >> 2] | 0) < 2) + $numOpenEdges_081_i | 0;
                       $i103_082_i = $i103_082_i + 1 | 0;
                      } while (($i103_082_i | 0) < ($nedges_1_lcssa_us_i | 0));
                      _free($call_i_i13);
                      if (($numOpenEdges_081_i | 0) < 3) {
                       break;
                      } else {
                       break L154;
                      }
                     }
                    }
                    _free($call_i_i13);
                   } else {
                    _free($call_i_i13);
                   }
                  } while (0);
                  $113 = HEAP32[$nvp68 >> 2] | 0;
                  $114 = HEAP32[$npolys >> 2] | 0;
                  if (($114 | 0) > 0) {
                   $mul_i328 = $113 << 1;
                   $115 = HEAP32[$polys >> 2] | 0;
                   $cmp4_i_i = ($113 | 0) > 0;
                   $i_0664_i = 0;
                   $numRemovedVerts_0665_i = 0;
                   while (1) {
                    $mul2_i = Math_imul($i_0664_i, $mul_i328) | 0;
                    if ($cmp4_i_i) {
                     $i_05_i_i = 0;
                     while (1) {
                      $inc_i_i = $i_05_i_i + 1 | 0;
                      if ((HEAP16[$115 + ($i_05_i_i + $mul2_i << 1) >> 1] | 0) == -1) {
                       $retval_0_i_i = $i_05_i_i;
                       break;
                      }
                      if (($inc_i_i | 0) < ($113 | 0)) {
                       $i_05_i_i = $inc_i_i;
                      } else {
                       $retval_0_i_i = $113;
                       break;
                      }
                     }
                     if (($retval_0_i_i | 0) > 0) {
                      $j_0660_i = 0;
                      $numRemovedVerts_1661_i = $numRemovedVerts_0665_i;
                      while (1) {
                       $inc_numRemovedVerts_1_i = ((HEAP16[$115 + ($j_0660_i + $mul2_i << 1) >> 1] | 0) == $conv398 << 16 >> 16) + $numRemovedVerts_1661_i | 0;
                       $inc9_i = $j_0660_i + 1 | 0;
                       if (($inc9_i | 0) < ($retval_0_i_i | 0)) {
                        $j_0660_i = $inc9_i;
                        $numRemovedVerts_1661_i = $inc_numRemovedVerts_1_i;
                       } else {
                        $numRemovedVerts_1_lcssa_i = $inc_numRemovedVerts_1_i;
                        break;
                       }
                      }
                     } else {
                      $numRemovedVerts_1_lcssa_i = $numRemovedVerts_0665_i;
                     }
                    } else {
                     $numRemovedVerts_1_lcssa_i = $numRemovedVerts_0665_i;
                    }
                    $inc11_i = $i_0664_i + 1 | 0;
                    if (($inc11_i | 0) < ($114 | 0)) {
                     $i_0664_i = $inc11_i;
                     $numRemovedVerts_0665_i = $numRemovedVerts_1_lcssa_i;
                    } else {
                     $numRemovedVerts_0_lcssa_i = $numRemovedVerts_1_lcssa_i;
                     break;
                    }
                   }
                  } else {
                   $numRemovedVerts_0_lcssa_i = 0;
                  }
                  $mul14_i = Math_imul($numRemovedVerts_0_lcssa_i << 2, $113) | 0;
                  $call_i_i19 = _malloc($mul14_i << 2) | 0;
                  $118 = $call_i_i19;
                  if (($call_i_i19 | 0) == 0) {
                   label = 144;
                   break L132;
                  }
                  $call_i_i20 = _malloc($mul14_i) | 0;
                  $122 = $call_i_i20;
                  if (($call_i_i20 | 0) == 0) {
                   label = 147;
                   break L132;
                  }
                  $call_i_i21 = _malloc($mul14_i) | 0;
                  $126 = $call_i_i21;
                  if (($call_i_i21 | 0) == 0) {
                   label = 150;
                   break L132;
                  }
                  $call_i_i22 = _malloc($mul14_i) | 0;
                  $130 = $call_i_i22;
                  if (($call_i_i22 | 0) == 0) {
                   label = 155;
                   break L132;
                  }
                  $131 = HEAP32[$npolys >> 2] | 0;
                  if (($131 | 0) > 0) {
                   $mul68_i = $113 << 1;
                   $cmp4_i281_i = ($113 | 0) > 0;
                   $i62_0656_i = 0;
                   $nedges_0657_i = 0;
                   $135 = $131;
                   while (1) {
                    $mul69_i = Math_imul($i62_0656_i, $mul68_i) | 0;
                    $136 = HEAP32[$polys >> 2] | 0;
                    $arrayidx71_i = $136 + ($mul69_i << 1) | 0;
                    if ($cmp4_i281_i) {
                     $i_05_i284_i = 0;
                     while (1) {
                      $inc_i287_i = $i_05_i284_i + 1 | 0;
                      if ((HEAP16[$136 + ($i_05_i284_i + $mul69_i << 1) >> 1] | 0) == -1) {
                       $retval_0_i289_i = $i_05_i284_i;
                       break;
                      }
                      if (($inc_i287_i | 0) < ($113 | 0)) {
                       $i_05_i284_i = $inc_i287_i;
                      } else {
                       $retval_0_i289_i = $113;
                       break;
                      }
                     }
                     if (($retval_0_i289_i | 0) > 0) {
                      $j75_0647_i = 0;
                      $hasRem_0_off0648_i = 0;
                      do {
                       $hasRem_0_off0648_i = (HEAP16[$136 + ($j75_0647_i + $mul69_i << 1) >> 1] | 0) == $conv398 << 16 >> 16 | $hasRem_0_off0648_i;
                       $j75_0647_i = $j75_0647_i + 1 | 0;
                      } while (($j75_0647_i | 0) < ($retval_0_i289_i | 0));
                      if ($hasRem_0_off0648_i) {
                       $k_0651_i = $retval_0_i289_i - 1 | 0;
                       $j90_0652_i = 0;
                       $nedges_1653_i = $nedges_0657_i;
                       while (1) {
                        $139 = HEAP16[$136 + ($j90_0652_i + $mul69_i << 1) >> 1] | 0;
                        if ($139 << 16 >> 16 == $conv398 << 16 >> 16) {
                         $nedges_2_i = $nedges_1653_i;
                        } else {
                         $140 = HEAP16[$136 + ($k_0651_i + $mul69_i << 1) >> 1] | 0;
                         if ($140 << 16 >> 16 == $conv398 << 16 >> 16) {
                          $nedges_2_i = $nedges_1653_i;
                         } else {
                          $mul103_i = $nedges_1653_i << 2;
                          HEAP32[$118 + ($mul103_i << 2) >> 2] = $140 & 65535;
                          HEAP32[$118 + (($mul103_i | 1) << 2) >> 2] = $139 & 65535;
                          HEAP32[$118 + (($mul103_i | 2) << 2) >> 2] = HEAPU16[(HEAP32[$regs >> 2] | 0) + ($i62_0656_i << 1) >> 1] | 0;
                          HEAP32[$118 + (($mul103_i | 3) << 2) >> 2] = HEAPU8[(HEAP32[$areas >> 2] | 0) + $i62_0656_i >> 0] | 0;
                          $nedges_2_i = $nedges_1653_i + 1 | 0;
                         }
                        }
                        $inc122_i = $j90_0652_i + 1 | 0;
                        if (($inc122_i | 0) < ($retval_0_i289_i | 0)) {
                         $k_0651_i = $j90_0652_i;
                         $j90_0652_i = $inc122_i;
                         $nedges_1653_i = $nedges_2_i;
                        } else {
                         break;
                        }
                       }
                       _memcpy($arrayidx71_i | 0, $136 + ((Math_imul((HEAP32[$npolys >> 2] | 0) - 1 | 0, $mul68_i) | 0) << 1) | 0, $mul68_i) | 0;
                       _memset($136 + ($mul69_i + $113 << 1) | 0, -1 | 0, $mul68_i | 0) | 0;
                       $sub133_i = (HEAP32[$npolys >> 2] | 0) - 1 | 0;
                       $149 = HEAP32[$regs >> 2] | 0;
                       HEAP16[$149 + ($i62_0656_i << 1) >> 1] = HEAP16[$149 + ($sub133_i << 1) >> 1] | 0;
                       $151 = HEAP32[$areas >> 2] | 0;
                       HEAP8[$151 + $i62_0656_i >> 0] = HEAP8[$151 + $sub133_i >> 0] | 0;
                       $dec_i = (HEAP32[$npolys >> 2] | 0) - 1 | 0;
                       HEAP32[$npolys >> 2] = $dec_i;
                       $nedges_3_i = $nedges_2_i;
                       $i62_1_i = $i62_0656_i - 1 | 0;
                       $154 = $dec_i;
                      } else {
                       $nedges_3_i = $nedges_0657_i;
                       $i62_1_i = $i62_0656_i;
                       $154 = $135;
                      }
                     } else {
                      $nedges_3_i = $nedges_0657_i;
                      $i62_1_i = $i62_0656_i;
                      $154 = $135;
                     }
                    } else {
                     $nedges_3_i = $nedges_0657_i;
                     $i62_1_i = $i62_0656_i;
                     $154 = $135;
                    }
                    $inc148_i = $i62_1_i + 1 | 0;
                    if (($inc148_i | 0) < ($154 | 0)) {
                     $i62_0656_i = $inc148_i;
                     $nedges_0657_i = $nedges_3_i;
                     $135 = $154;
                    } else {
                     $nedges_0_lcssa_i = $nedges_3_i;
                     $155 = $154;
                     break;
                    }
                   }
                  } else {
                   $nedges_0_lcssa_i = 0;
                   $155 = $131;
                  }
                  $conv151_i = $i388_0684 & 65535;
                  $156 = HEAP32[$nverts67 >> 2] | 0;
                  if (($conv151_i | 0) < ($156 | 0)) {
                   $157 = HEAP32[$verts >> 2] | 0;
                   $i150_0643_i = $conv151_i;
                   do {
                    $i150_0643_i$looptemp = $i150_0643_i;
                    $i150_0643_i = $i150_0643_i + 1 | 0;
                    $mul155_i = $i150_0643_i * 3 | 0;
                    $mul158_i = $i150_0643_i$looptemp * 3 | 0;
                    HEAP16[$157 + ($mul158_i << 1) >> 1] = HEAP16[$157 + ($mul155_i << 1) >> 1] | 0;
                    HEAP16[$157 + ($mul158_i + 1 << 1) >> 1] = HEAP16[$157 + ($mul155_i + 1 << 1) >> 1] | 0;
                    HEAP16[$157 + ($mul158_i + 2 << 1) >> 1] = HEAP16[$157 + ($mul155_i + 2 << 1) >> 1] | 0;
                   } while (($i150_0643_i | 0) < ($156 | 0));
                  }
                  HEAP32[$nverts67 >> 2] = $156 - 1;
                  if (($155 | 0) > 0) {
                   $mul191_i = $113 << 1;
                   $161 = HEAP32[$polys >> 2] | 0;
                   $cmp4_i295_i = ($113 | 0) > 0;
                   $i185_0641_i = 0;
                   do {
                    $mul192_i = Math_imul($i185_0641_i, $mul191_i) | 0;
                    if ($cmp4_i295_i) {
                     $i_05_i298_i = 0;
                     while (1) {
                      $inc_i301_i = $i_05_i298_i + 1 | 0;
                      if ((HEAP16[$161 + ($i_05_i298_i + $mul192_i << 1) >> 1] | 0) == -1) {
                       $retval_0_i303_i = $i_05_i298_i;
                       break;
                      }
                      if (($inc_i301_i | 0) < ($113 | 0)) {
                       $i_05_i298_i = $inc_i301_i;
                      } else {
                       $retval_0_i303_i = $113;
                       break;
                      }
                     }
                     if (($retval_0_i303_i | 0) > 0) {
                      $j198_0639_i = 0;
                      do {
                       $arrayidx202_i = $161 + ($j198_0639_i + $mul192_i << 1) | 0;
                       $163 = HEAP16[$arrayidx202_i >> 1] | 0;
                       if (($163 & 65535) >>> 0 > ($conv398 & 65535) >>> 0) {
                        HEAP16[$arrayidx202_i >> 1] = $163 - 1;
                       }
                       $j198_0639_i = $j198_0639_i + 1 | 0;
                      } while (($j198_0639_i | 0) < ($retval_0_i303_i | 0));
                     }
                    }
                    $i185_0641_i = $i185_0641_i + 1 | 0;
                   } while (($i185_0641_i | 0) < ($155 | 0));
                  }
                  if (($nedges_0_lcssa_i | 0) > 0) {
                   $i216_0637_i = 0;
                   do {
                    $mul220_i = $i216_0637_i << 2;
                    $arrayidx224_i = $118 + ($mul220_i << 2) | 0;
                    $164 = HEAP32[$arrayidx224_i >> 2] | 0;
                    if (($164 | 0) > ($conv151_i | 0)) {
                     HEAP32[$arrayidx224_i >> 2] = $164 - 1;
                    }
                    $arrayidx239_i = $118 + (($mul220_i | 1) << 2) | 0;
                    $165 = HEAP32[$arrayidx239_i >> 2] | 0;
                    if (($165 | 0) > ($conv151_i | 0)) {
                     HEAP32[$arrayidx239_i >> 2] = $165 - 1;
                    }
                    $i216_0637_i = $i216_0637_i + 1 | 0;
                   } while (($i216_0637_i | 0) < ($nedges_0_lcssa_i | 0));
                  }
                  do {
                   if (($nedges_0_lcssa_i | 0) == 0) {
                    $retval_6_i = 1;
                   } else {
                    HEAP32[$122 >> 2] = HEAP32[$118 >> 2];
                    HEAP32[$126 >> 2] = HEAP32[$call_i_i19 + 8 >> 2];
                    HEAP32[$130 >> 2] = HEAP32[$call_i_i19 + 12 >> 2];
                    $nedges_5_ph_i = $nedges_0_lcssa_i;
                    $i275_0_ph_i = 0;
                    $match_0_off0_ph_i = 0;
                    $_ph633_i = 1;
                    $_ph632_i = 1;
                    $_ph_i = 1;
                    L263 : while (1) {
                     L265 : do {
                      if (($nedges_5_ph_i | 0) == 0) {
                       if (($i275_0_ph_i | 0) < 0) {
                        $match_0_off0_lcssa_i = $match_0_off0_ph_i;
                        $i275_0_lcssa_i = $i275_0_ph_i;
                       } else {
                        break L263;
                       }
                      } else {
                       $i275_0_us_i = $i275_0_ph_i;
                       $match_0_off0_us_i = $match_0_off0_ph_i;
                       while (1) {
                        if (($i275_0_us_i | 0) < ($nedges_5_ph_i | 0)) {
                         $match_0_off0_lcssa_i = $match_0_off0_us_i;
                         $i275_0_lcssa_i = $i275_0_us_i;
                         break L265;
                        }
                        if ($match_0_off0_us_i) {
                         $i275_0_us_i = 0;
                         $match_0_off0_us_i = 0;
                        } else {
                         break L263;
                        }
                       }
                      }
                     } while (0);
                     $mul279_i = $i275_0_lcssa_i << 2;
                     $arrayidx283_i = $118 + ($mul279_i << 2) | 0;
                     $171 = HEAP32[$arrayidx283_i >> 2] | 0;
                     $arrayidx288_i = $118 + (($mul279_i | 1) << 2) | 0;
                     $172 = HEAP32[$arrayidx288_i >> 2] | 0;
                     $arrayidx293_i = $118 + (($mul279_i | 2) << 2) | 0;
                     $173 = HEAP32[$arrayidx293_i >> 2] | 0;
                     $arrayidx298_i = $118 + (($mul279_i | 3) << 2) | 0;
                     $174 = HEAP32[$arrayidx298_i >> 2] | 0;
                     if ((HEAP32[$122 >> 2] | 0) == ($172 | 0)) {
                      if (($_ph_i | 0) > 0) {
                       $i_08_i_i = $_ph_i;
                       do {
                        $i_08_i_i$looptemp = $i_08_i_i;
                        $i_08_i_i = $i_08_i_i - 1 | 0;
                        HEAP32[$122 + ($i_08_i_i$looptemp << 2) >> 2] = HEAP32[$122 + ($i_08_i_i << 2) >> 2];
                       } while (($i_08_i_i | 0) > 0);
                      }
                      HEAP32[$122 >> 2] = $171;
                      if (($_ph632_i | 0) > 0) {
                       $i_08_i366_i = $_ph632_i;
                       do {
                        $i_08_i366_i$looptemp = $i_08_i366_i;
                        $i_08_i366_i = $i_08_i366_i - 1 | 0;
                        HEAP32[$126 + ($i_08_i366_i$looptemp << 2) >> 2] = HEAP32[$126 + ($i_08_i366_i << 2) >> 2];
                       } while (($i_08_i366_i | 0) > 0);
                      }
                      HEAP32[$126 >> 2] = $173;
                      if (($_ph633_i | 0) > 0) {
                       $i_08_i379_i = $_ph633_i;
                       do {
                        $i_08_i379_i$looptemp = $i_08_i379_i;
                        $i_08_i379_i = $i_08_i379_i - 1 | 0;
                        HEAP32[$130 + ($i_08_i379_i$looptemp << 2) >> 2] = HEAP32[$130 + ($i_08_i379_i << 2) >> 2];
                       } while (($i_08_i379_i | 0) > 0);
                      }
                      HEAP32[$130 >> 2] = $174;
                      label = 205;
                     } else {
                      if ((HEAP32[$122 + ($_ph_i - 1 << 2) >> 2] | 0) == ($171 | 0)) {
                       HEAP32[$122 + ($_ph_i << 2) >> 2] = $172;
                       HEAP32[$126 + ($_ph632_i << 2) >> 2] = $173;
                       HEAP32[$130 + ($_ph633_i << 2) >> 2] = $174;
                       label = 205;
                      } else {
                       $nedges_6_i = $nedges_5_ph_i;
                       $i275_1_i = $i275_0_lcssa_i;
                       $match_1_off0_i = $match_0_off0_lcssa_i;
                       $189 = $_ph633_i;
                       $188 = $_ph632_i;
                       $187 = $_ph_i;
                      }
                     }
                     if ((label | 0) == 205) {
                      label = 0;
                      $sub333_i = $nedges_5_ph_i << 2;
                      HEAP32[$arrayidx283_i >> 2] = HEAP32[$118 + ($sub333_i - 4 << 2) >> 2];
                      HEAP32[$arrayidx288_i >> 2] = HEAP32[$118 + ($sub333_i - 3 << 2) >> 2];
                      HEAP32[$arrayidx293_i >> 2] = HEAP32[$118 + ($sub333_i - 2 << 2) >> 2];
                      HEAP32[$arrayidx298_i >> 2] = HEAP32[$118 + ($sub333_i - 1 << 2) >> 2];
                      $nedges_6_i = $nedges_5_ph_i - 1 | 0;
                      $i275_1_i = $i275_0_lcssa_i - 1 | 0;
                      $match_1_off0_i = 1;
                      $189 = $_ph633_i + 1 | 0;
                      $188 = $_ph632_i + 1 | 0;
                      $187 = $_ph_i + 1 | 0;
                     }
                     $nedges_5_ph_i = $nedges_6_i;
                     $i275_0_ph_i = $i275_1_i + 1 | 0;
                     $match_0_off0_ph_i = $match_1_off0_i;
                     $_ph633_i = $189;
                     $_ph632_i = $188;
                     $_ph_i = $187;
                    }
                    $call_i_i23 = _malloc($_ph_i * 12 | 0) | 0;
                    $190 = $call_i_i23;
                    if (($call_i_i23 | 0) == 0) {
                     __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5168, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $_ph_i * 3 | 0, tempVarArgs) | 0);
                     STACKTOP = tempVarArgs;
                     $retval_6_i = 0;
                     break;
                    }
                    $call_i_i24 = _malloc($_ph_i << 4) | 0;
                    $194 = $call_i_i24;
                    $mul409_i = $_ph_i << 2;
                    if (($call_i_i24 | 0) == 0) {
                     __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5064, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul409_i, tempVarArgs) | 0);
                     STACKTOP = tempVarArgs;
                     $retval_5_i = 0;
                    } else {
                     $call_i_i25 = _malloc($mul409_i) | 0;
                     $198 = $call_i_i25;
                     if (($_ph_i | 0) > 0) {
                      $199 = HEAP32[$verts >> 2] | 0;
                      $i423_0631_i = 0;
                      do {
                       $mul430_i = (HEAP32[$122 + ($i423_0631_i << 2) >> 2] | 0) * 3 | 0;
                       $mul435_i = $i423_0631_i << 2;
                       HEAP32[$194 + ($mul435_i << 2) >> 2] = HEAPU16[$199 + ($mul430_i << 1) >> 1] | 0;
                       HEAP32[$194 + (($mul435_i | 1) << 2) >> 2] = HEAPU16[$199 + ($mul430_i + 1 << 1) >> 1] | 0;
                       HEAP32[$194 + (($mul435_i | 2) << 2) >> 2] = HEAPU16[$199 + ($mul430_i + 2 << 1) >> 1] | 0;
                       HEAP32[$194 + (($mul435_i | 3) << 2) >> 2] = 0;
                       HEAP32[$198 + ($i423_0631_i << 2) >> 2] = $i423_0631_i;
                       $i423_0631_i = $i423_0631_i + 1 | 0;
                      } while (($i423_0631_i | 0) < ($_ph_i | 0));
                     }
                     $call480_i = __ZL11triangulateiPKiPiS1_($_ph_i, $194, $198, $190) | 0;
                     if (($call480_i | 0) < 0) {
                      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 4952, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
                      STACKTOP = tempVarArgs;
                      $ntris_0_i = -$call480_i | 0;
                     } else {
                      $ntris_0_i = $call480_i;
                     }
                     $add487_i = $ntris_0_i + 1 | 0;
                     $mul488_i = $113 << 1;
                     $call_i_i26 = _malloc(Math_imul($add487_i, $mul488_i) | 0) | 0;
                     $207 = $call_i_i26;
                     if (($call_i_i26 | 0) == 0) {
                      $mul499_i = Math_imul($add487_i, $113) | 0;
                      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul499_i, tempVarArgs) | 0);
                      STACKTOP = tempVarArgs;
                      $retval_2_i193 = 0;
                     } else {
                      $call_i_i27 = _malloc($ntris_0_i << 1) | 0;
                      $211 = $call_i_i27;
                      if (($call_i_i27 | 0) == 0) {
                       __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4584, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $ntris_0_i, tempVarArgs) | 0);
                       STACKTOP = tempVarArgs;
                       $retval_2_i = 0;
                      } else {
                       $call_i_i28 = _malloc($ntris_0_i) | 0;
                       $mul524_i = Math_imul($ntris_0_i, $113) | 0;
                       $arrayidx527_i = $207 + ($mul524_i << 1) | 0;
                       _memset($call_i_i26 | 0, -1 | 0, $mul524_i << 1 | 0) | 0;
                       L311 : do {
                        if (($ntris_0_i | 0) > 0) {
                         $npolys528_0627_i = 0;
                         $j533_0628_i = 0;
                         while (1) {
                          $mul537_i = $j533_0628_i * 3 | 0;
                          $218 = HEAP32[$190 + ($mul537_i << 2) >> 2] | 0;
                          $219 = HEAP32[$190 + ($mul537_i + 1 << 2) >> 2] | 0;
                          if (($218 | 0) == ($219 | 0)) {
                           $npolys528_1_i = $npolys528_0627_i;
                          } else {
                           $220 = HEAP32[$190 + ($mul537_i + 2 << 2) >> 2] | 0;
                           if (($218 | 0) == ($220 | 0) | ($219 | 0) == ($220 | 0)) {
                            $npolys528_1_i = $npolys528_0627_i;
                           } else {
                            $mul558_i = Math_imul($npolys528_0627_i, $113) | 0;
                            HEAP16[$207 + ($mul558_i << 1) >> 1] = HEAP32[$122 + ($218 << 2) >> 2];
                            HEAP16[$207 + ($mul558_i + 1 << 1) >> 1] = HEAP32[$122 + ($219 << 2) >> 2];
                            HEAP16[$207 + ($mul558_i + 2 << 1) >> 1] = HEAP32[$122 + ($220 << 2) >> 2];
                            HEAP16[$211 + ($npolys528_0627_i << 1) >> 1] = HEAP32[$126 + ($218 << 2) >> 2];
                            HEAP8[$call_i_i28 + $npolys528_0627_i >> 0] = HEAP32[$130 + ($218 << 2) >> 2];
                            $npolys528_1_i = $npolys528_0627_i + 1 | 0;
                           }
                          }
                          $j533_0628_i = $j533_0628_i + 1 | 0;
                          if (($j533_0628_i | 0) >= ($ntris_0_i | 0)) {
                           break;
                          } else {
                           $npolys528_0627_i = $npolys528_1_i;
                          }
                         }
                         if (($npolys528_1_i | 0) == 0) {
                          $retval_0_i = 1;
                         } else {
                          L320 : do {
                           if (($113 | 0) > 3) {
                            $226 = $arrayidx527_i;
                            $sub612_i481 = $npolys528_1_i - 1 | 0;
                            if (($sub612_i481 | 0) > 0) {
                             $npolys528_2_i483 = $npolys528_1_i;
                             $sub612_i484 = $sub612_i481;
                             while (1) {
                              $bestMergeVal_0614_i = 0;
                              $bestPa_0615_i = 0;
                              $bestPb_0616_i = 0;
                              $bestEa_0617_i = 0;
                              $bestEb_0618_i = 0;
                              $j610_0619_i = 0;
                              while (1) {
                               $arrayidx618_i = $207 + ((Math_imul($j610_0619_i, $113) | 0) << 1) | 0;
                               $j610_0619_i$looptemp = $j610_0619_i;
                               $j610_0619_i = $j610_0619_i + 1 | 0;
                               if (($j610_0619_i | 0) < ($npolys528_2_i483 | 0)) {
                                $bestMergeVal_1603_i = $bestMergeVal_0614_i;
                                $bestPa_1604_i = $bestPa_0615_i;
                                $bestPb_1605_i = $bestPb_0616_i;
                                $bestEa_1606_i = $bestEa_0617_i;
                                $bestEb_1607_i = $bestEb_0618_i;
                                $k619_0608_i = $j610_0619_i;
                                while (1) {
                                 $arrayidx627_i = $207 + ((Math_imul($k619_0608_i, $113) | 0) << 1) | 0;
                                 $call632_i = __ZL17getPolyMergeValuePtS_PKtRiS2_i($arrayidx618_i, $arrayidx627_i, HEAP32[$verts >> 2] | 0, $ea628_i, $eb629_i, $113) | 0;
                                 if (($call632_i | 0) > ($bestMergeVal_1603_i | 0)) {
                                  $bestEb_2_i = HEAP32[$eb629_i >> 2] | 0;
                                  $bestEa_2_i = HEAP32[$ea628_i >> 2] | 0;
                                  $bestPb_2_i = $k619_0608_i;
                                  $bestPa_2_i = $j610_0619_i$looptemp;
                                  $bestMergeVal_2_i = $call632_i;
                                 } else {
                                  $bestEb_2_i = $bestEb_1607_i;
                                  $bestEa_2_i = $bestEa_1606_i;
                                  $bestPb_2_i = $bestPb_1605_i;
                                  $bestPa_2_i = $bestPa_1604_i;
                                  $bestMergeVal_2_i = $bestMergeVal_1603_i;
                                 }
                                 $inc637_i = $k619_0608_i + 1 | 0;
                                 if (($inc637_i | 0) < ($npolys528_2_i483 | 0)) {
                                  $bestMergeVal_1603_i = $bestMergeVal_2_i;
                                  $bestPa_1604_i = $bestPa_2_i;
                                  $bestPb_1605_i = $bestPb_2_i;
                                  $bestEa_1606_i = $bestEa_2_i;
                                  $bestEb_1607_i = $bestEb_2_i;
                                  $k619_0608_i = $inc637_i;
                                 } else {
                                  $bestMergeVal_1_lcssa_i = $bestMergeVal_2_i;
                                  $bestPa_1_lcssa_i = $bestPa_2_i;
                                  $bestPb_1_lcssa_i = $bestPb_2_i;
                                  $bestEa_1_lcssa_i = $bestEa_2_i;
                                  $bestEb_1_lcssa_i = $bestEb_2_i;
                                  break;
                                 }
                                }
                               } else {
                                $bestMergeVal_1_lcssa_i = $bestMergeVal_0614_i;
                                $bestPa_1_lcssa_i = $bestPa_0615_i;
                                $bestPb_1_lcssa_i = $bestPb_0616_i;
                                $bestEa_1_lcssa_i = $bestEa_0617_i;
                                $bestEb_1_lcssa_i = $bestEb_0618_i;
                               }
                               if (($j610_0619_i | 0) >= ($sub612_i484 | 0)) {
                                break;
                               } else {
                                $bestMergeVal_0614_i = $bestMergeVal_1_lcssa_i;
                                $bestPa_0615_i = $bestPa_1_lcssa_i;
                                $bestPb_0616_i = $bestPb_1_lcssa_i;
                                $bestEa_0617_i = $bestEa_1_lcssa_i;
                                $bestEb_0618_i = $bestEb_1_lcssa_i;
                               }
                              }
                              if (($bestMergeVal_1_lcssa_i | 0) <= 0) {
                               $npolys528_3_i = $npolys528_2_i483;
                               break L320;
                              }
                              $mul644_i = Math_imul($bestPa_1_lcssa_i, $113) | 0;
                              $arrayidx647_i = $207 + ($mul644_i << 1) | 0;
                              $mul648_i = Math_imul($bestPb_1_lcssa_i, $113) | 0;
                              $arrayidx651_i = $207 + ($mul648_i << 1) | 0;
                              $i_05_i_i_i = 0;
                              while (1) {
                               $inc_i_i_i = $i_05_i_i_i + 1 | 0;
                               if ((HEAP16[$207 + ($i_05_i_i_i + $mul644_i << 1) >> 1] | 0) == -1) {
                                $retval_0_i_i_i = $i_05_i_i_i;
                                break;
                               }
                               if (($inc_i_i_i | 0) < ($113 | 0)) {
                                $i_05_i_i_i = $inc_i_i_i;
                               } else {
                                $retval_0_i_i_i = $113;
                                break;
                               }
                              }
                              $i_05_i20_i_i = 0;
                              while (1) {
                               $inc_i23_i_i = $i_05_i20_i_i + 1 | 0;
                               if ((HEAP16[$207 + ($i_05_i20_i_i + $mul648_i << 1) >> 1] | 0) == -1) {
                                $retval_0_i25_i_i = $i_05_i20_i_i;
                                break;
                               }
                               if (($inc_i23_i_i | 0) < ($113 | 0)) {
                                $i_05_i20_i_i = $inc_i23_i_i;
                               } else {
                                $retval_0_i25_i_i = $113;
                                break;
                               }
                              }
                              _memset($226 | 0, -1 | 0, $mul488_i | 0) | 0;
                              $sub_i_i337 = $retval_0_i_i_i - 1 | 0;
                              if (($sub_i_i337 | 0) > 0) {
                               $add_i_i = $bestEa_1_lcssa_i + 1 | 0;
                               $i_033_i_i = 0;
                               while (1) {
                                $inc8_i_i = $i_033_i_i + 1 | 0;
                                HEAP16[$207 + ($i_033_i_i + $mul524_i << 1) >> 1] = HEAP16[$207 + ((($add_i_i + $i_033_i_i | 0) % ($retval_0_i_i_i | 0) | 0) + $mul644_i << 1) >> 1] | 0;
                                if (($inc8_i_i | 0) < ($sub_i_i337 | 0)) {
                                 $i_033_i_i = $inc8_i_i;
                                } else {
                                 $n_0_lcssa_i_i = $sub_i_i337;
                                 break;
                                }
                               }
                              } else {
                               $n_0_lcssa_i_i = 0;
                              }
                              $sub12_i_i = $retval_0_i25_i_i - 1 | 0;
                              if (($sub12_i_i | 0) > 0) {
                               $add15_i_i = $bestEb_1_lcssa_i + 1 | 0;
                               $n_129_i_i = $n_0_lcssa_i_i;
                               $i10_030_i_i = 0;
                               while (1) {
                                HEAP16[$207 + ($n_129_i_i + $mul524_i << 1) >> 1] = HEAP16[$207 + ((($add15_i_i + $i10_030_i_i | 0) % ($retval_0_i25_i_i | 0) | 0) + $mul648_i << 1) >> 1] | 0;
                                $i10_030_i_i = $i10_030_i_i + 1 | 0;
                                if (($i10_030_i_i | 0) >= ($sub12_i_i | 0)) {
                                 break;
                                } else {
                                 $n_129_i_i = $n_129_i_i + 1 | 0;
                                }
                               }
                              }
                              _memcpy($arrayidx647_i | 0, $226 | 0, $mul488_i) | 0;
                              _memcpy($arrayidx651_i | 0, $207 + ((Math_imul($sub612_i484, $113) | 0) << 1) | 0, $mul488_i) | 0;
                              HEAP16[$211 + ($bestPb_1_lcssa_i << 1) >> 1] = HEAP16[$211 + ($sub612_i484 << 1) >> 1] | 0;
                              HEAP8[$call_i_i28 + $bestPb_1_lcssa_i >> 0] = HEAP8[$call_i_i28 + $sub612_i484 >> 0] | 0;
                              $sub612_i = $sub612_i484 - 1 | 0;
                              if (($sub612_i | 0) > 0) {
                               $npolys528_2_i483 = $sub612_i484;
                               $sub612_i484 = $sub612_i;
                              } else {
                               $npolys528_3_i = $sub612_i484;
                               break;
                              }
                             }
                            } else {
                             $npolys528_3_i = $npolys528_1_i;
                            }
                           } else {
                            $npolys528_3_i = $npolys528_1_i;
                           }
                          } while (0);
                          if (($npolys528_3_i | 0) > 0) {
                           $mul693_i = $113 << 2;
                           $cmp696598_i = ($113 | 0) > 0;
                           $i678_0601_i = 0;
                           $239 = HEAP32[$npolys >> 2] | 0;
                           while (1) {
                            if (($239 | 0) >= ($maxTris_0_lcssa930 | 0)) {
                             $retval_0_i = 1;
                             break L311;
                            }
                            $mul689_i = Math_imul($239, $mul488_i) | 0;
                            $240 = HEAP32[$polys >> 2] | 0;
                            _memset($240 + ($mul689_i << 1) | 0, -1 | 0, $mul693_i | 0) | 0;
                            if ($cmp696598_i) {
                             $mul698_i = Math_imul($i678_0601_i, $113) | 0;
                             $j694_0599_i = 0;
                             do {
                              HEAP16[$240 + ($j694_0599_i + $mul689_i << 1) >> 1] = HEAP16[$207 + ($j694_0599_i + $mul698_i << 1) >> 1] | 0;
                              $j694_0599_i = $j694_0599_i + 1 | 0;
                             } while (($j694_0599_i | 0) < ($113 | 0));
                            }
                            $244 = HEAP32[$npolys >> 2] | 0;
                            HEAP16[(HEAP32[$regs >> 2] | 0) + ($244 << 1) >> 1] = HEAP16[$211 + ($i678_0601_i << 1) >> 1] | 0;
                            HEAP8[(HEAP32[$areas >> 2] | 0) + $244 >> 0] = HEAP8[$call_i_i28 + $i678_0601_i >> 0] | 0;
                            $248 = HEAP32[$npolys >> 2] | 0;
                            $inc720_i = $248 + 1 | 0;
                            HEAP32[$npolys >> 2] = $inc720_i;
                            $inc728_i = $i678_0601_i + 1 | 0;
                            if (($248 | 0) >= ($maxTris_0_lcssa930 | 0)) {
                             break;
                            }
                            if (($inc728_i | 0) < ($npolys528_3_i | 0)) {
                             $i678_0601_i = $inc728_i;
                             $239 = $inc720_i;
                            } else {
                             $retval_0_i = 1;
                             break L311;
                            }
                           }
                           __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4416, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $inc720_i, HEAP32[tempVarArgs + 8 >> 2] = $maxTris_0_lcssa930, tempVarArgs) | 0);
                           STACKTOP = tempVarArgs;
                           $retval_0_i = 0;
                          } else {
                           $retval_0_i = 1;
                          }
                         }
                        } else {
                         $retval_0_i = 1;
                        }
                       } while (0);
                       if (($call_i_i28 | 0) != 0) {
                        _free($call_i_i28);
                       }
                       _free($call_i_i27);
                       $retval_2_i = $retval_0_i;
                      }
                      _free($call_i_i26);
                      $retval_2_i193 = $retval_2_i;
                     }
                     if (($call_i_i25 | 0) != 0) {
                      _free($call_i_i25);
                     }
                     _free($call_i_i24);
                     $retval_5_i = $retval_2_i193;
                    }
                    _free($call_i_i23);
                    $retval_6_i = $retval_5_i;
                   }
                  } while (0);
                  if (($call_i_i22 | 0) != 0) {
                   _free($call_i_i22);
                  }
                  _free($call_i_i21);
                  _free($call_i_i20);
                  _free($call_i_i19);
                  if (!$retval_6_i) {
                   break L132;
                  }
                  $249 = HEAP32[$nverts67 >> 2] | 0;
                  if (($i388_0684 | 0) < ($249 | 0)) {
                   $j409_0486 = $i388_0684;
                   while (1) {
                    $add414 = $j409_0486 + 1 | 0;
                    HEAP8[$call_i_i + $j409_0486 >> 0] = HEAP8[$call_i_i + $add414 >> 0] | 0;
                    $251 = HEAP32[$nverts67 >> 2] | 0;
                    if (($add414 | 0) < ($251 | 0)) {
                     $j409_0486 = $add414;
                    } else {
                     $252 = $251;
                     break;
                    }
                   }
                  } else {
                   $252 = $249;
                  }
                  $i388_1 = $i388_0684 - 1 | 0;
                  $253 = $252;
                  break L134;
                 }
                } while (0);
                $i388_1 = $i388_0684;
                $253 = HEAP32[$nverts67 >> 2] | 0;
               }
              } else {
               $i388_1 = $i388_0684;
               $253 = $94;
              }
             }
            } while (0);
            $inc427 = $i388_1 + 1 | 0;
            if (($inc427 | 0) < ($253 | 0)) {
             $i388_0684 = $inc427;
             $94 = $253;
            } else {
             $_lcssa511 = $253;
             break L130;
            }
           }
           if ((label | 0) == 144) {
            $mul20_i333 = Math_imul($113 << 2, $numRemovedVerts_0_lcssa_i) | 0;
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5616, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul20_i333, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
           } else if ((label | 0) == 147) {
            $mul33_i = Math_imul($numRemovedVerts_0_lcssa_i, $113) | 0;
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5448, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul33_i, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            _free($call_i_i19);
           } else if ((label | 0) == 150) {
            $mul46_i = Math_imul($numRemovedVerts_0_lcssa_i, $113) | 0;
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5320, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul46_i, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            _free($call_i_i20);
            _free($call_i_i19);
           } else if ((label | 0) == 155) {
            $mul59_i = Math_imul($numRemovedVerts_0_lcssa_i, $113) | 0;
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 5248, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul59_i, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            _free($call_i_i21);
            _free($call_i_i20);
            _free($call_i_i19);
           }
           __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8280, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $i388_0684, tempVarArgs) | 0);
           STACKTOP = tempVarArgs;
           $retval_0 = 0;
           break L128;
          } else {
           $_lcssa511 = $49;
          }
         } while (0);
         $254 = HEAP32[$polys >> 2] | 0;
         $255 = HEAP32[$npolys >> 2] | 0;
         $mul_i109 = Math_imul($255, $nvp) | 0;
         $call_i_i_i = _malloc($mul_i109 + $_lcssa511 << 1) | 0;
         $256 = $call_i_i_i;
         do {
          if (($call_i_i_i | 0) != 0) {
           $call_i_i1_i = _malloc($mul_i109 * 12 | 0) | 0;
           $257 = $call_i_i1_i;
           if (($call_i_i1_i | 0) == 0) {
            _free($call_i_i_i);
            break;
           }
           if (($_lcssa511 | 0) > 0) {
            _memset($call_i_i_i | 0, -1 | 0, $_lcssa511 << 1 | 0) | 0;
           }
           if (($255 | 0) > 0) {
            $i7_0109_i = 0;
            $edgeCount_0110_i = 0;
            while (1) {
             $mul12_i = Math_imul($mul40, $i7_0109_i) | 0;
             $arrayidx13_i115 = $254 + ($mul12_i << 1) | 0;
             $conv39_i = $i7_0109_i & 65535;
             $edgeCount_1_ph_i = $edgeCount_0110_i;
             $j_0_ph_i = 0;
             L408 : while (1) {
              $j_0_i = $j_0_ph_i;
              while (1) {
               if (($j_0_i | 0) >= ($nvp | 0)) {
                break L408;
               }
               $259 = HEAP16[$254 + ($j_0_i + $mul12_i << 1) >> 1] | 0;
               if ($259 << 16 >> 16 == -1) {
                break L408;
               }
               $add22_i = $j_0_i + 1 | 0;
               if (($add22_i | 0) < ($nvp | 0)) {
                $260 = HEAP16[$254 + ($add22_i + $mul12_i << 1) >> 1] | 0;
                if ($260 << 16 >> 16 == -1) {
                 label = 307;
                } else {
                 $cond_i117 = $260;
                }
               } else {
                label = 307;
               }
               if ((label | 0) == 307) {
                label = 0;
                $cond_i117 = HEAP16[$arrayidx13_i115 >> 1] | 0;
               }
               if (($259 & 65535) >>> 0 < ($cond_i117 & 65535) >>> 0) {
                break;
               } else {
                $j_0_i = $add22_i;
               }
              }
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) >> 1] = $259;
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) + 2 >> 1] = $cond_i117;
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) + 8 >> 1] = $conv39_i;
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) + 4 >> 1] = $j_0_i;
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) + 10 >> 1] = $conv39_i;
              HEAP16[$257 + ($edgeCount_1_ph_i * 12 | 0) + 6 >> 1] = 0;
              $arrayidx48_i = $256 + (($259 & 65535) << 1) | 0;
              HEAP16[$256 + ($edgeCount_1_ph_i + $_lcssa511 << 1) >> 1] = HEAP16[$arrayidx48_i >> 1] | 0;
              HEAP16[$arrayidx48_i >> 1] = $edgeCount_1_ph_i;
              $edgeCount_1_ph_i = $edgeCount_1_ph_i + 1 | 0;
              $j_0_ph_i = $add22_i;
             }
             $i7_0109_i = $i7_0109_i + 1 | 0;
             if (($i7_0109_i | 0) >= ($255 | 0)) {
              break;
             } else {
              $edgeCount_0110_i = $edgeCount_1_ph_i;
             }
            }
            $cmp71103_i = ($nvp | 0) > 0;
            $i61_0106_i = 0;
            do {
             $mul67_i = Math_imul($mul40, $i61_0106_i) | 0;
             $arrayidx68_i = $254 + ($mul67_i << 1) | 0;
             L424 : do {
              if ($cmp71103_i) {
               $conv121_i = $i61_0106_i & 65535;
               $j69_0104_i = 0;
               do {
                $263 = HEAP16[$254 + ($j69_0104_i + $mul67_i << 1) >> 1] | 0;
                if ($263 << 16 >> 16 == -1) {
                 break L424;
                }
                $j69_0104_i$looptemp = $j69_0104_i;
                $j69_0104_i = $j69_0104_i + 1 | 0;
                $cmp82_i118 = ($j69_0104_i | 0) < ($nvp | 0);
                if ($cmp82_i118) {
                 $264 = HEAP16[$254 + ($j69_0104_i + $mul67_i << 1) >> 1] | 0;
                 if ($264 << 16 >> 16 == -1) {
                  label = 317;
                 } else {
                  $cond94_i = $264;
                 }
                } else {
                 label = 317;
                }
                if ((label | 0) == 317) {
                 label = 0;
                 $cond94_i = HEAP16[$arrayidx68_i >> 1] | 0;
                }
                L434 : do {
                 if (($263 & 65535) >>> 0 > ($cond94_i & 65535) >>> 0) {
                  $e_099_i = HEAP16[$256 + (($cond94_i & 65535) << 1) >> 1] | 0;
                  if (!($e_099_i << 16 >> 16 == -1)) {
                   $conv102102_in_i = $e_099_i;
                   while (1) {
                    $conv102102_i = $conv102102_in_i & 65535;
                    if ((HEAP16[$257 + ($conv102102_i * 12 | 0) + 2 >> 1] | 0) == $263 << 16 >> 16) {
                     $arrayidx117_i = $257 + ($conv102102_i * 12 | 0) + 10 | 0;
                     if ((HEAP16[$257 + ($conv102102_i * 12 | 0) + 8 >> 1] | 0) == (HEAP16[$arrayidx117_i >> 1] | 0)) {
                      break;
                     }
                    }
                    $conv102102_in_i = HEAP16[$256 + ($conv102102_i + $_lcssa511 << 1) >> 1] | 0;
                    if ($conv102102_in_i << 16 >> 16 == -1) {
                     break L434;
                    }
                   }
                   HEAP16[$arrayidx117_i >> 1] = $conv121_i;
                   HEAP16[$257 + ($conv102102_i * 12 | 0) + 6 >> 1] = $j69_0104_i$looptemp;
                  }
                 }
                } while (0);
               } while ($cmp82_i118);
              }
             } while (0);
             $i61_0106_i = $i61_0106_i + 1 | 0;
            } while (($i61_0106_i | 0) < ($255 | 0));
            if (($edgeCount_1_ph_i | 0) > 0) {
             $i139_096_i = 0;
             do {
              $arrayidx146_i = $257 + ($i139_096_i * 12 | 0) + 8 | 0;
              $269 = HEAP16[$arrayidx146_i >> 1] | 0;
              $270 = HEAP16[$257 + ($i139_096_i * 12 | 0) + 10 >> 1] | 0;
              if (!($269 << 16 >> 16 == $270 << 16 >> 16)) {
               $mul157_i = Math_imul($mul40, $269 & 65535) | 0;
               $mul163_i = Math_imul($mul40, $270 & 65535) | 0;
               HEAP16[$254 + ($mul157_i + $nvp + (HEAPU16[$257 + ($i139_096_i * 12 | 0) + 4 >> 1] | 0) << 1) >> 1] = $270;
               HEAP16[$254 + ($mul163_i + $nvp + (HEAPU16[$257 + ($i139_096_i * 12 | 0) + 6 >> 1] | 0) << 1) >> 1] = HEAP16[$arrayidx146_i >> 1] | 0;
              }
              $i139_096_i = $i139_096_i + 1 | 0;
             } while (($i139_096_i | 0) < ($edgeCount_1_ph_i | 0));
            }
           }
           _free($call_i_i_i);
           _free($call_i_i1_i);
           if ((HEAP32[$borderSize8 >> 2] | 0) > 0) {
            $275 = HEAP32[$cset + 40 >> 2] | 0;
            $276 = HEAP32[$cset + 44 >> 2] | 0;
            $277 = HEAP32[$npolys >> 2] | 0;
            if (($277 | 0) > 0) {
             $278 = HEAP32[$polys >> 2] | 0;
             $cmp452471 = ($nvp | 0) > 0;
             $i440_0474 = 0;
             while (1) {
              $mul447 = Math_imul($i440_0474 << 1, $nvp) | 0;
              L457 : do {
               if ($cmp452471) {
                $add459 = $mul447 + $nvp | 0;
                $j450_0472 = 0;
                do {
                 $279 = HEAP16[$278 + ($j450_0472 + $mul447 << 1) >> 1] | 0;
                 if ($279 << 16 >> 16 == -1) {
                  break L457;
                 }
                 $arrayidx460 = $278 + ($add459 + $j450_0472 << 1) | 0;
                 $j450_0472 = $j450_0472 + 1 | 0;
                 do {
                  if ((HEAP16[$arrayidx460 >> 1] | 0) == -1) {
                   if (($j450_0472 | 0) < ($nvp | 0)) {
                    if ((HEAP16[$278 + ($j450_0472 + $mul447 << 1) >> 1] | 0) == -1) {
                     label = 340;
                    } else {
                     $nj_0 = $j450_0472;
                    }
                   } else {
                    label = 340;
                   }
                   if ((label | 0) == 340) {
                    label = 0;
                    $nj_0 = 0;
                   }
                   $mul474 = ($279 & 65535) * 3 | 0;
                   $282 = HEAP32[$verts >> 2] | 0;
                   $mul479 = (HEAPU16[$278 + ($nj_0 + $mul447 << 1) >> 1] | 0) * 3 | 0;
                   $arrayidx481 = $282 + ($mul479 << 1) | 0;
                   $284 = HEAP16[$282 + ($mul474 << 1) >> 1] | 0;
                   if ($284 << 16 >> 16 == 0) {
                    if ((HEAP16[$arrayidx481 >> 1] | 0) == 0) {
                     HEAP16[$arrayidx460 >> 1] = -32768;
                     break;
                    }
                   }
                   $286 = HEAP16[$282 + ($mul474 + 2 << 1) >> 1] | 0;
                   if (($286 & 65535 | 0) == ($276 | 0)) {
                    if ((HEAPU16[$282 + ($mul479 + 2 << 1) >> 1] | 0) == ($276 | 0)) {
                     HEAP16[$arrayidx460 >> 1] = -32767;
                     break;
                    }
                   }
                   if (($284 & 65535 | 0) == ($275 | 0)) {
                    if ((HEAPU16[$arrayidx481 >> 1] | 0) == ($275 | 0)) {
                     HEAP16[$arrayidx460 >> 1] = -32766;
                     break;
                    }
                   }
                   if ($286 << 16 >> 16 == 0) {
                    if ((HEAP16[$282 + ($mul479 + 2 << 1) >> 1] | 0) == 0) {
                     HEAP16[$arrayidx460 >> 1] = -32765;
                    }
                   }
                  }
                 } while (0);
                } while (($j450_0472 | 0) < ($nvp | 0));
               }
              } while (0);
              $inc533 = $i440_0474 + 1 | 0;
              if (($inc533 | 0) < ($277 | 0)) {
               $i440_0474 = $inc533;
              } else {
               $290 = $277;
               break;
              }
             }
            } else {
             $290 = $277;
            }
           } else {
            $290 = HEAP32[$npolys >> 2] | 0;
           }
           $call_i_i126 = _malloc($290 << 1) | 0;
           HEAP32[$mesh + 12 >> 2] = $call_i_i126;
           $292 = HEAP32[$npolys >> 2] | 0;
           if (($call_i_i126 | 0) == 0) {
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7904, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $292, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
            $retval_0 = 0;
            break L128;
           }
           _memset($call_i_i126 | 0, 0, $292 << 1 | 0) | 0;
           $293 = HEAP32[$nverts67 >> 2] | 0;
           if (($293 | 0) > 65535) {
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7624, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $293, HEAP32[tempVarArgs + 8 >> 2] = 65535, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
           }
           $294 = HEAP32[$npolys >> 2] | 0;
           if (($294 | 0) > 65535) {
            __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7488, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $294, HEAP32[tempVarArgs + 8 >> 2] = 65535, tempVarArgs) | 0);
            STACKTOP = tempVarArgs;
           }
           if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
            $retval_0 = 1;
            break L128;
           }
           FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 11);
           $retval_0 = 1;
           break L128;
          }
         } while (0);
         __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8152, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
         STACKTOP = tempVarArgs;
         $retval_0 = 0;
        }
       } while (0);
       _free($call_i_i9);
       $retval_1 = $retval_0;
      }
      _free($call_i_i8);
      $retval_2 = $retval_1;
     }
     _free($call_i_i7);
     $retval_3 = $retval_2;
    }
    _free($call_i_i6);
    $retval_4 = $retval_3;
   }
   _free($call_i_i5);
   $retval_5 = $retval_4;
  }
 } while (0);
 _free($call_i_i);
 $retval_6 = $retval_5;
 STACKTOP = sp;
 return $retval_6 | 0;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e_0, $__intl, $__loc_0_0_val, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__intl = $__intl | 0;
 $__loc_0_0_val = $__loc_0_0_val | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $__p_i_i_i_i71_i = 0, $__p_i_i_i_i_i = 0, $ref_tmp_i = 0, $ref_tmp1_i = 0, $ref_tmp3_i = 0, $ref_tmp7_i = 0, $ref_tmp9_i = 0, $ref_tmp14_i = 0, $ref_tmp15_i = 0, $ref_tmp17_i = 0, $ref_tmp21_i = 0, $ref_tmp23_i = 0, $__gbuf = 0, $__pat = 0, $__grp = 0, $__sym = 0, $__psn = 0, $__nsn = 0, $__spaces = 0, $arraydecay = 0, $this4_i_i_i = 0, $this4_i_i_i84 = 0, $this4_i_i_i99 = 0, $this4_i_i_i104 = 0, $this4_i_i_i105 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $tmpcast23_i = 0, $sub_i_i_i_i = 0, $15 = 0, $16 = 0, $exception_i_i_i_i = 0, $18 = 0, $22 = 0, $33 = 0, $call_i_i14 = 0, $call_i45_i15 = 0, $tmpcast_i = 0, $sub_i_i_i78_i = 0, $52 = 0, $53 = 0, $exception_i_i_i90_i = 0, $55 = 0, $59 = 0, $70 = 0, $call_i122_i24 = 0, $call_i125_i25 = 0, $__dp_0 = 0, $__ts_0 = 0, $storemerge_i = 0, $__first__i_i_i120 = 0, $__sbuf__i_i_i133 = 0, $field = 0, $86 = 0, $__data__i_i_i410 = 0, $__data__i1_i_i408 = 0, $__data__i_i_i = 0, $__data__i1_i_i = 0, $cmp1181104 = 0, $__data__i_i_i635 = 0, $__data__i1_i_i673 = 0, $__data__i_i_i763 = 0, $__data__i1_i_i817 = 0, $arrayidx112 = 0, $__second__i_i_i_i781 = 0, $__size__i2_i775 = 0, $__cap__i_i = 0, $__e_sroa_0_0 = 0, $__fd_0 = 0, $__trailing_sign_01263 = 0, $__p_01261 = 0, $add_ptr10591258 = 0, $__gb_sroa_0_0_load103210651253 = 0, $arraydecay10771248 = 0, $_ZNSt3__112__do_nothingEPv10851243 = 0, $__we10961240 = 0, $87 = 0, $88 = 0, $retval_0_i_i_i_i143 = 0, $93 = 0, $94 = 0, $retval_0_i_i12_i_i161 = 0, $__e_sroa_0_2 = 0, $117 = 0, $118 = 0, $retval_0_i_i187 = 0, $124 = 0, $__ninp__i_i193 = 0, $125 = 0, $retval_0_i_i202 = 0, $130 = 0, $tobool_i_i71 = 0, $__cap_0_i = 0, $__sz_0_i = 0, $134 = 0, $add16_i = 0, $__p_0_sum_pre_phi_i = 0, $call12_pn_i = 0, $__e_sroa_0_3 = 0, $_pre_i15_i_i236 = 0, $136 = 0, $137 = 0, $138 = 0, $retval_0_i_i_i_i215 = 0, $143 = 0, $144 = 0, $retval_0_i_i12_i_i233 = 0, $__e_sroa_0_4 = 0, $_pre_i15_i_i2361327 = 0, $__e_sroa_0_5 = 0, $_pre_i15_i_i2361329 = 0, $149 = 0, $150 = 0, $151 = 0, $retval_0_i_i254 = 0, $157 = 0, $__ninp__i_i263 = 0, $158 = 0, $retval_0_i_i272 = 0, $163 = 0, $tobool_i_i82 = 0, $__cap_0_i91 = 0, $__sz_0_i92 = 0, $167 = 0, $add16_i106 = 0, $__p_0_sum_pre_phi_i109 = 0, $call12_pn_i110 = 0, $168 = 0, $tobool_i_i281 = 0, $cond_i287 = 0, $170 = 0, $tobool_i_i291 = 0, $cond_i297 = 0, $cond_i315 = 0, $cond_i325 = 0, $cond_i335 = 0, $175 = 0, $176 = 0, $cmp_i_i396 = 0, $call_i_i347 = 0, $181 = 0, $retval_0_i_i345 = 0, $184 = 0, $__ninp__i_i360 = 0, $185 = 0, $189 = 0, $cond_i379 = 0, $call_i_i403 = 0, $194 = 0, $retval_0_i_i401 = 0, $197 = 0, $__ninp__i_i457 = 0, $198 = 0, $202 = 0, $cond_i476 = 0, $204 = 0, $205 = 0, $206 = 0, $call_i_i488 = 0, $_pre12 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $retval_0_i_i486 = 0, $__ninp__i_i512 = 0, $cmp_i_i514 = 0, $218 = 0, $cond_i531 = 0, $retval_0_i_i553 = 0, $226 = 0, $__ninp__i_i609 = 0, $227 = 0, $231 = 0, $cond_i628 = 0, $235 = 0, $236 = 0, $__data__i_i_i635_ = 0, $239 = 0, $__sym_space_end_sroa_0_0_load1054 = 0, $cond_i7_i = 0, $cond_i6_i = 0, $244 = 0, $__data__i_i_i635_1353 = 0, $sub_ptr_div_i = 0, $246 = 0, $tobool_i_i749 = 0, $cond_i755 = 0, $248 = 0, $249 = 0, $shr1_i_i_i765 = 0, $add_ptr_i_i_i1343 = 0, $cond_i7_i824 = 0, $cond_i6_i825 = 0, $add_ptr_i826 = 0, $250 = 0, $251 = 0, $incdec_ptr_i2_i_i = 0, $__e_sroa_0_6 = 0, $_pre_i15_i_i992 = 0, $254 = 0, $255 = 0, $__sym_space_end_sroa_0_0_load1053 = 0, $cond_i7_i921 = 0, $cond_i6_i922 = 0, $258 = 0, $259 = 0, $retval_0_i_i_i_i971 = 0, $264 = 0, $265 = 0, $retval_0_i_i12_i_i989 = 0, $__e_sroa_0_7 = 0, $_pre_i15_i_i9921336 = 0, $__e_sroa_0_8 = 0, $_pre_i15_i_i9921335 = 0, $270 = 0, $271 = 0, $272 = 0, $retval_0_i_i1010 = 0, $278 = 0, $__ninp__i_i950 = 0, $279 = 0, $__e_sroa_0_9 = 0, $283 = 0, $cond_i7_i942 = 0, $cond_i6_i943 = 0, $__e_sroa_0_10 = 0, $__we1095 = 0, $_ZNSt3__112__do_nothingEPv1089 = 0, $arraydecay1075 = 0, $__gb_sroa_0_0_load10321064 = 0, $add_ptr1058 = 0, $__ng_0 = 0, $287 = 0, $288 = 0, $retval_0_i_i_i_i880 = 0, $293 = 0, $294 = 0, $retval_0_i_i12_i_i898 = 0, $__e_sroa_0_12 = 0, $299 = 0, $300 = 0, $retval_0_i_i864 = 0, $306 = 0, $cmp_i782 = 0, $308 = 0, $sub_ptr_sub_i786 = 0, $mul4__i789 = 0, $sub_ptr_div10_i792 = 0, $cond15_i795 = 0, $call16_i796 = 0, $309 = 0, $exception_i = 0, $_pr_i802 = 0, $315 = 0, $add_ptr_i810 = 0, $317 = 0, $__we1094 = 0, $318 = 0, $cond_i780 = 0, $sub_ptr_sub_i705 = 0, $mul4__i708 = 0, $cond15_i714 = 0, $call16_i715 = 0, $320 = 0, $exception_i116 = 0, $_ZNSt3__112__do_nothingEPv1091 = 0, $arraydecay1074 = 0, $__gb_sroa_0_0_load10321068 = 0, $add_ptr1057 = 0, $__we1093 = 0, $_ZNSt3__112__do_nothingEPv1090 = 0, $arraydecay1073 = 0, $__gb_sroa_0_0_load10321063 = 0, $add_ptr1056 = 0, $__ng_1 = 0, $322 = 0, $__ninp__i_i683 = 0, $323 = 0, $__e_sroa_0_13 = 0, $sub_ptr_sub_i643 = 0, $mul4__i646 = 0, $cond15_i652 = 0, $call16_i653 = 0, $327 = 0, $exception_i119 = 0, $_ZNSt3__112__do_nothingEPv1088 = 0, $arraydecay1072 = 0, $__gb_sroa_0_0_load10321069 = 0, $add_ptr1062 = 0, $_ZNSt3__112__do_nothingEPv1087 = 0, $arraydecay1071 = 0, $__gb_sroa_0_0_load10321067 = 0, $add_ptr1061 = 0, $329 = 0, $330 = 0, $retval_0_i_i_i_i576 = 0, $335 = 0, $336 = 0, $retval_0_i_i12_i_i594 = 0, $__e_sroa_0_15 = 0, $341 = 0, $342 = 0, $retval_0_i_i541 = 0, $348 = 0, $__ninp__i_i500 = 0, $349 = 0, $__e_sroa_0_16 = 0, $_pre_i15_i_i445 = 0, $353 = 0, $354 = 0, $__we10991147 = 0, $355 = 0, $356 = 0, $retval_0_i_i_i_i424 = 0, $361 = 0, $362 = 0, $retval_0_i_i12_i_i442 = 0, $__e_sroa_0_17 = 0, $_pre_i15_i_i4451340_ph = 0, $__e_sroa_0_18 = 0, $367 = 0, $_pre_i15_i_i44513401347 = 0, $368 = 0, $369 = 0, $retval_0_i_i389 = 0, $376 = 0, $cmp_i300 = 0, $378 = 0, $sub_ptr_sub_i303 = 0, $mul4__i = 0, $sub_ptr_div10_i = 0, $cond15_i = 0, $call16_i = 0, $379 = 0, $exception_i122 = 0, $_pr_i = 0, $385 = 0, $add_ptr_i306 = 0, $387 = 0, $__we1100 = 0, $388 = 0, $389 = 0, $call_i_i131 = 0, $394 = 0, $retval_0_i_i129 = 0, $dec = 0, $395 = 0, $__ninp__i_i109 = 0, $396 = 0, $__e_sroa_0_19 = 0, $__fd_1 = 0, $__we1098 = 0, $__e_sroa_0_20 = 0, $__fd_2 = 0, $__we1097 = 0, $_ZNSt3__112__do_nothingEPv1086 = 0, $arraydecay1076 = 0, $__gb_sroa_0_0_load10321066 = 0, $add_ptr1060 = 0, $__trailing_sign_1 = 0, $inc281 = 0, $__e_sroa_0_21 = 0, $__trailing_sign_0_lcssa = 0, $__gb_sroa_0_0_load10321065_lcssa = 0, $arraydecay1077_lcssa = 0, $_ZNSt3__112__do_nothingEPv1085_lcssa = 0, $__size__i_i = 0, $__data__i_i_i_i87 = 0, $__data__i1_i_i_i = 0, $__e_sroa_0_22 = 0, $__i_0 = 0, $403 = 0, $cond_i = 0, $405 = 0, $406 = 0, $retval_0_i_i_i_i = 0, $411 = 0, $412 = 0, $retval_0_i_i12_i_i = 0, $__e_sroa_0_24 = 0, $417 = 0, $418 = 0, $retval_0_i_i = 0, $cond_i_i_i = 0, $inc302 = 0, $427 = 0, $__ninp__i_i = 0, $428 = 0, $432 = 0, $cond_i_i = 0, $incdec_ptr6_i_i_i = 0, $cmp17_i_i_i = 0, $incdec_ptr9_i_i_i = 0, $__first_addr_08_i_i_i = 0, $434 = 0, $436 = 0, $cond_i_i44_i = 0, $cond_i25_i = 0, $439 = 0, $or_cond2736_i = 0, $sub_ptr_lhs_cast_i = 0, $or_cond2739_i = 0, $440 = 0, $__r_038_i = 0, $__ig_037_i = 0, $incdec_ptr___ig_0_i = 0, $incdec_ptr18_i = 0, $442 = 0, $or_cond27_i = 0, $or_cond27_lcssa_i = 0, $_lcssa_i = 0, $_ZNSt3__112__do_nothingEPv = 0, $arraydecay1083 = 0, $retval_0 = 0, $448 = 0, $451 = 0, $454 = 0, $457 = 0, $460 = 0, $$etemp$25$0 = 0, $$etemp$25$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 664 | 0;
 $__p_i_i_i_i71_i = sp | 0;
 $__p_i_i_i_i_i = sp + 16 | 0;
 $ref_tmp_i = sp + 32 | 0;
 $ref_tmp1_i = sp + 40 | 0;
 $ref_tmp3_i = sp + 56 | 0;
 $ref_tmp7_i = sp + 72 | 0;
 $ref_tmp9_i = sp + 88 | 0;
 $ref_tmp14_i = sp + 104 | 0;
 $ref_tmp15_i = sp + 112 | 0;
 $ref_tmp17_i = sp + 128 | 0;
 $ref_tmp21_i = sp + 144 | 0;
 $ref_tmp23_i = sp + 160 | 0;
 $__gbuf = sp + 176 | 0;
 $__pat = sp + 576 | 0;
 $__grp = sp + 584 | 0;
 $__sym = sp + 600 | 0;
 $__psn = sp + 616 | 0;
 $__nsn = sp + 632 | 0;
 $__spaces = sp + 648 | 0;
 $arraydecay = $__gbuf | 0;
 HEAP32[$__pat >> 2] = 0;
 $this4_i_i_i = $__grp;
 _memset($this4_i_i_i | 0, 0, 12) | 0;
 $this4_i_i_i84 = $__sym;
 _memset($this4_i_i_i84 | 0, 0, 12) | 0;
 $this4_i_i_i99 = $__psn;
 _memset($this4_i_i_i99 | 0, 0, 12) | 0;
 $this4_i_i_i104 = $__nsn;
 _memset($this4_i_i_i104 | 0, 0, 12) | 0;
 $this4_i_i_i105 = $__spaces;
 _memset($this4_i_i_i105 | 0, 0, 12) | 0;
 $2 = $ref_tmp1_i;
 $3 = $ref_tmp3_i;
 $4 = $ref_tmp7_i;
 $5 = $ref_tmp9_i;
 $7 = $ref_tmp15_i;
 $8 = $ref_tmp17_i;
 $9 = $ref_tmp21_i;
 $10 = $ref_tmp23_i;
 do {
  if ($__intl) {
   $tmpcast23_i = $ref_tmp_i;
   if (!((HEAP32[6026] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i_i >> 2] = 24104;
    HEAP32[$__p_i_i_i_i_i + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i_i + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(24104, $__p_i_i_i_i_i);
   }
   $sub_i_i_i_i = (HEAP32[6027] | 0) - 1 | 0;
   $15 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
   if ((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $15 >> 2 >>> 0 > $sub_i_i_i_i >>> 0) {
    $16 = HEAP32[$15 + ($sub_i_i_i_i << 2) >> 2] | 0;
    if (($16 | 0) != 0) {
     $18 = $16;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 127]($tmpcast23_i, $18);
     HEAP32[$__pat >> 2] = HEAP32[$ref_tmp_i >> 2];
     $22 = $16;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp1_i, $18);
     if ((HEAP8[$this4_i_i_i104 >> 0] & 1) == 0) {
      HEAP32[$__nsn + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i104 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
      HEAP32[$__nsn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn);
     HEAP32[$this4_i_i_i104 >> 2] = HEAP32[$2 >> 2];
     HEAP32[$this4_i_i_i104 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$this4_i_i_i104 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     _memset($2 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp3_i, $18);
     if ((HEAP8[$this4_i_i_i99 >> 0] & 1) == 0) {
      HEAP32[$__psn + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i99 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
      HEAP32[$__psn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn);
     HEAP32[$this4_i_i_i99 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$this4_i_i_i99 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$this4_i_i_i99 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     _memset($3 | 0, 0, 12) | 0;
     $33 = $16;
     $call_i_i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 12 >> 2] & 255]($18) | 0;
     $call_i45_i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 255]($18) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$16 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp7_i, $18);
     if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
      HEAP8[$__grp + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
      HEAP32[$__grp + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
     HEAP32[$this4_i_i_i >> 2] = HEAP32[$4 >> 2];
     HEAP32[$this4_i_i_i + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$this4_i_i_i + 8 >> 2] = HEAP32[$4 + 8 >> 2];
     _memset($4 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp9_i, $18);
     if ((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0) {
      HEAP32[$__sym + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i84 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
      HEAP32[$__sym + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
     HEAP32[$this4_i_i_i84 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$this4_i_i_i84 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$this4_i_i_i84 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     _memset($5 | 0, 0, 12) | 0;
     $storemerge_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($18) | 0;
     $__ts_0 = $call_i45_i15;
     $__dp_0 = $call_i_i14;
     break;
    }
   }
   $exception_i_i_i_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i_i >> 2] = 11608;
   ___cxa_throw($exception_i_i_i_i | 0, 17848, 212);
   return 0;
  } else {
   $tmpcast_i = $ref_tmp14_i;
   if (!((HEAP32[6028] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i71_i >> 2] = 24112;
    HEAP32[$__p_i_i_i_i71_i + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i71_i + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(24112, $__p_i_i_i_i71_i);
   }
   $sub_i_i_i78_i = (HEAP32[6029] | 0) - 1 | 0;
   $52 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
   if ((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $52 >> 2 >>> 0 > $sub_i_i_i78_i >>> 0) {
    $53 = HEAP32[$52 + ($sub_i_i_i78_i << 2) >> 2] | 0;
    if (($53 | 0) != 0) {
     $55 = $53;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 44 >> 2] & 127]($tmpcast_i, $55);
     HEAP32[$__pat >> 2] = HEAP32[$ref_tmp14_i >> 2];
     $59 = $53;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp15_i, $55);
     if ((HEAP8[$this4_i_i_i104 >> 0] & 1) == 0) {
      HEAP32[$__nsn + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i104 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
      HEAP32[$__nsn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn);
     HEAP32[$this4_i_i_i104 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$this4_i_i_i104 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$this4_i_i_i104 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     _memset($7 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp17_i, $55);
     if ((HEAP8[$this4_i_i_i99 >> 0] & 1) == 0) {
      HEAP32[$__psn + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i99 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
      HEAP32[$__psn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn);
     HEAP32[$this4_i_i_i99 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$this4_i_i_i99 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$this4_i_i_i99 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     _memset($8 | 0, 0, 12) | 0;
     $70 = $53;
     $call_i122_i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 12 >> 2] & 255]($55) | 0;
     $call_i125_i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 16 >> 2] & 255]($55) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp21_i, $55);
     if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
      HEAP8[$__grp + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
      HEAP32[$__grp + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
     HEAP32[$this4_i_i_i >> 2] = HEAP32[$9 >> 2];
     HEAP32[$this4_i_i_i + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$this4_i_i_i + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     _memset($9 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp23_i, $55);
     if ((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0) {
      HEAP32[$__sym + 4 >> 2] = 0;
      HEAP8[$this4_i_i_i84 >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
      HEAP32[$__sym + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
     HEAP32[$this4_i_i_i84 >> 2] = HEAP32[$10 >> 2];
     HEAP32[$this4_i_i_i84 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$this4_i_i_i84 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     _memset($10 | 0, 0, 12) | 0;
     $storemerge_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
     $__ts_0 = $call_i125_i25;
     $__dp_0 = $call_i122_i24;
     break;
    }
   }
   $exception_i_i_i90_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i90_i >> 2] = 11608;
   ___cxa_throw($exception_i_i_i90_i | 0, 17848, 212);
   return 0;
  }
 } while (0);
 $__first__i_i_i120 = $__wb | 0;
 HEAP32[$__wn >> 2] = HEAP32[$__first__i_i_i120 >> 2];
 $__sbuf__i_i_i133 = $__b | 0;
 $field = $__pat;
 $86 = $__ct;
 $__data__i_i_i410 = $__nsn + 4 | 0;
 $__data__i1_i_i408 = $__nsn + 8 | 0;
 $__data__i_i_i = $__psn + 4 | 0;
 $__data__i1_i_i = $__psn + 8 | 0;
 $cmp1181104 = ($__flags & 512 | 0) != 0;
 $__data__i_i_i635 = $__sym + 4 | 0;
 $__data__i1_i_i673 = $__sym + 8 | 0;
 $__data__i_i_i763 = $__spaces + 4 | 0;
 $__data__i1_i_i817 = $__spaces + 8 | 0;
 $arrayidx112 = $field + 3 | 0;
 $__second__i_i_i_i781 = $__wb + 4 | 0;
 $__size__i2_i775 = $__grp + 4 | 0;
 $__cap__i_i = $__spaces | 0;
 $__we10961240 = $__we;
 $_ZNSt3__112__do_nothingEPv10851243 = 182;
 $arraydecay10771248 = $arraydecay;
 $__gb_sroa_0_0_load103210651253 = $arraydecay;
 $add_ptr10591258 = $__gbuf + 400 | 0;
 $__p_01261 = 0;
 $__trailing_sign_01263 = 0;
 $__fd_0 = $storemerge_i;
 $__e_sroa_0_0 = $__e_0;
 L75 : while (1) {
  $87 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
  do {
   if (($87 | 0) == 0) {
    $93 = 1;
   } else {
    $88 = HEAP32[$87 + 12 >> 2] | 0;
    if (($88 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) {
     $retval_0_i_i_i_i143 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] & 255]($87) | 0;
    } else {
     $retval_0_i_i_i_i143 = HEAP32[$88 >> 2] | 0;
    }
    if (($retval_0_i_i_i_i143 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
     $93 = 1;
     break;
    } else {
     $93 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
     break;
    }
   }
  } while (0);
  if (($__e_sroa_0_0 | 0) == 0) {
   label = 83;
  } else {
   $94 = HEAP32[$__e_sroa_0_0 + 12 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$__e_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i161 = HEAP32[$94 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i161 | 0) == -1) {
    label = 83;
   } else {
    if ($93) {
     $__e_sroa_0_2 = $__e_sroa_0_0;
    } else {
     $_ZNSt3__112__do_nothingEPv1085_lcssa = $_ZNSt3__112__do_nothingEPv10851243;
     $arraydecay1077_lcssa = $arraydecay10771248;
     $__gb_sroa_0_0_load10321065_lcssa = $__gb_sroa_0_0_load103210651253;
     $__trailing_sign_0_lcssa = $__trailing_sign_01263;
     $__e_sroa_0_21 = $__e_sroa_0_0;
     label = 417;
     break;
    }
   }
  }
  if ((label | 0) == 83) {
   label = 0;
   if ($93) {
    $_ZNSt3__112__do_nothingEPv1085_lcssa = $_ZNSt3__112__do_nothingEPv10851243;
    $arraydecay1077_lcssa = $arraydecay10771248;
    $__gb_sroa_0_0_load10321065_lcssa = $__gb_sroa_0_0_load103210651253;
    $__trailing_sign_0_lcssa = $__trailing_sign_01263;
    $__e_sroa_0_21 = 0;
    label = 417;
    break;
   } else {
    $__e_sroa_0_2 = 0;
   }
  }
  L97 : do {
   switch (HEAP8[$field + $__p_01261 >> 0] | 0) {
   case 3:
    {
     $168 = HEAP8[$this4_i_i_i99 >> 0] | 0;
     $tobool_i_i281 = ($168 & 1) == 0;
     if ($tobool_i_i281) {
      $cond_i287 = ($168 & 255) >>> 1;
     } else {
      $cond_i287 = HEAP32[$__data__i_i_i >> 2] | 0;
     }
     $170 = HEAP8[$this4_i_i_i104 >> 0] | 0;
     $tobool_i_i291 = ($170 & 1) == 0;
     if ($tobool_i_i291) {
      $cond_i297 = ($170 & 255) >>> 1;
     } else {
      $cond_i297 = HEAP32[$__data__i_i_i410 >> 2] | 0;
     }
     if (($cond_i287 | 0) == (-$cond_i297 | 0)) {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1060 = $add_ptr10591258;
      $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
      $arraydecay1076 = $arraydecay10771248;
      $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
      $__we1097 = $__we10961240;
      $__fd_2 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_2;
     } else {
      if ($tobool_i_i281) {
       $cond_i315 = ($168 & 255) >>> 1;
      } else {
       $cond_i315 = HEAP32[$__data__i_i_i >> 2] | 0;
      }
      if (($cond_i315 | 0) != 0) {
       if ($tobool_i_i291) {
        $cond_i325 = ($170 & 255) >>> 1;
       } else {
        $cond_i325 = HEAP32[$__data__i_i_i410 >> 2] | 0;
       }
       if (($cond_i325 | 0) != 0) {
        $204 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
        $205 = HEAP32[$204 + 12 >> 2] | 0;
        $206 = HEAP32[$204 + 16 >> 2] | 0;
        if (($205 | 0) == ($206 | 0)) {
         $call_i_i488 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$204 >> 2] | 0) + 36 >> 2] & 255]($204) | 0;
         $_pre12 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
         $retval_0_i_i486 = $call_i_i488;
         $213 = HEAP8[$this4_i_i_i99 >> 0] | 0;
         $212 = $_pre12;
         $211 = HEAP32[$_pre12 + 12 >> 2] | 0;
         $210 = HEAP32[$_pre12 + 16 >> 2] | 0;
        } else {
         $retval_0_i_i486 = HEAP32[$205 >> 2] | 0;
         $213 = $168;
         $212 = $204;
         $211 = $205;
         $210 = $206;
        }
        $__ninp__i_i512 = $212 + 12 | 0;
        $cmp_i_i514 = ($211 | 0) == ($210 | 0);
        if (($retval_0_i_i486 | 0) == (HEAP32[(($213 & 1) == 0 ? $__data__i_i_i : HEAP32[$__data__i1_i_i >> 2] | 0) >> 2] | 0)) {
         if ($cmp_i_i514) {
          FUNCTION_TABLE_ii[HEAP32[(HEAP32[$212 >> 2] | 0) + 40 >> 2] & 255]($212) | 0;
         } else {
          HEAP32[$__ninp__i_i512 >> 2] = $211 + 4;
         }
         $218 = HEAP8[$this4_i_i_i99 >> 0] | 0;
         if (($218 & 1) == 0) {
          $cond_i531 = ($218 & 255) >>> 1;
         } else {
          $cond_i531 = HEAP32[$__data__i_i_i >> 2] | 0;
         }
         $__trailing_sign_1 = $cond_i531 >>> 0 > 1 >>> 0 ? $__psn : $__trailing_sign_01263;
         $add_ptr1060 = $add_ptr10591258;
         $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
         $arraydecay1076 = $arraydecay10771248;
         $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
         $__we1097 = $__we10961240;
         $__fd_2 = $__fd_0;
         $__e_sroa_0_20 = $__e_sroa_0_2;
         break L97;
        }
        if ($cmp_i_i514) {
         $retval_0_i_i553 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$212 >> 2] | 0) + 36 >> 2] & 255]($212) | 0;
        } else {
         $retval_0_i_i553 = HEAP32[$211 >> 2] | 0;
        }
        if (($retval_0_i_i553 | 0) != (HEAP32[((HEAP8[$this4_i_i_i104 >> 0] & 1) == 0 ? $__data__i_i_i410 : HEAP32[$__data__i1_i_i408 >> 2] | 0) >> 2] | 0)) {
         label = 236;
         break L75;
        }
        $226 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
        $__ninp__i_i609 = $226 + 12 | 0;
        $227 = HEAP32[$__ninp__i_i609 >> 2] | 0;
        if (($227 | 0) == (HEAP32[$226 + 16 >> 2] | 0)) {
         FUNCTION_TABLE_ii[HEAP32[(HEAP32[$226 >> 2] | 0) + 40 >> 2] & 255]($226) | 0;
        } else {
         HEAP32[$__ninp__i_i609 >> 2] = $227 + 4;
        }
        HEAP8[$__neg >> 0] = 1;
        $231 = HEAP8[$this4_i_i_i104 >> 0] | 0;
        if (($231 & 1) == 0) {
         $cond_i628 = ($231 & 255) >>> 1;
        } else {
         $cond_i628 = HEAP32[$__data__i_i_i410 >> 2] | 0;
        }
        $__trailing_sign_1 = $cond_i628 >>> 0 > 1 >>> 0 ? $__nsn : $__trailing_sign_01263;
        $add_ptr1060 = $add_ptr10591258;
        $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
        $arraydecay1076 = $arraydecay10771248;
        $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
        $__we1097 = $__we10961240;
        $__fd_2 = $__fd_0;
        $__e_sroa_0_20 = $__e_sroa_0_2;
        break L97;
       }
      }
      if ($tobool_i_i281) {
       $cond_i335 = ($168 & 255) >>> 1;
      } else {
       $cond_i335 = HEAP32[$__data__i_i_i >> 2] | 0;
      }
      $175 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $176 = HEAP32[$175 + 12 >> 2] | 0;
      $cmp_i_i396 = ($176 | 0) == (HEAP32[$175 + 16 >> 2] | 0);
      if (($cond_i335 | 0) == 0) {
       if ($cmp_i_i396) {
        $call_i_i403 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 36 >> 2] & 255]($175) | 0;
        $retval_0_i_i401 = $call_i_i403;
        $194 = HEAP8[$this4_i_i_i104 >> 0] | 0;
       } else {
        $retval_0_i_i401 = HEAP32[$176 >> 2] | 0;
        $194 = $170;
       }
       if (($retval_0_i_i401 | 0) != (HEAP32[(($194 & 1) == 0 ? $__data__i_i_i410 : HEAP32[$__data__i1_i_i408 >> 2] | 0) >> 2] | 0)) {
        $__trailing_sign_1 = $__trailing_sign_01263;
        $add_ptr1060 = $add_ptr10591258;
        $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
        $arraydecay1076 = $arraydecay10771248;
        $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
        $__we1097 = $__we10961240;
        $__fd_2 = $__fd_0;
        $__e_sroa_0_20 = $__e_sroa_0_2;
        break L97;
       }
       $197 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
       $__ninp__i_i457 = $197 + 12 | 0;
       $198 = HEAP32[$__ninp__i_i457 >> 2] | 0;
       if (($198 | 0) == (HEAP32[$197 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$197 >> 2] | 0) + 40 >> 2] & 255]($197) | 0;
       } else {
        HEAP32[$__ninp__i_i457 >> 2] = $198 + 4;
       }
       HEAP8[$__neg >> 0] = 1;
       $202 = HEAP8[$this4_i_i_i104 >> 0] | 0;
       if (($202 & 1) == 0) {
        $cond_i476 = ($202 & 255) >>> 1;
       } else {
        $cond_i476 = HEAP32[$__data__i_i_i410 >> 2] | 0;
       }
       $__trailing_sign_1 = $cond_i476 >>> 0 > 1 >>> 0 ? $__nsn : $__trailing_sign_01263;
       $add_ptr1060 = $add_ptr10591258;
       $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
       $arraydecay1076 = $arraydecay10771248;
       $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
       $__we1097 = $__we10961240;
       $__fd_2 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L97;
      }
      if ($cmp_i_i396) {
       $call_i_i347 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 36 >> 2] & 255]($175) | 0;
       $retval_0_i_i345 = $call_i_i347;
       $181 = HEAP8[$this4_i_i_i99 >> 0] | 0;
      } else {
       $retval_0_i_i345 = HEAP32[$176 >> 2] | 0;
       $181 = $168;
      }
      if (($retval_0_i_i345 | 0) != (HEAP32[(($181 & 1) == 0 ? $__data__i_i_i : HEAP32[$__data__i1_i_i >> 2] | 0) >> 2] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1060 = $add_ptr10591258;
       $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
       $arraydecay1076 = $arraydecay10771248;
       $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
       $__we1097 = $__we10961240;
       $__fd_2 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L97;
      }
      $184 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $__ninp__i_i360 = $184 + 12 | 0;
      $185 = HEAP32[$__ninp__i_i360 >> 2] | 0;
      if (($185 | 0) == (HEAP32[$184 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$184 >> 2] | 0) + 40 >> 2] & 255]($184) | 0;
      } else {
       HEAP32[$__ninp__i_i360 >> 2] = $185 + 4;
      }
      $189 = HEAP8[$this4_i_i_i99 >> 0] | 0;
      if (($189 & 1) == 0) {
       $cond_i379 = ($189 & 255) >>> 1;
      } else {
       $cond_i379 = HEAP32[$__data__i_i_i >> 2] | 0;
      }
      $__trailing_sign_1 = $cond_i379 >>> 0 > 1 >>> 0 ? $__psn : $__trailing_sign_01263;
      $add_ptr1060 = $add_ptr10591258;
      $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
      $arraydecay1076 = $arraydecay10771248;
      $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
      $__we1097 = $__we10961240;
      $__fd_2 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_2;
     }
     break;
    }
   case 0:
    {
     label = 136;
     break;
    }
   case 1:
    {
     if (($__p_01261 | 0) == 3) {
      $_ZNSt3__112__do_nothingEPv1085_lcssa = $_ZNSt3__112__do_nothingEPv10851243;
      $arraydecay1077_lcssa = $arraydecay10771248;
      $__gb_sroa_0_0_load10321065_lcssa = $__gb_sroa_0_0_load103210651253;
      $__trailing_sign_0_lcssa = $__trailing_sign_01263;
      $__e_sroa_0_21 = $__e_sroa_0_2;
      label = 417;
      break L75;
     }
     $117 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
     $118 = HEAP32[$117 + 12 >> 2] | 0;
     if (($118 | 0) == (HEAP32[$117 + 16 >> 2] | 0)) {
      $retval_0_i_i187 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$117 >> 2] | 0) + 36 >> 2] & 255]($117) | 0;
     } else {
      $retval_0_i_i187 = HEAP32[$118 >> 2] | 0;
     }
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$86 >> 2] | 0) + 12 >> 2] & 127]($__ct, 8192, $retval_0_i_i187) | 0)) {
      label = 135;
      break L75;
     }
     $124 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
     $__ninp__i_i193 = $124 + 12 | 0;
     $125 = HEAP32[$__ninp__i_i193 >> 2] | 0;
     if (($125 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
      $retval_0_i_i202 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$124 >> 2] | 0) + 40 >> 2] & 255]($124) | 0;
     } else {
      HEAP32[$__ninp__i_i193 >> 2] = $125 + 4;
      $retval_0_i_i202 = HEAP32[$125 >> 2] | 0;
     }
     $130 = HEAP8[$this4_i_i_i105 >> 0] | 0;
     $tobool_i_i71 = ($130 & 1) != 0;
     if ($tobool_i_i71) {
      $__sz_0_i = HEAP32[$__data__i_i_i763 >> 2] | 0;
      $__cap_0_i = (HEAP32[$__cap__i_i >> 2] & -2) - 1 | 0;
     } else {
      $__sz_0_i = ($130 & 255) >>> 1;
      $__cap_0_i = 1;
     }
     if (($__sz_0_i | 0) == ($__cap_0_i | 0)) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__spaces, $__cap_0_i, 1, $__cap_0_i, $__cap_0_i, 0, 0);
      if ((HEAP8[$this4_i_i_i105 >> 0] & 1) == 0) {
       label = 132;
      } else {
       label = 133;
      }
     } else {
      if ($tobool_i_i71) {
       label = 133;
      } else {
       label = 132;
      }
     }
     if ((label | 0) == 132) {
      label = 0;
      HEAP8[$this4_i_i_i105 >> 0] = ($__sz_0_i << 1) + 2;
      $call12_pn_i = $__data__i_i_i763;
      $__p_0_sum_pre_phi_i = $__sz_0_i + 1 | 0;
     } else if ((label | 0) == 133) {
      label = 0;
      $134 = HEAP32[$__data__i1_i_i817 >> 2] | 0;
      $add16_i = $__sz_0_i + 1 | 0;
      HEAP32[$__data__i_i_i763 >> 2] = $add16_i;
      $call12_pn_i = $134;
      $__p_0_sum_pre_phi_i = $add16_i;
     }
     HEAP32[$call12_pn_i + ($__sz_0_i << 2) >> 2] = $retval_0_i_i202;
     HEAP32[$call12_pn_i + ($__p_0_sum_pre_phi_i << 2) >> 2] = 0;
     label = 136;
     break;
    }
   case 2:
    {
     if (!(($__trailing_sign_01263 | 0) != 0 | $__p_01261 >>> 0 < 2 >>> 0)) {
      if (($__p_01261 | 0) == 2) {
       $235 = (HEAP8[$arrayidx112 >> 0] | 0) != 0;
      } else {
       $235 = 0;
      }
      if (!($cmp1181104 | $235)) {
       $__trailing_sign_1 = 0;
       $add_ptr1060 = $add_ptr10591258;
       $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
       $arraydecay1076 = $arraydecay10771248;
       $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
       $__we1097 = $__we10961240;
       $__fd_2 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L97;
      }
     }
     $236 = HEAP8[$this4_i_i_i84 >> 0] | 0;
     $__data__i_i_i635_ = ($236 & 1) == 0 ? $__data__i_i_i635 : HEAP32[$__data__i1_i_i673 >> 2] | 0;
     L217 : do {
      if (($__p_01261 | 0) == 0) {
       $__sym_space_end_sroa_0_0_load1053 = $__data__i_i_i635_;
       $255 = $236;
       $254 = $__e_sroa_0_2;
       $_pre_i15_i_i992 = $__e_sroa_0_2;
       $__e_sroa_0_6 = $__e_sroa_0_2;
      } else {
       if ((HEAPU8[$field + ($__p_01261 - 1) >> 0] | 0) >>> 0 < 2 >>> 0) {
        $__sym_space_end_sroa_0_0_load1054 = $__data__i_i_i635_;
        $239 = $236;
        while (1) {
         if (($239 & 1) == 0) {
          $cond_i6_i = ($239 & 255) >>> 1;
          $cond_i7_i = $__data__i_i_i635;
         } else {
          $cond_i6_i = HEAP32[$__data__i_i_i635 >> 2] | 0;
          $cond_i7_i = HEAP32[$__data__i1_i_i673 >> 2] | 0;
         }
         if (($__sym_space_end_sroa_0_0_load1054 | 0) == ($cond_i7_i + ($cond_i6_i << 2) | 0)) {
          $244 = $239;
          break;
         }
         if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$86 >> 2] | 0) + 12 >> 2] & 127]($__ct, 8192, HEAP32[$__sym_space_end_sroa_0_0_load1054 >> 2] | 0) | 0)) {
          label = 249;
          break;
         }
         $__sym_space_end_sroa_0_0_load1054 = $__sym_space_end_sroa_0_0_load1054 + 4 | 0;
         $239 = HEAP8[$this4_i_i_i84 >> 0] | 0;
        }
        if ((label | 0) == 249) {
         label = 0;
         $244 = HEAP8[$this4_i_i_i84 >> 0] | 0;
        }
        $__data__i_i_i635_1353 = ($244 & 1) == 0 ? $__data__i_i_i635 : HEAP32[$__data__i1_i_i673 >> 2] | 0;
        $sub_ptr_div_i = $__sym_space_end_sroa_0_0_load1054 - $__data__i_i_i635_1353 >> 2;
        $246 = HEAP8[$this4_i_i_i105 >> 0] | 0;
        $tobool_i_i749 = ($246 & 1) == 0;
        if ($tobool_i_i749) {
         $cond_i755 = ($246 & 255) >>> 1;
        } else {
         $cond_i755 = HEAP32[$__data__i_i_i763 >> 2] | 0;
        }
        if ($sub_ptr_div_i >>> 0 > $cond_i755 >>> 0) {
         $__sym_space_end_sroa_0_0_load1053 = $__data__i_i_i635_1353;
         $255 = $244;
         $254 = $__e_sroa_0_2;
         $_pre_i15_i_i992 = $__e_sroa_0_2;
         $__e_sroa_0_6 = $__e_sroa_0_2;
        } else {
         if ($tobool_i_i749) {
          $shr1_i_i_i765 = ($246 & 255) >>> 1;
          $cond_i6_i825 = $shr1_i_i_i765;
          $cond_i7_i824 = $__data__i_i_i763;
          $add_ptr_i_i_i1343 = $__data__i_i_i763 + ($shr1_i_i_i765 - $sub_ptr_div_i << 2) | 0;
         } else {
          $248 = HEAP32[$__data__i1_i_i817 >> 2] | 0;
          $249 = HEAP32[$__data__i_i_i763 >> 2] | 0;
          $cond_i6_i825 = $249;
          $cond_i7_i824 = $248;
          $add_ptr_i_i_i1343 = $248 + ($249 - $sub_ptr_div_i << 2) | 0;
         }
         $add_ptr_i826 = $cond_i7_i824 + ($cond_i6_i825 << 2) | 0;
         if (($add_ptr_i_i_i1343 | 0) == ($add_ptr_i826 | 0)) {
          $__sym_space_end_sroa_0_0_load1053 = $__sym_space_end_sroa_0_0_load1054;
          $255 = $244;
          $254 = $__e_sroa_0_2;
          $_pre_i15_i_i992 = $__e_sroa_0_2;
          $__e_sroa_0_6 = $__e_sroa_0_2;
         } else {
          $251 = $add_ptr_i_i_i1343;
          $250 = $__data__i_i_i635_1353;
          while (1) {
           if ((HEAP32[$251 >> 2] | 0) != (HEAP32[$250 >> 2] | 0)) {
            $__sym_space_end_sroa_0_0_load1053 = $__data__i_i_i635_1353;
            $255 = $244;
            $254 = $__e_sroa_0_2;
            $_pre_i15_i_i992 = $__e_sroa_0_2;
            $__e_sroa_0_6 = $__e_sroa_0_2;
            break L217;
           }
           $incdec_ptr_i2_i_i = $251 + 4 | 0;
           if (($incdec_ptr_i2_i_i | 0) == ($add_ptr_i826 | 0)) {
            $__sym_space_end_sroa_0_0_load1053 = $__sym_space_end_sroa_0_0_load1054;
            $255 = $244;
            $254 = $__e_sroa_0_2;
            $_pre_i15_i_i992 = $__e_sroa_0_2;
            $__e_sroa_0_6 = $__e_sroa_0_2;
            break;
           } else {
            $251 = $incdec_ptr_i2_i_i;
            $250 = $250 + 4 | 0;
           }
          }
         }
        }
       } else {
        $__sym_space_end_sroa_0_0_load1053 = $__data__i_i_i635_;
        $255 = $236;
        $254 = $__e_sroa_0_2;
        $_pre_i15_i_i992 = $__e_sroa_0_2;
        $__e_sroa_0_6 = $__e_sroa_0_2;
       }
      }
     } while (0);
     while (1) {
      if (($255 & 1) == 0) {
       $cond_i6_i922 = ($255 & 255) >>> 1;
       $cond_i7_i921 = $__data__i_i_i635;
      } else {
       $cond_i6_i922 = HEAP32[$__data__i_i_i635 >> 2] | 0;
       $cond_i7_i921 = HEAP32[$__data__i1_i_i673 >> 2] | 0;
      }
      if (($__sym_space_end_sroa_0_0_load1053 | 0) == ($cond_i7_i921 + ($cond_i6_i922 << 2) | 0)) {
       $__e_sroa_0_9 = $__e_sroa_0_6;
       break;
      }
      $258 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      do {
       if (($258 | 0) == 0) {
        $264 = 1;
       } else {
        $259 = HEAP32[$258 + 12 >> 2] | 0;
        if (($259 | 0) == (HEAP32[$258 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i971 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$258 >> 2] | 0) + 36 >> 2] & 255]($258) | 0;
        } else {
         $retval_0_i_i_i_i971 = HEAP32[$259 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i971 | 0) == -1) {
         HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
         $264 = 1;
         break;
        } else {
         $264 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($254 | 0) == 0) {
       $_pre_i15_i_i9921336 = $_pre_i15_i_i992;
       $__e_sroa_0_7 = $__e_sroa_0_6;
       label = 277;
      } else {
       $265 = HEAP32[$254 + 12 >> 2] | 0;
       if (($265 | 0) == (HEAP32[$254 + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i989 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$254 >> 2] | 0) + 36 >> 2] & 255]($254) | 0;
       } else {
        $retval_0_i_i12_i_i989 = HEAP32[$265 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i989 | 0) == -1) {
        $_pre_i15_i_i9921336 = 0;
        $__e_sroa_0_7 = 0;
        label = 277;
       } else {
        if ($264 ^ ($_pre_i15_i_i992 | 0) == 0) {
         $270 = $_pre_i15_i_i992;
         $_pre_i15_i_i9921335 = $_pre_i15_i_i992;
         $__e_sroa_0_8 = $__e_sroa_0_6;
        } else {
         $__e_sroa_0_9 = $__e_sroa_0_6;
         break;
        }
       }
      }
      if ((label | 0) == 277) {
       label = 0;
       if ($264) {
        $__e_sroa_0_9 = $__e_sroa_0_7;
        break;
       } else {
        $270 = 0;
        $_pre_i15_i_i9921335 = $_pre_i15_i_i9921336;
        $__e_sroa_0_8 = $__e_sroa_0_7;
       }
      }
      $271 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $272 = HEAP32[$271 + 12 >> 2] | 0;
      if (($272 | 0) == (HEAP32[$271 + 16 >> 2] | 0)) {
       $retval_0_i_i1010 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$271 >> 2] | 0) + 36 >> 2] & 255]($271) | 0;
      } else {
       $retval_0_i_i1010 = HEAP32[$272 >> 2] | 0;
      }
      if (($retval_0_i_i1010 | 0) != (HEAP32[$__sym_space_end_sroa_0_0_load1053 >> 2] | 0)) {
       $__e_sroa_0_9 = $__e_sroa_0_8;
       break;
      }
      $278 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $__ninp__i_i950 = $278 + 12 | 0;
      $279 = HEAP32[$__ninp__i_i950 >> 2] | 0;
      if (($279 | 0) == (HEAP32[$278 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$278 >> 2] | 0) + 40 >> 2] & 255]($278) | 0;
      } else {
       HEAP32[$__ninp__i_i950 >> 2] = $279 + 4;
      }
      $__sym_space_end_sroa_0_0_load1053 = $__sym_space_end_sroa_0_0_load1053 + 4 | 0;
      $255 = HEAP8[$this4_i_i_i84 >> 0] | 0;
      $254 = $270;
      $_pre_i15_i_i992 = $_pre_i15_i_i9921335;
      $__e_sroa_0_6 = $__e_sroa_0_8;
     }
     if ($cmp1181104) {
      $283 = HEAP8[$this4_i_i_i84 >> 0] | 0;
      if (($283 & 1) == 0) {
       $cond_i6_i943 = ($283 & 255) >>> 1;
       $cond_i7_i942 = $__data__i_i_i635;
      } else {
       $cond_i6_i943 = HEAP32[$__data__i_i_i635 >> 2] | 0;
       $cond_i7_i942 = HEAP32[$__data__i1_i_i673 >> 2] | 0;
      }
      if (($__sym_space_end_sroa_0_0_load1053 | 0) == ($cond_i7_i942 + ($cond_i6_i943 << 2) | 0)) {
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1060 = $add_ptr10591258;
       $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
       $arraydecay1076 = $arraydecay10771248;
       $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
       $__we1097 = $__we10961240;
       $__fd_2 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_9;
      } else {
       label = 292;
       break L75;
      }
     } else {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1060 = $add_ptr10591258;
      $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
      $arraydecay1076 = $arraydecay10771248;
      $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
      $__we1097 = $__we10961240;
      $__fd_2 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_9;
     }
     break;
    }
   case 4:
    {
     $__ng_0 = 0;
     $add_ptr1058 = $add_ptr10591258;
     $__gb_sroa_0_0_load10321064 = $__gb_sroa_0_0_load103210651253;
     $arraydecay1075 = $arraydecay10771248;
     $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10851243;
     $__we1095 = $__we10961240;
     $__e_sroa_0_10 = $__e_sroa_0_2;
     while (1) {
      $287 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      do {
       if (($287 | 0) == 0) {
        $293 = 1;
       } else {
        $288 = HEAP32[$287 + 12 >> 2] | 0;
        if (($288 | 0) == (HEAP32[$287 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i880 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$287 >> 2] | 0) + 36 >> 2] & 255]($287) | 0;
        } else {
         $retval_0_i_i_i_i880 = HEAP32[$288 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i880 | 0) == -1) {
         HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
         $293 = 1;
         break;
        } else {
         $293 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($__e_sroa_0_10 | 0) == 0) {
       label = 305;
      } else {
       $294 = HEAP32[$__e_sroa_0_10 + 12 >> 2] | 0;
       if (($294 | 0) == (HEAP32[$__e_sroa_0_10 + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i898 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_10 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_10) | 0;
       } else {
        $retval_0_i_i12_i_i898 = HEAP32[$294 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i898 | 0) == -1) {
        label = 305;
       } else {
        if ($293) {
         $__e_sroa_0_12 = $__e_sroa_0_10;
        } else {
         $__e_sroa_0_13 = $__e_sroa_0_10;
         break;
        }
       }
      }
      if ((label | 0) == 305) {
       label = 0;
       if ($293) {
        $__e_sroa_0_13 = 0;
        break;
       } else {
        $__e_sroa_0_12 = 0;
       }
      }
      $299 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $300 = HEAP32[$299 + 12 >> 2] | 0;
      if (($300 | 0) == (HEAP32[$299 + 16 >> 2] | 0)) {
       $retval_0_i_i864 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$299 >> 2] | 0) + 36 >> 2] & 255]($299) | 0;
      } else {
       $retval_0_i_i864 = HEAP32[$300 >> 2] | 0;
      }
      if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$86 >> 2] | 0) + 12 >> 2] & 127]($__ct, 2048, $retval_0_i_i864) | 0) {
       $306 = HEAP32[$__wn >> 2] | 0;
       if (($306 | 0) == ($__we1095 | 0)) {
        $cmp_i782 = (HEAP32[$__second__i_i_i_i781 >> 2] | 0) != 182;
        $308 = HEAP32[$__first__i_i_i120 >> 2] | 0;
        $sub_ptr_sub_i786 = $__we1095 - $308 | 0;
        $mul4__i789 = $sub_ptr_sub_i786 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i786 << 1 : -1;
        $sub_ptr_div10_i792 = $sub_ptr_sub_i786 >> 2;
        if ($cmp_i782) {
         $cond15_i795 = $308;
        } else {
         $cond15_i795 = 0;
        }
        $call16_i796 = _realloc($cond15_i795, $mul4__i789) | 0;
        $309 = $call16_i796;
        if (($call16_i796 | 0) == 0) {
         label = 316;
         break L75;
        }
        if ($cmp_i782) {
         HEAP32[$__first__i_i_i120 >> 2] = $309;
         $315 = $309;
        } else {
         $_pr_i802 = HEAP32[$__first__i_i_i120 >> 2] | 0;
         HEAP32[$__first__i_i_i120 >> 2] = $309;
         if (($_pr_i802 | 0) == 0) {
          $315 = $309;
         } else {
          FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i781 >> 2] & 511]($_pr_i802);
          $315 = HEAP32[$__first__i_i_i120 >> 2] | 0;
         }
        }
        HEAP32[$__second__i_i_i_i781 >> 2] = 102;
        $add_ptr_i810 = $315 + ($sub_ptr_div10_i792 << 2) | 0;
        HEAP32[$__wn >> 2] = $add_ptr_i810;
        $__we1094 = (HEAP32[$__first__i_i_i120 >> 2] | 0) + ($mul4__i789 >>> 2 << 2) | 0;
        $317 = $add_ptr_i810;
       } else {
        $__we1094 = $__we1095;
        $317 = $306;
       }
       HEAP32[$__wn >> 2] = $317 + 4;
       HEAP32[$317 >> 2] = $retval_0_i_i864;
       $__ng_1 = $__ng_0 + 1 | 0;
       $add_ptr1056 = $add_ptr1058;
       $__gb_sroa_0_0_load10321063 = $__gb_sroa_0_0_load10321064;
       $arraydecay1073 = $arraydecay1075;
       $_ZNSt3__112__do_nothingEPv1090 = $_ZNSt3__112__do_nothingEPv1089;
       $__we1093 = $__we1094;
      } else {
       $318 = HEAP8[$this4_i_i_i >> 0] | 0;
       if (($318 & 1) == 0) {
        $cond_i780 = ($318 & 255) >>> 1;
       } else {
        $cond_i780 = HEAP32[$__size__i2_i775 >> 2] | 0;
       }
       if (!(($cond_i780 | 0) != 0 & ($__ng_0 | 0) != 0 & ($retval_0_i_i864 | 0) == ($__ts_0 | 0))) {
        $__e_sroa_0_13 = $__e_sroa_0_12;
        break;
       }
       if (($__gb_sroa_0_0_load10321064 | 0) == ($add_ptr1058 | 0)) {
        $sub_ptr_sub_i705 = $__gb_sroa_0_0_load10321064 - $arraydecay1075 | 0;
        $mul4__i708 = $sub_ptr_sub_i705 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i705 << 1 : -1;
        if (($_ZNSt3__112__do_nothingEPv1089 | 0) == 182) {
         $cond15_i714 = 0;
        } else {
         $cond15_i714 = $arraydecay1075;
        }
        $call16_i715 = _realloc($cond15_i714, $mul4__i708) | 0;
        $320 = $call16_i715;
        if (($call16_i715 | 0) == 0) {
         label = 334;
         break L75;
        }
        $add_ptr1057 = $320 + ($mul4__i708 >>> 2 << 2) | 0;
        $__gb_sroa_0_0_load10321068 = $320 + ($sub_ptr_sub_i705 >> 2 << 2) | 0;
        $arraydecay1074 = $320;
        $_ZNSt3__112__do_nothingEPv1091 = 102;
       } else {
        $add_ptr1057 = $add_ptr1058;
        $__gb_sroa_0_0_load10321068 = $__gb_sroa_0_0_load10321064;
        $arraydecay1074 = $arraydecay1075;
        $_ZNSt3__112__do_nothingEPv1091 = $_ZNSt3__112__do_nothingEPv1089;
       }
       HEAP32[$__gb_sroa_0_0_load10321068 >> 2] = $__ng_0;
       $__ng_1 = 0;
       $add_ptr1056 = $add_ptr1057;
       $__gb_sroa_0_0_load10321063 = $__gb_sroa_0_0_load10321068 + 4 | 0;
       $arraydecay1073 = $arraydecay1074;
       $_ZNSt3__112__do_nothingEPv1090 = $_ZNSt3__112__do_nothingEPv1091;
       $__we1093 = $__we1095;
      }
      $322 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $__ninp__i_i683 = $322 + 12 | 0;
      $323 = HEAP32[$__ninp__i_i683 >> 2] | 0;
      if (($323 | 0) == (HEAP32[$322 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$322 >> 2] | 0) + 40 >> 2] & 255]($322) | 0;
       $__ng_0 = $__ng_1;
       $add_ptr1058 = $add_ptr1056;
       $__gb_sroa_0_0_load10321064 = $__gb_sroa_0_0_load10321063;
       $arraydecay1075 = $arraydecay1073;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv1090;
       $__we1095 = $__we1093;
       $__e_sroa_0_10 = $__e_sroa_0_12;
       continue;
      } else {
       HEAP32[$__ninp__i_i683 >> 2] = $323 + 4;
       $__ng_0 = $__ng_1;
       $add_ptr1058 = $add_ptr1056;
       $__gb_sroa_0_0_load10321064 = $__gb_sroa_0_0_load10321063;
       $arraydecay1075 = $arraydecay1073;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv1090;
       $__we1095 = $__we1093;
       $__e_sroa_0_10 = $__e_sroa_0_12;
       continue;
      }
     }
     if (($arraydecay1075 | 0) != ($__gb_sroa_0_0_load10321064 | 0) & ($__ng_0 | 0) != 0) {
      if (($__gb_sroa_0_0_load10321064 | 0) == ($add_ptr1058 | 0)) {
       $sub_ptr_sub_i643 = $__gb_sroa_0_0_load10321064 - $arraydecay1075 | 0;
       $mul4__i646 = $sub_ptr_sub_i643 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i643 << 1 : -1;
       if (($_ZNSt3__112__do_nothingEPv1089 | 0) == 182) {
        $cond15_i652 = 0;
       } else {
        $cond15_i652 = $arraydecay1075;
       }
       $call16_i653 = _realloc($cond15_i652, $mul4__i646) | 0;
       $327 = $call16_i653;
       if (($call16_i653 | 0) == 0) {
        label = 346;
        break L75;
       }
       $add_ptr1062 = $327 + ($mul4__i646 >>> 2 << 2) | 0;
       $__gb_sroa_0_0_load10321069 = $327 + ($sub_ptr_sub_i643 >> 2 << 2) | 0;
       $arraydecay1072 = $327;
       $_ZNSt3__112__do_nothingEPv1088 = 102;
      } else {
       $add_ptr1062 = $add_ptr1058;
       $__gb_sroa_0_0_load10321069 = $__gb_sroa_0_0_load10321064;
       $arraydecay1072 = $arraydecay1075;
       $_ZNSt3__112__do_nothingEPv1088 = $_ZNSt3__112__do_nothingEPv1089;
      }
      HEAP32[$__gb_sroa_0_0_load10321069 >> 2] = $__ng_0;
      $add_ptr1061 = $add_ptr1062;
      $__gb_sroa_0_0_load10321067 = $__gb_sroa_0_0_load10321069 + 4 | 0;
      $arraydecay1071 = $arraydecay1072;
      $_ZNSt3__112__do_nothingEPv1087 = $_ZNSt3__112__do_nothingEPv1088;
     } else {
      $add_ptr1061 = $add_ptr1058;
      $__gb_sroa_0_0_load10321067 = $__gb_sroa_0_0_load10321064;
      $arraydecay1071 = $arraydecay1075;
      $_ZNSt3__112__do_nothingEPv1087 = $_ZNSt3__112__do_nothingEPv1089;
     }
     if (($__fd_0 | 0) > 0) {
      $329 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      do {
       if (($329 | 0) == 0) {
        $335 = 1;
       } else {
        $330 = HEAP32[$329 + 12 >> 2] | 0;
        if (($330 | 0) == (HEAP32[$329 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i576 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$329 >> 2] | 0) + 36 >> 2] & 255]($329) | 0;
        } else {
         $retval_0_i_i_i_i576 = HEAP32[$330 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i576 | 0) == -1) {
         HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
         $335 = 1;
         break;
        } else {
         $335 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($__e_sroa_0_13 | 0) == 0) {
       label = 363;
      } else {
       $336 = HEAP32[$__e_sroa_0_13 + 12 >> 2] | 0;
       if (($336 | 0) == (HEAP32[$__e_sroa_0_13 + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i594 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_13 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_13) | 0;
       } else {
        $retval_0_i_i12_i_i594 = HEAP32[$336 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i594 | 0) == -1) {
        label = 363;
       } else {
        if ($335) {
         $__e_sroa_0_15 = $__e_sroa_0_13;
        } else {
         label = 369;
         break L75;
        }
       }
      }
      if ((label | 0) == 363) {
       label = 0;
       if ($335) {
        label = 369;
        break L75;
       } else {
        $__e_sroa_0_15 = 0;
       }
      }
      $341 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $342 = HEAP32[$341 + 12 >> 2] | 0;
      if (($342 | 0) == (HEAP32[$341 + 16 >> 2] | 0)) {
       $retval_0_i_i541 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$341 >> 2] | 0) + 36 >> 2] & 255]($341) | 0;
      } else {
       $retval_0_i_i541 = HEAP32[$342 >> 2] | 0;
      }
      if (($retval_0_i_i541 | 0) != ($__dp_0 | 0)) {
       label = 369;
       break L75;
      }
      $348 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $__ninp__i_i500 = $348 + 12 | 0;
      $349 = HEAP32[$__ninp__i_i500 >> 2] | 0;
      if (($349 | 0) == (HEAP32[$348 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$348 >> 2] | 0) + 40 >> 2] & 255]($348) | 0;
       $__we10991147 = $__we1095;
       $354 = $__e_sroa_0_15;
       $353 = $__fd_0;
       $_pre_i15_i_i445 = $__e_sroa_0_15;
       $__e_sroa_0_16 = $__e_sroa_0_15;
      } else {
       HEAP32[$__ninp__i_i500 >> 2] = $349 + 4;
       $__we10991147 = $__we1095;
       $354 = $__e_sroa_0_15;
       $353 = $__fd_0;
       $_pre_i15_i_i445 = $__e_sroa_0_15;
       $__e_sroa_0_16 = $__e_sroa_0_15;
      }
      while (1) {
       $355 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
       do {
        if (($355 | 0) == 0) {
         $361 = 1;
        } else {
         $356 = HEAP32[$355 + 12 >> 2] | 0;
         if (($356 | 0) == (HEAP32[$355 + 16 >> 2] | 0)) {
          $retval_0_i_i_i_i424 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$355 >> 2] | 0) + 36 >> 2] & 255]($355) | 0;
         } else {
          $retval_0_i_i_i_i424 = HEAP32[$356 >> 2] | 0;
         }
         if (($retval_0_i_i_i_i424 | 0) == -1) {
          HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
          $361 = 1;
          break;
         } else {
          $361 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
          break;
         }
        }
       } while (0);
       if (($354 | 0) == 0) {
        $_pre_i15_i_i4451340_ph = $_pre_i15_i_i445;
        $__e_sroa_0_17 = $__e_sroa_0_16;
        label = 385;
       } else {
        $362 = HEAP32[$354 + 12 >> 2] | 0;
        if (($362 | 0) == (HEAP32[$354 + 16 >> 2] | 0)) {
         $retval_0_i_i12_i_i442 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$354 >> 2] | 0) + 36 >> 2] & 255]($354) | 0;
        } else {
         $retval_0_i_i12_i_i442 = HEAP32[$362 >> 2] | 0;
        }
        if (($retval_0_i_i12_i_i442 | 0) == -1) {
         $_pre_i15_i_i4451340_ph = 0;
         $__e_sroa_0_17 = 0;
         label = 385;
        } else {
         if ($361 ^ ($_pre_i15_i_i445 | 0) == 0) {
          $_pre_i15_i_i44513401347 = $_pre_i15_i_i445;
          $367 = $_pre_i15_i_i445;
          $__e_sroa_0_18 = $__e_sroa_0_16;
         } else {
          label = 392;
          break L75;
         }
        }
       }
       if ((label | 0) == 385) {
        label = 0;
        if ($361) {
         label = 392;
         break L75;
        } else {
         $_pre_i15_i_i44513401347 = $_pre_i15_i_i4451340_ph;
         $367 = 0;
         $__e_sroa_0_18 = $__e_sroa_0_17;
        }
       }
       $368 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
       $369 = HEAP32[$368 + 12 >> 2] | 0;
       if (($369 | 0) == (HEAP32[$368 + 16 >> 2] | 0)) {
        $retval_0_i_i389 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$368 >> 2] | 0) + 36 >> 2] & 255]($368) | 0;
       } else {
        $retval_0_i_i389 = HEAP32[$369 >> 2] | 0;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$86 >> 2] | 0) + 12 >> 2] & 127]($__ct, 2048, $retval_0_i_i389) | 0)) {
        label = 392;
        break L75;
       }
       $376 = HEAP32[$__wn >> 2] | 0;
       if (($376 | 0) == ($__we10991147 | 0)) {
        $cmp_i300 = (HEAP32[$__second__i_i_i_i781 >> 2] | 0) != 182;
        $378 = HEAP32[$__first__i_i_i120 >> 2] | 0;
        $sub_ptr_sub_i303 = $__we10991147 - $378 | 0;
        $mul4__i = $sub_ptr_sub_i303 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i303 << 1 : -1;
        $sub_ptr_div10_i = $sub_ptr_sub_i303 >> 2;
        if ($cmp_i300) {
         $cond15_i = $378;
        } else {
         $cond15_i = 0;
        }
        $call16_i = _realloc($cond15_i, $mul4__i) | 0;
        $379 = $call16_i;
        if (($call16_i | 0) == 0) {
         label = 397;
         break L75;
        }
        if ($cmp_i300) {
         HEAP32[$__first__i_i_i120 >> 2] = $379;
         $385 = $379;
        } else {
         $_pr_i = HEAP32[$__first__i_i_i120 >> 2] | 0;
         HEAP32[$__first__i_i_i120 >> 2] = $379;
         if (($_pr_i | 0) == 0) {
          $385 = $379;
         } else {
          FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i781 >> 2] & 511]($_pr_i);
          $385 = HEAP32[$__first__i_i_i120 >> 2] | 0;
         }
        }
        HEAP32[$__second__i_i_i_i781 >> 2] = 102;
        $add_ptr_i306 = $385 + ($sub_ptr_div10_i << 2) | 0;
        HEAP32[$__wn >> 2] = $add_ptr_i306;
        $__we1100 = (HEAP32[$__first__i_i_i120 >> 2] | 0) + ($mul4__i >>> 2 << 2) | 0;
        $387 = $add_ptr_i306;
       } else {
        $__we1100 = $__we10991147;
        $387 = $376;
       }
       $388 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
       $389 = HEAP32[$388 + 12 >> 2] | 0;
       if (($389 | 0) == (HEAP32[$388 + 16 >> 2] | 0)) {
        $call_i_i131 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$388 >> 2] | 0) + 36 >> 2] & 255]($388) | 0;
        $retval_0_i_i129 = $call_i_i131;
        $394 = HEAP32[$__wn >> 2] | 0;
       } else {
        $retval_0_i_i129 = HEAP32[$389 >> 2] | 0;
        $394 = $387;
       }
       HEAP32[$__wn >> 2] = $394 + 4;
       HEAP32[$394 >> 2] = $retval_0_i_i129;
       $dec = $353 - 1 | 0;
       $395 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
       $__ninp__i_i109 = $395 + 12 | 0;
       $396 = HEAP32[$__ninp__i_i109 >> 2] | 0;
       if (($396 | 0) == (HEAP32[$395 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$395 >> 2] | 0) + 40 >> 2] & 255]($395) | 0;
       } else {
        HEAP32[$__ninp__i_i109 >> 2] = $396 + 4;
       }
       if (($dec | 0) > 0) {
        $__we10991147 = $__we1100;
        $354 = $367;
        $353 = $dec;
        $_pre_i15_i_i445 = $_pre_i15_i_i44513401347;
        $__e_sroa_0_16 = $__e_sroa_0_18;
       } else {
        $__we1098 = $__we1100;
        $__fd_1 = $dec;
        $__e_sroa_0_19 = $__e_sroa_0_18;
        break;
       }
      }
     } else {
      $__we1098 = $__we1095;
      $__fd_1 = $__fd_0;
      $__e_sroa_0_19 = $__e_sroa_0_13;
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__first__i_i_i120 >> 2] | 0)) {
      label = 415;
      break L75;
     } else {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1060 = $add_ptr1061;
      $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load10321067;
      $arraydecay1076 = $arraydecay1071;
      $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv1087;
      $__we1097 = $__we1098;
      $__fd_2 = $__fd_1;
      $__e_sroa_0_20 = $__e_sroa_0_19;
     }
     break;
    }
   default:
    {
     $__trailing_sign_1 = $__trailing_sign_01263;
     $add_ptr1060 = $add_ptr10591258;
     $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
     $arraydecay1076 = $arraydecay10771248;
     $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
     $__we1097 = $__we10961240;
     $__fd_2 = $__fd_0;
     $__e_sroa_0_20 = $__e_sroa_0_2;
    }
   }
  } while (0);
  L436 : do {
   if ((label | 0) == 136) {
    label = 0;
    if (($__p_01261 | 0) == 3) {
     $_ZNSt3__112__do_nothingEPv1085_lcssa = $_ZNSt3__112__do_nothingEPv10851243;
     $arraydecay1077_lcssa = $arraydecay10771248;
     $__gb_sroa_0_0_load10321065_lcssa = $__gb_sroa_0_0_load103210651253;
     $__trailing_sign_0_lcssa = $__trailing_sign_01263;
     $__e_sroa_0_21 = $__e_sroa_0_2;
     label = 417;
     break L75;
    } else {
     $136 = $__e_sroa_0_2;
     $_pre_i15_i_i236 = $__e_sroa_0_2;
     $__e_sroa_0_3 = $__e_sroa_0_2;
    }
    while (1) {
     $137 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
     do {
      if (($137 | 0) == 0) {
       $143 = 1;
      } else {
       $138 = HEAP32[$137 + 12 >> 2] | 0;
       if (($138 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) {
        $retval_0_i_i_i_i215 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 255]($137) | 0;
       } else {
        $retval_0_i_i_i_i215 = HEAP32[$138 >> 2] | 0;
       }
       if (($retval_0_i_i_i_i215 | 0) == -1) {
        HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
        $143 = 1;
        break;
       } else {
        $143 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
        break;
       }
      }
     } while (0);
     if (($136 | 0) == 0) {
      $_pre_i15_i_i2361327 = $_pre_i15_i_i236;
      $__e_sroa_0_4 = $__e_sroa_0_3;
      label = 149;
     } else {
      $144 = HEAP32[$136 + 12 >> 2] | 0;
      if (($144 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) {
       $retval_0_i_i12_i_i233 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 255]($136) | 0;
      } else {
       $retval_0_i_i12_i_i233 = HEAP32[$144 >> 2] | 0;
      }
      if (($retval_0_i_i12_i_i233 | 0) == -1) {
       $_pre_i15_i_i2361327 = 0;
       $__e_sroa_0_4 = 0;
       label = 149;
      } else {
       if ($143 ^ ($_pre_i15_i_i236 | 0) == 0) {
        $149 = $_pre_i15_i_i236;
        $_pre_i15_i_i2361329 = $_pre_i15_i_i236;
        $__e_sroa_0_5 = $__e_sroa_0_3;
       } else {
        $__trailing_sign_1 = $__trailing_sign_01263;
        $add_ptr1060 = $add_ptr10591258;
        $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
        $arraydecay1076 = $arraydecay10771248;
        $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
        $__we1097 = $__we10961240;
        $__fd_2 = $__fd_0;
        $__e_sroa_0_20 = $__e_sroa_0_3;
        break L436;
       }
      }
     }
     if ((label | 0) == 149) {
      label = 0;
      if ($143) {
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1060 = $add_ptr10591258;
       $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
       $arraydecay1076 = $arraydecay10771248;
       $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
       $__we1097 = $__we10961240;
       $__fd_2 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_4;
       break L436;
      } else {
       $149 = 0;
       $_pre_i15_i_i2361329 = $_pre_i15_i_i2361327;
       $__e_sroa_0_5 = $__e_sroa_0_4;
      }
     }
     $150 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
     $151 = HEAP32[$150 + 12 >> 2] | 0;
     if (($151 | 0) == (HEAP32[$150 + 16 >> 2] | 0)) {
      $retval_0_i_i254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$150 >> 2] | 0) + 36 >> 2] & 255]($150) | 0;
     } else {
      $retval_0_i_i254 = HEAP32[$151 >> 2] | 0;
     }
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$86 >> 2] | 0) + 12 >> 2] & 127]($__ct, 8192, $retval_0_i_i254) | 0)) {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1060 = $add_ptr10591258;
      $__gb_sroa_0_0_load10321066 = $__gb_sroa_0_0_load103210651253;
      $arraydecay1076 = $arraydecay10771248;
      $_ZNSt3__112__do_nothingEPv1086 = $_ZNSt3__112__do_nothingEPv10851243;
      $__we1097 = $__we10961240;
      $__fd_2 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_5;
      break L436;
     }
     $157 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
     $__ninp__i_i263 = $157 + 12 | 0;
     $158 = HEAP32[$__ninp__i_i263 >> 2] | 0;
     if (($158 | 0) == (HEAP32[$157 + 16 >> 2] | 0)) {
      $retval_0_i_i272 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$157 >> 2] | 0) + 40 >> 2] & 255]($157) | 0;
     } else {
      HEAP32[$__ninp__i_i263 >> 2] = $158 + 4;
      $retval_0_i_i272 = HEAP32[$158 >> 2] | 0;
     }
     $163 = HEAP8[$this4_i_i_i105 >> 0] | 0;
     $tobool_i_i82 = ($163 & 1) != 0;
     if ($tobool_i_i82) {
      $__sz_0_i92 = HEAP32[$__data__i_i_i763 >> 2] | 0;
      $__cap_0_i91 = (HEAP32[$__cap__i_i >> 2] & -2) - 1 | 0;
     } else {
      $__sz_0_i92 = ($163 & 255) >>> 1;
      $__cap_0_i91 = 1;
     }
     if (($__sz_0_i92 | 0) == ($__cap_0_i91 | 0)) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__spaces, $__cap_0_i91, 1, $__cap_0_i91, $__cap_0_i91, 0, 0);
      if ((HEAP8[$this4_i_i_i105 >> 0] & 1) == 0) {
       label = 166;
      } else {
       label = 167;
      }
     } else {
      if ($tobool_i_i82) {
       label = 167;
      } else {
       label = 166;
      }
     }
     if ((label | 0) == 166) {
      label = 0;
      HEAP8[$this4_i_i_i105 >> 0] = ($__sz_0_i92 << 1) + 2;
      $call12_pn_i110 = $__data__i_i_i763;
      $__p_0_sum_pre_phi_i109 = $__sz_0_i92 + 1 | 0;
     } else if ((label | 0) == 167) {
      label = 0;
      $167 = HEAP32[$__data__i1_i_i817 >> 2] | 0;
      $add16_i106 = $__sz_0_i92 + 1 | 0;
      HEAP32[$__data__i_i_i763 >> 2] = $add16_i106;
      $call12_pn_i110 = $167;
      $__p_0_sum_pre_phi_i109 = $add16_i106;
     }
     HEAP32[$call12_pn_i110 + ($__sz_0_i92 << 2) >> 2] = $retval_0_i_i272;
     HEAP32[$call12_pn_i110 + ($__p_0_sum_pre_phi_i109 << 2) >> 2] = 0;
     $136 = $149;
     $_pre_i15_i_i236 = $_pre_i15_i_i2361329;
     $__e_sroa_0_3 = $__e_sroa_0_5;
    }
   }
  } while (0);
  $inc281 = $__p_01261 + 1 | 0;
  if ($inc281 >>> 0 < 4 >>> 0) {
   $__we10961240 = $__we1097;
   $_ZNSt3__112__do_nothingEPv10851243 = $_ZNSt3__112__do_nothingEPv1086;
   $arraydecay10771248 = $arraydecay1076;
   $__gb_sroa_0_0_load103210651253 = $__gb_sroa_0_0_load10321066;
   $add_ptr10591258 = $add_ptr1060;
   $__p_01261 = $inc281;
   $__trailing_sign_01263 = $__trailing_sign_1;
   $__fd_0 = $__fd_2;
   $__e_sroa_0_0 = $__e_sroa_0_20;
  } else {
   $_ZNSt3__112__do_nothingEPv1085_lcssa = $_ZNSt3__112__do_nothingEPv1086;
   $arraydecay1077_lcssa = $arraydecay1076;
   $__gb_sroa_0_0_load10321065_lcssa = $__gb_sroa_0_0_load10321066;
   $__trailing_sign_0_lcssa = $__trailing_sign_1;
   $__e_sroa_0_21 = $__e_sroa_0_20;
   label = 417;
   break;
  }
 }
 L483 : switch (label | 0) {
 case 135:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay10771248;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10851243;
   break;
  }
 case 236:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay10771248;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10851243;
   break;
  }
 case 292:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay10771248;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10851243;
   break;
  }
 case 316:
  {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
   return 0;
  }
 case 334:
  {
   $exception_i116 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i116 >> 2] = 11576;
   ___cxa_throw($exception_i116 | 0, 17832, 52);
   return 0;
  }
 case 346:
  {
   $exception_i119 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i119 >> 2] = 11576;
   ___cxa_throw($exception_i119 | 0, 17832, 52);
   return 0;
  }
 case 369:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay1071;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1087;
   break;
  }
 case 392:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay1071;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1087;
   break;
  }
 case 397:
  {
   $exception_i122 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i122 >> 2] = 11576;
   ___cxa_throw($exception_i122 | 0, 17832, 52);
   return 0;
  }
 case 415:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1083 = $arraydecay1071;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1087;
   break;
  }
 case 417:
  {
   L499 : do {
    if (($__trailing_sign_0_lcssa | 0) != 0) {
     $__size__i_i = $__trailing_sign_0_lcssa;
     $__data__i_i_i_i87 = $__trailing_sign_0_lcssa + 4 | 0;
     $__data__i1_i_i_i = $__trailing_sign_0_lcssa + 8 | 0;
     $__i_0 = 1;
     $__e_sroa_0_22 = $__e_sroa_0_21;
     while (1) {
      $403 = HEAP8[$__size__i_i >> 0] | 0;
      if (($403 & 1) == 0) {
       $cond_i = ($403 & 255) >>> 1;
      } else {
       $cond_i = HEAP32[$__data__i_i_i_i87 >> 2] | 0;
      }
      if (!($__i_0 >>> 0 < $cond_i >>> 0)) {
       break L499;
      }
      $405 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      do {
       if (($405 | 0) == 0) {
        $411 = 1;
       } else {
        $406 = HEAP32[$405 + 12 >> 2] | 0;
        if (($406 | 0) == (HEAP32[$405 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$405 >> 2] | 0) + 36 >> 2] & 255]($405) | 0;
        } else {
         $retval_0_i_i_i_i = HEAP32[$406 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i | 0) == -1) {
         HEAP32[$__sbuf__i_i_i133 >> 2] = 0;
         $411 = 1;
         break;
        } else {
         $411 = (HEAP32[$__sbuf__i_i_i133 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($__e_sroa_0_22 | 0) == 0) {
       label = 435;
      } else {
       $412 = HEAP32[$__e_sroa_0_22 + 12 >> 2] | 0;
       if (($412 | 0) == (HEAP32[$__e_sroa_0_22 + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_22 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_22) | 0;
       } else {
        $retval_0_i_i12_i_i = HEAP32[$412 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i | 0) == -1) {
        label = 435;
       } else {
        if ($411) {
         $__e_sroa_0_24 = $__e_sroa_0_22;
        } else {
         break;
        }
       }
      }
      if ((label | 0) == 435) {
       label = 0;
       if ($411) {
        break;
       } else {
        $__e_sroa_0_24 = 0;
       }
      }
      $417 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $418 = HEAP32[$417 + 12 >> 2] | 0;
      if (($418 | 0) == (HEAP32[$417 + 16 >> 2] | 0)) {
       $retval_0_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$417 >> 2] | 0) + 36 >> 2] & 255]($417) | 0;
      } else {
       $retval_0_i_i = HEAP32[$418 >> 2] | 0;
      }
      if ((HEAP8[$__size__i_i >> 0] & 1) == 0) {
       $cond_i_i_i = $__data__i_i_i_i87;
      } else {
       $cond_i_i_i = HEAP32[$__data__i1_i_i_i >> 2] | 0;
      }
      if (($retval_0_i_i | 0) != (HEAP32[$cond_i_i_i + ($__i_0 << 2) >> 2] | 0)) {
       break;
      }
      $inc302 = $__i_0 + 1 | 0;
      $427 = HEAP32[$__sbuf__i_i_i133 >> 2] | 0;
      $__ninp__i_i = $427 + 12 | 0;
      $428 = HEAP32[$__ninp__i_i >> 2] | 0;
      if (($428 | 0) == (HEAP32[$427 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$427 >> 2] | 0) + 40 >> 2] & 255]($427) | 0;
       $__i_0 = $inc302;
       $__e_sroa_0_22 = $__e_sroa_0_24;
       continue;
      } else {
       HEAP32[$__ninp__i_i >> 2] = $428 + 4;
       $__i_0 = $inc302;
       $__e_sroa_0_22 = $__e_sroa_0_24;
       continue;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $arraydecay1083 = $arraydecay1077_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
     break L483;
    }
   } while (0);
   if (($arraydecay1077_lcssa | 0) == ($__gb_sroa_0_0_load10321065_lcssa | 0)) {
    $retval_0 = 1;
    $arraydecay1083 = $__gb_sroa_0_0_load10321065_lcssa;
    $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
   } else {
    $432 = HEAP8[$this4_i_i_i >> 0] | 0;
    if (($432 & 1) == 0) {
     $cond_i_i = ($432 & 255) >>> 1;
    } else {
     $cond_i_i = HEAP32[$__size__i2_i775 >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $retval_0 = 1;
     $arraydecay1083 = $arraydecay1077_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
    } else {
     $incdec_ptr6_i_i_i = $__gb_sroa_0_0_load10321065_lcssa - 4 | 0;
     $cmp17_i_i_i = $incdec_ptr6_i_i_i >>> 0 > $arraydecay1077_lcssa >>> 0;
     if ($cmp17_i_i_i) {
      $__first_addr_08_i_i_i = $arraydecay1077_lcssa;
      $incdec_ptr9_i_i_i = $incdec_ptr6_i_i_i;
      do {
       $434 = HEAP32[$__first_addr_08_i_i_i >> 2] | 0;
       HEAP32[$__first_addr_08_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i >> 2];
       HEAP32[$incdec_ptr9_i_i_i >> 2] = $434;
       $__first_addr_08_i_i_i = $__first_addr_08_i_i_i + 4 | 0;
       $incdec_ptr9_i_i_i = $incdec_ptr9_i_i_i - 4 | 0;
      } while ($__first_addr_08_i_i_i >>> 0 < $incdec_ptr9_i_i_i >>> 0);
      $436 = HEAP8[$this4_i_i_i >> 0] | 0;
     } else {
      $436 = $432;
     }
     if (($436 & 1) == 0) {
      $cond_i25_i = ($436 & 255) >>> 1;
      $cond_i_i44_i = $__grp + 1 | 0;
     } else {
      $cond_i25_i = HEAP32[$__size__i2_i775 >> 2] | 0;
      $cond_i_i44_i = HEAP32[$__grp + 8 >> 2] | 0;
     }
     $439 = HEAP8[$cond_i_i44_i >> 0] | 0;
     $or_cond2736_i = $439 << 24 >> 24 < 1 | $439 << 24 >> 24 == 127;
     L556 : do {
      if ($cmp17_i_i_i) {
       $sub_ptr_lhs_cast_i = $cond_i_i44_i + $cond_i25_i | 0;
       $__ig_037_i = $cond_i_i44_i;
       $__r_038_i = $arraydecay1077_lcssa;
       $440 = $439;
       $or_cond2739_i = $or_cond2736_i;
       while (1) {
        if (!$or_cond2739_i) {
         if (($440 << 24 >> 24 | 0) != (HEAP32[$__r_038_i >> 2] | 0)) {
          break L556;
         }
        }
        $incdec_ptr___ig_0_i = ($sub_ptr_lhs_cast_i - $__ig_037_i | 0) > 1 ? $__ig_037_i + 1 | 0 : $__ig_037_i;
        $incdec_ptr18_i = $__r_038_i + 4 | 0;
        $442 = HEAP8[$incdec_ptr___ig_0_i >> 0] | 0;
        $or_cond27_i = $442 << 24 >> 24 < 1 | $442 << 24 >> 24 == 127;
        if ($incdec_ptr18_i >>> 0 < $incdec_ptr6_i_i_i >>> 0) {
         $__ig_037_i = $incdec_ptr___ig_0_i;
         $__r_038_i = $incdec_ptr18_i;
         $440 = $442;
         $or_cond2739_i = $or_cond27_i;
        } else {
         $_lcssa_i = $442;
         $or_cond27_lcssa_i = $or_cond27_i;
         label = 463;
         break;
        }
       }
      } else {
       $_lcssa_i = $439;
       $or_cond27_lcssa_i = $or_cond2736_i;
       label = 463;
      }
     } while (0);
     if ((label | 0) == 463) {
      if ($or_cond27_lcssa_i) {
       $retval_0 = 1;
       $arraydecay1083 = $arraydecay1077_lcssa;
       $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
       break;
      }
      if (((HEAP32[$incdec_ptr6_i_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i << 24 >> 24 >>> 0) {
       $retval_0 = 1;
       $arraydecay1083 = $arraydecay1077_lcssa;
       $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
       break;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $arraydecay1083 = $arraydecay1077_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1085_lcssa;
    }
   }
   break;
  }
 }
 if (!((HEAP8[$this4_i_i_i105 >> 0] & 1) == 0)) {
  $448 = HEAP32[$__data__i1_i_i817 >> 2] | 0;
  if (($448 | 0) != 0) {
   _free($448);
  }
 }
 if (!((HEAP8[$this4_i_i_i104 >> 0] & 1) == 0)) {
  $451 = HEAP32[$__data__i1_i_i408 >> 2] | 0;
  if (($451 | 0) != 0) {
   _free($451);
  }
 }
 if (!((HEAP8[$this4_i_i_i99 >> 0] & 1) == 0)) {
  $454 = HEAP32[$__data__i1_i_i >> 2] | 0;
  if (($454 | 0) != 0) {
   _free($454);
  }
 }
 if (!((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0)) {
  $457 = HEAP32[$__data__i1_i_i673 >> 2] | 0;
  if (($457 | 0) != 0) {
   _free($457);
  }
 }
 if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
  $460 = HEAP32[$__grp + 8 >> 2] | 0;
  if (($460 | 0) != 0) {
   _free($460);
  }
 }
 if (($arraydecay1083 | 0) == 0) {
  $$etemp$25$0 = 400;
  $$etemp$25$1 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vi[$_ZNSt3__112__do_nothingEPv & 511]($arraydecay1083);
 $$etemp$25$0 = 400;
 $$etemp$25$1 = 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e_0, $__intl, $__loc_0_0_val, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__intl = $__intl | 0;
 $__loc_0_0_val = $__loc_0_0_val | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $__p_i_i_i_i78_i = 0, $__p_i_i_i_i_i = 0, $ref_tmp_i = 0, $ref_tmp1_i = 0, $ref_tmp3_i = 0, $ref_tmp7_i = 0, $ref_tmp9_i = 0, $ref_tmp14_i = 0, $ref_tmp15_i = 0, $ref_tmp17_i = 0, $ref_tmp21_i = 0, $ref_tmp23_i = 0, $__gbuf = 0, $__pat = 0, $__grp = 0, $__sym = 0, $__psn = 0, $__nsn = 0, $__spaces = 0, $arraydecay = 0, $this4_i_i_i = 0, $this4_i_i_i84 = 0, $this4_i_i_i101 = 0, $this4_i_i_i107 = 0, $this4_i_i_i108 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $tmpcast23_i = 0, $sub_i_i_i_i = 0, $15 = 0, $16 = 0, $exception_i_i_i_i = 0, $18 = 0, $22 = 0, $33 = 0, $call_i_i13 = 0, $call_i46_i14 = 0, $tmpcast_i = 0, $sub_i_i_i85_i = 0, $52 = 0, $53 = 0, $exception_i_i_i97_i = 0, $55 = 0, $59 = 0, $70 = 0, $call_i131_i23 = 0, $call_i134_i24 = 0, $__dp_0 = 0, $__ts_0 = 0, $storemerge_i = 0, $__first__i_i_i123 = 0, $__sbuf__i_i_i137 = 0, $field = 0, $__tab__i = 0, $arrayidx_i_i_i470 = 0, $__size__i2_i502 = 0, $__data__i_i_i467 = 0, $arrayidx_i_i_i = 0, $__size__i2_i432 = 0, $__data__i_i_i = 0, $cmp1261111 = 0, $arrayidx_i_i_i661 = 0, $__data__i_i_i681 = 0, $__size__i2_i_i682 = 0, $__s_i_i_i804 = 0, $arrayidx_i_i_i805 = 0, $__data__i_i_i875 = 0, $__size__i2_i_i876 = 0, $arrayidx120 = 0, $__second__i_i_i_i745 = 0, $__size__i2_i738 = 0, $__e_sroa_0_0 = 0, $__fd_0 = 0, $__trailing_sign_01263 = 0, $__p_01261 = 0, $add_ptr10621258 = 0, $__gb_sroa_0_0_load103510681254 = 0, $arraydecay10801250 = 0, $_ZNSt3__112__do_nothingEPv10881246 = 0, $__we10991243 = 0, $86 = 0, $91 = 0, $cmp_i_i_i150 = 0, $__e_sroa_0_2 = 0, $110 = 0, $111 = 0, $retval_0_i_off0_i186 = 0, $118 = 0, $__ninp__i_i194 = 0, $119 = 0, $retval_0_i_off0_i204 = 0, $__e_sroa_0_3 = 0, $_pre_i12_i_i232 = 0, $125 = 0, $126 = 0, $131 = 0, $cmp_i_i_i220 = 0, $__e_sroa_0_4 = 0, $_pre_i12_i_i2321323 = 0, $__e_sroa_0_5 = 0, $_pre_i12_i_i2321325 = 0, $136 = 0, $137 = 0, $138 = 0, $retval_0_i_off0_i251 = 0, $145 = 0, $__ninp__i_i265 = 0, $146 = 0, $retval_0_i_off0_i275 = 0, $151 = 0, $tobool_i_i292 = 0, $cond_i298 = 0, $153 = 0, $tobool_i_i302 = 0, $cond_i308 = 0, $cond_i318 = 0, $cond_i328 = 0, $cond_i360 = 0, $158 = 0, $159 = 0, $cmp_i_i454 = 0, $extract_t_i404 = 0, $164 = 0, $retval_0_i_off0_i407 = 0, $167 = 0, $__ninp__i_i418 = 0, $168 = 0, $172 = 0, $cond_i437 = 0, $extract_t_i457 = 0, $177 = 0, $retval_0_i_off0_i460 = 0, $180 = 0, $__ninp__i_i488 = 0, $181 = 0, $185 = 0, $cond_i507 = 0, $187 = 0, $188 = 0, $189 = 0, $extract_t_i551 = 0, $_pre1452 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $retval_0_i_off0_i554 = 0, $__ninp__i_i569 = 0, $cmp_i_i571 = 0, $201 = 0, $cond_i588 = 0, $retval_0_i_off0_i619 = 0, $209 = 0, $__ninp__i_i634 = 0, $210 = 0, $214 = 0, $cond_i653 = 0, $218 = 0, $219 = 0, $tobool_i_i_i657 = 0, $arrayidx_i_i_i661_ = 0, $add_ptr_i687 = 0, $__sym_space_end_sroa_0_0_load1057 = 0, $223 = 0, $__sym_space_end_sroa_0_0_load1057_lcssa = 0, $sub_ptr_sub_i787 = 0, $226 = 0, $tobool_i_i790 = 0, $cond_i796 = 0, $228 = 0, $229 = 0, $shr1_i_i_i807 = 0, $add_ptr_i_i_i1337 = 0, $cond_i7_i883 = 0, $cond_i6_i884 = 0, $add_ptr_i885 = 0, $230 = 0, $231 = 0, $incdec_ptr_i2_i_i = 0, $__e_sroa_0_6 = 0, $_pre_i12_i_i986 = 0, $234 = 0, $235 = 0, $__sym_space_end_sroa_0_0_load1056 = 0, $cond_i7_i1009 = 0, $cond_i6_i1010 = 0, $238 = 0, $243 = 0, $cmp_i_i_i974 = 0, $__e_sroa_0_7 = 0, $_pre_i12_i_i9861330 = 0, $__e_sroa_0_8 = 0, $_pre_i12_i_i9861329 = 0, $248 = 0, $249 = 0, $250 = 0, $retval_0_i_off0_i946 = 0, $256 = 0, $__ninp__i_i923 = 0, $257 = 0, $__e_sroa_0_9 = 0, $261 = 0, $cond_i7_i914 = 0, $cond_i6_i915 = 0, $__e_sroa_0_10 = 0, $__we1098 = 0, $_ZNSt3__112__do_nothingEPv1092 = 0, $arraydecay1078 = 0, $__gb_sroa_0_0_load10351067 = 0, $add_ptr1061 = 0, $__ng_0 = 0, $265 = 0, $270 = 0, $cmp_i_i_i850 = 0, $__e_sroa_0_12 = 0, $275 = 0, $276 = 0, $retval_0_i_off0_i833 = 0, $283 = 0, $cmp_i746 = 0, $285 = 0, $sub_ptr_sub_i750 = 0, $mul4__i753 = 0, $call15_i757 = 0, $exception_i = 0, $_pr_i762 = 0, $290 = 0, $add_ptr_i769 = 0, $292 = 0, $__we1097 = 0, $293 = 0, $cond_i743 = 0, $sub_ptr_sub_i695 = 0, $mul4__i698 = 0, $cond15_i704 = 0, $call16_i705 = 0, $295 = 0, $exception_i70 = 0, $_ZNSt3__112__do_nothingEPv1094 = 0, $arraydecay1077 = 0, $__gb_sroa_0_0_load10351071 = 0, $add_ptr1060 = 0, $__we1096 = 0, $_ZNSt3__112__do_nothingEPv1093 = 0, $arraydecay1076 = 0, $__gb_sroa_0_0_load10351066 = 0, $add_ptr1059 = 0, $__ng_1 = 0, $297 = 0, $__ninp__i_i667 = 0, $298 = 0, $__e_sroa_0_13 = 0, $sub_ptr_sub_i595 = 0, $mul4__i598 = 0, $cond15_i = 0, $call16_i = 0, $302 = 0, $exception_i73 = 0, $_ZNSt3__112__do_nothingEPv1091 = 0, $arraydecay1075 = 0, $__gb_sroa_0_0_load10351072 = 0, $add_ptr1065 = 0, $_ZNSt3__112__do_nothingEPv1090 = 0, $arraydecay1074 = 0, $__gb_sroa_0_0_load10351070 = 0, $add_ptr1064 = 0, $304 = 0, $309 = 0, $cmp_i_i_i522 = 0, $__e_sroa_0_15 = 0, $314 = 0, $315 = 0, $retval_0_i_off0_i483 = 0, $321 = 0, $__ninp__i_i440 = 0, $322 = 0, $__e_sroa_0_16 = 0, $__fd_1 = 0, $_pre_i12_i_i387 = 0, $326 = 0, $__we11021158 = 0, $327 = 0, $332 = 0, $cmp_i_i_i375 = 0, $__e_sroa_0_17 = 0, $_pre_i12_i_i3871334_ph = 0, $__e_sroa_0_18 = 0, $337 = 0, $_pre_i12_i_i38713341343 = 0, $338 = 0, $339 = 0, $retval_0_i_off0_i348 = 0, $347 = 0, $cmp_i283 = 0, $349 = 0, $sub_ptr_sub_i286 = 0, $mul4__i = 0, $call15_i = 0, $exception_i76 = 0, $_pr_i = 0, $354 = 0, $add_ptr_i289 = 0, $356 = 0, $__we1103 = 0, $357 = 0, $358 = 0, $extract_t_i130 = 0, $363 = 0, $retval_0_i_off0_i133 = 0, $dec = 0, $364 = 0, $__ninp__i_i112 = 0, $365 = 0, $__e_sroa_0_19 = 0, $__fd_2 = 0, $__we1101 = 0, $__e_sroa_0_20 = 0, $__fd_3 = 0, $__we1100 = 0, $_ZNSt3__112__do_nothingEPv1089 = 0, $arraydecay1079 = 0, $__gb_sroa_0_0_load10351069 = 0, $add_ptr1063 = 0, $__trailing_sign_1 = 0, $inc295 = 0, $__e_sroa_0_21 = 0, $__trailing_sign_0_lcssa = 0, $__gb_sroa_0_0_load10351068_lcssa = 0, $arraydecay1080_lcssa = 0, $_ZNSt3__112__do_nothingEPv1088_lcssa = 0, $__size__i_i = 0, $arrayidx_i_i_i_i89 = 0, $__data__i_i_i_i87 = 0, $__size__i2_i = 0, $__e_sroa_0_22 = 0, $__i_0 = 0, $372 = 0, $cond_i = 0, $374 = 0, $379 = 0, $cmp_i_i_i103 = 0, $__e_sroa_0_24 = 0, $384 = 0, $385 = 0, $retval_0_i_off0_i = 0, $cond_i_i_i = 0, $inc318 = 0, $394 = 0, $__ninp__i_i = 0, $395 = 0, $399 = 0, $cond_i_i = 0, $incdec_ptr6_i_i_i = 0, $cmp17_i_i_i = 0, $incdec_ptr9_i_i_i = 0, $__first_addr_08_i_i_i = 0, $401 = 0, $403 = 0, $cond_i_i44_i = 0, $cond_i25_i = 0, $406 = 0, $or_cond2736_i = 0, $sub_ptr_lhs_cast_i = 0, $or_cond2739_i = 0, $407 = 0, $__r_038_i = 0, $__ig_037_i = 0, $incdec_ptr___ig_0_i = 0, $incdec_ptr18_i = 0, $409 = 0, $or_cond27_i = 0, $or_cond27_lcssa_i = 0, $_lcssa_i = 0, $_ZNSt3__112__do_nothingEPv = 0, $arraydecay1086 = 0, $retval_0 = 0, $415 = 0, $417 = 0, $419 = 0, $421 = 0, $423 = 0, $$etemp$25$0 = 0, $$etemp$25$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 664 | 0;
 $__p_i_i_i_i78_i = sp | 0;
 $__p_i_i_i_i_i = sp + 16 | 0;
 $ref_tmp_i = sp + 32 | 0;
 $ref_tmp1_i = sp + 40 | 0;
 $ref_tmp3_i = sp + 56 | 0;
 $ref_tmp7_i = sp + 72 | 0;
 $ref_tmp9_i = sp + 88 | 0;
 $ref_tmp14_i = sp + 104 | 0;
 $ref_tmp15_i = sp + 112 | 0;
 $ref_tmp17_i = sp + 128 | 0;
 $ref_tmp21_i = sp + 144 | 0;
 $ref_tmp23_i = sp + 160 | 0;
 $__gbuf = sp + 176 | 0;
 $__pat = sp + 576 | 0;
 $__grp = sp + 584 | 0;
 $__sym = sp + 600 | 0;
 $__psn = sp + 616 | 0;
 $__nsn = sp + 632 | 0;
 $__spaces = sp + 648 | 0;
 $arraydecay = $__gbuf | 0;
 HEAP32[$__pat >> 2] = 0;
 $this4_i_i_i = $__grp;
 _memset($this4_i_i_i | 0, 0, 12) | 0;
 $this4_i_i_i84 = $__sym;
 _memset($this4_i_i_i84 | 0, 0, 12) | 0;
 $this4_i_i_i101 = $__psn;
 _memset($this4_i_i_i101 | 0, 0, 12) | 0;
 $this4_i_i_i107 = $__nsn;
 _memset($this4_i_i_i107 | 0, 0, 12) | 0;
 $this4_i_i_i108 = $__spaces;
 _memset($this4_i_i_i108 | 0, 0, 12) | 0;
 $2 = $ref_tmp1_i;
 $3 = $ref_tmp3_i;
 $4 = $ref_tmp7_i;
 $5 = $ref_tmp9_i;
 $7 = $ref_tmp15_i;
 $8 = $ref_tmp17_i;
 $9 = $ref_tmp21_i;
 $10 = $ref_tmp23_i;
 do {
  if ($__intl) {
   $tmpcast23_i = $ref_tmp_i;
   if (!((HEAP32[6030] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i_i >> 2] = 24120;
    HEAP32[$__p_i_i_i_i_i + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i_i + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(24120, $__p_i_i_i_i_i);
   }
   $sub_i_i_i_i = (HEAP32[6031] | 0) - 1 | 0;
   $15 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
   if ((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $15 >> 2 >>> 0 > $sub_i_i_i_i >>> 0) {
    $16 = HEAP32[$15 + ($sub_i_i_i_i << 2) >> 2] | 0;
    if (($16 | 0) != 0) {
     $18 = $16;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 127]($tmpcast23_i, $18);
     HEAP32[$__pat >> 2] = HEAP32[$ref_tmp_i >> 2];
     $22 = $16;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp1_i, $18);
     if ((HEAP8[$this4_i_i_i107 >> 0] & 1) == 0) {
      HEAP8[$__nsn + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i107 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
      HEAP32[$__nsn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn);
     HEAP32[$this4_i_i_i107 >> 2] = HEAP32[$2 >> 2];
     HEAP32[$this4_i_i_i107 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$this4_i_i_i107 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     _memset($2 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp3_i, $18);
     if ((HEAP8[$this4_i_i_i101 >> 0] & 1) == 0) {
      HEAP8[$__psn + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i101 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
      HEAP32[$__psn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn);
     HEAP32[$this4_i_i_i101 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$this4_i_i_i101 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$this4_i_i_i101 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     _memset($3 | 0, 0, 12) | 0;
     $33 = $16;
     $call_i_i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 12 >> 2] & 255]($18) | 0;
     $call_i46_i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 255]($18) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp7_i, $18);
     if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
      HEAP8[$__grp + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
      HEAP32[$__grp + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
     HEAP32[$this4_i_i_i >> 2] = HEAP32[$4 >> 2];
     HEAP32[$this4_i_i_i + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$this4_i_i_i + 8 >> 2] = HEAP32[$4 + 8 >> 2];
     _memset($4 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp9_i, $18);
     if ((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0) {
      HEAP8[$__sym + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i84 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
      HEAP32[$__sym + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
     HEAP32[$this4_i_i_i84 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$this4_i_i_i84 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$this4_i_i_i84 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     _memset($5 | 0, 0, 12) | 0;
     $storemerge_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($18) | 0;
     $__ts_0 = $call_i46_i14;
     $__dp_0 = $call_i_i13;
     break;
    }
   }
   $exception_i_i_i_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i_i >> 2] = 11608;
   ___cxa_throw($exception_i_i_i_i | 0, 17848, 212);
   return 0;
  } else {
   $tmpcast_i = $ref_tmp14_i;
   if (!((HEAP32[6032] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i78_i >> 2] = 24128;
    HEAP32[$__p_i_i_i_i78_i + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i78_i + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(24128, $__p_i_i_i_i78_i);
   }
   $sub_i_i_i85_i = (HEAP32[6033] | 0) - 1 | 0;
   $52 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
   if ((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $52 >> 2 >>> 0 > $sub_i_i_i85_i >>> 0) {
    $53 = HEAP32[$52 + ($sub_i_i_i85_i << 2) >> 2] | 0;
    if (($53 | 0) != 0) {
     $55 = $53;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 44 >> 2] & 127]($tmpcast_i, $55);
     HEAP32[$__pat >> 2] = HEAP32[$ref_tmp14_i >> 2];
     $59 = $53;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp15_i, $55);
     if ((HEAP8[$this4_i_i_i107 >> 0] & 1) == 0) {
      HEAP8[$__nsn + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i107 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
      HEAP32[$__nsn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn);
     HEAP32[$this4_i_i_i107 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$this4_i_i_i107 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$this4_i_i_i107 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     _memset($7 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp17_i, $55);
     if ((HEAP8[$this4_i_i_i101 >> 0] & 1) == 0) {
      HEAP8[$__psn + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i101 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
      HEAP32[$__psn + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn);
     HEAP32[$this4_i_i_i101 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$this4_i_i_i101 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$this4_i_i_i101 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     _memset($8 | 0, 0, 12) | 0;
     $70 = $53;
     $call_i131_i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 12 >> 2] & 255]($55) | 0;
     $call_i134_i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 16 >> 2] & 255]($55) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp21_i, $55);
     if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
      HEAP8[$__grp + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
      HEAP32[$__grp + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
     HEAP32[$this4_i_i_i >> 2] = HEAP32[$9 >> 2];
     HEAP32[$this4_i_i_i + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$this4_i_i_i + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     _memset($9 | 0, 0, 12) | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$59 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp23_i, $55);
     if ((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0) {
      HEAP8[$__sym + 1 >> 0] = 0;
      HEAP8[$this4_i_i_i84 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
      HEAP32[$__sym + 4 >> 2] = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
     HEAP32[$this4_i_i_i84 >> 2] = HEAP32[$10 >> 2];
     HEAP32[$this4_i_i_i84 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$this4_i_i_i84 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     _memset($10 | 0, 0, 12) | 0;
     $storemerge_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
     $__ts_0 = $call_i134_i24;
     $__dp_0 = $call_i131_i23;
     break;
    }
   }
   $exception_i_i_i97_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i97_i >> 2] = 11608;
   ___cxa_throw($exception_i_i_i97_i | 0, 17848, 212);
   return 0;
  }
 } while (0);
 $__first__i_i_i123 = $__wb | 0;
 HEAP32[$__wn >> 2] = HEAP32[$__first__i_i_i123 >> 2];
 $__sbuf__i_i_i137 = $__b | 0;
 $field = $__pat;
 $__tab__i = $__ct + 8 | 0;
 $arrayidx_i_i_i470 = $__nsn + 1 | 0;
 $__size__i2_i502 = $__nsn + 4 | 0;
 $__data__i_i_i467 = $__nsn + 8 | 0;
 $arrayidx_i_i_i = $__psn + 1 | 0;
 $__size__i2_i432 = $__psn + 4 | 0;
 $__data__i_i_i = $__psn + 8 | 0;
 $cmp1261111 = ($__flags & 512 | 0) != 0;
 $arrayidx_i_i_i661 = $__sym + 1 | 0;
 $__data__i_i_i681 = $__sym + 8 | 0;
 $__size__i2_i_i682 = $__sym + 4 | 0;
 $__s_i_i_i804 = $__spaces;
 $arrayidx_i_i_i805 = $__s_i_i_i804 + 1 | 0;
 $__data__i_i_i875 = $__spaces + 8 | 0;
 $__size__i2_i_i876 = $__spaces + 4 | 0;
 $arrayidx120 = $field + 3 | 0;
 $__second__i_i_i_i745 = $__wb + 4 | 0;
 $__size__i2_i738 = $__grp + 4 | 0;
 $__we10991243 = $__we;
 $_ZNSt3__112__do_nothingEPv10881246 = 182;
 $arraydecay10801250 = $arraydecay;
 $__gb_sroa_0_0_load103510681254 = $arraydecay;
 $add_ptr10621258 = $__gbuf + 400 | 0;
 $__p_01261 = 0;
 $__trailing_sign_01263 = 0;
 $__fd_0 = $storemerge_i;
 $__e_sroa_0_0 = $__e_0;
 L75 : while (1) {
  $86 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
  do {
   if (($86 | 0) == 0) {
    $91 = 0;
   } else {
    if ((HEAP32[$86 + 12 >> 2] | 0) == (HEAP32[$86 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] & 255]($86) | 0) == -1) {
      HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
      $91 = 0;
      break;
     } else {
      $91 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      break;
     }
    } else {
     $91 = $86;
    }
   }
  } while (0);
  $cmp_i_i_i150 = ($91 | 0) == 0;
  do {
   if (($__e_sroa_0_0 | 0) == 0) {
    label = 82;
   } else {
    if ((HEAP32[$__e_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$__e_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i150) {
      $__e_sroa_0_2 = $__e_sroa_0_0;
      break;
     } else {
      $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv10881246;
      $arraydecay1080_lcssa = $arraydecay10801250;
      $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load103510681254;
      $__trailing_sign_0_lcssa = $__trailing_sign_01263;
      $__e_sroa_0_21 = $__e_sroa_0_0;
      label = 393;
      break L75;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_0) | 0) == -1) {
     label = 82;
    } else {
     if ($cmp_i_i_i150) {
      $__e_sroa_0_2 = $__e_sroa_0_0;
     } else {
      $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv10881246;
      $arraydecay1080_lcssa = $arraydecay10801250;
      $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load103510681254;
      $__trailing_sign_0_lcssa = $__trailing_sign_01263;
      $__e_sroa_0_21 = $__e_sroa_0_0;
      label = 393;
      break L75;
     }
    }
   }
  } while (0);
  if ((label | 0) == 82) {
   label = 0;
   if ($cmp_i_i_i150) {
    $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv10881246;
    $arraydecay1080_lcssa = $arraydecay10801250;
    $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load103510681254;
    $__trailing_sign_0_lcssa = $__trailing_sign_01263;
    $__e_sroa_0_21 = 0;
    label = 393;
    break;
   } else {
    $__e_sroa_0_2 = 0;
   }
  }
  L95 : do {
   switch (HEAP8[$field + $__p_01261 >> 0] | 0) {
   case 2:
    {
     if (!(($__trailing_sign_01263 | 0) != 0 | $__p_01261 >>> 0 < 2 >>> 0)) {
      if (($__p_01261 | 0) == 2) {
       $218 = (HEAP8[$arrayidx120 >> 0] | 0) != 0;
      } else {
       $218 = 0;
      }
      if (!($cmp1261111 | $218)) {
       $__trailing_sign_1 = 0;
       $add_ptr1063 = $add_ptr10621258;
       $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
       $arraydecay1079 = $arraydecay10801250;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
       $__we1100 = $__we10991243;
       $__fd_3 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L95;
      }
     }
     $219 = HEAP8[$this4_i_i_i84 >> 0] | 0;
     $tobool_i_i_i657 = ($219 & 1) == 0;
     $arrayidx_i_i_i661_ = $tobool_i_i_i657 ? $arrayidx_i_i_i661 : HEAP32[$__data__i_i_i681 >> 2] | 0;
     L103 : do {
      if (($__p_01261 | 0) == 0) {
       $__sym_space_end_sroa_0_0_load1056 = $arrayidx_i_i_i661_;
       $235 = $219;
       $234 = $__e_sroa_0_2;
       $_pre_i12_i_i986 = $__e_sroa_0_2;
       $__e_sroa_0_6 = $__e_sroa_0_2;
      } else {
       if ((HEAPU8[$field + ($__p_01261 - 1) >> 0] | 0) >>> 0 < 2 >>> 0) {
        $add_ptr_i687 = $arrayidx_i_i_i661_ + ($tobool_i_i_i657 ? ($219 & 255) >>> 1 : HEAP32[$__size__i2_i_i682 >> 2] | 0) | 0;
        $__sym_space_end_sroa_0_0_load1057 = $arrayidx_i_i_i661_;
        while (1) {
         if (($__sym_space_end_sroa_0_0_load1057 | 0) == ($add_ptr_i687 | 0)) {
          $__sym_space_end_sroa_0_0_load1057_lcssa = $add_ptr_i687;
          break;
         }
         $223 = HEAP8[$__sym_space_end_sroa_0_0_load1057 >> 0] | 0;
         if (!($223 << 24 >> 24 > -1)) {
          $__sym_space_end_sroa_0_0_load1057_lcssa = $__sym_space_end_sroa_0_0_load1057;
          break;
         }
         if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($223 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
          $__sym_space_end_sroa_0_0_load1057_lcssa = $__sym_space_end_sroa_0_0_load1057;
          break;
         } else {
          $__sym_space_end_sroa_0_0_load1057 = $__sym_space_end_sroa_0_0_load1057 + 1 | 0;
         }
        }
        $sub_ptr_sub_i787 = $__sym_space_end_sroa_0_0_load1057_lcssa - $arrayidx_i_i_i661_ | 0;
        $226 = HEAP8[$this4_i_i_i108 >> 0] | 0;
        $tobool_i_i790 = ($226 & 1) == 0;
        if ($tobool_i_i790) {
         $cond_i796 = ($226 & 255) >>> 1;
        } else {
         $cond_i796 = HEAP32[$__size__i2_i_i876 >> 2] | 0;
        }
        if ($sub_ptr_sub_i787 >>> 0 > $cond_i796 >>> 0) {
         $__sym_space_end_sroa_0_0_load1056 = $arrayidx_i_i_i661_;
         $235 = $219;
         $234 = $__e_sroa_0_2;
         $_pre_i12_i_i986 = $__e_sroa_0_2;
         $__e_sroa_0_6 = $__e_sroa_0_2;
        } else {
         if ($tobool_i_i790) {
          $shr1_i_i_i807 = ($226 & 255) >>> 1;
          $cond_i6_i884 = $shr1_i_i_i807;
          $cond_i7_i883 = $arrayidx_i_i_i805;
          $add_ptr_i_i_i1337 = $shr1_i_i_i807 - $sub_ptr_sub_i787 + ($__s_i_i_i804 + 1) | 0;
         } else {
          $228 = HEAP32[$__data__i_i_i875 >> 2] | 0;
          $229 = HEAP32[$__size__i2_i_i876 >> 2] | 0;
          $cond_i6_i884 = $229;
          $cond_i7_i883 = $228;
          $add_ptr_i_i_i1337 = $228 + ($229 - $sub_ptr_sub_i787) | 0;
         }
         $add_ptr_i885 = $cond_i7_i883 + $cond_i6_i884 | 0;
         if (($add_ptr_i_i_i1337 | 0) == ($add_ptr_i885 | 0)) {
          $__sym_space_end_sroa_0_0_load1056 = $__sym_space_end_sroa_0_0_load1057_lcssa;
          $235 = $219;
          $234 = $__e_sroa_0_2;
          $_pre_i12_i_i986 = $__e_sroa_0_2;
          $__e_sroa_0_6 = $__e_sroa_0_2;
         } else {
          $231 = $add_ptr_i_i_i1337;
          $230 = $arrayidx_i_i_i661_;
          while (1) {
           if ((HEAP8[$231 >> 0] | 0) != (HEAP8[$230 >> 0] | 0)) {
            $__sym_space_end_sroa_0_0_load1056 = $arrayidx_i_i_i661_;
            $235 = $219;
            $234 = $__e_sroa_0_2;
            $_pre_i12_i_i986 = $__e_sroa_0_2;
            $__e_sroa_0_6 = $__e_sroa_0_2;
            break L103;
           }
           $incdec_ptr_i2_i_i = $231 + 1 | 0;
           if (($incdec_ptr_i2_i_i | 0) == ($add_ptr_i885 | 0)) {
            $__sym_space_end_sroa_0_0_load1056 = $__sym_space_end_sroa_0_0_load1057_lcssa;
            $235 = $219;
            $234 = $__e_sroa_0_2;
            $_pre_i12_i_i986 = $__e_sroa_0_2;
            $__e_sroa_0_6 = $__e_sroa_0_2;
            break;
           } else {
            $231 = $incdec_ptr_i2_i_i;
            $230 = $230 + 1 | 0;
           }
          }
         }
        }
       } else {
        $__sym_space_end_sroa_0_0_load1056 = $arrayidx_i_i_i661_;
        $235 = $219;
        $234 = $__e_sroa_0_2;
        $_pre_i12_i_i986 = $__e_sroa_0_2;
        $__e_sroa_0_6 = $__e_sroa_0_2;
       }
      }
     } while (0);
     L123 : while (1) {
      if (($235 & 1) == 0) {
       $cond_i6_i1010 = ($235 & 255) >>> 1;
       $cond_i7_i1009 = $arrayidx_i_i_i661;
      } else {
       $cond_i6_i1010 = HEAP32[$__size__i2_i_i682 >> 2] | 0;
       $cond_i7_i1009 = HEAP32[$__data__i_i_i681 >> 2] | 0;
      }
      if (($__sym_space_end_sroa_0_0_load1056 | 0) == ($cond_i7_i1009 + $cond_i6_i1010 | 0)) {
       $__e_sroa_0_9 = $__e_sroa_0_6;
       break;
      }
      $238 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      do {
       if (($238 | 0) == 0) {
        $243 = 0;
       } else {
        if ((HEAP32[$238 + 12 >> 2] | 0) == (HEAP32[$238 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$238 >> 2] | 0) + 36 >> 2] & 255]($238) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
          $243 = 0;
          break;
         } else {
          $243 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
          break;
         }
        } else {
         $243 = $238;
        }
       }
      } while (0);
      $cmp_i_i_i974 = ($243 | 0) == 0;
      do {
       if (($234 | 0) == 0) {
        $_pre_i12_i_i9861330 = $_pre_i12_i_i986;
        $__e_sroa_0_7 = $__e_sroa_0_6;
        label = 256;
       } else {
        if ((HEAP32[$234 + 12 >> 2] | 0) != (HEAP32[$234 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i974) {
          $248 = $234;
          $_pre_i12_i_i9861329 = $_pre_i12_i_i986;
          $__e_sroa_0_8 = $__e_sroa_0_6;
          break;
         } else {
          $__e_sroa_0_9 = $__e_sroa_0_6;
          break L123;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$234 >> 2] | 0) + 36 >> 2] & 255]($234) | 0) == -1) {
         $_pre_i12_i_i9861330 = 0;
         $__e_sroa_0_7 = 0;
         label = 256;
        } else {
         if ($cmp_i_i_i974 ^ ($_pre_i12_i_i986 | 0) == 0) {
          $248 = $_pre_i12_i_i986;
          $_pre_i12_i_i9861329 = $_pre_i12_i_i986;
          $__e_sroa_0_8 = $__e_sroa_0_6;
         } else {
          $__e_sroa_0_9 = $__e_sroa_0_6;
          break L123;
         }
        }
       }
      } while (0);
      if ((label | 0) == 256) {
       label = 0;
       if ($cmp_i_i_i974) {
        $__e_sroa_0_9 = $__e_sroa_0_7;
        break;
       } else {
        $248 = 0;
        $_pre_i12_i_i9861329 = $_pre_i12_i_i9861330;
        $__e_sroa_0_8 = $__e_sroa_0_7;
       }
      }
      $249 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $250 = HEAP32[$249 + 12 >> 2] | 0;
      if (($250 | 0) == (HEAP32[$249 + 16 >> 2] | 0)) {
       $retval_0_i_off0_i946 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$249 >> 2] | 0) + 36 >> 2] & 255]($249) | 0) & 255;
      } else {
       $retval_0_i_off0_i946 = HEAP8[$250 >> 0] | 0;
      }
      if (!($retval_0_i_off0_i946 << 24 >> 24 == (HEAP8[$__sym_space_end_sroa_0_0_load1056 >> 0] | 0))) {
       $__e_sroa_0_9 = $__e_sroa_0_8;
       break;
      }
      $256 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $__ninp__i_i923 = $256 + 12 | 0;
      $257 = HEAP32[$__ninp__i_i923 >> 2] | 0;
      if (($257 | 0) == (HEAP32[$256 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$256 >> 2] | 0) + 40 >> 2] & 255]($256) | 0;
      } else {
       HEAP32[$__ninp__i_i923 >> 2] = $257 + 1;
      }
      $__sym_space_end_sroa_0_0_load1056 = $__sym_space_end_sroa_0_0_load1056 + 1 | 0;
      $235 = HEAP8[$this4_i_i_i84 >> 0] | 0;
      $234 = $248;
      $_pre_i12_i_i986 = $_pre_i12_i_i9861329;
      $__e_sroa_0_6 = $__e_sroa_0_8;
     }
     if ($cmp1261111) {
      $261 = HEAP8[$this4_i_i_i84 >> 0] | 0;
      if (($261 & 1) == 0) {
       $cond_i6_i915 = ($261 & 255) >>> 1;
       $cond_i7_i914 = $arrayidx_i_i_i661;
      } else {
       $cond_i6_i915 = HEAP32[$__size__i2_i_i682 >> 2] | 0;
       $cond_i7_i914 = HEAP32[$__data__i_i_i681 >> 2] | 0;
      }
      if (($__sym_space_end_sroa_0_0_load1056 | 0) == ($cond_i7_i914 + $cond_i6_i915 | 0)) {
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1063 = $add_ptr10621258;
       $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
       $arraydecay1079 = $arraydecay10801250;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
       $__we1100 = $__we10991243;
       $__fd_3 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_9;
      } else {
       label = 272;
       break L75;
      }
     } else {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr10621258;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
      $arraydecay1079 = $arraydecay10801250;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
      $__we1100 = $__we10991243;
      $__fd_3 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_9;
     }
     break;
    }
   case 1:
    {
     if (($__p_01261 | 0) == 3) {
      $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv10881246;
      $arraydecay1080_lcssa = $arraydecay10801250;
      $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load103510681254;
      $__trailing_sign_0_lcssa = $__trailing_sign_01263;
      $__e_sroa_0_21 = $__e_sroa_0_2;
      label = 393;
      break L75;
     }
     $110 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
     $111 = HEAP32[$110 + 12 >> 2] | 0;
     if (($111 | 0) == (HEAP32[$110 + 16 >> 2] | 0)) {
      $retval_0_i_off0_i186 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$110 >> 2] | 0) + 36 >> 2] & 255]($110) | 0) & 255;
     } else {
      $retval_0_i_off0_i186 = HEAP8[$111 >> 0] | 0;
     }
     if (!($retval_0_i_off0_i186 << 24 >> 24 > -1)) {
      label = 126;
      break L75;
     }
     if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i186 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
      label = 126;
      break L75;
     }
     $118 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
     $__ninp__i_i194 = $118 + 12 | 0;
     $119 = HEAP32[$__ninp__i_i194 >> 2] | 0;
     if (($119 | 0) == (HEAP32[$118 + 16 >> 2] | 0)) {
      $retval_0_i_off0_i204 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$118 >> 2] | 0) + 40 >> 2] & 255]($118) | 0) & 255;
     } else {
      HEAP32[$__ninp__i_i194 >> 2] = $119 + 1;
      $retval_0_i_off0_i204 = HEAP8[$119 >> 0] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces, $retval_0_i_off0_i204);
     label = 127;
     break;
    }
   case 0:
    {
     label = 127;
     break;
    }
   case 3:
    {
     $151 = HEAP8[$this4_i_i_i101 >> 0] | 0;
     $tobool_i_i292 = ($151 & 1) == 0;
     if ($tobool_i_i292) {
      $cond_i298 = ($151 & 255) >>> 1;
     } else {
      $cond_i298 = HEAP32[$__size__i2_i432 >> 2] | 0;
     }
     $153 = HEAP8[$this4_i_i_i107 >> 0] | 0;
     $tobool_i_i302 = ($153 & 1) == 0;
     if ($tobool_i_i302) {
      $cond_i308 = ($153 & 255) >>> 1;
     } else {
      $cond_i308 = HEAP32[$__size__i2_i502 >> 2] | 0;
     }
     if (($cond_i298 | 0) == (-$cond_i308 | 0)) {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr10621258;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
      $arraydecay1079 = $arraydecay10801250;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
      $__we1100 = $__we10991243;
      $__fd_3 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_2;
     } else {
      if ($tobool_i_i292) {
       $cond_i318 = ($151 & 255) >>> 1;
      } else {
       $cond_i318 = HEAP32[$__size__i2_i432 >> 2] | 0;
      }
      if (($cond_i318 | 0) != 0) {
       if ($tobool_i_i302) {
        $cond_i328 = ($153 & 255) >>> 1;
       } else {
        $cond_i328 = HEAP32[$__size__i2_i502 >> 2] | 0;
       }
       if (($cond_i328 | 0) != 0) {
        $187 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
        $188 = HEAP32[$187 + 12 >> 2] | 0;
        $189 = HEAP32[$187 + 16 >> 2] | 0;
        if (($188 | 0) == ($189 | 0)) {
         $extract_t_i551 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$187 >> 2] | 0) + 36 >> 2] & 255]($187) | 0) & 255;
         $_pre1452 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
         $retval_0_i_off0_i554 = $extract_t_i551;
         $196 = HEAP8[$this4_i_i_i101 >> 0] | 0;
         $195 = $_pre1452;
         $194 = HEAP32[$_pre1452 + 12 >> 2] | 0;
         $193 = HEAP32[$_pre1452 + 16 >> 2] | 0;
        } else {
         $retval_0_i_off0_i554 = HEAP8[$188 >> 0] | 0;
         $196 = $151;
         $195 = $187;
         $194 = $188;
         $193 = $189;
        }
        $__ninp__i_i569 = $195 + 12 | 0;
        $cmp_i_i571 = ($194 | 0) == ($193 | 0);
        if ($retval_0_i_off0_i554 << 24 >> 24 == (HEAP8[(($196 & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i >> 2] | 0) >> 0] | 0)) {
         if ($cmp_i_i571) {
          FUNCTION_TABLE_ii[HEAP32[(HEAP32[$195 >> 2] | 0) + 40 >> 2] & 255]($195) | 0;
         } else {
          HEAP32[$__ninp__i_i569 >> 2] = $194 + 1;
         }
         $201 = HEAP8[$this4_i_i_i101 >> 0] | 0;
         if (($201 & 1) == 0) {
          $cond_i588 = ($201 & 255) >>> 1;
         } else {
          $cond_i588 = HEAP32[$__size__i2_i432 >> 2] | 0;
         }
         $__trailing_sign_1 = $cond_i588 >>> 0 > 1 >>> 0 ? $__psn : $__trailing_sign_01263;
         $add_ptr1063 = $add_ptr10621258;
         $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
         $arraydecay1079 = $arraydecay10801250;
         $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
         $__we1100 = $__we10991243;
         $__fd_3 = $__fd_0;
         $__e_sroa_0_20 = $__e_sroa_0_2;
         break L95;
        }
        if ($cmp_i_i571) {
         $retval_0_i_off0_i619 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$195 >> 2] | 0) + 36 >> 2] & 255]($195) | 0) & 255;
        } else {
         $retval_0_i_off0_i619 = HEAP8[$194 >> 0] | 0;
        }
        if (!($retval_0_i_off0_i619 << 24 >> 24 == (HEAP8[((HEAP8[$this4_i_i_i107 >> 0] & 1) == 0 ? $arrayidx_i_i_i470 : HEAP32[$__data__i_i_i467 >> 2] | 0) >> 0] | 0))) {
         label = 220;
         break L75;
        }
        $209 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
        $__ninp__i_i634 = $209 + 12 | 0;
        $210 = HEAP32[$__ninp__i_i634 >> 2] | 0;
        if (($210 | 0) == (HEAP32[$209 + 16 >> 2] | 0)) {
         FUNCTION_TABLE_ii[HEAP32[(HEAP32[$209 >> 2] | 0) + 40 >> 2] & 255]($209) | 0;
        } else {
         HEAP32[$__ninp__i_i634 >> 2] = $210 + 1;
        }
        HEAP8[$__neg >> 0] = 1;
        $214 = HEAP8[$this4_i_i_i107 >> 0] | 0;
        if (($214 & 1) == 0) {
         $cond_i653 = ($214 & 255) >>> 1;
        } else {
         $cond_i653 = HEAP32[$__size__i2_i502 >> 2] | 0;
        }
        $__trailing_sign_1 = $cond_i653 >>> 0 > 1 >>> 0 ? $__nsn : $__trailing_sign_01263;
        $add_ptr1063 = $add_ptr10621258;
        $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
        $arraydecay1079 = $arraydecay10801250;
        $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
        $__we1100 = $__we10991243;
        $__fd_3 = $__fd_0;
        $__e_sroa_0_20 = $__e_sroa_0_2;
        break L95;
       }
      }
      if ($tobool_i_i292) {
       $cond_i360 = ($151 & 255) >>> 1;
      } else {
       $cond_i360 = HEAP32[$__size__i2_i432 >> 2] | 0;
      }
      $158 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $159 = HEAP32[$158 + 12 >> 2] | 0;
      $cmp_i_i454 = ($159 | 0) == (HEAP32[$158 + 16 >> 2] | 0);
      if (($cond_i360 | 0) == 0) {
       if ($cmp_i_i454) {
        $extract_t_i457 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$158 >> 2] | 0) + 36 >> 2] & 255]($158) | 0) & 255;
        $retval_0_i_off0_i460 = $extract_t_i457;
        $177 = HEAP8[$this4_i_i_i107 >> 0] | 0;
       } else {
        $retval_0_i_off0_i460 = HEAP8[$159 >> 0] | 0;
        $177 = $153;
       }
       if (!($retval_0_i_off0_i460 << 24 >> 24 == (HEAP8[(($177 & 1) == 0 ? $arrayidx_i_i_i470 : HEAP32[$__data__i_i_i467 >> 2] | 0) >> 0] | 0))) {
        $__trailing_sign_1 = $__trailing_sign_01263;
        $add_ptr1063 = $add_ptr10621258;
        $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
        $arraydecay1079 = $arraydecay10801250;
        $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
        $__we1100 = $__we10991243;
        $__fd_3 = $__fd_0;
        $__e_sroa_0_20 = $__e_sroa_0_2;
        break L95;
       }
       $180 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
       $__ninp__i_i488 = $180 + 12 | 0;
       $181 = HEAP32[$__ninp__i_i488 >> 2] | 0;
       if (($181 | 0) == (HEAP32[$180 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$180 >> 2] | 0) + 40 >> 2] & 255]($180) | 0;
       } else {
        HEAP32[$__ninp__i_i488 >> 2] = $181 + 1;
       }
       HEAP8[$__neg >> 0] = 1;
       $185 = HEAP8[$this4_i_i_i107 >> 0] | 0;
       if (($185 & 1) == 0) {
        $cond_i507 = ($185 & 255) >>> 1;
       } else {
        $cond_i507 = HEAP32[$__size__i2_i502 >> 2] | 0;
       }
       $__trailing_sign_1 = $cond_i507 >>> 0 > 1 >>> 0 ? $__nsn : $__trailing_sign_01263;
       $add_ptr1063 = $add_ptr10621258;
       $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
       $arraydecay1079 = $arraydecay10801250;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
       $__we1100 = $__we10991243;
       $__fd_3 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L95;
      }
      if ($cmp_i_i454) {
       $extract_t_i404 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$158 >> 2] | 0) + 36 >> 2] & 255]($158) | 0) & 255;
       $retval_0_i_off0_i407 = $extract_t_i404;
       $164 = HEAP8[$this4_i_i_i101 >> 0] | 0;
      } else {
       $retval_0_i_off0_i407 = HEAP8[$159 >> 0] | 0;
       $164 = $151;
      }
      if (!($retval_0_i_off0_i407 << 24 >> 24 == (HEAP8[(($164 & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i >> 2] | 0) >> 0] | 0))) {
       HEAP8[$__neg >> 0] = 1;
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1063 = $add_ptr10621258;
       $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
       $arraydecay1079 = $arraydecay10801250;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
       $__we1100 = $__we10991243;
       $__fd_3 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_2;
       break L95;
      }
      $167 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $__ninp__i_i418 = $167 + 12 | 0;
      $168 = HEAP32[$__ninp__i_i418 >> 2] | 0;
      if (($168 | 0) == (HEAP32[$167 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$167 >> 2] | 0) + 40 >> 2] & 255]($167) | 0;
      } else {
       HEAP32[$__ninp__i_i418 >> 2] = $168 + 1;
      }
      $172 = HEAP8[$this4_i_i_i101 >> 0] | 0;
      if (($172 & 1) == 0) {
       $cond_i437 = ($172 & 255) >>> 1;
      } else {
       $cond_i437 = HEAP32[$__size__i2_i432 >> 2] | 0;
      }
      $__trailing_sign_1 = $cond_i437 >>> 0 > 1 >>> 0 ? $__psn : $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr10621258;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
      $arraydecay1079 = $arraydecay10801250;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
      $__we1100 = $__we10991243;
      $__fd_3 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_2;
     }
     break;
    }
   case 4:
    {
     $__ng_0 = 0;
     $add_ptr1061 = $add_ptr10621258;
     $__gb_sroa_0_0_load10351067 = $__gb_sroa_0_0_load103510681254;
     $arraydecay1078 = $arraydecay10801250;
     $_ZNSt3__112__do_nothingEPv1092 = $_ZNSt3__112__do_nothingEPv10881246;
     $__we1098 = $__we10991243;
     $__e_sroa_0_10 = $__e_sroa_0_2;
     L267 : while (1) {
      $265 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      do {
       if (($265 | 0) == 0) {
        $270 = 0;
       } else {
        if ((HEAP32[$265 + 12 >> 2] | 0) == (HEAP32[$265 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$265 >> 2] | 0) + 36 >> 2] & 255]($265) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
          $270 = 0;
          break;
         } else {
          $270 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
          break;
         }
        } else {
         $270 = $265;
        }
       }
      } while (0);
      $cmp_i_i_i850 = ($270 | 0) == 0;
      do {
       if (($__e_sroa_0_10 | 0) == 0) {
        label = 284;
       } else {
        if ((HEAP32[$__e_sroa_0_10 + 12 >> 2] | 0) != (HEAP32[$__e_sroa_0_10 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i850) {
          $__e_sroa_0_12 = $__e_sroa_0_10;
          break;
         } else {
          $__e_sroa_0_13 = $__e_sroa_0_10;
          break L267;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_10 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_10) | 0) == -1) {
         label = 284;
        } else {
         if ($cmp_i_i_i850) {
          $__e_sroa_0_12 = $__e_sroa_0_10;
         } else {
          $__e_sroa_0_13 = $__e_sroa_0_10;
          break L267;
         }
        }
       }
      } while (0);
      if ((label | 0) == 284) {
       label = 0;
       if ($cmp_i_i_i850) {
        $__e_sroa_0_13 = 0;
        break;
       } else {
        $__e_sroa_0_12 = 0;
       }
      }
      $275 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $276 = HEAP32[$275 + 12 >> 2] | 0;
      if (($276 | 0) == (HEAP32[$275 + 16 >> 2] | 0)) {
       $retval_0_i_off0_i833 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$275 >> 2] | 0) + 36 >> 2] & 255]($275) | 0) & 255;
      } else {
       $retval_0_i_off0_i833 = HEAP8[$276 >> 0] | 0;
      }
      if ($retval_0_i_off0_i833 << 24 >> 24 > -1) {
       if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i833 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
        label = 304;
       } else {
        $283 = HEAP32[$__wn >> 2] | 0;
        if (($283 | 0) == ($__we1098 | 0)) {
         $cmp_i746 = (HEAP32[$__second__i_i_i_i745 >> 2] | 0) != 182;
         $285 = HEAP32[$__first__i_i_i123 >> 2] | 0;
         $sub_ptr_sub_i750 = $__we1098 - $285 | 0;
         $mul4__i753 = $sub_ptr_sub_i750 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i750 << 1 : -1;
         $call15_i757 = _realloc($cmp_i746 ? $285 : 0, $mul4__i753) | 0;
         if (($call15_i757 | 0) == 0) {
          label = 294;
          break L75;
         }
         if ($cmp_i746) {
          HEAP32[$__first__i_i_i123 >> 2] = $call15_i757;
          $290 = $call15_i757;
         } else {
          $_pr_i762 = HEAP32[$__first__i_i_i123 >> 2] | 0;
          HEAP32[$__first__i_i_i123 >> 2] = $call15_i757;
          if (($_pr_i762 | 0) == 0) {
           $290 = $call15_i757;
          } else {
           FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i745 >> 2] & 511]($_pr_i762);
           $290 = HEAP32[$__first__i_i_i123 >> 2] | 0;
          }
         }
         HEAP32[$__second__i_i_i_i745 >> 2] = 102;
         $add_ptr_i769 = $290 + $sub_ptr_sub_i750 | 0;
         HEAP32[$__wn >> 2] = $add_ptr_i769;
         $__we1097 = (HEAP32[$__first__i_i_i123 >> 2] | 0) + $mul4__i753 | 0;
         $292 = $add_ptr_i769;
        } else {
         $__we1097 = $__we1098;
         $292 = $283;
        }
        HEAP32[$__wn >> 2] = $292 + 1;
        HEAP8[$292 >> 0] = $retval_0_i_off0_i833;
        $__ng_1 = $__ng_0 + 1 | 0;
        $add_ptr1059 = $add_ptr1061;
        $__gb_sroa_0_0_load10351066 = $__gb_sroa_0_0_load10351067;
        $arraydecay1076 = $arraydecay1078;
        $_ZNSt3__112__do_nothingEPv1093 = $_ZNSt3__112__do_nothingEPv1092;
        $__we1096 = $__we1097;
       }
      } else {
       label = 304;
      }
      if ((label | 0) == 304) {
       label = 0;
       $293 = HEAP8[$this4_i_i_i >> 0] | 0;
       if (($293 & 1) == 0) {
        $cond_i743 = ($293 & 255) >>> 1;
       } else {
        $cond_i743 = HEAP32[$__size__i2_i738 >> 2] | 0;
       }
       if (!(($cond_i743 | 0) != 0 & ($__ng_0 | 0) != 0 & $retval_0_i_off0_i833 << 24 >> 24 == $__ts_0 << 24 >> 24)) {
        $__e_sroa_0_13 = $__e_sroa_0_12;
        break;
       }
       if (($__gb_sroa_0_0_load10351067 | 0) == ($add_ptr1061 | 0)) {
        $sub_ptr_sub_i695 = $__gb_sroa_0_0_load10351067 - $arraydecay1078 | 0;
        $mul4__i698 = $sub_ptr_sub_i695 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i695 << 1 : -1;
        if (($_ZNSt3__112__do_nothingEPv1092 | 0) == 182) {
         $cond15_i704 = 0;
        } else {
         $cond15_i704 = $arraydecay1078;
        }
        $call16_i705 = _realloc($cond15_i704, $mul4__i698) | 0;
        $295 = $call16_i705;
        if (($call16_i705 | 0) == 0) {
         label = 312;
         break L75;
        }
        $add_ptr1060 = $295 + ($mul4__i698 >>> 2 << 2) | 0;
        $__gb_sroa_0_0_load10351071 = $295 + ($sub_ptr_sub_i695 >> 2 << 2) | 0;
        $arraydecay1077 = $295;
        $_ZNSt3__112__do_nothingEPv1094 = 102;
       } else {
        $add_ptr1060 = $add_ptr1061;
        $__gb_sroa_0_0_load10351071 = $__gb_sroa_0_0_load10351067;
        $arraydecay1077 = $arraydecay1078;
        $_ZNSt3__112__do_nothingEPv1094 = $_ZNSt3__112__do_nothingEPv1092;
       }
       HEAP32[$__gb_sroa_0_0_load10351071 >> 2] = $__ng_0;
       $__ng_1 = 0;
       $add_ptr1059 = $add_ptr1060;
       $__gb_sroa_0_0_load10351066 = $__gb_sroa_0_0_load10351071 + 4 | 0;
       $arraydecay1076 = $arraydecay1077;
       $_ZNSt3__112__do_nothingEPv1093 = $_ZNSt3__112__do_nothingEPv1094;
       $__we1096 = $__we1098;
      }
      $297 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $__ninp__i_i667 = $297 + 12 | 0;
      $298 = HEAP32[$__ninp__i_i667 >> 2] | 0;
      if (($298 | 0) == (HEAP32[$297 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$297 >> 2] | 0) + 40 >> 2] & 255]($297) | 0;
       $__ng_0 = $__ng_1;
       $add_ptr1061 = $add_ptr1059;
       $__gb_sroa_0_0_load10351067 = $__gb_sroa_0_0_load10351066;
       $arraydecay1078 = $arraydecay1076;
       $_ZNSt3__112__do_nothingEPv1092 = $_ZNSt3__112__do_nothingEPv1093;
       $__we1098 = $__we1096;
       $__e_sroa_0_10 = $__e_sroa_0_12;
       continue;
      } else {
       HEAP32[$__ninp__i_i667 >> 2] = $298 + 1;
       $__ng_0 = $__ng_1;
       $add_ptr1061 = $add_ptr1059;
       $__gb_sroa_0_0_load10351067 = $__gb_sroa_0_0_load10351066;
       $arraydecay1078 = $arraydecay1076;
       $_ZNSt3__112__do_nothingEPv1092 = $_ZNSt3__112__do_nothingEPv1093;
       $__we1098 = $__we1096;
       $__e_sroa_0_10 = $__e_sroa_0_12;
       continue;
      }
     }
     if (($arraydecay1078 | 0) != ($__gb_sroa_0_0_load10351067 | 0) & ($__ng_0 | 0) != 0) {
      if (($__gb_sroa_0_0_load10351067 | 0) == ($add_ptr1061 | 0)) {
       $sub_ptr_sub_i595 = $__gb_sroa_0_0_load10351067 - $arraydecay1078 | 0;
       $mul4__i598 = $sub_ptr_sub_i595 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i595 << 1 : -1;
       if (($_ZNSt3__112__do_nothingEPv1092 | 0) == 182) {
        $cond15_i = 0;
       } else {
        $cond15_i = $arraydecay1078;
       }
       $call16_i = _realloc($cond15_i, $mul4__i598) | 0;
       $302 = $call16_i;
       if (($call16_i | 0) == 0) {
        label = 324;
        break L75;
       }
       $add_ptr1065 = $302 + ($mul4__i598 >>> 2 << 2) | 0;
       $__gb_sroa_0_0_load10351072 = $302 + ($sub_ptr_sub_i595 >> 2 << 2) | 0;
       $arraydecay1075 = $302;
       $_ZNSt3__112__do_nothingEPv1091 = 102;
      } else {
       $add_ptr1065 = $add_ptr1061;
       $__gb_sroa_0_0_load10351072 = $__gb_sroa_0_0_load10351067;
       $arraydecay1075 = $arraydecay1078;
       $_ZNSt3__112__do_nothingEPv1091 = $_ZNSt3__112__do_nothingEPv1092;
      }
      HEAP32[$__gb_sroa_0_0_load10351072 >> 2] = $__ng_0;
      $add_ptr1064 = $add_ptr1065;
      $__gb_sroa_0_0_load10351070 = $__gb_sroa_0_0_load10351072 + 4 | 0;
      $arraydecay1074 = $arraydecay1075;
      $_ZNSt3__112__do_nothingEPv1090 = $_ZNSt3__112__do_nothingEPv1091;
     } else {
      $add_ptr1064 = $add_ptr1061;
      $__gb_sroa_0_0_load10351070 = $__gb_sroa_0_0_load10351067;
      $arraydecay1074 = $arraydecay1078;
      $_ZNSt3__112__do_nothingEPv1090 = $_ZNSt3__112__do_nothingEPv1092;
     }
     if (($__fd_0 | 0) > 0) {
      $304 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      do {
       if (($304 | 0) == 0) {
        $309 = 0;
       } else {
        if ((HEAP32[$304 + 12 >> 2] | 0) == (HEAP32[$304 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$304 >> 2] | 0) + 36 >> 2] & 255]($304) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
          $309 = 0;
          break;
         } else {
          $309 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
          break;
         }
        } else {
         $309 = $304;
        }
       }
      } while (0);
      $cmp_i_i_i522 = ($309 | 0) == 0;
      do {
       if (($__e_sroa_0_13 | 0) == 0) {
        label = 340;
       } else {
        if ((HEAP32[$__e_sroa_0_13 + 12 >> 2] | 0) != (HEAP32[$__e_sroa_0_13 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i522) {
          $__e_sroa_0_15 = $__e_sroa_0_13;
          break;
         } else {
          label = 347;
          break L75;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_13 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_13) | 0) == -1) {
         label = 340;
        } else {
         if ($cmp_i_i_i522) {
          $__e_sroa_0_15 = $__e_sroa_0_13;
         } else {
          label = 347;
          break L75;
         }
        }
       }
      } while (0);
      if ((label | 0) == 340) {
       label = 0;
       if ($cmp_i_i_i522) {
        label = 347;
        break L75;
       } else {
        $__e_sroa_0_15 = 0;
       }
      }
      $314 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $315 = HEAP32[$314 + 12 >> 2] | 0;
      if (($315 | 0) == (HEAP32[$314 + 16 >> 2] | 0)) {
       $retval_0_i_off0_i483 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$314 >> 2] | 0) + 36 >> 2] & 255]($314) | 0) & 255;
      } else {
       $retval_0_i_off0_i483 = HEAP8[$315 >> 0] | 0;
      }
      if (!($retval_0_i_off0_i483 << 24 >> 24 == $__dp_0 << 24 >> 24)) {
       label = 347;
       break L75;
      }
      $321 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $__ninp__i_i440 = $321 + 12 | 0;
      $322 = HEAP32[$__ninp__i_i440 >> 2] | 0;
      if (($322 | 0) == (HEAP32[$321 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$321 >> 2] | 0) + 40 >> 2] & 255]($321) | 0;
       $__we11021158 = $__we1098;
       $326 = $__e_sroa_0_15;
       $_pre_i12_i_i387 = $__e_sroa_0_15;
       $__fd_1 = $__fd_0;
       $__e_sroa_0_16 = $__e_sroa_0_15;
      } else {
       HEAP32[$__ninp__i_i440 >> 2] = $322 + 1;
       $__we11021158 = $__we1098;
       $326 = $__e_sroa_0_15;
       $_pre_i12_i_i387 = $__e_sroa_0_15;
       $__fd_1 = $__fd_0;
       $__e_sroa_0_16 = $__e_sroa_0_15;
      }
      while (1) {
       $327 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
       do {
        if (($327 | 0) == 0) {
         $332 = 0;
        } else {
         if ((HEAP32[$327 + 12 >> 2] | 0) == (HEAP32[$327 + 16 >> 2] | 0)) {
          if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$327 >> 2] | 0) + 36 >> 2] & 255]($327) | 0) == -1) {
           HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
           $332 = 0;
           break;
          } else {
           $332 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
           break;
          }
         } else {
          $332 = $327;
         }
        }
       } while (0);
       $cmp_i_i_i375 = ($332 | 0) == 0;
       do {
        if (($326 | 0) == 0) {
         $_pre_i12_i_i3871334_ph = $_pre_i12_i_i387;
         $__e_sroa_0_17 = $__e_sroa_0_16;
         label = 362;
        } else {
         if ((HEAP32[$326 + 12 >> 2] | 0) != (HEAP32[$326 + 16 >> 2] | 0)) {
          if ($cmp_i_i_i375) {
           $_pre_i12_i_i38713341343 = $_pre_i12_i_i387;
           $337 = $326;
           $__e_sroa_0_18 = $__e_sroa_0_16;
           break;
          } else {
           label = 370;
           break L75;
          }
         }
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$326 >> 2] | 0) + 36 >> 2] & 255]($326) | 0) == -1) {
          $_pre_i12_i_i3871334_ph = 0;
          $__e_sroa_0_17 = 0;
          label = 362;
         } else {
          if ($cmp_i_i_i375 ^ ($_pre_i12_i_i387 | 0) == 0) {
           $_pre_i12_i_i38713341343 = $_pre_i12_i_i387;
           $337 = $_pre_i12_i_i387;
           $__e_sroa_0_18 = $__e_sroa_0_16;
          } else {
           label = 370;
           break L75;
          }
         }
        }
       } while (0);
       if ((label | 0) == 362) {
        label = 0;
        if ($cmp_i_i_i375) {
         label = 370;
         break L75;
        } else {
         $_pre_i12_i_i38713341343 = $_pre_i12_i_i3871334_ph;
         $337 = 0;
         $__e_sroa_0_18 = $__e_sroa_0_17;
        }
       }
       $338 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
       $339 = HEAP32[$338 + 12 >> 2] | 0;
       if (($339 | 0) == (HEAP32[$338 + 16 >> 2] | 0)) {
        $retval_0_i_off0_i348 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$338 >> 2] | 0) + 36 >> 2] & 255]($338) | 0) & 255;
       } else {
        $retval_0_i_off0_i348 = HEAP8[$339 >> 0] | 0;
       }
       if (!($retval_0_i_off0_i348 << 24 >> 24 > -1)) {
        label = 370;
        break L75;
       }
       if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i348 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
        label = 370;
        break L75;
       }
       $347 = HEAP32[$__wn >> 2] | 0;
       if (($347 | 0) == ($__we11021158 | 0)) {
        $cmp_i283 = (HEAP32[$__second__i_i_i_i745 >> 2] | 0) != 182;
        $349 = HEAP32[$__first__i_i_i123 >> 2] | 0;
        $sub_ptr_sub_i286 = $__we11021158 - $349 | 0;
        $mul4__i = $sub_ptr_sub_i286 >>> 0 < 2147483647 >>> 0 ? $sub_ptr_sub_i286 << 1 : -1;
        $call15_i = _realloc($cmp_i283 ? $349 : 0, $mul4__i) | 0;
        if (($call15_i | 0) == 0) {
         label = 373;
         break L75;
        }
        if ($cmp_i283) {
         HEAP32[$__first__i_i_i123 >> 2] = $call15_i;
         $354 = $call15_i;
        } else {
         $_pr_i = HEAP32[$__first__i_i_i123 >> 2] | 0;
         HEAP32[$__first__i_i_i123 >> 2] = $call15_i;
         if (($_pr_i | 0) == 0) {
          $354 = $call15_i;
         } else {
          FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i_i745 >> 2] & 511]($_pr_i);
          $354 = HEAP32[$__first__i_i_i123 >> 2] | 0;
         }
        }
        HEAP32[$__second__i_i_i_i745 >> 2] = 102;
        $add_ptr_i289 = $354 + $sub_ptr_sub_i286 | 0;
        HEAP32[$__wn >> 2] = $add_ptr_i289;
        $__we1103 = (HEAP32[$__first__i_i_i123 >> 2] | 0) + $mul4__i | 0;
        $356 = $add_ptr_i289;
       } else {
        $__we1103 = $__we11021158;
        $356 = $347;
       }
       $357 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
       $358 = HEAP32[$357 + 12 >> 2] | 0;
       if (($358 | 0) == (HEAP32[$357 + 16 >> 2] | 0)) {
        $extract_t_i130 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$357 >> 2] | 0) + 36 >> 2] & 255]($357) | 0) & 255;
        $retval_0_i_off0_i133 = $extract_t_i130;
        $363 = HEAP32[$__wn >> 2] | 0;
       } else {
        $retval_0_i_off0_i133 = HEAP8[$358 >> 0] | 0;
        $363 = $356;
       }
       HEAP32[$__wn >> 2] = $363 + 1;
       HEAP8[$363 >> 0] = $retval_0_i_off0_i133;
       $dec = $__fd_1 - 1 | 0;
       $364 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
       $__ninp__i_i112 = $364 + 12 | 0;
       $365 = HEAP32[$__ninp__i_i112 >> 2] | 0;
       if (($365 | 0) == (HEAP32[$364 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$364 >> 2] | 0) + 40 >> 2] & 255]($364) | 0;
       } else {
        HEAP32[$__ninp__i_i112 >> 2] = $365 + 1;
       }
       if (($dec | 0) > 0) {
        $__we11021158 = $__we1103;
        $326 = $337;
        $_pre_i12_i_i387 = $_pre_i12_i_i38713341343;
        $__fd_1 = $dec;
        $__e_sroa_0_16 = $__e_sroa_0_18;
       } else {
        $__we1101 = $__we1103;
        $__fd_2 = $dec;
        $__e_sroa_0_19 = $__e_sroa_0_18;
        break;
       }
      }
     } else {
      $__we1101 = $__we1098;
      $__fd_2 = $__fd_0;
      $__e_sroa_0_19 = $__e_sroa_0_13;
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__first__i_i_i123 >> 2] | 0)) {
      label = 391;
      break L75;
     } else {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr1064;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load10351070;
      $arraydecay1079 = $arraydecay1074;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv1090;
      $__we1100 = $__we1101;
      $__fd_3 = $__fd_2;
      $__e_sroa_0_20 = $__e_sroa_0_19;
     }
     break;
    }
   default:
    {
     $__trailing_sign_1 = $__trailing_sign_01263;
     $add_ptr1063 = $add_ptr10621258;
     $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
     $arraydecay1079 = $arraydecay10801250;
     $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
     $__we1100 = $__we10991243;
     $__fd_3 = $__fd_0;
     $__e_sroa_0_20 = $__e_sroa_0_2;
    }
   }
  } while (0);
  L410 : do {
   if ((label | 0) == 127) {
    label = 0;
    if (($__p_01261 | 0) == 3) {
     $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv10881246;
     $arraydecay1080_lcssa = $arraydecay10801250;
     $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load103510681254;
     $__trailing_sign_0_lcssa = $__trailing_sign_01263;
     $__e_sroa_0_21 = $__e_sroa_0_2;
     label = 393;
     break L75;
    } else {
     $125 = $__e_sroa_0_2;
     $_pre_i12_i_i232 = $__e_sroa_0_2;
     $__e_sroa_0_3 = $__e_sroa_0_2;
    }
    while (1) {
     $126 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
     do {
      if (($126 | 0) == 0) {
       $131 = 0;
      } else {
       if ((HEAP32[$126 + 12 >> 2] | 0) == (HEAP32[$126 + 16 >> 2] | 0)) {
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 36 >> 2] & 255]($126) | 0) == -1) {
         HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
         $131 = 0;
         break;
        } else {
         $131 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
         break;
        }
       } else {
        $131 = $126;
       }
      }
     } while (0);
     $cmp_i_i_i220 = ($131 | 0) == 0;
     do {
      if (($125 | 0) == 0) {
       $_pre_i12_i_i2321323 = $_pre_i12_i_i232;
       $__e_sroa_0_4 = $__e_sroa_0_3;
       label = 139;
      } else {
       if ((HEAP32[$125 + 12 >> 2] | 0) != (HEAP32[$125 + 16 >> 2] | 0)) {
        if ($cmp_i_i_i220) {
         $136 = $125;
         $_pre_i12_i_i2321325 = $_pre_i12_i_i232;
         $__e_sroa_0_5 = $__e_sroa_0_3;
         break;
        } else {
         $__trailing_sign_1 = $__trailing_sign_01263;
         $add_ptr1063 = $add_ptr10621258;
         $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
         $arraydecay1079 = $arraydecay10801250;
         $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
         $__we1100 = $__we10991243;
         $__fd_3 = $__fd_0;
         $__e_sroa_0_20 = $__e_sroa_0_3;
         break L410;
        }
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 255]($125) | 0) == -1) {
        $_pre_i12_i_i2321323 = 0;
        $__e_sroa_0_4 = 0;
        label = 139;
       } else {
        if ($cmp_i_i_i220 ^ ($_pre_i12_i_i232 | 0) == 0) {
         $136 = $_pre_i12_i_i232;
         $_pre_i12_i_i2321325 = $_pre_i12_i_i232;
         $__e_sroa_0_5 = $__e_sroa_0_3;
        } else {
         $__trailing_sign_1 = $__trailing_sign_01263;
         $add_ptr1063 = $add_ptr10621258;
         $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
         $arraydecay1079 = $arraydecay10801250;
         $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
         $__we1100 = $__we10991243;
         $__fd_3 = $__fd_0;
         $__e_sroa_0_20 = $__e_sroa_0_3;
         break L410;
        }
       }
      }
     } while (0);
     if ((label | 0) == 139) {
      label = 0;
      if ($cmp_i_i_i220) {
       $__trailing_sign_1 = $__trailing_sign_01263;
       $add_ptr1063 = $add_ptr10621258;
       $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
       $arraydecay1079 = $arraydecay10801250;
       $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
       $__we1100 = $__we10991243;
       $__fd_3 = $__fd_0;
       $__e_sroa_0_20 = $__e_sroa_0_4;
       break L410;
      } else {
       $136 = 0;
       $_pre_i12_i_i2321325 = $_pre_i12_i_i2321323;
       $__e_sroa_0_5 = $__e_sroa_0_4;
      }
     }
     $137 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
     $138 = HEAP32[$137 + 12 >> 2] | 0;
     if (($138 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) {
      $retval_0_i_off0_i251 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 36 >> 2] & 255]($137) | 0) & 255;
     } else {
      $retval_0_i_off0_i251 = HEAP8[$138 >> 0] | 0;
     }
     if (!($retval_0_i_off0_i251 << 24 >> 24 > -1)) {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr10621258;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
      $arraydecay1079 = $arraydecay10801250;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
      $__we1100 = $__we10991243;
      $__fd_3 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_5;
      break L410;
     }
     if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i251 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
      $__trailing_sign_1 = $__trailing_sign_01263;
      $add_ptr1063 = $add_ptr10621258;
      $__gb_sroa_0_0_load10351069 = $__gb_sroa_0_0_load103510681254;
      $arraydecay1079 = $arraydecay10801250;
      $_ZNSt3__112__do_nothingEPv1089 = $_ZNSt3__112__do_nothingEPv10881246;
      $__we1100 = $__we10991243;
      $__fd_3 = $__fd_0;
      $__e_sroa_0_20 = $__e_sroa_0_5;
      break L410;
     }
     $145 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
     $__ninp__i_i265 = $145 + 12 | 0;
     $146 = HEAP32[$__ninp__i_i265 >> 2] | 0;
     if (($146 | 0) == (HEAP32[$145 + 16 >> 2] | 0)) {
      $retval_0_i_off0_i275 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$145 >> 2] | 0) + 40 >> 2] & 255]($145) | 0) & 255;
     } else {
      HEAP32[$__ninp__i_i265 >> 2] = $146 + 1;
      $retval_0_i_off0_i275 = HEAP8[$146 >> 0] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces, $retval_0_i_off0_i275);
     $125 = $136;
     $_pre_i12_i_i232 = $_pre_i12_i_i2321325;
     $__e_sroa_0_3 = $__e_sroa_0_5;
    }
   }
  } while (0);
  $inc295 = $__p_01261 + 1 | 0;
  if ($inc295 >>> 0 < 4 >>> 0) {
   $__we10991243 = $__we1100;
   $_ZNSt3__112__do_nothingEPv10881246 = $_ZNSt3__112__do_nothingEPv1089;
   $arraydecay10801250 = $arraydecay1079;
   $__gb_sroa_0_0_load103510681254 = $__gb_sroa_0_0_load10351069;
   $add_ptr10621258 = $add_ptr1063;
   $__p_01261 = $inc295;
   $__trailing_sign_01263 = $__trailing_sign_1;
   $__fd_0 = $__fd_3;
   $__e_sroa_0_0 = $__e_sroa_0_20;
  } else {
   $_ZNSt3__112__do_nothingEPv1088_lcssa = $_ZNSt3__112__do_nothingEPv1089;
   $arraydecay1080_lcssa = $arraydecay1079;
   $__gb_sroa_0_0_load10351068_lcssa = $__gb_sroa_0_0_load10351069;
   $__trailing_sign_0_lcssa = $__trailing_sign_1;
   $__e_sroa_0_21 = $__e_sroa_0_20;
   label = 393;
   break;
  }
 }
 L445 : switch (label | 0) {
 case 126:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay10801250;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10881246;
   break;
  }
 case 220:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay10801250;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10881246;
   break;
  }
 case 272:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay10801250;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv10881246;
   break;
  }
 case 294:
  {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
   return 0;
  }
 case 312:
  {
   $exception_i70 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i70 >> 2] = 11576;
   ___cxa_throw($exception_i70 | 0, 17832, 52);
   return 0;
  }
 case 324:
  {
   $exception_i73 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i73 >> 2] = 11576;
   ___cxa_throw($exception_i73 | 0, 17832, 52);
   return 0;
  }
 case 347:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay1074;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1090;
   break;
  }
 case 370:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay1074;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1090;
   break;
  }
 case 373:
  {
   $exception_i76 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i76 >> 2] = 11576;
   ___cxa_throw($exception_i76 | 0, 17832, 52);
   return 0;
  }
 case 391:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $retval_0 = 0;
   $arraydecay1086 = $arraydecay1074;
   $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1090;
   break;
  }
 case 393:
  {
   L461 : do {
    if (($__trailing_sign_0_lcssa | 0) != 0) {
     $__size__i_i = $__trailing_sign_0_lcssa;
     $arrayidx_i_i_i_i89 = $__trailing_sign_0_lcssa + 1 | 0;
     $__data__i_i_i_i87 = $__trailing_sign_0_lcssa + 8 | 0;
     $__size__i2_i = $__trailing_sign_0_lcssa + 4 | 0;
     $__i_0 = 1;
     $__e_sroa_0_22 = $__e_sroa_0_21;
     L463 : while (1) {
      $372 = HEAP8[$__size__i_i >> 0] | 0;
      if (($372 & 1) == 0) {
       $cond_i = ($372 & 255) >>> 1;
      } else {
       $cond_i = HEAP32[$__size__i2_i >> 2] | 0;
      }
      if (!($__i_0 >>> 0 < $cond_i >>> 0)) {
       break L461;
      }
      $374 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      do {
       if (($374 | 0) == 0) {
        $379 = 0;
       } else {
        if ((HEAP32[$374 + 12 >> 2] | 0) == (HEAP32[$374 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$374 >> 2] | 0) + 36 >> 2] & 255]($374) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i137 >> 2] = 0;
          $379 = 0;
          break;
         } else {
          $379 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
          break;
         }
        } else {
         $379 = $374;
        }
       }
      } while (0);
      $cmp_i_i_i103 = ($379 | 0) == 0;
      do {
       if (($__e_sroa_0_22 | 0) == 0) {
        label = 410;
       } else {
        if ((HEAP32[$__e_sroa_0_22 + 12 >> 2] | 0) != (HEAP32[$__e_sroa_0_22 + 16 >> 2] | 0)) {
         if ($cmp_i_i_i103) {
          $__e_sroa_0_24 = $__e_sroa_0_22;
          break;
         } else {
          break L463;
         }
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_22 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_22) | 0) == -1) {
         label = 410;
        } else {
         if ($cmp_i_i_i103) {
          $__e_sroa_0_24 = $__e_sroa_0_22;
         } else {
          break L463;
         }
        }
       }
      } while (0);
      if ((label | 0) == 410) {
       label = 0;
       if ($cmp_i_i_i103) {
        break;
       } else {
        $__e_sroa_0_24 = 0;
       }
      }
      $384 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $385 = HEAP32[$384 + 12 >> 2] | 0;
      if (($385 | 0) == (HEAP32[$384 + 16 >> 2] | 0)) {
       $retval_0_i_off0_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$384 >> 2] | 0) + 36 >> 2] & 255]($384) | 0) & 255;
      } else {
       $retval_0_i_off0_i = HEAP8[$385 >> 0] | 0;
      }
      if ((HEAP8[$__size__i_i >> 0] & 1) == 0) {
       $cond_i_i_i = $arrayidx_i_i_i_i89;
      } else {
       $cond_i_i_i = HEAP32[$__data__i_i_i_i87 >> 2] | 0;
      }
      if (!($retval_0_i_off0_i << 24 >> 24 == (HEAP8[$cond_i_i_i + $__i_0 >> 0] | 0))) {
       break;
      }
      $inc318 = $__i_0 + 1 | 0;
      $394 = HEAP32[$__sbuf__i_i_i137 >> 2] | 0;
      $__ninp__i_i = $394 + 12 | 0;
      $395 = HEAP32[$__ninp__i_i >> 2] | 0;
      if (($395 | 0) == (HEAP32[$394 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$394 >> 2] | 0) + 40 >> 2] & 255]($394) | 0;
       $__i_0 = $inc318;
       $__e_sroa_0_22 = $__e_sroa_0_24;
       continue;
      } else {
       HEAP32[$__ninp__i_i >> 2] = $395 + 1;
       $__i_0 = $inc318;
       $__e_sroa_0_22 = $__e_sroa_0_24;
       continue;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $arraydecay1086 = $arraydecay1080_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
     break L445;
    }
   } while (0);
   if (($arraydecay1080_lcssa | 0) == ($__gb_sroa_0_0_load10351068_lcssa | 0)) {
    $retval_0 = 1;
    $arraydecay1086 = $__gb_sroa_0_0_load10351068_lcssa;
    $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
   } else {
    $399 = HEAP8[$this4_i_i_i >> 0] | 0;
    if (($399 & 1) == 0) {
     $cond_i_i = ($399 & 255) >>> 1;
    } else {
     $cond_i_i = HEAP32[$__size__i2_i738 >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $retval_0 = 1;
     $arraydecay1086 = $arraydecay1080_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
    } else {
     $incdec_ptr6_i_i_i = $__gb_sroa_0_0_load10351068_lcssa - 4 | 0;
     $cmp17_i_i_i = $incdec_ptr6_i_i_i >>> 0 > $arraydecay1080_lcssa >>> 0;
     if ($cmp17_i_i_i) {
      $__first_addr_08_i_i_i = $arraydecay1080_lcssa;
      $incdec_ptr9_i_i_i = $incdec_ptr6_i_i_i;
      do {
       $401 = HEAP32[$__first_addr_08_i_i_i >> 2] | 0;
       HEAP32[$__first_addr_08_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i >> 2];
       HEAP32[$incdec_ptr9_i_i_i >> 2] = $401;
       $__first_addr_08_i_i_i = $__first_addr_08_i_i_i + 4 | 0;
       $incdec_ptr9_i_i_i = $incdec_ptr9_i_i_i - 4 | 0;
      } while ($__first_addr_08_i_i_i >>> 0 < $incdec_ptr9_i_i_i >>> 0);
      $403 = HEAP8[$this4_i_i_i >> 0] | 0;
     } else {
      $403 = $399;
     }
     if (($403 & 1) == 0) {
      $cond_i25_i = ($403 & 255) >>> 1;
      $cond_i_i44_i = $__grp + 1 | 0;
     } else {
      $cond_i25_i = HEAP32[$__size__i2_i738 >> 2] | 0;
      $cond_i_i44_i = HEAP32[$__grp + 8 >> 2] | 0;
     }
     $406 = HEAP8[$cond_i_i44_i >> 0] | 0;
     $or_cond2736_i = $406 << 24 >> 24 < 1 | $406 << 24 >> 24 == 127;
     L517 : do {
      if ($cmp17_i_i_i) {
       $sub_ptr_lhs_cast_i = $cond_i_i44_i + $cond_i25_i | 0;
       $__ig_037_i = $cond_i_i44_i;
       $__r_038_i = $arraydecay1080_lcssa;
       $407 = $406;
       $or_cond2739_i = $or_cond2736_i;
       while (1) {
        if (!$or_cond2739_i) {
         if (($407 << 24 >> 24 | 0) != (HEAP32[$__r_038_i >> 2] | 0)) {
          break L517;
         }
        }
        $incdec_ptr___ig_0_i = ($sub_ptr_lhs_cast_i - $__ig_037_i | 0) > 1 ? $__ig_037_i + 1 | 0 : $__ig_037_i;
        $incdec_ptr18_i = $__r_038_i + 4 | 0;
        $409 = HEAP8[$incdec_ptr___ig_0_i >> 0] | 0;
        $or_cond27_i = $409 << 24 >> 24 < 1 | $409 << 24 >> 24 == 127;
        if ($incdec_ptr18_i >>> 0 < $incdec_ptr6_i_i_i >>> 0) {
         $__ig_037_i = $incdec_ptr___ig_0_i;
         $__r_038_i = $incdec_ptr18_i;
         $407 = $409;
         $or_cond2739_i = $or_cond27_i;
        } else {
         $_lcssa_i = $409;
         $or_cond27_lcssa_i = $or_cond27_i;
         label = 439;
         break;
        }
       }
      } else {
       $_lcssa_i = $406;
       $or_cond27_lcssa_i = $or_cond2736_i;
       label = 439;
      }
     } while (0);
     if ((label | 0) == 439) {
      if ($or_cond27_lcssa_i) {
       $retval_0 = 1;
       $arraydecay1086 = $arraydecay1080_lcssa;
       $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
       break;
      }
      if (((HEAP32[$incdec_ptr6_i_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i << 24 >> 24 >>> 0) {
       $retval_0 = 1;
       $arraydecay1086 = $arraydecay1080_lcssa;
       $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
       break;
      }
     }
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $retval_0 = 0;
     $arraydecay1086 = $arraydecay1080_lcssa;
     $_ZNSt3__112__do_nothingEPv = $_ZNSt3__112__do_nothingEPv1088_lcssa;
    }
   }
   break;
  }
 }
 if (!((HEAP8[$this4_i_i_i108 >> 0] & 1) == 0)) {
  $415 = HEAP32[$__data__i_i_i875 >> 2] | 0;
  if (($415 | 0) != 0) {
   _free($415);
  }
 }
 if (!((HEAP8[$this4_i_i_i107 >> 0] & 1) == 0)) {
  $417 = HEAP32[$__data__i_i_i467 >> 2] | 0;
  if (($417 | 0) != 0) {
   _free($417);
  }
 }
 if (!((HEAP8[$this4_i_i_i101 >> 0] & 1) == 0)) {
  $419 = HEAP32[$__data__i_i_i >> 2] | 0;
  if (($419 | 0) != 0) {
   _free($419);
  }
 }
 if (!((HEAP8[$this4_i_i_i84 >> 0] & 1) == 0)) {
  $421 = HEAP32[$__data__i_i_i681 >> 2] | 0;
  if (($421 | 0) != 0) {
   _free($421);
  }
 }
 if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
  $423 = HEAP32[$__grp + 8 >> 2] | 0;
  if (($423 | 0) != 0) {
   _free($423);
  }
 }
 if (($arraydecay1086 | 0) == 0) {
  $$etemp$25$0 = 400;
  $$etemp$25$1 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vi[$_ZNSt3__112__do_nothingEPv & 511]($arraydecay1086);
 $$etemp$25$0 = 400;
 $$etemp$25$1 = 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZL18filterSmallRegionsP9rcContextiiRtR20rcCompactHeightfieldPt($ctx, $minRegionArea, $mergeRegionSize, $maxRegionId, $chf, $srcReg) {
 $ctx = $ctx | 0;
 $minRegionArea = $minRegionArea | 0;
 $mergeRegionSize = $mergeRegionSize | 0;
 $maxRegionId = $maxRegionId | 0;
 $chf = $chf | 0;
 $srcReg = $srcReg | 0;
 var $stack_sroa_17 = 0, $trace_sroa_13 = 0, $width = 0, $0 = 0, $1 = 0, $add = 0, $call_i_i = 0, $3 = 0, $cmp6458 = 0, $cells = 0, $areas = 0, $spans_i = 0, $i_0464 = 0, $arrayidx = 0, $y_0462 = 0, $mul8 = 0, $x_0459 = 0, $6 = 0, $bf_load = 0, $bf_clear = 0, $bf_lshr = 0, $add15 = 0, $i11_0455 = 0, $arrayidx19 = 0, $7 = 0, $conv20 = 0, $spanCount = 0, $bf_clear29 = 0, $m_size_i_i = 0, $m_data_i6_i = 0, $m_cap_i1 = 0, $j_0445 = 0, $9 = 0, $conv37 = 0, $10 = 0, $11 = 0, $i_012_i = 0, $add_i_i = 0, $13 = 0, $14 = 0, $_lcssa_i = 0, $call_i1_i = 0, $15 = 0, $16 = 0, $19 = 0, $21 = 0, $connections = 0, $m_size_i = 0, $22 = 0, $bf_clear_i_i = 0, $conv10_i = 0, $dir_0447 = 0, $and_i_i = 0, $cmp_i178 = 0, $add4_i = 0, $r_0_i = 0, $inc60 = 0, $and_i93_i = 0, $add4_i195 = 0, $curReg_0_i = 0, $conv_i = 0, $add_i118_i = 0, $m_cap_i11 = 0, $40 = 0, $41 = 0, $_lcssa_i24 = 0, $call_i1_i26 = 0, $43 = 0, $m_data_i31 = 0, $46 = 0, $m_data_i120_i_pre_phi = 0, $48 = 0, $49 = 0, $iter_0_i = 0, $curReg_1_i = 0, $dir_addr_0_i = 0, $i_addr_0_i = 0, $y_addr_0_i = 0, $x_addr_0_i = 0, $inc_i203 = 0, $and_i_i_i = 0, $cmp_i111_i = 0, $and_i16_i_i = 0, $add4_i_i = 0, $r_0_i_i = 0, $and_i103_i = 0, $add26_i = 0, $r_0_i204 = 0, $conv35_i = 0, $65 = 0, $add_i_i205 = 0, $66 = 0, $67 = 0, $_lcssa_i54 = 0, $call_i1_i56 = 0, $68 = 0, $69 = 0, $72 = 0, $74 = 0, $75 = 0, $curReg_2_i = 0, $and_i88_i = 0, $add43_i = 0, $add45_i = 0, $add51_i = 0, $add57_i = 0, $81 = 0, $curReg_3_i = 0, $dir_addr_1_in_i = 0, $i_addr_1_i = 0, $y_addr_1_i = 0, $x_addr_1_i = 0, $dir_addr_1_i = 0, $82 = 0, $83 = 0, $84 = 0, $j_0_ph138_i = 0, $arrayidx_i70_i = 0, $85 = 0, $sub131_i = 0, $k_0133_i = 0, $add84_i = 0, $89 = 0, $sub_i = 0, $90 = 0, $sub_lcssa_i = 0, $91 = 0, $92 = 0, $stack_sroa_17_0_load546 = 0, $stack_sroa_36_0 = 0, $stack_sroa_0_0 = 0, $trace_sroa_25_0 = 0, $trace_sroa_0_0 = 0, $i75_0443 = 0, $visited = 0, $98 = 0, $mul_i140 = 0, $call_i1_i146 = 0, $99 = 0, $stack_sroa_36_1 = 0, $stack_sroa_0_1 = 0, $102 = 0, $mul_i170 = 0, $call_i1_i176 = 0, $103 = 0, $trace_sroa_13_0_load511 = 0, $trace_sroa_25_1 = 0, $trace_sroa_0_1 = 0, $106 = 0, $mul_i200 = 0, $stack_sroa_36_2 = 0, $_lcssa_i204 = 0, $107 = 0, $stack_sroa_36_3 = 0, $stack_sroa_0_2 = 0, $stack_sroa_17_0_load542 = 0, $stack_sroa_36_4 = 0, $stack_sroa_0_3 = 0, $connectsToBorder_1_off0_lcssa = 0, $stack_sroa_17_0_load541 = 0, $stack_sroa_36_5 = 0, $stack_sroa_0_4 = 0, $trace_sroa_25_2 = 0, $trace_sroa_0_2 = 0, $109 = 0, $spanCount96_0436 = 0, $connectsToBorder_0_off0435 = 0, $dec_i = 0, $110 = 0, $111 = 0, $add109 = 0, $trace_sroa_13_0_load515 = 0, $add_i227 = 0, $113 = 0, $mul_i230 = 0, $trace_sroa_25_3 = 0, $call_i1_i236 = 0, $114 = 0, $trace_sroa_25_4 = 0, $trace_sroa_0_3 = 0, $m_size_i232 = 0, $117 = 0, $m_data_i236 = 0, $stack_sroa_36_6 = 0, $stack_sroa_0_5 = 0, $118 = 0, $j111_0425 = 0, $connectsToBorder_1_off0424 = 0, $120 = 0, $visited129 = 0, $122 = 0, $conv134 = 0, $stack_sroa_17_0_load539 = 0, $add_i244 = 0, $123 = 0, $mul_i263 = 0, $stack_sroa_36_7 = 0, $call_i1_i269 = 0, $124 = 0, $stack_sroa_36_8 = 0, $stack_sroa_0_6 = 0, $stack_sroa_36_9 = 0, $stack_sroa_0_7 = 0, $127 = 0, $connectsToBorder_2_off0 = 0, $inc148 = 0, $stack_sroa_36_10 = 0, $stack_sroa_0_8 = 0, $trace_sroa_25_5 = 0, $trace_sroa_0_4 = 0, $spanCount96_0_lcssa = 0, $connectsToBorder_0_off0_lcssa = 0, $trace_sroa_13_0_load512 = 0, $j153_0440 = 0, $arrayidx_i252 = 0, $inc168 = 0, $stack_sroa_17_0_load546573 = 0, $stack_sroa_36_11 = 0, $stack_sroa_0_9 = 0, $trace_sroa_25_6 = 0, $trace_sroa_0_5 = 0, $inc172 = 0, $mergeCount_0 = 0, $i174_0 = 0, $130 = 0, $spanCount190 = 0, $132 = 0, $m_size_i_i255 = 0, $133 = 0, $134 = 0, $i_05_i = 0, $136 = 0, $areaType_i338 = 0, $m_size_i12_i = 0, $m_data_i_i349 = 0, $conv6_i360 = 0, $j202_0402 = 0, $mergeId_0401 = 0, $smallest_0400 = 0, $137 = 0, $138 = 0, $140 = 0, $conv6_i = 0, $i_019_i = 0, $n_018_i = 0, $144 = 0, $145 = 0, $i14_016_i = 0, $147 = 0, $148 = 0, $i_019_i362 = 0, $n_018_i363 = 0, $150 = 0, $151 = 0, $i14_016_i382 = 0, $inc27_i385 = 0, $smallest_1 = 0, $mergeId_1 = 0, $conv245 = 0, $153 = 0, $connections_i = 0, $m_size_i36_i = 0, $154 = 0, $cmp_i285 = 0, $155 = 0, $156 = 0, $i_0109_i = 0, $inc_i283 = 0, $acon_i_sroa_0_0579 = 0, $acon_i_sroa_0_0579581 = 0, $i12_0107_i = 0, $inc22_i288 = 0, $160 = 0, $m_data_i75_i = 0, $161 = 0, $conv35_i290 = 0, $i27_0103_i = 0, $inc40_i = 0, $m_cap_i318 = 0, $163 = 0, $164 = 0, $mul_i327 = 0, $call_i1_i333 = 0, $166 = 0, $m_data_i338 = 0, $169 = 0, $sub_i292 = 0, $m_data_i62_i = 0, $171 = 0, $i47_099_i = 0, $172 = 0, $add_i60_i = 0, $173 = 0, $174 = 0, $_lcssa_i361 = 0, $call_i1_i363 = 0, $175 = 0, $176 = 0, $179 = 0, $181 = 0, $inc59_i = 0, $182 = 0, $sub66_i = 0, $m_data_i51_i = 0, $i61_094_i = 0, $184 = 0, $185 = 0, $add_i49_i = 0, $186 = 0, $187 = 0, $_lcssa_i391 = 0, $call_i1_i393 = 0, $188 = 0, $189 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $i_0_ph36_i_i302 = 0, $arrayidx_i23_i_i304 = 0, $198 = 0, $sub26_i_i308 = 0, $j_028_i_i311 = 0, $add17_i_i312 = 0, $202 = 0, $sub_i_i315 = 0, $203 = 0, $sub_lcssa_i_i318 = 0, $204 = 0, $m_size_i_i_i = 0, $m_data_i6_i_i = 0, $m_cap_i408 = 0, $205 = 0, $j_086_i = 0, $207 = 0, $208 = 0, $209 = 0, $i_012_i_i = 0, $inc_i_i = 0, $add_i_i_i = 0, $211 = 0, $212 = 0, $_lcssa_i421 = 0, $call_i1_i423 = 0, $213 = 0, $214 = 0, $217 = 0, $219 = 0, $220 = 0, $spanCount92_i = 0, $m_cap_i438 = 0, $223 = 0, $224 = 0, $mul_i447 = 0, $call_i1_i453 = 0, $226 = 0, $229 = 0, $acon_i_sroa_0_0580 = 0, $retval_0_i331 = 0, $j256_0415 = 0, $id261 = 0, $232 = 0, $m_size_i_i265 = 0, $234 = 0, $235 = 0, $neiChanged_0_off0_lcssa_i = 0, $m_size_i18_i = 0, $236 = 0, $237 = 0, $238 = 0, $i_033_i = 0, $neiChanged_0_off032_i = 0, $arrayidx_i22_i = 0, $240 = 0, $neiChanged_1_off0_i = 0, $inc_i271 = 0, $241 = 0, $i7_030_i = 0, $arrayidx_i17_i273 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $i_0_ph36_i_i = 0, $arrayidx_i23_i_i = 0, $247 = 0, $sub26_i_i = 0, $j_028_i_i = 0, $add17_i_i = 0, $251 = 0, $sub_i_i276 = 0, $252 = 0, $sub_lcssa_i_i = 0, $mergeCount_1 = 0, $i293_0397 = 0, $inc314 = 0, $i316_0396 = 0, $regIdGen_0395 = 0, $255 = 0, $inc328 = 0, $256 = 0, $j329_0394 = 0, $inc345 = 0, $regIdGen_1 = 0, $257 = 0, $i350_0392 = 0, $arrayidx355 = 0, $conv356 = 0, $inc367 = 0, $i369_0390 = 0, $260 = 0, $262 = 0, $retval_0 = 0, label = 0, tempVarArgs = 0, sp = 0, $i_012_i$looptemp = 0, $j_0_ph138_i$looptemp = 0, $i_05_i$looptemp = 0, $i14_016_i$looptemp = 0, $i_0_ph36_i_i302$looptemp = 0, $i_0_ph36_i_i$looptemp = 0;
 sp = STACKTOP;
 $width = $chf | 0;
 $0 = HEAP32[$width >> 2] | 0;
 $1 = HEAP32[$chf + 4 >> 2] | 0;
 $add = (HEAPU16[$maxRegionId >> 1] | 0) + 1 | 0;
 $call_i_i = _malloc($add * 36 | 0) | 0;
 $3 = $call_i_i;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 3800, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $add, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else {
  $i_0464 = 0;
 }
 do {
  $arrayidx = $3 + ($i_0464 * 36 | 0) | 0;
  if (($arrayidx | 0) != 0) {
   HEAP32[$arrayidx >> 2] = 0;
   HEAP16[$3 + ($i_0464 * 36 | 0) + 4 >> 1] = $i_0464;
   HEAP8[$3 + ($i_0464 * 36 | 0) + 6 >> 0] = 0;
   HEAP8[$3 + ($i_0464 * 36 | 0) + 7 >> 0] = 0;
   HEAP8[$3 + ($i_0464 * 36 | 0) + 8 >> 0] = 0;
   _memset($3 + ($i_0464 * 36 | 0) + 12 | 0, 0, 24) | 0;
  }
  $i_0464 = $i_0464 + 1 | 0;
 } while (($i_0464 | 0) < ($add | 0));
 if (($1 | 0) > 0) {
  $cmp6458 = ($0 | 0) > 0;
  $cells = $chf + 60 | 0;
  $areas = $chf + 72 | 0;
  $spans_i = $chf + 64 | 0;
  $y_0462 = 0;
  do {
   if ($cmp6458) {
    $mul8 = Math_imul($y_0462, $0) | 0;
    $x_0459 = 0;
    do {
     $6 = (HEAP32[$cells >> 2] | 0) + ($x_0459 + $mul8 << 2) | 0;
     $bf_load = HEAP32[$6 >> 2] | 0;
     $bf_clear = $bf_load & 16777215;
     $bf_lshr = $bf_load >>> 24;
     $add15 = $bf_clear + $bf_lshr | 0;
     if (($bf_lshr | 0) != 0) {
      $i11_0455 = $bf_clear;
      do {
       $arrayidx19 = $srcReg + ($i11_0455 << 1) | 0;
       $7 = HEAP16[$arrayidx19 >> 1] | 0;
       $conv20 = $7 & 65535;
       L21 : do {
        if ($7 << 16 >> 16 != 0 & $conv20 >>> 0 < $add >>> 0) {
         $spanCount = $3 + ($conv20 * 36 | 0) | 0;
         HEAP32[$spanCount >> 2] = (HEAP32[$spanCount >> 2] | 0) + 1;
         $bf_clear29 = HEAP32[$6 >> 2] & 16777215;
         if (($bf_clear29 | 0) < ($add15 | 0)) {
          $m_size_i_i = $3 + ($conv20 * 36 | 0) + 28 | 0;
          $m_data_i6_i = $3 + ($conv20 * 36 | 0) + 24 | 0;
          $m_cap_i1 = $3 + ($conv20 * 36 | 0) + 32 | 0;
          $j_0445 = $bf_clear29;
          do {
           L27 : do {
            if (($i11_0455 | 0) != ($j_0445 | 0)) {
             $9 = HEAP16[$srcReg + ($j_0445 << 1) >> 1] | 0;
             $conv37 = $9 & 65535;
             if ($9 << 16 >> 16 != 0 & $conv37 >>> 0 < $add >>> 0) {
              $10 = HEAP32[$m_size_i_i >> 2] | 0;
              if (($10 | 0) > 0) {
               $11 = HEAP32[$m_data_i6_i >> 2] | 0;
               $i_012_i = 0;
               do {
                $i_012_i$looptemp = $i_012_i;
                $i_012_i = $i_012_i + 1 | 0;
                if ((HEAP32[$11 + ($i_012_i$looptemp << 2) >> 2] | 0) == ($conv37 | 0)) {
                 break L27;
                }
               } while (($i_012_i | 0) < ($10 | 0));
              }
              $add_i_i = $10 + 1 | 0;
              $13 = HEAP32[$m_cap_i1 >> 2] | 0;
              if (($13 | 0) < ($add_i_i | 0)) {
               if (($13 | 0) == 0) {
                HEAP32[$m_cap_i1 >> 2] = $add_i_i;
                $_lcssa_i = $add_i_i;
               } else {
                $14 = $13;
                do {
                 $14 = $14 << 1;
                } while (($14 | 0) < ($add_i_i | 0));
                HEAP32[$m_cap_i1 >> 2] = $14;
                $_lcssa_i = $14;
               }
               $call_i1_i = _malloc($_lcssa_i << 2) | 0;
               $15 = $call_i1_i;
               $16 = HEAP32[$m_size_i_i >> 2] | 0;
               if (($16 | 0) != 0 & ($call_i1_i | 0) != 0) {
                _memcpy($call_i1_i | 0, HEAP32[$m_data_i6_i >> 2] | 0, $16 << 2) | 0;
               }
               $19 = HEAP32[$m_data_i6_i >> 2] | 0;
               if (($19 | 0) != 0) {
                _free($19);
               }
               HEAP32[$m_data_i6_i >> 2] = $15;
               $21 = $15;
              } else {
               $21 = HEAP32[$m_data_i6_i >> 2] | 0;
              }
              HEAP32[$m_size_i_i >> 2] = $add_i_i;
              HEAP32[$21 + ($10 << 2) >> 2] = $conv37;
             }
            }
           } while (0);
           $j_0445 = $j_0445 + 1 | 0;
          } while (($j_0445 | 0) < ($add15 | 0));
         }
         $connections = $3 + ($conv20 * 36 | 0) + 12 | 0;
         $m_size_i = $3 + ($conv20 * 36 | 0) + 16 | 0;
         $22 = HEAP32[$m_size_i >> 2] | 0;
         if (($22 | 0) <= 0) {
          HEAP8[$3 + ($conv20 * 36 | 0) + 6 >> 0] = HEAP8[(HEAP32[$areas >> 2] | 0) + $i11_0455 >> 0] | 0;
          $bf_clear_i_i = HEAP32[(HEAP32[$spans_i >> 2] | 0) + ($i11_0455 << 3) + 4 >> 2] & 16777215;
          $conv10_i = HEAPU16[$arrayidx19 >> 1] | 0;
          $dir_0447 = 0;
          while (1) {
           $and_i_i = $bf_clear_i_i >>> (($dir_0447 * 6 | 0) >>> 0) & 63;
           $cmp_i178 = ($and_i_i | 0) == 63;
           if ($cmp_i178) {
            $r_0_i = 0;
           } else {
            $add4_i = (HEAP32[11520 + ($dir_0447 << 2) >> 2] | 0) + $x_0459 + (Math_imul((HEAP32[11504 + ($dir_0447 << 2) >> 2] | 0) + $y_0462 | 0, HEAP32[$width >> 2] | 0) | 0) | 0;
            $r_0_i = HEAPU16[$srcReg + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add4_i << 2) >> 2] & 16777215) + $and_i_i << 1) >> 1] | 0;
           }
           $inc60 = $dir_0447 + 1 | 0;
           if (($r_0_i | 0) != ($conv10_i | 0)) {
            break;
           }
           if (($inc60 | 0) < 4) {
            $dir_0447 = $inc60;
           } else {
            break L21;
           }
          }
          if (!(($dir_0447 | 0) == -1)) {
           if ($cmp_i178) {
            $curReg_0_i = 0;
           } else {
            $and_i93_i = $dir_0447 & 3;
            $add4_i195 = (HEAP32[11520 + ($and_i93_i << 2) >> 2] | 0) + $x_0459 + (Math_imul((HEAP32[11504 + ($and_i93_i << 2) >> 2] | 0) + $y_0462 | 0, HEAP32[$width >> 2] | 0) | 0) | 0;
            $curReg_0_i = HEAP16[$srcReg + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add4_i195 << 2) >> 2] & 16777215) + $and_i_i << 1) >> 1] | 0;
           }
           $conv_i = $curReg_0_i & 65535;
           $add_i118_i = $22 + 1 | 0;
           $m_cap_i11 = $3 + ($conv20 * 36 | 0) + 20 | 0;
           $40 = HEAP32[$m_cap_i11 >> 2] | 0;
           if (($40 | 0) < ($add_i118_i | 0)) {
            if (($40 | 0) == 0) {
             HEAP32[$m_cap_i11 >> 2] = $add_i118_i;
             $_lcssa_i24 = $add_i118_i;
            } else {
             $41 = $40;
             do {
              $41 = $41 << 1;
             } while (($41 | 0) < ($add_i118_i | 0));
             HEAP32[$m_cap_i11 >> 2] = $41;
             $_lcssa_i24 = $41;
            }
            $call_i1_i26 = _malloc($_lcssa_i24 << 2) | 0;
            $43 = HEAP32[$m_size_i >> 2] | 0;
            $m_data_i31 = $connections | 0;
            if (($43 | 0) != 0 & ($call_i1_i26 | 0) != 0) {
             _memcpy($call_i1_i26 | 0, HEAP32[$m_data_i31 >> 2] | 0, $43 << 2) | 0;
            }
            $46 = HEAP32[$m_data_i31 >> 2] | 0;
            if (($46 | 0) != 0) {
             _free($46);
            }
            HEAP32[$m_data_i31 >> 2] = $call_i1_i26;
            $m_data_i120_i_pre_phi = $m_data_i31;
           } else {
            $m_data_i120_i_pre_phi = $connections | 0;
           }
           HEAP32[$m_size_i >> 2] = $add_i118_i;
           $48 = HEAP32[$m_data_i120_i_pre_phi >> 2] | 0;
           HEAP32[$48 + ($22 << 2) >> 2] = $conv_i;
           $x_addr_0_i = $x_0459;
           $y_addr_0_i = $y_0462;
           $i_addr_0_i = $i11_0455;
           $dir_addr_0_i = $dir_0447;
           $curReg_1_i = $curReg_0_i;
           $iter_0_i = 0;
           $49 = $48;
           while (1) {
            $inc_i203 = $iter_0_i + 1 | 0;
            if (($inc_i203 | 0) >= 4e4) {
             $82 = $49;
             break;
            }
            $and_i_i_i = (HEAP32[(HEAP32[$spans_i >> 2] | 0) + ($i_addr_0_i << 3) + 4 >> 2] & 16777215) >>> (($dir_addr_0_i * 6 | 0) >>> 0) & 63;
            $cmp_i111_i = ($and_i_i_i | 0) == 63;
            if ($cmp_i111_i) {
             $r_0_i_i = 0;
            } else {
             $and_i16_i_i = $dir_addr_0_i & 3;
             $add4_i_i = (HEAP32[11520 + ($and_i16_i_i << 2) >> 2] | 0) + $x_addr_0_i + (Math_imul((HEAP32[11504 + ($and_i16_i_i << 2) >> 2] | 0) + $y_addr_0_i | 0, HEAP32[$width >> 2] | 0) | 0) | 0;
             $r_0_i_i = HEAPU16[$srcReg + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add4_i_i << 2) >> 2] & 16777215) + $and_i_i_i << 1) >> 1] | 0;
            }
            if (($r_0_i_i | 0) == (HEAPU16[$srcReg + ($i_addr_0_i << 1) >> 1] | 0)) {
             $and_i88_i = $dir_addr_0_i & 3;
             $add43_i = (HEAP32[11520 + ($and_i88_i << 2) >> 2] | 0) + $x_addr_0_i | 0;
             $add45_i = (HEAP32[11504 + ($and_i88_i << 2) >> 2] | 0) + $y_addr_0_i | 0;
             if ($cmp_i111_i) {
              break L21;
             }
             $add51_i = (Math_imul(HEAP32[$width >> 2] | 0, $add45_i) | 0) + $add43_i | 0;
             $add57_i = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add51_i << 2) >> 2] & 16777215) + $and_i_i_i | 0;
             if (($add57_i | 0) == -1) {
              break L21;
             }
             $x_addr_1_i = $add43_i;
             $y_addr_1_i = $add45_i;
             $i_addr_1_i = $add57_i;
             $dir_addr_1_in_i = $dir_addr_0_i + 3 | 0;
             $curReg_3_i = $curReg_1_i;
             $81 = $49;
            } else {
             if ($cmp_i111_i) {
              $r_0_i204 = 0;
             } else {
              $and_i103_i = $dir_addr_0_i & 3;
              $add26_i = (HEAP32[11520 + ($and_i103_i << 2) >> 2] | 0) + $x_addr_0_i + (Math_imul((HEAP32[11504 + ($and_i103_i << 2) >> 2] | 0) + $y_addr_0_i | 0, HEAP32[$width >> 2] | 0) | 0) | 0;
              $r_0_i204 = HEAP16[$srcReg + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add26_i << 2) >> 2] & 16777215) + $and_i_i_i << 1) >> 1] | 0;
             }
             if ($r_0_i204 << 16 >> 16 == $curReg_1_i << 16 >> 16) {
              $curReg_2_i = $curReg_1_i;
              $75 = $49;
             } else {
              $conv35_i = $r_0_i204 & 65535;
              $65 = HEAP32[$m_size_i >> 2] | 0;
              $add_i_i205 = $65 + 1 | 0;
              $66 = HEAP32[$m_cap_i11 >> 2] | 0;
              if (($66 | 0) < ($add_i_i205 | 0)) {
               if (($66 | 0) == 0) {
                HEAP32[$m_cap_i11 >> 2] = $add_i_i205;
                $_lcssa_i54 = $add_i_i205;
               } else {
                $67 = $66;
                do {
                 $67 = $67 << 1;
                } while (($67 | 0) < ($add_i_i205 | 0));
                HEAP32[$m_cap_i11 >> 2] = $67;
                $_lcssa_i54 = $67;
               }
               $call_i1_i56 = _malloc($_lcssa_i54 << 2) | 0;
               $68 = $call_i1_i56;
               $69 = HEAP32[$m_size_i >> 2] | 0;
               if (($69 | 0) != 0 & ($call_i1_i56 | 0) != 0) {
                _memcpy($call_i1_i56 | 0, HEAP32[$m_data_i120_i_pre_phi >> 2] | 0, $69 << 2) | 0;
               }
               $72 = HEAP32[$m_data_i120_i_pre_phi >> 2] | 0;
               if (($72 | 0) != 0) {
                _free($72);
               }
               HEAP32[$m_data_i120_i_pre_phi >> 2] = $68;
               $74 = $68;
              } else {
               $74 = $49;
              }
              HEAP32[$m_size_i >> 2] = $add_i_i205;
              HEAP32[$74 + ($65 << 2) >> 2] = $conv35_i;
              $curReg_2_i = $r_0_i204;
              $75 = $74;
             }
             $x_addr_1_i = $x_addr_0_i;
             $y_addr_1_i = $y_addr_0_i;
             $i_addr_1_i = $i_addr_0_i;
             $dir_addr_1_in_i = $dir_addr_0_i + 1 | 0;
             $curReg_3_i = $curReg_2_i;
             $81 = $75;
            }
            $dir_addr_1_i = $dir_addr_1_in_i & 3;
            if (($i_addr_1_i | 0) == ($i11_0455 | 0) & ($dir_addr_1_i | 0) == ($dir_0447 | 0)) {
             $82 = $81;
             break;
            } else {
             $x_addr_0_i = $x_addr_1_i;
             $y_addr_0_i = $y_addr_1_i;
             $i_addr_0_i = $i_addr_1_i;
             $dir_addr_0_i = $dir_addr_1_i;
             $curReg_1_i = $curReg_3_i;
             $iter_0_i = $inc_i203;
             $49 = $81;
            }
           }
           $83 = HEAP32[$m_size_i >> 2] | 0;
           if (($83 | 0) > 1) {
            $j_0_ph138_i = 0;
            $84 = $83;
            while (1) {
             $j_0_ph138_i$looptemp = $j_0_ph138_i;
             $j_0_ph138_i = $j_0_ph138_i + 1 | 0;
             $arrayidx_i70_i = $82 + ($j_0_ph138_i$looptemp << 2) | 0;
             $85 = $84;
             while (1) {
              if ((HEAP32[$arrayidx_i70_i >> 2] | 0) != (HEAP32[$82 + ((($j_0_ph138_i | 0) % ($85 | 0) | 0) << 2) >> 2] | 0)) {
               break;
              }
              $sub131_i = $85 - 1 | 0;
              if (($j_0_ph138_i$looptemp | 0) < ($sub131_i | 0)) {
               $k_0133_i = $j_0_ph138_i$looptemp;
               while (1) {
                $add84_i = $k_0133_i + 1 | 0;
                HEAP32[$82 + ($k_0133_i << 2) >> 2] = HEAP32[$82 + ($add84_i << 2) >> 2];
                $89 = HEAP32[$m_size_i >> 2] | 0;
                $sub_i = $89 - 1 | 0;
                if (($add84_i | 0) < ($sub_i | 0)) {
                 $k_0133_i = $add84_i;
                } else {
                 $sub_lcssa_i = $sub_i;
                 $90 = $89;
                 break;
                }
               }
              } else {
               $sub_lcssa_i = $sub131_i;
               $90 = $85;
              }
              if (($90 | 0) > 0) {
               HEAP32[$m_size_i >> 2] = $sub_lcssa_i;
               $91 = $sub_lcssa_i;
              } else {
               $91 = $90;
              }
              if (($j_0_ph138_i$looptemp | 0) < ($91 | 0)) {
               $85 = $91;
              } else {
               break L21;
              }
             }
             if (($j_0_ph138_i | 0) >= ($85 | 0)) {
              break;
             } else {
              $84 = $85;
             }
            }
           }
          }
         }
        }
       } while (0);
       $i11_0455 = $i11_0455 + 1 | 0;
      } while (($i11_0455 | 0) < ($add15 | 0));
     }
     $x_0459 = $x_0459 + 1 | 0;
    } while (($x_0459 | 0) < ($0 | 0));
   }
   $y_0462 = $y_0462 + 1 | 0;
  } while (($y_0462 | 0) < ($1 | 0));
 }
 $stack_sroa_17 = 0;
 $92 = _malloc(128) | 0;
 $stack_sroa_17 = 32;
 $trace_sroa_13 = 0;
 $trace_sroa_13 = 32;
 $i75_0443 = 0;
 $trace_sroa_0_0 = _malloc(128) | 0;
 $trace_sroa_25_0 = 32;
 $stack_sroa_0_0 = $92;
 $stack_sroa_36_0 = 32;
 $stack_sroa_17_0_load546 = 32;
 while (1) {
  if ((HEAP16[$3 + ($i75_0443 * 36 | 0) + 4 >> 1] | 0) < 1) {
   $trace_sroa_0_5 = $trace_sroa_0_0;
   $trace_sroa_25_6 = $trace_sroa_25_0;
   $stack_sroa_0_9 = $stack_sroa_0_0;
   $stack_sroa_36_11 = $stack_sroa_36_0;
   $stack_sroa_17_0_load546573 = $stack_sroa_17_0_load546;
  } else {
   if ((HEAP32[$3 + ($i75_0443 * 36 | 0) >> 2] | 0) == 0) {
    $trace_sroa_0_5 = $trace_sroa_0_0;
    $trace_sroa_25_6 = $trace_sroa_25_0;
    $stack_sroa_0_9 = $stack_sroa_0_0;
    $stack_sroa_36_11 = $stack_sroa_36_0;
    $stack_sroa_17_0_load546573 = $stack_sroa_17_0_load546;
   } else {
    $visited = $3 + ($i75_0443 * 36 | 0) + 8 | 0;
    if ((HEAP8[$visited >> 0] | 0) == 0) {
     if (($stack_sroa_36_0 | 0) < 0) {
      $98 = $stack_sroa_36_0;
      while (1) {
       $mul_i140 = $98 << 1;
       if (($98 | 0) < 0) {
        $98 = $mul_i140;
       } else {
        break;
       }
      }
      $call_i1_i146 = _malloc($98 << 3) | 0;
      $99 = $call_i1_i146;
      if (($stack_sroa_17_0_load546 | 0) != 0 & ($call_i1_i146 | 0) != 0) {
       _memcpy($call_i1_i146 | 0, $stack_sroa_0_0 | 0, $stack_sroa_17_0_load546 << 2) | 0;
      }
      if (($stack_sroa_0_0 | 0) == 0) {
       $stack_sroa_0_1 = $99;
       $stack_sroa_36_1 = $mul_i140;
      } else {
       _free($stack_sroa_0_0);
       $stack_sroa_0_1 = $99;
       $stack_sroa_36_1 = $mul_i140;
      }
     } else {
      $stack_sroa_0_1 = $stack_sroa_0_0;
      $stack_sroa_36_1 = $stack_sroa_36_0;
     }
     $stack_sroa_17 = 0;
     if (($trace_sroa_25_0 | 0) < 0) {
      $102 = $trace_sroa_25_0;
      while (1) {
       $mul_i170 = $102 << 1;
       if (($102 | 0) < 0) {
        $102 = $mul_i170;
       } else {
        break;
       }
      }
      $call_i1_i176 = _malloc($102 << 3) | 0;
      $103 = $call_i1_i176;
      $trace_sroa_13_0_load511 = $trace_sroa_13;
      if (($trace_sroa_13_0_load511 | 0) != 0 & ($call_i1_i176 | 0) != 0) {
       _memcpy($call_i1_i176 | 0, $trace_sroa_0_0 | 0, $trace_sroa_13_0_load511 << 2) | 0;
      }
      if (($trace_sroa_0_0 | 0) == 0) {
       $trace_sroa_0_1 = $103;
       $trace_sroa_25_1 = $mul_i170;
      } else {
       _free($trace_sroa_0_0);
       $trace_sroa_0_1 = $103;
       $trace_sroa_25_1 = $mul_i170;
      }
     } else {
      $trace_sroa_0_1 = $trace_sroa_0_0;
      $trace_sroa_25_1 = $trace_sroa_25_0;
     }
     $trace_sroa_13 = 0;
     HEAP8[$visited >> 0] = 1;
     if (($stack_sroa_36_1 | 0) < 1) {
      if (($stack_sroa_36_1 | 0) == 0) {
       $_lcssa_i204 = 4;
       $stack_sroa_36_2 = 1;
      } else {
       $106 = $stack_sroa_36_1;
       while (1) {
        $mul_i200 = $106 << 1;
        if (($106 | 0) < 1) {
         $106 = $mul_i200;
        } else {
         break;
        }
       }
       $_lcssa_i204 = $106 << 3;
       $stack_sroa_36_2 = $mul_i200;
      }
      $107 = _malloc($_lcssa_i204) | 0;
      if (($stack_sroa_0_1 | 0) == 0) {
       $stack_sroa_0_2 = $107;
       $stack_sroa_36_3 = $stack_sroa_36_2;
      } else {
       _free($stack_sroa_0_1);
       $stack_sroa_0_2 = $107;
       $stack_sroa_36_3 = $stack_sroa_36_2;
      }
     } else {
      $stack_sroa_0_2 = $stack_sroa_0_1;
      $stack_sroa_36_3 = $stack_sroa_36_1;
     }
     $stack_sroa_17 = 1;
     HEAP32[$stack_sroa_0_2 >> 2] = $i75_0443;
     $stack_sroa_17_0_load542 = $stack_sroa_17;
     if (($stack_sroa_17_0_load542 | 0) == 0) {
      $connectsToBorder_0_off0_lcssa = 0;
      $spanCount96_0_lcssa = 0;
      $trace_sroa_0_4 = $trace_sroa_0_1;
      $trace_sroa_25_5 = $trace_sroa_25_1;
      $stack_sroa_0_8 = $stack_sroa_0_2;
      $stack_sroa_36_10 = $stack_sroa_36_3;
     } else {
      $connectsToBorder_0_off0435 = 0;
      $spanCount96_0436 = 0;
      $109 = $stack_sroa_17_0_load542;
      $trace_sroa_0_2 = $trace_sroa_0_1;
      $trace_sroa_25_2 = $trace_sroa_25_1;
      $stack_sroa_0_4 = $stack_sroa_0_2;
      $stack_sroa_36_5 = $stack_sroa_36_3;
      while (1) {
       if (($109 | 0) > 0) {
        $dec_i = $109 - 1 | 0;
        $stack_sroa_17 = $dec_i;
        $110 = $dec_i;
       } else {
        $110 = $109;
       }
       $111 = HEAP32[$stack_sroa_0_4 + ($110 << 2) >> 2] | 0;
       $add109 = (HEAP32[$3 + ($111 * 36 | 0) >> 2] | 0) + $spanCount96_0436 | 0;
       $trace_sroa_13_0_load515 = $trace_sroa_13;
       $add_i227 = $trace_sroa_13_0_load515 + 1 | 0;
       if (($trace_sroa_25_2 | 0) < ($add_i227 | 0)) {
        if (($trace_sroa_25_2 | 0) == 0) {
         $trace_sroa_25_3 = $add_i227;
        } else {
         $113 = $trace_sroa_25_2;
         while (1) {
          $mul_i230 = $113 << 1;
          if (($mul_i230 | 0) < ($add_i227 | 0)) {
           $113 = $mul_i230;
          } else {
           $trace_sroa_25_3 = $mul_i230;
           break;
          }
         }
        }
        $call_i1_i236 = _malloc($trace_sroa_25_3 << 2) | 0;
        $114 = $call_i1_i236;
        if (($trace_sroa_13_0_load515 | 0) != 0 & ($call_i1_i236 | 0) != 0) {
         _memcpy($call_i1_i236 | 0, $trace_sroa_0_2 | 0, $trace_sroa_13_0_load515 << 2) | 0;
        }
        if (($trace_sroa_0_2 | 0) == 0) {
         $trace_sroa_0_3 = $114;
         $trace_sroa_25_4 = $trace_sroa_25_3;
        } else {
         _free($trace_sroa_0_2);
         $trace_sroa_0_3 = $114;
         $trace_sroa_25_4 = $trace_sroa_25_3;
        }
       } else {
        $trace_sroa_0_3 = $trace_sroa_0_2;
        $trace_sroa_25_4 = $trace_sroa_25_2;
       }
       $trace_sroa_13 = $add_i227;
       HEAP32[$trace_sroa_0_3 + ($trace_sroa_13_0_load515 << 2) >> 2] = $111;
       $m_size_i232 = $3 + ($111 * 36 | 0) + 16 | 0;
       $117 = HEAP32[$m_size_i232 >> 2] | 0;
       if (($117 | 0) > 0) {
        $m_data_i236 = $3 + ($111 * 36 | 0) + 12 | 0;
        $connectsToBorder_1_off0424 = $connectsToBorder_0_off0435;
        $j111_0425 = 0;
        $118 = $117;
        $stack_sroa_0_5 = $stack_sroa_0_4;
        $stack_sroa_36_6 = $stack_sroa_36_5;
        while (1) {
         $120 = HEAP32[(HEAP32[$m_data_i236 >> 2] | 0) + ($j111_0425 << 2) >> 2] | 0;
         if (($120 & 32768 | 0) == 0) {
          $visited129 = $3 + ($120 * 36 | 0) + 8 | 0;
          if ((HEAP8[$visited129 >> 0] | 0) == 0) {
           $122 = HEAP16[$3 + ($120 * 36 | 0) + 4 >> 1] | 0;
           $conv134 = $122 & 65535;
           if ($122 << 16 >> 16 != 0 & ($conv134 & 32768 | 0) == 0) {
            $stack_sroa_17_0_load539 = $stack_sroa_17;
            $add_i244 = $stack_sroa_17_0_load539 + 1 | 0;
            if (($stack_sroa_36_6 | 0) < ($add_i244 | 0)) {
             if (($stack_sroa_36_6 | 0) == 0) {
              $stack_sroa_36_7 = $add_i244;
             } else {
              $123 = $stack_sroa_36_6;
              while (1) {
               $mul_i263 = $123 << 1;
               if (($mul_i263 | 0) < ($add_i244 | 0)) {
                $123 = $mul_i263;
               } else {
                $stack_sroa_36_7 = $mul_i263;
                break;
               }
              }
             }
             $call_i1_i269 = _malloc($stack_sroa_36_7 << 2) | 0;
             $124 = $call_i1_i269;
             if (($stack_sroa_17_0_load539 | 0) != 0 & ($call_i1_i269 | 0) != 0) {
              _memcpy($call_i1_i269 | 0, $stack_sroa_0_5 | 0, $stack_sroa_17_0_load539 << 2) | 0;
             }
             if (($stack_sroa_0_5 | 0) == 0) {
              $stack_sroa_0_6 = $124;
              $stack_sroa_36_8 = $stack_sroa_36_7;
             } else {
              _free($stack_sroa_0_5);
              $stack_sroa_0_6 = $124;
              $stack_sroa_36_8 = $stack_sroa_36_7;
             }
            } else {
             $stack_sroa_0_6 = $stack_sroa_0_5;
             $stack_sroa_36_8 = $stack_sroa_36_6;
            }
            $stack_sroa_17 = $add_i244;
            HEAP32[$stack_sroa_0_6 + ($stack_sroa_17_0_load539 << 2) >> 2] = $conv134;
            HEAP8[$visited129 >> 0] = 1;
            $connectsToBorder_2_off0 = $connectsToBorder_1_off0424;
            $127 = HEAP32[$m_size_i232 >> 2] | 0;
            $stack_sroa_0_7 = $stack_sroa_0_6;
            $stack_sroa_36_9 = $stack_sroa_36_8;
           } else {
            $connectsToBorder_2_off0 = $connectsToBorder_1_off0424;
            $127 = $118;
            $stack_sroa_0_7 = $stack_sroa_0_5;
            $stack_sroa_36_9 = $stack_sroa_36_6;
           }
          } else {
           $connectsToBorder_2_off0 = $connectsToBorder_1_off0424;
           $127 = $118;
           $stack_sroa_0_7 = $stack_sroa_0_5;
           $stack_sroa_36_9 = $stack_sroa_36_6;
          }
         } else {
          $connectsToBorder_2_off0 = 1;
          $127 = $118;
          $stack_sroa_0_7 = $stack_sroa_0_5;
          $stack_sroa_36_9 = $stack_sroa_36_6;
         }
         $inc148 = $j111_0425 + 1 | 0;
         if (($inc148 | 0) < ($127 | 0)) {
          $connectsToBorder_1_off0424 = $connectsToBorder_2_off0;
          $j111_0425 = $inc148;
          $118 = $127;
          $stack_sroa_0_5 = $stack_sroa_0_7;
          $stack_sroa_36_6 = $stack_sroa_36_9;
         } else {
          $connectsToBorder_1_off0_lcssa = $connectsToBorder_2_off0;
          $stack_sroa_0_3 = $stack_sroa_0_7;
          $stack_sroa_36_4 = $stack_sroa_36_9;
          break;
         }
        }
       } else {
        $connectsToBorder_1_off0_lcssa = $connectsToBorder_0_off0435;
        $stack_sroa_0_3 = $stack_sroa_0_4;
        $stack_sroa_36_4 = $stack_sroa_36_5;
       }
       $stack_sroa_17_0_load541 = $stack_sroa_17;
       if (($stack_sroa_17_0_load541 | 0) == 0) {
        $connectsToBorder_0_off0_lcssa = $connectsToBorder_1_off0_lcssa;
        $spanCount96_0_lcssa = $add109;
        $trace_sroa_0_4 = $trace_sroa_0_3;
        $trace_sroa_25_5 = $trace_sroa_25_4;
        $stack_sroa_0_8 = $stack_sroa_0_3;
        $stack_sroa_36_10 = $stack_sroa_36_4;
        break;
       } else {
        $connectsToBorder_0_off0435 = $connectsToBorder_1_off0_lcssa;
        $spanCount96_0436 = $add109;
        $109 = $stack_sroa_17_0_load541;
        $trace_sroa_0_2 = $trace_sroa_0_3;
        $trace_sroa_25_2 = $trace_sroa_25_4;
        $stack_sroa_0_4 = $stack_sroa_0_3;
        $stack_sroa_36_5 = $stack_sroa_36_4;
       }
      }
     }
     if (($spanCount96_0_lcssa | 0) >= ($minRegionArea | 0) | $connectsToBorder_0_off0_lcssa) {
      $trace_sroa_0_5 = $trace_sroa_0_4;
      $trace_sroa_25_6 = $trace_sroa_25_5;
      $stack_sroa_0_9 = $stack_sroa_0_8;
      $stack_sroa_36_11 = $stack_sroa_36_10;
      $stack_sroa_17_0_load546573 = 0;
     } else {
      $trace_sroa_13_0_load512 = $trace_sroa_13;
      if (($trace_sroa_13_0_load512 | 0) > 0) {
       $j153_0440 = 0;
       while (1) {
        $arrayidx_i252 = $trace_sroa_0_4 + ($j153_0440 << 2) | 0;
        HEAP32[$3 + ((HEAP32[$arrayidx_i252 >> 2] | 0) * 36 | 0) >> 2] = 0;
        HEAP16[$3 + ((HEAP32[$arrayidx_i252 >> 2] | 0) * 36 | 0) + 4 >> 1] = 0;
        $inc168 = $j153_0440 + 1 | 0;
        if (($inc168 | 0) < ($trace_sroa_13_0_load512 | 0)) {
         $j153_0440 = $inc168;
        } else {
         $trace_sroa_0_5 = $trace_sroa_0_4;
         $trace_sroa_25_6 = $trace_sroa_25_5;
         $stack_sroa_0_9 = $stack_sroa_0_8;
         $stack_sroa_36_11 = $stack_sroa_36_10;
         $stack_sroa_17_0_load546573 = 0;
         break;
        }
       }
      } else {
       $trace_sroa_0_5 = $trace_sroa_0_4;
       $trace_sroa_25_6 = $trace_sroa_25_5;
       $stack_sroa_0_9 = $stack_sroa_0_8;
       $stack_sroa_36_11 = $stack_sroa_36_10;
       $stack_sroa_17_0_load546573 = 0;
      }
     }
    } else {
     $trace_sroa_0_5 = $trace_sroa_0_0;
     $trace_sroa_25_6 = $trace_sroa_25_0;
     $stack_sroa_0_9 = $stack_sroa_0_0;
     $stack_sroa_36_11 = $stack_sroa_36_0;
     $stack_sroa_17_0_load546573 = $stack_sroa_17_0_load546;
    }
   }
  }
  $inc172 = $i75_0443 + 1 | 0;
  if (($inc172 | 0) < ($add | 0)) {
   $i75_0443 = $inc172;
   $trace_sroa_0_0 = $trace_sroa_0_5;
   $trace_sroa_25_0 = $trace_sroa_25_6;
   $stack_sroa_0_0 = $stack_sroa_0_9;
   $stack_sroa_36_0 = $stack_sroa_36_11;
   $stack_sroa_17_0_load546 = $stack_sroa_17_0_load546573;
  } else {
   $i174_0 = 0;
   $mergeCount_0 = 0;
   break;
  }
 }
 while (1) {
  if (($i174_0 | 0) >= ($add | 0)) {
   if (($mergeCount_0 | 0) > 0) {
    $i174_0 = 0;
    $mergeCount_0 = 0;
    continue;
   } else {
    $i293_0397 = 0;
    break;
   }
  }
  $130 = HEAP16[$3 + ($i174_0 * 36 | 0) + 4 >> 1] | 0;
  L214 : do {
   if ($130 << 16 >> 16 < 1) {
    $mergeCount_1 = $mergeCount_0;
   } else {
    $spanCount190 = $3 + ($i174_0 * 36 | 0) | 0;
    $132 = HEAP32[$spanCount190 >> 2] | 0;
    if (($132 | 0) == 0) {
     $mergeCount_1 = $mergeCount_0;
    } else {
     $m_size_i_i255 = $3 + ($i174_0 * 36 | 0) + 16 | 0;
     $133 = HEAP32[$m_size_i_i255 >> 2] | 0;
     if (($132 | 0) > ($mergeRegionSize | 0)) {
      if (($133 | 0) <= 0) {
       $mergeCount_1 = $mergeCount_0;
       break;
      }
      $134 = HEAP32[$3 + ($i174_0 * 36 | 0) + 12 >> 2] | 0;
      $i_05_i = 0;
      do {
       $i_05_i$looptemp = $i_05_i;
       $i_05_i = $i_05_i + 1 | 0;
       if ((HEAP32[$134 + ($i_05_i$looptemp << 2) >> 2] | 0) == 0) {
        $mergeCount_1 = $mergeCount_0;
        break L214;
       }
      } while (($i_05_i | 0) < ($133 | 0));
     }
     if (($133 | 0) > 0) {
      $136 = HEAP32[$3 + ($i174_0 * 36 | 0) + 12 >> 2] | 0;
      $areaType_i338 = $3 + ($i174_0 * 36 | 0) + 6 | 0;
      $m_size_i12_i = $3 + ($i174_0 * 36 | 0) + 28 | 0;
      $m_data_i_i349 = $3 + ($i174_0 * 36 | 0) + 24 | 0;
      $conv6_i360 = $130 & 65535;
      $smallest_0400 = 268435455;
      $mergeId_0401 = $130;
      $j202_0402 = 0;
      while (1) {
       $137 = HEAP32[$136 + ($j202_0402 << 2) >> 2] | 0;
       L227 : do {
        if (($137 & 32768 | 0) == 0) {
         $138 = HEAP16[$3 + ($137 * 36 | 0) + 4 >> 1] | 0;
         if ($138 << 16 >> 16 < 1) {
          $mergeId_1 = $mergeId_0401;
          $smallest_1 = $smallest_0400;
         } else {
          $140 = HEAP32[$3 + ($137 * 36 | 0) >> 2] | 0;
          if (($140 | 0) < ($smallest_0400 | 0)) {
           if ((HEAP8[$areaType_i338 >> 0] | 0) == (HEAP8[$3 + ($137 * 36 | 0) + 6 >> 0] | 0)) {
            $conv6_i = $138 & 65535;
            $n_018_i = 0;
            $i_019_i = 0;
            do {
             $n_018_i = ((HEAP32[$136 + ($i_019_i << 2) >> 2] | 0) == ($conv6_i | 0)) + $n_018_i | 0;
             $i_019_i = $i_019_i + 1 | 0;
            } while (($i_019_i | 0) < ($133 | 0));
            if (($n_018_i | 0) > 1) {
             $mergeId_1 = $mergeId_0401;
             $smallest_1 = $smallest_0400;
            } else {
             $144 = HEAP32[$m_size_i12_i >> 2] | 0;
             if (($144 | 0) > 0) {
              $145 = HEAP32[$m_data_i_i349 >> 2] | 0;
              $i14_016_i = 0;
              do {
               $i14_016_i$looptemp = $i14_016_i;
               $i14_016_i = $i14_016_i + 1 | 0;
               if ((HEAP32[$145 + ($i14_016_i$looptemp << 2) >> 2] | 0) == ($conv6_i | 0)) {
                $mergeId_1 = $mergeId_0401;
                $smallest_1 = $smallest_0400;
                break L227;
               }
              } while (($i14_016_i | 0) < ($144 | 0));
             }
             $147 = HEAP32[$3 + ($137 * 36 | 0) + 16 >> 2] | 0;
             if (($147 | 0) > 0) {
              $148 = HEAP32[$3 + ($137 * 36 | 0) + 12 >> 2] | 0;
              $n_018_i363 = 0;
              $i_019_i362 = 0;
              do {
               $n_018_i363 = ((HEAP32[$148 + ($i_019_i362 << 2) >> 2] | 0) == ($conv6_i360 | 0)) + $n_018_i363 | 0;
               $i_019_i362 = $i_019_i362 + 1 | 0;
              } while (($i_019_i362 | 0) < ($147 | 0));
              if (($n_018_i363 | 0) > 1) {
               $mergeId_1 = $mergeId_0401;
               $smallest_1 = $smallest_0400;
               break;
              }
             }
             $150 = HEAP32[$3 + ($137 * 36 | 0) + 28 >> 2] | 0;
             if (($150 | 0) > 0) {
              $151 = HEAP32[$3 + ($137 * 36 | 0) + 24 >> 2] | 0;
              $i14_016_i382 = 0;
              while (1) {
               $inc27_i385 = $i14_016_i382 + 1 | 0;
               if ((HEAP32[$151 + ($i14_016_i382 << 2) >> 2] | 0) == ($conv6_i360 | 0)) {
                $mergeId_1 = $mergeId_0401;
                $smallest_1 = $smallest_0400;
                break L227;
               }
               if (($inc27_i385 | 0) < ($150 | 0)) {
                $i14_016_i382 = $inc27_i385;
               } else {
                $mergeId_1 = $138;
                $smallest_1 = $140;
                break;
               }
              }
             } else {
              $mergeId_1 = $138;
              $smallest_1 = $140;
             }
            }
           } else {
            $mergeId_1 = $mergeId_0401;
            $smallest_1 = $smallest_0400;
           }
          } else {
           $mergeId_1 = $mergeId_0401;
           $smallest_1 = $smallest_0400;
          }
         }
        } else {
         $mergeId_1 = $mergeId_0401;
         $smallest_1 = $smallest_0400;
        }
       } while (0);
       $j202_0402 = $j202_0402 + 1 | 0;
       if (($j202_0402 | 0) >= ($133 | 0)) {
        break;
       } else {
        $smallest_0400 = $smallest_1;
        $mergeId_0401 = $mergeId_1;
       }
      }
      if ($mergeId_1 << 16 >> 16 == $130 << 16 >> 16) {
       $mergeCount_1 = $mergeCount_0;
      } else {
       $conv245 = $mergeId_1 & 65535;
       $153 = HEAP16[$3 + ($conv245 * 36 | 0) + 4 >> 1] | 0;
       $connections_i = $3 + ($conv245 * 36 | 0) + 12 | 0;
       $m_size_i36_i = $3 + ($conv245 * 36 | 0) + 16 | 0;
       $154 = HEAP32[$m_size_i36_i >> 2] | 0;
       $cmp_i285 = ($154 | 0) > 0;
       if ($cmp_i285) {
        $155 = _malloc($154 << 2) | 0;
        if ((HEAP32[$m_size_i36_i >> 2] | 0) > 0) {
         $156 = HEAP32[$connections_i >> 2] | 0;
         $i_0109_i = 0;
         while (1) {
          HEAP32[$155 + ($i_0109_i << 2) >> 2] = HEAP32[$156 + ($i_0109_i << 2) >> 2];
          $inc_i283 = $i_0109_i + 1 | 0;
          if (($inc_i283 | 0) < (HEAP32[$m_size_i36_i >> 2] | 0)) {
           $i_0109_i = $inc_i283;
          } else {
           $acon_i_sroa_0_0579 = $155;
           break;
          }
         }
         if ($cmp_i285) {
          $acon_i_sroa_0_0579581 = $acon_i_sroa_0_0579;
          label = 176;
         } else {
          $retval_0_i331 = 0;
          $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579;
         }
        } else {
         $acon_i_sroa_0_0579581 = $155;
         label = 176;
        }
        L261 : do {
         if ((label | 0) == 176) {
          label = 0;
          $i12_0107_i = 0;
          while (1) {
           $inc22_i288 = $i12_0107_i + 1 | 0;
           if ((HEAP32[$acon_i_sroa_0_0579581 + ($i12_0107_i << 2) >> 2] | 0) == ($conv6_i360 | 0)) {
            break;
           }
           if (($inc22_i288 | 0) < ($154 | 0)) {
            $i12_0107_i = $inc22_i288;
           } else {
            $retval_0_i331 = 0;
            $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
            break L261;
           }
          }
          if (($i12_0107_i | 0) == -1) {
           $retval_0_i331 = 0;
           $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
          } else {
           $160 = HEAP32[$m_size_i_i255 >> 2] | 0;
           if (($160 | 0) > 0) {
            $m_data_i75_i = $3 + ($i174_0 * 36 | 0) + 12 | 0;
            $161 = HEAP32[$m_data_i75_i >> 2] | 0;
            $conv35_i290 = $153 & 65535;
            $i27_0103_i = 0;
            while (1) {
             $inc40_i = $i27_0103_i + 1 | 0;
             if ((HEAP32[$161 + ($i27_0103_i << 2) >> 2] | 0) == ($conv35_i290 | 0)) {
              break;
             }
             if (($inc40_i | 0) < ($160 | 0)) {
              $i27_0103_i = $inc40_i;
             } else {
              $retval_0_i331 = 0;
              $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
              break L261;
             }
            }
            if (($i27_0103_i | 0) == -1) {
             $retval_0_i331 = 0;
             $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
            } else {
             $m_cap_i318 = $3 + ($conv245 * 36 | 0) + 20 | 0;
             $163 = HEAP32[$m_cap_i318 >> 2] | 0;
             if (($163 | 0) < 0) {
              $164 = $163;
              while (1) {
               $mul_i327 = $164 << 1;
               if (($164 | 0) < 0) {
                $164 = $mul_i327;
               } else {
                break;
               }
              }
              HEAP32[$m_cap_i318 >> 2] = $mul_i327;
              $call_i1_i333 = _malloc($164 << 3) | 0;
              $166 = HEAP32[$m_size_i36_i >> 2] | 0;
              $m_data_i338 = $connections_i | 0;
              if (($166 | 0) != 0 & ($call_i1_i333 | 0) != 0) {
               _memcpy($call_i1_i333 | 0, HEAP32[$m_data_i338 >> 2] | 0, $166 << 2) | 0;
              }
              $169 = HEAP32[$m_data_i338 >> 2] | 0;
              if (($169 | 0) != 0) {
               _free($169);
              }
              HEAP32[$m_data_i338 >> 2] = $call_i1_i333;
             }
             HEAP32[$m_size_i36_i >> 2] = 0;
             $sub_i292 = $154 - 1 | 0;
             L285 : do {
              if (($sub_i292 | 0) > 0) {
               $m_data_i62_i = $connections_i | 0;
               $i47_099_i = 0;
               $171 = 0;
               while (1) {
                $172 = HEAP32[$acon_i_sroa_0_0579581 + ((($i47_099_i + $inc22_i288 | 0) % ($154 | 0) | 0) << 2) >> 2] | 0;
                $add_i60_i = $171 + 1 | 0;
                $173 = HEAP32[$m_cap_i318 >> 2] | 0;
                if (($173 | 0) < ($add_i60_i | 0)) {
                 if (($173 | 0) == 0) {
                  HEAP32[$m_cap_i318 >> 2] = $add_i60_i;
                  $_lcssa_i361 = $add_i60_i;
                 } else {
                  $174 = $173;
                  do {
                   $174 = $174 << 1;
                  } while (($174 | 0) < ($add_i60_i | 0));
                  HEAP32[$m_cap_i318 >> 2] = $174;
                  $_lcssa_i361 = $174;
                 }
                 $call_i1_i363 = _malloc($_lcssa_i361 << 2) | 0;
                 $175 = $call_i1_i363;
                 $176 = HEAP32[$m_size_i36_i >> 2] | 0;
                 if (($176 | 0) != 0 & ($call_i1_i363 | 0) != 0) {
                  _memcpy($call_i1_i363 | 0, HEAP32[$m_data_i62_i >> 2] | 0, $176 << 2) | 0;
                 }
                 $179 = HEAP32[$m_data_i62_i >> 2] | 0;
                 if (($179 | 0) != 0) {
                  _free($179);
                 }
                 HEAP32[$m_data_i62_i >> 2] = $175;
                 $181 = $175;
                } else {
                 $181 = HEAP32[$m_data_i62_i >> 2] | 0;
                }
                HEAP32[$m_size_i36_i >> 2] = $add_i60_i;
                HEAP32[$181 + ($171 << 2) >> 2] = $172;
                $inc59_i = $i47_099_i + 1 | 0;
                if (($inc59_i | 0) >= ($sub_i292 | 0)) {
                 break L285;
                }
                $i47_099_i = $inc59_i;
                $171 = HEAP32[$m_size_i36_i >> 2] | 0;
               }
              }
             } while (0);
             $182 = HEAP32[$m_size_i_i255 >> 2] | 0;
             $sub66_i = $182 - 1 | 0;
             if (($sub66_i | 0) > 0) {
              $m_data_i51_i = $connections_i | 0;
              $i61_094_i = 0;
              do {
               $184 = HEAP32[(HEAP32[$m_data_i75_i >> 2] | 0) + ((($i61_094_i + $inc40_i | 0) % ($182 | 0) | 0) << 2) >> 2] | 0;
               $185 = HEAP32[$m_size_i36_i >> 2] | 0;
               $add_i49_i = $185 + 1 | 0;
               $186 = HEAP32[$m_cap_i318 >> 2] | 0;
               if (($186 | 0) < ($add_i49_i | 0)) {
                if (($186 | 0) == 0) {
                 HEAP32[$m_cap_i318 >> 2] = $add_i49_i;
                 $_lcssa_i391 = $add_i49_i;
                } else {
                 $187 = $186;
                 do {
                  $187 = $187 << 1;
                 } while (($187 | 0) < ($add_i49_i | 0));
                 HEAP32[$m_cap_i318 >> 2] = $187;
                 $_lcssa_i391 = $187;
                }
                $call_i1_i393 = _malloc($_lcssa_i391 << 2) | 0;
                $188 = $call_i1_i393;
                $189 = HEAP32[$m_size_i36_i >> 2] | 0;
                if (($189 | 0) != 0 & ($call_i1_i393 | 0) != 0) {
                 _memcpy($call_i1_i393 | 0, HEAP32[$m_data_i51_i >> 2] | 0, $189 << 2) | 0;
                }
                $192 = HEAP32[$m_data_i51_i >> 2] | 0;
                if (($192 | 0) != 0) {
                 _free($192);
                }
                HEAP32[$m_data_i51_i >> 2] = $188;
                $194 = $188;
               } else {
                $194 = HEAP32[$m_data_i51_i >> 2] | 0;
               }
               HEAP32[$m_size_i36_i >> 2] = $add_i49_i;
               HEAP32[$194 + ($185 << 2) >> 2] = $184;
               $i61_094_i = $i61_094_i + 1 | 0;
              } while (($i61_094_i | 0) < ($sub66_i | 0));
             }
             $195 = HEAP32[$m_size_i36_i >> 2] | 0;
             L328 : do {
              if (($195 | 0) > 1) {
               $196 = HEAP32[$3 + ($conv245 * 36 | 0) + 12 >> 2] | 0;
               $i_0_ph36_i_i302 = 0;
               $197 = $195;
               while (1) {
                $i_0_ph36_i_i302$looptemp = $i_0_ph36_i_i302;
                $i_0_ph36_i_i302 = $i_0_ph36_i_i302 + 1 | 0;
                $arrayidx_i23_i_i304 = $196 + ($i_0_ph36_i_i302$looptemp << 2) | 0;
                $198 = $197;
                while (1) {
                 if ((HEAP32[$arrayidx_i23_i_i304 >> 2] | 0) != (HEAP32[$196 + ((($i_0_ph36_i_i302 | 0) % ($198 | 0) | 0) << 2) >> 2] | 0)) {
                  break;
                 }
                 $sub26_i_i308 = $198 - 1 | 0;
                 if (($i_0_ph36_i_i302$looptemp | 0) < ($sub26_i_i308 | 0)) {
                  $j_028_i_i311 = $i_0_ph36_i_i302$looptemp;
                  while (1) {
                   $add17_i_i312 = $j_028_i_i311 + 1 | 0;
                   HEAP32[$196 + ($j_028_i_i311 << 2) >> 2] = HEAP32[$196 + ($add17_i_i312 << 2) >> 2];
                   $202 = HEAP32[$m_size_i36_i >> 2] | 0;
                   $sub_i_i315 = $202 - 1 | 0;
                   if (($add17_i_i312 | 0) < ($sub_i_i315 | 0)) {
                    $j_028_i_i311 = $add17_i_i312;
                   } else {
                    $sub_lcssa_i_i318 = $sub_i_i315;
                    $203 = $202;
                    break;
                   }
                  }
                 } else {
                  $sub_lcssa_i_i318 = $sub26_i_i308;
                  $203 = $198;
                 }
                 if (($203 | 0) <= 0) {
                  break L328;
                 }
                 HEAP32[$m_size_i36_i >> 2] = $sub_lcssa_i_i318;
                 if (($i_0_ph36_i_i302$looptemp | 0) < ($sub_lcssa_i_i318 | 0) & ($sub_lcssa_i_i318 | 0) > 1) {
                  $198 = $sub_lcssa_i_i318;
                 } else {
                  break L328;
                 }
                }
                if (!(($i_0_ph36_i_i302 | 0) < ($198 | 0) & ($198 | 0) > 1)) {
                 break;
                } else {
                 $197 = $198;
                }
               }
              }
             } while (0);
             $204 = HEAP32[$m_size_i12_i >> 2] | 0;
             if (($204 | 0) > 0) {
              $m_size_i_i_i = $3 + ($conv245 * 36 | 0) + 28 | 0;
              $m_data_i6_i_i = $3 + ($conv245 * 36 | 0) + 24 | 0;
              $m_cap_i408 = $3 + ($conv245 * 36 | 0) + 32 | 0;
              $j_086_i = 0;
              $205 = $204;
              while (1) {
               $207 = HEAP32[(HEAP32[$m_data_i_i349 >> 2] | 0) + ($j_086_i << 2) >> 2] | 0;
               $208 = HEAP32[$m_size_i_i_i >> 2] | 0;
               L346 : do {
                if (($208 | 0) > 0) {
                 $209 = HEAP32[$m_data_i6_i_i >> 2] | 0;
                 $i_012_i_i = 0;
                 while (1) {
                  $inc_i_i = $i_012_i_i + 1 | 0;
                  if ((HEAP32[$209 + ($i_012_i_i << 2) >> 2] | 0) == ($207 | 0)) {
                   $220 = $205;
                   break L346;
                  }
                  if (($inc_i_i | 0) < ($208 | 0)) {
                   $i_012_i_i = $inc_i_i;
                  } else {
                   label = 236;
                   break;
                  }
                 }
                } else {
                 label = 236;
                }
               } while (0);
               if ((label | 0) == 236) {
                label = 0;
                $add_i_i_i = $208 + 1 | 0;
                $211 = HEAP32[$m_cap_i408 >> 2] | 0;
                if (($211 | 0) < ($add_i_i_i | 0)) {
                 if (($211 | 0) == 0) {
                  HEAP32[$m_cap_i408 >> 2] = $add_i_i_i;
                  $_lcssa_i421 = $add_i_i_i;
                 } else {
                  $212 = $211;
                  do {
                   $212 = $212 << 1;
                  } while (($212 | 0) < ($add_i_i_i | 0));
                  HEAP32[$m_cap_i408 >> 2] = $212;
                  $_lcssa_i421 = $212;
                 }
                 $call_i1_i423 = _malloc($_lcssa_i421 << 2) | 0;
                 $213 = $call_i1_i423;
                 $214 = HEAP32[$m_size_i_i_i >> 2] | 0;
                 if (($214 | 0) != 0 & ($call_i1_i423 | 0) != 0) {
                  _memcpy($call_i1_i423 | 0, HEAP32[$m_data_i6_i_i >> 2] | 0, $214 << 2) | 0;
                 }
                 $217 = HEAP32[$m_data_i6_i_i >> 2] | 0;
                 if (($217 | 0) != 0) {
                  _free($217);
                 }
                 HEAP32[$m_data_i6_i_i >> 2] = $213;
                 $219 = $213;
                } else {
                 $219 = HEAP32[$m_data_i6_i_i >> 2] | 0;
                }
                HEAP32[$m_size_i_i_i >> 2] = $add_i_i_i;
                HEAP32[$219 + ($208 << 2) >> 2] = $207;
                $220 = HEAP32[$m_size_i12_i >> 2] | 0;
               }
               $j_086_i = $j_086_i + 1 | 0;
               if (($j_086_i | 0) >= ($220 | 0)) {
                break;
               } else {
                $205 = $220;
               }
              }
             }
             $spanCount92_i = $3 + ($conv245 * 36 | 0) | 0;
             HEAP32[$spanCount92_i >> 2] = (HEAP32[$spanCount92_i >> 2] | 0) + (HEAP32[$spanCount190 >> 2] | 0);
             HEAP32[$spanCount190 >> 2] = 0;
             $m_cap_i438 = $3 + ($i174_0 * 36 | 0) + 20 | 0;
             $223 = HEAP32[$m_cap_i438 >> 2] | 0;
             if (($223 | 0) < 0) {
              $224 = $223;
              while (1) {
               $mul_i447 = $224 << 1;
               if (($224 | 0) < 0) {
                $224 = $mul_i447;
               } else {
                break;
               }
              }
              HEAP32[$m_cap_i438 >> 2] = $mul_i447;
              $call_i1_i453 = _malloc($224 << 3) | 0;
              $226 = HEAP32[$m_size_i_i255 >> 2] | 0;
              if (($226 | 0) != 0 & ($call_i1_i453 | 0) != 0) {
               _memcpy($call_i1_i453 | 0, HEAP32[$m_data_i75_i >> 2] | 0, $226 << 2) | 0;
              }
              $229 = HEAP32[$m_data_i75_i >> 2] | 0;
              if (($229 | 0) != 0) {
               _free($229);
              }
              HEAP32[$m_data_i75_i >> 2] = $call_i1_i453;
             }
             HEAP32[$m_size_i_i255 >> 2] = 0;
             $retval_0_i331 = 1;
             $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
            }
           } else {
            $retval_0_i331 = 0;
            $acon_i_sroa_0_0580 = $acon_i_sroa_0_0579581;
           }
          }
         }
        } while (0);
        if (($acon_i_sroa_0_0580 | 0) == 0) {
         if ($retval_0_i331) {
          $j256_0415 = 0;
         } else {
          $mergeCount_1 = $mergeCount_0;
          break;
         }
        } else {
         _free($acon_i_sroa_0_0580);
         if ($retval_0_i331) {
          $j256_0415 = 0;
         } else {
          $mergeCount_1 = $mergeCount_0;
          break;
         }
        }
        do {
         $id261 = $3 + ($j256_0415 * 36 | 0) + 4 | 0;
         $232 = HEAP16[$id261 >> 1] | 0;
         L388 : do {
          if ($232 << 16 >> 16 > 0) {
           if ($232 << 16 >> 16 == $130 << 16 >> 16) {
            HEAP16[$id261 >> 1] = $mergeId_1;
           }
           $m_size_i_i265 = $3 + ($j256_0415 * 36 | 0) + 16 | 0;
           $234 = HEAP32[$m_size_i_i265 >> 2] | 0;
           if (($234 | 0) > 0) {
            $235 = HEAP32[$3 + ($j256_0415 * 36 | 0) + 12 >> 2] | 0;
            $neiChanged_0_off032_i = 0;
            $i_033_i = 0;
            $238 = $234;
            while (1) {
             $arrayidx_i22_i = $235 + ($i_033_i << 2) | 0;
             if ((HEAP32[$arrayidx_i22_i >> 2] | 0) == ($conv6_i360 | 0)) {
              HEAP32[$arrayidx_i22_i >> 2] = $conv245;
              $neiChanged_1_off0_i = 1;
              $240 = HEAP32[$m_size_i_i265 >> 2] | 0;
             } else {
              $neiChanged_1_off0_i = $neiChanged_0_off032_i;
              $240 = $238;
             }
             $inc_i271 = $i_033_i + 1 | 0;
             if (($inc_i271 | 0) < ($240 | 0)) {
              $neiChanged_0_off032_i = $neiChanged_1_off0_i;
              $i_033_i = $inc_i271;
              $238 = $240;
             } else {
              $neiChanged_0_off0_lcssa_i = $neiChanged_1_off0_i;
              break;
             }
            }
           } else {
            $neiChanged_0_off0_lcssa_i = 0;
           }
           $m_size_i18_i = $3 + ($j256_0415 * 36 | 0) + 28 | 0;
           $236 = HEAP32[$m_size_i18_i >> 2] | 0;
           if (($236 | 0) > 0) {
            $237 = HEAP32[$3 + ($j256_0415 * 36 | 0) + 24 >> 2] | 0;
            $i7_030_i = 0;
            $241 = $236;
            while (1) {
             $arrayidx_i17_i273 = $237 + ($i7_030_i << 2) | 0;
             if ((HEAP32[$arrayidx_i17_i273 >> 2] | 0) == ($conv6_i360 | 0)) {
              HEAP32[$arrayidx_i17_i273 >> 2] = $conv245;
              $243 = HEAP32[$m_size_i18_i >> 2] | 0;
             } else {
              $243 = $241;
             }
             $i7_030_i = $i7_030_i + 1 | 0;
             if (($i7_030_i | 0) >= ($243 | 0)) {
              break;
             } else {
              $241 = $243;
             }
            }
           }
           if ($neiChanged_0_off0_lcssa_i) {
            $244 = HEAP32[$m_size_i_i265 >> 2] | 0;
            if (($244 | 0) > 1) {
             $245 = HEAP32[$3 + ($j256_0415 * 36 | 0) + 12 >> 2] | 0;
             $i_0_ph36_i_i = 0;
             $246 = $244;
             while (1) {
              $i_0_ph36_i_i$looptemp = $i_0_ph36_i_i;
              $i_0_ph36_i_i = $i_0_ph36_i_i + 1 | 0;
              $arrayidx_i23_i_i = $245 + ($i_0_ph36_i_i$looptemp << 2) | 0;
              $247 = $246;
              while (1) {
               if ((HEAP32[$arrayidx_i23_i_i >> 2] | 0) != (HEAP32[$245 + ((($i_0_ph36_i_i | 0) % ($247 | 0) | 0) << 2) >> 2] | 0)) {
                break;
               }
               $sub26_i_i = $247 - 1 | 0;
               if (($i_0_ph36_i_i$looptemp | 0) < ($sub26_i_i | 0)) {
                $j_028_i_i = $i_0_ph36_i_i$looptemp;
                while (1) {
                 $add17_i_i = $j_028_i_i + 1 | 0;
                 HEAP32[$245 + ($j_028_i_i << 2) >> 2] = HEAP32[$245 + ($add17_i_i << 2) >> 2];
                 $251 = HEAP32[$m_size_i_i265 >> 2] | 0;
                 $sub_i_i276 = $251 - 1 | 0;
                 if (($add17_i_i | 0) < ($sub_i_i276 | 0)) {
                  $j_028_i_i = $add17_i_i;
                 } else {
                  $sub_lcssa_i_i = $sub_i_i276;
                  $252 = $251;
                  break;
                 }
                }
               } else {
                $sub_lcssa_i_i = $sub26_i_i;
                $252 = $247;
               }
               if (($252 | 0) <= 0) {
                break L388;
               }
               HEAP32[$m_size_i_i265 >> 2] = $sub_lcssa_i_i;
               if (($i_0_ph36_i_i$looptemp | 0) < ($sub_lcssa_i_i | 0) & ($sub_lcssa_i_i | 0) > 1) {
                $247 = $sub_lcssa_i_i;
               } else {
                break L388;
               }
              }
              if (!(($i_0_ph36_i_i | 0) < ($247 | 0) & ($247 | 0) > 1)) {
               break;
              } else {
               $246 = $247;
              }
             }
            }
           }
          }
         } while (0);
         $j256_0415 = $j256_0415 + 1 | 0;
        } while (($j256_0415 | 0) < ($add | 0));
        $mergeCount_1 = $mergeCount_0 + 1 | 0;
       } else {
        $mergeCount_1 = $mergeCount_0;
       }
      }
     } else {
      $mergeCount_1 = $mergeCount_0;
     }
    }
   }
  } while (0);
  $i174_0 = $i174_0 + 1 | 0;
  $mergeCount_0 = $mergeCount_1;
 }
 while (1) {
  HEAP8[$3 + ($i293_0397 * 36 | 0) + 7 >> 0] = (HEAP16[$3 + ($i293_0397 * 36 | 0) + 4 >> 1] | 0) > 0 | 0;
  $inc314 = $i293_0397 + 1 | 0;
  if (($inc314 | 0) < ($add | 0)) {
   $i293_0397 = $inc314;
  } else {
   $regIdGen_0395 = 0;
   $i316_0396 = 0;
   break;
  }
 }
 while (1) {
  L429 : do {
   if ((HEAP8[$3 + ($i316_0396 * 36 | 0) + 7 >> 0] | 0) == 0) {
    $regIdGen_1 = $regIdGen_0395;
   } else {
    $255 = HEAP16[$3 + ($i316_0396 * 36 | 0) + 4 >> 1] | 0;
    $inc328 = $regIdGen_0395 + 1 & 65535;
    if (($i316_0396 | 0) < ($add | 0)) {
     $j329_0394 = $i316_0396;
     $256 = $255;
     while (1) {
      if ($256 << 16 >> 16 == $255 << 16 >> 16) {
       HEAP16[$3 + ($j329_0394 * 36 | 0) + 4 >> 1] = $inc328;
       HEAP8[$3 + ($j329_0394 * 36 | 0) + 7 >> 0] = 0;
      }
      $inc345 = $j329_0394 + 1 | 0;
      if (($inc345 | 0) >= ($add | 0)) {
       $regIdGen_1 = $inc328;
       break L429;
      }
      $j329_0394 = $inc345;
      $256 = HEAP16[$3 + ($inc345 * 36 | 0) + 4 >> 1] | 0;
     }
    } else {
     $regIdGen_1 = $inc328;
    }
   }
  } while (0);
  $i316_0396 = $i316_0396 + 1 | 0;
  if (($i316_0396 | 0) >= ($add | 0)) {
   break;
  } else {
   $regIdGen_0395 = $regIdGen_1;
  }
 }
 HEAP16[$maxRegionId >> 1] = $regIdGen_1;
 $257 = HEAP32[$chf + 8 >> 2] | 0;
 if (($257 | 0) > 0) {
  $i350_0392 = 0;
  while (1) {
   $arrayidx355 = $srcReg + ($i350_0392 << 1) | 0;
   $conv356 = HEAPU16[$arrayidx355 >> 1] | 0;
   if (($conv356 & 32768 | 0) == 0) {
    HEAP16[$arrayidx355 >> 1] = HEAP16[$3 + ($conv356 * 36 | 0) + 4 >> 1] | 0;
   }
   $inc367 = $i350_0392 + 1 | 0;
   if (($inc367 | 0) < ($257 | 0)) {
    $i350_0392 = $inc367;
   } else {
    $i369_0390 = 0;
    break;
   }
  }
 } else {
  $i369_0390 = 0;
 }
 do {
  $260 = HEAP32[$3 + ($i369_0390 * 36 | 0) + 24 >> 2] | 0;
  if (($260 | 0) != 0) {
   _free($260);
  }
  $262 = HEAP32[$3 + ($i369_0390 * 36 | 0) + 12 >> 2] | 0;
  if (($262 | 0) != 0) {
   _free($262);
  }
  $i369_0390 = $i369_0390 + 1 | 0;
 } while (($i369_0390 | 0) < ($add | 0));
 _free($call_i_i);
 if (($trace_sroa_0_5 | 0) != 0) {
  _free($trace_sroa_0_5);
 }
 if (($stack_sroa_0_9 | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _free($stack_sroa_0_9);
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function ___floatscan($f, $prec) {
 $f = $f | 0;
 $prec = $prec | 0;
 var $x_i = 0, $bits_0_ph = 0, $emin_0_ph = 0, $rpos = 0, $shend = 0, $0 = 0, $cond = 0, $sub13 = 0, $3 = 0, $sign_0 = 0, $c_0 = 0, $c_1153 = 0, $i_0152 = 0, $7 = 0, $c_2 = 0, $inc = 0, $c_1_lcssa = 0, $i_0_lcssa = 0, $incdec_ptr65 = 0, $incdec_ptr7899 = 0, $i_1 = 0, $c_3151 = 0, $i_2150 = 0, $13 = 0, $c_4 = 0, $inc118 = 0, $i_3 = 0, $c_5 = 0, $16 = 0, $cond135 = 0, $i_4 = 0, $21 = 0, $cond159 = 0, $incdec_ptr184 = 0, $incdec_ptr199101 = 0, $dec192126_in = 0, $_pre = 0, $incdec_ptr212 = 0, $27 = 0, $call215 = 0, $28 = 0, $29 = 0, $cond231 = 0, $32 = 0, $gotdig_0_i = 0, $c_0_i = 0, $35 = 0, $38 = 0, $c_1_ph_i = 0, $rp_0107_i$0 = 0, $rp_0107_i$1 = 0, $41 = 0, $cond46_i = 0, $x_0_i = 0, $y_0_i = 0.0, $scale_0_i = 0.0, $gottail_0_i = 0, $gotrad_0_i = 0, $gotdig_2_i = 0, $rp_1_i$0 = 0, $rp_1_i$1 = 0, $dc_0_i$0 = 0, $dc_0_i$1 = 0, $c_2_i = 0, $sub_i = 0, $or_i = 0, $cmp55_i = 0, $d_0_i = 0, $$etemp$1$1 = 0, $$etemp$2$1 = 0, $div_i = 0.0, $x_1_i = 0, $y_1_i = 0.0, $scale_1_i = 0.0, $gottail_1_i = 0, $x_2_i = 0, $y_2_i = 0.0, $scale_2_i = 0.0, $gottail_2_i = 0, $gotrad_1_i = 0, $gotdig_3_i = 0, $rp_2_i$0 = 0, $rp_2_i$1 = 0, $dc_1_i$0 = 0, $dc_1_i$1 = 0, $44 = 0, $c_2_lcssa_i = 0, $48 = 0, $tobool139_i = 0, $dc_0_rp_1_i$0 = 0, $dc_0_rp_1_i$1 = 0, $$etemp$4$1 = 0, $dc_2104_i$0 = 0, $dc_2104_i$1 = 0, $x_3103_i = 0, $mul144_i = 0, $$etemp$6$1 = 0, $x_3_lcssa_i = 0, $call150_i$0 = 0, $call150_i$1 = 0, $e2_0_i$0 = 0, $e2_0_i$1 = 0, $conv184_i122$1 = 0, $call188_i = 0, $sub193_i = 0, $conv194_i$1 = 0, $call198_i = 0, $e2_199_i$0 = 0, $e2_199_i$1 = 0, $y_398_i = 0.0, $x_497_i = 0, $add215_i = 0, $x_5_i = 0, $sub212_pn_i = 0.0, $y_4_i = 0.0, $e2_1_lcssa_i$0 = 0, $e2_1_lcssa_i$1 = 0, $y_3_lcssa_i = 0.0, $x_4_lcssa_i = 0, $conv220_i123$1 = 0, $conv230_i = 0, $bits_addr_0_i = 0, $bits_addr_094_i = 0, $sub240_i = 0, $sub_i44 = 0, $sub4_i47 = 0, $add_i53 = 0, $add14_i56 = 0, $n_addr_0_i60 = 0, $y_0_i61 = 0.0, $conv242_i = 0.0, $conv254_pre_phi_i = 0.0, $bits_addr_095_i = 0, $bias_0_i = 0.0, $or_cond90_i = 0, $sub261_i = 0.0, $call264_i = 0, $conv266_i = 0, $mul_i_i68 = 0.0, $sub_i_i69 = 0, $sub4_i_i73 = 0, $mul10_i_i79 = 0.0, $add_i_i80 = 0, $add14_i_i84 = 0, $n_addr_0_i_i88 = 0, $y_0_i_i89 = 0.0, $c_6 = 0, $sum_i = 0, $sub1_i = 0, $gotdig_0_i87 = 0, $c_addr_0_i = 0, $58 = 0, $61 = 0, $c_addr_1_ph_i = 0, $lrp_0369_i$0 = 0, $lrp_0369_i$1 = 0, $64 = 0, $c_addr_1_be_i = 0, $lrp_1_i$0 = 0, $lrp_1_i$1 = 0, $gotdig_2_i97 = 0, $gotrad_0_i98 = 0, $c_addr_2_i = 0, $arrayidx_i = 0, $sub37346_i = 0, $cmp40348_i = 0, $arrayidx77_i = 0, $cmp40359_i = 0, $sub37358_i = 0, $c_addr_3357_i = 0, $j_0356_i = 0, $k_0355_i = 0, $gotrad_1354_i = 0, $gotdig_3353_i = 0, $lnz_0352_i = 0, $dc_0351_i$0 = 0, $dc_0351_i$1 = 0, $lrp_2350_i$0 = 0, $lrp_2350_i$1 = 0, $cmp51_i = 0, $arrayidx64_i = 0, $storemerge_i = 0, $inc66_i = 0, $cmp67_i = 0, $lrp_3_i$0 = 0, $lrp_3_i$1 = 0, $dc_1_i103$0 = 0, $dc_1_i103$1 = 0, $lnz_2_i = 0, $gotdig_4_i = 0, $gotrad_2_i = 0, $k_2_i = 0, $j_2_i = 0, $69 = 0, $c_addr_3_be_i = 0, $sub37_i = 0, $cmp40_i = 0, $c_addr_3_lcssa_i = 0, $j_0_lcssa_i = 0, $k_0_lcssa_i = 0, $gotrad_1_lcssa_i = 0, $gotdig_3_lcssa_i = 0, $lnz_0_lcssa_i = 0, $dc_0_lcssa_i$0 = 0, $dc_0_lcssa_i$1 = 0, $lrp_2_lcssa_i$0 = 0, $lrp_2_lcssa_i$1 = 0, $tobool95_i = 0, $dc_0_lrp_2_i$0 = 0, $dc_0_lrp_2_i$1 = 0, $tobool98_i = 0, $call103_i$0 = 0, $call103_i$1 = 0, $e10_0_i$0 = 0, $e10_0_i$1 = 0, $j_0344_i = 0, $k_0340_i = 0, $lnz_0334_i = 0, $dc_0330_i$0 = 0, $dc_0330_i$1 = 0, $lrp_4235240_i$0 = 0, $lrp_4235240_i$1 = 0, $tobool98237239_i = 0, $incdec_ptr128_i = 0, $j_0343_i = 0, $k_0339_i = 0, $lnz_0333_i = 0, $dc_0329_i$0 = 0, $dc_0329_i$1 = 0, $tobool98236_i = 0, $lrp_5_i$0 = 0, $lrp_5_i$1 = 0, $76 = 0, $call135_i = 0, $77 = 0, $j_0342_i = 0, $k_0338_i = 0, $lnz_0332_i = 0, $dc_0328_i$0 = 0, $dc_0328_i$1 = 0, $lrp_5241_i$0 = 0, $lrp_5241_i$1 = 0, $78 = 0, $$etemp$15$1 = 0, $div_i107 = 0, $conv162_i$1 = 0, $call166_i = 0, $sub171_i = 0, $conv172_i$1 = 0, $call176_i = 0, $arrayidx187_i = 0, $mul188325_i = 0, $j_3324_i = 0, $k_3_i = 0, $conv194_i108 = 0, $sub226_i = 0, $_pre_i = 0, $rem_i = 0, $cond255_i = 0, $84 = 0, $div268_i = 0, $carry_0319_i = 0, $k_4318_i = 0, $a_0317_i = 0, $rp_0316_i = 0, $arrayidx262_i = 0, $85 = 0, $add266_i = 0, $rp_1_i114 = 0, $a_1_i = 0, $rp_0_lcssa401_i = 0, $a_0_lcssa400_i = 0, $z_0_i = 0, $rp_2_ph266_i = 0, $e2_0_ph_i = 0, $z_1_ph267_i = 0, $a_2_ph268_i = 0, $arrayidx294_i = 0, $e2_0_us_i = 0, $z_1_us_i = 0, $z_2_us_i = 0, $k_5_in_us_i = 0, $carry298_0_us_i = 0, $k_5_us_i = 0, $arrayidx305_us_i = 0, $conv306_us_i$0 = 0, $$etemp$16$1 = 0, $rem314_sink_off0_us_i = 0, $carry298_1_us_i = 0, $cmp326_us_i = 0, $z_3_us_i = 0, $sub299_us_i = 0, $e2_0_us272_i = 0, $z_1_us273_i = 0, $z_2_us281_i = 0, $k_5_in_us282_i = 0, $carry298_0_us283_i = 0, $k_5_us284_i = 0, $arrayidx305_us285_i = 0, $conv306_us286_i$0 = 0, $$etemp$19$1 = 0, $rem314_sink_off0_us298_i = 0, $carry298_1_us299_i = 0, $cmp326_us303_i = 0, $z_3_us309_i = 0, $sub299_us278_i = 0, $carry298_1_lcssa_lcssa_i = 0, $z_3_lcssa_lcssa_i = 0, $sub299_lcssa_i = 0, $and345_i = 0, $and350_i = 0, $arrayidx354_i = 0, $z_4_i = 0, $e2_1_i = 0, $a_3_i = 0, $i_0254_i = 0, $and368_i = 0, $91 = 0, $92 = 0, $inc387_i = 0, $i_1_i = 0, $and455_i = 0, $add400_i = 0, $sub409_i = 0, $shr415_i = 0, $carry361_0260_i = 0, $k_6258_i = 0, $a_4257_i = 0, $rp_4256_i = 0, $arrayidx407_i = 0, $93 = 0, $add413_i = 0, $or_cond229_i = 0, $rp_3_ph263_i = 0, $e2_1_ph_i = 0, $z_5_ph_i = 0, $a_3_ph_i = 0, $and435_i = 0, $arrayidx445_i = 0, $rp_3_i_ph = 0, $e2_1_i_ph = 0, $a_3_i_ph = 0, $cmp392_i = 0, $__i = 0, $z_7_i = 0, $conv468_i = 0.0, $and455_1_i = 0, $denormal_0_i = 0, $bits_addr_0_i115 = 0, $bits_addr_0245_i = 0, $denormal_0244_i = 0, $sub491_i = 0, $sub_i10 = 0, $sub4_i13 = 0, $add_i19 = 0, $add14_i22 = 0, $n_addr_0_i26 = 0, $y_0_i27 = 0.0, $call493_i = 0.0, $sub494_i = 0, $sub_i4 = 0, $sub4_i = 0, $add_i = 0, $add14_i = 0, $n_addr_0_i = 0, $y_0_i8 = 0.0, $call496_i = 0.0, $bits_addr_0246_i = 0, $denormal_0243_i = 0, $y_1_i116 = 0.0, $frac_0_i = 0.0, $bias_0_i117 = 0.0, $and501_i = 0, $98 = 0, $frac_1_i = 0.0, $frac_2_i = 0.0, $sub562_i = 0.0, $e2_2_i = 0, $denormal_2_i = 0, $y_2_i118 = 0.0, $call592_i = 0, $e2_3_i = 0, $y_3_i = 0.0, $mul_i_i = 0.0, $sub_i_i = 0, $sub4_i_i = 0, $mul10_i_i = 0.0, $add_i_i = 0, $add14_i_i = 0, $n_addr_0_i_i = 0, $y_0_i_i = 0.0, $and460_1_i = 0, $z_7_1_i = 0, $conv473_i = 0.0, $mul474_i = 0.0, $add475_i = 0, $sub476_i = 0, $retval_0 = 0.0, $dec_i$0 = 0, $dec_i$1 = 0, $inc_i$0 = 0, $inc145_i$0 = 0, $inc145_i$1 = 0, $sub176_i$0 = 0, $add177_i$0 = 0, $add177_i$1 = 0, $dec218_i$0 = 0, $dec218_i$1 = 0, $add221_i$0 = 0, $sub223_i$0 = 0, $sub223_i$1 = 0, $dec_i96$0 = 0, $dec_i96$1 = 0, $inc_i99$0 = 0, $inc_i99$1 = 0, $add119_i$0 = 0, $add308_us_i$0 = 0, $add308_us_i$1 = 0, $div312_us_i$0 = 0, $rem314_us_i$0 = 0, $add308_us289_i$0 = 0, $add308_us289_i$1 = 0, $div312_us293_i$0 = 0, $rem314_us295_i$0 = 0, label = 0, sp = 0, $k_4318_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x_i = sp | 0;
 if (($prec | 0) == 1) {
  $emin_0_ph = -1074;
  $bits_0_ph = 53;
 } else if (($prec | 0) == 2) {
  $emin_0_ph = -1074;
  $bits_0_ph = 53;
 } else if (($prec | 0) == 0) {
  $emin_0_ph = -149;
  $bits_0_ph = 24;
 } else {
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 $rpos = $f + 4 | 0;
 $shend = $f + 100 | 0;
 do {
  $0 = HEAP32[$rpos >> 2] | 0;
  if ($0 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
   HEAP32[$rpos >> 2] = $0 + 1;
   $cond = HEAPU8[$0 >> 0] | 0;
  } else {
   $cond = ___shgetc($f) | 0;
  }
 } while ((_isspace($cond | 0) | 0) != 0);
 do {
  if (($cond | 0) == 45 | ($cond | 0) == 43) {
   $sub13 = 1 - ((($cond | 0) == 45) << 1) | 0;
   $3 = HEAP32[$rpos >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
    HEAP32[$rpos >> 2] = $3 + 1;
    $c_0 = HEAPU8[$3 >> 0] | 0;
    $sign_0 = $sub13;
    break;
   } else {
    $c_0 = ___shgetc($f) | 0;
    $sign_0 = $sub13;
    break;
   }
  } else {
   $c_0 = $cond;
   $sign_0 = 1;
  }
 } while (0);
 $i_0152 = 0;
 $c_1153 = $c_0;
 while (1) {
  if (($c_1153 | 32 | 0) != (HEAP8[2272 + $i_0152 >> 0] | 0)) {
   $i_0_lcssa = $i_0152;
   $c_1_lcssa = $c_1153;
   break;
  }
  do {
   if ($i_0152 >>> 0 < 7 >>> 0) {
    $7 = HEAP32[$rpos >> 2] | 0;
    if ($7 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
     HEAP32[$rpos >> 2] = $7 + 1;
     $c_2 = HEAPU8[$7 >> 0] | 0;
     break;
    } else {
     $c_2 = ___shgetc($f) | 0;
     break;
    }
   } else {
    $c_2 = $c_1153;
   }
  } while (0);
  $inc = $i_0152 + 1 | 0;
  if ($inc >>> 0 < 8 >>> 0) {
   $i_0152 = $inc;
   $c_1153 = $c_2;
  } else {
   $i_0_lcssa = $inc;
   $c_1_lcssa = $c_2;
   break;
  }
 }
 do {
  if (($i_0_lcssa | 0) == 3) {
   label = 23;
  } else if (($i_0_lcssa | 0) != 8) {
   if ($i_0_lcssa >>> 0 > 3 >>> 0) {
    if (($i_0_lcssa | 0) == 8) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   L34 : do {
    if (($i_0_lcssa | 0) == 0) {
     $i_2150 = 0;
     $c_3151 = $c_1_lcssa;
     while (1) {
      if (($c_3151 | 32 | 0) != (HEAP8[7456 + $i_2150 >> 0] | 0)) {
       $c_5 = $c_3151;
       $i_3 = $i_2150;
       break L34;
      }
      do {
       if ($i_2150 >>> 0 < 2 >>> 0) {
        $13 = HEAP32[$rpos >> 2] | 0;
        if ($13 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
         HEAP32[$rpos >> 2] = $13 + 1;
         $c_4 = HEAPU8[$13 >> 0] | 0;
         break;
        } else {
         $c_4 = ___shgetc($f) | 0;
         break;
        }
       } else {
        $c_4 = $c_3151;
       }
      } while (0);
      $inc118 = $i_2150 + 1 | 0;
      if ($inc118 >>> 0 < 3 >>> 0) {
       $i_2150 = $inc118;
       $c_3151 = $c_4;
      } else {
       $c_5 = $c_4;
       $i_3 = $inc118;
       break;
      }
     }
    } else {
     $c_5 = $c_1_lcssa;
     $i_3 = $i_0_lcssa;
    }
   } while (0);
   if (($i_3 | 0) == 3) {
    $16 = HEAP32[$rpos >> 2] | 0;
    if ($16 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
     HEAP32[$rpos >> 2] = $16 + 1;
     $cond135 = HEAPU8[$16 >> 0] | 0;
    } else {
     $cond135 = ___shgetc($f) | 0;
    }
    if (($cond135 | 0) == 40) {
     $i_4 = 1;
    } else {
     if ((HEAP32[$shend >> 2] | 0) == 0) {
      $retval_0 = +NaN;
      STACKTOP = sp;
      return +$retval_0;
     }
     HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
     $retval_0 = +NaN;
     STACKTOP = sp;
     return +$retval_0;
    }
    while (1) {
     $21 = HEAP32[$rpos >> 2] | 0;
     if ($21 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
      HEAP32[$rpos >> 2] = $21 + 1;
      $cond159 = HEAPU8[$21 >> 0] | 0;
     } else {
      $cond159 = ___shgetc($f) | 0;
     }
     if (!(($cond159 - 48 | 0) >>> 0 < 10 >>> 0 | ($cond159 - 65 | 0) >>> 0 < 26 >>> 0)) {
      if (!(($cond159 - 97 | 0) >>> 0 < 26 >>> 0 | ($cond159 | 0) == 95)) {
       break;
      }
     }
     $i_4 = $i_4 + 1 | 0;
    }
    if (($cond159 | 0) == 41) {
     $retval_0 = +NaN;
     STACKTOP = sp;
     return +$retval_0;
    }
    if ((HEAP32[$shend >> 2] | 0) == 0) {
     $retval_0 = +NaN;
     STACKTOP = sp;
     return +$retval_0;
    }
    $incdec_ptr184 = (HEAP32[$rpos >> 2] | 0) - 1 | 0;
    HEAP32[$rpos >> 2] = $incdec_ptr184;
    if (($i_4 | 0) == 0) {
     $retval_0 = +NaN;
     STACKTOP = sp;
     return +$retval_0;
    } else {
     $dec192126_in = $i_4;
     $incdec_ptr199101 = $incdec_ptr184;
    }
    do {
     $dec192126_in = $dec192126_in - 1 | 0;
     $incdec_ptr199101 = $incdec_ptr199101 - 1 | 0;
    } while (($dec192126_in | 0) != 0);
    HEAP32[$rpos >> 2] = $incdec_ptr199101;
    $retval_0 = +NaN;
    STACKTOP = sp;
    return +$retval_0;
   } else if (($i_3 | 0) == 0) {
    do {
     if (($c_5 | 0) == 48) {
      $29 = HEAP32[$rpos >> 2] | 0;
      if ($29 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
       HEAP32[$rpos >> 2] = $29 + 1;
       $cond231 = HEAPU8[$29 >> 0] | 0;
      } else {
       $cond231 = ___shgetc($f) | 0;
      }
      if (($cond231 | 32 | 0) != 120) {
       if ((HEAP32[$shend >> 2] | 0) == 0) {
        $c_6 = 48;
        break;
       }
       HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
       $c_6 = 48;
       break;
      }
      $32 = HEAP32[$rpos >> 2] | 0;
      if ($32 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
       HEAP32[$rpos >> 2] = $32 + 1;
       $c_0_i = HEAPU8[$32 >> 0] | 0;
       $gotdig_0_i = 0;
      } else {
       $c_0_i = ___shgetc($f) | 0;
       $gotdig_0_i = 0;
      }
      while (1) {
       if (($c_0_i | 0) == 46) {
        label = 67;
        break;
       } else if (($c_0_i | 0) != 48) {
        $c_2_i = $c_0_i;
        $dc_0_i$1 = 0;
        $dc_0_i$0 = 0;
        $rp_1_i$1 = 0;
        $rp_1_i$0 = 0;
        $gotdig_2_i = $gotdig_0_i;
        $gotrad_0_i = 0;
        $gottail_0_i = 0;
        $scale_0_i = 1.0;
        $y_0_i = 0.0;
        $x_0_i = 0;
        break;
       }
       $35 = HEAP32[$rpos >> 2] | 0;
       if ($35 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
        HEAP32[$rpos >> 2] = $35 + 1;
        $c_0_i = HEAPU8[$35 >> 0] | 0;
        $gotdig_0_i = 1;
        continue;
       } else {
        $c_0_i = ___shgetc($f) | 0;
        $gotdig_0_i = 1;
        continue;
       }
      }
      if ((label | 0) == 67) {
       $38 = HEAP32[$rpos >> 2] | 0;
       if ($38 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
        HEAP32[$rpos >> 2] = $38 + 1;
        $c_1_ph_i = HEAPU8[$38 >> 0] | 0;
       } else {
        $c_1_ph_i = ___shgetc($f) | 0;
       }
       if (($c_1_ph_i | 0) == 48) {
        $rp_0107_i$1 = 0;
        $rp_0107_i$0 = 0;
        while (1) {
         $41 = HEAP32[$rpos >> 2] | 0;
         if ($41 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
          HEAP32[$rpos >> 2] = $41 + 1;
          $cond46_i = HEAPU8[$41 >> 0] | 0;
         } else {
          $cond46_i = ___shgetc($f) | 0;
         }
         $dec_i$0 = _i64Add($rp_0107_i$0, $rp_0107_i$1, -1, -1) | 0;
         $dec_i$1 = tempRet0;
         if (($cond46_i | 0) == 48) {
          $rp_0107_i$1 = $dec_i$1;
          $rp_0107_i$0 = $dec_i$0;
         } else {
          $c_2_i = $cond46_i;
          $dc_0_i$1 = 0;
          $dc_0_i$0 = 0;
          $rp_1_i$1 = $dec_i$1;
          $rp_1_i$0 = $dec_i$0;
          $gotdig_2_i = 1;
          $gotrad_0_i = 1;
          $gottail_0_i = 0;
          $scale_0_i = 1.0;
          $y_0_i = 0.0;
          $x_0_i = 0;
          break;
         }
        }
       } else {
        $c_2_i = $c_1_ph_i;
        $dc_0_i$1 = 0;
        $dc_0_i$0 = 0;
        $rp_1_i$1 = 0;
        $rp_1_i$0 = 0;
        $gotdig_2_i = $gotdig_0_i;
        $gotrad_0_i = 1;
        $gottail_0_i = 0;
        $scale_0_i = 1.0;
        $y_0_i = 0.0;
        $x_0_i = 0;
       }
      }
      L116 : while (1) {
       $sub_i = $c_2_i - 48 | 0;
       do {
        if ($sub_i >>> 0 < 10 >>> 0) {
         $d_0_i = $sub_i;
         label = 80;
        } else {
         $or_i = $c_2_i | 32;
         $cmp55_i = ($c_2_i | 0) == 46;
         if (!(($or_i - 97 | 0) >>> 0 < 6 >>> 0 | $cmp55_i)) {
          $c_2_lcssa_i = $c_2_i;
          break L116;
         }
         if ($cmp55_i) {
          if (($gotrad_0_i | 0) == 0) {
           $dc_1_i$1 = $dc_0_i$1;
           $dc_1_i$0 = $dc_0_i$0;
           $rp_2_i$1 = $dc_0_i$1;
           $rp_2_i$0 = $dc_0_i$0;
           $gotdig_3_i = $gotdig_2_i;
           $gotrad_1_i = 1;
           $gottail_2_i = $gottail_0_i;
           $scale_2_i = $scale_0_i;
           $y_2_i = $y_0_i;
           $x_2_i = $x_0_i;
           break;
          } else {
           $c_2_lcssa_i = 46;
           break L116;
          }
         } else {
          $d_0_i = ($c_2_i | 0) > 57 ? $or_i - 87 | 0 : $sub_i;
          label = 80;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 80) {
        label = 0;
        $$etemp$1$1 = 0;
        do {
         if (($dc_0_i$1 | 0) < ($$etemp$1$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$1$1 | 0) & $dc_0_i$0 >>> 0 < 8 >>> 0) {
          $gottail_1_i = $gottail_0_i;
          $scale_1_i = $scale_0_i;
          $y_1_i = $y_0_i;
          $x_1_i = $d_0_i + ($x_0_i << 4) | 0;
         } else {
          $$etemp$2$1 = 0;
          if (($dc_0_i$1 | 0) < ($$etemp$2$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$2$1 | 0) & $dc_0_i$0 >>> 0 < 14 >>> 0) {
           $div_i = $scale_0_i * .0625;
           $gottail_1_i = $gottail_0_i;
           $scale_1_i = $div_i;
           $y_1_i = $y_0_i + $div_i * +($d_0_i | 0);
           $x_1_i = $x_0_i;
           break;
          }
          if (($d_0_i | 0) == 0 | ($gottail_0_i | 0) != 0) {
           $gottail_1_i = $gottail_0_i;
           $scale_1_i = $scale_0_i;
           $y_1_i = $y_0_i;
           $x_1_i = $x_0_i;
          } else {
           $gottail_1_i = 1;
           $scale_1_i = $scale_0_i;
           $y_1_i = $y_0_i + $scale_0_i * .5;
           $x_1_i = $x_0_i;
          }
         }
        } while (0);
        $inc_i$0 = _i64Add($dc_0_i$0, $dc_0_i$1, 1, 0) | 0;
        $dc_1_i$1 = tempRet0;
        $dc_1_i$0 = $inc_i$0;
        $rp_2_i$1 = $rp_1_i$1;
        $rp_2_i$0 = $rp_1_i$0;
        $gotdig_3_i = 1;
        $gotrad_1_i = $gotrad_0_i;
        $gottail_2_i = $gottail_1_i;
        $scale_2_i = $scale_1_i;
        $y_2_i = $y_1_i;
        $x_2_i = $x_1_i;
       }
       $44 = HEAP32[$rpos >> 2] | 0;
       if ($44 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
        HEAP32[$rpos >> 2] = $44 + 1;
        $c_2_i = HEAPU8[$44 >> 0] | 0;
        $dc_0_i$1 = $dc_1_i$1;
        $dc_0_i$0 = $dc_1_i$0;
        $rp_1_i$1 = $rp_2_i$1;
        $rp_1_i$0 = $rp_2_i$0;
        $gotdig_2_i = $gotdig_3_i;
        $gotrad_0_i = $gotrad_1_i;
        $gottail_0_i = $gottail_2_i;
        $scale_0_i = $scale_2_i;
        $y_0_i = $y_2_i;
        $x_0_i = $x_2_i;
        continue;
       } else {
        $c_2_i = ___shgetc($f) | 0;
        $dc_0_i$1 = $dc_1_i$1;
        $dc_0_i$0 = $dc_1_i$0;
        $rp_1_i$1 = $rp_2_i$1;
        $rp_1_i$0 = $rp_2_i$0;
        $gotdig_2_i = $gotdig_3_i;
        $gotrad_0_i = $gotrad_1_i;
        $gottail_0_i = $gottail_2_i;
        $scale_0_i = $scale_2_i;
        $y_0_i = $y_2_i;
        $x_0_i = $x_2_i;
        continue;
       }
      }
      if (($gotdig_2_i | 0) == 0) {
       if ((HEAP32[$shend >> 2] | 0) != 0) {
        $48 = HEAP32[$rpos >> 2] | 0;
        HEAP32[$rpos >> 2] = $48 - 2;
        if (($gotrad_0_i | 0) != 0) {
         HEAP32[$rpos >> 2] = $48 - 3;
        }
       }
       $retval_0 = +($sign_0 | 0) * 0.0;
       STACKTOP = sp;
       return +$retval_0;
      }
      $tobool139_i = ($gotrad_0_i | 0) == 0;
      $dc_0_rp_1_i$0 = $tobool139_i ? $dc_0_i$0 : $rp_1_i$0;
      $dc_0_rp_1_i$1 = $tobool139_i ? $dc_0_i$1 : $rp_1_i$1;
      $$etemp$4$1 = 0;
      if (($dc_0_i$1 | 0) < ($$etemp$4$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$4$1 | 0) & $dc_0_i$0 >>> 0 < 8 >>> 0) {
       $x_3103_i = $x_0_i;
       $dc_2104_i$1 = $dc_0_i$1;
       $dc_2104_i$0 = $dc_0_i$0;
       while (1) {
        $mul144_i = $x_3103_i << 4;
        $inc145_i$0 = _i64Add($dc_2104_i$0, $dc_2104_i$1, 1, 0) | 0;
        $inc145_i$1 = tempRet0;
        $$etemp$6$1 = 0;
        if (($inc145_i$1 | 0) < ($$etemp$6$1 | 0) | ($inc145_i$1 | 0) == ($$etemp$6$1 | 0) & $inc145_i$0 >>> 0 < 8 >>> 0) {
         $x_3103_i = $mul144_i;
         $dc_2104_i$1 = $inc145_i$1;
         $dc_2104_i$0 = $inc145_i$0;
        } else {
         $x_3_lcssa_i = $mul144_i;
         break;
        }
       }
      } else {
       $x_3_lcssa_i = $x_0_i;
      }
      if (($c_2_lcssa_i | 32 | 0) == 112) {
       $call150_i$0 = _scanexp($f) | 0;
       $call150_i$1 = tempRet0;
       if (($call150_i$0 | 0) == 0 & ($call150_i$1 | 0) == (-2147483648 | 0)) {
        if ((HEAP32[$shend >> 2] | 0) == 0) {
         $e2_0_i$1 = 0;
         $e2_0_i$0 = 0;
        } else {
         HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
         $e2_0_i$1 = 0;
         $e2_0_i$0 = 0;
        }
       } else {
        $e2_0_i$1 = $call150_i$1;
        $e2_0_i$0 = $call150_i$0;
       }
      } else {
       if ((HEAP32[$shend >> 2] | 0) == 0) {
        $e2_0_i$1 = 0;
        $e2_0_i$0 = 0;
       } else {
        HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
        $e2_0_i$1 = 0;
        $e2_0_i$0 = 0;
       }
      }
      $sub176_i$0 = _i64Add($dc_0_rp_1_i$0 << 2 | 0 >>> 30, $dc_0_rp_1_i$1 << 2 | $dc_0_rp_1_i$0 >>> 30, -32, -1) | 0;
      $add177_i$0 = _i64Add($sub176_i$0, tempRet0, $e2_0_i$0, $e2_0_i$1) | 0;
      $add177_i$1 = tempRet0;
      if (($x_3_lcssa_i | 0) == 0) {
       $retval_0 = +($sign_0 | 0) * 0.0;
       STACKTOP = sp;
       return +$retval_0;
      }
      $conv184_i122$1 = 0;
      if (($add177_i$1 | 0) > ($conv184_i122$1 | 0) | ($add177_i$1 | 0) == ($conv184_i122$1 | 0) & $add177_i$0 >>> 0 > (-$emin_0_ph | 0) >>> 0) {
       $call188_i = ___errno_location() | 0;
       HEAP32[$call188_i >> 2] = 34;
       $retval_0 = +($sign_0 | 0) * 1.7976931348623157e+308 * 1.7976931348623157e+308;
       STACKTOP = sp;
       return +$retval_0;
      }
      $sub193_i = $emin_0_ph - 106 | 0;
      $conv194_i$1 = ($sub193_i | 0) < 0 | 0 ? -1 : 0;
      if (($add177_i$1 | 0) < ($conv194_i$1 | 0) | ($add177_i$1 | 0) == ($conv194_i$1 | 0) & $add177_i$0 >>> 0 < $sub193_i >>> 0) {
       $call198_i = ___errno_location() | 0;
       HEAP32[$call198_i >> 2] = 34;
       $retval_0 = +($sign_0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
       STACKTOP = sp;
       return +$retval_0;
      }
      if (($x_3_lcssa_i | 0) > -1) {
       $x_497_i = $x_3_lcssa_i;
       $y_398_i = $y_0_i;
       $e2_199_i$1 = $add177_i$1;
       $e2_199_i$0 = $add177_i$0;
       while (1) {
        $add215_i = $x_497_i << 1;
        if ($y_398_i < .5) {
         $sub212_pn_i = $y_398_i;
         $x_5_i = $add215_i;
        } else {
         $sub212_pn_i = $y_398_i + -1.0;
         $x_5_i = $add215_i | 1;
        }
        $y_4_i = $y_398_i + $sub212_pn_i;
        $dec218_i$0 = _i64Add($e2_199_i$0, $e2_199_i$1, -1, -1) | 0;
        $dec218_i$1 = tempRet0;
        if (($x_5_i | 0) > -1) {
         $x_497_i = $x_5_i;
         $y_398_i = $y_4_i;
         $e2_199_i$1 = $dec218_i$1;
         $e2_199_i$0 = $dec218_i$0;
        } else {
         $x_4_lcssa_i = $x_5_i;
         $y_3_lcssa_i = $y_4_i;
         $e2_1_lcssa_i$1 = $dec218_i$1;
         $e2_1_lcssa_i$0 = $dec218_i$0;
         break;
        }
       }
      } else {
       $x_4_lcssa_i = $x_3_lcssa_i;
       $y_3_lcssa_i = $y_0_i;
       $e2_1_lcssa_i$1 = $add177_i$1;
       $e2_1_lcssa_i$0 = $add177_i$0;
      }
      $conv220_i123$1 = 0;
      $add221_i$0 = _i64Subtract(32, 0, $emin_0_ph, ($emin_0_ph | 0) < 0 | 0 ? -1 : 0) | 0;
      $sub223_i$0 = _i64Add($e2_1_lcssa_i$0, $e2_1_lcssa_i$1, $add221_i$0, tempRet0) | 0;
      $sub223_i$1 = tempRet0;
      if (($conv220_i123$1 | 0) > ($sub223_i$1 | 0) | ($conv220_i123$1 | 0) == ($sub223_i$1 | 0) & $bits_0_ph >>> 0 > $sub223_i$0 >>> 0) {
       $conv230_i = $sub223_i$0;
       if (($conv230_i | 0) < 0) {
        $bits_addr_094_i = 0;
        label = 117;
       } else {
        $bits_addr_0_i = $conv230_i;
        label = 115;
       }
      } else {
       $bits_addr_0_i = $bits_0_ph;
       label = 115;
      }
      if ((label | 0) == 115) {
       if (($bits_addr_0_i | 0) < 53) {
        $bits_addr_094_i = $bits_addr_0_i;
        label = 117;
       } else {
        $bias_0_i = 0.0;
        $bits_addr_095_i = $bits_addr_0_i;
        $conv254_pre_phi_i = +($sign_0 | 0);
       }
      }
      if ((label | 0) == 117) {
       $sub240_i = 84 - $bits_addr_094_i | 0;
       if (($sub240_i | 0) > 1023) {
        $sub_i44 = $sub240_i - 1023 | 0;
        if (($sub_i44 | 0) > 1023) {
         $sub4_i47 = $sub240_i - 2046 | 0;
         $y_0_i61 = Infinity;
         $n_addr_0_i60 = ($sub4_i47 | 0) > 1023 ? 1023 : $sub4_i47;
        } else {
         $y_0_i61 = 8.98846567431158e+307;
         $n_addr_0_i60 = $sub_i44;
        }
       } else {
        if (($sub240_i | 0) < -1022) {
         $add_i53 = $sub240_i + 1022 | 0;
         if (($add_i53 | 0) < -1022) {
          $add14_i56 = $sub240_i + 2044 | 0;
          $y_0_i61 = 0.0;
          $n_addr_0_i60 = ($add14_i56 | 0) < -1022 ? -1022 : $add14_i56;
         } else {
          $y_0_i61 = 2.2250738585072014e-308;
          $n_addr_0_i60 = $add_i53;
         }
        } else {
         $y_0_i61 = 1.0;
         $n_addr_0_i60 = $sub240_i;
        }
       }
       $conv242_i = +($sign_0 | 0);
       $bias_0_i = +_copysign(+($y_0_i61 * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $n_addr_0_i60 + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3])), +$conv242_i);
       $bits_addr_095_i = $bits_addr_094_i;
       $conv254_pre_phi_i = $conv242_i;
      }
      $or_cond90_i = ($bits_addr_095_i | 0) < 32 & $y_3_lcssa_i != 0.0 & ($x_4_lcssa_i & 1 | 0) == 0;
      $sub261_i = $conv254_pre_phi_i * ($or_cond90_i ? 0.0 : $y_3_lcssa_i) + ($bias_0_i + $conv254_pre_phi_i * +((($or_cond90_i & 1) + $x_4_lcssa_i | 0) >>> 0 >>> 0)) - $bias_0_i;
      if (!($sub261_i != 0.0)) {
       $call264_i = ___errno_location() | 0;
       HEAP32[$call264_i >> 2] = 34;
      }
      $conv266_i = $e2_1_lcssa_i$0;
      if (($conv266_i | 0) > 1023) {
       $mul_i_i68 = $sub261_i * 8.98846567431158e+307;
       $sub_i_i69 = $conv266_i - 1023 | 0;
       if (($sub_i_i69 | 0) > 1023) {
        $sub4_i_i73 = $conv266_i - 2046 | 0;
        $y_0_i_i89 = $mul_i_i68 * 8.98846567431158e+307;
        $n_addr_0_i_i88 = ($sub4_i_i73 | 0) > 1023 ? 1023 : $sub4_i_i73;
       } else {
        $y_0_i_i89 = $mul_i_i68;
        $n_addr_0_i_i88 = $sub_i_i69;
       }
      } else {
       if (($conv266_i | 0) < -1022) {
        $mul10_i_i79 = $sub261_i * 2.2250738585072014e-308;
        $add_i_i80 = $conv266_i + 1022 | 0;
        if (($add_i_i80 | 0) < -1022) {
         $add14_i_i84 = $conv266_i + 2044 | 0;
         $y_0_i_i89 = $mul10_i_i79 * 2.2250738585072014e-308;
         $n_addr_0_i_i88 = ($add14_i_i84 | 0) < -1022 ? -1022 : $add14_i_i84;
        } else {
         $y_0_i_i89 = $mul10_i_i79;
         $n_addr_0_i_i88 = $add_i_i80;
        }
       } else {
        $y_0_i_i89 = $sub261_i;
        $n_addr_0_i_i88 = $conv266_i;
       }
      }
      $retval_0 = $y_0_i_i89 * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $n_addr_0_i_i88 + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3]);
      STACKTOP = sp;
      return +$retval_0;
     } else {
      $c_6 = $c_5;
     }
    } while (0);
    $sum_i = $emin_0_ph + $bits_0_ph | 0;
    $sub1_i = -$sum_i | 0;
    $c_addr_0_i = $c_6;
    $gotdig_0_i87 = 0;
    while (1) {
     if (($c_addr_0_i | 0) == 46) {
      label = 140;
      break;
     } else if (($c_addr_0_i | 0) != 48) {
      $c_addr_2_i = $c_addr_0_i;
      $gotrad_0_i98 = 0;
      $gotdig_2_i97 = $gotdig_0_i87;
      $lrp_1_i$1 = 0;
      $lrp_1_i$0 = 0;
      break;
     }
     $58 = HEAP32[$rpos >> 2] | 0;
     if ($58 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
      HEAP32[$rpos >> 2] = $58 + 1;
      $c_addr_0_i = HEAPU8[$58 >> 0] | 0;
      $gotdig_0_i87 = 1;
      continue;
     } else {
      $c_addr_0_i = ___shgetc($f) | 0;
      $gotdig_0_i87 = 1;
      continue;
     }
    }
    if ((label | 0) == 140) {
     $61 = HEAP32[$rpos >> 2] | 0;
     if ($61 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
      HEAP32[$rpos >> 2] = $61 + 1;
      $c_addr_1_ph_i = HEAPU8[$61 >> 0] | 0;
     } else {
      $c_addr_1_ph_i = ___shgetc($f) | 0;
     }
     if (($c_addr_1_ph_i | 0) == 48) {
      $lrp_0369_i$1 = 0;
      $lrp_0369_i$0 = 0;
      while (1) {
       $dec_i96$0 = _i64Add($lrp_0369_i$0, $lrp_0369_i$1, -1, -1) | 0;
       $dec_i96$1 = tempRet0;
       $64 = HEAP32[$rpos >> 2] | 0;
       if ($64 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
        HEAP32[$rpos >> 2] = $64 + 1;
        $c_addr_1_be_i = HEAPU8[$64 >> 0] | 0;
       } else {
        $c_addr_1_be_i = ___shgetc($f) | 0;
       }
       if (($c_addr_1_be_i | 0) == 48) {
        $lrp_0369_i$1 = $dec_i96$1;
        $lrp_0369_i$0 = $dec_i96$0;
       } else {
        $c_addr_2_i = $c_addr_1_be_i;
        $gotrad_0_i98 = 1;
        $gotdig_2_i97 = 1;
        $lrp_1_i$1 = $dec_i96$1;
        $lrp_1_i$0 = $dec_i96$0;
        break;
       }
      }
     } else {
      $c_addr_2_i = $c_addr_1_ph_i;
      $gotrad_0_i98 = 1;
      $gotdig_2_i97 = $gotdig_0_i87;
      $lrp_1_i$1 = 0;
      $lrp_1_i$0 = 0;
     }
    }
    $arrayidx_i = $x_i | 0;
    HEAP32[$arrayidx_i >> 2] = 0;
    $sub37346_i = $c_addr_2_i - 48 | 0;
    $cmp40348_i = ($c_addr_2_i | 0) == 46;
    L223 : do {
     if ($sub37346_i >>> 0 < 10 >>> 0 | $cmp40348_i) {
      $arrayidx77_i = $x_i + 496 | 0;
      $lrp_2350_i$1 = $lrp_1_i$1;
      $lrp_2350_i$0 = $lrp_1_i$0;
      $dc_0351_i$1 = 0;
      $dc_0351_i$0 = 0;
      $lnz_0352_i = 0;
      $gotdig_3353_i = $gotdig_2_i97;
      $gotrad_1354_i = $gotrad_0_i98;
      $k_0355_i = 0;
      $j_0356_i = 0;
      $c_addr_3357_i = $c_addr_2_i;
      $sub37358_i = $sub37346_i;
      $cmp40359_i = $cmp40348_i;
      L225 : while (1) {
       do {
        if ($cmp40359_i) {
         if (($gotrad_1354_i | 0) == 0) {
          $j_2_i = $j_0356_i;
          $k_2_i = $k_0355_i;
          $gotrad_2_i = 1;
          $gotdig_4_i = $gotdig_3353_i;
          $lnz_2_i = $lnz_0352_i;
          $dc_1_i103$1 = $dc_0351_i$1;
          $dc_1_i103$0 = $dc_0351_i$0;
          $lrp_3_i$1 = $dc_0351_i$1;
          $lrp_3_i$0 = $dc_0351_i$0;
         } else {
          break L225;
         }
        } else {
         $inc_i99$0 = _i64Add($dc_0351_i$0, $dc_0351_i$1, 1, 0) | 0;
         $inc_i99$1 = tempRet0;
         $cmp51_i = ($c_addr_3357_i | 0) != 48;
         if (($k_0355_i | 0) >= 125) {
          if (!$cmp51_i) {
           $j_2_i = $j_0356_i;
           $k_2_i = $k_0355_i;
           $gotrad_2_i = $gotrad_1354_i;
           $gotdig_4_i = $gotdig_3353_i;
           $lnz_2_i = $lnz_0352_i;
           $dc_1_i103$1 = $inc_i99$1;
           $dc_1_i103$0 = $inc_i99$0;
           $lrp_3_i$1 = $lrp_2350_i$1;
           $lrp_3_i$0 = $lrp_2350_i$0;
           break;
          }
          HEAP32[$arrayidx77_i >> 2] = HEAP32[$arrayidx77_i >> 2] | 1;
          $j_2_i = $j_0356_i;
          $k_2_i = $k_0355_i;
          $gotrad_2_i = $gotrad_1354_i;
          $gotdig_4_i = $gotdig_3353_i;
          $lnz_2_i = $lnz_0352_i;
          $dc_1_i103$1 = $inc_i99$1;
          $dc_1_i103$0 = $inc_i99$0;
          $lrp_3_i$1 = $lrp_2350_i$1;
          $lrp_3_i$0 = $lrp_2350_i$0;
          break;
         }
         $arrayidx64_i = $x_i + ($k_0355_i << 2) | 0;
         if (($j_0356_i | 0) == 0) {
          $storemerge_i = $sub37358_i;
         } else {
          $storemerge_i = $c_addr_3357_i - 48 + ((HEAP32[$arrayidx64_i >> 2] | 0) * 10 | 0) | 0;
         }
         HEAP32[$arrayidx64_i >> 2] = $storemerge_i;
         $inc66_i = $j_0356_i + 1 | 0;
         $cmp67_i = ($inc66_i | 0) == 9;
         $j_2_i = $cmp67_i ? 0 : $inc66_i;
         $k_2_i = ($cmp67_i & 1) + $k_0355_i | 0;
         $gotrad_2_i = $gotrad_1354_i;
         $gotdig_4_i = 1;
         $lnz_2_i = $cmp51_i ? $inc_i99$0 : $lnz_0352_i;
         $dc_1_i103$1 = $inc_i99$1;
         $dc_1_i103$0 = $inc_i99$0;
         $lrp_3_i$1 = $lrp_2350_i$1;
         $lrp_3_i$0 = $lrp_2350_i$0;
        }
       } while (0);
       $69 = HEAP32[$rpos >> 2] | 0;
       if ($69 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
        HEAP32[$rpos >> 2] = $69 + 1;
        $c_addr_3_be_i = HEAPU8[$69 >> 0] | 0;
       } else {
        $c_addr_3_be_i = ___shgetc($f) | 0;
       }
       $sub37_i = $c_addr_3_be_i - 48 | 0;
       $cmp40_i = ($c_addr_3_be_i | 0) == 46;
       if ($sub37_i >>> 0 < 10 >>> 0 | $cmp40_i) {
        $lrp_2350_i$1 = $lrp_3_i$1;
        $lrp_2350_i$0 = $lrp_3_i$0;
        $dc_0351_i$1 = $dc_1_i103$1;
        $dc_0351_i$0 = $dc_1_i103$0;
        $lnz_0352_i = $lnz_2_i;
        $gotdig_3353_i = $gotdig_4_i;
        $gotrad_1354_i = $gotrad_2_i;
        $k_0355_i = $k_2_i;
        $j_0356_i = $j_2_i;
        $c_addr_3357_i = $c_addr_3_be_i;
        $sub37358_i = $sub37_i;
        $cmp40359_i = $cmp40_i;
       } else {
        $lrp_2_lcssa_i$1 = $lrp_3_i$1;
        $lrp_2_lcssa_i$0 = $lrp_3_i$0;
        $dc_0_lcssa_i$1 = $dc_1_i103$1;
        $dc_0_lcssa_i$0 = $dc_1_i103$0;
        $lnz_0_lcssa_i = $lnz_2_i;
        $gotdig_3_lcssa_i = $gotdig_4_i;
        $gotrad_1_lcssa_i = $gotrad_2_i;
        $k_0_lcssa_i = $k_2_i;
        $j_0_lcssa_i = $j_2_i;
        $c_addr_3_lcssa_i = $c_addr_3_be_i;
        label = 163;
        break L223;
       }
      }
      $tobool98237239_i = ($gotdig_3353_i | 0) != 0;
      $lrp_4235240_i$1 = $lrp_2350_i$1;
      $lrp_4235240_i$0 = $lrp_2350_i$0;
      $dc_0330_i$1 = $dc_0351_i$1;
      $dc_0330_i$0 = $dc_0351_i$0;
      $lnz_0334_i = $lnz_0352_i;
      $k_0340_i = $k_0355_i;
      $j_0344_i = $j_0356_i;
      label = 169;
     } else {
      $lrp_2_lcssa_i$1 = $lrp_1_i$1;
      $lrp_2_lcssa_i$0 = $lrp_1_i$0;
      $dc_0_lcssa_i$1 = 0;
      $dc_0_lcssa_i$0 = 0;
      $lnz_0_lcssa_i = 0;
      $gotdig_3_lcssa_i = $gotdig_2_i97;
      $gotrad_1_lcssa_i = $gotrad_0_i98;
      $k_0_lcssa_i = 0;
      $j_0_lcssa_i = 0;
      $c_addr_3_lcssa_i = $c_addr_2_i;
      label = 163;
     }
    } while (0);
    do {
     if ((label | 0) == 163) {
      $tobool95_i = ($gotrad_1_lcssa_i | 0) == 0;
      $dc_0_lrp_2_i$0 = $tobool95_i ? $dc_0_lcssa_i$0 : $lrp_2_lcssa_i$0;
      $dc_0_lrp_2_i$1 = $tobool95_i ? $dc_0_lcssa_i$1 : $lrp_2_lcssa_i$1;
      $tobool98_i = ($gotdig_3_lcssa_i | 0) != 0;
      if (!($tobool98_i & ($c_addr_3_lcssa_i | 32 | 0) == 101)) {
       if (($c_addr_3_lcssa_i | 0) > -1) {
        $tobool98237239_i = $tobool98_i;
        $lrp_4235240_i$1 = $dc_0_lrp_2_i$1;
        $lrp_4235240_i$0 = $dc_0_lrp_2_i$0;
        $dc_0330_i$1 = $dc_0_lcssa_i$1;
        $dc_0330_i$0 = $dc_0_lcssa_i$0;
        $lnz_0334_i = $lnz_0_lcssa_i;
        $k_0340_i = $k_0_lcssa_i;
        $j_0344_i = $j_0_lcssa_i;
        label = 169;
        break;
       } else {
        $lrp_5_i$1 = $dc_0_lrp_2_i$1;
        $lrp_5_i$0 = $dc_0_lrp_2_i$0;
        $tobool98236_i = $tobool98_i;
        $dc_0329_i$1 = $dc_0_lcssa_i$1;
        $dc_0329_i$0 = $dc_0_lcssa_i$0;
        $lnz_0333_i = $lnz_0_lcssa_i;
        $k_0339_i = $k_0_lcssa_i;
        $j_0343_i = $j_0_lcssa_i;
        label = 171;
        break;
       }
      }
      $call103_i$0 = _scanexp($f) | 0;
      $call103_i$1 = tempRet0;
      if (($call103_i$0 | 0) == 0 & ($call103_i$1 | 0) == (-2147483648 | 0)) {
       if ((HEAP32[$shend >> 2] | 0) == 0) {
        $e10_0_i$1 = 0;
        $e10_0_i$0 = 0;
       } else {
        HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
        $e10_0_i$1 = 0;
        $e10_0_i$0 = 0;
       }
      } else {
       $e10_0_i$1 = $call103_i$1;
       $e10_0_i$0 = $call103_i$0;
      }
      $add119_i$0 = _i64Add($e10_0_i$0, $e10_0_i$1, $dc_0_lrp_2_i$0, $dc_0_lrp_2_i$1) | 0;
      $lrp_5241_i$1 = tempRet0;
      $lrp_5241_i$0 = $add119_i$0;
      $dc_0328_i$1 = $dc_0_lcssa_i$1;
      $dc_0328_i$0 = $dc_0_lcssa_i$0;
      $lnz_0332_i = $lnz_0_lcssa_i;
      $k_0338_i = $k_0_lcssa_i;
      $j_0342_i = $j_0_lcssa_i;
     }
    } while (0);
    if ((label | 0) == 169) {
     if ((HEAP32[$shend >> 2] | 0) == 0) {
      $lrp_5_i$1 = $lrp_4235240_i$1;
      $lrp_5_i$0 = $lrp_4235240_i$0;
      $tobool98236_i = $tobool98237239_i;
      $dc_0329_i$1 = $dc_0330_i$1;
      $dc_0329_i$0 = $dc_0330_i$0;
      $lnz_0333_i = $lnz_0334_i;
      $k_0339_i = $k_0340_i;
      $j_0343_i = $j_0344_i;
      label = 171;
     } else {
      $incdec_ptr128_i = (HEAP32[$rpos >> 2] | 0) - 1 | 0;
      HEAP32[$rpos >> 2] = $incdec_ptr128_i;
      if ($tobool98237239_i) {
       $lrp_5241_i$1 = $lrp_4235240_i$1;
       $lrp_5241_i$0 = $lrp_4235240_i$0;
       $dc_0328_i$1 = $dc_0330_i$1;
       $dc_0328_i$0 = $dc_0330_i$0;
       $lnz_0332_i = $lnz_0334_i;
       $k_0338_i = $k_0340_i;
       $j_0342_i = $j_0344_i;
      } else {
       $76 = $incdec_ptr128_i;
       label = 173;
      }
     }
    }
    if ((label | 0) == 171) {
     if ($tobool98236_i) {
      $lrp_5241_i$1 = $lrp_5_i$1;
      $lrp_5241_i$0 = $lrp_5_i$0;
      $dc_0328_i$1 = $dc_0329_i$1;
      $dc_0328_i$0 = $dc_0329_i$0;
      $lnz_0332_i = $lnz_0333_i;
      $k_0338_i = $k_0339_i;
      $j_0342_i = $j_0343_i;
     } else {
      $76 = HEAP32[$rpos >> 2] | 0;
      label = 173;
     }
    }
    if ((label | 0) == 173) {
     $call135_i = ___errno_location() | 0;
     HEAP32[$call135_i >> 2] = 22;
     HEAP32[$f + 104 >> 2] = 0;
     $77 = HEAP32[$f + 8 >> 2] | 0;
     HEAP32[$f + 108 >> 2] = $77 - $76;
     HEAP32[$shend >> 2] = $77;
     $retval_0 = 0.0;
     STACKTOP = sp;
     return +$retval_0;
    }
    $78 = HEAP32[$arrayidx_i >> 2] | 0;
    if (($78 | 0) == 0) {
     $retval_0 = +($sign_0 | 0) * 0.0;
     STACKTOP = sp;
     return +$retval_0;
    }
    $$etemp$15$1 = 0;
    if (($lrp_5241_i$0 | 0) == ($dc_0328_i$0 | 0) & ($lrp_5241_i$1 | 0) == ($dc_0328_i$1 | 0) & (($dc_0328_i$1 | 0) < ($$etemp$15$1 | 0) | ($dc_0328_i$1 | 0) == ($$etemp$15$1 | 0) & $dc_0328_i$0 >>> 0 < 10 >>> 0)) {
     if ($bits_0_ph >>> 0 > 30 >>> 0 | ($78 >>> ($bits_0_ph >>> 0) | 0) == 0) {
      $retval_0 = +($sign_0 | 0) * +($78 >>> 0 >>> 0);
      STACKTOP = sp;
      return +$retval_0;
     }
    }
    $div_i107 = ($emin_0_ph | 0) / -2 | 0;
    $conv162_i$1 = ($div_i107 | 0) < 0 | 0 ? -1 : 0;
    if (($lrp_5241_i$1 | 0) > ($conv162_i$1 | 0) | ($lrp_5241_i$1 | 0) == ($conv162_i$1 | 0) & $lrp_5241_i$0 >>> 0 > $div_i107 >>> 0) {
     $call166_i = ___errno_location() | 0;
     HEAP32[$call166_i >> 2] = 34;
     $retval_0 = +($sign_0 | 0) * 1.7976931348623157e+308 * 1.7976931348623157e+308;
     STACKTOP = sp;
     return +$retval_0;
    }
    $sub171_i = $emin_0_ph - 106 | 0;
    $conv172_i$1 = ($sub171_i | 0) < 0 | 0 ? -1 : 0;
    if (($lrp_5241_i$1 | 0) < ($conv172_i$1 | 0) | ($lrp_5241_i$1 | 0) == ($conv172_i$1 | 0) & $lrp_5241_i$0 >>> 0 < $sub171_i >>> 0) {
     $call176_i = ___errno_location() | 0;
     HEAP32[$call176_i >> 2] = 34;
     $retval_0 = +($sign_0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     STACKTOP = sp;
     return +$retval_0;
    }
    if (($j_0342_i | 0) == 0) {
     $k_3_i = $k_0338_i;
    } else {
     if (($j_0342_i | 0) < 9) {
      $arrayidx187_i = $x_i + ($k_0338_i << 2) | 0;
      $j_3324_i = $j_0342_i;
      $mul188325_i = HEAP32[$arrayidx187_i >> 2] | 0;
      do {
       $mul188325_i = $mul188325_i * 10 | 0;
       $j_3324_i = $j_3324_i + 1 | 0;
      } while (($j_3324_i | 0) < 9);
      HEAP32[$arrayidx187_i >> 2] = $mul188325_i;
     }
     $k_3_i = $k_0338_i + 1 | 0;
    }
    $conv194_i108 = $lrp_5241_i$0;
    if (($lnz_0332_i | 0) < 9) {
     if (($lnz_0332_i | 0) <= ($conv194_i108 | 0) & ($conv194_i108 | 0) < 18) {
      if (($conv194_i108 | 0) == 9) {
       $retval_0 = +($sign_0 | 0) * +((HEAP32[$arrayidx_i >> 2] | 0) >>> 0 >>> 0);
       STACKTOP = sp;
       return +$retval_0;
      }
      if (($conv194_i108 | 0) < 9) {
       $retval_0 = +($sign_0 | 0) * +((HEAP32[$arrayidx_i >> 2] | 0) >>> 0 >>> 0) / +(HEAP32[528 + (8 - $conv194_i108 << 2) >> 2] | 0);
       STACKTOP = sp;
       return +$retval_0;
      }
      $sub226_i = $bits_0_ph + 27 + ($conv194_i108 * -3 | 0) | 0;
      $_pre_i = HEAP32[$arrayidx_i >> 2] | 0;
      if (($sub226_i | 0) > 30 | ($_pre_i >>> ($sub226_i >>> 0) | 0) == 0) {
       $retval_0 = +($sign_0 | 0) * +($_pre_i >>> 0 >>> 0) * +(HEAP32[528 + ($conv194_i108 - 10 << 2) >> 2] | 0);
       STACKTOP = sp;
       return +$retval_0;
      }
     }
    }
    $rem_i = ($conv194_i108 | 0) % 9 | 0;
    if (($rem_i | 0) == 0) {
     $a_2_ph268_i = 0;
     $z_1_ph267_i = $k_3_i;
     $e2_0_ph_i = 0;
     $rp_2_ph266_i = $conv194_i108;
    } else {
     $cond255_i = ($conv194_i108 | 0) > -1 ? $rem_i : $rem_i + 9 | 0;
     $84 = HEAP32[528 + (8 - $cond255_i << 2) >> 2] | 0;
     if (($k_3_i | 0) == 0) {
      $z_0_i = 0;
      $a_0_lcssa400_i = 0;
      $rp_0_lcssa401_i = $conv194_i108;
     } else {
      $div268_i = 1e9 / ($84 | 0) | 0;
      $rp_0316_i = $conv194_i108;
      $a_0317_i = 0;
      $k_4318_i = 0;
      $carry_0319_i = 0;
      while (1) {
       $arrayidx262_i = $x_i + ($k_4318_i << 2) | 0;
       $85 = HEAP32[$arrayidx262_i >> 2] | 0;
       $add266_i = (($85 >>> 0) / ($84 >>> 0) | 0) + $carry_0319_i | 0;
       HEAP32[$arrayidx262_i >> 2] = $add266_i;
       $carry_0319_i = Math_imul(($85 >>> 0) % ($84 >>> 0) | 0, $div268_i) | 0;
       $k_4318_i$looptemp = $k_4318_i;
       $k_4318_i = $k_4318_i + 1 | 0;
       if (($k_4318_i$looptemp | 0) == ($a_0317_i | 0) & ($add266_i | 0) == 0) {
        $a_1_i = $k_4318_i & 127;
        $rp_1_i114 = $rp_0316_i - 9 | 0;
       } else {
        $a_1_i = $a_0317_i;
        $rp_1_i114 = $rp_0316_i;
       }
       if (($k_4318_i | 0) == ($k_3_i | 0)) {
        break;
       } else {
        $rp_0316_i = $rp_1_i114;
        $a_0317_i = $a_1_i;
       }
      }
      if (($carry_0319_i | 0) == 0) {
       $z_0_i = $k_3_i;
       $a_0_lcssa400_i = $a_1_i;
       $rp_0_lcssa401_i = $rp_1_i114;
      } else {
       HEAP32[$x_i + ($k_3_i << 2) >> 2] = $carry_0319_i;
       $z_0_i = $k_3_i + 1 | 0;
       $a_0_lcssa400_i = $a_1_i;
       $rp_0_lcssa401_i = $rp_1_i114;
      }
     }
     $a_2_ph268_i = $a_0_lcssa400_i;
     $z_1_ph267_i = $z_0_i;
     $e2_0_ph_i = 0;
     $rp_2_ph266_i = 9 - $cond255_i + $rp_0_lcssa401_i | 0;
    }
    L314 : while (1) {
     $arrayidx294_i = $x_i + ($a_2_ph268_i << 2) | 0;
     if (($rp_2_ph266_i | 0) < 18) {
      $z_1_us_i = $z_1_ph267_i;
      $e2_0_us_i = $e2_0_ph_i;
      while (1) {
       $carry298_0_us_i = 0;
       $k_5_in_us_i = $z_1_us_i + 127 | 0;
       $z_2_us_i = $z_1_us_i;
       while (1) {
        $k_5_us_i = $k_5_in_us_i & 127;
        $arrayidx305_us_i = $x_i + ($k_5_us_i << 2) | 0;
        $conv306_us_i$0 = HEAP32[$arrayidx305_us_i >> 2] | 0;
        $add308_us_i$0 = _i64Add($conv306_us_i$0 << 29 | 0 >>> 3, 0 << 29 | $conv306_us_i$0 >>> 3, $carry298_0_us_i, 0) | 0;
        $add308_us_i$1 = tempRet0;
        $$etemp$16$1 = 0;
        if ($add308_us_i$1 >>> 0 > $$etemp$16$1 >>> 0 | $add308_us_i$1 >>> 0 == $$etemp$16$1 >>> 0 & $add308_us_i$0 >>> 0 > 1e9 >>> 0) {
         $div312_us_i$0 = ___udivdi3($add308_us_i$0, $add308_us_i$1, 1e9, 0) | 0;
         $rem314_us_i$0 = ___uremdi3($add308_us_i$0, $add308_us_i$1, 1e9, 0) | 0;
         $carry298_1_us_i = $div312_us_i$0;
         $rem314_sink_off0_us_i = $rem314_us_i$0;
        } else {
         $carry298_1_us_i = 0;
         $rem314_sink_off0_us_i = $add308_us_i$0;
        }
        HEAP32[$arrayidx305_us_i >> 2] = $rem314_sink_off0_us_i;
        $cmp326_us_i = ($k_5_us_i | 0) == ($a_2_ph268_i | 0);
        if (($k_5_us_i | 0) != ($z_2_us_i + 127 & 127 | 0) | $cmp326_us_i) {
         $z_3_us_i = $z_2_us_i;
        } else {
         $z_3_us_i = ($rem314_sink_off0_us_i | 0) == 0 ? $k_5_us_i : $z_2_us_i;
        }
        if ($cmp326_us_i) {
         break;
        } else {
         $carry298_0_us_i = $carry298_1_us_i;
         $k_5_in_us_i = $k_5_us_i - 1 | 0;
         $z_2_us_i = $z_3_us_i;
        }
       }
       $sub299_us_i = $e2_0_us_i - 29 | 0;
       if (($carry298_1_us_i | 0) == 0) {
        $z_1_us_i = $z_3_us_i;
        $e2_0_us_i = $sub299_us_i;
       } else {
        $sub299_lcssa_i = $sub299_us_i;
        $z_3_lcssa_lcssa_i = $z_3_us_i;
        $carry298_1_lcssa_lcssa_i = $carry298_1_us_i;
        break;
       }
      }
     } else {
      if (($rp_2_ph266_i | 0) == 18) {
       $z_1_us273_i = $z_1_ph267_i;
       $e2_0_us272_i = $e2_0_ph_i;
      } else {
       $a_3_ph_i = $a_2_ph268_i;
       $z_5_ph_i = $z_1_ph267_i;
       $e2_1_ph_i = $e2_0_ph_i;
       $rp_3_ph263_i = $rp_2_ph266_i;
       break;
      }
      while (1) {
       if (!((HEAP32[$arrayidx294_i >> 2] | 0) >>> 0 < 9007199 >>> 0)) {
        $a_3_ph_i = $a_2_ph268_i;
        $z_5_ph_i = $z_1_us273_i;
        $e2_1_ph_i = $e2_0_us272_i;
        $rp_3_ph263_i = 18;
        break L314;
       }
       $carry298_0_us283_i = 0;
       $k_5_in_us282_i = $z_1_us273_i + 127 | 0;
       $z_2_us281_i = $z_1_us273_i;
       while (1) {
        $k_5_us284_i = $k_5_in_us282_i & 127;
        $arrayidx305_us285_i = $x_i + ($k_5_us284_i << 2) | 0;
        $conv306_us286_i$0 = HEAP32[$arrayidx305_us285_i >> 2] | 0;
        $add308_us289_i$0 = _i64Add($conv306_us286_i$0 << 29 | 0 >>> 3, 0 << 29 | $conv306_us286_i$0 >>> 3, $carry298_0_us283_i, 0) | 0;
        $add308_us289_i$1 = tempRet0;
        $$etemp$19$1 = 0;
        if ($add308_us289_i$1 >>> 0 > $$etemp$19$1 >>> 0 | $add308_us289_i$1 >>> 0 == $$etemp$19$1 >>> 0 & $add308_us289_i$0 >>> 0 > 1e9 >>> 0) {
         $div312_us293_i$0 = ___udivdi3($add308_us289_i$0, $add308_us289_i$1, 1e9, 0) | 0;
         $rem314_us295_i$0 = ___uremdi3($add308_us289_i$0, $add308_us289_i$1, 1e9, 0) | 0;
         $carry298_1_us299_i = $div312_us293_i$0;
         $rem314_sink_off0_us298_i = $rem314_us295_i$0;
        } else {
         $carry298_1_us299_i = 0;
         $rem314_sink_off0_us298_i = $add308_us289_i$0;
        }
        HEAP32[$arrayidx305_us285_i >> 2] = $rem314_sink_off0_us298_i;
        $cmp326_us303_i = ($k_5_us284_i | 0) == ($a_2_ph268_i | 0);
        if (($k_5_us284_i | 0) != ($z_2_us281_i + 127 & 127 | 0) | $cmp326_us303_i) {
         $z_3_us309_i = $z_2_us281_i;
        } else {
         $z_3_us309_i = ($rem314_sink_off0_us298_i | 0) == 0 ? $k_5_us284_i : $z_2_us281_i;
        }
        if ($cmp326_us303_i) {
         break;
        } else {
         $carry298_0_us283_i = $carry298_1_us299_i;
         $k_5_in_us282_i = $k_5_us284_i - 1 | 0;
         $z_2_us281_i = $z_3_us309_i;
        }
       }
       $sub299_us278_i = $e2_0_us272_i - 29 | 0;
       if (($carry298_1_us299_i | 0) == 0) {
        $z_1_us273_i = $z_3_us309_i;
        $e2_0_us272_i = $sub299_us278_i;
       } else {
        $sub299_lcssa_i = $sub299_us278_i;
        $z_3_lcssa_lcssa_i = $z_3_us309_i;
        $carry298_1_lcssa_lcssa_i = $carry298_1_us299_i;
        break;
       }
      }
     }
     $and345_i = $a_2_ph268_i + 127 & 127;
     if (($and345_i | 0) == ($z_3_lcssa_lcssa_i | 0)) {
      $and350_i = $z_3_lcssa_lcssa_i + 127 & 127;
      $arrayidx354_i = $x_i + (($z_3_lcssa_lcssa_i + 126 & 127) << 2) | 0;
      HEAP32[$arrayidx354_i >> 2] = HEAP32[$arrayidx354_i >> 2] | HEAP32[$x_i + ($and350_i << 2) >> 2];
      $z_4_i = $and350_i;
     } else {
      $z_4_i = $z_3_lcssa_lcssa_i;
     }
     HEAP32[$x_i + ($and345_i << 2) >> 2] = $carry298_1_lcssa_lcssa_i;
     $a_2_ph268_i = $and345_i;
     $z_1_ph267_i = $z_4_i;
     $e2_0_ph_i = $sub299_lcssa_i;
     $rp_2_ph266_i = $rp_2_ph266_i + 9 | 0;
    }
    L345 : while (1) {
     $and435_i = $z_5_ph_i + 1 & 127;
     $arrayidx445_i = $x_i + (($z_5_ph_i + 127 & 127) << 2) | 0;
     $a_3_i_ph = $a_3_ph_i;
     $e2_1_i_ph = $e2_1_ph_i;
     $rp_3_i_ph = $rp_3_ph263_i;
     while (1) {
      $cmp392_i = ($rp_3_i_ph | 0) == 18;
      $__i = ($rp_3_i_ph | 0) > 27 ? 9 : 1;
      $a_3_i = $a_3_i_ph;
      $e2_1_i = $e2_1_i_ph;
      while (1) {
       $i_0254_i = 0;
       while (1) {
        $and368_i = $i_0254_i + $a_3_i & 127;
        if (($and368_i | 0) == ($z_5_ph_i | 0)) {
         $i_1_i = 2;
         break;
        }
        $91 = HEAP32[$x_i + ($and368_i << 2) >> 2] | 0;
        $92 = HEAP32[520 + ($i_0254_i << 2) >> 2] | 0;
        if ($91 >>> 0 < $92 >>> 0) {
         $i_1_i = 2;
         break;
        }
        $inc387_i = $i_0254_i + 1 | 0;
        if ($91 >>> 0 > $92 >>> 0) {
         $i_1_i = $i_0254_i;
         break;
        }
        if (($inc387_i | 0) < 2) {
         $i_0254_i = $inc387_i;
        } else {
         $i_1_i = $inc387_i;
         break;
        }
       }
       if (($i_1_i | 0) == 2 & $cmp392_i) {
        break L345;
       }
       $add400_i = $__i + $e2_1_i | 0;
       if (($a_3_i | 0) == ($z_5_ph_i | 0)) {
        $a_3_i = $z_5_ph_i;
        $e2_1_i = $add400_i;
       } else {
        break;
       }
      }
      $sub409_i = (1 << $__i) - 1 | 0;
      $shr415_i = 1e9 >>> ($__i >>> 0);
      $rp_4256_i = $rp_3_i_ph;
      $a_4257_i = $a_3_i;
      $k_6258_i = $a_3_i;
      $carry361_0260_i = 0;
      do {
       $arrayidx407_i = $x_i + ($k_6258_i << 2) | 0;
       $93 = HEAP32[$arrayidx407_i >> 2] | 0;
       $add413_i = ($93 >>> ($__i >>> 0)) + $carry361_0260_i | 0;
       HEAP32[$arrayidx407_i >> 2] = $add413_i;
       $carry361_0260_i = Math_imul($93 & $sub409_i, $shr415_i) | 0;
       $or_cond229_i = ($k_6258_i | 0) == ($a_4257_i | 0) & ($add413_i | 0) == 0;
       $k_6258_i = $k_6258_i + 1 & 127;
       $rp_4256_i = $or_cond229_i ? $rp_4256_i - 9 | 0 : $rp_4256_i;
       $a_4257_i = $or_cond229_i ? $k_6258_i : $a_4257_i;
      } while (($k_6258_i | 0) != ($z_5_ph_i | 0));
      if (($carry361_0260_i | 0) == 0) {
       $a_3_i_ph = $a_4257_i;
       $e2_1_i_ph = $add400_i;
       $rp_3_i_ph = $rp_4256_i;
       continue;
      }
      if (($and435_i | 0) != ($a_4257_i | 0)) {
       break;
      }
      HEAP32[$arrayidx445_i >> 2] = HEAP32[$arrayidx445_i >> 2] | 1;
      $a_3_i_ph = $a_4257_i;
      $e2_1_i_ph = $add400_i;
      $rp_3_i_ph = $rp_4256_i;
     }
     HEAP32[$x_i + ($z_5_ph_i << 2) >> 2] = $carry361_0260_i;
     $a_3_ph_i = $a_4257_i;
     $z_5_ph_i = $and435_i;
     $e2_1_ph_i = $add400_i;
     $rp_3_ph263_i = $rp_4256_i;
    }
    $and455_i = $a_3_i & 127;
    if (($and455_i | 0) == ($z_5_ph_i | 0)) {
     HEAP32[$x_i + ($and435_i - 1 << 2) >> 2] = 0;
     $z_7_i = $and435_i;
    } else {
     $z_7_i = $z_5_ph_i;
    }
    $conv468_i = +((HEAP32[$x_i + ($and455_i << 2) >> 2] | 0) >>> 0 >>> 0);
    $and455_1_i = $a_3_i + 1 & 127;
    if (($and455_1_i | 0) == ($z_7_i | 0)) {
     $and460_1_i = $z_7_i + 1 & 127;
     HEAP32[$x_i + ($and460_1_i - 1 << 2) >> 2] = 0;
     $z_7_1_i = $and460_1_i;
    } else {
     $z_7_1_i = $z_7_i;
    }
    $conv473_i = +($sign_0 | 0);
    $mul474_i = $conv473_i * ($conv468_i * 1.0e9 + +((HEAP32[$x_i + ($and455_1_i << 2) >> 2] | 0) >>> 0 >>> 0));
    $add475_i = $e2_1_i + 53 | 0;
    $sub476_i = $add475_i - $emin_0_ph | 0;
    if (($sub476_i | 0) < ($bits_0_ph | 0)) {
     if (($sub476_i | 0) < 0) {
      $denormal_0244_i = 1;
      $bits_addr_0245_i = 0;
      label = 246;
     } else {
      $bits_addr_0_i115 = $sub476_i;
      $denormal_0_i = 1;
      label = 245;
     }
    } else {
     $bits_addr_0_i115 = $bits_0_ph;
     $denormal_0_i = 0;
     label = 245;
    }
    if ((label | 0) == 245) {
     if (($bits_addr_0_i115 | 0) < 53) {
      $denormal_0244_i = $denormal_0_i;
      $bits_addr_0245_i = $bits_addr_0_i115;
      label = 246;
     } else {
      $bias_0_i117 = 0.0;
      $frac_0_i = 0.0;
      $y_1_i116 = $mul474_i;
      $denormal_0243_i = $denormal_0_i;
      $bits_addr_0246_i = $bits_addr_0_i115;
     }
    }
    if ((label | 0) == 246) {
     $sub491_i = 105 - $bits_addr_0245_i | 0;
     if (($sub491_i | 0) > 1023) {
      $sub_i10 = $sub491_i - 1023 | 0;
      if (($sub_i10 | 0) > 1023) {
       $sub4_i13 = $sub491_i - 2046 | 0;
       $y_0_i27 = Infinity;
       $n_addr_0_i26 = ($sub4_i13 | 0) > 1023 ? 1023 : $sub4_i13;
      } else {
       $y_0_i27 = 8.98846567431158e+307;
       $n_addr_0_i26 = $sub_i10;
      }
     } else {
      if (($sub491_i | 0) < -1022) {
       $add_i19 = $sub491_i + 1022 | 0;
       if (($add_i19 | 0) < -1022) {
        $add14_i22 = $sub491_i + 2044 | 0;
        $y_0_i27 = 0.0;
        $n_addr_0_i26 = ($add14_i22 | 0) < -1022 ? -1022 : $add14_i22;
       } else {
        $y_0_i27 = 2.2250738585072014e-308;
        $n_addr_0_i26 = $add_i19;
       }
      } else {
       $y_0_i27 = 1.0;
       $n_addr_0_i26 = $sub491_i;
      }
     }
     $call493_i = +_copysign(+($y_0_i27 * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $n_addr_0_i26 + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3])), +$mul474_i);
     $sub494_i = 53 - $bits_addr_0245_i | 0;
     if (($sub494_i | 0) > 1023) {
      $sub_i4 = $sub494_i - 1023 | 0;
      if (($sub_i4 | 0) > 1023) {
       $sub4_i = $sub494_i - 2046 | 0;
       $y_0_i8 = Infinity;
       $n_addr_0_i = ($sub4_i | 0) > 1023 ? 1023 : $sub4_i;
      } else {
       $y_0_i8 = 8.98846567431158e+307;
       $n_addr_0_i = $sub_i4;
      }
     } else {
      if (($sub494_i | 0) < -1022) {
       $add_i = $sub494_i + 1022 | 0;
       if (($add_i | 0) < -1022) {
        $add14_i = $sub494_i + 2044 | 0;
        $y_0_i8 = 0.0;
        $n_addr_0_i = ($add14_i | 0) < -1022 ? -1022 : $add14_i;
       } else {
        $y_0_i8 = 2.2250738585072014e-308;
        $n_addr_0_i = $add_i;
       }
      } else {
       $y_0_i8 = 1.0;
       $n_addr_0_i = $sub494_i;
      }
     }
     $call496_i = +_fmod(+$mul474_i, +($y_0_i8 * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $n_addr_0_i + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3])));
     $bias_0_i117 = $call493_i;
     $frac_0_i = $call496_i;
     $y_1_i116 = $call493_i + ($mul474_i - $call496_i);
     $denormal_0243_i = $denormal_0244_i;
     $bits_addr_0246_i = $bits_addr_0245_i;
    }
    $and501_i = $a_3_i + 2 & 127;
    if (($and501_i | 0) == ($z_7_1_i | 0)) {
     $frac_2_i = $frac_0_i;
    } else {
     $98 = HEAP32[$x_i + ($and501_i << 2) >> 2] | 0;
     do {
      if ($98 >>> 0 < 5e8 >>> 0) {
       if (($98 | 0) == 0) {
        if (($a_3_i + 3 & 127 | 0) == ($z_7_1_i | 0)) {
         $frac_1_i = $frac_0_i;
         break;
        }
       }
       $frac_1_i = $conv473_i * .25 + $frac_0_i;
      } else {
       if ($98 >>> 0 > 5e8 >>> 0) {
        $frac_1_i = $conv473_i * .75 + $frac_0_i;
        break;
       }
       if (($a_3_i + 3 & 127 | 0) == ($z_7_1_i | 0)) {
        $frac_1_i = $conv473_i * .5 + $frac_0_i;
        break;
       } else {
        $frac_1_i = $conv473_i * .75 + $frac_0_i;
        break;
       }
      }
     } while (0);
     if ((53 - $bits_addr_0246_i | 0) > 1) {
      if (+_fmod(+$frac_1_i, +1.0) != 0.0) {
       $frac_2_i = $frac_1_i;
      } else {
       $frac_2_i = $frac_1_i + 1.0;
      }
     } else {
      $frac_2_i = $frac_1_i;
     }
    }
    $sub562_i = $y_1_i116 + $frac_2_i - $bias_0_i117;
    do {
     if (($add475_i & 2147483647 | 0) > (-2 - $sum_i | 0)) {
      if (+Math_abs(+$sub562_i) < 9007199254740992.0) {
       $y_2_i118 = $sub562_i;
       $denormal_2_i = $denormal_0243_i;
       $e2_2_i = $e2_1_i;
      } else {
       $y_2_i118 = $sub562_i * .5;
       $denormal_2_i = ($denormal_0243_i | 0) != 0 & ($bits_addr_0246_i | 0) == ($sub476_i | 0) ? 0 : $denormal_0243_i;
       $e2_2_i = $e2_1_i + 1 | 0;
      }
      if (($e2_2_i + 50 | 0) <= ($sub1_i | 0)) {
       if (!(($denormal_2_i | 0) != 0 & $frac_2_i != 0.0)) {
        $y_3_i = $y_2_i118;
        $e2_3_i = $e2_2_i;
        break;
       }
      }
      $call592_i = ___errno_location() | 0;
      HEAP32[$call592_i >> 2] = 34;
      $y_3_i = $y_2_i118;
      $e2_3_i = $e2_2_i;
     } else {
      $y_3_i = $sub562_i;
      $e2_3_i = $e2_1_i;
     }
    } while (0);
    if (($e2_3_i | 0) > 1023) {
     $mul_i_i = $y_3_i * 8.98846567431158e+307;
     $sub_i_i = $e2_3_i - 1023 | 0;
     if (($sub_i_i | 0) > 1023) {
      $sub4_i_i = $e2_3_i - 2046 | 0;
      $y_0_i_i = $mul_i_i * 8.98846567431158e+307;
      $n_addr_0_i_i = ($sub4_i_i | 0) > 1023 ? 1023 : $sub4_i_i;
     } else {
      $y_0_i_i = $mul_i_i;
      $n_addr_0_i_i = $sub_i_i;
     }
    } else {
     if (($e2_3_i | 0) < -1022) {
      $mul10_i_i = $y_3_i * 2.2250738585072014e-308;
      $add_i_i = $e2_3_i + 1022 | 0;
      if (($add_i_i | 0) < -1022) {
       $add14_i_i = $e2_3_i + 2044 | 0;
       $y_0_i_i = $mul10_i_i * 2.2250738585072014e-308;
       $n_addr_0_i_i = ($add14_i_i | 0) < -1022 ? -1022 : $add14_i_i;
      } else {
       $y_0_i_i = $mul10_i_i;
       $n_addr_0_i_i = $add_i_i;
      }
     } else {
      $y_0_i_i = $y_3_i;
      $n_addr_0_i_i = $e2_3_i;
     }
    }
    $retval_0 = $y_0_i_i * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $n_addr_0_i_i + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3]);
    STACKTOP = sp;
    return +$retval_0;
   } else {
    $_pre = HEAP32[$rpos >> 2] | 0;
    if ((HEAP32[$shend >> 2] | 0) == 0) {
     $27 = $_pre;
    } else {
     $incdec_ptr212 = $_pre - 1 | 0;
     HEAP32[$rpos >> 2] = $incdec_ptr212;
     $27 = $incdec_ptr212;
    }
    $call215 = ___errno_location() | 0;
    HEAP32[$call215 >> 2] = 22;
    HEAP32[$f + 104 >> 2] = 0;
    $28 = HEAP32[$f + 8 >> 2] | 0;
    HEAP32[$f + 108 >> 2] = $28 - $27;
    HEAP32[$shend >> 2] = $28;
    $retval_0 = 0.0;
    STACKTOP = sp;
    return +$retval_0;
   }
  }
 } while (0);
 if ((label | 0) == 23) {
  if ((HEAP32[$shend >> 2] | 0) != 0) {
   $incdec_ptr65 = (HEAP32[$rpos >> 2] | 0) - 1 | 0;
   HEAP32[$rpos >> 2] = $incdec_ptr65;
   if (!($i_0_lcssa >>> 0 < 4 >>> 0)) {
    $i_1 = $i_0_lcssa;
    $incdec_ptr7899 = $incdec_ptr65;
    do {
     $incdec_ptr7899 = $incdec_ptr7899 - 1 | 0;
     $i_1 = $i_1 - 1 | 0;
    } while ($i_1 >>> 0 > 3 >>> 0);
    HEAP32[$rpos >> 2] = $incdec_ptr7899;
   }
  }
 }
 $retval_0 = +($sign_0 | 0) * Infinity;
 STACKTOP = sp;
 return +$retval_0;
}
function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $cond = 0, $shr = 0, $0 = 0, $shr3 = 0, $add8 = 0, $shl = 0, $1 = 0, $2 = 0, $3 = 0, $fd9 = 0, $4 = 0, $bk = 0, $shl22 = 0, $9 = 0, $12 = 0, $shl37 = 0, $and41 = 0, $sub44 = 0, $and46 = 0, $shr47 = 0, $and49 = 0, $shr51 = 0, $and53 = 0, $shr55 = 0, $and57 = 0, $shr59 = 0, $and61 = 0, $add64 = 0, $shl65 = 0, $13 = 0, $14 = 0, $15 = 0, $fd69 = 0, $16 = 0, $bk78 = 0, $20 = 0, $shl90 = 0, $sub91 = 0, $21 = 0, $22 = 0, $24 = 0, $shr101 = 0, $shl102 = 0, $25 = 0, $26 = 0, $shl105 = 0, $27 = 0, $28 = 0, $_pre_phi = 0, $F104_0 = 0, $32 = 0, $sub2_i = 0, $and3_i = 0, $shr4_i = 0, $and6_i = 0, $shr7_i = 0, $and9_i = 0, $shr11_i = 0, $and13_i = 0, $shr15_i = 0, $and17_i = 0, $33 = 0, $rsize_0_i = 0, $v_0_i = 0, $t_0_i = 0, $35 = 0, $36 = 0, $cond7_i = 0, $sub31_i = 0, $cmp32_i = 0, $38 = 0, $39 = 0, $add_ptr_i = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $bk47_i = 0, $fd50_i = 0, $arrayidx61_i = 0, $47 = 0, $arrayidx65_i = 0, $48 = 0, $RP_0_i = 0, $R_0_i = 0, $arrayidx71_i = 0, $49 = 0, $arrayidx75_i = 0, $50 = 0, $R_1_i = 0, $52 = 0, $arrayidx94_i = 0, $arrayidx113_i = 0, $59 = 0, $60 = 0, $62 = 0, $add177_i = 0, $65 = 0, $68 = 0, $69 = 0, $shr194_i = 0, $shl195_i = 0, $70 = 0, $71 = 0, $shl198_i = 0, $72 = 0, $73 = 0, $_pre_phi_i = 0, $F197_0_i = 0, $add143 = 0, $and144 = 0, $77 = 0, $sub_i107 = 0, $shr_i108 = 0, $and_i112 = 0, $shl_i113 = 0, $and8_i = 0, $shl9_i = 0, $and12_i = 0, $add17_i = 0, $idx_0_i = 0, $78 = 0, $cond_i = 0, $rst_0_i = 0, $sizebits_0_i = 0, $t_0_i121 = 0, $rsize_0_i122 = 0, $v_0_i123 = 0, $and32_i = 0, $sub33_i = 0, $rsize_1_i = 0, $v_1_i = 0, $80 = 0, $81 = 0, $rst_1_i = 0, $t_1_i = 0, $rsize_2_i = 0, $v_2_i = 0, $shl59_i = 0, $and63_i = 0, $sub69_i = 0, $and72_i = 0, $shr74_i = 0, $and76_i = 0, $shr78_i = 0, $and80_i = 0, $shr82_i = 0, $and84_i = 0, $shr86_i = 0, $and88_i = 0, $t_2_ph_i = 0, $v_332_i = 0, $rsize_331_i = 0, $t_230_i = 0, $sub100_i = 0, $cmp101_i = 0, $sub100_rsize_3_i = 0, $t_2_v_3_i = 0, $84 = 0, $85 = 0, $v_3_lcssa_i = 0, $rsize_3_lcssa_i = 0, $87 = 0, $88 = 0, $add_ptr_i128 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $bk135_i = 0, $fd138_i = 0, $arrayidx150_i = 0, $96 = 0, $arrayidx154_i133 = 0, $97 = 0, $RP_0_i136 = 0, $R_0_i137 = 0, $arrayidx160_i = 0, $98 = 0, $arrayidx164_i = 0, $99 = 0, $R_1_i139 = 0, $101 = 0, $arrayidx183_i = 0, $arrayidx203_i = 0, $108 = 0, $109 = 0, $111 = 0, $add267_i = 0, $114 = 0, $shr282_i = 0, $shl287_i = 0, $117 = 0, $118 = 0, $shl290_i = 0, $119 = 0, $120 = 0, $_pre_phi_i147 = 0, $F289_0_i = 0, $125 = 0, $shr317_i = 0, $and330_i = 0, $shl332_i = 0, $and335_i = 0, $shl337_i = 0, $and340_i = 0, $add345_i = 0, $I315_0_i = 0, $arrayidx354_i = 0, $128 = 0, $shl361_i = 0, $133 = 0, $cond382_i = 0, $K372_027_i = 0, $T_026_i = 0, $arrayidx393_i = 0, $136 = 0, $T_0_lcssa_i = 0, $fd412_i = 0, $142 = 0, $144 = 0, $nb_0 = 0, $150 = 0, $sub159 = 0, $151 = 0, $152 = 0, $156 = 0, $159 = 0, $sub187 = 0, $160 = 0, $161 = 0, $call_i_i = 0, $and7_i_i = 0, $add_i149 = 0, $166 = 0, $sub_i150 = 0, $add9_i = 0, $neg_i151 = 0, $and11_i = 0, $167 = 0, $168 = 0, $add17_i152 = 0, $170 = 0, $171 = 0, $sp_0_i_i = 0, $base_i_i = 0, $172 = 0, $size_i_i = 0, $174 = 0, $call34_i = 0, $175 = 0, $176 = 0, $sub38_i = 0, $ssize_0_i = 0, $177 = 0, $add51_i = 0, $178 = 0, $call65_i = 0, $and77_i = 0, $call80_i = 0, $ssize_1_i = 0, $br_0_i = 0, $br_074_i = 0, $ssize_173_i = 0, $sub109_i = 0, $182 = 0, $and101_i = 0, $ssize_2_i = 0, $tsize_07588_i = 0, $tsize_1_i = 0, $call128_i = 0, $call129_i = 0, $sub_ptr_sub_i = 0, $cmp138_i168 = 0, $tbase_294_i = 0, $tsize_293_i = 0, $add147_i = 0, $186 = 0, $187 = 0, $i_02_i_i = 0, $shl_i_i = 0, $189 = 0, $192 = 0, $cond_i_i = 0, $sub5_i_i = 0, $sp_0112_i = 0, $198 = 0, $size185_i = 0, $199 = 0, $200 = 0, $202 = 0, $add212_i = 0, $204 = 0, $cond_i28_i = 0, $sub5_i30_i = 0, $210 = 0, $211 = 0, $add_ptr224_i = 0, $sp_1108_i = 0, $base223_i = 0, $213 = 0, $size242_i = 0, $216 = 0, $cond_i43_i = 0, $218 = 0, $cond15_i_i = 0, $add_ptr16_i_i = 0, $220 = 0, $add_ptr4_sum_i50_i = 0, $add_ptr17_i_i = 0, $221 = 0, $sub18_i_i = 0, $add_i_i = 0, $add26_i_i = 0, $add_ptr16_sum_i_i = 0, $229 = 0, $and37_i_i = 0, $shr_i55_i = 0, $231 = 0, $233 = 0, $234 = 0, $fd59_i_i = 0, $fd68_pre_phi_i_i = 0, $240 = 0, $242 = 0, $244 = 0, $246 = 0, $bk82_i_i = 0, $fd85_i_i = 0, $add_ptr16_sum56_i_i = 0, $250 = 0, $251 = 0, $arrayidx99_i_i = 0, $252 = 0, $RP_0_i_i = 0, $R_0_i_i = 0, $arrayidx103_i_i = 0, $253 = 0, $arrayidx107_i_i = 0, $254 = 0, $R_1_i_i = 0, $257 = 0, $arrayidx123_i_i = 0, $arrayidx143_i_i = 0, $264 = 0, $add_ptr16_sum2728_i_i = 0, $265 = 0, $268 = 0, $qsize_0_i_i = 0, $oldfirst_0_i_i = 0, $head208_i_i = 0, $shr214_i_i = 0, $shl221_i_i = 0, $274 = 0, $275 = 0, $shl226_i_i = 0, $276 = 0, $277 = 0, $_pre_phi_i67_i = 0, $F224_0_i_i = 0, $282 = 0, $shr253_i_i = 0, $and264_i_i = 0, $shl265_i_i = 0, $and268_i_i = 0, $shl270_i_i = 0, $and273_i_i = 0, $add278_i_i = 0, $I252_0_i_i = 0, $arrayidx287_i_i = 0, $285 = 0, $shl294_i_i = 0, $290 = 0, $cond315_i_i = 0, $K305_047_i_i = 0, $T_046_i_i = 0, $arrayidx325_i_i = 0, $293 = 0, $T_0_lcssa_i69_i = 0, $fd344_i_i = 0, $299 = 0, $301 = 0, $306 = 0, $sp_0_i_i_i = 0, $307 = 0, $308 = 0, $add_ptr_i_i_i = 0, $310 = 0, $cond_i18_i = 0, $add_ptr7_i_i = 0, $cond13_i_i = 0, $add_ptr14_i_i = 0, $313 = 0, $cond_i_i_i = 0, $sub5_i_i_i = 0, $320 = 0, $add_ptr2421_i_i = 0, $sub_ptr_sub_i_i = 0, $325 = 0, $shr_i_i = 0, $shl_i21_i = 0, $327 = 0, $328 = 0, $shl39_i_i = 0, $329 = 0, $330 = 0, $_pre_phi_i_i = 0, $F_0_i_i = 0, $333 = 0, $shr58_i_i = 0, $and69_i_i = 0, $shl70_i_i = 0, $and73_i_i = 0, $shl75_i_i = 0, $and78_i_i = 0, $add83_i_i = 0, $I57_0_i_i = 0, $arrayidx91_i_i = 0, $335 = 0, $shl95_i_i = 0, $336 = 0, $cond115_i_i = 0, $K105_018_i_i = 0, $T_017_i_i = 0, $arrayidx126_i_i = 0, $339 = 0, $T_0_lcssa_i_i = 0, $fd145_i_i = 0, $342 = 0, $344 = 0, $346 = 0, $sub253_i = 0, $347 = 0, $348 = 0, $call265_i = 0, $mem_0 = 0, label = 0, $add_ptr2421_i_i$looptemp = 0;
 do {
  if ($bytes >>> 0 < 245 >>> 0) {
   if ($bytes >>> 0 < 11 >>> 0) {
    $cond = 16;
   } else {
    $cond = $bytes + 11 & -8;
   }
   $shr = $cond >>> 3;
   $0 = HEAP32[4952] | 0;
   $shr3 = $0 >>> ($shr >>> 0);
   if (($shr3 & 3 | 0) != 0) {
    $add8 = ($shr3 & 1 ^ 1) + $shr | 0;
    $shl = $add8 << 1;
    $1 = 19848 + ($shl << 2) | 0;
    $2 = 19848 + ($shl + 2 << 2) | 0;
    $3 = HEAP32[$2 >> 2] | 0;
    $fd9 = $3 + 8 | 0;
    $4 = HEAP32[$fd9 >> 2] | 0;
    do {
     if (($1 | 0) == ($4 | 0)) {
      HEAP32[4952] = $0 & ~(1 << $add8);
     } else {
      if ($4 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
       return 0;
      }
      $bk = $4 + 12 | 0;
      if ((HEAP32[$bk >> 2] | 0) == ($3 | 0)) {
       HEAP32[$bk >> 2] = $1;
       HEAP32[$2 >> 2] = $4;
       break;
      } else {
       _abort();
       return 0;
      }
     }
    } while (0);
    $shl22 = $add8 << 3;
    HEAP32[$3 + 4 >> 2] = $shl22 | 3;
    $9 = $3 + ($shl22 | 4) | 0;
    HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 1;
    $mem_0 = $fd9;
    return $mem_0 | 0;
   }
   $12 = HEAP32[4954] | 0;
   if ($cond >>> 0 > $12 >>> 0) {
    if (($shr3 | 0) != 0) {
     $shl37 = 2 << $shr;
     $and41 = $shr3 << $shr & ($shl37 | -$shl37);
     $sub44 = ($and41 & -$and41) - 1 | 0;
     $and46 = $sub44 >>> 12 & 16;
     $shr47 = $sub44 >>> ($and46 >>> 0);
     $and49 = $shr47 >>> 5 & 8;
     $shr51 = $shr47 >>> ($and49 >>> 0);
     $and53 = $shr51 >>> 2 & 4;
     $shr55 = $shr51 >>> ($and53 >>> 0);
     $and57 = $shr55 >>> 1 & 2;
     $shr59 = $shr55 >>> ($and57 >>> 0);
     $and61 = $shr59 >>> 1 & 1;
     $add64 = ($and49 | $and46 | $and53 | $and57 | $and61) + ($shr59 >>> ($and61 >>> 0)) | 0;
     $shl65 = $add64 << 1;
     $13 = 19848 + ($shl65 << 2) | 0;
     $14 = 19848 + ($shl65 + 2 << 2) | 0;
     $15 = HEAP32[$14 >> 2] | 0;
     $fd69 = $15 + 8 | 0;
     $16 = HEAP32[$fd69 >> 2] | 0;
     do {
      if (($13 | 0) == ($16 | 0)) {
       HEAP32[4952] = $0 & ~(1 << $add64);
       $20 = $12;
      } else {
       if ($16 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
        _abort();
        return 0;
       }
       $bk78 = $16 + 12 | 0;
       if ((HEAP32[$bk78 >> 2] | 0) == ($15 | 0)) {
        HEAP32[$bk78 >> 2] = $13;
        HEAP32[$14 >> 2] = $16;
        $20 = HEAP32[4954] | 0;
        break;
       } else {
        _abort();
        return 0;
       }
      }
     } while (0);
     $shl90 = $add64 << 3;
     $sub91 = $shl90 - $cond | 0;
     HEAP32[$15 + 4 >> 2] = $cond | 3;
     $21 = $15;
     $22 = $21 + $cond | 0;
     HEAP32[$21 + ($cond | 4) >> 2] = $sub91 | 1;
     HEAP32[$21 + $shl90 >> 2] = $sub91;
     if (($20 | 0) != 0) {
      $24 = HEAP32[4957] | 0;
      $shr101 = $20 >>> 3;
      $shl102 = $shr101 << 1;
      $25 = 19848 + ($shl102 << 2) | 0;
      $26 = HEAP32[4952] | 0;
      $shl105 = 1 << $shr101;
      if (($26 & $shl105 | 0) == 0) {
       HEAP32[4952] = $26 | $shl105;
       $F104_0 = $25;
       $_pre_phi = 19848 + ($shl102 + 2 << 2) | 0;
      } else {
       $27 = 19848 + ($shl102 + 2 << 2) | 0;
       $28 = HEAP32[$27 >> 2] | 0;
       if ($28 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
        _abort();
        return 0;
       } else {
        $F104_0 = $28;
        $_pre_phi = $27;
       }
      }
      HEAP32[$_pre_phi >> 2] = $24;
      HEAP32[$F104_0 + 12 >> 2] = $24;
      HEAP32[$24 + 8 >> 2] = $F104_0;
      HEAP32[$24 + 12 >> 2] = $25;
     }
     HEAP32[4954] = $sub91;
     HEAP32[4957] = $22;
     $mem_0 = $fd69;
     return $mem_0 | 0;
    }
    $32 = HEAP32[4953] | 0;
    if (($32 | 0) == 0) {
     $nb_0 = $cond;
    } else {
     $sub2_i = ($32 & -$32) - 1 | 0;
     $and3_i = $sub2_i >>> 12 & 16;
     $shr4_i = $sub2_i >>> ($and3_i >>> 0);
     $and6_i = $shr4_i >>> 5 & 8;
     $shr7_i = $shr4_i >>> ($and6_i >>> 0);
     $and9_i = $shr7_i >>> 2 & 4;
     $shr11_i = $shr7_i >>> ($and9_i >>> 0);
     $and13_i = $shr11_i >>> 1 & 2;
     $shr15_i = $shr11_i >>> ($and13_i >>> 0);
     $and17_i = $shr15_i >>> 1 & 1;
     $33 = HEAP32[20112 + (($and6_i | $and3_i | $and9_i | $and13_i | $and17_i) + ($shr15_i >>> ($and17_i >>> 0)) << 2) >> 2] | 0;
     $t_0_i = $33;
     $v_0_i = $33;
     $rsize_0_i = (HEAP32[$33 + 4 >> 2] & -8) - $cond | 0;
     while (1) {
      $35 = HEAP32[$t_0_i + 16 >> 2] | 0;
      if (($35 | 0) == 0) {
       $36 = HEAP32[$t_0_i + 20 >> 2] | 0;
       if (($36 | 0) == 0) {
        break;
       } else {
        $cond7_i = $36;
       }
      } else {
       $cond7_i = $35;
      }
      $sub31_i = (HEAP32[$cond7_i + 4 >> 2] & -8) - $cond | 0;
      $cmp32_i = $sub31_i >>> 0 < $rsize_0_i >>> 0;
      $t_0_i = $cond7_i;
      $v_0_i = $cmp32_i ? $cond7_i : $v_0_i;
      $rsize_0_i = $cmp32_i ? $sub31_i : $rsize_0_i;
     }
     $38 = $v_0_i;
     $39 = HEAP32[4956] | 0;
     if ($38 >>> 0 < $39 >>> 0) {
      _abort();
      return 0;
     }
     $add_ptr_i = $38 + $cond | 0;
     $40 = $add_ptr_i;
     if (!($38 >>> 0 < $add_ptr_i >>> 0)) {
      _abort();
      return 0;
     }
     $41 = HEAP32[$v_0_i + 24 >> 2] | 0;
     $42 = HEAP32[$v_0_i + 12 >> 2] | 0;
     do {
      if (($42 | 0) == ($v_0_i | 0)) {
       $arrayidx61_i = $v_0_i + 20 | 0;
       $47 = HEAP32[$arrayidx61_i >> 2] | 0;
       if (($47 | 0) == 0) {
        $arrayidx65_i = $v_0_i + 16 | 0;
        $48 = HEAP32[$arrayidx65_i >> 2] | 0;
        if (($48 | 0) == 0) {
         $R_1_i = 0;
         break;
        } else {
         $R_0_i = $48;
         $RP_0_i = $arrayidx65_i;
        }
       } else {
        $R_0_i = $47;
        $RP_0_i = $arrayidx61_i;
       }
       while (1) {
        $arrayidx71_i = $R_0_i + 20 | 0;
        $49 = HEAP32[$arrayidx71_i >> 2] | 0;
        if (($49 | 0) != 0) {
         $R_0_i = $49;
         $RP_0_i = $arrayidx71_i;
         continue;
        }
        $arrayidx75_i = $R_0_i + 16 | 0;
        $50 = HEAP32[$arrayidx75_i >> 2] | 0;
        if (($50 | 0) == 0) {
         break;
        } else {
         $R_0_i = $50;
         $RP_0_i = $arrayidx75_i;
        }
       }
       if ($RP_0_i >>> 0 < $39 >>> 0) {
        _abort();
        return 0;
       } else {
        HEAP32[$RP_0_i >> 2] = 0;
        $R_1_i = $R_0_i;
        break;
       }
      } else {
       $43 = HEAP32[$v_0_i + 8 >> 2] | 0;
       if ($43 >>> 0 < $39 >>> 0) {
        _abort();
        return 0;
       }
       $bk47_i = $43 + 12 | 0;
       if ((HEAP32[$bk47_i >> 2] | 0) != ($v_0_i | 0)) {
        _abort();
        return 0;
       }
       $fd50_i = $42 + 8 | 0;
       if ((HEAP32[$fd50_i >> 2] | 0) == ($v_0_i | 0)) {
        HEAP32[$bk47_i >> 2] = $42;
        HEAP32[$fd50_i >> 2] = $43;
        $R_1_i = $42;
        break;
       } else {
        _abort();
        return 0;
       }
      }
     } while (0);
     do {
      if (($41 | 0) != 0) {
       $52 = HEAP32[$v_0_i + 28 >> 2] | 0;
       $arrayidx94_i = 20112 + ($52 << 2) | 0;
       if (($v_0_i | 0) == (HEAP32[$arrayidx94_i >> 2] | 0)) {
        HEAP32[$arrayidx94_i >> 2] = $R_1_i;
        if (($R_1_i | 0) == 0) {
         HEAP32[4953] = HEAP32[4953] & ~(1 << $52);
         break;
        }
       } else {
        if ($41 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
         _abort();
         return 0;
        }
        $arrayidx113_i = $41 + 16 | 0;
        if ((HEAP32[$arrayidx113_i >> 2] | 0) == ($v_0_i | 0)) {
         HEAP32[$arrayidx113_i >> 2] = $R_1_i;
        } else {
         HEAP32[$41 + 20 >> 2] = $R_1_i;
        }
        if (($R_1_i | 0) == 0) {
         break;
        }
       }
       $59 = HEAP32[4956] | 0;
       if ($R_1_i >>> 0 < $59 >>> 0) {
        _abort();
        return 0;
       }
       HEAP32[$R_1_i + 24 >> 2] = $41;
       $60 = HEAP32[$v_0_i + 16 >> 2] | 0;
       do {
        if (($60 | 0) != 0) {
         if ($60 >>> 0 < $59 >>> 0) {
          _abort();
          return 0;
         } else {
          HEAP32[$R_1_i + 16 >> 2] = $60;
          HEAP32[$60 + 24 >> 2] = $R_1_i;
          break;
         }
        }
       } while (0);
       $62 = HEAP32[$v_0_i + 20 >> 2] | 0;
       if (($62 | 0) != 0) {
        if ($62 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
         _abort();
         return 0;
        } else {
         HEAP32[$R_1_i + 20 >> 2] = $62;
         HEAP32[$62 + 24 >> 2] = $R_1_i;
         break;
        }
       }
      }
     } while (0);
     if ($rsize_0_i >>> 0 < 16 >>> 0) {
      $add177_i = $rsize_0_i + $cond | 0;
      HEAP32[$v_0_i + 4 >> 2] = $add177_i | 3;
      $65 = $38 + ($add177_i + 4) | 0;
      HEAP32[$65 >> 2] = HEAP32[$65 >> 2] | 1;
     } else {
      HEAP32[$v_0_i + 4 >> 2] = $cond | 3;
      HEAP32[$38 + ($cond | 4) >> 2] = $rsize_0_i | 1;
      HEAP32[$38 + ($rsize_0_i + $cond) >> 2] = $rsize_0_i;
      $68 = HEAP32[4954] | 0;
      if (($68 | 0) != 0) {
       $69 = HEAP32[4957] | 0;
       $shr194_i = $68 >>> 3;
       $shl195_i = $shr194_i << 1;
       $70 = 19848 + ($shl195_i << 2) | 0;
       $71 = HEAP32[4952] | 0;
       $shl198_i = 1 << $shr194_i;
       if (($71 & $shl198_i | 0) == 0) {
        HEAP32[4952] = $71 | $shl198_i;
        $F197_0_i = $70;
        $_pre_phi_i = 19848 + ($shl195_i + 2 << 2) | 0;
       } else {
        $72 = 19848 + ($shl195_i + 2 << 2) | 0;
        $73 = HEAP32[$72 >> 2] | 0;
        if ($73 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
         _abort();
         return 0;
        } else {
         $F197_0_i = $73;
         $_pre_phi_i = $72;
        }
       }
       HEAP32[$_pre_phi_i >> 2] = $69;
       HEAP32[$F197_0_i + 12 >> 2] = $69;
       HEAP32[$69 + 8 >> 2] = $F197_0_i;
       HEAP32[$69 + 12 >> 2] = $70;
      }
      HEAP32[4954] = $rsize_0_i;
      HEAP32[4957] = $40;
     }
     $mem_0 = $v_0_i + 8 | 0;
     return $mem_0 | 0;
    }
   } else {
    $nb_0 = $cond;
   }
  } else {
   if ($bytes >>> 0 > 4294967231 >>> 0) {
    $nb_0 = -1;
   } else {
    $add143 = $bytes + 11 | 0;
    $and144 = $add143 & -8;
    $77 = HEAP32[4953] | 0;
    if (($77 | 0) == 0) {
     $nb_0 = $and144;
    } else {
     $sub_i107 = -$and144 | 0;
     $shr_i108 = $add143 >>> 8;
     if (($shr_i108 | 0) == 0) {
      $idx_0_i = 0;
     } else {
      if ($and144 >>> 0 > 16777215 >>> 0) {
       $idx_0_i = 31;
      } else {
       $and_i112 = ($shr_i108 + 1048320 | 0) >>> 16 & 8;
       $shl_i113 = $shr_i108 << $and_i112;
       $and8_i = ($shl_i113 + 520192 | 0) >>> 16 & 4;
       $shl9_i = $shl_i113 << $and8_i;
       $and12_i = ($shl9_i + 245760 | 0) >>> 16 & 2;
       $add17_i = 14 - ($and8_i | $and_i112 | $and12_i) + ($shl9_i << $and12_i >>> 15) | 0;
       $idx_0_i = $and144 >>> (($add17_i + 7 | 0) >>> 0) & 1 | $add17_i << 1;
      }
     }
     $78 = HEAP32[20112 + ($idx_0_i << 2) >> 2] | 0;
     L126 : do {
      if (($78 | 0) == 0) {
       $v_2_i = 0;
       $rsize_2_i = $sub_i107;
       $t_1_i = 0;
      } else {
       if (($idx_0_i | 0) == 31) {
        $cond_i = 0;
       } else {
        $cond_i = 25 - ($idx_0_i >>> 1) | 0;
       }
       $v_0_i123 = 0;
       $rsize_0_i122 = $sub_i107;
       $t_0_i121 = $78;
       $sizebits_0_i = $and144 << $cond_i;
       $rst_0_i = 0;
       while (1) {
        $and32_i = HEAP32[$t_0_i121 + 4 >> 2] & -8;
        $sub33_i = $and32_i - $and144 | 0;
        if ($sub33_i >>> 0 < $rsize_0_i122 >>> 0) {
         if (($and32_i | 0) == ($and144 | 0)) {
          $v_2_i = $t_0_i121;
          $rsize_2_i = $sub33_i;
          $t_1_i = $t_0_i121;
          break L126;
         } else {
          $v_1_i = $t_0_i121;
          $rsize_1_i = $sub33_i;
         }
        } else {
         $v_1_i = $v_0_i123;
         $rsize_1_i = $rsize_0_i122;
        }
        $80 = HEAP32[$t_0_i121 + 20 >> 2] | 0;
        $81 = HEAP32[$t_0_i121 + 16 + ($sizebits_0_i >>> 31 << 2) >> 2] | 0;
        $rst_1_i = ($80 | 0) == 0 | ($80 | 0) == ($81 | 0) ? $rst_0_i : $80;
        if (($81 | 0) == 0) {
         $v_2_i = $v_1_i;
         $rsize_2_i = $rsize_1_i;
         $t_1_i = $rst_1_i;
         break;
        } else {
         $v_0_i123 = $v_1_i;
         $rsize_0_i122 = $rsize_1_i;
         $t_0_i121 = $81;
         $sizebits_0_i = $sizebits_0_i << 1;
         $rst_0_i = $rst_1_i;
        }
       }
      }
     } while (0);
     if (($t_1_i | 0) == 0 & ($v_2_i | 0) == 0) {
      $shl59_i = 2 << $idx_0_i;
      $and63_i = $77 & ($shl59_i | -$shl59_i);
      if (($and63_i | 0) == 0) {
       $nb_0 = $and144;
       break;
      }
      $sub69_i = ($and63_i & -$and63_i) - 1 | 0;
      $and72_i = $sub69_i >>> 12 & 16;
      $shr74_i = $sub69_i >>> ($and72_i >>> 0);
      $and76_i = $shr74_i >>> 5 & 8;
      $shr78_i = $shr74_i >>> ($and76_i >>> 0);
      $and80_i = $shr78_i >>> 2 & 4;
      $shr82_i = $shr78_i >>> ($and80_i >>> 0);
      $and84_i = $shr82_i >>> 1 & 2;
      $shr86_i = $shr82_i >>> ($and84_i >>> 0);
      $and88_i = $shr86_i >>> 1 & 1;
      $t_2_ph_i = HEAP32[20112 + (($and76_i | $and72_i | $and80_i | $and84_i | $and88_i) + ($shr86_i >>> ($and88_i >>> 0)) << 2) >> 2] | 0;
     } else {
      $t_2_ph_i = $t_1_i;
     }
     if (($t_2_ph_i | 0) == 0) {
      $rsize_3_lcssa_i = $rsize_2_i;
      $v_3_lcssa_i = $v_2_i;
     } else {
      $t_230_i = $t_2_ph_i;
      $rsize_331_i = $rsize_2_i;
      $v_332_i = $v_2_i;
      while (1) {
       $sub100_i = (HEAP32[$t_230_i + 4 >> 2] & -8) - $and144 | 0;
       $cmp101_i = $sub100_i >>> 0 < $rsize_331_i >>> 0;
       $sub100_rsize_3_i = $cmp101_i ? $sub100_i : $rsize_331_i;
       $t_2_v_3_i = $cmp101_i ? $t_230_i : $v_332_i;
       $84 = HEAP32[$t_230_i + 16 >> 2] | 0;
       if (($84 | 0) != 0) {
        $t_230_i = $84;
        $rsize_331_i = $sub100_rsize_3_i;
        $v_332_i = $t_2_v_3_i;
        continue;
       }
       $85 = HEAP32[$t_230_i + 20 >> 2] | 0;
       if (($85 | 0) == 0) {
        $rsize_3_lcssa_i = $sub100_rsize_3_i;
        $v_3_lcssa_i = $t_2_v_3_i;
        break;
       } else {
        $t_230_i = $85;
        $rsize_331_i = $sub100_rsize_3_i;
        $v_332_i = $t_2_v_3_i;
       }
      }
     }
     if (($v_3_lcssa_i | 0) == 0) {
      $nb_0 = $and144;
     } else {
      if ($rsize_3_lcssa_i >>> 0 < ((HEAP32[4954] | 0) - $and144 | 0) >>> 0) {
       $87 = $v_3_lcssa_i;
       $88 = HEAP32[4956] | 0;
       if ($87 >>> 0 < $88 >>> 0) {
        _abort();
        return 0;
       }
       $add_ptr_i128 = $87 + $and144 | 0;
       $89 = $add_ptr_i128;
       if (!($87 >>> 0 < $add_ptr_i128 >>> 0)) {
        _abort();
        return 0;
       }
       $90 = HEAP32[$v_3_lcssa_i + 24 >> 2] | 0;
       $91 = HEAP32[$v_3_lcssa_i + 12 >> 2] | 0;
       do {
        if (($91 | 0) == ($v_3_lcssa_i | 0)) {
         $arrayidx150_i = $v_3_lcssa_i + 20 | 0;
         $96 = HEAP32[$arrayidx150_i >> 2] | 0;
         if (($96 | 0) == 0) {
          $arrayidx154_i133 = $v_3_lcssa_i + 16 | 0;
          $97 = HEAP32[$arrayidx154_i133 >> 2] | 0;
          if (($97 | 0) == 0) {
           $R_1_i139 = 0;
           break;
          } else {
           $R_0_i137 = $97;
           $RP_0_i136 = $arrayidx154_i133;
          }
         } else {
          $R_0_i137 = $96;
          $RP_0_i136 = $arrayidx150_i;
         }
         while (1) {
          $arrayidx160_i = $R_0_i137 + 20 | 0;
          $98 = HEAP32[$arrayidx160_i >> 2] | 0;
          if (($98 | 0) != 0) {
           $R_0_i137 = $98;
           $RP_0_i136 = $arrayidx160_i;
           continue;
          }
          $arrayidx164_i = $R_0_i137 + 16 | 0;
          $99 = HEAP32[$arrayidx164_i >> 2] | 0;
          if (($99 | 0) == 0) {
           break;
          } else {
           $R_0_i137 = $99;
           $RP_0_i136 = $arrayidx164_i;
          }
         }
         if ($RP_0_i136 >>> 0 < $88 >>> 0) {
          _abort();
          return 0;
         } else {
          HEAP32[$RP_0_i136 >> 2] = 0;
          $R_1_i139 = $R_0_i137;
          break;
         }
        } else {
         $92 = HEAP32[$v_3_lcssa_i + 8 >> 2] | 0;
         if ($92 >>> 0 < $88 >>> 0) {
          _abort();
          return 0;
         }
         $bk135_i = $92 + 12 | 0;
         if ((HEAP32[$bk135_i >> 2] | 0) != ($v_3_lcssa_i | 0)) {
          _abort();
          return 0;
         }
         $fd138_i = $91 + 8 | 0;
         if ((HEAP32[$fd138_i >> 2] | 0) == ($v_3_lcssa_i | 0)) {
          HEAP32[$bk135_i >> 2] = $91;
          HEAP32[$fd138_i >> 2] = $92;
          $R_1_i139 = $91;
          break;
         } else {
          _abort();
          return 0;
         }
        }
       } while (0);
       do {
        if (($90 | 0) != 0) {
         $101 = HEAP32[$v_3_lcssa_i + 28 >> 2] | 0;
         $arrayidx183_i = 20112 + ($101 << 2) | 0;
         if (($v_3_lcssa_i | 0) == (HEAP32[$arrayidx183_i >> 2] | 0)) {
          HEAP32[$arrayidx183_i >> 2] = $R_1_i139;
          if (($R_1_i139 | 0) == 0) {
           HEAP32[4953] = HEAP32[4953] & ~(1 << $101);
           break;
          }
         } else {
          if ($90 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
           _abort();
           return 0;
          }
          $arrayidx203_i = $90 + 16 | 0;
          if ((HEAP32[$arrayidx203_i >> 2] | 0) == ($v_3_lcssa_i | 0)) {
           HEAP32[$arrayidx203_i >> 2] = $R_1_i139;
          } else {
           HEAP32[$90 + 20 >> 2] = $R_1_i139;
          }
          if (($R_1_i139 | 0) == 0) {
           break;
          }
         }
         $108 = HEAP32[4956] | 0;
         if ($R_1_i139 >>> 0 < $108 >>> 0) {
          _abort();
          return 0;
         }
         HEAP32[$R_1_i139 + 24 >> 2] = $90;
         $109 = HEAP32[$v_3_lcssa_i + 16 >> 2] | 0;
         do {
          if (($109 | 0) != 0) {
           if ($109 >>> 0 < $108 >>> 0) {
            _abort();
            return 0;
           } else {
            HEAP32[$R_1_i139 + 16 >> 2] = $109;
            HEAP32[$109 + 24 >> 2] = $R_1_i139;
            break;
           }
          }
         } while (0);
         $111 = HEAP32[$v_3_lcssa_i + 20 >> 2] | 0;
         if (($111 | 0) != 0) {
          if ($111 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
           _abort();
           return 0;
          } else {
           HEAP32[$R_1_i139 + 20 >> 2] = $111;
           HEAP32[$111 + 24 >> 2] = $R_1_i139;
           break;
          }
         }
        }
       } while (0);
       L204 : do {
        if ($rsize_3_lcssa_i >>> 0 < 16 >>> 0) {
         $add267_i = $rsize_3_lcssa_i + $and144 | 0;
         HEAP32[$v_3_lcssa_i + 4 >> 2] = $add267_i | 3;
         $114 = $87 + ($add267_i + 4) | 0;
         HEAP32[$114 >> 2] = HEAP32[$114 >> 2] | 1;
        } else {
         HEAP32[$v_3_lcssa_i + 4 >> 2] = $and144 | 3;
         HEAP32[$87 + ($and144 | 4) >> 2] = $rsize_3_lcssa_i | 1;
         HEAP32[$87 + ($rsize_3_lcssa_i + $and144) >> 2] = $rsize_3_lcssa_i;
         $shr282_i = $rsize_3_lcssa_i >>> 3;
         if ($rsize_3_lcssa_i >>> 0 < 256 >>> 0) {
          $shl287_i = $shr282_i << 1;
          $117 = 19848 + ($shl287_i << 2) | 0;
          $118 = HEAP32[4952] | 0;
          $shl290_i = 1 << $shr282_i;
          if (($118 & $shl290_i | 0) == 0) {
           HEAP32[4952] = $118 | $shl290_i;
           $F289_0_i = $117;
           $_pre_phi_i147 = 19848 + ($shl287_i + 2 << 2) | 0;
          } else {
           $119 = 19848 + ($shl287_i + 2 << 2) | 0;
           $120 = HEAP32[$119 >> 2] | 0;
           if ($120 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
            _abort();
            return 0;
           } else {
            $F289_0_i = $120;
            $_pre_phi_i147 = $119;
           }
          }
          HEAP32[$_pre_phi_i147 >> 2] = $89;
          HEAP32[$F289_0_i + 12 >> 2] = $89;
          HEAP32[$87 + ($and144 + 8) >> 2] = $F289_0_i;
          HEAP32[$87 + ($and144 + 12) >> 2] = $117;
          break;
         }
         $125 = $add_ptr_i128;
         $shr317_i = $rsize_3_lcssa_i >>> 8;
         if (($shr317_i | 0) == 0) {
          $I315_0_i = 0;
         } else {
          if ($rsize_3_lcssa_i >>> 0 > 16777215 >>> 0) {
           $I315_0_i = 31;
          } else {
           $and330_i = ($shr317_i + 1048320 | 0) >>> 16 & 8;
           $shl332_i = $shr317_i << $and330_i;
           $and335_i = ($shl332_i + 520192 | 0) >>> 16 & 4;
           $shl337_i = $shl332_i << $and335_i;
           $and340_i = ($shl337_i + 245760 | 0) >>> 16 & 2;
           $add345_i = 14 - ($and335_i | $and330_i | $and340_i) + ($shl337_i << $and340_i >>> 15) | 0;
           $I315_0_i = $rsize_3_lcssa_i >>> (($add345_i + 7 | 0) >>> 0) & 1 | $add345_i << 1;
          }
         }
         $arrayidx354_i = 20112 + ($I315_0_i << 2) | 0;
         HEAP32[$87 + ($and144 + 28) >> 2] = $I315_0_i;
         HEAP32[$87 + ($and144 + 20) >> 2] = 0;
         HEAP32[$87 + ($and144 + 16) >> 2] = 0;
         $128 = HEAP32[4953] | 0;
         $shl361_i = 1 << $I315_0_i;
         if (($128 & $shl361_i | 0) == 0) {
          HEAP32[4953] = $128 | $shl361_i;
          HEAP32[$arrayidx354_i >> 2] = $125;
          HEAP32[$87 + ($and144 + 24) >> 2] = $arrayidx354_i;
          HEAP32[$87 + ($and144 + 12) >> 2] = $125;
          HEAP32[$87 + ($and144 + 8) >> 2] = $125;
          break;
         }
         $133 = HEAP32[$arrayidx354_i >> 2] | 0;
         if (($I315_0_i | 0) == 31) {
          $cond382_i = 0;
         } else {
          $cond382_i = 25 - ($I315_0_i >>> 1) | 0;
         }
         L225 : do {
          if ((HEAP32[$133 + 4 >> 2] & -8 | 0) == ($rsize_3_lcssa_i | 0)) {
           $T_0_lcssa_i = $133;
          } else {
           $T_026_i = $133;
           $K372_027_i = $rsize_3_lcssa_i << $cond382_i;
           while (1) {
            $arrayidx393_i = $T_026_i + 16 + ($K372_027_i >>> 31 << 2) | 0;
            $136 = HEAP32[$arrayidx393_i >> 2] | 0;
            if (($136 | 0) == 0) {
             break;
            }
            if ((HEAP32[$136 + 4 >> 2] & -8 | 0) == ($rsize_3_lcssa_i | 0)) {
             $T_0_lcssa_i = $136;
             break L225;
            } else {
             $T_026_i = $136;
             $K372_027_i = $K372_027_i << 1;
            }
           }
           if ($arrayidx393_i >>> 0 < (HEAP32[4956] | 0) >>> 0) {
            _abort();
            return 0;
           } else {
            HEAP32[$arrayidx393_i >> 2] = $125;
            HEAP32[$87 + ($and144 + 24) >> 2] = $T_026_i;
            HEAP32[$87 + ($and144 + 12) >> 2] = $125;
            HEAP32[$87 + ($and144 + 8) >> 2] = $125;
            break L204;
           }
          }
         } while (0);
         $fd412_i = $T_0_lcssa_i + 8 | 0;
         $142 = HEAP32[$fd412_i >> 2] | 0;
         $144 = HEAP32[4956] | 0;
         if ($T_0_lcssa_i >>> 0 >= $144 >>> 0 & $142 >>> 0 >= $144 >>> 0) {
          HEAP32[$142 + 12 >> 2] = $125;
          HEAP32[$fd412_i >> 2] = $125;
          HEAP32[$87 + ($and144 + 8) >> 2] = $142;
          HEAP32[$87 + ($and144 + 12) >> 2] = $T_0_lcssa_i;
          HEAP32[$87 + ($and144 + 24) >> 2] = 0;
          break;
         } else {
          _abort();
          return 0;
         }
        }
       } while (0);
       $mem_0 = $v_3_lcssa_i + 8 | 0;
       return $mem_0 | 0;
      } else {
       $nb_0 = $and144;
      }
     }
    }
   }
  }
 } while (0);
 $150 = HEAP32[4954] | 0;
 if (!($150 >>> 0 < $nb_0 >>> 0)) {
  $sub159 = $150 - $nb_0 | 0;
  $151 = HEAP32[4957] | 0;
  if ($sub159 >>> 0 > 15 >>> 0) {
   $152 = $151;
   HEAP32[4957] = $152 + $nb_0;
   HEAP32[4954] = $sub159;
   HEAP32[$152 + ($nb_0 + 4) >> 2] = $sub159 | 1;
   HEAP32[$152 + $150 >> 2] = $sub159;
   HEAP32[$151 + 4 >> 2] = $nb_0 | 3;
  } else {
   HEAP32[4954] = 0;
   HEAP32[4957] = 0;
   HEAP32[$151 + 4 >> 2] = $150 | 3;
   $156 = $151 + ($150 + 4) | 0;
   HEAP32[$156 >> 2] = HEAP32[$156 >> 2] | 1;
  }
  $mem_0 = $151 + 8 | 0;
  return $mem_0 | 0;
 }
 $159 = HEAP32[4955] | 0;
 if ($159 >>> 0 > $nb_0 >>> 0) {
  $sub187 = $159 - $nb_0 | 0;
  HEAP32[4955] = $sub187;
  $160 = HEAP32[4958] | 0;
  $161 = $160;
  HEAP32[4958] = $161 + $nb_0;
  HEAP32[$161 + ($nb_0 + 4) >> 2] = $sub187 | 1;
  HEAP32[$160 + 4 >> 2] = $nb_0 | 3;
  $mem_0 = $160 + 8 | 0;
  return $mem_0 | 0;
 }
 do {
  if ((HEAP32[4892] | 0) == 0) {
   $call_i_i = _sysconf(30) | 0;
   if (($call_i_i - 1 & $call_i_i | 0) == 0) {
    HEAP32[4894] = $call_i_i;
    HEAP32[4893] = $call_i_i;
    HEAP32[4895] = -1;
    HEAP32[4896] = -1;
    HEAP32[4897] = 0;
    HEAP32[5063] = 0;
    $and7_i_i = (_time(0) | 0) & -16 ^ 1431655768;
    HEAP32[4892] = $and7_i_i;
    break;
   } else {
    _abort();
    return 0;
   }
  }
 } while (0);
 $add_i149 = $nb_0 + 48 | 0;
 $166 = HEAP32[4894] | 0;
 $sub_i150 = $nb_0 + 47 | 0;
 $add9_i = $166 + $sub_i150 | 0;
 $neg_i151 = -$166 | 0;
 $and11_i = $add9_i & $neg_i151;
 if (!($and11_i >>> 0 > $nb_0 >>> 0)) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $167 = HEAP32[5062] | 0;
 if (($167 | 0) != 0) {
  $168 = HEAP32[5060] | 0;
  $add17_i152 = $168 + $and11_i | 0;
  if ($add17_i152 >>> 0 <= $168 >>> 0 | $add17_i152 >>> 0 > $167 >>> 0) {
   $mem_0 = 0;
   return $mem_0 | 0;
  }
 }
 L266 : do {
  if ((HEAP32[5063] & 4 | 0) == 0) {
   $170 = HEAP32[4958] | 0;
   L268 : do {
    if (($170 | 0) == 0) {
     label = 181;
    } else {
     $171 = $170;
     $sp_0_i_i = 20256;
     while (1) {
      $base_i_i = $sp_0_i_i | 0;
      $172 = HEAP32[$base_i_i >> 2] | 0;
      if (!($172 >>> 0 > $171 >>> 0)) {
       $size_i_i = $sp_0_i_i + 4 | 0;
       if (($172 + (HEAP32[$size_i_i >> 2] | 0) | 0) >>> 0 > $171 >>> 0) {
        break;
       }
      }
      $174 = HEAP32[$sp_0_i_i + 8 >> 2] | 0;
      if (($174 | 0) == 0) {
       label = 181;
       break L268;
      } else {
       $sp_0_i_i = $174;
      }
     }
     if (($sp_0_i_i | 0) == 0) {
      label = 181;
     } else {
      $and77_i = $add9_i - (HEAP32[4955] | 0) & $neg_i151;
      if ($and77_i >>> 0 < 2147483647 >>> 0) {
       $call80_i = _sbrk($and77_i | 0) | 0;
       if (($call80_i | 0) == ((HEAP32[$base_i_i >> 2] | 0) + (HEAP32[$size_i_i >> 2] | 0) | 0)) {
        $br_0_i = $call80_i;
        $ssize_1_i = $and77_i;
        label = 190;
       } else {
        $ssize_173_i = $and77_i;
        $br_074_i = $call80_i;
        label = 191;
       }
      } else {
       $tsize_07588_i = 0;
      }
     }
    }
   } while (0);
   do {
    if ((label | 0) == 181) {
     $call34_i = _sbrk(0) | 0;
     if (($call34_i | 0) == -1) {
      $tsize_07588_i = 0;
     } else {
      $175 = $call34_i;
      $176 = HEAP32[4893] | 0;
      $sub38_i = $176 - 1 | 0;
      if (($sub38_i & $175 | 0) == 0) {
       $ssize_0_i = $and11_i;
      } else {
       $ssize_0_i = $and11_i - $175 + ($sub38_i + $175 & -$176) | 0;
      }
      $177 = HEAP32[5060] | 0;
      $add51_i = $177 + $ssize_0_i | 0;
      if ($ssize_0_i >>> 0 > $nb_0 >>> 0 & $ssize_0_i >>> 0 < 2147483647 >>> 0) {
       $178 = HEAP32[5062] | 0;
       if (($178 | 0) != 0) {
        if ($add51_i >>> 0 <= $177 >>> 0 | $add51_i >>> 0 > $178 >>> 0) {
         $tsize_07588_i = 0;
         break;
        }
       }
       $call65_i = _sbrk($ssize_0_i | 0) | 0;
       if (($call65_i | 0) == ($call34_i | 0)) {
        $br_0_i = $call34_i;
        $ssize_1_i = $ssize_0_i;
        label = 190;
       } else {
        $ssize_173_i = $ssize_0_i;
        $br_074_i = $call65_i;
        label = 191;
       }
      } else {
       $tsize_07588_i = 0;
      }
     }
    }
   } while (0);
   L288 : do {
    if ((label | 0) == 190) {
     if (($br_0_i | 0) == -1) {
      $tsize_07588_i = $ssize_1_i;
     } else {
      $tsize_293_i = $ssize_1_i;
      $tbase_294_i = $br_0_i;
      label = 201;
      break L266;
     }
    } else if ((label | 0) == 191) {
     $sub109_i = -$ssize_173_i | 0;
     do {
      if (($br_074_i | 0) != -1 & $ssize_173_i >>> 0 < 2147483647 >>> 0 & $add_i149 >>> 0 > $ssize_173_i >>> 0) {
       $182 = HEAP32[4894] | 0;
       $and101_i = $sub_i150 - $ssize_173_i + $182 & -$182;
       if ($and101_i >>> 0 < 2147483647 >>> 0) {
        if ((_sbrk($and101_i | 0) | 0) == -1) {
         _sbrk($sub109_i | 0) | 0;
         $tsize_07588_i = 0;
         break L288;
        } else {
         $ssize_2_i = $and101_i + $ssize_173_i | 0;
         break;
        }
       } else {
        $ssize_2_i = $ssize_173_i;
       }
      } else {
       $ssize_2_i = $ssize_173_i;
      }
     } while (0);
     if (($br_074_i | 0) == -1) {
      $tsize_07588_i = 0;
     } else {
      $tsize_293_i = $ssize_2_i;
      $tbase_294_i = $br_074_i;
      label = 201;
      break L266;
     }
    }
   } while (0);
   HEAP32[5063] = HEAP32[5063] | 4;
   $tsize_1_i = $tsize_07588_i;
   label = 198;
  } else {
   $tsize_1_i = 0;
   label = 198;
  }
 } while (0);
 if ((label | 0) == 198) {
  if ($and11_i >>> 0 < 2147483647 >>> 0) {
   $call128_i = _sbrk($and11_i | 0) | 0;
   $call129_i = _sbrk(0) | 0;
   if (($call128_i | 0) != -1 & ($call129_i | 0) != -1 & $call128_i >>> 0 < $call129_i >>> 0) {
    $sub_ptr_sub_i = $call129_i - $call128_i | 0;
    $cmp138_i168 = $sub_ptr_sub_i >>> 0 > ($nb_0 + 40 | 0) >>> 0;
    if ($cmp138_i168) {
     $tsize_293_i = $cmp138_i168 ? $sub_ptr_sub_i : $tsize_1_i;
     $tbase_294_i = $call128_i;
     label = 201;
    }
   }
  }
 }
 if ((label | 0) == 201) {
  $add147_i = (HEAP32[5060] | 0) + $tsize_293_i | 0;
  HEAP32[5060] = $add147_i;
  if ($add147_i >>> 0 > (HEAP32[5061] | 0) >>> 0) {
   HEAP32[5061] = $add147_i;
  }
  $186 = HEAP32[4958] | 0;
  L308 : do {
   if (($186 | 0) == 0) {
    $187 = HEAP32[4956] | 0;
    if (($187 | 0) == 0 | $tbase_294_i >>> 0 < $187 >>> 0) {
     HEAP32[4956] = $tbase_294_i;
    }
    HEAP32[5064] = $tbase_294_i;
    HEAP32[5065] = $tsize_293_i;
    HEAP32[5067] = 0;
    HEAP32[4961] = HEAP32[4892];
    HEAP32[4960] = -1;
    $i_02_i_i = 0;
    do {
     $shl_i_i = $i_02_i_i << 1;
     $189 = 19848 + ($shl_i_i << 2) | 0;
     HEAP32[19848 + ($shl_i_i + 3 << 2) >> 2] = $189;
     HEAP32[19848 + ($shl_i_i + 2 << 2) >> 2] = $189;
     $i_02_i_i = $i_02_i_i + 1 | 0;
    } while ($i_02_i_i >>> 0 < 32 >>> 0);
    $192 = $tbase_294_i + 8 | 0;
    if (($192 & 7 | 0) == 0) {
     $cond_i_i = 0;
    } else {
     $cond_i_i = -$192 & 7;
    }
    $sub5_i_i = $tsize_293_i - 40 - $cond_i_i | 0;
    HEAP32[4958] = $tbase_294_i + $cond_i_i;
    HEAP32[4955] = $sub5_i_i;
    HEAP32[$tbase_294_i + ($cond_i_i + 4) >> 2] = $sub5_i_i | 1;
    HEAP32[$tbase_294_i + ($tsize_293_i - 36) >> 2] = 40;
    HEAP32[4959] = HEAP32[4896];
   } else {
    $sp_0112_i = 20256;
    while (1) {
     $198 = HEAP32[$sp_0112_i >> 2] | 0;
     $size185_i = $sp_0112_i + 4 | 0;
     $199 = HEAP32[$size185_i >> 2] | 0;
     if (($tbase_294_i | 0) == ($198 + $199 | 0)) {
      label = 213;
      break;
     }
     $200 = HEAP32[$sp_0112_i + 8 >> 2] | 0;
     if (($200 | 0) == 0) {
      break;
     } else {
      $sp_0112_i = $200;
     }
    }
    if ((label | 0) == 213) {
     if ((HEAP32[$sp_0112_i + 12 >> 2] & 8 | 0) == 0) {
      $202 = $186;
      if ($202 >>> 0 >= $198 >>> 0 & $202 >>> 0 < $tbase_294_i >>> 0) {
       HEAP32[$size185_i >> 2] = $199 + $tsize_293_i;
       $add212_i = (HEAP32[4955] | 0) + $tsize_293_i | 0;
       $204 = $186 + 8 | 0;
       if (($204 & 7 | 0) == 0) {
        $cond_i28_i = 0;
       } else {
        $cond_i28_i = -$204 & 7;
       }
       $sub5_i30_i = $add212_i - $cond_i28_i | 0;
       HEAP32[4958] = $202 + $cond_i28_i;
       HEAP32[4955] = $sub5_i30_i;
       HEAP32[$202 + ($cond_i28_i + 4) >> 2] = $sub5_i30_i | 1;
       HEAP32[$202 + ($add212_i + 4) >> 2] = 40;
       HEAP32[4959] = HEAP32[4896];
       break;
      }
     }
    }
    $210 = HEAP32[4956] | 0;
    if ($tbase_294_i >>> 0 < $210 >>> 0) {
     HEAP32[4956] = $tbase_294_i;
     $211 = $tbase_294_i;
    } else {
     $211 = $210;
    }
    $add_ptr224_i = $tbase_294_i + $tsize_293_i | 0;
    $sp_1108_i = 20256;
    while (1) {
     $base223_i = $sp_1108_i | 0;
     if ((HEAP32[$base223_i >> 2] | 0) == ($add_ptr224_i | 0)) {
      label = 223;
      break;
     }
     $213 = HEAP32[$sp_1108_i + 8 >> 2] | 0;
     if (($213 | 0) == 0) {
      break;
     } else {
      $sp_1108_i = $213;
     }
    }
    if ((label | 0) == 223) {
     if ((HEAP32[$sp_1108_i + 12 >> 2] & 8 | 0) == 0) {
      HEAP32[$base223_i >> 2] = $tbase_294_i;
      $size242_i = $sp_1108_i + 4 | 0;
      HEAP32[$size242_i >> 2] = (HEAP32[$size242_i >> 2] | 0) + $tsize_293_i;
      $216 = $tbase_294_i + 8 | 0;
      if (($216 & 7 | 0) == 0) {
       $cond_i43_i = 0;
      } else {
       $cond_i43_i = -$216 & 7;
      }
      $218 = $tbase_294_i + ($tsize_293_i + 8) | 0;
      if (($218 & 7 | 0) == 0) {
       $cond15_i_i = 0;
      } else {
       $cond15_i_i = -$218 & 7;
      }
      $add_ptr16_i_i = $tbase_294_i + ($cond15_i_i + $tsize_293_i) | 0;
      $220 = $add_ptr16_i_i;
      $add_ptr4_sum_i50_i = $cond_i43_i + $nb_0 | 0;
      $add_ptr17_i_i = $tbase_294_i + $add_ptr4_sum_i50_i | 0;
      $221 = $add_ptr17_i_i;
      $sub18_i_i = $add_ptr16_i_i - ($tbase_294_i + $cond_i43_i) - $nb_0 | 0;
      HEAP32[$tbase_294_i + ($cond_i43_i + 4) >> 2] = $nb_0 | 3;
      L345 : do {
       if (($220 | 0) == ($186 | 0)) {
        $add_i_i = (HEAP32[4955] | 0) + $sub18_i_i | 0;
        HEAP32[4955] = $add_i_i;
        HEAP32[4958] = $221;
        HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $add_i_i | 1;
       } else {
        if (($220 | 0) == (HEAP32[4957] | 0)) {
         $add26_i_i = (HEAP32[4954] | 0) + $sub18_i_i | 0;
         HEAP32[4954] = $add26_i_i;
         HEAP32[4957] = $221;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $add26_i_i | 1;
         HEAP32[$tbase_294_i + ($add26_i_i + $add_ptr4_sum_i50_i) >> 2] = $add26_i_i;
         break;
        }
        $add_ptr16_sum_i_i = $tsize_293_i + 4 | 0;
        $229 = HEAP32[$tbase_294_i + ($add_ptr16_sum_i_i + $cond15_i_i) >> 2] | 0;
        if (($229 & 3 | 0) == 1) {
         $and37_i_i = $229 & -8;
         $shr_i55_i = $229 >>> 3;
         do {
          if ($229 >>> 0 < 256 >>> 0) {
           $231 = HEAP32[$tbase_294_i + (($cond15_i_i | 8) + $tsize_293_i) >> 2] | 0;
           $233 = HEAP32[$tbase_294_i + ($tsize_293_i + 12 + $cond15_i_i) >> 2] | 0;
           $234 = 19848 + ($shr_i55_i << 1 << 2) | 0;
           if (($231 | 0) != ($234 | 0)) {
            if ($231 >>> 0 < $211 >>> 0) {
             _abort();
             return 0;
            }
            if ((HEAP32[$231 + 12 >> 2] | 0) != ($220 | 0)) {
             _abort();
             return 0;
            }
           }
           if (($233 | 0) == ($231 | 0)) {
            HEAP32[4952] = HEAP32[4952] & ~(1 << $shr_i55_i);
            break;
           }
           if (($233 | 0) == ($234 | 0)) {
            $fd68_pre_phi_i_i = $233 + 8 | 0;
           } else {
            if ($233 >>> 0 < $211 >>> 0) {
             _abort();
             return 0;
            }
            $fd59_i_i = $233 + 8 | 0;
            if ((HEAP32[$fd59_i_i >> 2] | 0) == ($220 | 0)) {
             $fd68_pre_phi_i_i = $fd59_i_i;
            } else {
             _abort();
             return 0;
            }
           }
           HEAP32[$231 + 12 >> 2] = $233;
           HEAP32[$fd68_pre_phi_i_i >> 2] = $231;
          } else {
           $240 = $add_ptr16_i_i;
           $242 = HEAP32[$tbase_294_i + (($cond15_i_i | 24) + $tsize_293_i) >> 2] | 0;
           $244 = HEAP32[$tbase_294_i + ($tsize_293_i + 12 + $cond15_i_i) >> 2] | 0;
           do {
            if (($244 | 0) == ($240 | 0)) {
             $add_ptr16_sum56_i_i = $cond15_i_i | 16;
             $250 = $tbase_294_i + ($add_ptr16_sum_i_i + $add_ptr16_sum56_i_i) | 0;
             $251 = HEAP32[$250 >> 2] | 0;
             if (($251 | 0) == 0) {
              $arrayidx99_i_i = $tbase_294_i + ($add_ptr16_sum56_i_i + $tsize_293_i) | 0;
              $252 = HEAP32[$arrayidx99_i_i >> 2] | 0;
              if (($252 | 0) == 0) {
               $R_1_i_i = 0;
               break;
              } else {
               $R_0_i_i = $252;
               $RP_0_i_i = $arrayidx99_i_i;
              }
             } else {
              $R_0_i_i = $251;
              $RP_0_i_i = $250;
             }
             while (1) {
              $arrayidx103_i_i = $R_0_i_i + 20 | 0;
              $253 = HEAP32[$arrayidx103_i_i >> 2] | 0;
              if (($253 | 0) != 0) {
               $R_0_i_i = $253;
               $RP_0_i_i = $arrayidx103_i_i;
               continue;
              }
              $arrayidx107_i_i = $R_0_i_i + 16 | 0;
              $254 = HEAP32[$arrayidx107_i_i >> 2] | 0;
              if (($254 | 0) == 0) {
               break;
              } else {
               $R_0_i_i = $254;
               $RP_0_i_i = $arrayidx107_i_i;
              }
             }
             if ($RP_0_i_i >>> 0 < $211 >>> 0) {
              _abort();
              return 0;
             } else {
              HEAP32[$RP_0_i_i >> 2] = 0;
              $R_1_i_i = $R_0_i_i;
              break;
             }
            } else {
             $246 = HEAP32[$tbase_294_i + (($cond15_i_i | 8) + $tsize_293_i) >> 2] | 0;
             if ($246 >>> 0 < $211 >>> 0) {
              _abort();
              return 0;
             }
             $bk82_i_i = $246 + 12 | 0;
             if ((HEAP32[$bk82_i_i >> 2] | 0) != ($240 | 0)) {
              _abort();
              return 0;
             }
             $fd85_i_i = $244 + 8 | 0;
             if ((HEAP32[$fd85_i_i >> 2] | 0) == ($240 | 0)) {
              HEAP32[$bk82_i_i >> 2] = $244;
              HEAP32[$fd85_i_i >> 2] = $246;
              $R_1_i_i = $244;
              break;
             } else {
              _abort();
              return 0;
             }
            }
           } while (0);
           if (($242 | 0) != 0) {
            $257 = HEAP32[$tbase_294_i + ($tsize_293_i + 28 + $cond15_i_i) >> 2] | 0;
            $arrayidx123_i_i = 20112 + ($257 << 2) | 0;
            if (($240 | 0) == (HEAP32[$arrayidx123_i_i >> 2] | 0)) {
             HEAP32[$arrayidx123_i_i >> 2] = $R_1_i_i;
             if (($R_1_i_i | 0) == 0) {
              HEAP32[4953] = HEAP32[4953] & ~(1 << $257);
              break;
             }
            } else {
             if ($242 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
              _abort();
              return 0;
             }
             $arrayidx143_i_i = $242 + 16 | 0;
             if ((HEAP32[$arrayidx143_i_i >> 2] | 0) == ($240 | 0)) {
              HEAP32[$arrayidx143_i_i >> 2] = $R_1_i_i;
             } else {
              HEAP32[$242 + 20 >> 2] = $R_1_i_i;
             }
             if (($R_1_i_i | 0) == 0) {
              break;
             }
            }
            $264 = HEAP32[4956] | 0;
            if ($R_1_i_i >>> 0 < $264 >>> 0) {
             _abort();
             return 0;
            }
            HEAP32[$R_1_i_i + 24 >> 2] = $242;
            $add_ptr16_sum2728_i_i = $cond15_i_i | 16;
            $265 = HEAP32[$tbase_294_i + ($add_ptr16_sum2728_i_i + $tsize_293_i) >> 2] | 0;
            do {
             if (($265 | 0) != 0) {
              if ($265 >>> 0 < $264 >>> 0) {
               _abort();
               return 0;
              } else {
               HEAP32[$R_1_i_i + 16 >> 2] = $265;
               HEAP32[$265 + 24 >> 2] = $R_1_i_i;
               break;
              }
             }
            } while (0);
            $268 = HEAP32[$tbase_294_i + ($add_ptr16_sum_i_i + $add_ptr16_sum2728_i_i) >> 2] | 0;
            if (($268 | 0) != 0) {
             if ($268 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
              _abort();
              return 0;
             } else {
              HEAP32[$R_1_i_i + 20 >> 2] = $268;
              HEAP32[$268 + 24 >> 2] = $R_1_i_i;
              break;
             }
            }
           }
          }
         } while (0);
         $oldfirst_0_i_i = $tbase_294_i + (($and37_i_i | $cond15_i_i) + $tsize_293_i) | 0;
         $qsize_0_i_i = $and37_i_i + $sub18_i_i | 0;
        } else {
         $oldfirst_0_i_i = $220;
         $qsize_0_i_i = $sub18_i_i;
        }
        $head208_i_i = $oldfirst_0_i_i + 4 | 0;
        HEAP32[$head208_i_i >> 2] = HEAP32[$head208_i_i >> 2] & -2;
        HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 4) >> 2] = $qsize_0_i_i | 1;
        HEAP32[$tbase_294_i + ($qsize_0_i_i + $add_ptr4_sum_i50_i) >> 2] = $qsize_0_i_i;
        $shr214_i_i = $qsize_0_i_i >>> 3;
        if ($qsize_0_i_i >>> 0 < 256 >>> 0) {
         $shl221_i_i = $shr214_i_i << 1;
         $274 = 19848 + ($shl221_i_i << 2) | 0;
         $275 = HEAP32[4952] | 0;
         $shl226_i_i = 1 << $shr214_i_i;
         if (($275 & $shl226_i_i | 0) == 0) {
          HEAP32[4952] = $275 | $shl226_i_i;
          $F224_0_i_i = $274;
          $_pre_phi_i67_i = 19848 + ($shl221_i_i + 2 << 2) | 0;
         } else {
          $276 = 19848 + ($shl221_i_i + 2 << 2) | 0;
          $277 = HEAP32[$276 >> 2] | 0;
          if ($277 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
           _abort();
           return 0;
          } else {
           $F224_0_i_i = $277;
           $_pre_phi_i67_i = $276;
          }
         }
         HEAP32[$_pre_phi_i67_i >> 2] = $221;
         HEAP32[$F224_0_i_i + 12 >> 2] = $221;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $F224_0_i_i;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $274;
         break;
        }
        $282 = $add_ptr17_i_i;
        $shr253_i_i = $qsize_0_i_i >>> 8;
        if (($shr253_i_i | 0) == 0) {
         $I252_0_i_i = 0;
        } else {
         if ($qsize_0_i_i >>> 0 > 16777215 >>> 0) {
          $I252_0_i_i = 31;
         } else {
          $and264_i_i = ($shr253_i_i + 1048320 | 0) >>> 16 & 8;
          $shl265_i_i = $shr253_i_i << $and264_i_i;
          $and268_i_i = ($shl265_i_i + 520192 | 0) >>> 16 & 4;
          $shl270_i_i = $shl265_i_i << $and268_i_i;
          $and273_i_i = ($shl270_i_i + 245760 | 0) >>> 16 & 2;
          $add278_i_i = 14 - ($and268_i_i | $and264_i_i | $and273_i_i) + ($shl270_i_i << $and273_i_i >>> 15) | 0;
          $I252_0_i_i = $qsize_0_i_i >>> (($add278_i_i + 7 | 0) >>> 0) & 1 | $add278_i_i << 1;
         }
        }
        $arrayidx287_i_i = 20112 + ($I252_0_i_i << 2) | 0;
        HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 28) >> 2] = $I252_0_i_i;
        HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 20) >> 2] = 0;
        HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 16) >> 2] = 0;
        $285 = HEAP32[4953] | 0;
        $shl294_i_i = 1 << $I252_0_i_i;
        if (($285 & $shl294_i_i | 0) == 0) {
         HEAP32[4953] = $285 | $shl294_i_i;
         HEAP32[$arrayidx287_i_i >> 2] = $282;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 24) >> 2] = $arrayidx287_i_i;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $282;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $282;
         break;
        }
        $290 = HEAP32[$arrayidx287_i_i >> 2] | 0;
        if (($I252_0_i_i | 0) == 31) {
         $cond315_i_i = 0;
        } else {
         $cond315_i_i = 25 - ($I252_0_i_i >>> 1) | 0;
        }
        L442 : do {
         if ((HEAP32[$290 + 4 >> 2] & -8 | 0) == ($qsize_0_i_i | 0)) {
          $T_0_lcssa_i69_i = $290;
         } else {
          $T_046_i_i = $290;
          $K305_047_i_i = $qsize_0_i_i << $cond315_i_i;
          while (1) {
           $arrayidx325_i_i = $T_046_i_i + 16 + ($K305_047_i_i >>> 31 << 2) | 0;
           $293 = HEAP32[$arrayidx325_i_i >> 2] | 0;
           if (($293 | 0) == 0) {
            break;
           }
           if ((HEAP32[$293 + 4 >> 2] & -8 | 0) == ($qsize_0_i_i | 0)) {
            $T_0_lcssa_i69_i = $293;
            break L442;
           } else {
            $T_046_i_i = $293;
            $K305_047_i_i = $K305_047_i_i << 1;
           }
          }
          if ($arrayidx325_i_i >>> 0 < (HEAP32[4956] | 0) >>> 0) {
           _abort();
           return 0;
          } else {
           HEAP32[$arrayidx325_i_i >> 2] = $282;
           HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 24) >> 2] = $T_046_i_i;
           HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $282;
           HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $282;
           break L345;
          }
         }
        } while (0);
        $fd344_i_i = $T_0_lcssa_i69_i + 8 | 0;
        $299 = HEAP32[$fd344_i_i >> 2] | 0;
        $301 = HEAP32[4956] | 0;
        if ($T_0_lcssa_i69_i >>> 0 >= $301 >>> 0 & $299 >>> 0 >= $301 >>> 0) {
         HEAP32[$299 + 12 >> 2] = $282;
         HEAP32[$fd344_i_i >> 2] = $282;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 8) >> 2] = $299;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 12) >> 2] = $T_0_lcssa_i69_i;
         HEAP32[$tbase_294_i + ($add_ptr4_sum_i50_i + 24) >> 2] = 0;
         break;
        } else {
         _abort();
         return 0;
        }
       }
      } while (0);
      $mem_0 = $tbase_294_i + ($cond_i43_i | 8) | 0;
      return $mem_0 | 0;
     }
    }
    $306 = $186;
    $sp_0_i_i_i = 20256;
    while (1) {
     $307 = HEAP32[$sp_0_i_i_i >> 2] | 0;
     if (!($307 >>> 0 > $306 >>> 0)) {
      $308 = HEAP32[$sp_0_i_i_i + 4 >> 2] | 0;
      $add_ptr_i_i_i = $307 + $308 | 0;
      if ($add_ptr_i_i_i >>> 0 > $306 >>> 0) {
       break;
      }
     }
     $sp_0_i_i_i = HEAP32[$sp_0_i_i_i + 8 >> 2] | 0;
    }
    $310 = $307 + ($308 - 39) | 0;
    if (($310 & 7 | 0) == 0) {
     $cond_i18_i = 0;
    } else {
     $cond_i18_i = -$310 & 7;
    }
    $add_ptr7_i_i = $307 + ($308 - 47 + $cond_i18_i) | 0;
    $cond13_i_i = $add_ptr7_i_i >>> 0 < ($186 + 16 | 0) >>> 0 ? $306 : $add_ptr7_i_i;
    $add_ptr14_i_i = $cond13_i_i + 8 | 0;
    $313 = $tbase_294_i + 8 | 0;
    if (($313 & 7 | 0) == 0) {
     $cond_i_i_i = 0;
    } else {
     $cond_i_i_i = -$313 & 7;
    }
    $sub5_i_i_i = $tsize_293_i - 40 - $cond_i_i_i | 0;
    HEAP32[4958] = $tbase_294_i + $cond_i_i_i;
    HEAP32[4955] = $sub5_i_i_i;
    HEAP32[$tbase_294_i + ($cond_i_i_i + 4) >> 2] = $sub5_i_i_i | 1;
    HEAP32[$tbase_294_i + ($tsize_293_i - 36) >> 2] = 40;
    HEAP32[4959] = HEAP32[4896];
    HEAP32[$cond13_i_i + 4 >> 2] = 27;
    HEAP32[$add_ptr14_i_i >> 2] = HEAP32[5064];
    HEAP32[$add_ptr14_i_i + 4 >> 2] = HEAP32[5065];
    HEAP32[$add_ptr14_i_i + 8 >> 2] = HEAP32[5066];
    HEAP32[$add_ptr14_i_i + 12 >> 2] = HEAP32[5067];
    HEAP32[5064] = $tbase_294_i;
    HEAP32[5065] = $tsize_293_i;
    HEAP32[5067] = 0;
    HEAP32[5066] = $add_ptr14_i_i;
    $320 = $cond13_i_i + 28 | 0;
    HEAP32[$320 >> 2] = 7;
    if (($cond13_i_i + 32 | 0) >>> 0 < $add_ptr_i_i_i >>> 0) {
     $add_ptr2421_i_i = $320;
     do {
      $add_ptr2421_i_i$looptemp = $add_ptr2421_i_i;
      $add_ptr2421_i_i = $add_ptr2421_i_i + 4 | 0;
      HEAP32[$add_ptr2421_i_i >> 2] = 7;
     } while (($add_ptr2421_i_i$looptemp + 8 | 0) >>> 0 < $add_ptr_i_i_i >>> 0);
    }
    if (($cond13_i_i | 0) != ($306 | 0)) {
     $sub_ptr_sub_i_i = $cond13_i_i - $186 | 0;
     $325 = $306 + ($sub_ptr_sub_i_i + 4) | 0;
     HEAP32[$325 >> 2] = HEAP32[$325 >> 2] & -2;
     HEAP32[$186 + 4 >> 2] = $sub_ptr_sub_i_i | 1;
     HEAP32[$306 + $sub_ptr_sub_i_i >> 2] = $sub_ptr_sub_i_i;
     $shr_i_i = $sub_ptr_sub_i_i >>> 3;
     if ($sub_ptr_sub_i_i >>> 0 < 256 >>> 0) {
      $shl_i21_i = $shr_i_i << 1;
      $327 = 19848 + ($shl_i21_i << 2) | 0;
      $328 = HEAP32[4952] | 0;
      $shl39_i_i = 1 << $shr_i_i;
      if (($328 & $shl39_i_i | 0) == 0) {
       HEAP32[4952] = $328 | $shl39_i_i;
       $F_0_i_i = $327;
       $_pre_phi_i_i = 19848 + ($shl_i21_i + 2 << 2) | 0;
      } else {
       $329 = 19848 + ($shl_i21_i + 2 << 2) | 0;
       $330 = HEAP32[$329 >> 2] | 0;
       if ($330 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
        _abort();
        return 0;
       } else {
        $F_0_i_i = $330;
        $_pre_phi_i_i = $329;
       }
      }
      HEAP32[$_pre_phi_i_i >> 2] = $186;
      HEAP32[$F_0_i_i + 12 >> 2] = $186;
      HEAP32[$186 + 8 >> 2] = $F_0_i_i;
      HEAP32[$186 + 12 >> 2] = $327;
      break;
     }
     $333 = $186;
     $shr58_i_i = $sub_ptr_sub_i_i >>> 8;
     if (($shr58_i_i | 0) == 0) {
      $I57_0_i_i = 0;
     } else {
      if ($sub_ptr_sub_i_i >>> 0 > 16777215 >>> 0) {
       $I57_0_i_i = 31;
      } else {
       $and69_i_i = ($shr58_i_i + 1048320 | 0) >>> 16 & 8;
       $shl70_i_i = $shr58_i_i << $and69_i_i;
       $and73_i_i = ($shl70_i_i + 520192 | 0) >>> 16 & 4;
       $shl75_i_i = $shl70_i_i << $and73_i_i;
       $and78_i_i = ($shl75_i_i + 245760 | 0) >>> 16 & 2;
       $add83_i_i = 14 - ($and73_i_i | $and69_i_i | $and78_i_i) + ($shl75_i_i << $and78_i_i >>> 15) | 0;
       $I57_0_i_i = $sub_ptr_sub_i_i >>> (($add83_i_i + 7 | 0) >>> 0) & 1 | $add83_i_i << 1;
      }
     }
     $arrayidx91_i_i = 20112 + ($I57_0_i_i << 2) | 0;
     HEAP32[$186 + 28 >> 2] = $I57_0_i_i;
     HEAP32[$186 + 20 >> 2] = 0;
     HEAP32[$186 + 16 >> 2] = 0;
     $335 = HEAP32[4953] | 0;
     $shl95_i_i = 1 << $I57_0_i_i;
     if (($335 & $shl95_i_i | 0) == 0) {
      HEAP32[4953] = $335 | $shl95_i_i;
      HEAP32[$arrayidx91_i_i >> 2] = $333;
      HEAP32[$186 + 24 >> 2] = $arrayidx91_i_i;
      HEAP32[$186 + 12 >> 2] = $186;
      HEAP32[$186 + 8 >> 2] = $186;
      break;
     }
     $336 = HEAP32[$arrayidx91_i_i >> 2] | 0;
     if (($I57_0_i_i | 0) == 31) {
      $cond115_i_i = 0;
     } else {
      $cond115_i_i = 25 - ($I57_0_i_i >>> 1) | 0;
     }
     L493 : do {
      if ((HEAP32[$336 + 4 >> 2] & -8 | 0) == ($sub_ptr_sub_i_i | 0)) {
       $T_0_lcssa_i_i = $336;
      } else {
       $T_017_i_i = $336;
       $K105_018_i_i = $sub_ptr_sub_i_i << $cond115_i_i;
       while (1) {
        $arrayidx126_i_i = $T_017_i_i + 16 + ($K105_018_i_i >>> 31 << 2) | 0;
        $339 = HEAP32[$arrayidx126_i_i >> 2] | 0;
        if (($339 | 0) == 0) {
         break;
        }
        if ((HEAP32[$339 + 4 >> 2] & -8 | 0) == ($sub_ptr_sub_i_i | 0)) {
         $T_0_lcssa_i_i = $339;
         break L493;
        } else {
         $T_017_i_i = $339;
         $K105_018_i_i = $K105_018_i_i << 1;
        }
       }
       if ($arrayidx126_i_i >>> 0 < (HEAP32[4956] | 0) >>> 0) {
        _abort();
        return 0;
       } else {
        HEAP32[$arrayidx126_i_i >> 2] = $333;
        HEAP32[$186 + 24 >> 2] = $T_017_i_i;
        HEAP32[$186 + 12 >> 2] = $186;
        HEAP32[$186 + 8 >> 2] = $186;
        break L308;
       }
      }
     } while (0);
     $fd145_i_i = $T_0_lcssa_i_i + 8 | 0;
     $342 = HEAP32[$fd145_i_i >> 2] | 0;
     $344 = HEAP32[4956] | 0;
     if ($T_0_lcssa_i_i >>> 0 >= $344 >>> 0 & $342 >>> 0 >= $344 >>> 0) {
      HEAP32[$342 + 12 >> 2] = $333;
      HEAP32[$fd145_i_i >> 2] = $333;
      HEAP32[$186 + 8 >> 2] = $342;
      HEAP32[$186 + 12 >> 2] = $T_0_lcssa_i_i;
      HEAP32[$186 + 24 >> 2] = 0;
      break;
     } else {
      _abort();
      return 0;
     }
    }
   }
  } while (0);
  $346 = HEAP32[4955] | 0;
  if ($346 >>> 0 > $nb_0 >>> 0) {
   $sub253_i = $346 - $nb_0 | 0;
   HEAP32[4955] = $sub253_i;
   $347 = HEAP32[4958] | 0;
   $348 = $347;
   HEAP32[4958] = $348 + $nb_0;
   HEAP32[$348 + ($nb_0 + 4) >> 2] = $sub253_i | 1;
   HEAP32[$347 + 4 >> 2] = $nb_0 | 3;
   $mem_0 = $347 + 8 | 0;
   return $mem_0 | 0;
  }
 }
 $call265_i = ___errno_location() | 0;
 HEAP32[$call265_i >> 2] = 12;
 $mem_0 = 0;
 return $mem_0 | 0;
}
function __Z8findPathffffffiNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($startPosX, $startPosY, $startPosZ, $endPosX, $endPosY, $endPosZ, $maxPath, $callback) {
 $startPosX = +$startPosX;
 $startPosY = +$startPosY;
 $startPosZ = +$startPosZ;
 $endPosX = +$endPosX;
 $endPosY = +$endPosY;
 $endPosZ = +$endPosZ;
 $maxPath = $maxPath | 0;
 $callback = $callback | 0;
 var $left_i_i = 0, $right_i_i = 0, $buff_i = 0, $startPos = 0, $endPos = 0, $filter = 0, $nearestStartPos = 0, $startRef = 0, $nearestEndPos = 0, $endRef = 0, $straightPathCount = 0, $0 = 0, $arrayinit_begin = 0, $arrayinit_begin2 = 0, $vla = 0, $m_includeFlags_i1 = 0, $m_excludeFlags_i2 = 0, $i_03_i = 0, $arraydecay5 = 0, $arraydecay7 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $m_nav_i = 0, $11 = 0, $12 = 0, $sub3_i_i_i = 0, $13 = 0, $sub5_i_i_i = 0, $and10_i_i_i = 0, $and11_i_i_i = 0, $14 = 0, $add_i_i3_i = 0, $sub_i_i4_i = 0, $16 = 0, $18 = 0, $and10_i_i39_i = 0, $and11_i_i40_i = 0, $21 = 0, $m_nodePool_i = 0, $23 = 0, $m_openList_i = 0, $call14_i = 0, $arrayidx2_i_i = 0, $arrayidx4_i_i = 0, $32 = 0, $sub_i109_i = 0.0, $arrayidx2_i110_i = 0, $sub4_i_i = 0.0, $arrayidx5_i112_i = 0, $sub7_i_i = 0.0, $mul_i = 0.0, $39 = 0, $m_size_i114_i = 0, $40 = 0, $m_heap_i66_i = 0, $parent_012_in_in_i70_i = 0, $parent_012_in_i71_i = 0, $parent_012_i72_i = 0, $41 = 0, $42 = 0, $i_addr_0_lcssa_i80_i = 0, $45 = 0, $m_size_i116194_i = 0, $46 = 0, $arraydecay_i_i = 0, $arraydecay2_i_i = 0, $arrayidx6_i175_i = 0, $arrayidx7_i_i = 0, $arrayidx11_i_i = 0, $arrayidx12_i_i = 0, $lastBestNode_1_lcssa_i = 0, $lastBestNodeCost_1_lcssa_i = 0.0, $status_1_lcssa_i = 0, $51 = 0, $m_size_i116199_i = 0, $52 = 0, $lastBestNode_0198_i = 0, $lastBestNodeCost_0197_i = 0.0, $status_0196_i = 0, $m_heap_i141_i = 0, $53 = 0, $54 = 0, $dec_i_i = 0, $55 = 0, $56 = 0, $57 = 0, $child_016_i_i = 0, $i_addr_015_i_i = 0, $add2_i_i = 0, $child_1_i_i = 0, $child_0_i_i = 0, $63 = 0.0, $parent_012_in_in_i_i_i = 0, $parent_012_in_i_i_i = 0, $parent_012_i_i_i = 0, $64 = 0, $65 = 0, $i_addr_0_lcssa_i_i_i = 0, $68 = 0, $bf_clear35_i = 0, $69 = 0, $70 = 0, $72 = 0, $and10_i_i103_i = 0, $and11_i_i104_i = 0, $73 = 0, $arrayidx_i106_i = 0, $74 = 0, $arrayidx4_i107_i = 0, $77 = 0, $parentRef_0180_i = 0, $i_0186_i = 0, $arraydecay89_i = 0, $arrayidx3_i_i156_i = 0, $arrayidx6_i_i159_i = 0, $cost96_i = 0, $tobool_i118_i = 0, $sub_ptr_lhs_cast_i120_i = 0, $links_phi_trans_insert_i = 0, $areaAndtype_i_i167_i = 0, $78 = 0, $i_0191_i = 0, $lastBestNode_1190_i = 0, $lastBestNodeCost_1189_i = 0.0, $status_1188_i = 0, $79 = 0, $80 = 0, $82 = 0, $and10_i_i115_i = 0, $and11_i_i116_i = 0, $83 = 0, $arrayidx_i118_i = 0, $84 = 0, $arrayidx4_i120_i = 0, $call71_i = 0, $87 = 0, $arraydecay91_i = 0, $sub_i_i154_i = 0.0, $arrayidx2_i_i155_i = 0, $sub4_i_i157_i = 0.0, $arrayidx5_i_i158_i = 0, $sub7_i_i160_i = 0.0, $call_i64_i = 0.0, $mul_i171_i = 0.0, $sub_i_i_i = 0.0, $sub4_i_i_i = 0.0, $sub7_i_i_i = 0.0, $call_i62_i = 0.0, $sub_i128_i = 0.0, $sub4_i131_i = 0.0, $sub7_i134_i = 0.0, $cost85_0_i = 0.0, $heuristic_0_i = 0.0, $add112_i = 0.0, $bf_load114_i = 0, $and116_i = 0, $tobool117_i = 0, $retval_0_i126_i = 0, $122 = 0, $123 = 0, $m_heap_i_i = 0, $124 = 0, $i_06_i_i = 0, $inc_i108_i = 0, $126 = 0, $parent_012_in_in_i17_i = 0, $parent_012_in_i18_i = 0, $parent_012_i19_i = 0, $127 = 0, $_pre23 = 0, $129 = 0, $i_addr_0_lcssa_i27_i = 0, $130 = 0, $m_size_i105_i = 0, $131 = 0, $m_heap_i8_i = 0, $parent_012_in_in_i_i = 0, $parent_012_in_i_i = 0, $parent_012_i_i = 0, $132 = 0, $133 = 0, $i_addr_0_lcssa_i_i = 0, $status_2_i = 0, $lastBestNodeCost_2_i = 0.0, $lastBestNode_2_i = 0, $136 = 0, $i_0_i = 0, $137 = 0, $status_0_lcssa_i = 0, $lastBestNode_3_i = 0, $or179_i = 0, $prev_0_i = 0, $node_0_i = 0, $138 = 0, $bf_load184_i = 0, $bf_clear185_i = 0, $retval_0_i103_i = 0, $retval_0_i97_i = 0, $status_0_or179_i = 0, $node_1_i = 0, $n_0_i = 0, $inc_i6 = 0, $bf_clear205_i = 0, $arrayidx_i_i = 0, $pathCount_0 = 0, $retval_0_i = 0, $retval_0_i29 = 0, $pathCount_032 = 0, $147 = 0, $vla17 = 0, $vla18 = 0, $vla19 = 0, $call22 = 0, $149 = 0, $150 = 0, $i_026 = 0, $mul28 = 0, $151 = 0.0, $cmp31 = 0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $conv48 = 0.0, $cond_i_i_i = 0, $call65 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1920 | 0;
 $left_i_i = sp | 0;
 $right_i_i = sp + 16 | 0;
 $buff_i = sp + 32 | 0;
 $startPos = sp + 1568 | 0;
 $endPos = sp + 1584 | 0;
 $filter = sp + 1600 | 0;
 $nearestStartPos = sp + 1864 | 0;
 $startRef = sp + 1880 | 0;
 $nearestEndPos = sp + 1888 | 0;
 $endRef = sp + 1904 | 0;
 $straightPathCount = sp + 1912 | 0;
 _emscripten_run_script(7064);
 $0 = sp + 1056 | 0;
 $arrayinit_begin = $startPos | 0;
 HEAPF32[$arrayinit_begin >> 2] = $startPosX;
 HEAPF32[$startPos + 4 >> 2] = $startPosY;
 HEAPF32[$startPos + 8 >> 2] = $startPosZ;
 $arrayinit_begin2 = $endPos | 0;
 HEAPF32[$arrayinit_begin2 >> 2] = $endPosX;
 HEAPF32[$endPos + 4 >> 2] = $endPosY;
 HEAPF32[$endPos + 8 >> 2] = $endPosZ;
 $vla = STACKTOP;
 STACKTOP = STACKTOP + (($maxPath + 1 | 0) * 4 | 0) | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $m_includeFlags_i1 = $filter + 256 | 0;
 HEAP16[$m_includeFlags_i1 >> 1] = -1;
 $m_excludeFlags_i2 = $filter + 258 | 0;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $i_03_i = 0;
 do {
  HEAPF32[$filter + ($i_03_i << 2) >> 2] = 1.0;
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 HEAP16[$m_includeFlags_i1 >> 1] = 3;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 HEAP32[$startRef >> 2] = 0;
 $arraydecay5 = $nearestStartPos | 0;
 __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin, 2.0, 4.0, 2.0, $filter, $startRef, $arraydecay5) | 0;
 HEAP32[$endRef >> 2] = 0;
 $arraydecay7 = $nearestEndPos | 0;
 __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin2, 2.0, 4.0, 2.0, $filter, $endRef, $arraydecay7) | 0;
 $7 = HEAP32[$endRef >> 2] | 0;
 _printf(5392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$startRef >> 2], HEAP32[tempVarArgs + 8 >> 2] = $7, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $8 = HEAP32[4910] | 0;
 $9 = HEAP32[$startRef >> 2] | 0;
 $10 = HEAP32[$endRef >> 2] | 0;
 do {
  if (($10 | 0) == 0 | ($9 | 0) == 0 | ($maxPath | 0) == 0) {
   $retval_0_i29 = -2147483640;
   label = 80;
  } else {
   $m_nav_i = $8 | 0;
   $11 = HEAP32[$m_nav_i >> 2] | 0;
   $12 = HEAP32[$11 + 76 >> 2] | 0;
   $sub3_i_i_i = (1 << $12) - 1 | 0;
   $13 = HEAP32[$11 + 80 >> 2] | 0;
   $sub5_i_i_i = (1 << $13) - 1 | 0;
   $and10_i_i_i = $9 >>> ($13 >>> 0) & $sub3_i_i_i;
   $and11_i_i_i = $sub5_i_i_i & $9;
   $14 = HEAP32[$11 + 48 >> 2] | 0;
   if ($and10_i_i_i >>> 0 < $14 >>> 0) {
    $add_i_i3_i = $13 + $12 | 0;
    $sub_i_i4_i = (1 << HEAP32[$11 + 72 >> 2]) - 1 | 0;
    $16 = HEAP32[$11 + 68 >> 2] | 0;
    if ((HEAP32[$16 + ($and10_i_i_i * 60 | 0) >> 2] | 0) == ($sub_i_i4_i & $9 >>> ($add_i_i3_i >>> 0) | 0)) {
     $18 = HEAP32[$16 + ($and10_i_i_i * 60 | 0) + 8 >> 2] | 0;
     if (($18 | 0) == 0) {
      $retval_0_i29 = -2147483640;
      label = 80;
     } else {
      if ($and11_i_i_i >>> 0 < (HEAP32[$18 + 24 >> 2] | 0) >>> 0) {
       $and10_i_i39_i = $10 >>> ($13 >>> 0) & $sub3_i_i_i;
       $and11_i_i40_i = $sub5_i_i_i & $10;
       if ($and10_i_i39_i >>> 0 < $14 >>> 0) {
        if ((HEAP32[$16 + ($and10_i_i39_i * 60 | 0) >> 2] | 0) == ($sub_i_i4_i & $10 >>> ($add_i_i3_i >>> 0) | 0)) {
         $21 = HEAP32[$16 + ($and10_i_i39_i * 60 | 0) + 8 >> 2] | 0;
         if (($21 | 0) == 0) {
          $retval_0_i29 = -2147483640;
          label = 80;
         } else {
          if ($and11_i_i40_i >>> 0 < (HEAP32[$21 + 24 >> 2] | 0) >>> 0) {
           if (($9 | 0) == ($10 | 0)) {
            HEAP32[$vla >> 2] = $9;
            $pathCount_032 = 1;
           } else {
            $m_nodePool_i = $8 + 56 | 0;
            $23 = HEAP32[$m_nodePool_i >> 2] | 0;
            _memset(HEAP32[$23 + 4 >> 2] | 0, -1 | 0, HEAP32[$23 + 16 >> 2] << 1 | 0) | 0;
            HEAP32[$23 + 20 >> 2] = 0;
            $m_openList_i = $8 + 60 | 0;
            HEAP32[(HEAP32[$m_openList_i >> 2] | 0) + 8 >> 2] = 0;
            $call14_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_nodePool_i >> 2] | 0, $9) | 0;
            HEAPF32[$call14_i >> 2] = +HEAPF32[$arraydecay5 >> 2];
            $arrayidx2_i_i = $nearestStartPos + 4 | 0;
            HEAPF32[$call14_i + 4 >> 2] = +HEAPF32[$arrayidx2_i_i >> 2];
            $arrayidx4_i_i = $nearestStartPos + 8 | 0;
            HEAPF32[$call14_i + 8 >> 2] = +HEAPF32[$arrayidx4_i_i >> 2];
            $32 = $call14_i + 20 | 0;
            HEAP32[$32 >> 2] = HEAP32[$32 >> 2] & -1073741824;
            HEAPF32[$call14_i + 12 >> 2] = 0.0;
            $sub_i109_i = +HEAPF32[$arraydecay7 >> 2] - +HEAPF32[$arraydecay5 >> 2];
            $arrayidx2_i110_i = $nearestEndPos + 4 | 0;
            $sub4_i_i = +HEAPF32[$arrayidx2_i110_i >> 2] - +HEAPF32[$arrayidx2_i_i >> 2];
            $arrayidx5_i112_i = $nearestEndPos + 8 | 0;
            $sub7_i_i = +HEAPF32[$arrayidx5_i112_i >> 2] - +HEAPF32[$arrayidx4_i_i >> 2];
            $mul_i = +Math_sqrt($sub_i109_i * $sub_i109_i + $sub4_i_i * $sub4_i_i + $sub7_i_i * $sub7_i_i) * .9990000128746033;
            HEAPF32[$call14_i + 16 >> 2] = $mul_i;
            HEAP32[$call14_i + 24 >> 2] = $9;
            HEAP32[$32 >> 2] = HEAP32[$32 >> 2] & 1073741823 | 1073741824;
            $39 = HEAP32[$m_openList_i >> 2] | 0;
            $m_size_i114_i = $39 + 8 | 0;
            $40 = HEAP32[$m_size_i114_i >> 2] | 0;
            HEAP32[$m_size_i114_i >> 2] = $40 + 1;
            $m_heap_i66_i = $39 | 0;
            L17 : do {
             if (($40 | 0) > 0) {
              $parent_012_in_in_i70_i = $40;
              while (1) {
               $parent_012_in_i71_i = $parent_012_in_in_i70_i - 1 | 0;
               $parent_012_i72_i = ($parent_012_in_i71_i | 0) / 2 | 0;
               $41 = HEAP32[$m_heap_i66_i >> 2] | 0;
               $42 = HEAP32[$41 + ($parent_012_i72_i << 2) >> 2] | 0;
               if (!(+HEAPF32[$42 + 16 >> 2] > $mul_i)) {
                $i_addr_0_lcssa_i80_i = $parent_012_in_in_i70_i;
                break L17;
               }
               HEAP32[$41 + ($parent_012_in_in_i70_i << 2) >> 2] = $42;
               if (($parent_012_in_i71_i | 0) > 1) {
                $parent_012_in_in_i70_i = $parent_012_i72_i;
               } else {
                $i_addr_0_lcssa_i80_i = $parent_012_i72_i;
                break;
               }
              }
             } else {
              $i_addr_0_lcssa_i80_i = $40;
             }
            } while (0);
            HEAP32[(HEAP32[$m_heap_i66_i >> 2] | 0) + ($i_addr_0_lcssa_i80_i << 2) >> 2] = $call14_i;
            $45 = HEAP32[$m_openList_i >> 2] | 0;
            $m_size_i116194_i = $45 + 8 | 0;
            $46 = HEAP32[$m_size_i116194_i >> 2] | 0;
            L22 : do {
             if (($46 | 0) == 0) {
              $lastBestNode_3_i = $call14_i;
              $status_0_lcssa_i = 1073741824;
              $137 = $9;
             } else {
              $arraydecay_i_i = $left_i_i | 0;
              $arraydecay2_i_i = $right_i_i | 0;
              $arrayidx6_i175_i = $left_i_i + 4 | 0;
              $arrayidx7_i_i = $right_i_i + 4 | 0;
              $arrayidx11_i_i = $left_i_i + 8 | 0;
              $arrayidx12_i_i = $right_i_i + 8 | 0;
              $status_0196_i = 1073741824;
              $lastBestNodeCost_0197_i = $mul_i;
              $lastBestNode_0198_i = $call14_i;
              $52 = $45;
              $m_size_i116199_i = $m_size_i116194_i;
              $51 = $46;
              while (1) {
               $m_heap_i141_i = $52 | 0;
               $53 = HEAP32[$m_heap_i141_i >> 2] | 0;
               $54 = HEAP32[$53 >> 2] | 0;
               $dec_i_i = $51 - 1 | 0;
               HEAP32[$m_size_i116199_i >> 2] = $dec_i_i;
               $55 = HEAP32[$53 + ($dec_i_i << 2) >> 2] | 0;
               $56 = HEAP32[$52 + 8 >> 2] | 0;
               L26 : do {
                if (($56 | 0) > 1) {
                 $i_addr_015_i_i = 0;
                 $child_016_i_i = 1;
                 $57 = $53;
                 while (1) {
                  $add2_i_i = $child_016_i_i + 1 | 0;
                  if (($add2_i_i | 0) < ($56 | 0)) {
                   if (+HEAPF32[(HEAP32[$57 + ($child_016_i_i << 2) >> 2] | 0) + 16 >> 2] > +HEAPF32[(HEAP32[$57 + ($add2_i_i << 2) >> 2] | 0) + 16 >> 2]) {
                    $child_1_i_i = $add2_i_i;
                   } else {
                    $child_1_i_i = $child_016_i_i;
                   }
                  } else {
                   $child_1_i_i = $child_016_i_i;
                  }
                  HEAP32[$57 + ($i_addr_015_i_i << 2) >> 2] = HEAP32[$57 + ($child_1_i_i << 2) >> 2];
                  $child_0_i_i = $child_1_i_i << 1 | 1;
                  if (($child_0_i_i | 0) >= ($56 | 0)) {
                   break;
                  }
                  $i_addr_015_i_i = $child_1_i_i;
                  $child_016_i_i = $child_0_i_i;
                  $57 = HEAP32[$m_heap_i141_i >> 2] | 0;
                 }
                 if (($child_1_i_i | 0) > 0) {
                  $63 = +HEAPF32[$55 + 16 >> 2];
                  $parent_012_in_in_i_i_i = $child_1_i_i;
                  while (1) {
                   $parent_012_in_i_i_i = $parent_012_in_in_i_i_i - 1 | 0;
                   $parent_012_i_i_i = ($parent_012_in_i_i_i | 0) / 2 | 0;
                   $64 = HEAP32[$m_heap_i141_i >> 2] | 0;
                   $65 = HEAP32[$64 + ($parent_012_i_i_i << 2) >> 2] | 0;
                   if (!(+HEAPF32[$65 + 16 >> 2] > $63)) {
                    $i_addr_0_lcssa_i_i_i = $parent_012_in_in_i_i_i;
                    break L26;
                   }
                   HEAP32[$64 + ($parent_012_in_in_i_i_i << 2) >> 2] = $65;
                   if (($parent_012_in_i_i_i | 0) > 1) {
                    $parent_012_in_in_i_i_i = $parent_012_i_i_i;
                   } else {
                    $i_addr_0_lcssa_i_i_i = $parent_012_i_i_i;
                    break;
                   }
                  }
                 } else {
                  $i_addr_0_lcssa_i_i_i = $child_1_i_i;
                 }
                } else {
                 $i_addr_0_lcssa_i_i_i = 0;
                }
               } while (0);
               HEAP32[(HEAP32[$m_heap_i141_i >> 2] | 0) + ($i_addr_0_lcssa_i_i_i << 2) >> 2] = $55;
               $68 = $54 + 20 | 0;
               $bf_clear35_i = HEAP32[$68 >> 2] & 1073741823;
               HEAP32[$68 >> 2] = $bf_clear35_i | -2147483648;
               $69 = HEAP32[$54 + 24 >> 2] | 0;
               if (($69 | 0) == ($10 | 0)) {
                $lastBestNode_3_i = $54;
                $status_0_lcssa_i = $status_0196_i;
                $137 = $10;
                break L22;
               }
               $70 = HEAP32[$m_nav_i >> 2] | 0;
               $72 = HEAP32[$70 + 80 >> 2] | 0;
               $and10_i_i103_i = $69 >>> ($72 >>> 0) & (1 << HEAP32[$70 + 76 >> 2]) - 1;
               $and11_i_i104_i = (1 << $72) - 1 & $69;
               $73 = HEAP32[$70 + 68 >> 2] | 0;
               $arrayidx_i106_i = $73 + ($and10_i_i103_i * 60 | 0) | 0;
               $74 = HEAP32[$73 + ($and10_i_i103_i * 60 | 0) + 12 >> 2] | 0;
               $arrayidx4_i107_i = $74 + ($and11_i_i104_i << 5) | 0;
               if (($bf_clear35_i | 0) == 0) {
                $parentRef_0180_i = 0;
               } else {
                $77 = HEAP32[(HEAP32[HEAP32[$m_nodePool_i >> 2] >> 2] | 0) + (($bf_clear35_i - 1 | 0) * 28 | 0) + 24 >> 2] | 0;
                $parentRef_0180_i = ($77 | 0) == 0 ? 0 : $77;
               }
               $i_0186_i = HEAP32[$arrayidx4_i107_i >> 2] | 0;
               if (($i_0186_i | 0) == -1) {
                $status_1_lcssa_i = $status_0196_i;
                $lastBestNodeCost_1_lcssa_i = $lastBestNodeCost_0197_i;
                $lastBestNode_1_lcssa_i = $lastBestNode_0198_i;
               } else {
                $arraydecay89_i = $54 | 0;
                $arrayidx3_i_i156_i = $54 + 4 | 0;
                $arrayidx6_i_i159_i = $54 + 8 | 0;
                $cost96_i = $54 + 12 | 0;
                $tobool_i118_i = ($54 | 0) == 0;
                $sub_ptr_lhs_cast_i120_i = $54;
                $links_phi_trans_insert_i = $73 + ($and10_i_i103_i * 60 | 0) + 20 | 0;
                $areaAndtype_i_i167_i = $74 + ($and11_i_i104_i << 5) + 31 | 0;
                $status_1188_i = $status_0196_i;
                $lastBestNodeCost_1189_i = $lastBestNodeCost_0197_i;
                $lastBestNode_1190_i = $lastBestNode_0198_i;
                $i_0191_i = $i_0186_i;
                $78 = HEAP32[$links_phi_trans_insert_i >> 2] | 0;
                while (1) {
                 $79 = HEAP32[$78 + ($i_0191_i * 12 | 0) >> 2] | 0;
                 do {
                  if (($79 | 0) == 0 | ($79 | 0) == ($parentRef_0180_i | 0)) {
                   $lastBestNode_2_i = $lastBestNode_1190_i;
                   $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                   $status_2_i = $status_1188_i;
                  } else {
                   $80 = HEAP32[$m_nav_i >> 2] | 0;
                   $82 = HEAP32[$80 + 80 >> 2] | 0;
                   $and10_i_i115_i = $79 >>> ($82 >>> 0) & (1 << HEAP32[$80 + 76 >> 2]) - 1;
                   $and11_i_i116_i = (1 << $82) - 1 & $79;
                   $83 = HEAP32[$80 + 68 >> 2] | 0;
                   $arrayidx_i118_i = $83 + ($and10_i_i115_i * 60 | 0) | 0;
                   $84 = HEAP32[$83 + ($and10_i_i115_i * 60 | 0) + 12 >> 2] | 0;
                   $arrayidx4_i120_i = $84 + ($and11_i_i116_i << 5) | 0;
                   if ((HEAP16[$84 + ($and11_i_i116_i << 5) + 28 >> 1] & 3) == 0) {
                    $lastBestNode_2_i = $lastBestNode_1190_i;
                    $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                    $status_2_i = $status_1188_i;
                   } else {
                    $call71_i = __ZN10dtNodePool7getNodeEj(HEAP32[$m_nodePool_i >> 2] | 0, $79) | 0;
                    if (($call71_i | 0) == 0) {
                     $lastBestNode_2_i = $lastBestNode_1190_i;
                     $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                     $status_2_i = $status_1188_i | 32;
                     break;
                    }
                    $87 = $call71_i + 20 | 0;
                    if ((HEAP32[$87 >> 2] | 0) >>> 0 < 1073741824 >>> 0) {
                     if ((__ZNK14dtNavMeshQuery15getPortalPointsEjPK6dtPolyPK10dtMeshTilejS2_S5_PfS6_($69, $arrayidx4_i107_i, $arrayidx_i106_i, $79, $arrayidx4_i120_i, $arrayidx_i118_i, $arraydecay_i_i, $arraydecay2_i_i) | 0) >= 0) {
                      HEAPF32[$call71_i >> 2] = (+HEAPF32[$arraydecay_i_i >> 2] + +HEAPF32[$arraydecay2_i_i >> 2]) * .5;
                      HEAPF32[$call71_i + 4 >> 2] = (+HEAPF32[$arrayidx6_i175_i >> 2] + +HEAPF32[$arrayidx7_i_i >> 2]) * .5;
                      HEAPF32[$call71_i + 8 >> 2] = (+HEAPF32[$arrayidx11_i_i >> 2] + +HEAPF32[$arrayidx12_i_i >> 2]) * .5;
                     }
                    }
                    $arraydecay91_i = $call71_i | 0;
                    $sub_i_i154_i = +HEAPF32[$arraydecay91_i >> 2] - +HEAPF32[$arraydecay89_i >> 2];
                    $arrayidx2_i_i155_i = $call71_i + 4 | 0;
                    $sub4_i_i157_i = +HEAPF32[$arrayidx2_i_i155_i >> 2] - +HEAPF32[$arrayidx3_i_i156_i >> 2];
                    $arrayidx5_i_i158_i = $call71_i + 8 | 0;
                    $sub7_i_i160_i = +HEAPF32[$arrayidx5_i_i158_i >> 2] - +HEAPF32[$arrayidx6_i_i159_i >> 2];
                    $call_i64_i = +Math_sqrt($sub_i_i154_i * $sub_i_i154_i + $sub4_i_i157_i * $sub4_i_i157_i + $sub7_i_i160_i * $sub7_i_i160_i);
                    $mul_i171_i = $call_i64_i * +HEAPF32[$filter + ((HEAP8[$areaAndtype_i_i167_i >> 0] & 63) << 2) >> 2];
                    if (($79 | 0) == ($10 | 0)) {
                     $sub_i_i_i = +HEAPF32[$arraydecay7 >> 2] - +HEAPF32[$arraydecay91_i >> 2];
                     $sub4_i_i_i = +HEAPF32[$arrayidx2_i110_i >> 2] - +HEAPF32[$arrayidx2_i_i155_i >> 2];
                     $sub7_i_i_i = +HEAPF32[$arrayidx5_i112_i >> 2] - +HEAPF32[$arrayidx5_i_i158_i >> 2];
                     $call_i62_i = +Math_sqrt($sub_i_i_i * $sub_i_i_i + $sub4_i_i_i * $sub4_i_i_i + $sub7_i_i_i * $sub7_i_i_i);
                     $heuristic_0_i = 0.0;
                     $cost85_0_i = $call_i62_i * +HEAPF32[$filter + ((HEAP8[$84 + ($and11_i_i116_i << 5) + 31 >> 0] & 63) << 2) >> 2] + ($mul_i171_i + +HEAPF32[$cost96_i >> 2]);
                    } else {
                     $sub_i128_i = +HEAPF32[$arraydecay7 >> 2] - +HEAPF32[$arraydecay91_i >> 2];
                     $sub4_i131_i = +HEAPF32[$arrayidx2_i110_i >> 2] - +HEAPF32[$arrayidx2_i_i155_i >> 2];
                     $sub7_i134_i = +HEAPF32[$arrayidx5_i112_i >> 2] - +HEAPF32[$arrayidx5_i_i158_i >> 2];
                     $heuristic_0_i = +Math_sqrt($sub_i128_i * $sub_i128_i + $sub4_i131_i * $sub4_i131_i + $sub7_i134_i * $sub7_i134_i) * .9990000128746033;
                     $cost85_0_i = $mul_i171_i + +HEAPF32[$cost96_i >> 2];
                    }
                    $add112_i = $cost85_0_i + $heuristic_0_i;
                    $bf_load114_i = HEAP32[$87 >> 2] | 0;
                    $and116_i = $bf_load114_i & 1073741824;
                    $tobool117_i = ($and116_i | 0) == 0;
                    if (!$tobool117_i) {
                     if (!($add112_i < +HEAPF32[$call71_i + 16 >> 2])) {
                      $lastBestNode_2_i = $lastBestNode_1190_i;
                      $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                      $status_2_i = $status_1188_i;
                      break;
                     }
                    }
                    if (($bf_load114_i | 0) < 0) {
                     if (!($add112_i < +HEAPF32[$call71_i + 16 >> 2])) {
                      $lastBestNode_2_i = $lastBestNode_1190_i;
                      $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                      $status_2_i = $status_1188_i;
                      break;
                     }
                    }
                    if ($tobool_i118_i) {
                     $retval_0_i126_i = 0;
                    } else {
                     $retval_0_i126_i = (($sub_ptr_lhs_cast_i120_i - (HEAP32[HEAP32[$m_nodePool_i >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
                    }
                    HEAP32[$call71_i + 24 >> 2] = $79;
                    HEAP32[$87 >> 2] = $and116_i | $retval_0_i126_i;
                    HEAPF32[$call71_i + 12 >> 2] = $cost85_0_i;
                    HEAPF32[$call71_i + 16 >> 2] = $add112_i;
                    L71 : do {
                     if ($tobool117_i) {
                      HEAP32[$87 >> 2] = $retval_0_i126_i | 1073741824;
                      $130 = HEAP32[$m_openList_i >> 2] | 0;
                      $m_size_i105_i = $130 + 8 | 0;
                      $131 = HEAP32[$m_size_i105_i >> 2] | 0;
                      HEAP32[$m_size_i105_i >> 2] = $131 + 1;
                      $m_heap_i8_i = $130 | 0;
                      L84 : do {
                       if (($131 | 0) > 0) {
                        $parent_012_in_in_i_i = $131;
                        while (1) {
                         $parent_012_in_i_i = $parent_012_in_in_i_i - 1 | 0;
                         $parent_012_i_i = ($parent_012_in_i_i | 0) / 2 | 0;
                         $132 = HEAP32[$m_heap_i8_i >> 2] | 0;
                         $133 = HEAP32[$132 + ($parent_012_i_i << 2) >> 2] | 0;
                         if (!(+HEAPF32[$133 + 16 >> 2] > $add112_i)) {
                          $i_addr_0_lcssa_i_i = $parent_012_in_in_i_i;
                          break L84;
                         }
                         HEAP32[$132 + ($parent_012_in_in_i_i << 2) >> 2] = $133;
                         if (($parent_012_in_i_i | 0) > 1) {
                          $parent_012_in_in_i_i = $parent_012_i_i;
                         } else {
                          $i_addr_0_lcssa_i_i = $parent_012_i_i;
                          break;
                         }
                        }
                       } else {
                        $i_addr_0_lcssa_i_i = $131;
                       }
                      } while (0);
                      HEAP32[(HEAP32[$m_heap_i8_i >> 2] | 0) + ($i_addr_0_lcssa_i_i << 2) >> 2] = $call71_i;
                     } else {
                      $122 = HEAP32[$m_openList_i >> 2] | 0;
                      $123 = HEAP32[$122 + 8 >> 2] | 0;
                      if (($123 | 0) > 0) {
                       $m_heap_i_i = $122 | 0;
                       $124 = HEAP32[$m_heap_i_i >> 2] | 0;
                       $i_06_i_i = 0;
                       while (1) {
                        $inc_i108_i = $i_06_i_i + 1 | 0;
                        if ((HEAP32[$124 + ($i_06_i_i << 2) >> 2] | 0) == ($call71_i | 0)) {
                         break;
                        }
                        if (($inc_i108_i | 0) < ($123 | 0)) {
                         $i_06_i_i = $inc_i108_i;
                        } else {
                         break L71;
                        }
                       }
                       L78 : do {
                        if (($i_06_i_i | 0) > 0) {
                         $parent_012_in_in_i17_i = $i_06_i_i;
                         $126 = $124;
                         while (1) {
                          $parent_012_in_i18_i = $parent_012_in_in_i17_i - 1 | 0;
                          $parent_012_i19_i = ($parent_012_in_i18_i | 0) / 2 | 0;
                          $127 = HEAP32[$126 + ($parent_012_i19_i << 2) >> 2] | 0;
                          if (!(+HEAPF32[$127 + 16 >> 2] > $add112_i)) {
                           $i_addr_0_lcssa_i27_i = $parent_012_in_in_i17_i;
                           $129 = $126;
                           break L78;
                          }
                          HEAP32[$126 + ($parent_012_in_in_i17_i << 2) >> 2] = $127;
                          $_pre23 = HEAP32[$m_heap_i_i >> 2] | 0;
                          if (($parent_012_in_i18_i | 0) > 1) {
                           $parent_012_in_in_i17_i = $parent_012_i19_i;
                           $126 = $_pre23;
                          } else {
                           $i_addr_0_lcssa_i27_i = $parent_012_i19_i;
                           $129 = $_pre23;
                           break;
                          }
                         }
                        } else {
                         $i_addr_0_lcssa_i27_i = $i_06_i_i;
                         $129 = $124;
                        }
                       } while (0);
                       HEAP32[$129 + ($i_addr_0_lcssa_i27_i << 2) >> 2] = $call71_i;
                      }
                     }
                    } while (0);
                    if ($heuristic_0_i < $lastBestNodeCost_1189_i) {
                     $lastBestNode_2_i = $call71_i;
                     $lastBestNodeCost_2_i = $heuristic_0_i;
                     $status_2_i = $status_1188_i;
                    } else {
                     $lastBestNode_2_i = $lastBestNode_1190_i;
                     $lastBestNodeCost_2_i = $lastBestNodeCost_1189_i;
                     $status_2_i = $status_1188_i;
                    }
                   }
                  }
                 } while (0);
                 $136 = HEAP32[$links_phi_trans_insert_i >> 2] | 0;
                 $i_0_i = HEAP32[$136 + ($i_0191_i * 12 | 0) + 4 >> 2] | 0;
                 if (($i_0_i | 0) == -1) {
                  $status_1_lcssa_i = $status_2_i;
                  $lastBestNodeCost_1_lcssa_i = $lastBestNodeCost_2_i;
                  $lastBestNode_1_lcssa_i = $lastBestNode_2_i;
                  break;
                 } else {
                  $status_1188_i = $status_2_i;
                  $lastBestNodeCost_1189_i = $lastBestNodeCost_2_i;
                  $lastBestNode_1190_i = $lastBestNode_2_i;
                  $i_0191_i = $i_0_i;
                  $78 = $136;
                 }
                }
               }
               $52 = HEAP32[$m_openList_i >> 2] | 0;
               $m_size_i116199_i = $52 + 8 | 0;
               $51 = HEAP32[$m_size_i116199_i >> 2] | 0;
               if (($51 | 0) == 0) {
                break;
               } else {
                $status_0196_i = $status_1_lcssa_i;
                $lastBestNodeCost_0197_i = $lastBestNodeCost_1_lcssa_i;
                $lastBestNode_0198_i = $lastBestNode_1_lcssa_i;
               }
              }
              $lastBestNode_3_i = $lastBestNode_1_lcssa_i;
              $status_0_lcssa_i = $status_1_lcssa_i;
              $137 = HEAP32[$lastBestNode_1_lcssa_i + 24 >> 2] | 0;
             }
            } while (0);
            $or179_i = $status_0_lcssa_i | 64;
            $node_0_i = $lastBestNode_3_i;
            $prev_0_i = 0;
            while (1) {
             $138 = $node_0_i + 20 | 0;
             $bf_load184_i = HEAP32[$138 >> 2] | 0;
             $bf_clear185_i = $bf_load184_i & 1073741823;
             if (($bf_clear185_i | 0) == 0) {
              $retval_0_i103_i = 0;
             } else {
              $retval_0_i103_i = (HEAP32[HEAP32[$m_nodePool_i >> 2] >> 2] | 0) + (($bf_clear185_i - 1 | 0) * 28 | 0) | 0;
             }
             if (($prev_0_i | 0) == 0) {
              $retval_0_i97_i = 0;
             } else {
              $retval_0_i97_i = (($prev_0_i - (HEAP32[HEAP32[$m_nodePool_i >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
             }
             HEAP32[$138 >> 2] = $bf_load184_i & -1073741824 | $retval_0_i97_i;
             if (($retval_0_i103_i | 0) == 0) {
              break;
             } else {
              $prev_0_i = $node_0_i;
              $node_0_i = $retval_0_i103_i;
             }
            }
            $status_0_or179_i = ($137 | 0) == ($10 | 0) ? $status_0_lcssa_i : $or179_i;
            $n_0_i = 0;
            $node_1_i = $node_0_i;
            while (1) {
             $inc_i6 = $n_0_i + 1 | 0;
             HEAP32[$vla + ($n_0_i << 2) >> 2] = HEAP32[$node_1_i + 24 >> 2];
             if (($inc_i6 | 0) >= ($maxPath | 0)) {
              label = 76;
              break;
             }
             $bf_clear205_i = HEAP32[$node_1_i + 20 >> 2] & 1073741823;
             if (($bf_clear205_i | 0) == 0) {
              $retval_0_i = $status_0_or179_i;
              $pathCount_0 = $inc_i6;
              break;
             }
             $arrayidx_i_i = (HEAP32[HEAP32[$m_nodePool_i >> 2] >> 2] | 0) + (($bf_clear205_i - 1 | 0) * 28 | 0) | 0;
             if (($arrayidx_i_i | 0) == 0) {
              $retval_0_i = $status_0_or179_i;
              $pathCount_0 = $inc_i6;
              break;
             } else {
              $n_0_i = $inc_i6;
              $node_1_i = $arrayidx_i_i;
             }
            }
            if ((label | 0) == 76) {
             $retval_0_i = $status_0_or179_i | 16;
             $pathCount_0 = $inc_i6;
            }
            if (($retval_0_i | 0) < 0) {
             $retval_0_i29 = $retval_0_i;
             label = 80;
             break;
            } else {
             $pathCount_032 = $pathCount_0;
            }
           }
           _printf(5216, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $pathCount_032, tempVarArgs) | 0) | 0;
           STACKTOP = tempVarArgs;
           $147 = _llvm_stacksave() | 0;
           $vla17 = STACKTOP;
           STACKTOP = STACKTOP + (($maxPath * 3 | 0) * 4 | 0) | 0;
           STACKTOP = STACKTOP + 7 & -8;
           $vla18 = STACKTOP;
           STACKTOP = STACKTOP + $maxPath | 0;
           STACKTOP = STACKTOP + 7 & -8;
           $vla19 = STACKTOP;
           STACKTOP = STACKTOP + ($maxPath * 4 | 0) | 0;
           STACKTOP = STACKTOP + 7 & -8;
           HEAP32[$straightPathCount >> 2] = 0;
           $call22 = __ZNK14dtNavMeshQuery16findStraightPathEPKfS1_PKjiPfPhPjPiii(HEAP32[4910] | 0, $arraydecay5, $arraydecay7, $vla, $pathCount_032, $vla17, $vla18, $vla19, $straightPathCount, $maxPath) | 0;
           if (($call22 | 0) < 0) {
            _printf(5128, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $call22, tempVarArgs) | 0) | 0;
            STACKTOP = tempVarArgs;
           } else {
            $149 = HEAP32[$straightPathCount >> 2] | 0;
            _printf(5040, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $149, tempVarArgs) | 0) | 0;
            STACKTOP = tempVarArgs;
            if (($149 | 0) > 0) {
             $150 = $buff_i | 0;
             $i_026 = 0;
             do {
              $mul28 = $i_026 * 3 | 0;
              $151 = +HEAPF32[$vla17 + ($mul28 << 2) >> 2];
              $cmp31 = +Math_abs(+$151) < 1.0000000116860974e-7;
              $152 = +HEAPF32[$vla17 + ($mul28 + 1 << 2) >> 2];
              if ($cmp31) {
               if (+Math_abs(+$152) < 1.0000000116860974e-7) {
                $153 = +HEAPF32[$vla17 + ($mul28 + 2 << 2) >> 2];
                if (+Math_abs(+$153) < 1.0000000116860974e-7) {
                 _sprintf($0 | 0, 5008, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $151, HEAPF64[tempVarArgs + 8 >> 3] = $152, HEAPF64[tempVarArgs + 16 >> 3] = $153, tempVarArgs) | 0) | 0;
                 STACKTOP = tempVarArgs;
                 _sprintf($150 | 0, 7600, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $0, tempVarArgs) | 0) | 0;
                 STACKTOP = tempVarArgs;
                 _emscripten_run_script($150 | 0);
                } else {
                 $154 = $152;
                 label = 88;
                }
               } else {
                $154 = $152;
                label = 88;
               }
              } else {
               $154 = $152;
               label = 88;
              }
              if ((label | 0) == 88) {
               label = 0;
               $conv48 = +HEAPF32[$vla17 + ($mul28 + 2 << 2) >> 2];
               _sprintf($0 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $151, HEAPF64[tempVarArgs + 8 >> 3] = $154, HEAPF64[tempVarArgs + 16 >> 3] = $conv48, tempVarArgs) | 0) | 0;
               STACKTOP = tempVarArgs;
               _emscripten_run_script($0 | 0);
              }
              $i_026 = $i_026 + 1 | 0;
             } while (($i_026 | 0) < ($149 | 0));
            }
           }
           _llvm_stackrestore($147 | 0);
          } else {
           $retval_0_i29 = -2147483640;
           label = 80;
          }
         }
        } else {
         $retval_0_i29 = -2147483640;
         label = 80;
        }
       } else {
        $retval_0_i29 = -2147483640;
        label = 80;
       }
      } else {
       $retval_0_i29 = -2147483640;
       label = 80;
      }
     }
    } else {
     $retval_0_i29 = -2147483640;
     label = 80;
    }
   } else {
    $retval_0_i29 = -2147483640;
    label = 80;
   }
  }
 } while (0);
 if ((label | 0) == 80) {
  _printf(5296, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $retval_0_i29, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 if ((HEAP8[$callback >> 0] & 1) == 0) {
  $cond_i_i_i = $callback + 1 | 0;
  $call65 = _sprintf($0 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$6$0 = 260;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 512;
  $$etemp$7$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
  $call65 = _sprintf($0 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$6$0 = 260;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 512;
  $$etemp$7$1 = 0;
  STACKTOP = sp;
  return;
 }
}
function __Z19dtCreateNavMeshDataP21dtNavMeshCreateParamsPPhPi($params, $outData, $outDataSize) {
 $params = $params | 0;
 $outData = $outData | 0;
 $outDataSize = $outDataSize | 0;
 var $curNode_i = 0, $0 = 0, $vertCount = 0, $1 = 0, $verts = 0, $polyCount = 0, $3 = 0, $polys = 0, $offMeshConCount = 0, $5 = 0, $call_i_i = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, $10 = 0.0, $11 = 0, $hmin_0555 = 0.0, $hmax_0554 = 0.0, $i_0553 = 0, $12 = 0.0, $cond_i = 0.0, $cond_i381 = 0.0, $inc = 0, $hmin_1548 = 0.0, $hmax_1547 = 0.0, $i31_0546 = 0, $add44 = 0.0, $cond_i383 = 0.0, $cond_i385 = 0.0, $inc48 = 0, $hmax_2 = 0.0, $hmin_2 = 0.0, $14 = 0.0, $sub = 0.0, $add52 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $offMeshConVerts = 0, $storedOffMeshConCount_0542 = 0, $offMeshConLinkCount_0541 = 0, $i61_0540 = 0, $mul66 = 0, $mul68 = 0, $20 = 0, $add71366 = 0, $mul72 = 0, $arrayidx69_val = 0.0, $arrayidx69_idx_val = 0.0, $21 = 0, $arrayidx80 = 0, $arrayidx74_val = 0.0, $arrayidx74_idx_val = 0.0, $22 = 0, $23 = 0.0, $24 = 0, $inc112 = 0, $offMeshConLinkCount_2 = 0, $inc128_storedOffMeshConCount_0 = 0, $inc131 = 0, $storedOffMeshConCount_0_lcssa = 0, $offMeshConLinkCount_0_lcssa = 0, $26 = 0, $27 = 0, $offMeshConLinkCount_3 = 0, $storedOffMeshConCount_2 = 0, $offMeshConClass_0 = 0, $add135 = 0, $add138 = 0, $cmp142533 = 0, $28 = 0, $cmp149527 = 0, $edgeCount_0536 = 0, $portalCount_0535 = 0, $i139_0534 = 0, $mul145 = 0, $add158 = 0, $edgeCount_1530 = 0, $portalCount_1529 = 0, $j_0528 = 0, $inc157 = 0, $30 = 0, $portalCount_2 = 0, $inc175 = 0, $edgeCount_1_lcssa = 0, $portalCount_1_lcssa = 0, $inc178 = 0, $edgeCount_0_lcssa = 0, $portalCount_0_lcssa = 0, $add183 = 0, $detailMeshes = 0, $33 = 0, $mul227 = 0, $34 = 0, $cmp234510 = 0, $35 = 0, $mul193 = 0, $36 = 0, $cmp203518 = 0, $uniqueDetailVertCount_0525 = 0, $i187_0524 = 0, $mul194 = 0, $37 = 0, $nv_0520 = 0, $inc211 = 0, $nv_0_lcssa = 0, $add216 = 0, $inc218 = 0, $detailTriCount_0516 = 0, $i221_0515 = 0, $mul228 = 0, $nv231_0512 = 0, $inc242 = 0, $nv231_0_lcssa = 0, $add247 = 0, $inc249 = 0, $detailTriCount_1 = 0, $uniqueDetailVertCount_1 = 0, $mul253 = 0, $mul255 = 0, $mul257 = 0, $mul260 = 0, $mul262 = 0, $mul264 = 0, $buildBvTree = 0, $_mul269 = 0, $add280 = 0, $call_i_i1 = 0, $41 = 0, $add_ptr_sum = 0, $42 = 0, $add_ptr287_sum = 0, $43 = 0, $add_ptr288_sum = 0, $44 = 0, $add_ptr289_sum = 0, $add_ptr290 = 0, $add_ptr290_sum = 0, $45 = 0, $46 = 0, $arraydecay301 = 0, $arrayidx2_i438 = 0, $arrayidx4_i440 = 0, $69 = 0, $cs = 0, $73 = 0.0, $85 = 0, $86 = 0, $ch349 = 0, $87 = 0, $cmp368505 = 0, $offMeshConVerts378 = 0, $88 = 0.0, $i324_0509 = 0, $mul330 = 0, $arrayidx332_sum = 0, $arrayidx332_sum362 = 0, $inc363 = 0, $i365_0507 = 0, $n_0506 = 0, $mul377 = 0, $98 = 0, $mul383 = 0, $n_1 = 0, $cmp398500 = 0, $cmp407498 = 0, $mul477 = 0, $_pre566 = 0, $_pre567 = 0, $offMeshConFlags = 0, $offMeshConAreas = 0, $i395_0503 = 0, $src_0501 = 0, $vertCount402 = 0, $j405_0499 = 0, $108 = 0, $109 = 0, $i482_0497 = 0, $n_2496 = 0, $add494 = 0, $add498 = 0, $n_3 = 0, $116 = 0, $detailVerts560 = 0, $117 = 0, $118 = 0, $i520_0494 = 0, $vbase_0493 = 0, $mul526 = 0, $119 = 0, $120 = 0, $conv538 = 0, $conv539 = 0, $sub540 = 0, $127 = 0, $vbase_1 = 0, $inc572 = 0, $130 = 0, $i577_0491 = 0, $tbase_0490 = 0, $131 = 0, $conv587 = 0, $sub613 = 0, $smax = 0, $j594_0488 = 0, $tbase_1487 = 0, $add_ptr290_sum356 = 0, $_ = 0, $135 = 0, $tbase_1_lcssa = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0.0, $141 = 0.0, $call_i_i2 = 0, $143 = 0, $mul3_i = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $j_02_us_i = 0, $150 = 0, $mul38_us_i = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $inc_us_i = 0, $160 = 0, $conv110_us_i = 0, $conv119_us_i = 0, $inc123_us_i = 0, $i_04_us_i = 0, $mul4_us_i = 0, $arrayidx5_us_i = 0, $163 = 0, $arrayidx9_us_i = 0, $arrayidx10_us_i = 0, $165 = 0, $arrayidx17_us_i = 0, $arrayidx19_us_i = 0, $167 = 0, $arrayidx26_us_i = 0, $arrayidx28_us_i = 0, $i_04_i = 0, $arrayidx5_i378 = 0, $169 = 0, $171 = 0, $arrayidx17_i = 0, $arrayidx19_i = 0, $173 = 0, $conv110_i = 0, $conv119_i = 0, $175 = 0, $offMeshConVerts658 = 0, $offMeshConRad = 0, $offMeshConDir = 0, $offMeshConUserID = 0, $i642_0484 = 0, $n_4483 = 0, $mul647 = 0, $mul657 = 0, $177 = 0, $189 = 0, $n_5 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $curNode_i = sp | 0;
 $0 = HEAP32[$params + 24 >> 2] | 0;
 if (($0 | 0) > 6) {
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $vertCount = $params + 4 | 0;
 $1 = HEAP32[$vertCount >> 2] | 0;
 if (($1 | 0) > 65534 | ($1 | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $verts = $params | 0;
 if ((HEAP32[$verts >> 2] | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $polyCount = $params + 20 | 0;
 $3 = HEAP32[$polyCount >> 2] | 0;
 if (($3 | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $polys = $params + 8 | 0;
 if ((HEAP32[$polys >> 2] | 0) == 0) {
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $offMeshConCount = $params + 72 | 0;
 $5 = HEAP32[$offMeshConCount >> 2] | 0;
 if (($5 | 0) > 0) {
  $call_i_i = _malloc($5 << 1) | 0;
  if (($call_i_i | 0) == 0) {
   $retval_0 = 0;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$params + 32 >> 2] | 0;
  if (($6 | 0) == 0) {
   label = 9;
  } else {
   $11 = HEAP32[$params + 36 >> 2] | 0;
   if (($11 | 0) == 0) {
    label = 9;
   } else {
    if (($11 | 0) > 0) {
     $i_0553 = 0;
     $hmax_0554 = -3.4028234663852886e+38;
     $hmin_0555 = 3.4028234663852886e+38;
     while (1) {
      $12 = +HEAPF32[$6 + (($i_0553 * 3 | 0) + 1 << 2) >> 2];
      $cond_i = $hmin_0555 < $12 ? $hmin_0555 : $12;
      $cond_i381 = $hmax_0554 > $12 ? $hmax_0554 : $12;
      $inc = $i_0553 + 1 | 0;
      if (($inc | 0) < ($11 | 0)) {
       $i_0553 = $inc;
       $hmax_0554 = $cond_i381;
       $hmin_0555 = $cond_i;
      } else {
       $hmin_2 = $cond_i;
       $hmax_2 = $cond_i381;
       break;
      }
     }
    } else {
     $hmin_2 = 3.4028234663852886e+38;
     $hmax_2 = -3.4028234663852886e+38;
    }
   }
  }
  if ((label | 0) == 9) {
   $7 = HEAP32[$vertCount >> 2] | 0;
   if (($7 | 0) > 0) {
    $8 = HEAP32[$verts >> 2] | 0;
    $9 = +HEAPF32[$params + 96 >> 2];
    $10 = +HEAPF32[$params + 132 >> 2];
    $i31_0546 = 0;
    $hmax_1547 = -3.4028234663852886e+38;
    $hmin_1548 = 3.4028234663852886e+38;
    while (1) {
     $add44 = $9 + $10 * +(HEAPU16[$8 + (($i31_0546 * 3 | 0) + 1 << 1) >> 1] | 0);
     $cond_i383 = $hmin_1548 < $add44 ? $hmin_1548 : $add44;
     $cond_i385 = $hmax_1547 > $add44 ? $hmax_1547 : $add44;
     $inc48 = $i31_0546 + 1 | 0;
     if (($inc48 | 0) < ($7 | 0)) {
      $i31_0546 = $inc48;
      $hmax_1547 = $cond_i385;
      $hmin_1548 = $cond_i383;
     } else {
      $hmin_2 = $cond_i383;
      $hmax_2 = $cond_i385;
      break;
     }
    }
   } else {
    $hmin_2 = 3.4028234663852886e+38;
    $hmax_2 = -3.4028234663852886e+38;
   }
  }
  $14 = +HEAPF32[$params + 124 >> 2];
  $sub = $hmin_2 - $14;
  $add52 = $hmax_2 + $14;
  $15 = +HEAPF32[$params + 92 >> 2];
  $16 = +HEAPF32[$params + 100 >> 2];
  $17 = +HEAPF32[$params + 104 >> 2];
  $18 = +HEAPF32[$params + 112 >> 2];
  L32 : do {
   if ((HEAP32[$offMeshConCount >> 2] | 0) > 0) {
    $offMeshConVerts = $params + 48 | 0;
    $i61_0540 = 0;
    $offMeshConLinkCount_0541 = 0;
    $storedOffMeshConCount_0542 = 0;
    while (1) {
     $mul66 = $i61_0540 << 1;
     $mul68 = $i61_0540 * 6 | 0;
     $20 = HEAP32[$offMeshConVerts >> 2] | 0;
     $add71366 = $mul66 | 1;
     $mul72 = $add71366 * 3 | 0;
     $arrayidx69_val = +HEAPF32[$20 + ($mul68 << 2) >> 2];
     $arrayidx69_idx_val = +HEAPF32[$20 + ($mul68 + 2 << 2) >> 2];
     switch (($arrayidx69_val >= $17 | ($arrayidx69_val < $15 ? 4 : 0) | ($arrayidx69_idx_val < $16 ? 8 : 0) | ($arrayidx69_idx_val >= $18 ? 2 : 0)) & 255 | 0) {
     case 6:
      {
       $21 = 3;
       break;
      }
     case 4:
      {
       $21 = 4;
       break;
      }
     case 1:
      {
       $21 = 0;
       break;
      }
     case 12:
      {
       $21 = 5;
       break;
      }
     case 8:
      {
       $21 = 6;
       break;
      }
     case 9:
      {
       $21 = 7;
       break;
      }
     case 3:
      {
       $21 = 1;
       break;
      }
     case 2:
      {
       $21 = 2;
       break;
      }
     default:
      {
       $21 = -1;
      }
     }
     $arrayidx80 = $call_i_i + $mul66 | 0;
     HEAP8[$arrayidx80 >> 0] = $21;
     $arrayidx74_val = +HEAPF32[$20 + ($mul72 << 2) >> 2];
     $arrayidx74_idx_val = +HEAPF32[$20 + ($mul72 + 2 << 2) >> 2];
     switch (($arrayidx74_val >= $17 | ($arrayidx74_val < $15 ? 4 : 0) | ($arrayidx74_idx_val < $16 ? 8 : 0) | ($arrayidx74_idx_val >= $18 ? 2 : 0)) & 255 | 0) {
     case 2:
      {
       $22 = 2;
       break;
      }
     case 6:
      {
       $22 = 3;
       break;
      }
     case 4:
      {
       $22 = 4;
       break;
      }
     case 1:
      {
       $22 = 0;
       break;
      }
     case 12:
      {
       $22 = 5;
       break;
      }
     case 8:
      {
       $22 = 6;
       break;
      }
     case 9:
      {
       $22 = 7;
       break;
      }
     case 3:
      {
       $22 = 1;
       break;
      }
     default:
      {
       $22 = -1;
      }
     }
     HEAP8[$call_i_i + $add71366 >> 0] = $22;
     if ($21 << 24 >> 24 == -1) {
      $23 = +HEAPF32[$20 + (($mul68 | 1) << 2) >> 2];
      if ($23 < $sub | $23 > $add52) {
       HEAP8[$arrayidx80 >> 0] = 0;
       $24 = 0;
      } else {
       $24 = -1;
      }
     } else {
      $24 = $21;
     }
     $inc112 = $24 << 24 >> 24 == -1 | 0;
     $offMeshConLinkCount_2 = $inc112 + $offMeshConLinkCount_0541 + ($22 << 24 >> 24 == -1) | 0;
     $inc128_storedOffMeshConCount_0 = $inc112 + $storedOffMeshConCount_0542 | 0;
     $inc131 = $i61_0540 + 1 | 0;
     if (($inc131 | 0) < (HEAP32[$offMeshConCount >> 2] | 0)) {
      $i61_0540 = $inc131;
      $offMeshConLinkCount_0541 = $offMeshConLinkCount_2;
      $storedOffMeshConCount_0542 = $inc128_storedOffMeshConCount_0;
     } else {
      $offMeshConLinkCount_0_lcssa = $offMeshConLinkCount_2;
      $storedOffMeshConCount_0_lcssa = $inc128_storedOffMeshConCount_0;
      break L32;
     }
    }
   } else {
    $offMeshConLinkCount_0_lcssa = 0;
    $storedOffMeshConCount_0_lcssa = 0;
   }
  } while (0);
  $offMeshConClass_0 = $call_i_i;
  $storedOffMeshConCount_2 = $storedOffMeshConCount_0_lcssa;
  $offMeshConLinkCount_3 = $offMeshConLinkCount_0_lcssa;
  $27 = HEAP32[$polyCount >> 2] | 0;
  $26 = HEAP32[$vertCount >> 2] | 0;
 } else {
  $offMeshConClass_0 = 0;
  $storedOffMeshConCount_2 = 0;
  $offMeshConLinkCount_3 = 0;
  $27 = $3;
  $26 = $1;
 }
 $add135 = $27 + $storedOffMeshConCount_2 | 0;
 $add138 = $26 + ($storedOffMeshConCount_2 << 1) | 0;
 $cmp142533 = ($27 | 0) > 0;
 if ($cmp142533) {
  $28 = HEAP32[$polys >> 2] | 0;
  $cmp149527 = ($0 | 0) > 0;
  $i139_0534 = 0;
  $portalCount_0535 = 0;
  $edgeCount_0536 = 0;
  while (1) {
   $mul145 = Math_imul($i139_0534 << 1, $0) | 0;
   L66 : do {
    if ($cmp149527) {
     $add158 = $mul145 + $0 | 0;
     $j_0528 = 0;
     $portalCount_1529 = $portalCount_0535;
     $edgeCount_1530 = $edgeCount_0536;
     while (1) {
      if ((HEAP16[$28 + ($j_0528 + $mul145 << 1) >> 1] | 0) == -1) {
       $portalCount_1_lcssa = $portalCount_1529;
       $edgeCount_1_lcssa = $edgeCount_1530;
       break L66;
      }
      $inc157 = $edgeCount_1530 + 1 | 0;
      $30 = HEAP16[$28 + ($add158 + $j_0528 << 1) >> 1] | 0;
      $portalCount_2 = ((($30 & 65535) >>> 15 & 65535 ^ 1 | ($30 & 15) == 15) ^ 1) + $portalCount_1529 | 0;
      $inc175 = $j_0528 + 1 | 0;
      if (($inc175 | 0) < ($0 | 0)) {
       $j_0528 = $inc175;
       $portalCount_1529 = $portalCount_2;
       $edgeCount_1530 = $inc157;
      } else {
       $portalCount_1_lcssa = $portalCount_2;
       $edgeCount_1_lcssa = $inc157;
       break;
      }
     }
    } else {
     $portalCount_1_lcssa = $portalCount_0535;
     $edgeCount_1_lcssa = $edgeCount_0536;
    }
   } while (0);
   $inc178 = $i139_0534 + 1 | 0;
   if (($inc178 | 0) < ($27 | 0)) {
    $i139_0534 = $inc178;
    $portalCount_0535 = $portalCount_1_lcssa;
    $edgeCount_0536 = $edgeCount_1_lcssa;
   } else {
    $portalCount_0_lcssa = $portalCount_1_lcssa;
    $edgeCount_0_lcssa = $edgeCount_1_lcssa;
    break;
   }
  }
 } else {
  $portalCount_0_lcssa = 0;
  $edgeCount_0_lcssa = 0;
 }
 $add183 = ($portalCount_0_lcssa << 1) + ($offMeshConLinkCount_3 << 1) + $edgeCount_0_lcssa | 0;
 $detailMeshes = $params + 28 | 0;
 $33 = HEAP32[$detailMeshes >> 2] | 0;
 if (($33 | 0) == 0) {
  if ($cmp142533) {
   $mul227 = $0 << 1;
   $34 = HEAP32[$polys >> 2] | 0;
   $cmp234510 = ($0 | 0) > 0;
   $i221_0515 = 0;
   $detailTriCount_0516 = 0;
   while (1) {
    $mul228 = Math_imul($mul227, $i221_0515) | 0;
    L78 : do {
     if ($cmp234510) {
      $nv231_0512 = 0;
      while (1) {
       if ((HEAP16[$34 + ($nv231_0512 + $mul228 << 1) >> 1] | 0) == -1) {
        $nv231_0_lcssa = $nv231_0512;
        break L78;
       }
       $inc242 = $nv231_0512 + 1 | 0;
       if (($inc242 | 0) < ($0 | 0)) {
        $nv231_0512 = $inc242;
       } else {
        $nv231_0_lcssa = $inc242;
        break;
       }
      }
     } else {
      $nv231_0_lcssa = 0;
     }
    } while (0);
    $add247 = $detailTriCount_0516 - 2 + $nv231_0_lcssa | 0;
    $inc249 = $i221_0515 + 1 | 0;
    if (($inc249 | 0) < ($27 | 0)) {
     $i221_0515 = $inc249;
     $detailTriCount_0516 = $add247;
    } else {
     $uniqueDetailVertCount_1 = 0;
     $detailTriCount_1 = $add247;
     break;
    }
   }
  } else {
   $uniqueDetailVertCount_1 = 0;
   $detailTriCount_1 = 0;
  }
 } else {
  $35 = HEAP32[$params + 44 >> 2] | 0;
  if ($cmp142533) {
   $mul193 = $0 << 1;
   $36 = HEAP32[$polys >> 2] | 0;
   $cmp203518 = ($0 | 0) > 0;
   $i187_0524 = 0;
   $uniqueDetailVertCount_0525 = 0;
   while (1) {
    $mul194 = Math_imul($mul193, $i187_0524) | 0;
    $37 = HEAP32[$33 + (($i187_0524 << 2 | 1) << 2) >> 2] | 0;
    L87 : do {
     if ($cmp203518) {
      $nv_0520 = 0;
      while (1) {
       if ((HEAP16[$36 + ($nv_0520 + $mul194 << 1) >> 1] | 0) == -1) {
        $nv_0_lcssa = $nv_0520;
        break L87;
       }
       $inc211 = $nv_0520 + 1 | 0;
       if (($inc211 | 0) < ($0 | 0)) {
        $nv_0520 = $inc211;
       } else {
        $nv_0_lcssa = $inc211;
        break;
       }
      }
     } else {
      $nv_0_lcssa = 0;
     }
    } while (0);
    $add216 = $37 + $uniqueDetailVertCount_0525 - $nv_0_lcssa | 0;
    $inc218 = $i187_0524 + 1 | 0;
    if (($inc218 | 0) < ($27 | 0)) {
     $i187_0524 = $inc218;
     $uniqueDetailVertCount_0525 = $add216;
    } else {
     $uniqueDetailVertCount_1 = $add216;
     $detailTriCount_1 = $35;
     break;
    }
   }
  } else {
   $uniqueDetailVertCount_1 = 0;
   $detailTriCount_1 = $35;
  }
 }
 $mul253 = $add138 * 12 | 0;
 $mul255 = $add135 << 5;
 $mul257 = $add183 * 12 | 0;
 $mul260 = $27 * 12 | 0;
 $mul262 = $uniqueDetailVertCount_1 * 12 | 0;
 $mul264 = $detailTriCount_1 << 2;
 $buildBvTree = $params + 136 | 0;
 $_mul269 = (HEAP8[$buildBvTree >> 0] | 0) == 0 ? 0 : $27 << 5;
 $add280 = ($storedOffMeshConCount_2 * 36 | 0) + 100 + $mul255 + $mul253 + $mul257 + $mul264 + $mul262 + $mul260 + $_mul269 | 0;
 $call_i_i1 = _malloc($add280) | 0;
 if (($call_i_i1 | 0) == 0) {
  if (($offMeshConClass_0 | 0) == 0) {
   $retval_0 = 0;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  _free($offMeshConClass_0);
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _memset($call_i_i1 | 0, 0, $add280 | 0) | 0;
 $41 = $call_i_i1 + 100 | 0;
 $add_ptr_sum = $mul253 + 100 | 0;
 $42 = $call_i_i1 + $add_ptr_sum | 0;
 $add_ptr287_sum = $add_ptr_sum + $mul255 + $mul257 | 0;
 $43 = $call_i_i1 + $add_ptr287_sum | 0;
 $add_ptr288_sum = $mul260 + $add_ptr287_sum | 0;
 $44 = $call_i_i1 + $add_ptr288_sum | 0;
 $add_ptr289_sum = $add_ptr288_sum + $mul262 | 0;
 $add_ptr290 = $call_i_i1 + $add_ptr289_sum | 0;
 $add_ptr290_sum = $add_ptr289_sum + $mul264 | 0;
 $45 = $call_i_i1 + $add_ptr290_sum | 0;
 $46 = $call_i_i1 + ($add_ptr290_sum + $_mul269) | 0;
 HEAP32[$call_i_i1 >> 2] = 1145979222;
 HEAP32[$call_i_i1 + 4 >> 2] = 7;
 HEAP32[$call_i_i1 + 8 >> 2] = HEAP32[$params + 80 >> 2];
 HEAP32[$call_i_i1 + 12 >> 2] = HEAP32[$params + 84 >> 2];
 HEAP32[$call_i_i1 + 16 >> 2] = HEAP32[$params + 88 >> 2];
 HEAP32[$call_i_i1 + 20 >> 2] = HEAP32[$params + 76 >> 2];
 HEAP32[$call_i_i1 + 24 >> 2] = $add135;
 HEAP32[$call_i_i1 + 28 >> 2] = $add138;
 HEAP32[$call_i_i1 + 32 >> 2] = $add183;
 $arraydecay301 = $params + 92 | 0;
 HEAPF32[$call_i_i1 + 72 >> 2] = +HEAPF32[$arraydecay301 >> 2];
 $arrayidx2_i438 = $params + 96 | 0;
 HEAPF32[$call_i_i1 + 76 >> 2] = +HEAPF32[$arrayidx2_i438 >> 2];
 $arrayidx4_i440 = $params + 100 | 0;
 HEAPF32[$call_i_i1 + 80 >> 2] = +HEAPF32[$arrayidx4_i440 >> 2];
 HEAPF32[$call_i_i1 + 84 >> 2] = +HEAPF32[$params + 104 >> 2];
 HEAPF32[$call_i_i1 + 88 >> 2] = +HEAPF32[$params + 108 >> 2];
 HEAPF32[$call_i_i1 + 92 >> 2] = +HEAPF32[$params + 112 >> 2];
 $69 = HEAP32[$polyCount >> 2] | 0;
 HEAP32[$call_i_i1 + 36 >> 2] = $69;
 HEAP32[$call_i_i1 + 40 >> 2] = $uniqueDetailVertCount_1;
 HEAP32[$call_i_i1 + 44 >> 2] = $detailTriCount_1;
 $cs = $params + 128 | 0;
 $73 = +HEAPF32[$cs >> 2];
 HEAPF32[$call_i_i1 + 96 >> 2] = 1.0 / $73;
 HEAP32[$call_i_i1 + 56 >> 2] = $69;
 HEAPF32[$call_i_i1 + 60 >> 2] = +HEAPF32[$params + 116 >> 2];
 HEAPF32[$call_i_i1 + 64 >> 2] = +HEAPF32[$params + 120 >> 2];
 HEAPF32[$call_i_i1 + 68 >> 2] = +HEAPF32[$params + 124 >> 2];
 HEAP32[$call_i_i1 + 52 >> 2] = $storedOffMeshConCount_2;
 HEAP32[$call_i_i1 + 48 >> 2] = (HEAP8[$buildBvTree >> 0] | 0) == 0 ? 0 : $69 << 1;
 $85 = HEAP32[$vertCount >> 2] | 0;
 L100 : do {
  if (($85 | 0) > 0) {
   $86 = HEAP32[$verts >> 2] | 0;
   $ch349 = $params + 132 | 0;
   $i324_0509 = 0;
   $88 = $73;
   while (1) {
    $mul330 = $i324_0509 * 3 | 0;
    HEAPF32[$41 + ($mul330 << 2) >> 2] = +HEAPF32[$arraydecay301 >> 2] + $88 * +(HEAPU16[$86 + ($mul330 << 1) >> 1] | 0);
    $arrayidx332_sum = $mul330 + 1 | 0;
    HEAPF32[$41 + ($arrayidx332_sum << 2) >> 2] = +HEAPF32[$arrayidx2_i438 >> 2] + +HEAPF32[$ch349 >> 2] * +(HEAPU16[$86 + ($arrayidx332_sum << 1) >> 1] | 0);
    $arrayidx332_sum362 = $mul330 + 2 | 0;
    HEAPF32[$41 + ($arrayidx332_sum362 << 2) >> 2] = +HEAPF32[$arrayidx4_i440 >> 2] + +HEAPF32[$cs >> 2] * +(HEAPU16[$86 + ($arrayidx332_sum362 << 1) >> 1] | 0);
    $inc363 = $i324_0509 + 1 | 0;
    if (($inc363 | 0) >= ($85 | 0)) {
     break L100;
    }
    $i324_0509 = $inc363;
    $88 = +HEAPF32[$cs >> 2];
   }
  }
 } while (0);
 $87 = HEAP32[$offMeshConCount >> 2] | 0;
 $cmp368505 = ($87 | 0) > 0;
 if ($cmp368505) {
  $offMeshConVerts378 = $params + 48 | 0;
  $n_0506 = 0;
  $i365_0507 = 0;
  while (1) {
   if ((HEAP8[$offMeshConClass_0 + ($i365_0507 << 1) >> 0] | 0) == -1) {
    $mul377 = $i365_0507 * 6 | 0;
    $98 = HEAP32[$offMeshConVerts378 >> 2] | 0;
    $mul383 = (($n_0506 << 1) + $85 | 0) * 3 | 0;
    HEAPF32[$41 + ($mul383 << 2) >> 2] = +HEAPF32[$98 + ($mul377 << 2) >> 2];
    HEAPF32[$41 + ($mul383 + 1 << 2) >> 2] = +HEAPF32[$98 + (($mul377 | 1) << 2) >> 2];
    HEAPF32[$41 + ($mul383 + 2 << 2) >> 2] = +HEAPF32[$98 + ($mul377 + 2 << 2) >> 2];
    HEAPF32[$41 + ($mul383 + 3 << 2) >> 2] = +HEAPF32[$98 + ($mul377 + 3 << 2) >> 2];
    HEAPF32[$41 + ($mul383 + 4 << 2) >> 2] = +HEAPF32[$98 + ($mul377 + 4 << 2) >> 2];
    HEAPF32[$41 + ($mul383 + 5 << 2) >> 2] = +HEAPF32[$98 + ($mul377 + 5 << 2) >> 2];
    $n_1 = $n_0506 + 1 | 0;
   } else {
    $n_1 = $n_0506;
   }
   $i365_0507 = $i365_0507 + 1 | 0;
   if (($i365_0507 | 0) >= ($87 | 0)) {
    break;
   } else {
    $n_0506 = $n_1;
   }
  }
 }
 $cmp398500 = ($69 | 0) > 0;
 if ($cmp398500) {
  $cmp407498 = ($0 | 0) > 0;
  $mul477 = $0 << 1;
  $_pre566 = HEAP32[$params + 12 >> 2] | 0;
  $_pre567 = HEAP32[$params + 16 >> 2] | 0;
  $src_0501 = HEAP32[$polys >> 2] | 0;
  $i395_0503 = 0;
  while (1) {
   $vertCount402 = $42 + ($i395_0503 << 5) + 30 | 0;
   HEAP8[$vertCount402 >> 0] = 0;
   HEAP16[$42 + ($i395_0503 << 5) + 28 >> 1] = HEAP16[$_pre566 + ($i395_0503 << 1) >> 1] | 0;
   HEAP8[$42 + ($i395_0503 << 5) + 31 >> 0] = HEAP8[$_pre567 + $i395_0503 >> 0] & 63;
   L118 : do {
    if ($cmp407498) {
     $j405_0499 = 0;
     do {
      $108 = HEAP16[$src_0501 + ($j405_0499 << 1) >> 1] | 0;
      if ($108 << 16 >> 16 == -1) {
       break L118;
      }
      HEAP16[$42 + ($i395_0503 << 5) + 4 + ($j405_0499 << 1) >> 1] = $108;
      $109 = HEAP16[$src_0501 + ($j405_0499 + $0 << 1) >> 1] | 0;
      L122 : do {
       if ($109 << 16 >> 16 > -1) {
        HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = $109 + 1;
       } else {
        switch ($109 & 15) {
        case 15:
         {
          HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = 0;
          break L122;
          break;
         }
        case 0:
         {
          HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = -32764;
          break L122;
          break;
         }
        case 1:
         {
          HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = -32766;
          break L122;
          break;
         }
        case 2:
         {
          HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = -32768;
          break L122;
          break;
         }
        case 3:
         {
          HEAP16[$42 + ($i395_0503 << 5) + 16 + ($j405_0499 << 1) >> 1] = -32762;
          break L122;
          break;
         }
        default:
         {
          break L122;
         }
        }
       }
      } while (0);
      HEAP8[$vertCount402 >> 0] = (HEAP8[$vertCount402 >> 0] | 0) + 1;
      $j405_0499 = $j405_0499 + 1 | 0;
     } while (($j405_0499 | 0) < ($0 | 0));
    }
   } while (0);
   $i395_0503 = $i395_0503 + 1 | 0;
   if (($i395_0503 | 0) >= ($69 | 0)) {
    break;
   } else {
    $src_0501 = $src_0501 + ($mul477 << 1) | 0;
   }
  }
 }
 if ($cmp368505) {
  $offMeshConFlags = $params + 56 | 0;
  $offMeshConAreas = $params + 60 | 0;
  $n_2496 = 0;
  $i482_0497 = 0;
  while (1) {
   if ((HEAP8[$offMeshConClass_0 + ($i482_0497 << 1) >> 0] | 0) == -1) {
    $add494 = $n_2496 + $69 | 0;
    HEAP8[$42 + ($add494 << 5) + 30 >> 0] = 2;
    $add498 = ($n_2496 << 1) + $85 | 0;
    HEAP16[$42 + ($add494 << 5) + 4 >> 1] = $add498;
    HEAP16[$42 + ($add494 << 5) + 6 >> 1] = $add498 + 1;
    HEAP16[$42 + ($add494 << 5) + 28 >> 1] = HEAP16[(HEAP32[$offMeshConFlags >> 2] | 0) + ($i482_0497 << 1) >> 1] | 0;
    HEAP8[$42 + ($add494 << 5) + 31 >> 0] = HEAP8[(HEAP32[$offMeshConAreas >> 2] | 0) + $i482_0497 >> 0] & 63 | 64;
    $n_3 = $n_2496 + 1 | 0;
   } else {
    $n_3 = $n_2496;
   }
   $i482_0497 = $i482_0497 + 1 | 0;
   if (($i482_0497 | 0) >= ($87 | 0)) {
    break;
   } else {
    $n_2496 = $n_3;
   }
  }
 }
 $116 = HEAP32[$detailMeshes >> 2] | 0;
 if (($116 | 0) == 0) {
  if ($cmp398500) {
   $tbase_0490 = 0;
   $i577_0491 = 0;
   $130 = $69;
   while (1) {
    $131 = HEAP8[$42 + ($i577_0491 << 5) + 30 >> 0] | 0;
    $conv587 = $131 & 255;
    HEAP32[$43 + ($i577_0491 * 12 | 0) >> 2] = 0;
    HEAP8[$43 + ($i577_0491 * 12 | 0) + 8 >> 0] = 0;
    HEAP32[$43 + ($i577_0491 * 12 | 0) + 4 >> 2] = $tbase_0490;
    HEAP8[$43 + ($i577_0491 * 12 | 0) + 9 >> 0] = $131 - 2;
    if (($131 & 255) >>> 0 > 2 >>> 0) {
     $sub613 = $conv587 - 1 | 0;
     $smax = $conv587 >>> 0 > 3 >>> 0 ? $conv587 : 3;
     $tbase_1487 = $tbase_0490;
     $j594_0488 = 2;
     while (1) {
      $add_ptr290_sum356 = ($tbase_1487 << 2) + $add_ptr289_sum | 0;
      HEAP8[$call_i_i1 + $add_ptr290_sum356 >> 0] = 0;
      HEAP8[$call_i_i1 + ($add_ptr290_sum356 + 1) >> 0] = $j594_0488 + 255;
      HEAP8[$call_i_i1 + ($add_ptr290_sum356 + 2) >> 0] = $j594_0488;
      $_ = ($j594_0488 | 0) == 2 ? 5 : 4;
      HEAP8[$call_i_i1 + ($add_ptr290_sum356 + 3) >> 0] = ($j594_0488 | 0) == ($sub613 | 0) ? $_ | 16 : $_;
      $j594_0488 = $j594_0488 + 1 | 0;
      if (($j594_0488 | 0) >= ($conv587 | 0)) {
       break;
      } else {
       $tbase_1487 = $tbase_1487 + 1 | 0;
      }
     }
     $tbase_1_lcssa = $tbase_0490 - 2 + $smax | 0;
     $135 = HEAP32[$polyCount >> 2] | 0;
    } else {
     $tbase_1_lcssa = $tbase_0490;
     $135 = $130;
    }
    $i577_0491 = $i577_0491 + 1 | 0;
    if (($i577_0491 | 0) >= ($135 | 0)) {
     break;
    } else {
     $tbase_0490 = $tbase_1_lcssa;
     $130 = $135;
    }
   }
  }
 } else {
  L153 : do {
   if ($cmp398500) {
    $detailVerts560 = $params + 32 | 0;
    $vbase_0493 = 0;
    $i520_0494 = 0;
    $118 = $116;
    $117 = $69;
    while (1) {
     $mul526 = $i520_0494 << 2;
     $119 = HEAP32[$118 + ($mul526 << 2) >> 2] | 0;
     $120 = HEAP32[$118 + (($mul526 | 1) << 2) >> 2] | 0;
     $conv538 = HEAPU8[$42 + ($i520_0494 << 5) + 30 >> 0] | 0;
     $conv539 = $vbase_0493 & 65535;
     HEAP32[$43 + ($i520_0494 * 12 | 0) >> 2] = $conv539;
     $sub540 = $120 - $conv538 | 0;
     HEAP8[$43 + ($i520_0494 * 12 | 0) + 8 >> 0] = $sub540;
     HEAP32[$43 + ($i520_0494 * 12 | 0) + 4 >> 2] = HEAP32[$118 + (($mul526 | 2) << 2) >> 2];
     HEAP8[$43 + ($i520_0494 * 12 | 0) + 9 >> 0] = HEAP32[$118 + (($mul526 | 3) << 2) >> 2];
     if (($120 | 0) == ($conv538 | 0)) {
      $vbase_1 = $vbase_0493;
      $127 = $117;
     } else {
      _memcpy($44 + (($conv539 * 3 | 0) << 2) | 0, (HEAP32[$detailVerts560 >> 2] | 0) + ((($conv538 + $119 | 0) * 3 | 0) << 2) | 0, $sub540 * 12 | 0) | 0;
      $vbase_1 = $sub540 + $conv539 & 65535;
      $127 = HEAP32[$polyCount >> 2] | 0;
     }
     $inc572 = $i520_0494 + 1 | 0;
     if (($inc572 | 0) >= ($127 | 0)) {
      break L153;
     }
     $vbase_0493 = $vbase_1;
     $i520_0494 = $inc572;
     $118 = HEAP32[$detailMeshes >> 2] | 0;
     $117 = $127;
    }
   }
  } while (0);
  _memcpy($add_ptr290 | 0, HEAP32[$params + 40 >> 2] | 0, HEAP32[$params + 44 >> 2] << 2) | 0;
 }
 do {
  if ((HEAP8[$buildBvTree >> 0] | 0) != 0) {
   $137 = HEAP32[$verts >> 2] | 0;
   $138 = HEAP32[$polys >> 2] | 0;
   $139 = HEAP32[$polyCount >> 2] | 0;
   $140 = +HEAPF32[$cs >> 2];
   $141 = +HEAPF32[$params + 132 >> 2];
   $call_i_i2 = _malloc($139 << 4) | 0;
   $143 = $call_i_i2;
   do {
    if (($139 | 0) > 0) {
     $mul3_i = $0 << 1;
     if (($0 | 0) > 1) {
      $i_04_us_i = 0;
     } else {
      $i_04_i = 0;
      do {
       HEAP32[$143 + ($i_04_i << 4) + 12 >> 2] = $i_04_i;
       $arrayidx5_i378 = $138 + ((Math_imul($i_04_i, $mul3_i) | 0) << 1) | 0;
       $169 = HEAP16[$137 + (((HEAPU16[$arrayidx5_i378 >> 1] | 0) * 3 | 0) << 1) >> 1] | 0;
       HEAP16[$143 + ($i_04_i << 4) + 6 >> 1] = $169;
       HEAP16[$143 + ($i_04_i << 4) >> 1] = $169;
       $171 = HEAP16[$137 + (((HEAPU16[$arrayidx5_i378 >> 1] | 0) * 3 | 0) + 1 << 1) >> 1] | 0;
       $arrayidx17_i = $143 + ($i_04_i << 4) + 8 | 0;
       HEAP16[$arrayidx17_i >> 1] = $171;
       $arrayidx19_i = $143 + ($i_04_i << 4) + 2 | 0;
       HEAP16[$arrayidx19_i >> 1] = $171;
       $173 = HEAP16[$137 + (((HEAPU16[$arrayidx5_i378 >> 1] | 0) * 3 | 0) + 2 << 1) >> 1] | 0;
       HEAP16[$143 + ($i_04_i << 4) + 10 >> 1] = $173;
       HEAP16[$143 + ($i_04_i << 4) + 4 >> 1] = $173;
       $conv110_i = ~~+Math_floor($141 * +(($171 & 65535) >>> 0) / $140);
       HEAP16[$arrayidx19_i >> 1] = $conv110_i;
       $conv119_i = ~~+Math_ceil($141 * +((HEAPU16[$arrayidx17_i >> 1] | 0) >>> 0) / $140);
       HEAP16[$arrayidx17_i >> 1] = $conv119_i;
       $i_04_i = $i_04_i + 1 | 0;
      } while (($i_04_i | 0) < ($139 | 0));
      HEAP32[$curNode_i >> 2] = 0;
      __ZL9subdivideP6BVItemiiiRiP8dtBVNode($143, 0, $139, $curNode_i, $45);
      break;
     }
     while (1) {
      HEAP32[$143 + ($i_04_us_i << 4) + 12 >> 2] = $i_04_us_i;
      $mul4_us_i = Math_imul($i_04_us_i, $mul3_i) | 0;
      $arrayidx5_us_i = $138 + ($mul4_us_i << 1) | 0;
      $163 = HEAP16[$137 + (((HEAPU16[$arrayidx5_us_i >> 1] | 0) * 3 | 0) << 1) >> 1] | 0;
      $arrayidx9_us_i = $143 + ($i_04_us_i << 4) + 6 | 0;
      HEAP16[$arrayidx9_us_i >> 1] = $163;
      $arrayidx10_us_i = $143 + ($i_04_us_i << 4) | 0;
      HEAP16[$arrayidx10_us_i >> 1] = $163;
      $165 = HEAP16[$137 + (((HEAPU16[$arrayidx5_us_i >> 1] | 0) * 3 | 0) + 1 << 1) >> 1] | 0;
      $arrayidx17_us_i = $143 + ($i_04_us_i << 4) + 8 | 0;
      HEAP16[$arrayidx17_us_i >> 1] = $165;
      $arrayidx19_us_i = $143 + ($i_04_us_i << 4) + 2 | 0;
      HEAP16[$arrayidx19_us_i >> 1] = $165;
      $167 = HEAP16[$137 + (((HEAPU16[$arrayidx5_us_i >> 1] | 0) * 3 | 0) + 2 << 1) >> 1] | 0;
      $arrayidx26_us_i = $143 + ($i_04_us_i << 4) + 10 | 0;
      HEAP16[$arrayidx26_us_i >> 1] = $167;
      $arrayidx28_us_i = $143 + ($i_04_us_i << 4) + 4 | 0;
      HEAP16[$arrayidx28_us_i >> 1] = $167;
      $j_02_us_i = 1;
      $149 = $163;
      $148 = $165;
      $147 = $167;
      $146 = $163;
      $145 = $165;
      $144 = $167;
      while (1) {
       $150 = HEAP16[$138 + ($j_02_us_i + $mul4_us_i << 1) >> 1] | 0;
       if ($150 << 16 >> 16 == -1) {
        $160 = $148;
        break;
       }
       $mul38_us_i = ($150 & 65535) * 3 | 0;
       $151 = HEAP16[$137 + ($mul38_us_i << 1) >> 1] | 0;
       $152 = HEAP16[$137 + ($mul38_us_i + 1 << 1) >> 1] | 0;
       $153 = HEAP16[$137 + ($mul38_us_i + 2 << 1) >> 1] | 0;
       if (($151 & 65535) >>> 0 < ($149 & 65535) >>> 0) {
        HEAP16[$arrayidx10_us_i >> 1] = $151;
        $154 = $151;
       } else {
        $154 = $149;
       }
       if (($152 & 65535) >>> 0 < ($148 & 65535) >>> 0) {
        HEAP16[$arrayidx19_us_i >> 1] = $152;
        $155 = $152;
       } else {
        $155 = $148;
       }
       if (($153 & 65535) >>> 0 < ($147 & 65535) >>> 0) {
        HEAP16[$arrayidx28_us_i >> 1] = $153;
        $156 = $153;
       } else {
        $156 = $147;
       }
       if (($151 & 65535) >>> 0 > ($146 & 65535) >>> 0) {
        HEAP16[$arrayidx9_us_i >> 1] = $151;
        $157 = $151;
       } else {
        $157 = $146;
       }
       if (($152 & 65535) >>> 0 > ($145 & 65535) >>> 0) {
        HEAP16[$arrayidx17_us_i >> 1] = $152;
        $158 = $152;
       } else {
        $158 = $145;
       }
       if (($153 & 65535) >>> 0 > ($144 & 65535) >>> 0) {
        HEAP16[$arrayidx26_us_i >> 1] = $153;
        $159 = $153;
       } else {
        $159 = $144;
       }
       $inc_us_i = $j_02_us_i + 1 | 0;
       if (($inc_us_i | 0) < ($0 | 0)) {
        $j_02_us_i = $inc_us_i;
        $149 = $154;
        $148 = $155;
        $147 = $156;
        $146 = $157;
        $145 = $158;
        $144 = $159;
       } else {
        $160 = $155;
        break;
       }
      }
      $conv110_us_i = ~~+Math_floor($141 * +(($160 & 65535) >>> 0) / $140);
      HEAP16[$arrayidx19_us_i >> 1] = $conv110_us_i;
      $conv119_us_i = ~~+Math_ceil($141 * +((HEAPU16[$arrayidx17_us_i >> 1] | 0) >>> 0) / $140);
      HEAP16[$arrayidx17_us_i >> 1] = $conv119_us_i;
      $inc123_us_i = $i_04_us_i + 1 | 0;
      if (($inc123_us_i | 0) < ($139 | 0)) {
       $i_04_us_i = $inc123_us_i;
      } else {
       label = 126;
       break;
      }
     }
    } else {
     label = 126;
    }
   } while (0);
   if ((label | 0) == 126) {
    HEAP32[$curNode_i >> 2] = 0;
    __ZL9subdivideP6BVItemiiiRiP8dtBVNode($143, 0, $139, $curNode_i, $45);
    if (($call_i_i2 | 0) == 0) {
     break;
    }
   }
   _free($call_i_i2);
  }
 } while (0);
 $175 = HEAP32[$offMeshConCount >> 2] | 0;
 if (($175 | 0) > 0) {
  $offMeshConVerts658 = $params + 48 | 0;
  $offMeshConRad = $params + 52 | 0;
  $offMeshConDir = $params + 64 | 0;
  $offMeshConUserID = $params + 68 | 0;
  $n_4483 = 0;
  $i642_0484 = 0;
  while (1) {
   $mul647 = $i642_0484 << 1;
   if ((HEAP8[$offMeshConClass_0 + $mul647 >> 0] | 0) == -1) {
    HEAP16[$46 + ($n_4483 * 36 | 0) + 28 >> 1] = $n_4483 + $69;
    $mul657 = $i642_0484 * 6 | 0;
    $177 = HEAP32[$offMeshConVerts658 >> 2] | 0;
    HEAPF32[$46 + ($n_4483 * 36 | 0) >> 2] = +HEAPF32[$177 + ($mul657 << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 4 >> 2] = +HEAPF32[$177 + (($mul657 | 1) << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 8 >> 2] = +HEAPF32[$177 + ($mul657 + 2 << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 12 >> 2] = +HEAPF32[$177 + ($mul657 + 3 << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 16 >> 2] = +HEAPF32[$177 + ($mul657 + 4 << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 20 >> 2] = +HEAPF32[$177 + ($mul657 + 5 << 2) >> 2];
    HEAPF32[$46 + ($n_4483 * 36 | 0) + 24 >> 2] = +HEAPF32[(HEAP32[$offMeshConRad >> 2] | 0) + ($i642_0484 << 2) >> 2];
    HEAP8[$46 + ($n_4483 * 36 | 0) + 30 >> 0] = (HEAP8[(HEAP32[$offMeshConDir >> 2] | 0) + $i642_0484 >> 0] | 0) != 0 | 0;
    HEAP8[$46 + ($n_4483 * 36 | 0) + 31 >> 0] = HEAP8[$offMeshConClass_0 + ($mul647 | 1) >> 0] | 0;
    $189 = HEAP32[$offMeshConUserID >> 2] | 0;
    if (($189 | 0) != 0) {
     HEAP32[$46 + ($n_4483 * 36 | 0) + 32 >> 2] = HEAP32[$189 + ($i642_0484 << 2) >> 2];
    }
    $n_5 = $n_4483 + 1 | 0;
   } else {
    $n_5 = $n_4483;
   }
   $i642_0484 = $i642_0484 + 1 | 0;
   if (($i642_0484 | 0) >= ($175 | 0)) {
    break;
   } else {
    $n_4483 = $n_5;
   }
  }
 }
 if (($offMeshConClass_0 | 0) != 0) {
  _free($offMeshConClass_0);
 }
 HEAP32[$outData >> 2] = $call_i_i1;
 HEAP32[$outDataSize >> 2] = $add280;
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z14rcBuildRegionsP9rcContextR20rcCompactHeightfieldiii($ctx, $chf, $borderSize, $minRegionArea, $mergeRegionArea) {
 $ctx = $ctx | 0;
 $chf = $chf | 0;
 $borderSize = $borderSize | 0;
 $minRegionArea = $minRegionArea | 0;
 $mergeRegionArea = $mergeRegionArea | 0;
 var $stack = 0, $m_timerEnabled_i = 0, $width = 0, $3 = 0, $4 = 0, $spanCount = 0, $call_i_i = 0, $6 = 0, $m_data_i = 0, $m_size_i = 0, $m_cap_i = 0, $call_i1_i = 0, $15 = 0, $18 = 0, $call_i1_i24 = 0, $_pre281 = 0, $add_ptr = 0, $mul19 = 0, $add_ptr20 = 0, $add_ptr25 = 0, $and = 0, $regionId_0_ph = 0, $23 = 0, $cmp74366 = 0, $cmp76359 = 0, $cells = 0, $dist = 0, $areas = 0, $spans_i = 0, $cond_i = 0, $cond_i110 = 0, $24 = 0, $areas_i = 0, $_pre419_pre = 0, $x_015_us_i = 0, $bf_load_us_i = 0, $bf_clear_us_i = 0, $bf_lshr_us_i = 0, $add7_us_i = 0, $_pre420 = 0, $i_013_us_i = 0, $y_017_us_i = 0, $mul_us_i = 0, $_pre = 0, $sub330 = 0, $inc18_us_i120 = 0, $x_015_us_i123 = 0, $bf_load_us_i126 = 0, $bf_clear_us_i127 = 0, $bf_lshr_us_i128 = 0, $add7_us_i129 = 0, $_pre418 = 0, $i_013_us_i135 = 0, $y_017_us_i144 = 0, $mul_us_i145 = 0, $29 = 0, $areas_i152 = 0, $_pre421_pre = 0, $x_015_us_i157 = 0, $bf_load_us_i160 = 0, $bf_clear_us_i161 = 0, $bf_lshr_us_i162 = 0, $add7_us_i163 = 0, $_pre422 = 0, $i_013_us_i169 = 0, $y_017_us_i178 = 0, $mul_us_i179 = 0, $x_015_us_i197 = 0, $bf_load_us_i200 = 0, $bf_clear_us_i201 = 0, $bf_lshr_us_i202 = 0, $add7_us_i203 = 0, $_pre424 = 0, $i_013_us_i209 = 0, $y_017_us_i218 = 0, $mul_us_i219 = 0, $regionId_0394 = 0, $level_0393 = 0, $add_ptr25321392 = 0, $add_ptr20323391 = 0, $add_ptr325390 = 0, $buf_sroa_0_0_load315327389 = 0, $sub62 = 0, $sub62_ = 0, $cmp67 = 0, $buf_sroa_0_0_load315327_add_ptr20323 = 0, $add_ptr325_add_ptr25321 = 0, $add_ptr20323_buf_sroa_0_0_load315327 = 0, $add_ptr25321_add_ptr325 = 0, $phitmp_i_ = 0, $y_0368 = 0, $regionId_1367 = 0, $mul78 = 0, $x_0361 = 0, $regionId_2360 = 0, $bf_load = 0, $bf_clear = 0, $bf_lshr = 0, $add83 = 0, $i_0356 = 0, $regionId_3355 = 0, $arrayidx91 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $mul_i51 = 0, $call_i1_i57 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $mul_i81 = 0, $_lcssa_i85 = 0, $call_i1_i87 = 0, $59 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $add_i79_i = 0, $67 = 0, $68 = 0, $_lcssa_i116 = 0, $call_i1_i118 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $76 = 0, $add_i84_i = 0, $77 = 0, $78 = 0, $_lcssa_i146 = 0, $call_i1_i148 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, $86 = 0, $inc79_i = 0, $87 = 0, $88 = 0, $89 = 0, $count_0_ph173_i = 0, $90 = 0, $dec_i_i = 0, $91 = 0, $dec_i104_i = 0, $92 = 0, $dec_i116_i = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $bf_load_i157_i = 0, $bf_clear_i158_i = 0, $ar_0164_i = 0, $dir_0163_i = 0, $and_i160_i = 0, $add_i = 0, $add15_i = 0, $add16_i = 0, $100 = 0, $add19_i = 0, $102 = 0, $104 = 0, $ar_1_i = 0, $and40_i = 0, $and_i144_i = 0, $108 = 0, $add55_i = 0, $110 = 0, $ar_2_i = 0, $bf_load_i127_i = 0, $111 = 0, $dir80_0165_i = 0, $and_i130_i = 0, $add89_i = 0, $add92_i = 0, $add95_i = 0, $add101_i = 0, $arrayidx114_i = 0, $121 = 0, $add_i110_i = 0, $122 = 0, $123 = 0, $_lcssa_i176 = 0, $call_i1_i178 = 0, $124 = 0, $125 = 0, $128 = 0, $130 = 0, $131 = 0, $add_i98_i = 0, $132 = 0, $133 = 0, $_lcssa_i206 = 0, $call_i1_i208 = 0, $134 = 0, $135 = 0, $138 = 0, $140 = 0, $141 = 0, $add_i90_i = 0, $142 = 0, $143 = 0, $_lcssa_i236 = 0, $call_i1_i238 = 0, $144 = 0, $145 = 0, $148 = 0, $150 = 0, $151 = 0, $inc123_i = 0, $count_0_ph171_i = 0, $regionId_4 = 0, $inc105 = 0, $regionId_3_lcssa = 0, $inc107 = 0, $regionId_2_lcssa = 0, $inc110 = 0, $regionId_1_lcssa = 0, $regionId_0_lcssa = 0, $add_ptr25321_lcssa = 0, $add_ptr20323_lcssa = 0, $add_ptr325_lcssa = 0, $buf_sroa_0_0_load315327_lcssa = 0, $cmp115 = 0, $buf_sroa_0_0_load315327_add_ptr20323336 = 0, $155 = 0, $maxRegions = 0, $161 = 0, $162 = 0, $i128_0338 = 0, $retval_0 = 0, $167 = 0, $retval_1276 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $stack = sp | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 20);
 }
 $width = $chf | 0;
 $3 = HEAP32[$width >> 2] | 0;
 $4 = HEAP32[$chf + 4 >> 2] | 0;
 $spanCount = $chf + 8 | 0;
 $call_i_i = _malloc(HEAP32[$spanCount >> 2] << 3) | 0;
 $6 = $call_i_i;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 4632, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$spanCount >> 2] << 2, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_1276 = 0;
  STACKTOP = sp;
  return $retval_1276 | 0;
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 21);
 }
 $m_data_i = $stack | 0;
 HEAP32[$m_data_i >> 2] = 0;
 $m_size_i = $stack + 4 | 0;
 HEAP32[$m_size_i >> 2] = 0;
 $m_cap_i = $stack + 8 | 0;
 HEAP32[$m_cap_i >> 2] = 1024;
 $call_i1_i = _malloc(4096) | 0;
 $15 = HEAP32[$m_size_i >> 2] | 0;
 if (($15 | 0) != 0 & ($call_i1_i | 0) != 0) {
  _memcpy($call_i1_i | 0, HEAP32[$m_data_i >> 2] | 0, $15 << 2) | 0;
 }
 $18 = HEAP32[$m_data_i >> 2] | 0;
 if (($18 | 0) != 0) {
  _free($18);
 }
 HEAP32[$m_data_i >> 2] = $call_i1_i;
 HEAP32[$m_size_i >> 2] = 1024;
 $call_i1_i24 = _malloc(4096) | 0;
 $_pre281 = HEAP32[$spanCount >> 2] | 0;
 $add_ptr = $6 + ($_pre281 << 1) | 0;
 $mul19 = $_pre281 << 1;
 $add_ptr20 = $6 + ($mul19 << 1) | 0;
 $add_ptr25 = $6 + (($_pre281 * 3 | 0) << 1) | 0;
 _memset($call_i_i | 0, 0, $mul19 | 0) | 0;
 _memset($add_ptr | 0, 0, HEAP32[$spanCount >> 2] << 1 | 0) | 0;
 $and = (HEAP16[$chf + 24 >> 1] | 0) + 1 & 65535 & -2;
 if (($borderSize | 0) > 0) {
  $cond_i = ($3 | 0) < ($borderSize | 0) ? $3 : $borderSize;
  $cond_i110 = ($4 | 0) < ($borderSize | 0) ? $4 : $borderSize;
  $24 = HEAP32[$width >> 2] | 0;
  if (($4 | 0) > 0) {
   $areas_i = $chf + 72 | 0;
   if (($cond_i | 0) > 0) {
    $_pre419_pre = HEAP32[$chf + 60 >> 2] | 0;
    $y_017_us_i = 0;
    do {
     $mul_us_i = Math_imul($y_017_us_i, $24) | 0;
     $x_015_us_i = 0;
     do {
      $bf_load_us_i = HEAP32[$_pre419_pre + ($x_015_us_i + $mul_us_i << 2) >> 2] | 0;
      $bf_clear_us_i = $bf_load_us_i & 16777215;
      $bf_lshr_us_i = $bf_load_us_i >>> 24;
      $add7_us_i = $bf_clear_us_i + $bf_lshr_us_i | 0;
      if (($bf_lshr_us_i | 0) != 0) {
       $_pre420 = HEAP32[$areas_i >> 2] | 0;
       $i_013_us_i = $bf_clear_us_i;
       do {
        if ((HEAP8[$_pre420 + $i_013_us_i >> 0] | 0) != 0) {
         HEAP16[$6 + ($i_013_us_i << 1) >> 1] = -32767;
        }
        $i_013_us_i = $i_013_us_i + 1 | 0;
       } while (($i_013_us_i | 0) < ($add7_us_i | 0));
      }
      $x_015_us_i = $x_015_us_i + 1 | 0;
     } while (($x_015_us_i | 0) < ($cond_i | 0));
     $y_017_us_i = $y_017_us_i + 1 | 0;
    } while (($y_017_us_i | 0) < ($4 | 0));
    $_pre = HEAP32[$width >> 2] | 0;
    $sub330 = $3 - $cond_i | 0;
    $y_017_us_i144 = 0;
    while (1) {
     $mul_us_i145 = Math_imul($y_017_us_i144, $_pre) | 0;
     $x_015_us_i123 = $sub330;
     do {
      $bf_load_us_i126 = HEAP32[$_pre419_pre + ($x_015_us_i123 + $mul_us_i145 << 2) >> 2] | 0;
      $bf_clear_us_i127 = $bf_load_us_i126 & 16777215;
      $bf_lshr_us_i128 = $bf_load_us_i126 >>> 24;
      $add7_us_i129 = $bf_clear_us_i127 + $bf_lshr_us_i128 | 0;
      if (($bf_lshr_us_i128 | 0) != 0) {
       $_pre418 = HEAP32[$areas_i >> 2] | 0;
       $i_013_us_i135 = $bf_clear_us_i127;
       do {
        if ((HEAP8[$_pre418 + $i_013_us_i135 >> 0] | 0) != 0) {
         HEAP16[$6 + ($i_013_us_i135 << 1) >> 1] = -32766;
        }
        $i_013_us_i135 = $i_013_us_i135 + 1 | 0;
       } while (($i_013_us_i135 | 0) < ($add7_us_i129 | 0));
      }
      $x_015_us_i123 = $x_015_us_i123 + 1 | 0;
     } while (($x_015_us_i123 | 0) < ($3 | 0));
     $inc18_us_i120 = $y_017_us_i144 + 1 | 0;
     if (($inc18_us_i120 | 0) < ($4 | 0)) {
      $y_017_us_i144 = $inc18_us_i120;
     } else {
      $29 = $_pre;
      break;
     }
    }
   } else {
    $29 = $24;
   }
  } else {
   $29 = $24;
  }
  if (($cond_i110 | 0) > 0) {
   $areas_i152 = $chf + 72 | 0;
   if (($3 | 0) > 0) {
    $_pre421_pre = HEAP32[$chf + 60 >> 2] | 0;
    $y_017_us_i178 = 0;
    do {
     $mul_us_i179 = Math_imul($y_017_us_i178, $29) | 0;
     $x_015_us_i157 = 0;
     do {
      $bf_load_us_i160 = HEAP32[$_pre421_pre + ($x_015_us_i157 + $mul_us_i179 << 2) >> 2] | 0;
      $bf_clear_us_i161 = $bf_load_us_i160 & 16777215;
      $bf_lshr_us_i162 = $bf_load_us_i160 >>> 24;
      $add7_us_i163 = $bf_clear_us_i161 + $bf_lshr_us_i162 | 0;
      if (($bf_lshr_us_i162 | 0) != 0) {
       $_pre422 = HEAP32[$areas_i152 >> 2] | 0;
       $i_013_us_i169 = $bf_clear_us_i161;
       do {
        if ((HEAP8[$_pre422 + $i_013_us_i169 >> 0] | 0) != 0) {
         HEAP16[$6 + ($i_013_us_i169 << 1) >> 1] = -32765;
        }
        $i_013_us_i169 = $i_013_us_i169 + 1 | 0;
       } while (($i_013_us_i169 | 0) < ($add7_us_i163 | 0));
      }
      $x_015_us_i157 = $x_015_us_i157 + 1 | 0;
     } while (($x_015_us_i157 | 0) < ($3 | 0));
     $y_017_us_i178 = $y_017_us_i178 + 1 | 0;
    } while (($y_017_us_i178 | 0) < ($cond_i110 | 0));
    $y_017_us_i218 = $4 - $cond_i110 | 0;
    do {
     $mul_us_i219 = Math_imul($y_017_us_i218, $29) | 0;
     $x_015_us_i197 = 0;
     do {
      $bf_load_us_i200 = HEAP32[$_pre421_pre + ($x_015_us_i197 + $mul_us_i219 << 2) >> 2] | 0;
      $bf_clear_us_i201 = $bf_load_us_i200 & 16777215;
      $bf_lshr_us_i202 = $bf_load_us_i200 >>> 24;
      $add7_us_i203 = $bf_clear_us_i201 + $bf_lshr_us_i202 | 0;
      if (($bf_lshr_us_i202 | 0) != 0) {
       $_pre424 = HEAP32[$areas_i152 >> 2] | 0;
       $i_013_us_i209 = $bf_clear_us_i201;
       do {
        if ((HEAP8[$_pre424 + $i_013_us_i209 >> 0] | 0) != 0) {
         HEAP16[$6 + ($i_013_us_i209 << 1) >> 1] = -32764;
        }
        $i_013_us_i209 = $i_013_us_i209 + 1 | 0;
       } while (($i_013_us_i209 | 0) < ($add7_us_i203 | 0));
      }
      $x_015_us_i197 = $x_015_us_i197 + 1 | 0;
     } while (($x_015_us_i197 | 0) < ($3 | 0));
     $y_017_us_i218 = $y_017_us_i218 + 1 | 0;
    } while (($y_017_us_i218 | 0) < ($4 | 0));
   }
  }
  HEAP32[$chf + 20 >> 2] = $borderSize;
  $regionId_0_ph = 5;
 } else {
  $regionId_0_ph = 1;
 }
 if ($and << 16 >> 16 == 0) {
  $buf_sroa_0_0_load315327_lcssa = $6;
  $add_ptr325_lcssa = $add_ptr;
  $add_ptr20323_lcssa = $add_ptr20;
  $add_ptr25321_lcssa = $add_ptr25;
  $regionId_0_lcssa = $regionId_0_ph;
 } else {
  $23 = $ctx;
  $cmp74366 = ($4 | 0) > 0;
  $cmp76359 = ($3 | 0) > 0;
  $cells = $chf + 60 | 0;
  $dist = $chf + 68 | 0;
  $areas = $chf + 72 | 0;
  $spans_i = $chf + 64 | 0;
  $buf_sroa_0_0_load315327389 = $6;
  $add_ptr325390 = $add_ptr;
  $add_ptr20323391 = $add_ptr20;
  $add_ptr25321392 = $add_ptr25;
  $level_0393 = $and;
  $regionId_0394 = $regionId_0_ph;
  while (1) {
   $sub62 = $level_0393 - 2 & 65535;
   $sub62_ = ($level_0393 & 65535) >>> 0 > 1 >>> 0 ? $sub62 : 0;
   if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 20 >> 2] & 127]($ctx, 22);
   }
   $cmp67 = (__ZL13expandRegionsitR20rcCompactHeightfieldPtS1_S1_S1_R10rcIntArray(8, $sub62_, $chf, $buf_sroa_0_0_load315327389, $add_ptr325390, $add_ptr20323391, $add_ptr25321392, $stack) | 0) == ($buf_sroa_0_0_load315327389 | 0);
   $buf_sroa_0_0_load315327_add_ptr20323 = $cmp67 ? $buf_sroa_0_0_load315327389 : $add_ptr20323391;
   $add_ptr325_add_ptr25321 = $cmp67 ? $add_ptr325390 : $add_ptr25321392;
   $add_ptr20323_buf_sroa_0_0_load315327 = $cmp67 ? $add_ptr20323391 : $buf_sroa_0_0_load315327389;
   $add_ptr25321_add_ptr325 = $cmp67 ? $add_ptr25321392 : $add_ptr325390;
   if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 24 >> 2] & 127]($ctx, 22);
    if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 20 >> 2] & 127]($ctx, 23);
    }
   }
   if ($cmp74366) {
    $phitmp_i_ = ($sub62_ & 65535) >>> 0 > 1 >>> 0 ? $sub62_ - 2 & 65535 : 0;
    $regionId_1367 = $regionId_0394;
    $y_0368 = 0;
    while (1) {
     if ($cmp76359) {
      $mul78 = Math_imul($y_0368, $3) | 0;
      $regionId_2360 = $regionId_1367;
      $x_0361 = 0;
      while (1) {
       $bf_load = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x_0361 + $mul78 << 2) >> 2] | 0;
       $bf_clear = $bf_load & 16777215;
       $bf_lshr = $bf_load >>> 24;
       $add83 = $bf_clear + $bf_lshr | 0;
       if (($bf_lshr | 0) == 0) {
        $regionId_3_lcssa = $regionId_2360;
       } else {
        $regionId_3355 = $regionId_2360;
        $i_0356 = $bf_clear;
        while (1) {
         if ((HEAPU16[(HEAP32[$dist >> 2] | 0) + ($i_0356 << 1) >> 1] | 0) >>> 0 < ($sub62_ & 65535) >>> 0) {
          $regionId_4 = $regionId_3355;
         } else {
          $arrayidx91 = $buf_sroa_0_0_load315327_add_ptr20323 + ($i_0356 << 1) | 0;
          if ((HEAP16[$arrayidx91 >> 1] | 0) == 0) {
           $47 = HEAP8[(HEAP32[$areas >> 2] | 0) + $i_0356 >> 0] | 0;
           if ($47 << 24 >> 24 == 0) {
            $regionId_4 = $regionId_3355;
           } else {
            $48 = HEAP32[$width >> 2] | 0;
            $49 = HEAP32[$m_cap_i >> 2] | 0;
            if (($49 | 0) < 0) {
             $50 = $49;
             while (1) {
              $mul_i51 = $50 << 1;
              if (($50 | 0) < 0) {
               $50 = $mul_i51;
              } else {
               break;
              }
             }
             HEAP32[$m_cap_i >> 2] = $mul_i51;
             $call_i1_i57 = _malloc($50 << 3) | 0;
             $52 = HEAP32[$m_size_i >> 2] | 0;
             if (($52 | 0) != 0 & ($call_i1_i57 | 0) != 0) {
              _memcpy($call_i1_i57 | 0, HEAP32[$m_data_i >> 2] | 0, $52 << 2) | 0;
             }
             $55 = HEAP32[$m_data_i >> 2] | 0;
             if (($55 | 0) != 0) {
              _free($55);
             }
             HEAP32[$m_data_i >> 2] = $call_i1_i57;
             $57 = HEAP32[$m_cap_i >> 2] | 0;
            } else {
             $57 = $49;
            }
            HEAP32[$m_size_i >> 2] = 0;
            if (($57 | 0) < 1) {
             if (($57 | 0) == 0) {
              HEAP32[$m_cap_i >> 2] = 1;
              $_lcssa_i85 = 4;
             } else {
              $58 = $57;
              while (1) {
               $mul_i81 = $58 << 1;
               if (($58 | 0) < 1) {
                $58 = $mul_i81;
               } else {
                break;
               }
              }
              HEAP32[$m_cap_i >> 2] = $mul_i81;
              $_lcssa_i85 = $58 << 3;
             }
             $call_i1_i87 = _malloc($_lcssa_i85) | 0;
             $59 = $call_i1_i87;
             $60 = HEAP32[$m_size_i >> 2] | 0;
             if (($60 | 0) != 0 & ($call_i1_i87 | 0) != 0) {
              _memcpy($call_i1_i87 | 0, HEAP32[$m_data_i >> 2] | 0, $60 << 2) | 0;
             }
             $63 = HEAP32[$m_data_i >> 2] | 0;
             if (($63 | 0) != 0) {
              _free($63);
             }
             HEAP32[$m_data_i >> 2] = $59;
             $65 = $59;
            } else {
             $65 = HEAP32[$m_data_i >> 2] | 0;
            }
            HEAP32[$m_size_i >> 2] = 1;
            HEAP32[$65 >> 2] = $x_0361;
            $66 = HEAP32[$m_size_i >> 2] | 0;
            $add_i79_i = $66 + 1 | 0;
            $67 = HEAP32[$m_cap_i >> 2] | 0;
            if (($67 | 0) < ($add_i79_i | 0)) {
             if (($67 | 0) == 0) {
              HEAP32[$m_cap_i >> 2] = $add_i79_i;
              $_lcssa_i116 = $add_i79_i;
             } else {
              $68 = $67;
              do {
               $68 = $68 << 1;
              } while (($68 | 0) < ($add_i79_i | 0));
              HEAP32[$m_cap_i >> 2] = $68;
              $_lcssa_i116 = $68;
             }
             $call_i1_i118 = _malloc($_lcssa_i116 << 2) | 0;
             $69 = $call_i1_i118;
             $70 = HEAP32[$m_size_i >> 2] | 0;
             if (($70 | 0) != 0 & ($call_i1_i118 | 0) != 0) {
              _memcpy($call_i1_i118 | 0, HEAP32[$m_data_i >> 2] | 0, $70 << 2) | 0;
             }
             $73 = HEAP32[$m_data_i >> 2] | 0;
             if (($73 | 0) != 0) {
              _free($73);
             }
             HEAP32[$m_data_i >> 2] = $69;
             $75 = $69;
            } else {
             $75 = $65;
            }
            HEAP32[$m_size_i >> 2] = $add_i79_i;
            HEAP32[$75 + ($66 << 2) >> 2] = $y_0368;
            $76 = HEAP32[$m_size_i >> 2] | 0;
            $add_i84_i = $76 + 1 | 0;
            $77 = HEAP32[$m_cap_i >> 2] | 0;
            if (($77 | 0) < ($add_i84_i | 0)) {
             if (($77 | 0) == 0) {
              HEAP32[$m_cap_i >> 2] = $add_i84_i;
              $_lcssa_i146 = $add_i84_i;
             } else {
              $78 = $77;
              do {
               $78 = $78 << 1;
              } while (($78 | 0) < ($add_i84_i | 0));
              HEAP32[$m_cap_i >> 2] = $78;
              $_lcssa_i146 = $78;
             }
             $call_i1_i148 = _malloc($_lcssa_i146 << 2) | 0;
             $79 = $call_i1_i148;
             $80 = HEAP32[$m_size_i >> 2] | 0;
             if (($80 | 0) != 0 & ($call_i1_i148 | 0) != 0) {
              _memcpy($call_i1_i148 | 0, HEAP32[$m_data_i >> 2] | 0, $80 << 2) | 0;
             }
             $83 = HEAP32[$m_data_i >> 2] | 0;
             if (($83 | 0) != 0) {
              _free($83);
             }
             HEAP32[$m_data_i >> 2] = $79;
             $85 = $79;
            } else {
             $85 = $75;
            }
            HEAP32[$m_size_i >> 2] = $add_i84_i;
            HEAP32[$85 + ($76 << 2) >> 2] = $i_0356;
            HEAP16[$arrayidx91 >> 1] = $regionId_3355;
            HEAP16[$add_ptr325_add_ptr25321 + ($i_0356 << 1) >> 1] = 0;
            $86 = HEAP32[$m_size_i >> 2] | 0;
            L166 : do {
             if (($86 | 0) > 0) {
              $count_0_ph173_i = 0;
              $89 = $86;
              $88 = $85;
              while (1) {
               $90 = $89;
               while (1) {
                $dec_i_i = $90 - 1 | 0;
                HEAP32[$m_size_i >> 2] = $dec_i_i;
                $91 = HEAP32[$88 + ($dec_i_i << 2) >> 2] | 0;
                if (($dec_i_i | 0) > 0) {
                 $dec_i104_i = $90 - 2 | 0;
                 HEAP32[$m_size_i >> 2] = $dec_i104_i;
                 $92 = HEAP32[$88 + ($dec_i104_i << 2) >> 2] | 0;
                 if (($dec_i104_i | 0) > 0) {
                  $dec_i116_i = $90 - 3 | 0;
                  HEAP32[$m_size_i >> 2] = $dec_i116_i;
                  $95 = $dec_i116_i;
                  $94 = $92;
                  $93 = HEAP32[$88 + ($dec_i116_i << 2) >> 2] | 0;
                 } else {
                  $95 = $dec_i104_i;
                  $94 = $92;
                  $93 = $92;
                 }
                } else {
                 $95 = $dec_i_i;
                 $94 = $91;
                 $93 = $91;
                }
                $96 = HEAP32[$spans_i >> 2] | 0;
                $97 = $96 + ($91 << 3) + 4 | 0;
                $bf_load_i157_i = HEAP32[$97 >> 2] | 0;
                $bf_clear_i158_i = $bf_load_i157_i & 16777215;
                $dir_0163_i = 0;
                $ar_0164_i = 0;
                while (1) {
                 $and_i160_i = $bf_clear_i158_i >>> (($dir_0163_i * 6 | 0) >>> 0) & 63;
                 if (($and_i160_i | 0) == 63) {
                  $ar_2_i = $ar_0164_i;
                 } else {
                  $add_i = (HEAP32[11520 + ($dir_0163_i << 2) >> 2] | 0) + $93 | 0;
                  $add15_i = (HEAP32[11504 + ($dir_0163_i << 2) >> 2] | 0) + $94 | 0;
                  $add16_i = (Math_imul($add15_i, $48) | 0) + $add_i | 0;
                  $100 = HEAP32[$cells >> 2] | 0;
                  $add19_i = (HEAP32[$100 + ($add16_i << 2) >> 2] & 16777215) + $and_i160_i | 0;
                  $102 = HEAP32[$areas >> 2] | 0;
                  if ((HEAP8[$102 + $add19_i >> 0] | 0) == $47 << 24 >> 24) {
                   $104 = HEAP16[$buf_sroa_0_0_load315327_add_ptr20323 + ($add19_i << 1) >> 1] | 0;
                   if ($104 << 16 >> 16 > -1) {
                    $ar_1_i = $104 << 16 >> 16 == 0 | $104 << 16 >> 16 == $regionId_3355 << 16 >> 16 ? $ar_0164_i : $104;
                    $and40_i = $dir_0163_i + 1 & 3;
                    $and_i144_i = (HEAP32[$96 + ($add19_i << 3) + 4 >> 2] & 16777215) >>> (($and40_i * 6 | 0) >>> 0) & 63;
                    if (($and_i144_i | 0) == 63) {
                     $ar_2_i = $ar_1_i;
                    } else {
                     $108 = $100 + ((HEAP32[11520 + ($and40_i << 2) >> 2] | 0) + $add_i + (Math_imul((HEAP32[11504 + ($and40_i << 2) >> 2] | 0) + $add15_i | 0, $48) | 0) << 2) | 0;
                     $add55_i = (HEAP32[$108 >> 2] & 16777215) + $and_i144_i | 0;
                     if ((HEAP8[$102 + $add55_i >> 0] | 0) == $47 << 24 >> 24) {
                      $110 = HEAP16[$buf_sroa_0_0_load315327_add_ptr20323 + ($add55_i << 1) >> 1] | 0;
                      $ar_2_i = $110 << 16 >> 16 == 0 | $110 << 16 >> 16 == $regionId_3355 << 16 >> 16 ? $ar_1_i : $110;
                     } else {
                      $ar_2_i = $ar_1_i;
                     }
                    }
                   } else {
                    $ar_2_i = $ar_0164_i;
                   }
                  } else {
                   $ar_2_i = $ar_0164_i;
                  }
                 }
                 $dir_0163_i = $dir_0163_i + 1 | 0;
                 if (($dir_0163_i | 0) >= 4) {
                  break;
                 } else {
                  $ar_0164_i = $ar_2_i;
                 }
                }
                if ($ar_2_i << 16 >> 16 == 0) {
                 $dir80_0165_i = 0;
                 $111 = $88;
                 $bf_load_i127_i = $bf_load_i157_i;
                 break;
                }
                HEAP16[$buf_sroa_0_0_load315327_add_ptr20323 + ($91 << 1) >> 1] = 0;
                if (($95 | 0) > 0) {
                 $90 = $95;
                } else {
                 $count_0_ph171_i = $count_0_ph173_i;
                 break L166;
                }
               }
               while (1) {
                $and_i130_i = ($bf_load_i127_i & 16777215) >>> (($dir80_0165_i * 6 | 0) >>> 0) & 63;
                if (($and_i130_i | 0) == 63) {
                 $151 = $111;
                } else {
                 $add89_i = (HEAP32[11520 + ($dir80_0165_i << 2) >> 2] | 0) + $93 | 0;
                 $add92_i = (HEAP32[11504 + ($dir80_0165_i << 2) >> 2] | 0) + $94 | 0;
                 $add95_i = (Math_imul($add92_i, $48) | 0) + $add89_i | 0;
                 $add101_i = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add95_i << 2) >> 2] & 16777215) + $and_i130_i | 0;
                 if ((HEAP8[(HEAP32[$areas >> 2] | 0) + $add101_i >> 0] | 0) == $47 << 24 >> 24) {
                  if ((HEAPU16[(HEAP32[$dist >> 2] | 0) + ($add101_i << 1) >> 1] | 0) >>> 0 < $phitmp_i_ >>> 0) {
                   $151 = $111;
                  } else {
                   $arrayidx114_i = $buf_sroa_0_0_load315327_add_ptr20323 + ($add101_i << 1) | 0;
                   if ((HEAP16[$arrayidx114_i >> 1] | 0) == 0) {
                    HEAP16[$arrayidx114_i >> 1] = $regionId_3355;
                    HEAP16[$add_ptr325_add_ptr25321 + ($add101_i << 1) >> 1] = 0;
                    $121 = HEAP32[$m_size_i >> 2] | 0;
                    $add_i110_i = $121 + 1 | 0;
                    $122 = HEAP32[$m_cap_i >> 2] | 0;
                    if (($122 | 0) < ($add_i110_i | 0)) {
                     if (($122 | 0) == 0) {
                      HEAP32[$m_cap_i >> 2] = $add_i110_i;
                      $_lcssa_i176 = $add_i110_i;
                     } else {
                      $123 = $122;
                      do {
                       $123 = $123 << 1;
                      } while (($123 | 0) < ($add_i110_i | 0));
                      HEAP32[$m_cap_i >> 2] = $123;
                      $_lcssa_i176 = $123;
                     }
                     $call_i1_i178 = _malloc($_lcssa_i176 << 2) | 0;
                     $124 = $call_i1_i178;
                     $125 = HEAP32[$m_size_i >> 2] | 0;
                     if (($125 | 0) != 0 & ($call_i1_i178 | 0) != 0) {
                      _memcpy($call_i1_i178 | 0, HEAP32[$m_data_i >> 2] | 0, $125 << 2) | 0;
                     }
                     $128 = HEAP32[$m_data_i >> 2] | 0;
                     if (($128 | 0) != 0) {
                      _free($128);
                     }
                     HEAP32[$m_data_i >> 2] = $124;
                     $130 = $124;
                    } else {
                     $130 = $111;
                    }
                    HEAP32[$m_size_i >> 2] = $add_i110_i;
                    HEAP32[$130 + ($121 << 2) >> 2] = $add89_i;
                    $131 = HEAP32[$m_size_i >> 2] | 0;
                    $add_i98_i = $131 + 1 | 0;
                    $132 = HEAP32[$m_cap_i >> 2] | 0;
                    if (($132 | 0) < ($add_i98_i | 0)) {
                     if (($132 | 0) == 0) {
                      HEAP32[$m_cap_i >> 2] = $add_i98_i;
                      $_lcssa_i206 = $add_i98_i;
                     } else {
                      $133 = $132;
                      do {
                       $133 = $133 << 1;
                      } while (($133 | 0) < ($add_i98_i | 0));
                      HEAP32[$m_cap_i >> 2] = $133;
                      $_lcssa_i206 = $133;
                     }
                     $call_i1_i208 = _malloc($_lcssa_i206 << 2) | 0;
                     $134 = $call_i1_i208;
                     $135 = HEAP32[$m_size_i >> 2] | 0;
                     if (($135 | 0) != 0 & ($call_i1_i208 | 0) != 0) {
                      _memcpy($call_i1_i208 | 0, HEAP32[$m_data_i >> 2] | 0, $135 << 2) | 0;
                     }
                     $138 = HEAP32[$m_data_i >> 2] | 0;
                     if (($138 | 0) != 0) {
                      _free($138);
                     }
                     HEAP32[$m_data_i >> 2] = $134;
                     $140 = $134;
                    } else {
                     $140 = $130;
                    }
                    HEAP32[$m_size_i >> 2] = $add_i98_i;
                    HEAP32[$140 + ($131 << 2) >> 2] = $add92_i;
                    $141 = HEAP32[$m_size_i >> 2] | 0;
                    $add_i90_i = $141 + 1 | 0;
                    $142 = HEAP32[$m_cap_i >> 2] | 0;
                    if (($142 | 0) < ($add_i90_i | 0)) {
                     if (($142 | 0) == 0) {
                      HEAP32[$m_cap_i >> 2] = $add_i90_i;
                      $_lcssa_i236 = $add_i90_i;
                     } else {
                      $143 = $142;
                      do {
                       $143 = $143 << 1;
                      } while (($143 | 0) < ($add_i90_i | 0));
                      HEAP32[$m_cap_i >> 2] = $143;
                      $_lcssa_i236 = $143;
                     }
                     $call_i1_i238 = _malloc($_lcssa_i236 << 2) | 0;
                     $144 = $call_i1_i238;
                     $145 = HEAP32[$m_size_i >> 2] | 0;
                     if (($145 | 0) != 0 & ($call_i1_i238 | 0) != 0) {
                      _memcpy($call_i1_i238 | 0, HEAP32[$m_data_i >> 2] | 0, $145 << 2) | 0;
                     }
                     $148 = HEAP32[$m_data_i >> 2] | 0;
                     if (($148 | 0) != 0) {
                      _free($148);
                     }
                     HEAP32[$m_data_i >> 2] = $144;
                     $150 = $144;
                    } else {
                     $150 = $140;
                    }
                    HEAP32[$m_size_i >> 2] = $add_i90_i;
                    HEAP32[$150 + ($141 << 2) >> 2] = $add101_i;
                    $151 = $150;
                   } else {
                    $151 = $111;
                   }
                  }
                 } else {
                  $151 = $111;
                 }
                }
                $inc123_i = $dir80_0165_i + 1 | 0;
                if (($inc123_i | 0) >= 4) {
                 break;
                }
                $dir80_0165_i = $inc123_i;
                $111 = $151;
                $bf_load_i127_i = HEAP32[$97 >> 2] | 0;
               }
               $inc79_i = $count_0_ph173_i + 1 | 0;
               $87 = HEAP32[$m_size_i >> 2] | 0;
               if (($87 | 0) > 0) {
                $count_0_ph173_i = $inc79_i;
                $89 = $87;
                $88 = $151;
               } else {
                $count_0_ph171_i = $inc79_i;
                break;
               }
              }
             } else {
              $count_0_ph171_i = 0;
             }
            } while (0);
            $regionId_4 = (($count_0_ph171_i | 0) > 0) + $regionId_3355 & 65535;
           }
          } else {
           $regionId_4 = $regionId_3355;
          }
         }
         $inc105 = $i_0356 + 1 | 0;
         if (($inc105 | 0) < ($add83 | 0)) {
          $regionId_3355 = $regionId_4;
          $i_0356 = $inc105;
         } else {
          $regionId_3_lcssa = $regionId_4;
          break;
         }
        }
       }
       $inc107 = $x_0361 + 1 | 0;
       if (($inc107 | 0) < ($3 | 0)) {
        $regionId_2360 = $regionId_3_lcssa;
        $x_0361 = $inc107;
       } else {
        $regionId_2_lcssa = $regionId_3_lcssa;
        break;
       }
      }
     } else {
      $regionId_2_lcssa = $regionId_1367;
     }
     $inc110 = $y_0368 + 1 | 0;
     if (($inc110 | 0) < ($4 | 0)) {
      $regionId_1367 = $regionId_2_lcssa;
      $y_0368 = $inc110;
     } else {
      $regionId_1_lcssa = $regionId_2_lcssa;
      break;
     }
    }
   } else {
    $regionId_1_lcssa = $regionId_0394;
   }
   if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 24 >> 2] & 127]($ctx, 23);
   }
   if ($sub62_ << 16 >> 16 == 0) {
    $buf_sroa_0_0_load315327_lcssa = $buf_sroa_0_0_load315327_add_ptr20323;
    $add_ptr325_lcssa = $add_ptr325_add_ptr25321;
    $add_ptr20323_lcssa = $add_ptr20323_buf_sroa_0_0_load315327;
    $add_ptr25321_lcssa = $add_ptr25321_add_ptr325;
    $regionId_0_lcssa = $regionId_1_lcssa;
    break;
   } else {
    $buf_sroa_0_0_load315327389 = $buf_sroa_0_0_load315327_add_ptr20323;
    $add_ptr325390 = $add_ptr325_add_ptr25321;
    $add_ptr20323391 = $add_ptr20323_buf_sroa_0_0_load315327;
    $add_ptr25321392 = $add_ptr25321_add_ptr325;
    $level_0393 = $sub62;
    $regionId_0394 = $regionId_1_lcssa;
   }
  }
 }
 $cmp115 = (__ZL13expandRegionsitR20rcCompactHeightfieldPtS1_S1_S1_R10rcIntArray(64, 0, $chf, $buf_sroa_0_0_load315327_lcssa, $add_ptr325_lcssa, $add_ptr20323_lcssa, $add_ptr25321_lcssa, $stack) | 0) == ($buf_sroa_0_0_load315327_lcssa | 0);
 $buf_sroa_0_0_load315327_add_ptr20323336 = $cmp115 ? $buf_sroa_0_0_load315327_lcssa : $add_ptr20323_lcssa;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  $155 = $ctx;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$155 >> 2] | 0) + 24 >> 2] & 127]($ctx, 21);
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$155 >> 2] | 0) + 20 >> 2] & 127]($ctx, 24);
  }
 }
 $maxRegions = $chf + 26 | 0;
 HEAP16[$maxRegions >> 1] = $regionId_0_lcssa;
 if (__ZL18filterSmallRegionsP9rcContextiiRtR20rcCompactHeightfieldPt($ctx, $minRegionArea, $mergeRegionArea, $maxRegions, $chf, $buf_sroa_0_0_load315327_add_ptr20323336) | 0) {
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 24);
  }
  $161 = HEAP32[$spanCount >> 2] | 0;
  if (($161 | 0) > 0) {
   $162 = HEAP32[$chf + 64 >> 2] | 0;
   $i128_0338 = 0;
   do {
    HEAP16[$162 + ($i128_0338 << 3) + 2 >> 1] = HEAP16[$buf_sroa_0_0_load315327_add_ptr20323336 + ($i128_0338 << 1) >> 1] | 0;
    $i128_0338 = $i128_0338 + 1 | 0;
   } while (($i128_0338 | 0) < ($161 | 0));
  }
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
   $retval_0 = 1;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 20);
   $retval_0 = 1;
  }
 } else {
  $retval_0 = 0;
 }
 if (($call_i1_i24 | 0) != 0) {
  _free($call_i1_i24);
 }
 $167 = HEAP32[$m_data_i >> 2] | 0;
 if (($167 | 0) != 0) {
  _free($167);
 }
 _free($call_i_i);
 $retval_1276 = $retval_0;
 STACKTOP = sp;
 return $retval_1276 | 0;
}
function __Z5buildv() {
 var $params_i = 0, $navData = 0, $navDataSize = 0, $buff = 0, $params = 0, $call = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $pools_i_i = 0, $8 = 0, $9 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $nconts_i_i = 0, $conts_i_i = 0, $24 = 0, $25 = 0, $i_010_i_i = 0, $26 = 0, $28 = 0, $29 = 0, $31 = 0, $inc_i_i = 0, $_lcssa_i_i = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $51 = 0.0, $conv = 0, $conv17 = 0, $conv20 = 0, $59 = 0.0, $61 = 0.0, $62 = 0.0, $64 = 0.0, $cond = 0.0, $67 = 0.0, $69 = 0.0, $70 = 0.0, $72 = 0.0, $73 = 0.0, $75 = 0, $call_i_i_i = 0, $77 = 0, $78 = 0, $79 = 0.0, $80 = 0.0, $width1_i = 0, $81 = 0, $call_i_i_i3 = 0, $call_i = 0, $call_i_i_i4 = 0, $116 = 0, $122 = 0, $i_072 = 0, $call_i_i_i5 = 0, $135 = 0, $conv100 = 0.0, $142 = 0, $call_i_i_i6 = 0, $143 = 0, $call_i_i_i7 = 0, $146 = 0, $152 = 0, $155 = 0, $npolys12867 = 0, $areas_phi_trans_insert = 0, $157 = 0, $i126_069 = 0, $arrayidx131 = 0, $158 = 0, $_pre73 = 0, $159 = 0, $160 = 0, $inc174 = 0, $areas180_pre_phi = 0, $173 = 0, $179 = 0, $205 = 0, $call_i_i_i10 = 0, $207 = 0, $208 = 0, $213 = 0.0, $217 = 0.0, $call_i22 = 0, $call16_i = 0, $retval_0_i2443 = 0, $call_i_i_i29 = 0, $retval_0_i32 = 0, $call219 = 0, $call_i_i_i33 = 0, $237 = 0, $i_03_i_i = 0, $retval_1 = 0, tempVarArgs = 0, sp = 0, $9$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704 | 0;
 $params_i = sp | 0;
 $navData = sp + 32 | 0;
 $navDataSize = sp + 40 | 0;
 $buff = sp + 48 | 0;
 $params = sp + 560 | 0;
 $call = __Znwj(4) | 0;
 HEAP32[$call >> 2] = 14328;
 HEAP32[4950] = $call;
 $2 = HEAP32[4914] | 0;
 if (($2 | 0) != 0) {
  if ((HEAP32[$2 + 4 >> 2] | 0) != 0) {
   _puts(256) | 0;
   $4 = HEAP32[4904] | 0;
   if (($4 | 0) != 0) {
    _free($4);
   }
   HEAP32[4904] = 0;
   $5 = HEAP32[4906] | 0;
   if (($5 | 0) != 0) {
    $6 = HEAP32[$5 + 40 >> 2] | 0;
    if (($6 | 0) != 0) {
     _free($6);
    }
    $pools_i_i = $5 + 44 | 0;
    $8 = HEAP32[$pools_i_i >> 2] | 0;
    if (($8 | 0) != 0) {
     $9 = $8;
     do {
      $9$looptemp = $9;
      $9 = HEAP32[$9 >> 2] | 0;
      if (($9$looptemp | 0) != 0) {
       _free($9$looptemp);
      }
      HEAP32[$pools_i_i >> 2] = $9;
     } while (($9 | 0) != 0);
    }
    _free($5);
   }
   HEAP32[4906] = 0;
   $13 = HEAP32[4922] | 0;
   if (($13 | 0) != 0) {
    $14 = HEAP32[$13 + 60 >> 2] | 0;
    if (($14 | 0) != 0) {
     _free($14 | 0);
    }
    $16 = HEAP32[$13 + 64 >> 2] | 0;
    if (($16 | 0) != 0) {
     _free($16);
    }
    $18 = HEAP32[$13 + 68 >> 2] | 0;
    if (($18 | 0) != 0) {
     _free($18);
    }
    $20 = HEAP32[$13 + 72 >> 2] | 0;
    if (($20 | 0) != 0) {
     _free($20);
    }
    _free($13);
   }
   HEAP32[4922] = 0;
   $22 = HEAP32[4918] | 0;
   if (($22 | 0) != 0) {
    $nconts_i_i = $22 + 4 | 0;
    $conts_i_i = $22 | 0;
    $24 = HEAP32[$conts_i_i >> 2] | 0;
    if ((HEAP32[$nconts_i_i >> 2] | 0) > 0) {
     $i_010_i_i = 0;
     $25 = $24;
     while (1) {
      $26 = HEAP32[$25 + ($i_010_i_i * 20 | 0) >> 2] | 0;
      if (($26 | 0) == 0) {
       $28 = $25;
      } else {
       _free($26);
       $28 = HEAP32[$conts_i_i >> 2] | 0;
      }
      $29 = HEAP32[$28 + ($i_010_i_i * 20 | 0) + 8 >> 2] | 0;
      if (($29 | 0) == 0) {
       $31 = $28;
      } else {
       _free($29);
       $31 = HEAP32[$conts_i_i >> 2] | 0;
      }
      $inc_i_i = $i_010_i_i + 1 | 0;
      if (($inc_i_i | 0) < (HEAP32[$nconts_i_i >> 2] | 0)) {
       $i_010_i_i = $inc_i_i;
       $25 = $31;
      } else {
       $_lcssa_i_i = $31;
       break;
      }
     }
    } else {
     $_lcssa_i_i = $24;
    }
    if (($_lcssa_i_i | 0) != 0) {
     _free($_lcssa_i_i);
    }
    _free($22);
   }
   HEAP32[4918] = 0;
   __Z14rcFreePolyMeshP10rcPolyMesh(HEAP32[4908] | 0);
   HEAP32[4908] = 0;
   $36 = HEAP32[4916] | 0;
   if (($36 | 0) != 0) {
    $37 = HEAP32[$36 >> 2] | 0;
    if (($37 | 0) != 0) {
     _free($37);
    }
    $39 = HEAP32[$36 + 4 >> 2] | 0;
    if (($39 | 0) != 0) {
     _free($39);
    }
    $41 = HEAP32[$36 + 8 >> 2] | 0;
    if (($41 | 0) != 0) {
     _free($41);
    }
    _free($36);
   }
   HEAP32[4916] = 0;
   __Z13dtFreeNavMeshP9dtNavMesh(HEAP32[4912] | 0);
   HEAP32[4912] = 0;
   HEAP32[4910] = 0;
   $44 = HEAP32[4914] | 0;
   $45 = HEAP32[$44 + 4 >> 2] | 0;
   $46 = HEAP32[$45 + 264 >> 2] | 0;
   $47 = HEAP32[$45 + 276 >> 2] | 0;
   $48 = HEAP32[$45 + 268 >> 2] | 0;
   $49 = HEAP32[$45 + 280 >> 2] | 0;
   _memset(19696, 0, 92) | 0;
   HEAPF32[4928] = +HEAPF32[118];
   $51 = +HEAPF32[120];
   HEAPF32[4929] = $51;
   HEAPF32[4936] = +HEAPF32[124];
   $conv = ~~+Math_ceil(+HEAPF32[128] / $51);
   HEAP32[4937] = $conv;
   $conv17 = ~~+Math_floor(+HEAPF32[126] / +HEAPF32[4929]);
   HEAP32[4938] = $conv17;
   $conv20 = ~~+Math_ceil(+HEAPF32[122] / +HEAPF32[4928]);
   HEAP32[4939] = $conv20;
   $59 = +HEAPF32[118];
   HEAP32[4940] = ~~(+HEAPF32[110] / $59);
   HEAPF32[4941] = +HEAPF32[112];
   $61 = +HEAPF32[106];
   HEAP32[4942] = ~~($61 * $61);
   $62 = +HEAPF32[108];
   HEAP32[4943] = ~~($62 * $62);
   HEAP32[4944] = ~~+HEAPF32[104];
   $64 = +HEAPF32[116];
   if ($64 < .8999999761581421) {
    $cond = 0.0;
   } else {
    $cond = $64 * $59;
   }
   HEAPF32[4945] = $cond;
   HEAPF32[4946] = +HEAPF32[120] * +HEAPF32[114];
   $67 = +HEAPF32[$44 + 8 >> 2];
   HEAPF32[4930] = $67;
   HEAPF32[4931] = +HEAPF32[$44 + 12 >> 2];
   $69 = +HEAPF32[$44 + 16 >> 2];
   HEAPF32[4932] = $69;
   $70 = +HEAPF32[$44 + 20 >> 2];
   HEAPF32[4933] = $70;
   HEAPF32[4934] = +HEAPF32[$44 + 24 >> 2];
   $72 = +HEAPF32[$44 + 28 >> 2];
   HEAPF32[4935] = $72;
   $73 = +HEAPF32[4928];
   HEAP32[4924] = ~~(($70 - $67) / $73 + .5);
   HEAP32[4925] = ~~(($72 - $69) / $73 + .5);
   _puts(136) | 0;
   __ZN9rcContext3logE13rcLogCategoryPKcz(0, 1, 4272, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $75 = HEAP32[4925] | 0;
   __ZN9rcContext3logE13rcLogCategoryPKcz(0, 1, 4240, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[4924], HEAP32[tempVarArgs + 8 >> 2] = $75, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   __ZN9rcContext3logE13rcLogCategoryPKcz(0, 1, 4208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAPF64[tempVarArgs >> 3] = +($47 | 0) / 1.0e3, HEAPF64[tempVarArgs + 8 >> 3] = +($49 | 0) / 1.0e3, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   _puts(112) | 0;
   $call_i_i_i = _malloc(52) | 0;
   _memset($call_i_i_i | 0, 0, 52) | 0;
   HEAP32[4906] = $call_i_i_i;
   if (($call_i_i_i | 0) == 0) {
    _puts(64) | 0;
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3936, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   $77 = HEAP32[4924] | 0;
   $78 = HEAP32[4925] | 0;
   $79 = +HEAPF32[4928];
   $80 = +HEAPF32[4929];
   $width1_i = $call_i_i_i;
   HEAP32[$width1_i >> 2] = $77;
   $81 = $call_i_i_i + 4 | 0;
   HEAP32[$81 >> 2] = $78;
   HEAPF32[$call_i_i_i + 8 >> 2] = +HEAPF32[4930];
   HEAPF32[$call_i_i_i + 12 >> 2] = +HEAPF32[4931];
   HEAPF32[$call_i_i_i + 16 >> 2] = +HEAPF32[4932];
   HEAPF32[$call_i_i_i + 20 >> 2] = +HEAPF32[4933];
   HEAPF32[$call_i_i_i + 24 >> 2] = +HEAPF32[4934];
   HEAPF32[$call_i_i_i + 28 >> 2] = +HEAPF32[4935];
   HEAPF32[$call_i_i_i + 32 >> 2] = $79;
   HEAPF32[$call_i_i_i + 36 >> 2] = $80;
   $call_i_i_i3 = _malloc(Math_imul($77 << 2, $78) | 0) | 0;
   HEAP32[$call_i_i_i + 40 >> 2] = $call_i_i_i3;
   if (($call_i_i_i3 | 0) == 0) {
    _puts(8) | 0;
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3672, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   _memset($call_i_i_i3 | 0, 0, Math_imul(HEAP32[$width1_i >> 2] << 2, HEAP32[$81 >> 2] | 0) | 0) | 0;
   _puts(384) | 0;
   $call_i = __Znwj(($49 | 0) > -1 ? $49 : -1) | 0;
   HEAP32[4904] = $call_i;
   _memset($call_i | 0, 0, $49 | 0) | 0;
   __Z23rcMarkWalkableTrianglesP9rcContextfPKfiPKiiPh(+HEAPF32[4936], $46, $48, $49, $call_i);
   _printf(3528, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 4, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   __Z20rcRasterizeTrianglesP9rcContextPKfiPKiPKhiR13rcHeightfieldi(0, $46, $48, HEAP32[4904] | 0, $49, HEAP32[4906] | 0, HEAP32[4938] | 0);
   __Z35rcFilterLowHangingWalkableObstaclesP9rcContextiR13rcHeightfield(0, HEAP32[4938] | 0, HEAP32[4906] | 0);
   __Z18rcFilterLedgeSpansP9rcContextiiR13rcHeightfield(0, HEAP32[4937] | 0, HEAP32[4938] | 0, HEAP32[4906] | 0);
   __Z30rcFilterWalkableLowHeightSpansP9rcContextiR13rcHeightfield(0, HEAP32[4937] | 0, HEAP32[4906] | 0);
   _puts(368) | 0;
   $call_i_i_i4 = _malloc(76) | 0;
   $116 = $call_i_i_i4;
   _memset($call_i_i_i4 | 0, 0, 76) | 0;
   HEAP32[4922] = $116;
   if (($call_i_i_i4 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3416, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z25rcBuildCompactHeightfieldP9rcContextiiR13rcHeightfieldR20rcCompactHeightfield(0, HEAP32[4937] | 0, HEAP32[4938] | 0, HEAP32[4906] | 0, $116) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z19rcErodeWalkableAreaP9rcContextiR20rcCompactHeightfield(0, HEAP32[4939] | 0, HEAP32[4922] | 0) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   $122 = HEAP32[4914] | 0;
   if ((HEAP32[$122 + 50212 >> 2] | 0) > 0) {
    $i_072 = 0;
    do {
     __Z20rcMarkConvexPolyAreaP9rcContextPKfiffhR20rcCompactHeightfield(0, $122 + 9252 + ($i_072 * 160 | 0) | 0, HEAP32[$122 + 9252 + ($i_072 * 160 | 0) + 152 >> 2] | 0, +HEAPF32[$122 + 9252 + ($i_072 * 160 | 0) + 144 >> 2], +HEAPF32[$122 + 9252 + ($i_072 * 160 | 0) + 148 >> 2], HEAP32[$122 + 9252 + ($i_072 * 160 | 0) + 156 >> 2] & 255, HEAP32[4922] | 0);
     $i_072 = $i_072 + 1 | 0;
    } while (($i_072 | 0) < (HEAP32[(HEAP32[4914] | 0) + 50212 >> 2] | 0));
   }
   if (!(__Z20rcBuildDistanceFieldP9rcContextR20rcCompactHeightfield(0, HEAP32[4922] | 0) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2864, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z14rcBuildRegionsP9rcContextR20rcCompactHeightfieldiii(0, HEAP32[4922] | 0, 0, HEAP32[4942] | 0, HEAP32[4943] | 0) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 3024, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   _puts(336) | 0;
   $call_i_i_i5 = _malloc(52) | 0;
   $135 = $call_i_i_i5;
   _memset($call_i_i_i5 | 0, 0, 52) | 0;
   HEAP32[4918] = $135;
   if (($call_i_i_i5 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2520, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z15rcBuildContoursP9rcContextR20rcCompactHeightfieldfiR12rcContourSeti(0, HEAP32[4922] | 0, +HEAPF32[4941], HEAP32[4940] | 0, $135) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2440, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   $conv100 = +HEAPF32[4941];
   $142 = HEAP32[4940] | 0;
   _printf(2344, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[(HEAP32[4918] | 0) + 4 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $conv100, HEAP32[tempVarArgs + 16 >> 2] = $142, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $call_i_i_i6 = _malloc(72) | 0;
   $143 = $call_i_i_i6;
   _memset($call_i_i_i6 | 0, 0, 72) | 0;
   HEAP32[4908] = $143;
   if (($call_i_i_i6 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z15rcBuildPolyMeshP9rcContextR12rcContourSetiR10rcPolyMesh(0, HEAP32[4918] | 0, HEAP32[4944] | 0, $143) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2200, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   _puts(296) | 0;
   $call_i_i_i7 = _malloc(24) | 0;
   $146 = $call_i_i_i7;
   _memset($call_i_i_i7 | 0, 0, 24) | 0;
   HEAP32[4916] = $146;
   if (($call_i_i_i7 | 0) == 0) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 2112, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   if (!(__Z21rcBuildPolyMeshDetailP9rcContextRK10rcPolyMeshRK20rcCompactHeightfieldffR16rcPolyMeshDetail(0, HEAP32[4908] | 0, HEAP32[4922] | 0, +HEAPF32[4945], +HEAPF32[4946], $146) | 0)) {
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1992, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   _puts(272) | 0;
   do {
    if ((HEAP32[4944] | 0) < 7) {
     HEAP32[$navData >> 2] = 0;
     HEAP32[$navDataSize >> 2] = 0;
     $152 = $buff | 0;
     _sprintf($152 | 0, 1880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[(HEAP32[4908] | 0) + 24 >> 2], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _emscripten_run_script($152 | 0);
     $155 = HEAP32[4908] | 0;
     $npolys12867 = $155 + 24 | 0;
     $areas_phi_trans_insert = $155 + 16 | 0;
     L125 : do {
      if ((HEAP32[$npolys12867 >> 2] | 0) > 0) {
       $i126_069 = 0;
       $157 = HEAP32[$areas_phi_trans_insert >> 2] | 0;
       while (1) {
        $arrayidx131 = $157 + $i126_069 | 0;
        $158 = HEAP8[$arrayidx131 >> 0] | 0;
        if ($158 << 24 >> 24 == 63) {
         HEAP8[$arrayidx131 >> 0] = 0;
         $_pre73 = HEAP32[$areas_phi_trans_insert >> 2] | 0;
         $160 = $_pre73;
         $159 = HEAP8[$_pre73 + $i126_069 >> 0] | 0;
        } else {
         $160 = $157;
         $159 = $158;
        }
        switch ($159 << 24 >> 24) {
        case 0:
        case 4:
        case 2:
         {
          HEAP16[(HEAP32[$155 + 12 >> 2] | 0) + ($i126_069 << 1) >> 1] = 1;
          break;
         }
        case 1:
         {
          HEAP16[(HEAP32[$155 + 12 >> 2] | 0) + ($i126_069 << 1) >> 1] = 2;
          break;
         }
        case 3:
         {
          HEAP16[(HEAP32[$155 + 12 >> 2] | 0) + ($i126_069 << 1) >> 1] = 5;
          break;
         }
        default:
         {}
        }
        $inc174 = $i126_069 + 1 | 0;
        if (($inc174 | 0) < (HEAP32[$npolys12867 >> 2] | 0)) {
         $i126_069 = $inc174;
         $157 = $160;
        } else {
         $areas180_pre_phi = $areas_phi_trans_insert;
         break L125;
        }
       }
      } else {
       $areas180_pre_phi = $areas_phi_trans_insert;
      }
     } while (0);
     _memset($params | 0, 0, 140) | 0;
     HEAP32[$params >> 2] = HEAP32[$155 >> 2];
     HEAP32[$params + 4 >> 2] = HEAP32[$155 + 20 >> 2];
     HEAP32[$params + 8 >> 2] = HEAP32[$155 + 4 >> 2];
     HEAP32[$params + 16 >> 2] = HEAP32[$areas180_pre_phi >> 2];
     HEAP32[$params + 12 >> 2] = HEAP32[$155 + 12 >> 2];
     HEAP32[$params + 20 >> 2] = HEAP32[$npolys12867 >> 2];
     HEAP32[$params + 24 >> 2] = HEAP32[$155 + 32 >> 2];
     $173 = HEAP32[4916] | 0;
     HEAP32[$params + 28 >> 2] = HEAP32[$173 >> 2];
     HEAP32[$params + 32 >> 2] = HEAP32[$173 + 4 >> 2];
     HEAP32[$params + 36 >> 2] = HEAP32[$173 + 16 >> 2];
     HEAP32[$params + 40 >> 2] = HEAP32[$173 + 8 >> 2];
     HEAP32[$params + 44 >> 2] = HEAP32[$173 + 20 >> 2];
     $179 = HEAP32[4914] | 0;
     HEAP32[$params + 48 >> 2] = $179 + 32;
     HEAP32[$params + 52 >> 2] = $179 + 6176;
     HEAP32[$params + 64 >> 2] = $179 + 7200;
     HEAP32[$params + 60 >> 2] = $179 + 7456;
     HEAP32[$params + 56 >> 2] = $179 + 7712;
     HEAP32[$params + 68 >> 2] = $179 + 8224;
     HEAP32[$params + 72 >> 2] = HEAP32[$179 + 9248 >> 2];
     HEAPF32[$params + 116 >> 2] = +HEAPF32[128];
     HEAPF32[$params + 120 >> 2] = +HEAPF32[122];
     HEAPF32[$params + 124 >> 2] = +HEAPF32[126];
     HEAPF32[$params + 92 >> 2] = +HEAPF32[$155 + 36 >> 2];
     HEAPF32[$params + 96 >> 2] = +HEAPF32[$155 + 40 >> 2];
     HEAPF32[$params + 100 >> 2] = +HEAPF32[$155 + 44 >> 2];
     HEAPF32[$params + 104 >> 2] = +HEAPF32[$155 + 48 >> 2];
     HEAPF32[$params + 108 >> 2] = +HEAPF32[$155 + 52 >> 2];
     HEAPF32[$params + 112 >> 2] = +HEAPF32[$155 + 56 >> 2];
     HEAPF32[$params + 128 >> 2] = +HEAPF32[4928];
     HEAPF32[$params + 132 >> 2] = +HEAPF32[4929];
     HEAP8[$params + 136 >> 0] = 1;
     _puts(152) | 0;
     _printf(6552, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[118], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(5496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[120], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(4464, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[128], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(3624, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[122], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(2576, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[126], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(1848, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[124], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(1240, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[106], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(9968, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[108], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(9296, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[110], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(8664, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[112], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(8208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[104], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(8e3, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[116], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _printf(7840, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[114], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (!(__Z19dtCreateNavMeshDataP21dtNavMeshCreateParamsPPhPi($params, $navData, $navDataSize) | 0)) {
      __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1816, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_1 = 0;
      STACKTOP = sp;
      return $retval_1 | 0;
     }
     $205 = HEAP32[$navData >> 2] | 0;
     _printf(1760, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $205, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $call_i_i_i10 = _malloc(84) | 0;
     if (($call_i_i_i10 | 0) == 0) {
      HEAP32[4912] = 0;
      if (($205 | 0) != 0) {
       _free($205);
      }
      __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      $retval_1 = 0;
      STACKTOP = sp;
      return $retval_1 | 0;
     }
     _memset($call_i_i_i10 | 0, 0, 84) | 0;
     HEAP32[4912] = $call_i_i_i10;
     _printf(1680, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $call_i_i_i10, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $207 = HEAP32[4912] | 0;
     $208 = HEAP32[$navDataSize >> 2] | 0;
     if ((HEAP32[$205 >> 2] | 0) == 1145979222) {
      if ((HEAP32[$205 + 4 >> 2] | 0) == 7) {
       $213 = +HEAPF32[$205 + 72 >> 2];
       HEAPF32[$params_i >> 2] = $213;
       HEAPF32[$params_i + 4 >> 2] = +HEAPF32[$205 + 76 >> 2];
       $217 = +HEAPF32[$205 + 80 >> 2];
       HEAPF32[$params_i + 8 >> 2] = $217;
       HEAPF32[$params_i + 12 >> 2] = +HEAPF32[$205 + 84 >> 2] - $213;
       HEAPF32[$params_i + 16 >> 2] = +HEAPF32[$205 + 92 >> 2] - $217;
       HEAP32[$params_i + 20 >> 2] = 1;
       HEAP32[$params_i + 24 >> 2] = HEAP32[$205 + 24 >> 2];
       $call_i22 = __ZN9dtNavMesh4initEPK15dtNavMeshParams($207, $params_i) | 0;
       if (($call_i22 | 0) < 0) {
        $retval_0_i2443 = $call_i22;
       } else {
        $call16_i = __ZN9dtNavMesh7addTileEPhiijPj($207, $205, $208, 0) | 0;
        if (($call16_i | 0) < 0) {
         $retval_0_i2443 = $call16_i;
        } else {
         _printf(1552, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $205, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         $call_i_i_i29 = _malloc(64) | 0;
         if (($call_i_i_i29 | 0) == 0) {
          $retval_0_i32 = 0;
         } else {
          _memset($call_i_i_i29 | 0, 0, 64) | 0;
          $retval_0_i32 = $call_i_i_i29;
         }
         HEAP32[4910] = $retval_0_i32;
         $call219 = __ZN14dtNavMeshQuery4initEPK9dtNavMeshi($retval_0_i32, HEAP32[4912] | 0, 2048) | 0;
         if (($call219 | 0) >= 0) {
          break;
         }
         _printf(1448, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $call219, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
         STACKTOP = tempVarArgs;
         $retval_1 = 0;
         STACKTOP = sp;
         return $retval_1 | 0;
        }
       }
      } else {
       $retval_0_i2443 = -2147483646;
      }
     } else {
      $retval_0_i2443 = -2147483647;
     }
     if (($205 | 0) != 0) {
      _free($205);
     }
     _printf(1632, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $retval_0_i2443, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1592, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
     $retval_1 = 0;
     STACKTOP = sp;
     return $retval_1 | 0;
    }
   } while (0);
   $call_i_i_i33 = _malloc(1004) | 0;
   if (($call_i_i_i33 | 0) == 0) {
    HEAP32[4920] = 0;
    __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 1296, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
    STACKTOP = tempVarArgs;
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
   _memset($call_i_i_i33 | 0, 0, 16) | 0;
   HEAP32[$call_i_i_i33 + 464 >> 2] = 1;
   HEAP32[$call_i_i_i33 + 468 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 472 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 476 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 52 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 108 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 164 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 220 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 276 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 332 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 388 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 444 >> 2] = 0;
   $237 = $call_i_i_i33 + 732 | 0;
   _memset($call_i_i_i33 + 704 | 0, 0, 16) | 0;
   HEAP16[$call_i_i_i33 + 988 >> 1] = -1;
   HEAP16[$call_i_i_i33 + 990 >> 1] = 0;
   $i_03_i_i = 0;
   do {
    HEAPF32[$237 + ($i_03_i_i << 2) >> 2] = 1.0;
    $i_03_i_i = $i_03_i_i + 1 | 0;
   } while (($i_03_i_i | 0) < 64);
   HEAPF32[$call_i_i_i33 + 992 >> 2] = 0.0;
   HEAP32[$call_i_i_i33 + 996 >> 2] = 0;
   HEAP32[$call_i_i_i33 + 1e3 >> 2] = 0;
   HEAP32[4920] = $call_i_i_i33;
   _printf(1224, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[4912], tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   _printf(1176, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[4910], tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $retval_1 = 1;
   STACKTOP = sp;
   return $retval_1 | 0;
  }
 }
 _printf(4352, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 4352, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
 STACKTOP = tempVarArgs;
 $retval_1 = 0;
 STACKTOP = sp;
 return $retval_1 | 0;
}
function __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf($this, $center, $extents_val, $extents_1_val, $extents_2_val, $filter, $nearestRef, $nearestPt) {
 $this = $this | 0;
 $center = $center | 0;
 $extents_val = +$extents_val;
 $extents_1_val = +$extents_1_val;
 $extents_2_val = +$extents_2_val;
 $filter = $filter | 0;
 $nearestRef = $nearestRef | 0;
 $nearestPt = $nearestPt | 0;
 var $neis_i = 0, $polys = 0, $closestPtPoly = 0, $1 = 0.0, $sub_i_i = 0.0, $arrayidx3_i_i = 0, $2 = 0.0, $sub5_i_i = 0.0, $arrayidx7_i_i = 0, $3 = 0.0, $sub9_i_i = 0.0, $add_i_i = 0.0, $add5_i_i = 0.0, $add9_i_i = 0.0, $m_nav_i1 = 0, $4 = 0, $conv_i_i = 0, $conv9_i_i = 0, $9 = 0, $conv_i8_i = 0, $conv9_i15_i = 0, $m_includeFlags_i_i_i = 0, $m_excludeFlags_i_i_i = 0, $y_035_i = 0, $n_034_i = 0, $mul1_i_i_i = 0, $x_029_i = 0, $n_128_i = 0, $15 = 0, $and_i_i_i = 0, $tile_010_i_i = 0, $tile_013_i_i = 0, $n_012_i_i = 0, $18 = 0, $n_1_i_i = 0, $j_025_i = 0, $n_224_i = 0, $21 = 0, $sub_i3 = 0, $22 = 0, $23 = 0, $24 = 0, $arrayidx4_i18_i = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $cond5_i_i_i = 0.0, $28 = 0.0, $29 = 0.0, $cond5_i141_i_i = 0.0, $30 = 0.0, $31 = 0.0, $cond5_i135_i_i = 0.0, $cond5_i129_i_i = 0.0, $cond5_i123_i_i = 0.0, $cond5_i117_i_i = 0.0, $and_i_i = 0, $and51_i_i = 0, $and57_i_i = 0, $or_i_i = 0, $or69_i_i = 0, $or76_i_i = 0, $34 = 0, $retval_0_i_i_i = 0, $polys95_i_i = 0, $node_0194_i_i = 0, $n_0193_i_i = 0, $cond_i108_i_i = 0, $cond23_i_i_i = 0, $41 = 0, $_cond23_i_i_i = 0, $43 = 0, $cmp87_i_i = 0, $or93_i_i = 0, $45 = 0, $48 = 0, $cmp87162_i_i = 0, $call86112160_i_i = 0, $n_1198_i_i = 0, $n_1197_i_i = 0, $node_0_be_i_i = 0, $51 = 0, $retval_0_i15_i_i = 0, $54 = 0, $55 = 0, $verts135_i_i = 0, $i117_0187_i_i = 0, $n113_0186_i_i = 0, $or128_i_i = 0, $57 = 0, $mul134_i_i = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $conv140_i_i = 0, $j_0178_i_i = 0, $bmax112_sroa_0_0_load149177_i_i = 0.0, $bmax112_sroa_4_4_load150176_i_i = 0.0, $bmax112_sroa_8_8_load151175_i_i = 0.0, $bmin111_sroa_0_0_load152174_i_i = 0.0, $bmin111_sroa_4_4_load153173_i_i = 0.0, $bmin111_sroa_8_8_load154172_i_i = 0.0, $mul146_i_i = 0, $67 = 0.0, $cond_i_i80_i_i = 0.0, $68 = 0.0, $cond_i11_i84_i_i = 0.0, $69 = 0.0, $cond_i9_i88_i_i = 0.0, $cond_i_i_i_i = 0.0, $cond_i11_i_i_i = 0.0, $cond_i9_i_i_i = 0.0, $inc151_i_i = 0, $bmax112_sroa_0_0_load149_lcssa_i_i = 0.0, $bmax112_sroa_4_4_load150_lcssa_i_i = 0.0, $bmax112_sroa_8_8_load151_lcssa_i_i = 0.0, $bmin111_sroa_0_0_load152_lcssa_i_i = 0.0, $bmin111_sroa_4_4_load153_lcssa_i_i = 0.0, $bmin111_sroa_8_8_load154_lcssa_i_i = 0.0, $n113_1_i_i = 0, $inc163_i_i = 0, $retval_0_i_i = 0, $add_i4 = 0, $inc_i = 0, $n_2_lcssa_i = 0, $n_1_lcssa_i = 0, $storemerge_i = 0, $storemerge_i37 = 0, $arraydecay3 = 0, $arrayidx2_i10 = 0, $arrayidx5_i12 = 0, $arrayidx3_i = 0, $arrayidx5_i = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $i_016_us = 0, $nearestDistanceSqr_015_us = 0.0, $nearest_014_us = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $and10_i_i = 0, $and11_i_i = 0, $79 = 0, $arrayidx_i13 = 0, $81 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $sub_i_us = 0.0, $sub4_i_us = 0.0, $sub7_i_us = 0.0, $add10_i_us = 0.0, $cmp7_us = 0, $nearest_1_us = 0, $inc_us = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $i_016 = 0, $nearestDistanceSqr_015 = 0.0, $nearest_014 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $and10_i_i23 = 0, $and11_i_i24 = 0, $101 = 0, $arrayidx_i35 = 0, $103 = 0, $_pre20 = 0.0, $_pre21 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $110 = 0.0, $sub_i = 0.0, $sub4_i = 0.0, $sub7_i = 0.0, $add10_i = 0.0, $114 = 0.0, $115 = 0.0, $nearest_1 = 0, $nearestDistanceSqr_1 = 0.0, $inc = 0, $nearest_0_lcssa = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 656 | 0;
 $neis_i = sp | 0;
 $polys = sp + 128 | 0;
 $closestPtPoly = sp + 640 | 0;
 HEAP32[$nearestRef >> 2] = 0;
 $1 = +HEAPF32[$center >> 2];
 $sub_i_i = $1 - $extents_val;
 $arrayidx3_i_i = $center + 4 | 0;
 $2 = +HEAPF32[$arrayidx3_i_i >> 2];
 $sub5_i_i = $2 - $extents_1_val;
 $arrayidx7_i_i = $center + 8 | 0;
 $3 = +HEAPF32[$arrayidx7_i_i >> 2];
 $sub9_i_i = $3 - $extents_2_val;
 $add_i_i = $1 + $extents_val;
 $add5_i_i = $2 + $extents_1_val;
 $add9_i_i = $3 + $extents_2_val;
 $m_nav_i1 = $this | 0;
 $4 = HEAP32[$m_nav_i1 >> 2] | 0;
 $conv_i_i = ~~+Math_floor(($sub_i_i - +HEAPF32[$4 + 28 >> 2]) / +HEAPF32[$4 + 40 >> 2]);
 $conv9_i_i = ~~+Math_floor(($sub9_i_i - +HEAPF32[$4 + 36 >> 2]) / +HEAPF32[$4 + 44 >> 2]);
 $9 = HEAP32[$m_nav_i1 >> 2] | 0;
 $conv_i8_i = ~~+Math_floor(($add_i_i - +HEAPF32[$9 + 28 >> 2]) / +HEAPF32[$9 + 40 >> 2]);
 $conv9_i15_i = ~~+Math_floor(($add9_i_i - +HEAPF32[$9 + 36 >> 2]) / +HEAPF32[$9 + 44 >> 2]);
 L1 : do {
  if (($conv9_i_i | 0) > ($conv9_i15_i | 0)) {
   $nearest_0_lcssa = 0;
  } else {
   $m_includeFlags_i_i_i = $filter + 256 | 0;
   $m_excludeFlags_i_i_i = $filter + 258 | 0;
   $n_034_i = 0;
   $y_035_i = $conv9_i_i;
   L3 : while (1) {
    if (($conv_i_i | 0) > ($conv_i8_i | 0)) {
     $n_1_lcssa_i = $n_034_i;
    } else {
     $mul1_i_i_i = Math_imul($y_035_i, -669632447) | 0;
     $n_128_i = $n_034_i;
     $x_029_i = $conv_i_i;
     while (1) {
      $15 = HEAP32[$m_nav_i1 >> 2] | 0;
      $and_i_i_i = HEAP32[$15 + 56 >> 2] & $mul1_i_i_i + (Math_imul($x_029_i, -1918454973) | 0);
      $tile_010_i_i = HEAP32[(HEAP32[$15 + 60 >> 2] | 0) + ($and_i_i_i << 2) >> 2] | 0;
      if (($tile_010_i_i | 0) == 0) {
       $n_2_lcssa_i = $n_128_i;
      } else {
       $n_012_i_i = 0;
       $tile_013_i_i = $tile_010_i_i;
       while (1) {
        $18 = HEAP32[$tile_013_i_i + 8 >> 2] | 0;
        if (($18 | 0) == 0) {
         $n_1_i_i = $n_012_i_i;
        } else {
         if ((HEAP32[$18 + 8 >> 2] | 0) == ($x_029_i | 0)) {
          if ((HEAP32[$18 + 12 >> 2] | 0) == ($y_035_i | 0) & ($n_012_i_i | 0) < 32) {
           HEAP32[$neis_i + ($n_012_i_i << 2) >> 2] = $tile_013_i_i;
           $n_1_i_i = $n_012_i_i + 1 | 0;
          } else {
           $n_1_i_i = $n_012_i_i;
          }
         } else {
          $n_1_i_i = $n_012_i_i;
         }
        }
        $tile_013_i_i = HEAP32[$tile_013_i_i + 56 >> 2] | 0;
        if (($tile_013_i_i | 0) == 0) {
         break;
        } else {
         $n_012_i_i = $n_1_i_i;
        }
       }
       if (($n_1_i_i | 0) > 0) {
        $n_224_i = $n_128_i;
        $j_025_i = 0;
        while (1) {
         $21 = HEAP32[$neis_i + ($j_025_i << 2) >> 2] | 0;
         $sub_i3 = 128 - $n_224_i | 0;
         $22 = HEAP32[$21 + 36 >> 2] | 0;
         if (($22 | 0) == 0) {
          if (($21 | 0) == 0) {
           $retval_0_i15_i_i = 0;
          } else {
           $51 = HEAP32[$15 + 80 >> 2] | 0;
           $retval_0_i15_i_i = HEAP32[$21 >> 2] << (HEAP32[$15 + 76 >> 2] | 0) + $51 | (($21 - (HEAP32[$15 + 68 >> 2] | 0) | 0) / 60 | 0) << $51;
          }
          $54 = HEAP32[(HEAP32[$21 + 8 >> 2] | 0) + 24 >> 2] | 0;
          if (($54 | 0) > 0) {
           $55 = HEAP32[$21 + 12 >> 2] | 0;
           $verts135_i_i = $21 + 16 | 0;
           $n113_0186_i_i = 0;
           $i117_0187_i_i = 0;
           while (1) {
            if ((HEAP8[$55 + ($i117_0187_i_i << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
             $n113_1_i_i = $n113_0186_i_i;
            } else {
             $or128_i_i = $i117_0187_i_i | $retval_0_i15_i_i;
             $57 = HEAP16[$55 + ($i117_0187_i_i << 5) + 28 >> 1] | 0;
             if ((HEAP16[$m_includeFlags_i_i_i >> 1] & $57) << 16 >> 16 == 0) {
              $n113_1_i_i = $n113_0186_i_i;
             } else {
              if ((HEAP16[$m_excludeFlags_i_i_i >> 1] & $57) << 16 >> 16 == 0) {
               $mul134_i_i = (HEAPU16[$55 + ($i117_0187_i_i << 5) + 4 >> 1] | 0) * 3 | 0;
               $61 = HEAP32[$verts135_i_i >> 2] | 0;
               $62 = +HEAPF32[$61 + ($mul134_i_i << 2) >> 2];
               $63 = +HEAPF32[$61 + ($mul134_i_i + 1 << 2) >> 2];
               $64 = +HEAPF32[$61 + ($mul134_i_i + 2 << 2) >> 2];
               $65 = HEAP8[$55 + ($i117_0187_i_i << 5) + 30 >> 0] | 0;
               if (($65 & 255) >>> 0 > 1 >>> 0) {
                $conv140_i_i = $65 & 255;
                $bmin111_sroa_8_8_load154172_i_i = $64;
                $bmin111_sroa_4_4_load153173_i_i = $63;
                $bmin111_sroa_0_0_load152174_i_i = $62;
                $bmax112_sroa_8_8_load151175_i_i = $64;
                $bmax112_sroa_4_4_load150176_i_i = $63;
                $bmax112_sroa_0_0_load149177_i_i = $62;
                $j_0178_i_i = 1;
                while (1) {
                 $mul146_i_i = (HEAPU16[$55 + ($i117_0187_i_i << 5) + 4 + ($j_0178_i_i << 1) >> 1] | 0) * 3 | 0;
                 $67 = +HEAPF32[$61 + ($mul146_i_i << 2) >> 2];
                 $cond_i_i80_i_i = $bmin111_sroa_0_0_load152174_i_i < $67 ? $bmin111_sroa_0_0_load152174_i_i : $67;
                 $68 = +HEAPF32[$61 + ($mul146_i_i + 1 << 2) >> 2];
                 $cond_i11_i84_i_i = $bmin111_sroa_4_4_load153173_i_i < $68 ? $bmin111_sroa_4_4_load153173_i_i : $68;
                 $69 = +HEAPF32[$61 + ($mul146_i_i + 2 << 2) >> 2];
                 $cond_i9_i88_i_i = $bmin111_sroa_8_8_load154172_i_i < $69 ? $bmin111_sroa_8_8_load154172_i_i : $69;
                 $cond_i_i_i_i = $bmax112_sroa_0_0_load149177_i_i > $67 ? $bmax112_sroa_0_0_load149177_i_i : $67;
                 $cond_i11_i_i_i = $bmax112_sroa_4_4_load150176_i_i > $68 ? $bmax112_sroa_4_4_load150176_i_i : $68;
                 $cond_i9_i_i_i = $bmax112_sroa_8_8_load151175_i_i > $69 ? $bmax112_sroa_8_8_load151175_i_i : $69;
                 $inc151_i_i = $j_0178_i_i + 1 | 0;
                 if (($inc151_i_i | 0) < ($conv140_i_i | 0)) {
                  $bmin111_sroa_8_8_load154172_i_i = $cond_i9_i88_i_i;
                  $bmin111_sroa_4_4_load153173_i_i = $cond_i11_i84_i_i;
                  $bmin111_sroa_0_0_load152174_i_i = $cond_i_i80_i_i;
                  $bmax112_sroa_8_8_load151175_i_i = $cond_i9_i_i_i;
                  $bmax112_sroa_4_4_load150176_i_i = $cond_i11_i_i_i;
                  $bmax112_sroa_0_0_load149177_i_i = $cond_i_i_i_i;
                  $j_0178_i_i = $inc151_i_i;
                 } else {
                  $bmin111_sroa_8_8_load154_lcssa_i_i = $cond_i9_i88_i_i;
                  $bmin111_sroa_4_4_load153_lcssa_i_i = $cond_i11_i84_i_i;
                  $bmin111_sroa_0_0_load152_lcssa_i_i = $cond_i_i80_i_i;
                  $bmax112_sroa_8_8_load151_lcssa_i_i = $cond_i9_i_i_i;
                  $bmax112_sroa_4_4_load150_lcssa_i_i = $cond_i11_i_i_i;
                  $bmax112_sroa_0_0_load149_lcssa_i_i = $cond_i_i_i_i;
                  break;
                 }
                }
               } else {
                $bmin111_sroa_8_8_load154_lcssa_i_i = $64;
                $bmin111_sroa_4_4_load153_lcssa_i_i = $63;
                $bmin111_sroa_0_0_load152_lcssa_i_i = $62;
                $bmax112_sroa_8_8_load151_lcssa_i_i = $64;
                $bmax112_sroa_4_4_load150_lcssa_i_i = $63;
                $bmax112_sroa_0_0_load149_lcssa_i_i = $62;
               }
               if ($sub9_i_i > $bmax112_sroa_8_8_load151_lcssa_i_i) {
                $n113_1_i_i = $n113_0186_i_i;
               } else {
                if ($add9_i_i >= $bmin111_sroa_8_8_load154_lcssa_i_i & (($n113_0186_i_i | 0) < ($sub_i3 | 0) & ($sub5_i_i > $bmax112_sroa_4_4_load150_lcssa_i_i | $add5_i_i < $bmin111_sroa_4_4_load153_lcssa_i_i ? 0 : $sub_i_i > $bmax112_sroa_0_0_load149_lcssa_i_i | $add_i_i < $bmin111_sroa_0_0_load152_lcssa_i_i ? 0 : 1))) {
                 HEAP32[$polys + ($n_224_i + $n113_0186_i_i << 2) >> 2] = $or128_i_i;
                 $n113_1_i_i = $n113_0186_i_i + 1 | 0;
                } else {
                 $n113_1_i_i = $n113_0186_i_i;
                }
               }
              } else {
               $n113_1_i_i = $n113_0186_i_i;
              }
             }
            }
            $inc163_i_i = $i117_0187_i_i + 1 | 0;
            if (($inc163_i_i | 0) < ($54 | 0)) {
             $n113_0186_i_i = $n113_1_i_i;
             $i117_0187_i_i = $inc163_i_i;
            } else {
             $retval_0_i_i = $n113_1_i_i;
             break;
            }
           }
          } else {
           $retval_0_i_i = 0;
          }
         } else {
          $23 = HEAP32[$21 + 8 >> 2] | 0;
          $24 = HEAP32[$23 + 48 >> 2] | 0;
          $arrayidx4_i18_i = $22 + ($24 << 4) | 0;
          $25 = +HEAPF32[$23 + 96 >> 2];
          $26 = +HEAPF32[$23 + 72 >> 2];
          $27 = +HEAPF32[$23 + 84 >> 2];
          if ($sub_i_i < $26) {
           $cond5_i_i_i = $26;
          } else {
           $cond5_i_i_i = $sub_i_i > $27 ? $27 : $sub_i_i;
          }
          $28 = +HEAPF32[$23 + 76 >> 2];
          $29 = +HEAPF32[$23 + 88 >> 2];
          if ($sub5_i_i < $28) {
           $cond5_i141_i_i = $28;
          } else {
           $cond5_i141_i_i = $sub5_i_i > $29 ? $29 : $sub5_i_i;
          }
          $30 = +HEAPF32[$23 + 80 >> 2];
          $31 = +HEAPF32[$23 + 92 >> 2];
          if ($sub9_i_i < $30) {
           $cond5_i135_i_i = $30;
          } else {
           $cond5_i135_i_i = $sub9_i_i > $31 ? $31 : $sub9_i_i;
          }
          if ($add_i_i < $26) {
           $cond5_i129_i_i = $26;
          } else {
           $cond5_i129_i_i = $add_i_i > $27 ? $27 : $add_i_i;
          }
          if ($add5_i_i < $28) {
           $cond5_i123_i_i = $28;
          } else {
           $cond5_i123_i_i = $add5_i_i > $29 ? $29 : $add5_i_i;
          }
          if ($add9_i_i < $30) {
           $cond5_i117_i_i = $30;
          } else {
           $cond5_i117_i_i = $add9_i_i > $31 ? $31 : $add9_i_i;
          }
          $and_i_i = ~~($25 * ($cond5_i_i_i - $26)) & -2;
          $and51_i_i = ~~($25 * ($cond5_i141_i_i - $28)) & -2;
          $and57_i_i = ~~($25 * ($cond5_i135_i_i - $30)) & -2;
          $or_i_i = ~~($25 * ($cond5_i129_i_i - $26) + 1.0) | 1;
          $or69_i_i = ~~($25 * ($cond5_i123_i_i - $28) + 1.0) | 1;
          $or76_i_i = ~~($25 * ($cond5_i117_i_i - $30) + 1.0) | 1;
          if (($21 | 0) == 0) {
           $retval_0_i_i_i = 0;
          } else {
           $34 = HEAP32[$15 + 80 >> 2] | 0;
           $retval_0_i_i_i = HEAP32[$21 >> 2] << (HEAP32[$15 + 76 >> 2] | 0) + $34 | (($21 - (HEAP32[$15 + 68 >> 2] | 0) | 0) / 60 | 0) << $34;
          }
          if (($24 | 0) > 0) {
           $polys95_i_i = $21 + 12 | 0;
           $n_0193_i_i = 0;
           $node_0194_i_i = $22;
           while (1) {
            if (($and_i_i & 65535) >>> 0 > (HEAPU16[$node_0194_i_i + 6 >> 1] | 0) >>> 0) {
             $cond_i108_i_i = 0;
            } else {
             $cond_i108_i_i = ($or_i_i & 65535) >>> 0 >= (HEAPU16[$node_0194_i_i >> 1] | 0) >>> 0;
            }
            if (($and51_i_i & 65535) >>> 0 > (HEAPU16[$node_0194_i_i + 8 >> 1] | 0) >>> 0) {
             $cond23_i_i_i = 0;
            } else {
             $cond23_i_i_i = $cond_i108_i_i & ($or69_i_i & 65535) >>> 0 >= (HEAPU16[$node_0194_i_i + 2 >> 1] | 0) >>> 0;
            }
            if (($and57_i_i & 65535) >>> 0 > (HEAPU16[$node_0194_i_i + 10 >> 1] | 0) >>> 0) {
             $41 = HEAP32[$node_0194_i_i + 12 >> 2] | 0;
             $call86112160_i_i = 0;
             $cmp87162_i_i = ($41 | 0) > -1;
             $48 = $41;
             label = 40;
            } else {
             $_cond23_i_i_i = $cond23_i_i_i & ($or76_i_i & 65535) >>> 0 >= (HEAPU16[$node_0194_i_i + 4 >> 1] | 0) >>> 0;
             $43 = HEAP32[$node_0194_i_i + 12 >> 2] | 0;
             $cmp87_i_i = ($43 | 0) > -1;
             if ($cmp87_i_i & $_cond23_i_i_i) {
              $or93_i_i = $43 | $retval_0_i_i_i;
              $45 = HEAP16[(HEAP32[$polys95_i_i >> 2] | 0) + ($43 << 5) + 28 >> 1] | 0;
              if ((HEAP16[$m_includeFlags_i_i_i >> 1] & $45) << 16 >> 16 == 0) {
               $n_1198_i_i = $n_0193_i_i;
               label = 41;
              } else {
               if ((HEAP16[$m_excludeFlags_i_i_i >> 1] & $45) << 16 >> 16 == 0 & ($n_0193_i_i | 0) < ($sub_i3 | 0)) {
                HEAP32[$polys + ($n_224_i + $n_0193_i_i << 2) >> 2] = $or93_i_i;
                $n_1198_i_i = $n_0193_i_i + 1 | 0;
                label = 41;
               } else {
                $n_1198_i_i = $n_0193_i_i;
                label = 41;
               }
              }
             } else {
              $call86112160_i_i = $_cond23_i_i_i;
              $cmp87162_i_i = $cmp87_i_i;
              $48 = $43;
              label = 40;
             }
            }
            if ((label | 0) == 40) {
             label = 0;
             if ($call86112160_i_i | $cmp87162_i_i) {
              $n_1198_i_i = $n_0193_i_i;
              label = 41;
             } else {
              $node_0_be_i_i = $node_0194_i_i + (-$48 << 4) | 0;
              $n_1197_i_i = $n_0193_i_i;
             }
            }
            if ((label | 0) == 41) {
             label = 0;
             $node_0_be_i_i = $node_0194_i_i + 16 | 0;
             $n_1197_i_i = $n_1198_i_i;
            }
            if ($node_0_be_i_i >>> 0 < $arrayidx4_i18_i >>> 0) {
             $n_0193_i_i = $n_1197_i_i;
             $node_0194_i_i = $node_0_be_i_i;
            } else {
             $retval_0_i_i = $n_1197_i_i;
             break;
            }
           }
          } else {
           $retval_0_i_i = 0;
          }
         }
         $add_i4 = $retval_0_i_i + $n_224_i | 0;
         $inc_i = $j_025_i + 1 | 0;
         if (($add_i4 | 0) >= 128) {
          $storemerge_i37 = $add_i4;
          break L3;
         }
         if (($inc_i | 0) < ($n_1_i_i | 0)) {
          $n_224_i = $add_i4;
          $j_025_i = $inc_i;
         } else {
          $n_2_lcssa_i = $add_i4;
          break;
         }
        }
       } else {
        $n_2_lcssa_i = $n_128_i;
       }
      }
      if (($x_029_i | 0) < ($conv_i8_i | 0)) {
       $n_128_i = $n_2_lcssa_i;
       $x_029_i = $x_029_i + 1 | 0;
      } else {
       $n_1_lcssa_i = $n_2_lcssa_i;
       break;
      }
     }
    }
    if (($y_035_i | 0) < ($conv9_i15_i | 0)) {
     $n_034_i = $n_1_lcssa_i;
     $y_035_i = $y_035_i + 1 | 0;
    } else {
     $storemerge_i = $n_1_lcssa_i;
     label = 61;
     break;
    }
   }
   if ((label | 0) == 61) {
    if (($storemerge_i | 0) > 0) {
     $storemerge_i37 = $storemerge_i;
    } else {
     $nearest_0_lcssa = 0;
     break;
    }
   }
   $arraydecay3 = $closestPtPoly | 0;
   $arrayidx2_i10 = $closestPtPoly + 4 | 0;
   $arrayidx5_i12 = $closestPtPoly + 8 | 0;
   $arrayidx3_i = $nearestPt + 4 | 0;
   $arrayidx5_i = $nearestPt + 8 | 0;
   if (($nearestPt | 0) == 0) {
    $nearest_014_us = 0;
    $nearestDistanceSqr_015_us = 3.4028234663852886e+38;
    $i_016_us = 0;
    $72 = 0.0;
    $71 = 0.0;
    $70 = 0.0;
    while (1) {
     $73 = HEAP32[$polys + ($i_016_us << 2) >> 2] | 0;
     $74 = HEAP32[$m_nav_i1 >> 2] | 0;
     if (($73 | 0) == 0) {
      $86 = $72;
      $85 = $71;
      $84 = $70;
     } else {
      $75 = HEAP32[$74 + 76 >> 2] | 0;
      $76 = HEAP32[$74 + 80 >> 2] | 0;
      $and10_i_i = $73 >>> ($76 >>> 0) & (1 << $75) - 1;
      $and11_i_i = (1 << $76) - 1 & $73;
      if ($and10_i_i >>> 0 < (HEAP32[$74 + 48 >> 2] | 0) >>> 0) {
       $79 = HEAP32[$74 + 68 >> 2] | 0;
       $arrayidx_i13 = $79 + ($and10_i_i * 60 | 0) | 0;
       if ((HEAP32[$arrayidx_i13 >> 2] | 0) == ((1 << HEAP32[$74 + 72 >> 2]) - 1 & $73 >>> (($76 + $75 | 0) >>> 0) | 0)) {
        $81 = HEAP32[$79 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
        if (($81 | 0) == 0) {
         $86 = $72;
         $85 = $71;
         $84 = $70;
        } else {
         if ($and11_i_i >>> 0 >= (HEAP32[$81 + 24 >> 2] | 0) >>> 0 | ($arrayidx_i13 | 0) == 0) {
          $86 = $72;
          $85 = $71;
          $84 = $70;
         } else {
          __ZNK14dtNavMeshQuery24closestPointOnPolyInTileEPK10dtMeshTilePK6dtPolyPKfPf($arrayidx_i13, (HEAP32[$79 + ($and10_i_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i << 5) | 0, $center, $arraydecay3);
          $86 = +HEAPF32[$arraydecay3 >> 2];
          $85 = +HEAPF32[$arrayidx2_i10 >> 2];
          $84 = +HEAPF32[$arrayidx5_i12 >> 2];
         }
        }
       } else {
        $86 = $72;
        $85 = $71;
        $84 = $70;
       }
      } else {
       $86 = $72;
       $85 = $71;
       $84 = $70;
      }
     }
     $sub_i_us = $86 - +HEAPF32[$center >> 2];
     $sub4_i_us = $85 - +HEAPF32[$arrayidx3_i_i >> 2];
     $sub7_i_us = $84 - +HEAPF32[$arrayidx7_i_i >> 2];
     $add10_i_us = $sub_i_us * $sub_i_us + $sub4_i_us * $sub4_i_us + $sub7_i_us * $sub7_i_us;
     $cmp7_us = $add10_i_us < $nearestDistanceSqr_015_us;
     $nearest_1_us = $cmp7_us ? $73 : $nearest_014_us;
     $inc_us = $i_016_us + 1 | 0;
     if (($inc_us | 0) < ($storemerge_i37 | 0)) {
      $nearest_014_us = $nearest_1_us;
      $nearestDistanceSqr_015_us = $cmp7_us ? $add10_i_us : $nearestDistanceSqr_015_us;
      $i_016_us = $inc_us;
      $72 = $86;
      $71 = $85;
      $70 = $84;
     } else {
      $nearest_0_lcssa = $nearest_1_us;
      break L1;
     }
    }
   } else {
    $nearest_014 = 0;
    $nearestDistanceSqr_015 = 3.4028234663852886e+38;
    $i_016 = 0;
    $94 = 0.0;
    $93 = 0.0;
    $92 = 0.0;
    $91 = 0.0;
    $90 = 0.0;
   }
   while (1) {
    $95 = HEAP32[$polys + ($i_016 << 2) >> 2] | 0;
    $96 = HEAP32[$m_nav_i1 >> 2] | 0;
    if (($95 | 0) == 0) {
     $110 = $94;
     $109 = $93;
     $108 = $92;
     $107 = $91;
     $106 = $90;
    } else {
     $97 = HEAP32[$96 + 76 >> 2] | 0;
     $98 = HEAP32[$96 + 80 >> 2] | 0;
     $and10_i_i23 = $95 >>> ($98 >>> 0) & (1 << $97) - 1;
     $and11_i_i24 = (1 << $98) - 1 & $95;
     if ($and10_i_i23 >>> 0 < (HEAP32[$96 + 48 >> 2] | 0) >>> 0) {
      $101 = HEAP32[$96 + 68 >> 2] | 0;
      $arrayidx_i35 = $101 + ($and10_i_i23 * 60 | 0) | 0;
      if ((HEAP32[$arrayidx_i35 >> 2] | 0) == ((1 << HEAP32[$96 + 72 >> 2]) - 1 & $95 >>> (($98 + $97 | 0) >>> 0) | 0)) {
       $103 = HEAP32[$101 + ($and10_i_i23 * 60 | 0) + 8 >> 2] | 0;
       if (($103 | 0) == 0) {
        $110 = $94;
        $109 = $93;
        $108 = $92;
        $107 = $91;
        $106 = $90;
       } else {
        if ($and11_i_i24 >>> 0 >= (HEAP32[$103 + 24 >> 2] | 0) >>> 0 | ($arrayidx_i35 | 0) == 0) {
         $110 = $94;
         $109 = $93;
         $108 = $92;
         $107 = $91;
         $106 = $90;
        } else {
         __ZNK14dtNavMeshQuery24closestPointOnPolyInTileEPK10dtMeshTilePK6dtPolyPKfPf($arrayidx_i35, (HEAP32[$101 + ($and10_i_i23 * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i24 << 5) | 0, $center, $arraydecay3);
         $_pre20 = +HEAPF32[$arrayidx2_i10 >> 2];
         $_pre21 = +HEAPF32[$arrayidx5_i12 >> 2];
         $110 = +HEAPF32[$arraydecay3 >> 2];
         $109 = $_pre20;
         $108 = $_pre21;
         $107 = $_pre20;
         $106 = $_pre21;
        }
       }
      } else {
       $110 = $94;
       $109 = $93;
       $108 = $92;
       $107 = $91;
       $106 = $90;
      }
     } else {
      $110 = $94;
      $109 = $93;
      $108 = $92;
      $107 = $91;
      $106 = $90;
     }
    }
    $sub_i = $110 - +HEAPF32[$center >> 2];
    $sub4_i = $109 - +HEAPF32[$arrayidx3_i_i >> 2];
    $sub7_i = $108 - +HEAPF32[$arrayidx7_i_i >> 2];
    $add10_i = $sub_i * $sub_i + $sub4_i * $sub4_i + $sub7_i * $sub7_i;
    if ($add10_i < $nearestDistanceSqr_015) {
     HEAPF32[$nearestPt >> 2] = $110;
     HEAPF32[$arrayidx3_i >> 2] = $107;
     HEAPF32[$arrayidx5_i >> 2] = $106;
     $nearestDistanceSqr_1 = $add10_i;
     $nearest_1 = $95;
     $115 = $107;
     $114 = $106;
    } else {
     $nearestDistanceSqr_1 = $nearestDistanceSqr_015;
     $nearest_1 = $nearest_014;
     $115 = $109;
     $114 = $108;
    }
    $inc = $i_016 + 1 | 0;
    if (($inc | 0) < ($storemerge_i37 | 0)) {
     $nearest_014 = $nearest_1;
     $nearestDistanceSqr_015 = $nearestDistanceSqr_1;
     $i_016 = $inc;
     $94 = $110;
     $93 = $115;
     $92 = $114;
     $91 = $107;
     $90 = $106;
    } else {
     $nearest_0_lcssa = $nearest_1;
     break;
    }
   }
  }
 } while (0);
 if (($nearestRef | 0) == 0) {
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return 1073741824;
 }
 HEAP32[$nearestRef >> 2] = $nearest_0_lcssa;
 $$etemp$3$0 = 512;
 $$etemp$3$1 = 0;
 STACKTOP = sp;
 return 1073741824;
}
function __ZN14dtNavMeshQuery20updateSlicedFindPathEiPi($this, $maxIter, $doneIters) {
 $this = $this | 0;
 $maxIter = $maxIter | 0;
 $doneIters = $doneIters | 0;
 var $left_i = 0, $right_i = 0, $status = 0, $0 = 0, $m_nav = 0, $1 = 0, $2 = 0, $3 = 0, $sub3_i_i = 0, $4 = 0, $sub5_i_i = 0, $and10_i_i = 0, $and11_i_i = 0, $5 = 0, $add_i_i4 = 0, $sub_i_i5 = 0, $7 = 0, $9 = 0, $endRef = 0, $11 = 0, $and10_i_i41 = 0, $and11_i_i42 = 0, $13 = 0, $m_openList = 0, $filter = 0, $m_nodePool90 = 0, $arraydecay_i = 0, $arraydecay2_i = 0, $arrayidx6_i106 = 0, $arrayidx7_i = 0, $arrayidx11_i = 0, $arrayidx12_i = 0, $arraydecay121 = 0, $arrayidx2_i_i = 0, $arrayidx5_i_i = 0, $lastBestNodeCost = 0, $lastBestNode207 = 0, $iter_0124 = 0, $17 = 0, $m_size_i66 = 0, $18 = 0, $inc = 0, $m_heap_i71 = 0, $19 = 0, $20 = 0, $dec_i = 0, $21 = 0, $22 = 0, $child_016_i = 0, $i_addr_015_i = 0, $add2_i = 0, $child_1_i = 0, $child_0_i = 0, $28 = 0.0, $parent_012_in_in_i_i = 0, $parent_012_in_i_i = 0, $parent_012_i_i = 0, $29 = 0, $30 = 0, $i_addr_0_lcssa_i_i = 0, $33 = 0, $bf_clear23 = 0, $34 = 0, $or33 = 0, $37 = 0, $38 = 0, $sub3_i_i82 = 0, $39 = 0, $sub5_i_i85 = 0, $and10_i_i87 = 0, $and11_i_i88 = 0, $40 = 0, $add_i_i94 = 0, $sub_i_i97 = 0, $42 = 0, $arrayidx_i101 = 0, $44 = 0, $46 = 0, $arrayidx21_i = 0, $49 = 0, $and10_i_i120 = 0, $51 = 0, $parentRef_0111 = 0, $i_0113 = 0, $arraydecay112 = 0, $arrayidx3_i_i86 = 0, $arrayidx6_i_i89 = 0, $cost123 = 0, $tobool_i = 0, $sub_ptr_lhs_cast_i = 0, $links_phi_trans_insert = 0, $areaAndtype_i_i97 = 0, $53 = 0, $i_0115 = 0, $54 = 0, $55 = 0, $57 = 0, $and10_i_i154 = 0, $and11_i_i155 = 0, $58 = 0, $arrayidx_i157 = 0, $59 = 0, $arrayidx4_i159 = 0, $60 = 0, $61 = 0, $call91 = 0, $66 = 0, $arraydecay114 = 0, $sub_i_i84 = 0.0, $arrayidx2_i_i85 = 0, $sub4_i_i87 = 0.0, $arrayidx5_i_i88 = 0, $sub7_i_i90 = 0.0, $call_i78 = 0.0, $mul_i101 = 0.0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $sub7_i_i = 0.0, $call_i = 0.0, $sub_i = 0.0, $sub4_i = 0.0, $sub7_i = 0.0, $heuristic_0 = 0.0, $cost_0 = 0.0, $add142 = 0.0, $bf_load144 = 0, $and146 = 0, $tobool147 = 0, $retval_0_i = 0, $104 = 0, $105 = 0, $m_heap_i = 0, $106 = 0, $i_06_i = 0, $inc_i70 = 0, $108 = 0, $parent_012_in_in_i19 = 0, $parent_012_in_i20 = 0, $parent_012_i21 = 0, $109 = 0, $_pre166 = 0, $111 = 0, $i_addr_0_lcssa_i29 = 0, $112 = 0, $m_size_i65 = 0, $113 = 0, $m_heap_i10 = 0, $parent_012_in_in_i = 0, $parent_012_in_i = 0, $parent_012_i = 0, $114 = 0, $115 = 0, $i_addr_0_lcssa_i = 0, $iter_0_lcssa = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $left_i = sp | 0;
 $right_i = sp + 16 | 0;
 $status = $this + 4 | 0;
 $0 = HEAP32[$status >> 2] | 0;
 if (($0 & 536870912 | 0) == 0) {
  $retval_0 = $0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $m_nav = $this | 0;
 $1 = HEAP32[$m_nav >> 2] | 0;
 $2 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) != 0) {
  $3 = HEAP32[$1 + 76 >> 2] | 0;
  $sub3_i_i = (1 << $3) - 1 | 0;
  $4 = HEAP32[$1 + 80 >> 2] | 0;
  $sub5_i_i = (1 << $4) - 1 | 0;
  $and10_i_i = $2 >>> ($4 >>> 0) & $sub3_i_i;
  $and11_i_i = $sub5_i_i & $2;
  $5 = HEAP32[$1 + 48 >> 2] | 0;
  if ($and10_i_i >>> 0 < $5 >>> 0) {
   $add_i_i4 = $4 + $3 | 0;
   $sub_i_i5 = (1 << HEAP32[$1 + 72 >> 2]) - 1 | 0;
   $7 = HEAP32[$1 + 68 >> 2] | 0;
   if ((HEAP32[$7 + ($and10_i_i * 60 | 0) >> 2] | 0) == ($sub_i_i5 & $2 >>> ($add_i_i4 >>> 0) | 0)) {
    $9 = HEAP32[$7 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
    if (($9 | 0) != 0) {
     if ($and11_i_i >>> 0 < (HEAP32[$9 + 24 >> 2] | 0) >>> 0) {
      $endRef = $this + 20 | 0;
      $11 = HEAP32[$endRef >> 2] | 0;
      if (($11 | 0) != 0) {
       $and10_i_i41 = $11 >>> ($4 >>> 0) & $sub3_i_i;
       $and11_i_i42 = $sub5_i_i & $11;
       if ($and10_i_i41 >>> 0 < $5 >>> 0) {
        if ((HEAP32[$7 + ($and10_i_i41 * 60 | 0) >> 2] | 0) == ($sub_i_i5 & $11 >>> ($add_i_i4 >>> 0) | 0)) {
         $13 = HEAP32[$7 + ($and10_i_i41 * 60 | 0) + 8 >> 2] | 0;
         if (($13 | 0) != 0) {
          if ($and11_i_i42 >>> 0 < (HEAP32[$13 + 24 >> 2] | 0) >>> 0) {
           $m_openList = $this + 60 | 0;
           L15 : do {
            if (($maxIter | 0) > 0) {
             $filter = $this + 48 | 0;
             $m_nodePool90 = $this + 56 | 0;
             $arraydecay_i = $left_i | 0;
             $arraydecay2_i = $right_i | 0;
             $arrayidx6_i106 = $left_i + 4 | 0;
             $arrayidx7_i = $right_i + 4 | 0;
             $arrayidx11_i = $left_i + 8 | 0;
             $arrayidx12_i = $right_i + 8 | 0;
             $arraydecay121 = $this + 36 | 0;
             $arrayidx2_i_i = $this + 40 | 0;
             $arrayidx5_i_i = $this + 44 | 0;
             $lastBestNodeCost = $this + 12 | 0;
             $lastBestNode207 = $this + 8 | 0;
             $iter_0124 = 0;
             while (1) {
              $17 = HEAP32[$m_openList >> 2] | 0;
              $m_size_i66 = $17 + 8 | 0;
              $18 = HEAP32[$m_size_i66 >> 2] | 0;
              if (($18 | 0) == 0) {
               $iter_0_lcssa = $iter_0124;
               break L15;
              }
              $inc = $iter_0124 + 1 | 0;
              $m_heap_i71 = $17 | 0;
              $19 = HEAP32[$m_heap_i71 >> 2] | 0;
              $20 = HEAP32[$19 >> 2] | 0;
              $dec_i = $18 - 1 | 0;
              HEAP32[$m_size_i66 >> 2] = $dec_i;
              $21 = HEAP32[$19 + ($dec_i << 2) >> 2] | 0;
              L20 : do {
               if (($dec_i | 0) > 1) {
                $i_addr_015_i = 0;
                $child_016_i = 1;
                $22 = $19;
                while (1) {
                 $add2_i = $child_016_i + 1 | 0;
                 if (($add2_i | 0) < ($dec_i | 0)) {
                  if (+HEAPF32[(HEAP32[$22 + ($child_016_i << 2) >> 2] | 0) + 16 >> 2] > +HEAPF32[(HEAP32[$22 + ($add2_i << 2) >> 2] | 0) + 16 >> 2]) {
                   $child_1_i = $add2_i;
                  } else {
                   $child_1_i = $child_016_i;
                  }
                 } else {
                  $child_1_i = $child_016_i;
                 }
                 HEAP32[$22 + ($i_addr_015_i << 2) >> 2] = HEAP32[$22 + ($child_1_i << 2) >> 2];
                 $child_0_i = $child_1_i << 1 | 1;
                 if (($child_0_i | 0) >= ($dec_i | 0)) {
                  break;
                 }
                 $i_addr_015_i = $child_1_i;
                 $child_016_i = $child_0_i;
                 $22 = HEAP32[$m_heap_i71 >> 2] | 0;
                }
                if (($child_1_i | 0) > 0) {
                 $28 = +HEAPF32[$21 + 16 >> 2];
                 $parent_012_in_in_i_i = $child_1_i;
                 while (1) {
                  $parent_012_in_i_i = $parent_012_in_in_i_i - 1 | 0;
                  $parent_012_i_i = ($parent_012_in_i_i | 0) / 2 | 0;
                  $29 = HEAP32[$m_heap_i71 >> 2] | 0;
                  $30 = HEAP32[$29 + ($parent_012_i_i << 2) >> 2] | 0;
                  if (!(+HEAPF32[$30 + 16 >> 2] > $28)) {
                   $i_addr_0_lcssa_i_i = $parent_012_in_in_i_i;
                   break L20;
                  }
                  HEAP32[$29 + ($parent_012_in_in_i_i << 2) >> 2] = $30;
                  if (($parent_012_in_i_i | 0) > 1) {
                   $parent_012_in_in_i_i = $parent_012_i_i;
                  } else {
                   $i_addr_0_lcssa_i_i = $parent_012_i_i;
                   break;
                  }
                 }
                } else {
                 $i_addr_0_lcssa_i_i = $child_1_i;
                }
               } else {
                $i_addr_0_lcssa_i_i = 0;
               }
              } while (0);
              HEAP32[(HEAP32[$m_heap_i71 >> 2] | 0) + ($i_addr_0_lcssa_i_i << 2) >> 2] = $21;
              $33 = $20 + 20 | 0;
              $bf_clear23 = HEAP32[$33 >> 2] & 1073741823;
              HEAP32[$33 >> 2] = $bf_clear23 | -2147483648;
              $34 = HEAP32[$20 + 24 >> 2] | 0;
              if (($34 | 0) == (HEAP32[$endRef >> 2] | 0)) {
               label = 28;
               break;
              }
              $37 = HEAP32[$m_nav >> 2] | 0;
              if (($34 | 0) == 0) {
               label = 35;
               break;
              }
              $38 = HEAP32[$37 + 76 >> 2] | 0;
              $sub3_i_i82 = (1 << $38) - 1 | 0;
              $39 = HEAP32[$37 + 80 >> 2] | 0;
              $sub5_i_i85 = (1 << $39) - 1 | 0;
              $and10_i_i87 = $34 >>> ($39 >>> 0) & $sub3_i_i82;
              $and11_i_i88 = $sub5_i_i85 & $34;
              $40 = HEAP32[$37 + 48 >> 2] | 0;
              if (!($and10_i_i87 >>> 0 < $40 >>> 0)) {
               label = 35;
               break;
              }
              $add_i_i94 = $39 + $38 | 0;
              $sub_i_i97 = (1 << HEAP32[$37 + 72 >> 2]) - 1 | 0;
              $42 = HEAP32[$37 + 68 >> 2] | 0;
              $arrayidx_i101 = $42 + ($and10_i_i87 * 60 | 0) | 0;
              if ((HEAP32[$arrayidx_i101 >> 2] | 0) != ($sub_i_i97 & $34 >>> ($add_i_i94 >>> 0) | 0)) {
               label = 35;
               break;
              }
              $44 = HEAP32[$42 + ($and10_i_i87 * 60 | 0) + 8 >> 2] | 0;
              if (($44 | 0) == 0) {
               label = 35;
               break;
              }
              if (!($and11_i_i88 >>> 0 < (HEAP32[$44 + 24 >> 2] | 0) >>> 0)) {
               label = 35;
               break;
              }
              $46 = HEAP32[$42 + ($and10_i_i87 * 60 | 0) + 12 >> 2] | 0;
              $arrayidx21_i = $46 + ($and11_i_i88 << 5) | 0;
              if (($bf_clear23 | 0) == 0) {
               $parentRef_0111 = 0;
              } else {
               $49 = HEAP32[(HEAP32[HEAP32[$m_nodePool90 >> 2] >> 2] | 0) + (($bf_clear23 - 1 | 0) * 28 | 0) + 24 >> 2] | 0;
               if (($49 | 0) == 0) {
                $parentRef_0111 = 0;
               } else {
                $and10_i_i120 = $49 >>> ($39 >>> 0) & $sub3_i_i82;
                if (!($and10_i_i120 >>> 0 < $40 >>> 0)) {
                 label = 43;
                 break;
                }
                if ((HEAP32[$42 + ($and10_i_i120 * 60 | 0) >> 2] | 0) != ($sub_i_i97 & $49 >>> ($add_i_i94 >>> 0) | 0)) {
                 label = 43;
                 break;
                }
                $51 = HEAP32[$42 + ($and10_i_i120 * 60 | 0) + 8 >> 2] | 0;
                if (($51 | 0) == 0) {
                 label = 43;
                 break;
                }
                if (($sub5_i_i85 & $49) >>> 0 < (HEAP32[$51 + 24 >> 2] | 0) >>> 0) {
                 $parentRef_0111 = $49;
                } else {
                 label = 43;
                 break;
                }
               }
              }
              $i_0113 = HEAP32[$arrayidx21_i >> 2] | 0;
              if (!(($i_0113 | 0) == -1)) {
               $arraydecay112 = $20 | 0;
               $arrayidx3_i_i86 = $20 + 4 | 0;
               $arrayidx6_i_i89 = $20 + 8 | 0;
               $cost123 = $20 + 12 | 0;
               $tobool_i = ($20 | 0) == 0;
               $sub_ptr_lhs_cast_i = $20;
               $links_phi_trans_insert = $42 + ($and10_i_i87 * 60 | 0) + 20 | 0;
               $areaAndtype_i_i97 = $46 + ($and11_i_i88 << 5) + 31 | 0;
               $i_0115 = $i_0113;
               $53 = HEAP32[$links_phi_trans_insert >> 2] | 0;
               do {
                $54 = HEAP32[$53 + ($i_0115 * 12 | 0) >> 2] | 0;
                do {
                 if (!(($54 | 0) == 0 | ($54 | 0) == ($parentRef_0111 | 0))) {
                  $55 = HEAP32[$m_nav >> 2] | 0;
                  $57 = HEAP32[$55 + 80 >> 2] | 0;
                  $and10_i_i154 = $54 >>> ($57 >>> 0) & (1 << HEAP32[$55 + 76 >> 2]) - 1;
                  $and11_i_i155 = (1 << $57) - 1 & $54;
                  $58 = HEAP32[$55 + 68 >> 2] | 0;
                  $arrayidx_i157 = $58 + ($and10_i_i154 * 60 | 0) | 0;
                  $59 = HEAP32[$58 + ($and10_i_i154 * 60 | 0) + 12 >> 2] | 0;
                  $arrayidx4_i159 = $59 + ($and11_i_i155 << 5) | 0;
                  $60 = HEAP32[$filter >> 2] | 0;
                  $61 = HEAP16[$59 + ($and11_i_i155 << 5) + 28 >> 1] | 0;
                  if (!((HEAP16[$60 + 256 >> 1] & $61) << 16 >> 16 == 0)) {
                   if ((HEAP16[$60 + 258 >> 1] & $61) << 16 >> 16 == 0) {
                    $call91 = __ZN10dtNodePool7getNodeEj(HEAP32[$m_nodePool90 >> 2] | 0, $54) | 0;
                    if (($call91 | 0) == 0) {
                     HEAP32[$status >> 2] = HEAP32[$status >> 2] | 32;
                     break;
                    }
                    $66 = $call91 + 20 | 0;
                    if ((HEAP32[$66 >> 2] | 0) >>> 0 < 1073741824 >>> 0) {
                     if ((__ZNK14dtNavMeshQuery15getPortalPointsEjPK6dtPolyPK10dtMeshTilejS2_S5_PfS6_($34, $arrayidx21_i, $arrayidx_i101, $54, $arrayidx4_i159, $arrayidx_i157, $arraydecay_i, $arraydecay2_i) | 0) >= 0) {
                      HEAPF32[$call91 >> 2] = (+HEAPF32[$arraydecay_i >> 2] + +HEAPF32[$arraydecay2_i >> 2]) * .5;
                      HEAPF32[$call91 + 4 >> 2] = (+HEAPF32[$arrayidx6_i106 >> 2] + +HEAPF32[$arrayidx7_i >> 2]) * .5;
                      HEAPF32[$call91 + 8 >> 2] = (+HEAPF32[$arrayidx11_i >> 2] + +HEAPF32[$arrayidx12_i >> 2]) * .5;
                     }
                    }
                    $arraydecay114 = $call91 | 0;
                    $sub_i_i84 = +HEAPF32[$arraydecay114 >> 2] - +HEAPF32[$arraydecay112 >> 2];
                    $arrayidx2_i_i85 = $call91 + 4 | 0;
                    $sub4_i_i87 = +HEAPF32[$arrayidx2_i_i85 >> 2] - +HEAPF32[$arrayidx3_i_i86 >> 2];
                    $arrayidx5_i_i88 = $call91 + 8 | 0;
                    $sub7_i_i90 = +HEAPF32[$arrayidx5_i_i88 >> 2] - +HEAPF32[$arrayidx6_i_i89 >> 2];
                    $call_i78 = +Math_sqrt($sub_i_i84 * $sub_i_i84 + $sub4_i_i87 * $sub4_i_i87 + $sub7_i_i90 * $sub7_i_i90);
                    $mul_i101 = $call_i78 * +HEAPF32[(HEAP32[$filter >> 2] | 0) + ((HEAP8[$areaAndtype_i_i97 >> 0] & 63) << 2) >> 2];
                    if (($54 | 0) == (HEAP32[$endRef >> 2] | 0)) {
                     $sub_i_i = +HEAPF32[$arraydecay121 >> 2] - +HEAPF32[$arraydecay114 >> 2];
                     $sub4_i_i = +HEAPF32[$arrayidx2_i_i >> 2] - +HEAPF32[$arrayidx2_i_i85 >> 2];
                     $sub7_i_i = +HEAPF32[$arrayidx5_i_i >> 2] - +HEAPF32[$arrayidx5_i_i88 >> 2];
                     $call_i = +Math_sqrt($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i + $sub7_i_i * $sub7_i_i);
                     $cost_0 = $call_i * +HEAPF32[(HEAP32[$filter >> 2] | 0) + ((HEAP8[$59 + ($and11_i_i155 << 5) + 31 >> 0] & 63) << 2) >> 2] + ($mul_i101 + +HEAPF32[$cost123 >> 2]);
                     $heuristic_0 = 0.0;
                    } else {
                     $sub_i = +HEAPF32[$arraydecay121 >> 2] - +HEAPF32[$arraydecay114 >> 2];
                     $sub4_i = +HEAPF32[$arrayidx2_i_i >> 2] - +HEAPF32[$arrayidx2_i_i85 >> 2];
                     $sub7_i = +HEAPF32[$arrayidx5_i_i >> 2] - +HEAPF32[$arrayidx5_i_i88 >> 2];
                     $cost_0 = $mul_i101 + +HEAPF32[$cost123 >> 2];
                     $heuristic_0 = +Math_sqrt($sub_i * $sub_i + $sub4_i * $sub4_i + $sub7_i * $sub7_i) * .9990000128746033;
                    }
                    $add142 = $heuristic_0 + $cost_0;
                    $bf_load144 = HEAP32[$66 >> 2] | 0;
                    $and146 = $bf_load144 & 1073741824;
                    $tobool147 = ($and146 | 0) == 0;
                    if (!$tobool147) {
                     if (!($add142 < +HEAPF32[$call91 + 16 >> 2])) {
                      break;
                     }
                    }
                    if (($bf_load144 | 0) < 0) {
                     if (!($add142 < +HEAPF32[$call91 + 16 >> 2])) {
                      break;
                     }
                    }
                    if ($tobool_i) {
                     $retval_0_i = 0;
                    } else {
                     $retval_0_i = (($sub_ptr_lhs_cast_i - (HEAP32[HEAP32[$m_nodePool90 >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
                    }
                    HEAP32[$call91 + 24 >> 2] = $54;
                    HEAP32[$66 >> 2] = $and146 | $retval_0_i;
                    HEAPF32[$call91 + 12 >> 2] = $cost_0;
                    HEAPF32[$call91 + 16 >> 2] = $add142;
                    L75 : do {
                     if ($tobool147) {
                      HEAP32[$66 >> 2] = $retval_0_i | 1073741824;
                      $112 = HEAP32[$m_openList >> 2] | 0;
                      $m_size_i65 = $112 + 8 | 0;
                      $113 = HEAP32[$m_size_i65 >> 2] | 0;
                      HEAP32[$m_size_i65 >> 2] = $113 + 1;
                      $m_heap_i10 = $112 | 0;
                      L77 : do {
                       if (($113 | 0) > 0) {
                        $parent_012_in_in_i = $113;
                        while (1) {
                         $parent_012_in_i = $parent_012_in_in_i - 1 | 0;
                         $parent_012_i = ($parent_012_in_i | 0) / 2 | 0;
                         $114 = HEAP32[$m_heap_i10 >> 2] | 0;
                         $115 = HEAP32[$114 + ($parent_012_i << 2) >> 2] | 0;
                         if (!(+HEAPF32[$115 + 16 >> 2] > $add142)) {
                          $i_addr_0_lcssa_i = $parent_012_in_in_i;
                          break L77;
                         }
                         HEAP32[$114 + ($parent_012_in_in_i << 2) >> 2] = $115;
                         if (($parent_012_in_i | 0) > 1) {
                          $parent_012_in_in_i = $parent_012_i;
                         } else {
                          $i_addr_0_lcssa_i = $parent_012_i;
                          break;
                         }
                        }
                       } else {
                        $i_addr_0_lcssa_i = $113;
                       }
                      } while (0);
                      HEAP32[(HEAP32[$m_heap_i10 >> 2] | 0) + ($i_addr_0_lcssa_i << 2) >> 2] = $call91;
                     } else {
                      $104 = HEAP32[$m_openList >> 2] | 0;
                      $105 = HEAP32[$104 + 8 >> 2] | 0;
                      if (($105 | 0) > 0) {
                       $m_heap_i = $104 | 0;
                       $106 = HEAP32[$m_heap_i >> 2] | 0;
                       $i_06_i = 0;
                       while (1) {
                        $inc_i70 = $i_06_i + 1 | 0;
                        if ((HEAP32[$106 + ($i_06_i << 2) >> 2] | 0) == ($call91 | 0)) {
                         break;
                        }
                        if (($inc_i70 | 0) < ($105 | 0)) {
                         $i_06_i = $inc_i70;
                        } else {
                         break L75;
                        }
                       }
                       L88 : do {
                        if (($i_06_i | 0) > 0) {
                         $parent_012_in_in_i19 = $i_06_i;
                         $108 = $106;
                         while (1) {
                          $parent_012_in_i20 = $parent_012_in_in_i19 - 1 | 0;
                          $parent_012_i21 = ($parent_012_in_i20 | 0) / 2 | 0;
                          $109 = HEAP32[$108 + ($parent_012_i21 << 2) >> 2] | 0;
                          if (!(+HEAPF32[$109 + 16 >> 2] > $add142)) {
                           $i_addr_0_lcssa_i29 = $parent_012_in_in_i19;
                           $111 = $108;
                           break L88;
                          }
                          HEAP32[$108 + ($parent_012_in_in_i19 << 2) >> 2] = $109;
                          $_pre166 = HEAP32[$m_heap_i >> 2] | 0;
                          if (($parent_012_in_i20 | 0) > 1) {
                           $parent_012_in_in_i19 = $parent_012_i21;
                           $108 = $_pre166;
                          } else {
                           $i_addr_0_lcssa_i29 = $parent_012_i21;
                           $111 = $_pre166;
                           break;
                          }
                         }
                        } else {
                         $i_addr_0_lcssa_i29 = $i_06_i;
                         $111 = $106;
                        }
                       } while (0);
                       HEAP32[$111 + ($i_addr_0_lcssa_i29 << 2) >> 2] = $call91;
                      }
                     }
                    } while (0);
                    if ($heuristic_0 < +HEAPF32[$lastBestNodeCost >> 2]) {
                     HEAPF32[$lastBestNodeCost >> 2] = $heuristic_0;
                     HEAP32[$lastBestNode207 >> 2] = $call91;
                    }
                   }
                  }
                 }
                } while (0);
                $53 = HEAP32[$links_phi_trans_insert >> 2] | 0;
                $i_0115 = HEAP32[$53 + ($i_0115 * 12 | 0) + 4 >> 2] | 0;
               } while (!(($i_0115 | 0) == -1));
              }
              if (($inc | 0) < ($maxIter | 0)) {
               $iter_0124 = $inc;
              } else {
               $iter_0_lcssa = $inc;
               break L15;
              }
             }
             if ((label | 0) == 28) {
              HEAP32[$lastBestNode207 >> 2] = $20;
              $or33 = HEAP32[$status >> 2] & 16777215 | 1073741824;
              HEAP32[$status >> 2] = $or33;
              if (($doneIters | 0) == 0) {
               $retval_0 = $or33;
               STACKTOP = sp;
               return $retval_0 | 0;
              }
              HEAP32[$doneIters >> 2] = $inc;
              $retval_0 = HEAP32[$status >> 2] | 0;
              STACKTOP = sp;
              return $retval_0 | 0;
             } else if ((label | 0) == 35) {
              HEAP32[$status >> 2] = -2147483648;
              if (($doneIters | 0) == 0) {
               $retval_0 = -2147483648;
               STACKTOP = sp;
               return $retval_0 | 0;
              }
              HEAP32[$doneIters >> 2] = $inc;
              $retval_0 = HEAP32[$status >> 2] | 0;
              STACKTOP = sp;
              return $retval_0 | 0;
             } else if ((label | 0) == 43) {
              HEAP32[$status >> 2] = -2147483648;
              if (($doneIters | 0) == 0) {
               $retval_0 = -2147483648;
               STACKTOP = sp;
               return $retval_0 | 0;
              }
              HEAP32[$doneIters >> 2] = $inc;
              $retval_0 = HEAP32[$status >> 2] | 0;
              STACKTOP = sp;
              return $retval_0 | 0;
             }
            } else {
             $iter_0_lcssa = 0;
            }
           } while (0);
           if ((HEAP32[(HEAP32[$m_openList >> 2] | 0) + 8 >> 2] | 0) == 0) {
            HEAP32[$status >> 2] = HEAP32[$status >> 2] & 16777215 | 1073741824;
           }
           if (($doneIters | 0) != 0) {
            HEAP32[$doneIters >> 2] = $iter_0_lcssa;
           }
           $retval_0 = HEAP32[$status >> 2] | 0;
           STACKTOP = sp;
           return $retval_0 | 0;
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 HEAP32[$status >> 2] = -2147483648;
 $retval_0 = -2147483648;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $__p_i_i_i_i = 0, $ref_tmp6 = 0, $ref_tmp16 = 0, $ref_tmp20 = 0, $ref_tmp41 = 0, $ref_tmp45 = 0, $ref_tmp51 = 0, $agg_tmp60 = 0, $agg_tmp61 = 0, $ref_tmp68 = 0, $__locale_2_i_i78 = 0, $1 = 0, $sub_i_i_i = 0, $9 = 0, $10 = 0, $exception_i_i_i = 0, $12 = 0, $13 = 0, $25 = 0, $add_ptr_i = 0, $call_i76 = 0, $sub_ptr_sub_i = 0, $29 = 0, $add_ptr_i81 = 0, $call_i83 = 0, $sub_ptr_sub_i88 = 0, $add_ptr = 0, $call5 = 0, $34 = 0, $38 = 0, $cond_i_i100272 = 0, $cond_i = 0, $call_i106 = 0, $45 = 0, $46 = 0, $52 = 0, $call_i113 = 0, $60 = 0, $call_i125 = 0, $63 = 0, $call_i139 = 0, $66 = 0, $call_i151 = 0, $69 = 0, $call_i163 = 0, $72 = 0, $__sbuf__i_i_i_i25 = 0, $75 = 0, $agg_tmp3622_sroa_0_0 = 0, $76 = 0, $77 = 0, $retval_0_i_i_i_i_i37 = 0, $82 = 0, $83 = 0, $retval_0_i_i12_i_i_i55 = 0, $agg_tmp3622_sroa_0_2 = 0, $88 = 0, $89 = 0, $retval_0_i_i_i67 = 0, $95 = 0, $__ninp__i_i5_i = 0, $96 = 0, $_pre_i15_i_i46_i = 0, $100 = 0, $101 = 0, $retval_0_i_i_i_i24_i = 0, $106 = 0, $107 = 0, $retval_0_i_i12_i_i43_i = 0, $tm_hour38 = 0, $114 = 0, $add_ptr_i175 = 0, $call_i178 = 0, $117 = 0, $cond_i_i184 = 0, $119 = 0, $cond_i18_i = 0, $call6_i = 0, $sub_ptr_sub_i190 = 0, $125 = 0, $126 = 0, $132 = 0, $call_i196 = 0, $140 = 0, $141 = 0, $call_i209 = 0, $149 = 0, $151 = 0, $add_ptr64 = 0, $call67 = 0, $160 = 0, $164 = 0, $cond_i_i234278 = 0, $cond_i244 = 0, $tm_year = 0, $call_i250 = 0, $__t_0_i = 0, $call_i262 = 0, $177 = 0, $__sbuf__i_i_i_i = 0, $178 = 0, $179 = 0, $retval_0_i_i_i_i_i = 0, $184 = 0, $185 = 0, $retval_0_i_i12_i_i_i = 0, $_pre_i15_i_i4856_i = 0, $191 = 0, $192 = 0, $retval_0_i_i_i = 0, $200 = 0, $__ninp__i_i7_i = 0, $201 = 0, $205 = 0, $206 = 0, $retval_0_i_i_i_i26_i = 0, $211 = 0, $212 = 0, $retval_0_i_i12_i_i45_i = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $ref_tmp6 = sp + 16 | 0;
 $ref_tmp16 = sp + 24 | 0;
 $ref_tmp20 = sp + 32 | 0;
 $ref_tmp41 = sp + 40 | 0;
 $ref_tmp45 = sp + 48 | 0;
 $ref_tmp51 = sp + 56 | 0;
 $agg_tmp60 = sp + 64 | 0;
 $agg_tmp61 = sp + 72 | 0;
 $ref_tmp68 = sp + 80 | 0;
 HEAP32[$__err >> 2] = 0;
 $__locale_2_i_i78 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i78 + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i_i78 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i78 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $10 = HEAP32[$9 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($10 | 0) != 0) {
   $12 = $10;
   $13 = $__locale_2_i_i78 + 4 | 0;
   if (((tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i78 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i78);
   }
   L10 : do {
    switch ($__fmt << 24 >> 24 | 0) {
    case 97:
    case 65:
     {
      $25 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i = $this + 8 | 0;
      $call_i76 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
      $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $25, $call_i76, $call_i76 + 168 | 0, $12, $__err, 0) | 0) - $call_i76 | 0;
      if (($sub_ptr_sub_i | 0) < 168) {
       HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 7 | 0;
      }
      break;
     }
    case 98:
    case 66:
    case 104:
     {
      $29 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i81 = $this + 8 | 0;
      $call_i83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i81 >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i81) | 0;
      $sub_ptr_sub_i88 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $29, $call_i83, $call_i83 + 288 | 0, $12, $__err, 0) | 0) - $call_i83 | 0;
      if (($sub_ptr_sub_i88 | 0) < 288) {
       HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i88 | 0) / 12 | 0 | 0) % 12 | 0;
      }
      break;
     }
    case 99:
     {
      $add_ptr = $this + 8 | 0;
      $call5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 12 >> 2] & 255]($add_ptr) | 0;
      $34 = $__b | 0;
      $38 = HEAP8[$call5 >> 0] | 0;
      if (($38 & 1) == 0) {
       $cond_i = ($38 & 255) >>> 1;
       $cond_i_i100272 = $call5 + 4 | 0;
      } else {
       $cond_i = HEAP32[$call5 + 4 >> 2] | 0;
       $cond_i_i100272 = HEAP32[$call5 + 8 >> 2] | 0;
      }
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp6, $this, HEAP32[$34 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i100272, $cond_i_i100272 + ($cond_i << 2) | 0);
      HEAP32[$34 >> 2] = HEAP32[$ref_tmp6 >> 2];
      break;
     }
    case 100:
    case 101:
     {
      $call_i106 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $45 = HEAP32[$__err >> 2] | 0;
      if (($45 & 4 | 0) == 0 & ($call_i106 | 0) > 0 & ($call_i106 | 0) < 32) {
       HEAP32[$__tm + 12 >> 2] = $call_i106;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $45 | 4;
       break L10;
      }
      break;
     }
    case 68:
     {
      $46 = $__b | 0;
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp16, $this, HEAP32[$46 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11032, 11064);
      HEAP32[$46 >> 2] = HEAP32[$ref_tmp16 >> 2];
      break;
     }
    case 70:
     {
      $52 = $__b | 0;
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp20, $this, HEAP32[$52 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11e3, 11032);
      HEAP32[$52 >> 2] = HEAP32[$ref_tmp20 >> 2];
      break;
     }
    case 72:
     {
      $call_i113 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $60 = HEAP32[$__err >> 2] | 0;
      if (($60 & 4 | 0) == 0 & ($call_i113 | 0) < 24) {
       HEAP32[$__tm + 8 >> 2] = $call_i113;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $60 | 4;
       break L10;
      }
      break;
     }
    case 73:
     {
      $call_i125 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $63 = HEAP32[$__err >> 2] | 0;
      if (($63 & 4 | 0) == 0 & ($call_i125 | 0) > 0 & ($call_i125 | 0) < 13) {
       HEAP32[$__tm + 8 >> 2] = $call_i125;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $63 | 4;
       break L10;
      }
      break;
     }
    case 106:
     {
      $call_i139 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 3) | 0;
      $66 = HEAP32[$__err >> 2] | 0;
      if (($66 & 4 | 0) == 0 & ($call_i139 | 0) < 366) {
       HEAP32[$__tm + 28 >> 2] = $call_i139;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $66 | 4;
       break L10;
      }
      break;
     }
    case 109:
     {
      $call_i151 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $69 = HEAP32[$__err >> 2] | 0;
      if (($69 & 4 | 0) == 0 & ($call_i151 | 0) < 13) {
       HEAP32[$__tm + 16 >> 2] = $call_i151 - 1;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $69 | 4;
       break L10;
      }
      break;
     }
    case 77:
     {
      $call_i163 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $72 = HEAP32[$__err >> 2] | 0;
      if (($72 & 4 | 0) == 0 & ($call_i163 | 0) < 60) {
       HEAP32[$__tm + 4 >> 2] = $call_i163;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $72 | 4;
       break L10;
      }
      break;
     }
    case 110:
    case 116:
     {
      $__sbuf__i_i_i_i25 = $__b | 0;
      $75 = $10;
      $agg_tmp3622_sroa_0_0 = HEAP32[$__e >> 2] | 0;
      while (1) {
       $76 = HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0;
       do {
        if (($76 | 0) == 0) {
         $82 = 1;
        } else {
         $77 = HEAP32[$76 + 12 >> 2] | 0;
         if (($77 | 0) == (HEAP32[$76 + 16 >> 2] | 0)) {
          $retval_0_i_i_i_i_i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 255]($76) | 0;
         } else {
          $retval_0_i_i_i_i_i37 = HEAP32[$77 >> 2] | 0;
         }
         if (($retval_0_i_i_i_i_i37 | 0) == -1) {
          HEAP32[$__sbuf__i_i_i_i25 >> 2] = 0;
          $82 = 1;
          break;
         } else {
          $82 = (HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0) == 0;
          break;
         }
        }
       } while (0);
       if (($agg_tmp3622_sroa_0_0 | 0) == 0) {
        label = 54;
       } else {
        $83 = HEAP32[$agg_tmp3622_sroa_0_0 + 12 >> 2] | 0;
        if (($83 | 0) == (HEAP32[$agg_tmp3622_sroa_0_0 + 16 >> 2] | 0)) {
         $retval_0_i_i12_i_i_i55 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp3622_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp3622_sroa_0_0) | 0;
        } else {
         $retval_0_i_i12_i_i_i55 = HEAP32[$83 >> 2] | 0;
        }
        if (($retval_0_i_i12_i_i_i55 | 0) == -1) {
         label = 54;
        } else {
         if ($82) {
          $agg_tmp3622_sroa_0_2 = $agg_tmp3622_sroa_0_0;
         } else {
          $_pre_i15_i_i46_i = $agg_tmp3622_sroa_0_0;
          break;
         }
        }
       }
       if ((label | 0) == 54) {
        label = 0;
        if ($82) {
         $_pre_i15_i_i46_i = 0;
         break;
        } else {
         $agg_tmp3622_sroa_0_2 = 0;
        }
       }
       $88 = HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0;
       $89 = HEAP32[$88 + 12 >> 2] | 0;
       if (($89 | 0) == (HEAP32[$88 + 16 >> 2] | 0)) {
        $retval_0_i_i_i67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 255]($88) | 0;
       } else {
        $retval_0_i_i_i67 = HEAP32[$89 >> 2] | 0;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$75 >> 2] | 0) + 12 >> 2] & 127]($12, 8192, $retval_0_i_i_i67) | 0)) {
        $_pre_i15_i_i46_i = $agg_tmp3622_sroa_0_2;
        break;
       }
       $95 = HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0;
       $__ninp__i_i5_i = $95 + 12 | 0;
       $96 = HEAP32[$__ninp__i_i5_i >> 2] | 0;
       if (($96 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 40 >> 2] & 255]($95) | 0;
        $agg_tmp3622_sroa_0_0 = $agg_tmp3622_sroa_0_2;
        continue;
       } else {
        HEAP32[$__ninp__i_i5_i >> 2] = $96 + 4;
        $agg_tmp3622_sroa_0_0 = $agg_tmp3622_sroa_0_2;
        continue;
       }
      }
      $100 = HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0;
      do {
       if (($100 | 0) == 0) {
        $106 = 1;
       } else {
        $101 = HEAP32[$100 + 12 >> 2] | 0;
        if (($101 | 0) == (HEAP32[$100 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i24_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 36 >> 2] & 255]($100) | 0;
        } else {
         $retval_0_i_i_i_i24_i = HEAP32[$101 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i24_i | 0) == -1) {
         HEAP32[$__sbuf__i_i_i_i25 >> 2] = 0;
         $106 = 1;
         break;
        } else {
         $106 = (HEAP32[$__sbuf__i_i_i_i25 >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($_pre_i15_i_i46_i | 0) == 0) {
       label = 75;
      } else {
       $107 = HEAP32[$_pre_i15_i_i46_i + 12 >> 2] | 0;
       if (($107 | 0) == (HEAP32[$_pre_i15_i_i46_i + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i43_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i46_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i46_i) | 0;
       } else {
        $retval_0_i_i12_i_i43_i = HEAP32[$107 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i43_i | 0) == -1) {
        label = 75;
       } else {
        if ($106) {
         break L10;
        }
       }
      }
      if ((label | 0) == 75) {
       if (!$106) {
        break L10;
       }
      }
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
      break;
     }
    case 112:
     {
      $tm_hour38 = $__tm + 8 | 0;
      $114 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i175 = $this + 8 | 0;
      $call_i178 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i175 >> 2] | 0) + 8 >> 2] & 255]($add_ptr_i175) | 0;
      $117 = HEAP8[$call_i178 >> 0] | 0;
      if (($117 & 1) == 0) {
       $cond_i_i184 = ($117 & 255) >>> 1;
      } else {
       $cond_i_i184 = HEAP32[$call_i178 + 4 >> 2] | 0;
      }
      $119 = HEAP8[$call_i178 + 12 >> 0] | 0;
      if (($119 & 1) == 0) {
       $cond_i18_i = ($119 & 255) >>> 1;
      } else {
       $cond_i18_i = HEAP32[$call_i178 + 16 >> 2] | 0;
      }
      if (($cond_i_i184 | 0) == (-$cond_i18_i | 0)) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
       break L10;
      }
      $call6_i = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $114, $call_i178, $call_i178 + 24 | 0, $12, $__err, 0) | 0;
      $sub_ptr_sub_i190 = $call6_i - $call_i178 | 0;
      if (($call6_i | 0) == ($call_i178 | 0)) {
       if ((HEAP32[$tm_hour38 >> 2] | 0) == 12) {
        HEAP32[$tm_hour38 >> 2] = 0;
        break L10;
       }
      }
      if (($sub_ptr_sub_i190 | 0) == 12) {
       $125 = HEAP32[$tm_hour38 >> 2] | 0;
       if (($125 | 0) < 12) {
        HEAP32[$tm_hour38 >> 2] = $125 + 12;
       }
      }
      break;
     }
    case 114:
     {
      $126 = $__b | 0;
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp41, $this, HEAP32[$126 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 10952, 10996);
      HEAP32[$126 >> 2] = HEAP32[$ref_tmp41 >> 2];
      break;
     }
    case 82:
     {
      $132 = $__b | 0;
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp45, $this, HEAP32[$132 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 10928, 10948);
      HEAP32[$132 >> 2] = HEAP32[$ref_tmp45 >> 2];
      break;
     }
    case 83:
     {
      $call_i196 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $140 = HEAP32[$__err >> 2] | 0;
      if (($140 & 4 | 0) == 0 & ($call_i196 | 0) < 61) {
       HEAP32[$__tm >> 2] = $call_i196;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $140 | 4;
       break L10;
      }
      break;
     }
    case 84:
     {
      $141 = $__b | 0;
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp51, $this, HEAP32[$141 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 10896, 10928);
      HEAP32[$141 >> 2] = HEAP32[$ref_tmp51 >> 2];
      break;
     }
    case 119:
     {
      $call_i209 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 1) | 0;
      $149 = HEAP32[$__err >> 2] | 0;
      if (($149 & 4 | 0) == 0 & ($call_i209 | 0) < 7) {
       HEAP32[$__tm + 24 >> 2] = $call_i209;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $149 | 4;
       break L10;
      }
      break;
     }
    case 120:
     {
      $151 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
      HEAP32[$agg_tmp60 >> 2] = HEAP32[$__b >> 2];
      HEAP32[$agg_tmp61 >> 2] = HEAP32[$__e >> 2];
      FUNCTION_TABLE_viiiiiii[$151 & 127]($agg_result, $this, $agg_tmp60, $agg_tmp61, $__iob, $__err, $__tm);
      STACKTOP = sp;
      return;
     }
    case 88:
     {
      $add_ptr64 = $this + 8 | 0;
      $call67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr64 >> 2] | 0) + 24 >> 2] & 255]($add_ptr64) | 0;
      $160 = $__b | 0;
      $164 = HEAP8[$call67 >> 0] | 0;
      if (($164 & 1) == 0) {
       $cond_i244 = ($164 & 255) >>> 1;
       $cond_i_i234278 = $call67 + 4 | 0;
      } else {
       $cond_i244 = HEAP32[$call67 + 4 >> 2] | 0;
       $cond_i_i234278 = HEAP32[$call67 + 8 >> 2] | 0;
      }
      __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp68, $this, HEAP32[$160 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i234278, $cond_i_i234278 + ($cond_i244 << 2) | 0);
      HEAP32[$160 >> 2] = HEAP32[$ref_tmp68 >> 2];
      break;
     }
    case 121:
     {
      $tm_year = $__tm + 20 | 0;
      $call_i250 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 4) | 0;
      if ((HEAP32[$__err >> 2] & 4 | 0) == 0) {
       if (($call_i250 | 0) < 69) {
        $__t_0_i = $call_i250 + 2e3 | 0;
       } else {
        $__t_0_i = ($call_i250 - 69 | 0) >>> 0 < 31 >>> 0 ? $call_i250 + 1900 | 0 : $call_i250;
       }
       HEAP32[$tm_year >> 2] = $__t_0_i - 1900;
      }
      break;
     }
    case 89:
     {
      $call_i262 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 4) | 0;
      if ((HEAP32[$__err >> 2] & 4 | 0) == 0) {
       HEAP32[$__tm + 20 >> 2] = $call_i262 - 1900;
      }
      break;
     }
    case 37:
     {
      $177 = HEAP32[$__e >> 2] | 0;
      $__sbuf__i_i_i_i = $__b | 0;
      $178 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      do {
       if (($178 | 0) == 0) {
        $184 = 1;
       } else {
        $179 = HEAP32[$178 + 12 >> 2] | 0;
        if (($179 | 0) == (HEAP32[$178 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$178 >> 2] | 0) + 36 >> 2] & 255]($178) | 0;
        } else {
         $retval_0_i_i_i_i_i = HEAP32[$179 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i_i | 0) == -1) {
         HEAP32[$__sbuf__i_i_i_i >> 2] = 0;
         $184 = 1;
         break;
        } else {
         $184 = (HEAP32[$__sbuf__i_i_i_i >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($177 | 0) == 0) {
       label = 125;
      } else {
       $185 = HEAP32[$177 + 12 >> 2] | 0;
       if (($185 | 0) == (HEAP32[$177 + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$177 >> 2] | 0) + 36 >> 2] & 255]($177) | 0;
       } else {
        $retval_0_i_i12_i_i_i = HEAP32[$185 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i_i | 0) == -1) {
        label = 125;
       } else {
        if ($184) {
         $_pre_i15_i_i4856_i = $177;
        } else {
         label = 127;
        }
       }
      }
      if ((label | 0) == 125) {
       if ($184) {
        label = 127;
       } else {
        $_pre_i15_i_i4856_i = 0;
       }
      }
      if ((label | 0) == 127) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
       break L10;
      }
      $191 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      $192 = HEAP32[$191 + 12 >> 2] | 0;
      if (($192 | 0) == (HEAP32[$191 + 16 >> 2] | 0)) {
       $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$191 >> 2] | 0) + 36 >> 2] & 255]($191) | 0;
      } else {
       $retval_0_i_i_i = HEAP32[$192 >> 2] | 0;
      }
      if (!((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 127]($12, $retval_0_i_i_i, 0) | 0) << 24 >> 24 == 37)) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
       break L10;
      }
      $200 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      $__ninp__i_i7_i = $200 + 12 | 0;
      $201 = HEAP32[$__ninp__i_i7_i >> 2] | 0;
      if (($201 | 0) == (HEAP32[$200 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$200 >> 2] | 0) + 40 >> 2] & 255]($200) | 0;
       $205 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      } else {
       HEAP32[$__ninp__i_i7_i >> 2] = $201 + 4;
       $205 = $200;
      }
      do {
       if (($205 | 0) == 0) {
        $211 = 1;
       } else {
        $206 = HEAP32[$205 + 12 >> 2] | 0;
        if (($206 | 0) == (HEAP32[$205 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i26_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$205 >> 2] | 0) + 36 >> 2] & 255]($205) | 0;
        } else {
         $retval_0_i_i_i_i26_i = HEAP32[$206 >> 2] | 0;
        }
        if (($retval_0_i_i_i_i26_i | 0) == -1) {
         HEAP32[$__sbuf__i_i_i_i >> 2] = 0;
         $211 = 1;
         break;
        } else {
         $211 = (HEAP32[$__sbuf__i_i_i_i >> 2] | 0) == 0;
         break;
        }
       }
      } while (0);
      if (($_pre_i15_i_i4856_i | 0) == 0) {
       label = 148;
      } else {
       $212 = HEAP32[$_pre_i15_i_i4856_i + 12 >> 2] | 0;
       if (($212 | 0) == (HEAP32[$_pre_i15_i_i4856_i + 16 >> 2] | 0)) {
        $retval_0_i_i12_i_i45_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i4856_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i4856_i) | 0;
       } else {
        $retval_0_i_i12_i_i45_i = HEAP32[$212 >> 2] | 0;
       }
       if (($retval_0_i_i12_i_i45_i | 0) == -1) {
        label = 148;
       } else {
        if ($211) {
         break L10;
        }
       }
      }
      if ((label | 0) == 148) {
       if (!$211) {
        break L10;
       }
      }
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
      break;
     }
    default:
     {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     }
    }
   } while (0);
   HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $__p_i_i_i_i = 0, $ref_tmp6 = 0, $ref_tmp16 = 0, $ref_tmp20 = 0, $ref_tmp41 = 0, $ref_tmp45 = 0, $ref_tmp51 = 0, $agg_tmp60 = 0, $agg_tmp61 = 0, $ref_tmp68 = 0, $__locale_2_i_i72 = 0, $1 = 0, $sub_i_i_i = 0, $9 = 0, $10 = 0, $exception_i_i_i = 0, $12 = 0, $13 = 0, $25 = 0, $add_ptr_i = 0, $call_i76 = 0, $sub_ptr_sub_i = 0, $29 = 0, $add_ptr_i81 = 0, $call_i83 = 0, $sub_ptr_sub_i88 = 0, $add_ptr = 0, $call5 = 0, $34 = 0, $38 = 0, $cond_i_i101275 = 0, $cond_i = 0, $call_i107 = 0, $45 = 0, $46 = 0, $52 = 0, $call_i114 = 0, $60 = 0, $call_i126 = 0, $63 = 0, $call_i140 = 0, $66 = 0, $call_i152 = 0, $69 = 0, $call_i164 = 0, $72 = 0, $__sbuf__i_i_i_i26 = 0, $75 = 0, $agg_tmp3623_sroa_0_0 = 0, $76 = 0, $81 = 0, $cmp_i_i_i_i41 = 0, $agg_tmp3623_sroa_0_2 = 0, $86 = 0, $87 = 0, $retval_0_i_off0_i_i63 = 0, $94 = 0, $__ninp__i_i5_i = 0, $95 = 0, $_pre_i12_i_i40_i = 0, $99 = 0, $104 = 0, $cmp_i_i_i27_i = 0, $tm_hour38 = 0, $111 = 0, $add_ptr_i176 = 0, $call_i179 = 0, $114 = 0, $cond_i_i185 = 0, $116 = 0, $cond_i18_i = 0, $call6_i = 0, $sub_ptr_sub_i191 = 0, $122 = 0, $123 = 0, $129 = 0, $call_i197 = 0, $137 = 0, $138 = 0, $call_i210 = 0, $146 = 0, $148 = 0, $add_ptr64 = 0, $call67 = 0, $157 = 0, $161 = 0, $cond_i_i237281 = 0, $cond_i247 = 0, $tm_year = 0, $call_i253 = 0, $__t_0_i = 0, $call_i265 = 0, $174 = 0, $__sbuf__i_i_i_i = 0, $175 = 0, $180 = 0, $cmp_i_i_i_i6 = 0, $_pre_i12_i_i4251_i = 0, $186 = 0, $187 = 0, $retval_0_i_off0_i_i = 0, $195 = 0, $__ninp__i_i7_i = 0, $196 = 0, $200 = 0, $205 = 0, $cmp_i_i_i29_i = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $ref_tmp6 = sp + 16 | 0;
 $ref_tmp16 = sp + 24 | 0;
 $ref_tmp20 = sp + 32 | 0;
 $ref_tmp41 = sp + 40 | 0;
 $ref_tmp45 = sp + 48 | 0;
 $ref_tmp51 = sp + 56 | 0;
 $agg_tmp60 = sp + 64 | 0;
 $agg_tmp61 = sp + 72 | 0;
 $ref_tmp68 = sp + 80 | 0;
 HEAP32[$__err >> 2] = 0;
 $__locale_2_i_i72 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i72 + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i_i72 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i72 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $10 = HEAP32[$9 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($10 | 0) != 0) {
   $12 = $10;
   $13 = $__locale_2_i_i72 + 4 | 0;
   if (((tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i72 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i72);
   }
   L10 : do {
    switch ($__fmt << 24 >> 24 | 0) {
    case 98:
    case 66:
    case 104:
     {
      $29 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i81 = $this + 8 | 0;
      $call_i83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i81 >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i81) | 0;
      $sub_ptr_sub_i88 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $29, $call_i83, $call_i83 + 288 | 0, $12, $__err, 0) | 0) - $call_i83 | 0;
      if (($sub_ptr_sub_i88 | 0) < 288) {
       HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i88 | 0) / 12 | 0 | 0) % 12 | 0;
      }
      break;
     }
    case 109:
     {
      $call_i152 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $69 = HEAP32[$__err >> 2] | 0;
      if (($69 & 4 | 0) == 0 & ($call_i152 | 0) < 13) {
       HEAP32[$__tm + 16 >> 2] = $call_i152 - 1;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $69 | 4;
       break L10;
      }
      break;
     }
    case 97:
    case 65:
     {
      $25 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i = $this + 8 | 0;
      $call_i76 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
      $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $25, $call_i76, $call_i76 + 168 | 0, $12, $__err, 0) | 0) - $call_i76 | 0;
      if (($sub_ptr_sub_i | 0) < 168) {
       HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 7 | 0;
      }
      break;
     }
    case 68:
     {
      $46 = $__b | 0;
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp16, $this, HEAP32[$46 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11136, 11144);
      HEAP32[$46 >> 2] = HEAP32[$ref_tmp16 >> 2];
      break;
     }
    case 72:
     {
      $call_i114 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $60 = HEAP32[$__err >> 2] | 0;
      if (($60 & 4 | 0) == 0 & ($call_i114 | 0) < 24) {
       HEAP32[$__tm + 8 >> 2] = $call_i114;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $60 | 4;
       break L10;
      }
      break;
     }
    case 77:
     {
      $call_i164 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $72 = HEAP32[$__err >> 2] | 0;
      if (($72 & 4 | 0) == 0 & ($call_i164 | 0) < 60) {
       HEAP32[$__tm + 4 >> 2] = $call_i164;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $72 | 4;
       break L10;
      }
      break;
     }
    case 73:
     {
      $call_i126 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $63 = HEAP32[$__err >> 2] | 0;
      if (($63 & 4 | 0) == 0 & ($call_i126 | 0) > 0 & ($call_i126 | 0) < 13) {
       HEAP32[$__tm + 8 >> 2] = $call_i126;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $63 | 4;
       break L10;
      }
      break;
     }
    case 100:
    case 101:
     {
      $call_i107 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $45 = HEAP32[$__err >> 2] | 0;
      if (($45 & 4 | 0) == 0 & ($call_i107 | 0) > 0 & ($call_i107 | 0) < 32) {
       HEAP32[$__tm + 12 >> 2] = $call_i107;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $45 | 4;
       break L10;
      }
      break;
     }
    case 99:
     {
      $add_ptr = $this + 8 | 0;
      $call5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 12 >> 2] & 255]($add_ptr) | 0;
      $34 = $__b | 0;
      $38 = HEAP8[$call5 >> 0] | 0;
      if (($38 & 1) == 0) {
       $cond_i = ($38 & 255) >>> 1;
       $cond_i_i101275 = $call5 + 1 | 0;
      } else {
       $cond_i = HEAP32[$call5 + 4 >> 2] | 0;
       $cond_i_i101275 = HEAP32[$call5 + 8 >> 2] | 0;
      }
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp6, $this, HEAP32[$34 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i101275, $cond_i_i101275 + $cond_i | 0);
      HEAP32[$34 >> 2] = HEAP32[$ref_tmp6 >> 2];
      break;
     }
    case 106:
     {
      $call_i140 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 3) | 0;
      $66 = HEAP32[$__err >> 2] | 0;
      if (($66 & 4 | 0) == 0 & ($call_i140 | 0) < 366) {
       HEAP32[$__tm + 28 >> 2] = $call_i140;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $66 | 4;
       break L10;
      }
      break;
     }
    case 110:
    case 116:
     {
      $__sbuf__i_i_i_i26 = $__b | 0;
      $75 = $10 + 8 | 0;
      $agg_tmp3623_sroa_0_0 = HEAP32[$__e >> 2] | 0;
      L46 : while (1) {
       $76 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
       do {
        if (($76 | 0) == 0) {
         $81 = 0;
        } else {
         if ((HEAP32[$76 + 12 >> 2] | 0) == (HEAP32[$76 + 16 >> 2] | 0)) {
          if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 255]($76) | 0) == -1) {
           HEAP32[$__sbuf__i_i_i_i26 >> 2] = 0;
           $81 = 0;
           break;
          } else {
           $81 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
           break;
          }
         } else {
          $81 = $76;
         }
        }
       } while (0);
       $cmp_i_i_i_i41 = ($81 | 0) == 0;
       do {
        if (($agg_tmp3623_sroa_0_0 | 0) == 0) {
         label = 51;
        } else {
         if ((HEAP32[$agg_tmp3623_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp3623_sroa_0_0 + 16 >> 2] | 0)) {
          if ($cmp_i_i_i_i41) {
           $agg_tmp3623_sroa_0_2 = $agg_tmp3623_sroa_0_0;
           break;
          } else {
           $_pre_i12_i_i40_i = $agg_tmp3623_sroa_0_0;
           break L46;
          }
         }
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp3623_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp3623_sroa_0_0) | 0) == -1) {
          label = 51;
         } else {
          if ($cmp_i_i_i_i41) {
           $agg_tmp3623_sroa_0_2 = $agg_tmp3623_sroa_0_0;
          } else {
           $_pre_i12_i_i40_i = $agg_tmp3623_sroa_0_0;
           break L46;
          }
         }
        }
       } while (0);
       if ((label | 0) == 51) {
        label = 0;
        if ($cmp_i_i_i_i41) {
         $_pre_i12_i_i40_i = 0;
         break;
        } else {
         $agg_tmp3623_sroa_0_2 = 0;
        }
       }
       $86 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
       $87 = HEAP32[$86 + 12 >> 2] | 0;
       if (($87 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) {
        $retval_0_i_off0_i_i63 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] & 255]($86) | 0) & 255;
       } else {
        $retval_0_i_off0_i_i63 = HEAP8[$87 >> 0] | 0;
       }
       if (!($retval_0_i_off0_i_i63 << 24 >> 24 > -1)) {
        $_pre_i12_i_i40_i = $agg_tmp3623_sroa_0_2;
        break;
       }
       if ((HEAP16[(HEAP32[$75 >> 2] | 0) + ($retval_0_i_off0_i_i63 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
        $_pre_i12_i_i40_i = $agg_tmp3623_sroa_0_2;
        break;
       }
       $94 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
       $__ninp__i_i5_i = $94 + 12 | 0;
       $95 = HEAP32[$__ninp__i_i5_i >> 2] | 0;
       if (($95 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 40 >> 2] & 255]($94) | 0;
        $agg_tmp3623_sroa_0_0 = $agg_tmp3623_sroa_0_2;
        continue;
       } else {
        HEAP32[$__ninp__i_i5_i >> 2] = $95 + 1;
        $agg_tmp3623_sroa_0_0 = $agg_tmp3623_sroa_0_2;
        continue;
       }
      }
      $99 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
      do {
       if (($99 | 0) == 0) {
        $104 = 0;
       } else {
        if ((HEAP32[$99 + 12 >> 2] | 0) == (HEAP32[$99 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 36 >> 2] & 255]($99) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i_i26 >> 2] = 0;
          $104 = 0;
          break;
         } else {
          $104 = HEAP32[$__sbuf__i_i_i_i26 >> 2] | 0;
          break;
         }
        } else {
         $104 = $99;
        }
       }
      } while (0);
      $cmp_i_i_i27_i = ($104 | 0) == 0;
      do {
       if (($_pre_i12_i_i40_i | 0) == 0) {
        label = 70;
       } else {
        if ((HEAP32[$_pre_i12_i_i40_i + 12 >> 2] | 0) == (HEAP32[$_pre_i12_i_i40_i + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i40_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i40_i) | 0) == -1) {
          label = 70;
          break;
         }
        }
        if ($cmp_i_i_i27_i) {
         break L10;
        }
       }
      } while (0);
      if ((label | 0) == 70) {
       if (!$cmp_i_i_i27_i) {
        break L10;
       }
      }
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
      break;
     }
    case 114:
     {
      $123 = $__b | 0;
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp41, $this, HEAP32[$123 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11112, 11123);
      HEAP32[$123 >> 2] = HEAP32[$ref_tmp41 >> 2];
      break;
     }
    case 82:
     {
      $129 = $__b | 0;
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp45, $this, HEAP32[$129 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11104, 11109);
      HEAP32[$129 >> 2] = HEAP32[$ref_tmp45 >> 2];
      break;
     }
    case 83:
     {
      $call_i197 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 2) | 0;
      $137 = HEAP32[$__err >> 2] | 0;
      if (($137 & 4 | 0) == 0 & ($call_i197 | 0) < 61) {
       HEAP32[$__tm >> 2] = $call_i197;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $137 | 4;
       break L10;
      }
      break;
     }
    case 84:
     {
      $138 = $__b | 0;
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp51, $this, HEAP32[$138 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11096, 11104);
      HEAP32[$138 >> 2] = HEAP32[$ref_tmp51 >> 2];
      break;
     }
    case 119:
     {
      $call_i210 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 1) | 0;
      $146 = HEAP32[$__err >> 2] | 0;
      if (($146 & 4 | 0) == 0 & ($call_i210 | 0) < 7) {
       HEAP32[$__tm + 24 >> 2] = $call_i210;
       break L10;
      } else {
       HEAP32[$__err >> 2] = $146 | 4;
       break L10;
      }
      break;
     }
    case 120:
     {
      $148 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
      HEAP32[$agg_tmp60 >> 2] = HEAP32[$__b >> 2];
      HEAP32[$agg_tmp61 >> 2] = HEAP32[$__e >> 2];
      FUNCTION_TABLE_viiiiiii[$148 & 127]($agg_result, $this, $agg_tmp60, $agg_tmp61, $__iob, $__err, $__tm);
      STACKTOP = sp;
      return;
     }
    case 70:
     {
      $52 = $__b | 0;
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp20, $this, HEAP32[$52 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11128, 11136);
      HEAP32[$52 >> 2] = HEAP32[$ref_tmp20 >> 2];
      break;
     }
    case 112:
     {
      $tm_hour38 = $__tm + 8 | 0;
      $111 = HEAP32[$__e >> 2] | 0;
      $add_ptr_i176 = $this + 8 | 0;
      $call_i179 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i176 >> 2] | 0) + 8 >> 2] & 255]($add_ptr_i176) | 0;
      $114 = HEAP8[$call_i179 >> 0] | 0;
      if (($114 & 1) == 0) {
       $cond_i_i185 = ($114 & 255) >>> 1;
      } else {
       $cond_i_i185 = HEAP32[$call_i179 + 4 >> 2] | 0;
      }
      $116 = HEAP8[$call_i179 + 12 >> 0] | 0;
      if (($116 & 1) == 0) {
       $cond_i18_i = ($116 & 255) >>> 1;
      } else {
       $cond_i18_i = HEAP32[$call_i179 + 16 >> 2] | 0;
      }
      if (($cond_i_i185 | 0) == (-$cond_i18_i | 0)) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
       break L10;
      }
      $call6_i = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $111, $call_i179, $call_i179 + 24 | 0, $12, $__err, 0) | 0;
      $sub_ptr_sub_i191 = $call6_i - $call_i179 | 0;
      if (($call6_i | 0) == ($call_i179 | 0)) {
       if ((HEAP32[$tm_hour38 >> 2] | 0) == 12) {
        HEAP32[$tm_hour38 >> 2] = 0;
        break L10;
       }
      }
      if (($sub_ptr_sub_i191 | 0) == 12) {
       $122 = HEAP32[$tm_hour38 >> 2] | 0;
       if (($122 | 0) < 12) {
        HEAP32[$tm_hour38 >> 2] = $122 + 12;
       }
      }
      break;
     }
    case 88:
     {
      $add_ptr64 = $this + 8 | 0;
      $call67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr64 >> 2] | 0) + 24 >> 2] & 255]($add_ptr64) | 0;
      $157 = $__b | 0;
      $161 = HEAP8[$call67 >> 0] | 0;
      if (($161 & 1) == 0) {
       $cond_i247 = ($161 & 255) >>> 1;
       $cond_i_i237281 = $call67 + 1 | 0;
      } else {
       $cond_i247 = HEAP32[$call67 + 4 >> 2] | 0;
       $cond_i_i237281 = HEAP32[$call67 + 8 >> 2] | 0;
      }
      __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp68, $this, HEAP32[$157 >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i237281, $cond_i_i237281 + $cond_i247 | 0);
      HEAP32[$157 >> 2] = HEAP32[$ref_tmp68 >> 2];
      break;
     }
    case 121:
     {
      $tm_year = $__tm + 20 | 0;
      $call_i253 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 4) | 0;
      if ((HEAP32[$__err >> 2] & 4 | 0) == 0) {
       if (($call_i253 | 0) < 69) {
        $__t_0_i = $call_i253 + 2e3 | 0;
       } else {
        $__t_0_i = ($call_i253 - 69 | 0) >>> 0 < 31 >>> 0 ? $call_i253 + 1900 | 0 : $call_i253;
       }
       HEAP32[$tm_year >> 2] = $__t_0_i - 1900;
      }
      break;
     }
    case 89:
     {
      $call_i265 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $12, 4) | 0;
      if ((HEAP32[$__err >> 2] & 4 | 0) == 0) {
       HEAP32[$__tm + 20 >> 2] = $call_i265 - 1900;
      }
      break;
     }
    case 37:
     {
      $174 = HEAP32[$__e >> 2] | 0;
      $__sbuf__i_i_i_i = $__b | 0;
      $175 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      do {
       if (($175 | 0) == 0) {
        $180 = 0;
       } else {
        if ((HEAP32[$175 + 12 >> 2] | 0) == (HEAP32[$175 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 36 >> 2] & 255]($175) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i_i >> 2] = 0;
          $180 = 0;
          break;
         } else {
          $180 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
          break;
         }
        } else {
         $180 = $175;
        }
       }
      } while (0);
      $cmp_i_i_i_i6 = ($180 | 0) == 0;
      do {
       if (($174 | 0) == 0) {
        label = 116;
       } else {
        if ((HEAP32[$174 + 12 >> 2] | 0) == (HEAP32[$174 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$174 >> 2] | 0) + 36 >> 2] & 255]($174) | 0) == -1) {
          label = 116;
          break;
         }
        }
        if ($cmp_i_i_i_i6) {
         $_pre_i12_i_i4251_i = $174;
        } else {
         label = 117;
        }
       }
      } while (0);
      if ((label | 0) == 116) {
       if ($cmp_i_i_i_i6) {
        label = 117;
       } else {
        $_pre_i12_i_i4251_i = 0;
       }
      }
      if ((label | 0) == 117) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
       break L10;
      }
      $186 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      $187 = HEAP32[$186 + 12 >> 2] | 0;
      if (($187 | 0) == (HEAP32[$186 + 16 >> 2] | 0)) {
       $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$186 >> 2] | 0) + 36 >> 2] & 255]($186) | 0) & 255;
      } else {
       $retval_0_i_off0_i_i = HEAP8[$187 >> 0] | 0;
      }
      if (!((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($12, $retval_0_i_off0_i_i, 0) | 0) << 24 >> 24 == 37)) {
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
       break L10;
      }
      $195 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      $__ninp__i_i7_i = $195 + 12 | 0;
      $196 = HEAP32[$__ninp__i_i7_i >> 2] | 0;
      if (($196 | 0) == (HEAP32[$195 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$195 >> 2] | 0) + 40 >> 2] & 255]($195) | 0;
       $200 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
      } else {
       HEAP32[$__ninp__i_i7_i >> 2] = $196 + 1;
       $200 = $195;
      }
      do {
       if (($200 | 0) == 0) {
        $205 = 0;
       } else {
        if ((HEAP32[$200 + 12 >> 2] | 0) == (HEAP32[$200 + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$200 >> 2] | 0) + 36 >> 2] & 255]($200) | 0) == -1) {
          HEAP32[$__sbuf__i_i_i_i >> 2] = 0;
          $205 = 0;
          break;
         } else {
          $205 = HEAP32[$__sbuf__i_i_i_i >> 2] | 0;
          break;
         }
        } else {
         $205 = $200;
        }
       }
      } while (0);
      $cmp_i_i_i29_i = ($205 | 0) == 0;
      do {
       if (($_pre_i12_i_i4251_i | 0) == 0) {
        label = 135;
       } else {
        if ((HEAP32[$_pre_i12_i_i4251_i + 12 >> 2] | 0) == (HEAP32[$_pre_i12_i_i4251_i + 16 >> 2] | 0)) {
         if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i4251_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i4251_i) | 0) == -1) {
          label = 135;
          break;
         }
        }
        if ($cmp_i_i_i29_i) {
         break L10;
        }
       }
      } while (0);
      if ((label | 0) == 135) {
       if (!$cmp_i_i_i29_i) {
        break L10;
       }
      }
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
      break;
     }
    default:
     {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     }
    }
   } while (0);
   HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __Z20rcRasterizeTrianglesP9rcContextPKfiPKiPKhiR13rcHeightfieldi($ctx, $verts, $tris, $areas, $nt, $solid, $flagMergeThr) {
 $ctx = $ctx | 0;
 $verts = $verts | 0;
 $tris = $tris | 0;
 $areas = $areas | 0;
 $nt = $nt | 0;
 $solid = $solid | 0;
 $flagMergeThr = $flagMergeThr | 0;
 var $in_i = 0, $m_timerEnabled_i = 0, $cs = 0, $3 = 0.0, $div = 0.0, $div1 = 0.0, $arraydecay = 0, $arraydecay15 = 0, $width_i = 0, $height_i = 0, $arrayidx_i = 0, $arrayidx1_i = 0, $arrayidx18_i_i = 0, $arrayidx22_i_i = 0, $arrayidx35_i = 0, $arrayidx3_i117_i = 0, $arrayidx5_i119_i = 0, $arrayidx36_i = 0, $arrayidx3_i113_i = 0, $arrayidx5_i115_i = 0, $arrayidx37_i = 0, $arrayidx3_i109_i = 0, $arrayidx5_i111_i = 0, $arraydecay42_i = 0, $arraydecay49_i = 0, $freelist_i_i_i = 0, $pools_i_i_i = 0, $spans_i_i = 0, $8 = 0.0, $i_022 = 0, $mul = 0, $mul2 = 0, $arrayidx3 = 0, $mul7 = 0, $arrayidx8 = 0, $mul12 = 0, $arrayidx13 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $sub_i = 0.0, $17 = 0.0, $arrayidx2_i_i = 0, $18 = 0.0, $arrayidx4_i_i = 0, $19 = 0.0, $20 = 0.0, $cond_i_i_i = 0.0, $arrayidx4_i77_i = 0, $21 = 0.0, $cond_i11_i_i = 0.0, $arrayidx8_i_i = 0, $22 = 0.0, $cond_i9_i_i = 0.0, $23 = 0.0, $cond_i_i79_i = 0.0, $arrayidx4_i81_i = 0, $24 = 0.0, $cond_i11_i83_i = 0.0, $arrayidx8_i85_i = 0, $25 = 0.0, $cond_i9_i87_i = 0.0, $cond_i_i89_i = 0.0, $cond_i11_i93_i = 0.0, $cond_i9_i97_i = 0.0, $cond_i_i99_i = 0.0, $cond_i11_i103_i = 0.0, $cond_i9_i107_i = 0.0, $26 = 0.0, $cond_i146_i = 0, $28 = 0.0, $conv_i = 0, $conv16_i = 0, $conv21_i = 0, $conv26_i = 0, $sub27_i = 0, $cond5_i142_i = 0, $sub29_i = 0, $cond5_i136_i = 0, $cond5_i130_i = 0, $cond5_i124_i = 0, $cmp56170_i = 0, $bf_shl9_i_i = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $y_0174_i = 0, $add_i = 0.0, $call44_i = 0, $call51_i = 0, $x_0171_i = 0, $add61_i = 0.0, $call65_i = 0, $call72_i = 0, $41 = 0.0, $i_0168_i = 0, $smax_0167_i = 0.0, $smin_0166_i = 0.0, $42 = 0.0, $43 = 0.0, $sub90_i = 0.0, $sub92_i = 0.0, $conv107_i = 0, $cond5_i70_i = 0, $conv112_i = 0, $add114_i = 0, $cond5_i_off0_i = 0, $add_i_i = 0, $46 = 0, $47 = 0, $call_i_i_i_i = 0, $arrayidx_i_i_i = 0, $freelist8_0_i_i_i = 0, $it_0_i_i_i = 0, $incdec_ptr_i_i_i = 0, $53 = 0, $54 = 0, $retval_0_i_i_i = 0, $55 = 0, $next_i_i = 0, $arrayidx_i_i = 0, $57 = 0, $cur_057_i_i = 0, $58 = 0, $bf_load17_i_i = 0, $bf_clear18_i_i = 0, $bf_load19_i_i = 0, $bf_clear26_i_i = 0, $cur_0_lcssa54_i_i = 0, $cur_0_ph_be_i_i = 0, $prev_0_ph_be_i_i = 0, $prev_0_ph68_i_i = 0, $cur_0_ph67_i_i = 0, $next85_i_i = 0, $60 = 0, $bf_load17_us_i_i = 0, $bf_clear18_us_i_i = 0, $bf_load19_us_i_i = 0, $bf_clear26_us_i_i = 0, $bf_set42_us_i_i = 0, $bf_load47_us_i_i = 0, $bf_load44_us_i_i = 0, $bf_clear46_us_i_i = 0, $bf_set59_us_i_i = 0, $bf_load64_us_i_i = 0, $bf_load61_us_i_i = 0, $sub_us_i_i = 0, $bf_lshr71_us_i_i = 0, $bf_lshr73_us_i_i = 0, $bf_set42_i_i = 0, $bf_load47_i_i = 0, $bf_load44_i_i = 0, $bf_clear46_i_i = 0, $bf_set59_i_i = 0, $bf_load64_i_i = 0, $bf_load61_i_i = 0, $sub_i_i = 0, $bf_lshr71_i_i = 0, $bf_lshr73_i_i = 0, $next82_i_i = 0, $61 = 0, $next82_us_i_i = 0, $63 = 0, $prev_0_ph63_i_i = 0, $next94_i_i = 0, $arrayidx99_i_i = 0, $inc = 0, label = 0, sp = 0, $it_0_i_i_i$looptemp = 0, $freelist8_0_i_i_i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 264 | 0;
 $in_i = sp | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 2);
 }
 $cs = $solid + 32 | 0;
 $3 = +HEAPF32[$cs >> 2];
 $div = 1.0 / $3;
 $div1 = 1.0 / +HEAPF32[$solid + 36 >> 2];
 L4 : do {
  if (($nt | 0) > 0) {
   $arraydecay = $solid + 8 | 0;
   $arraydecay15 = $solid + 20 | 0;
   $width_i = $solid | 0;
   $height_i = $solid + 4 | 0;
   $arrayidx_i = $solid + 24 | 0;
   $arrayidx1_i = $solid + 12 | 0;
   $arrayidx18_i_i = $solid + 16 | 0;
   $arrayidx22_i_i = $solid + 28 | 0;
   $arrayidx35_i = $in_i | 0;
   $arrayidx3_i117_i = $in_i + 4 | 0;
   $arrayidx5_i119_i = $in_i + 8 | 0;
   $arrayidx36_i = $in_i + 12 | 0;
   $arrayidx3_i113_i = $in_i + 16 | 0;
   $arrayidx5_i115_i = $in_i + 20 | 0;
   $arrayidx37_i = $in_i + 24 | 0;
   $arrayidx3_i109_i = $in_i + 28 | 0;
   $arrayidx5_i111_i = $in_i + 32 | 0;
   $arraydecay42_i = sp + 88 | 0;
   $arraydecay49_i = sp + 176 | 0;
   $freelist_i_i_i = $solid + 48 | 0;
   $pools_i_i_i = $solid + 44 | 0;
   $spans_i_i = $solid + 40 | 0;
   $i_022 = 0;
   $8 = $3;
   while (1) {
    $mul = $i_022 * 3 | 0;
    $mul2 = (HEAP32[$tris + ($mul << 2) >> 2] | 0) * 3 | 0;
    $arrayidx3 = $verts + ($mul2 << 2) | 0;
    $mul7 = (HEAP32[$tris + ($mul + 1 << 2) >> 2] | 0) * 3 | 0;
    $arrayidx8 = $verts + ($mul7 << 2) | 0;
    $mul12 = (HEAP32[$tris + ($mul + 2 << 2) >> 2] | 0) * 3 | 0;
    $arrayidx13 = $verts + ($mul12 << 2) | 0;
    $12 = HEAP8[$areas + $i_022 >> 0] | 0;
    $13 = HEAP32[$width_i >> 2] | 0;
    $14 = HEAP32[$height_i >> 2] | 0;
    $15 = +HEAPF32[$arrayidx_i >> 2];
    $16 = +HEAPF32[$arrayidx1_i >> 2];
    $sub_i = $15 - $16;
    $17 = +HEAPF32[$arrayidx3 >> 2];
    $arrayidx2_i_i = $verts + ($mul2 + 1 << 2) | 0;
    $18 = +HEAPF32[$arrayidx2_i_i >> 2];
    $arrayidx4_i_i = $verts + ($mul2 + 2 << 2) | 0;
    $19 = +HEAPF32[$arrayidx4_i_i >> 2];
    $20 = +HEAPF32[$arrayidx8 >> 2];
    $cond_i_i_i = $17 < $20 ? $17 : $20;
    $arrayidx4_i77_i = $verts + ($mul7 + 1 << 2) | 0;
    $21 = +HEAPF32[$arrayidx4_i77_i >> 2];
    $cond_i11_i_i = $18 < $21 ? $18 : $21;
    $arrayidx8_i_i = $verts + ($mul7 + 2 << 2) | 0;
    $22 = +HEAPF32[$arrayidx8_i_i >> 2];
    $cond_i9_i_i = $19 < $22 ? $19 : $22;
    $23 = +HEAPF32[$arrayidx13 >> 2];
    $cond_i_i79_i = $cond_i_i_i < $23 ? $cond_i_i_i : $23;
    $arrayidx4_i81_i = $verts + ($mul12 + 1 << 2) | 0;
    $24 = +HEAPF32[$arrayidx4_i81_i >> 2];
    $cond_i11_i83_i = $cond_i11_i_i < $24 ? $cond_i11_i_i : $24;
    $arrayidx8_i85_i = $verts + ($mul12 + 2 << 2) | 0;
    $25 = +HEAPF32[$arrayidx8_i85_i >> 2];
    $cond_i9_i87_i = $cond_i9_i_i < $25 ? $cond_i9_i_i : $25;
    $cond_i_i89_i = $17 > $20 ? $17 : $20;
    $cond_i11_i93_i = $18 > $21 ? $18 : $21;
    $cond_i9_i97_i = $19 > $22 ? $19 : $22;
    $cond_i_i99_i = $cond_i_i89_i > $23 ? $cond_i_i89_i : $23;
    $cond_i11_i103_i = $cond_i11_i93_i > $24 ? $cond_i11_i93_i : $24;
    $cond_i9_i107_i = $cond_i9_i97_i > $25 ? $cond_i9_i97_i : $25;
    $26 = +HEAPF32[$arraydecay >> 2];
    if ($26 > $cond_i_i99_i) {
     $cond_i146_i = 0;
    } else {
     if (+HEAPF32[$arraydecay15 >> 2] < $cond_i_i79_i) {
      $cond_i146_i = 0;
     } else {
      $cond_i146_i = 1;
     }
    }
    $28 = +HEAPF32[$arrayidx18_i_i >> 2];
    L12 : do {
     if (!($28 > $cond_i9_i107_i)) {
      if (!(+HEAPF32[$arrayidx22_i_i >> 2] < $cond_i9_i87_i | $cond_i146_i & ($15 >= $cond_i11_i83_i & $16 <= $cond_i11_i103_i) ^ 1)) {
       $conv_i = ~~(($cond_i_i79_i - $26) * $div);
       $conv16_i = ~~(($cond_i9_i87_i - $28) * $div);
       $conv21_i = ~~(($cond_i_i99_i - $26) * $div);
       $conv26_i = ~~(($cond_i9_i107_i - $28) * $div);
       $sub27_i = $13 - 1 | 0;
       if (($conv_i | 0) < 0) {
        $cond5_i142_i = 0;
       } else {
        $cond5_i142_i = ($conv_i | 0) > ($sub27_i | 0) ? $sub27_i : $conv_i;
       }
       $sub29_i = $14 - 1 | 0;
       if (($conv16_i | 0) < 0) {
        $cond5_i136_i = 0;
       } else {
        $cond5_i136_i = ($conv16_i | 0) > ($sub29_i | 0) ? $sub29_i : $conv16_i;
       }
       if (($conv21_i | 0) < 0) {
        $cond5_i130_i = 0;
       } else {
        $cond5_i130_i = ($conv21_i | 0) > ($sub27_i | 0) ? $sub27_i : $conv21_i;
       }
       if (($conv26_i | 0) < 0) {
        $cond5_i124_i = 0;
       } else {
        $cond5_i124_i = ($conv26_i | 0) > ($sub29_i | 0) ? $sub29_i : $conv26_i;
       }
       if (($cond5_i136_i | 0) <= ($cond5_i124_i | 0)) {
        $cmp56170_i = ($cond5_i142_i | 0) > ($cond5_i130_i | 0);
        $bf_shl9_i_i = ($12 & 255) << 26;
        $y_0174_i = $cond5_i136_i;
        $39 = $17;
        $38 = $18;
        $37 = $19;
        $36 = $20;
        $35 = $21;
        $34 = $22;
        $33 = $23;
        $32 = $24;
        $31 = $25;
        $30 = $28;
        while (1) {
         HEAPF32[$arrayidx35_i >> 2] = $39;
         HEAPF32[$arrayidx3_i117_i >> 2] = $38;
         HEAPF32[$arrayidx5_i119_i >> 2] = $37;
         HEAPF32[$arrayidx36_i >> 2] = $36;
         HEAPF32[$arrayidx3_i113_i >> 2] = $35;
         HEAPF32[$arrayidx5_i115_i >> 2] = $34;
         HEAPF32[$arrayidx37_i >> 2] = $33;
         HEAPF32[$arrayidx3_i109_i >> 2] = $32;
         HEAPF32[$arrayidx5_i111_i >> 2] = $31;
         $add_i = +($y_0174_i | 0) * $8 + $30;
         $call44_i = __ZL8clipPolyPKfiPffff($arrayidx35_i, 3, $arraydecay42_i, 0.0, 1.0, -0.0 - $add_i) | 0;
         if (($call44_i | 0) >= 3) {
          $call51_i = __ZL8clipPolyPKfiPffff($arraydecay42_i, $call44_i, $arraydecay49_i, 0.0, -1.0, $add_i + $8) | 0;
          if (!(($call51_i | 0) < 3 | $cmp56170_i)) {
           $x_0171_i = $cond5_i142_i;
           while (1) {
            $add61_i = +($x_0171_i | 0) * $8 + +HEAPF32[$arraydecay >> 2];
            $call65_i = __ZL8clipPolyPKfiPffff($arraydecay49_i, $call51_i, $arraydecay42_i, 1.0, 0.0, -0.0 - $add61_i) | 0;
            do {
             if (($call65_i | 0) >= 3) {
              $call72_i = __ZL8clipPolyPKfiPffff($arraydecay42_i, $call65_i, $arrayidx35_i, -1.0, 0.0, $add61_i + $8) | 0;
              if (($call72_i | 0) >= 3) {
               $41 = +HEAPF32[$arrayidx3_i117_i >> 2];
               $smin_0166_i = $41;
               $smax_0167_i = $41;
               $i_0168_i = 1;
               do {
                $42 = +HEAPF32[$in_i + (($i_0168_i * 3 | 0) + 1 << 2) >> 2];
                $smin_0166_i = $smin_0166_i < $42 ? $smin_0166_i : $42;
                $smax_0167_i = $smax_0167_i > $42 ? $smax_0167_i : $42;
                $i_0168_i = $i_0168_i + 1 | 0;
               } while (($i_0168_i | 0) < ($call72_i | 0));
               $43 = +HEAPF32[$arrayidx1_i >> 2];
               $sub90_i = $smin_0166_i - $43;
               $sub92_i = $smax_0167_i - $43;
               if (!($sub92_i < 0.0 | $sub90_i > $sub_i)) {
                $conv107_i = ~~+Math_floor(($sub90_i < 0.0 ? 0.0 : $sub90_i) * $div1);
                if (($conv107_i | 0) < 0) {
                 $cond5_i70_i = 0;
                } else {
                 $cond5_i70_i = ($conv107_i | 0) > 8191 ? 8191 : $conv107_i & 65535;
                }
                $conv112_i = ~~+Math_ceil(($sub92_i > $sub_i ? $sub_i : $sub92_i) * $div1);
                $add114_i = $cond5_i70_i + 1 | 0;
                if (($conv112_i | 0) < ($add114_i | 0)) {
                 $cond5_i_off0_i = $add114_i & 65535;
                } else {
                 $cond5_i_off0_i = ($conv112_i | 0) > 8191 ? 8191 : $conv112_i & 65535;
                }
                $add_i_i = (Math_imul(HEAP32[$width_i >> 2] | 0, $y_0174_i) | 0) + $x_0171_i | 0;
                $46 = HEAP32[$freelist_i_i_i >> 2] | 0;
                if (($46 | 0) == 0) {
                 label = 33;
                } else {
                 $47 = HEAP32[$46 + 4 >> 2] | 0;
                 if (($47 | 0) == 0) {
                  label = 33;
                 } else {
                  $54 = $46;
                  $53 = $47;
                  label = 37;
                 }
                }
                if ((label | 0) == 33) {
                 label = 0;
                 $call_i_i_i_i = _malloc(16388) | 0;
                 if (($call_i_i_i_i | 0) == 0) {
                  $retval_0_i_i_i = 0;
                 } else {
                  HEAP32[$call_i_i_i_i >> 2] = HEAP32[$pools_i_i_i >> 2];
                  HEAP32[$pools_i_i_i >> 2] = $call_i_i_i_i;
                  $arrayidx_i_i_i = $call_i_i_i_i + 4 | 0;
                  $it_0_i_i_i = $call_i_i_i_i + 16388 | 0;
                  $freelist8_0_i_i_i = HEAP32[$freelist_i_i_i >> 2] | 0;
                  while (1) {
                   $it_0_i_i_i$looptemp = $it_0_i_i_i;
                   $freelist8_0_i_i_i$looptemp = $freelist8_0_i_i_i;
                   $incdec_ptr_i_i_i = $it_0_i_i_i - 8 | 0;
                   HEAP32[$it_0_i_i_i$looptemp - 8 + 4 >> 2] = $freelist8_0_i_i_i$looptemp;
                   if (($incdec_ptr_i_i_i | 0) == ($arrayidx_i_i_i | 0)) {
                    break;
                   } else {
                    $it_0_i_i_i = $incdec_ptr_i_i_i;
                    $freelist8_0_i_i_i = $incdec_ptr_i_i_i;
                   }
                  }
                  HEAP32[$freelist_i_i_i >> 2] = $arrayidx_i_i_i;
                  $54 = $arrayidx_i_i_i;
                  $53 = HEAP32[$call_i_i_i_i + 8 >> 2] | 0;
                  label = 37;
                 }
                }
                if ((label | 0) == 37) {
                 label = 0;
                 HEAP32[$freelist_i_i_i >> 2] = $53;
                 $retval_0_i_i_i = $54;
                }
                $55 = $retval_0_i_i_i;
                HEAP32[$55 >> 2] = ($cond5_i_off0_i & 65535) << 13 & 67100672 | $cond5_i70_i & 8191 | $bf_shl9_i_i;
                $next_i_i = $retval_0_i_i_i + 4 | 0;
                HEAP32[$next_i_i >> 2] = 0;
                $arrayidx_i_i = (HEAP32[$spans_i_i >> 2] | 0) + ($add_i_i << 2) | 0;
                $57 = HEAP32[$arrayidx_i_i >> 2] | 0;
                if (($57 | 0) == 0) {
                 HEAP32[$arrayidx_i_i >> 2] = $retval_0_i_i_i;
                 break;
                } else {
                 $cur_0_ph67_i_i = $57;
                 $prev_0_ph68_i_i = 0;
                }
                L60 : while (1) {
                 $next85_i_i = $prev_0_ph68_i_i + 4 | 0;
                 L62 : do {
                  if (($prev_0_ph68_i_i | 0) == 0) {
                   $60 = $cur_0_ph67_i_i;
                   $bf_load17_us_i_i = HEAP32[$60 >> 2] | 0;
                   $bf_clear18_us_i_i = $bf_load17_us_i_i & 8191;
                   $bf_load19_us_i_i = HEAP32[$55 >> 2] | 0;
                   if ($bf_clear18_us_i_i >>> 0 > ($bf_load19_us_i_i >>> 13 & 8191) >>> 0) {
                    break L60;
                   }
                   $bf_clear26_us_i_i = $bf_load19_us_i_i & 8191;
                   if (($bf_load17_us_i_i >>> 13 & 8191) >>> 0 < $bf_clear26_us_i_i >>> 0) {
                    $cur_0_lcssa54_i_i = $cur_0_ph67_i_i;
                    label = 42;
                   } else {
                    if ($bf_clear18_us_i_i >>> 0 < $bf_clear26_us_i_i >>> 0) {
                     $bf_set42_us_i_i = $bf_load19_us_i_i & -8192 | $bf_clear18_us_i_i;
                     HEAP32[$55 >> 2] = $bf_set42_us_i_i;
                     $bf_load44_us_i_i = HEAP32[$60 >> 2] | 0;
                     $bf_load47_us_i_i = $bf_set42_us_i_i;
                    } else {
                     $bf_load44_us_i_i = $bf_load17_us_i_i;
                     $bf_load47_us_i_i = $bf_load19_us_i_i;
                    }
                    $bf_clear46_us_i_i = $bf_load44_us_i_i >>> 13 & 8191;
                    if ($bf_clear46_us_i_i >>> 0 > ($bf_load47_us_i_i >>> 13 & 8191) >>> 0) {
                     $bf_set59_us_i_i = $bf_clear46_us_i_i << 13 | $bf_load47_us_i_i & -67100673;
                     HEAP32[$55 >> 2] = $bf_set59_us_i_i;
                     $bf_load61_us_i_i = $bf_set59_us_i_i;
                     $bf_load64_us_i_i = HEAP32[$60 >> 2] | 0;
                    } else {
                     $bf_load61_us_i_i = $bf_load47_us_i_i;
                     $bf_load64_us_i_i = $bf_load44_us_i_i;
                    }
                    $sub_us_i_i = ($bf_load61_us_i_i >>> 13 & 8191) - ($bf_load64_us_i_i >>> 13 & 8191) | 0;
                    if (((($sub_us_i_i | 0) < 0 ? -$sub_us_i_i | 0 : $sub_us_i_i) | 0) <= ($flagMergeThr | 0)) {
                     $bf_lshr71_us_i_i = $bf_load61_us_i_i >>> 26;
                     $bf_lshr73_us_i_i = $bf_load64_us_i_i >>> 26;
                     HEAP32[$55 >> 2] = ($bf_lshr71_us_i_i >>> 0 > $bf_lshr73_us_i_i >>> 0 ? $bf_lshr71_us_i_i : $bf_lshr73_us_i_i) << 26 | $bf_load61_us_i_i & 67108863;
                    }
                    $next82_us_i_i = $cur_0_ph67_i_i + 4 | 0;
                    $63 = HEAP32[$next82_us_i_i >> 2] | 0;
                    HEAP32[$next82_us_i_i >> 2] = HEAP32[$freelist_i_i_i >> 2];
                    HEAP32[$freelist_i_i_i >> 2] = $cur_0_ph67_i_i;
                    HEAP32[(HEAP32[$spans_i_i >> 2] | 0) + ($add_i_i << 2) >> 2] = $63;
                    $prev_0_ph_be_i_i = 0;
                    $cur_0_ph_be_i_i = $63;
                   }
                  } else {
                   $cur_057_i_i = $cur_0_ph67_i_i;
                   while (1) {
                    $58 = $cur_057_i_i;
                    $bf_load17_i_i = HEAP32[$58 >> 2] | 0;
                    $bf_clear18_i_i = $bf_load17_i_i & 8191;
                    $bf_load19_i_i = HEAP32[$55 >> 2] | 0;
                    if ($bf_clear18_i_i >>> 0 > ($bf_load19_i_i >>> 13 & 8191) >>> 0) {
                     $prev_0_ph63_i_i = $prev_0_ph68_i_i;
                     label = 61;
                     break L60;
                    }
                    $bf_clear26_i_i = $bf_load19_i_i & 8191;
                    if (($bf_load17_i_i >>> 13 & 8191) >>> 0 < $bf_clear26_i_i >>> 0) {
                     $cur_0_lcssa54_i_i = $cur_057_i_i;
                     label = 42;
                     break L62;
                    }
                    if ($bf_clear18_i_i >>> 0 < $bf_clear26_i_i >>> 0) {
                     $bf_set42_i_i = $bf_load19_i_i & -8192 | $bf_clear18_i_i;
                     HEAP32[$55 >> 2] = $bf_set42_i_i;
                     $bf_load44_i_i = HEAP32[$58 >> 2] | 0;
                     $bf_load47_i_i = $bf_set42_i_i;
                    } else {
                     $bf_load44_i_i = $bf_load17_i_i;
                     $bf_load47_i_i = $bf_load19_i_i;
                    }
                    $bf_clear46_i_i = $bf_load44_i_i >>> 13 & 8191;
                    if ($bf_clear46_i_i >>> 0 > ($bf_load47_i_i >>> 13 & 8191) >>> 0) {
                     $bf_set59_i_i = $bf_clear46_i_i << 13 | $bf_load47_i_i & -67100673;
                     HEAP32[$55 >> 2] = $bf_set59_i_i;
                     $bf_load61_i_i = $bf_set59_i_i;
                     $bf_load64_i_i = HEAP32[$58 >> 2] | 0;
                    } else {
                     $bf_load61_i_i = $bf_load47_i_i;
                     $bf_load64_i_i = $bf_load44_i_i;
                    }
                    $sub_i_i = ($bf_load61_i_i >>> 13 & 8191) - ($bf_load64_i_i >>> 13 & 8191) | 0;
                    if (((($sub_i_i | 0) < 0 ? -$sub_i_i | 0 : $sub_i_i) | 0) <= ($flagMergeThr | 0)) {
                     $bf_lshr71_i_i = $bf_load61_i_i >>> 26;
                     $bf_lshr73_i_i = $bf_load64_i_i >>> 26;
                     HEAP32[$55 >> 2] = ($bf_lshr71_i_i >>> 0 > $bf_lshr73_i_i >>> 0 ? $bf_lshr71_i_i : $bf_lshr73_i_i) << 26 | $bf_load61_i_i & 67108863;
                    }
                    $next82_i_i = $cur_057_i_i + 4 | 0;
                    $61 = HEAP32[$next82_i_i >> 2] | 0;
                    HEAP32[$next82_i_i >> 2] = HEAP32[$freelist_i_i_i >> 2];
                    HEAP32[$freelist_i_i_i >> 2] = $cur_057_i_i;
                    HEAP32[$next85_i_i >> 2] = $61;
                    if (($61 | 0) == 0) {
                     $prev_0_ph63_i_i = $prev_0_ph68_i_i;
                     label = 61;
                     break L60;
                    } else {
                     $cur_057_i_i = $61;
                    }
                   }
                  }
                 } while (0);
                 if ((label | 0) == 42) {
                  label = 0;
                  $prev_0_ph_be_i_i = $cur_0_lcssa54_i_i;
                  $cur_0_ph_be_i_i = HEAP32[$cur_0_lcssa54_i_i + 4 >> 2] | 0;
                 }
                 if (($cur_0_ph_be_i_i | 0) == 0) {
                  $prev_0_ph63_i_i = $prev_0_ph_be_i_i;
                  label = 61;
                  break;
                 } else {
                  $cur_0_ph67_i_i = $cur_0_ph_be_i_i;
                  $prev_0_ph68_i_i = $prev_0_ph_be_i_i;
                 }
                }
                if ((label | 0) == 61) {
                 label = 0;
                 if (($prev_0_ph63_i_i | 0) != 0) {
                  $next94_i_i = $prev_0_ph63_i_i + 4 | 0;
                  HEAP32[$next_i_i >> 2] = HEAP32[$next94_i_i >> 2];
                  HEAP32[$next94_i_i >> 2] = $retval_0_i_i_i;
                  break;
                 }
                }
                $arrayidx99_i_i = (HEAP32[$spans_i_i >> 2] | 0) + ($add_i_i << 2) | 0;
                HEAP32[$next_i_i >> 2] = HEAP32[$arrayidx99_i_i >> 2];
                HEAP32[$arrayidx99_i_i >> 2] = $retval_0_i_i_i;
               }
              }
             }
            } while (0);
            if (($x_0171_i | 0) < ($cond5_i130_i | 0)) {
             $x_0171_i = $x_0171_i + 1 | 0;
            } else {
             break;
            }
           }
          }
         }
         if (($y_0174_i | 0) >= ($cond5_i124_i | 0)) {
          break L12;
         }
         $y_0174_i = $y_0174_i + 1 | 0;
         $39 = +HEAPF32[$arrayidx3 >> 2];
         $38 = +HEAPF32[$arrayidx2_i_i >> 2];
         $37 = +HEAPF32[$arrayidx4_i_i >> 2];
         $36 = +HEAPF32[$arrayidx8 >> 2];
         $35 = +HEAPF32[$arrayidx4_i77_i >> 2];
         $34 = +HEAPF32[$arrayidx8_i_i >> 2];
         $33 = +HEAPF32[$arrayidx13 >> 2];
         $32 = +HEAPF32[$arrayidx4_i81_i >> 2];
         $31 = +HEAPF32[$arrayidx8_i85_i >> 2];
         $30 = +HEAPF32[$arrayidx18_i_i >> 2];
        }
       }
      }
     }
    } while (0);
    $inc = $i_022 + 1 | 0;
    if (($inc | 0) >= ($nt | 0)) {
     break L4;
    }
    $i_022 = $inc;
    $8 = +HEAPF32[$cs >> 2];
   }
  }
 } while (0);
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 2);
 STACKTOP = sp;
 return;
}
function __ZL12drawMeshTileP11duDebugDrawRK9dtNavMeshPK14dtNavMeshQueryPK10dtMeshTileh($dd, $mesh, $query, $tile, $flags) {
 $dd = $dd | 0;
 $mesh = $mesh | 0;
 $query = $query | 0;
 $tile = $tile | 0;
 $flags = $flags | 0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $retval_0_i = 0, $and_i = 0, $6 = 0, $8 = 0, $header = 0, $10 = 0, $polys = 0, $detailMeshes = 0, $tobool = 0, $tobool11 = 0, $detailTris = 0, $12 = 0, $verts46 = 0, $detailVerts = 0, $13 = 0, $or4_i_i6 = 0, $m_nodePool_i = 0, $17 = 0, $i_0164 = 0, $18 = 0, $19 = 0, $20 = 0, $or = 0, $21 = 0, $add_i_i_i = 0, $add2_i_i_i = 0, $xor4_i_i_i = 0, $add7_i_i_i = 0, $i_05_i_i = 0, $24 = 0, $m_next_i_i = 0, $conv8_in_i_i = 0, $conv8_i_i = 0, $i_0_i_i = 0, $tobool4_i = 0, $and_i133 = 0, $conv22 = 0, $28 = 0, $col_0 = 0, $triCount = 0, $triBase = 0, $vertCount = 0, $vertBase = 0, $j_0158 = 0, $mul = 0, $34 = 0, $35 = 0, $conv36 = 0, $36 = 0, $37 = 0, $42 = 0, $conv36_1 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $50 = 0, $polys82 = 0, $offMeshCons = 0, $verts109 = 0, $52 = 0, $links = 0, $m_nodePool_i43 = 0, $_pre171 = 0, $i75_0153_us = 0, $53 = 0, $54 = 0, $conv98_us = 0, $55 = 0, $or2_i_i41 = 0, $or_i_us = 0, $sub103_us = 0, $59 = 0, $mul108_us = 0, $61 = 0, $arrayidx110_us = 0, $mul114_us = 0, $arrayidx116_us = 0, $k117_0145_us = 0, $k117_0149_us = 0, $endSet_0_off0148_us = 0, $startSet_0_off0147_us = 0, $63 = 0, $endSet_0_off0_lcssa_us = 0, $startSet_0_off0_lcssa_us = 0, $arrayidx144_us = 0, $arrayidx146_us = 0, $arrayidx148_us = 0, $rad_us = 0, $arrayidx166_us = 0, $arrayidx168_us = 0, $arrayidx170_us = 0, $111 = 0, $113 = 0, $114 = 0, $i75_0153 = 0, $115 = 0, $116 = 0, $or92 = 0, $117 = 0, $add_i_i_i47 = 0, $add2_i_i_i50 = 0, $xor4_i_i_i52 = 0, $add7_i_i_i55 = 0, $i_05_i_i63 = 0, $120 = 0, $m_next_i_i67 = 0, $conv8_in_i_i69 = 0, $conv8_i_i70 = 0, $i_0_i_i77 = 0, $conv98 = 0, $124 = 0, $or2_i_i105 = 0, $col89_0 = 0, $sub103 = 0, $129 = 0, $mul108 = 0, $131 = 0, $arrayidx110 = 0, $mul114 = 0, $arrayidx116 = 0, $k117_0145 = 0, $133 = 0, $k117_0149 = 0, $endSet_0_off0148 = 0, $startSet_0_off0147 = 0, $134 = 0, $endSet_0_off0_lcssa = 0, $startSet_0_off0_lcssa = 0, $arrayidx144 = 0, $arrayidx146 = 0, $arrayidx148 = 0, $rad = 0, $arrayidx166 = 0, $arrayidx168 = 0, $arrayidx170 = 0, $182 = 0, $verts256 = 0, $188 = 0, $i249_0144 = 0, $mul255 = 0, $189 = 0, $vtable266 = 0, $vfn267 = 0, $196 = 0, $vtable268 = 0, $vfn269 = 0, $197 = 0, $202 = 0, $conv36_2 = 0, $203 = 0, $204 = 0, label = 0;
 if (($tile | 0) == 0) {
  $retval_0_i = 0;
  $5 = HEAP32[$mesh + 76 >> 2] | 0;
  $4 = HEAP32[$mesh + 80 >> 2] | 0;
 } else {
  $2 = HEAP32[$mesh + 80 >> 2] | 0;
  $3 = HEAP32[$mesh + 76 >> 2] | 0;
  $retval_0_i = HEAP32[$tile >> 2] << $3 + $2 | (($tile - (HEAP32[$mesh + 68 >> 2] | 0) | 0) / 60 | 0) << $2;
  $5 = $3;
  $4 = $2;
 }
 $and_i = $retval_0_i >>> ($4 >>> 0) & (1 << $5) - 1;
 $6 = $dd;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2] & 127]($dd, 0);
 $8 = $dd;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] & 31]($dd, 2, 1.0);
 $header = $tile + 8 | 0;
 $10 = HEAP32[$header >> 2] | 0;
 if ((HEAP32[$10 + 24 >> 2] | 0) > 0) {
  $polys = $tile + 12 | 0;
  $detailMeshes = $tile + 24 | 0;
  $tobool = ($query | 0) == 0;
  $tobool11 = ($flags & 4) == 0;
  $detailTris = $tile + 32 | 0;
  $12 = $dd;
  $verts46 = $tile + 16 | 0;
  $detailVerts = $tile + 28 | 0;
  $13 = $and_i >>> 2;
  $or4_i_i6 = (($and_i >>> 1 & 1 | $13 & 2) * 63 | 0) + 63 | (($13 & 1 | $and_i >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($and_i >>> 4 & 2 | $and_i & 1, 4128768) | 0) + 4128768 | -2147483648;
  $m_nodePool_i = $query + 56 | 0;
  $i_0164 = 0;
  $17 = $10;
  while (1) {
   $18 = HEAP32[$polys >> 2] | 0;
   $19 = HEAP8[$18 + ($i_0164 << 5) + 31 >> 0] | 0;
   if (($19 & -64) << 24 >> 24 == 64) {
    $45 = $17;
   } else {
    $20 = HEAP32[$detailMeshes >> 2] | 0;
    L11 : do {
     if ($tobool) {
      label = 15;
     } else {
      $or = $i_0164 | $retval_0_i;
      $21 = HEAP32[$m_nodePool_i >> 2] | 0;
      if (($21 | 0) == 0) {
       label = 15;
      } else {
       $add_i_i_i = $or + ~($or << 15) | 0;
       $add2_i_i_i = ($add_i_i_i >>> 10 ^ $add_i_i_i) * 9 | 0;
       $xor4_i_i_i = $add2_i_i_i >>> 6 ^ $add2_i_i_i;
       $add7_i_i_i = $xor4_i_i_i + ~($xor4_i_i_i << 11) | 0;
       $i_05_i_i = HEAP16[(HEAP32[$21 + 4 >> 2] | 0) + (((HEAP32[$21 + 16 >> 2] | 0) - 1 & ($add7_i_i_i >>> 16 ^ $add7_i_i_i)) << 1) >> 1] | 0;
       if ($i_05_i_i << 16 >> 16 == -1) {
        label = 15;
       } else {
        $24 = HEAP32[$21 >> 2] | 0;
        $m_next_i_i = $21 + 8 | 0;
        $conv8_in_i_i = $i_05_i_i;
        while (1) {
         $conv8_i_i = $conv8_in_i_i & 65535;
         if ((HEAP32[$24 + ($conv8_i_i * 28 | 0) + 24 >> 2] | 0) == ($or | 0)) {
          break;
         }
         $i_0_i_i = HEAP16[(HEAP32[$m_next_i_i >> 2] | 0) + ($conv8_i_i << 1) >> 1] | 0;
         if ($i_0_i_i << 16 >> 16 == -1) {
          label = 15;
          break L11;
         } else {
          $conv8_in_i_i = $i_0_i_i;
         }
        }
        if (($24 + ($conv8_i_i * 28 | 0) | 0) == 0) {
         label = 15;
        } else {
         $tobool4_i = (HEAP32[$24 + ($conv8_i_i * 28 | 0) + 20 >> 2] | 0) < 0;
         if ($tobool4_i | $tobool11 ^ 1) {
          $col_0 = $tobool4_i ? 1073792255 : $or4_i_i6;
         } else {
          label = 16;
         }
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 15) {
     label = 0;
     if ($tobool11) {
      label = 16;
     } else {
      $col_0 = $or4_i_i6;
     }
    }
    if ((label | 0) == 16) {
     label = 0;
     $and_i133 = $19 & 63;
     if ($and_i133 << 24 >> 24 == 0) {
      $col_0 = 1090502656;
     } else {
      $conv22 = $and_i133 & 255;
      $28 = $conv22 >>> 2;
      $col_0 = (($conv22 >>> 1 & 1 | $28 & 2) * 63 | 0) + 63 | (($28 & 1 | $conv22 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv22 >>> 4 & 2 | $conv22 & 1, 4128768) | 0) + 4128768 | 1073741824;
     }
    }
    $triCount = $20 + ($i_0164 * 12 | 0) + 9 | 0;
    if ((HEAP8[$triCount >> 0] | 0) == 0) {
     $45 = $17;
    } else {
     $triBase = $20 + ($i_0164 * 12 | 0) + 4 | 0;
     $vertCount = $18 + ($i_0164 << 5) + 30 | 0;
     $vertBase = $20 + ($i_0164 * 12 | 0) | 0;
     $j_0158 = 0;
     do {
      $mul = (HEAP32[$triBase >> 2] | 0) + $j_0158 << 2;
      $34 = HEAP32[$detailTris >> 2] | 0;
      $35 = HEAP8[$34 + $mul >> 0] | 0;
      $conv36 = $35 & 255;
      $36 = HEAP8[$vertCount >> 0] | 0;
      $37 = HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] | 0;
      if (($35 & 255) >>> 0 < ($36 & 255) >>> 0) {
       FUNCTION_TABLE_viii[$37 & 31]($dd, (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$18 + ($i_0164 << 5) + 4 + ($conv36 << 1) >> 1] | 0) * 3 | 0) << 2) | 0, $col_0);
      } else {
       FUNCTION_TABLE_viii[$37 & 31]($dd, (HEAP32[$detailVerts >> 2] | 0) + ((($conv36 - ($36 & 255) + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0, $col_0);
      }
      $42 = HEAP8[$34 + ($mul | 1) >> 0] | 0;
      $conv36_1 = $42 & 255;
      $43 = HEAP8[$vertCount >> 0] | 0;
      $44 = HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] | 0;
      if (($42 & 255) >>> 0 < ($43 & 255) >>> 0) {
       FUNCTION_TABLE_viii[$44 & 31]($dd, (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$18 + ($i_0164 << 5) + 4 + ($conv36_1 << 1) >> 1] | 0) * 3 | 0) << 2) | 0, $col_0);
      } else {
       FUNCTION_TABLE_viii[$44 & 31]($dd, (HEAP32[$detailVerts >> 2] | 0) + ((($conv36_1 - ($43 & 255) + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0, $col_0);
      }
      $202 = HEAP8[$34 + ($mul | 2) >> 0] | 0;
      $conv36_2 = $202 & 255;
      $203 = HEAP8[$vertCount >> 0] | 0;
      $204 = HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] | 0;
      if (($202 & 255) >>> 0 < ($203 & 255) >>> 0) {
       FUNCTION_TABLE_viii[$204 & 31]($dd, (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$18 + ($i_0164 << 5) + 4 + ($conv36_2 << 1) >> 1] | 0) * 3 | 0) << 2) | 0, $col_0);
      } else {
       FUNCTION_TABLE_viii[$204 & 31]($dd, (HEAP32[$detailVerts >> 2] | 0) + ((($conv36_2 - ($203 & 255) + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0, $col_0);
      }
      $j_0158 = $j_0158 + 1 | 0;
     } while (($j_0158 | 0) < (HEAPU8[$triCount >> 0] | 0));
     $45 = HEAP32[$header >> 2] | 0;
    }
   }
   $i_0164 = $i_0164 + 1 | 0;
   if (($i_0164 | 0) >= (HEAP32[$45 + 24 >> 2] | 0)) {
    break;
   } else {
    $17 = $45;
   }
  }
 }
 $47 = $dd;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 511]($dd);
 __ZL18drawPolyBoundariesP11duDebugDrawPK10dtMeshTilejfb($dd, $tile, 541077504, 1.5, 1);
 __ZL18drawPolyBoundariesP11duDebugDrawPK10dtMeshTilejfb($dd, $tile, -599773184, 2.5, 0);
 if (!(($flags & 1) == 0)) {
  FUNCTION_TABLE_viif[HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] & 31]($dd, 1, 2.0);
  $50 = HEAP32[$header >> 2] | 0;
  L46 : do {
   if ((HEAP32[$50 + 24 >> 2] | 0) > 0) {
    $polys82 = $tile + 12 | 0;
    $offMeshCons = $tile + 40 | 0;
    $verts109 = $tile + 16 | 0;
    $52 = $dd;
    $links = $tile + 20 | 0;
    if (($query | 0) == 0) {
     $i75_0153_us = 0;
     $_pre171 = $50;
     while (1) {
      $53 = HEAP32[$polys82 >> 2] | 0;
      $54 = HEAP8[$53 + ($i75_0153_us << 5) + 31 >> 0] | 0;
      if (($54 & -64) << 24 >> 24 == 64) {
       $conv98_us = $54 & 63;
       $55 = $conv98_us >>> 2;
       $or2_i_i41 = (($conv98_us >>> 1 & 1 | $55 & 2) * 63 | 0) + 63 | (($55 & 1 | $conv98_us >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv98_us >>> 4 & 2 | $conv98_us & 1, 4128768) | 0) + 4128768;
       $or_i_us = $or2_i_i41 >>> 1 & 8355711 | ($or2_i_i41 & 587202560 | -603979776);
       $sub103_us = $i75_0153_us - (HEAP32[$_pre171 + 56 >> 2] | 0) | 0;
       $59 = HEAP32[$offMeshCons >> 2] | 0;
       $mul108_us = (HEAPU16[$53 + ($i75_0153_us << 5) + 4 >> 1] | 0) * 3 | 0;
       $61 = HEAP32[$verts109 >> 2] | 0;
       $arrayidx110_us = $61 + ($mul108_us << 2) | 0;
       $mul114_us = (HEAPU16[$53 + ($i75_0153_us << 5) + 6 >> 1] | 0) * 3 | 0;
       $arrayidx116_us = $61 + ($mul114_us << 2) | 0;
       $k117_0145_us = HEAP32[$53 + ($i75_0153_us << 5) >> 2] | 0;
       if (($k117_0145_us | 0) == -1) {
        $startSet_0_off0_lcssa_us = -1005575972;
        $endSet_0_off0_lcssa_us = -1005575972;
       } else {
        $113 = HEAP32[$links >> 2] | 0;
        $startSet_0_off0147_us = 0;
        $endSet_0_off0148_us = 0;
        $k117_0149_us = $k117_0145_us;
        do {
         $63 = HEAP8[$113 + ($k117_0149_us * 12 | 0) + 8 >> 0] | 0;
         $startSet_0_off0147_us = $63 << 24 >> 24 == 0 | $startSet_0_off0147_us;
         $endSet_0_off0148_us = $63 << 24 >> 24 == 1 | $endSet_0_off0148_us;
         $k117_0149_us = HEAP32[$113 + ($k117_0149_us * 12 | 0) + 4 >> 2] | 0;
        } while (!(($k117_0149_us | 0) == -1));
        $startSet_0_off0_lcssa_us = $startSet_0_off0147_us ? $or_i_us : -1005575972;
        $endSet_0_off0_lcssa_us = $endSet_0_off0148_us ? $or_i_us : -1005575972;
       }
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx110_us >> 2], +HEAPF32[$61 + ($mul108_us + 1 << 2) >> 2], +HEAPF32[$61 + ($mul108_us + 2 << 2) >> 2], $or_i_us);
       $arrayidx144_us = $59 + ($sub103_us * 36 | 0) | 0;
       $arrayidx146_us = $59 + ($sub103_us * 36 | 0) + 4 | 0;
       $arrayidx148_us = $59 + ($sub103_us * 36 | 0) + 8 | 0;
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144_us >> 2], +HEAPF32[$arrayidx146_us >> 2], +HEAPF32[$arrayidx148_us >> 2], $or_i_us);
       $rad_us = $59 + ($sub103_us * 36 | 0) + 24 | 0;
       __Z14duAppendCircleP11duDebugDrawffffj($dd, +HEAPF32[$arrayidx144_us >> 2], +HEAPF32[$arrayidx146_us >> 2] + .10000000149011612, +HEAPF32[$arrayidx148_us >> 2], +HEAPF32[$rad_us >> 2], $startSet_0_off0_lcssa_us);
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx116_us >> 2], +HEAPF32[$61 + ($mul114_us + 1 << 2) >> 2], +HEAPF32[$61 + ($mul114_us + 2 << 2) >> 2], $or_i_us);
       $arrayidx166_us = $59 + ($sub103_us * 36 | 0) + 12 | 0;
       $arrayidx168_us = $59 + ($sub103_us * 36 | 0) + 16 | 0;
       $arrayidx170_us = $59 + ($sub103_us * 36 | 0) + 20 | 0;
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166_us >> 2], +HEAPF32[$arrayidx168_us >> 2], +HEAPF32[$arrayidx170_us >> 2], $or_i_us);
       __Z14duAppendCircleP11duDebugDrawffffj($dd, +HEAPF32[$arrayidx166_us >> 2], +HEAPF32[$arrayidx168_us >> 2] + .10000000149011612, +HEAPF32[$arrayidx170_us >> 2], +HEAPF32[$rad_us >> 2], $endSet_0_off0_lcssa_us);
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144_us >> 2], +HEAPF32[$arrayidx146_us >> 2], +HEAPF32[$arrayidx148_us >> 2], -1002426368);
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144_us >> 2], +HEAPF32[$arrayidx146_us >> 2] + .20000000298023224, +HEAPF32[$arrayidx148_us >> 2], -1002426368);
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166_us >> 2], +HEAPF32[$arrayidx168_us >> 2], +HEAPF32[$arrayidx170_us >> 2], -1002426368);
       FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166_us >> 2], +HEAPF32[$arrayidx168_us >> 2] + .20000000298023224, +HEAPF32[$arrayidx170_us >> 2], -1002426368);
       __Z11duAppendArcP11duDebugDrawfffffffffj($dd, +HEAPF32[$arrayidx144_us >> 2], +HEAPF32[$arrayidx146_us >> 2], +HEAPF32[$arrayidx148_us >> 2], +HEAPF32[$arrayidx166_us >> 2], +HEAPF32[$arrayidx168_us >> 2], +HEAPF32[$arrayidx170_us >> 2], (HEAP8[$59 + ($sub103_us * 36 | 0) + 30 >> 0] & 1) != 0 ? .6000000238418579 : 0.0, $or_i_us);
       $111 = HEAP32[$header >> 2] | 0;
      } else {
       $111 = $_pre171;
      }
      $i75_0153_us = $i75_0153_us + 1 | 0;
      if (($i75_0153_us | 0) >= (HEAP32[$111 + 24 >> 2] | 0)) {
       break L46;
      } else {
       $_pre171 = $111;
      }
     }
    }
    $m_nodePool_i43 = $query + 56 | 0;
    $i75_0153 = 0;
    $114 = $50;
    while (1) {
     $115 = HEAP32[$polys82 >> 2] | 0;
     $116 = HEAP8[$115 + ($i75_0153 << 5) + 31 >> 0] | 0;
     if (($116 & -64) << 24 >> 24 == 64) {
      $or92 = $i75_0153 | $retval_0_i;
      $117 = HEAP32[$m_nodePool_i43 >> 2] | 0;
      L65 : do {
       if (($117 | 0) == 0) {
        label = 45;
       } else {
        $add_i_i_i47 = $or92 + ~($or92 << 15) | 0;
        $add2_i_i_i50 = ($add_i_i_i47 >>> 10 ^ $add_i_i_i47) * 9 | 0;
        $xor4_i_i_i52 = $add2_i_i_i50 >>> 6 ^ $add2_i_i_i50;
        $add7_i_i_i55 = $xor4_i_i_i52 + ~($xor4_i_i_i52 << 11) | 0;
        $i_05_i_i63 = HEAP16[(HEAP32[$117 + 4 >> 2] | 0) + (((HEAP32[$117 + 16 >> 2] | 0) - 1 & ($add7_i_i_i55 >>> 16 ^ $add7_i_i_i55)) << 1) >> 1] | 0;
        if ($i_05_i_i63 << 16 >> 16 == -1) {
         label = 45;
        } else {
         $120 = HEAP32[$117 >> 2] | 0;
         $m_next_i_i67 = $117 + 8 | 0;
         $conv8_in_i_i69 = $i_05_i_i63;
         while (1) {
          $conv8_i_i70 = $conv8_in_i_i69 & 65535;
          if ((HEAP32[$120 + ($conv8_i_i70 * 28 | 0) + 24 >> 2] | 0) == ($or92 | 0)) {
           break;
          }
          $i_0_i_i77 = HEAP16[(HEAP32[$m_next_i_i67 >> 2] | 0) + ($conv8_i_i70 << 1) >> 1] | 0;
          if ($i_0_i_i77 << 16 >> 16 == -1) {
           label = 45;
           break L65;
          } else {
           $conv8_in_i_i69 = $i_0_i_i77;
          }
         }
         if (($120 + ($conv8_i_i70 * 28 | 0) | 0) == 0) {
          label = 45;
         } else {
          if ((HEAP32[$120 + ($conv8_i_i70 * 28 | 0) + 20 >> 2] | 0) < 0) {
           $col89_0 = -603929345;
          } else {
           label = 45;
          }
         }
        }
       }
      } while (0);
      if ((label | 0) == 45) {
       label = 0;
       $conv98 = $116 & 63;
       $124 = $conv98 >>> 2;
       $or2_i_i105 = (($conv98 >>> 1 & 1 | $124 & 2) * 63 | 0) + 63 | (($124 & 1 | $conv98 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv98 >>> 4 & 2 | $conv98 & 1, 4128768) | 0) + 4128768;
       $col89_0 = $or2_i_i105 >>> 1 & 8355711 | ($or2_i_i105 & 587202560 | -603979776);
      }
      $sub103 = $i75_0153 - (HEAP32[$114 + 56 >> 2] | 0) | 0;
      $129 = HEAP32[$offMeshCons >> 2] | 0;
      $mul108 = (HEAPU16[$115 + ($i75_0153 << 5) + 4 >> 1] | 0) * 3 | 0;
      $131 = HEAP32[$verts109 >> 2] | 0;
      $arrayidx110 = $131 + ($mul108 << 2) | 0;
      $mul114 = (HEAPU16[$115 + ($i75_0153 << 5) + 6 >> 1] | 0) * 3 | 0;
      $arrayidx116 = $131 + ($mul114 << 2) | 0;
      $k117_0145 = HEAP32[$115 + ($i75_0153 << 5) >> 2] | 0;
      if (($k117_0145 | 0) == -1) {
       $startSet_0_off0_lcssa = -1005575972;
       $endSet_0_off0_lcssa = -1005575972;
      } else {
       $133 = HEAP32[$links >> 2] | 0;
       $startSet_0_off0147 = 0;
       $endSet_0_off0148 = 0;
       $k117_0149 = $k117_0145;
       do {
        $134 = HEAP8[$133 + ($k117_0149 * 12 | 0) + 8 >> 0] | 0;
        $startSet_0_off0147 = $134 << 24 >> 24 == 0 | $startSet_0_off0147;
        $endSet_0_off0148 = $134 << 24 >> 24 == 1 | $endSet_0_off0148;
        $k117_0149 = HEAP32[$133 + ($k117_0149 * 12 | 0) + 4 >> 2] | 0;
       } while (!(($k117_0149 | 0) == -1));
       $startSet_0_off0_lcssa = $startSet_0_off0147 ? $col89_0 : -1005575972;
       $endSet_0_off0_lcssa = $endSet_0_off0148 ? $col89_0 : -1005575972;
      }
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx110 >> 2], +HEAPF32[$131 + ($mul108 + 1 << 2) >> 2], +HEAPF32[$131 + ($mul108 + 2 << 2) >> 2], $col89_0);
      $arrayidx144 = $129 + ($sub103 * 36 | 0) | 0;
      $arrayidx146 = $129 + ($sub103 * 36 | 0) + 4 | 0;
      $arrayidx148 = $129 + ($sub103 * 36 | 0) + 8 | 0;
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144 >> 2], +HEAPF32[$arrayidx146 >> 2], +HEAPF32[$arrayidx148 >> 2], $col89_0);
      $rad = $129 + ($sub103 * 36 | 0) + 24 | 0;
      __Z14duAppendCircleP11duDebugDrawffffj($dd, +HEAPF32[$arrayidx144 >> 2], +HEAPF32[$arrayidx146 >> 2] + .10000000149011612, +HEAPF32[$arrayidx148 >> 2], +HEAPF32[$rad >> 2], $startSet_0_off0_lcssa);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx116 >> 2], +HEAPF32[$131 + ($mul114 + 1 << 2) >> 2], +HEAPF32[$131 + ($mul114 + 2 << 2) >> 2], $col89_0);
      $arrayidx166 = $129 + ($sub103 * 36 | 0) + 12 | 0;
      $arrayidx168 = $129 + ($sub103 * 36 | 0) + 16 | 0;
      $arrayidx170 = $129 + ($sub103 * 36 | 0) + 20 | 0;
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166 >> 2], +HEAPF32[$arrayidx168 >> 2], +HEAPF32[$arrayidx170 >> 2], $col89_0);
      __Z14duAppendCircleP11duDebugDrawffffj($dd, +HEAPF32[$arrayidx166 >> 2], +HEAPF32[$arrayidx168 >> 2] + .10000000149011612, +HEAPF32[$arrayidx170 >> 2], +HEAPF32[$rad >> 2], $endSet_0_off0_lcssa);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144 >> 2], +HEAPF32[$arrayidx146 >> 2], +HEAPF32[$arrayidx148 >> 2], -1002426368);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx144 >> 2], +HEAPF32[$arrayidx146 >> 2] + .20000000298023224, +HEAPF32[$arrayidx148 >> 2], -1002426368);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166 >> 2], +HEAPF32[$arrayidx168 >> 2], +HEAPF32[$arrayidx170 >> 2], -1002426368);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx166 >> 2], +HEAPF32[$arrayidx168 >> 2] + .20000000298023224, +HEAPF32[$arrayidx170 >> 2], -1002426368);
      __Z11duAppendArcP11duDebugDrawfffffffffj($dd, +HEAPF32[$arrayidx144 >> 2], +HEAPF32[$arrayidx146 >> 2], +HEAPF32[$arrayidx148 >> 2], +HEAPF32[$arrayidx166 >> 2], +HEAPF32[$arrayidx168 >> 2], +HEAPF32[$arrayidx170 >> 2], (HEAP8[$129 + ($sub103 * 36 | 0) + 30 >> 0] & 1) != 0 ? .6000000238418579 : 0.0, $col89_0);
      $182 = HEAP32[$header >> 2] | 0;
     } else {
      $182 = $114;
     }
     $i75_0153 = $i75_0153 + 1 | 0;
     if (($i75_0153 | 0) >= (HEAP32[$182 + 24 >> 2] | 0)) {
      break;
     } else {
      $114 = $182;
     }
    }
   }
  } while (0);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 511]($dd);
 }
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] & 31]($dd, 0, 3.0);
 if ((HEAP32[(HEAP32[$header >> 2] | 0) + 28 >> 2] | 0) <= 0) {
  $vtable266 = HEAP32[$47 >> 2] | 0;
  $vfn267 = $vtable266 + 36 | 0;
  $196 = HEAP32[$vfn267 >> 2] | 0;
  FUNCTION_TABLE_vi[$196 & 511]($dd);
  $vtable268 = HEAP32[$6 >> 2] | 0;
  $vfn269 = $vtable268 + 8 | 0;
  $197 = HEAP32[$vfn269 >> 2] | 0;
  FUNCTION_TABLE_vii[$197 & 127]($dd, 1);
  return;
 }
 $verts256 = $tile + 16 | 0;
 $188 = $dd;
 $i249_0144 = 0;
 do {
  $mul255 = $i249_0144 * 3 | 0;
  $189 = HEAP32[$verts256 >> 2] | 0;
  FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$188 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$189 + ($mul255 << 2) >> 2], +HEAPF32[$189 + ($mul255 + 1 << 2) >> 2], +HEAPF32[$189 + ($mul255 + 2 << 2) >> 2], -1006632960);
  $i249_0144 = $i249_0144 + 1 | 0;
 } while (($i249_0144 | 0) < (HEAP32[(HEAP32[$header >> 2] | 0) + 28 >> 2] | 0));
 $vtable266 = HEAP32[$47 >> 2] | 0;
 $vfn267 = $vtable266 + 36 | 0;
 $196 = HEAP32[$vfn267 >> 2] | 0;
 FUNCTION_TABLE_vi[$196 & 511]($dd);
 $vtable268 = HEAP32[$6 >> 2] | 0;
 $vfn269 = $vtable268 + 8 | 0;
 $197 = HEAP32[$vfn269 >> 2] | 0;
 FUNCTION_TABLE_vii[$197 & 127]($dd, 1);
 return;
}
function __ZN9dtNavMesh15connectExtLinksEP10dtMeshTileS1_i($this, $tile, $target, $side) {
 $this = $this | 0;
 $tile = $tile | 0;
 $target = $target | 0;
 $side = $side | 0;
 var $nei = 0, $neia = 0, $1 = 0, $cmp14 = 0, $verts20 = 0, $linksFreeList_i = 0, $links_i = 0, $2 = 0, $tobool_i = 0, $m_tiles_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $salt_i_i = 0, $m_polyBits_i_i_i = 0, $m_tileBits_i_i_i = 0, $header_i = 0, $polys_i = 0, $verts18_i = 0, $i_099 = 0, $3 = 0, $conv = 0, $firstLink = 0, $j_096 = 0, $4 = 0, $conv6 = 0, $mul = 0, $6 = 0, $arrayidx21 = 0, $mul25 = 0, $arrayidx27 = 0, $add_i = 0, $and_i = 0, $8 = 0, $9 = 0.0, $10 = 0.0, $15 = 0.0, $16 = 0.0, $21 = 0.0, $amin_sroa_0_0_load105_i = 0.0, $22 = 0.0, $amax_sroa_0_0_load104_i = 0.0, $amax_sroa_0_0_load104108_i = 0.0, $23 = 0.0, $amin_sroa_0_0_load105106_i = 0.0, $24 = 0.0, $amax_sroa_0_0_load104112_i = 0.0, $26 = 0.0, $amin_sroa_0_0_load105111_i = 0.0, $27 = 0.0, $amax_sroa_0_0_load104109_i = 0.0, $29 = 0.0, $amin_sroa_0_0_load105107_i = 0.0, $30 = 0.0, $retval_0_i77_i = 0.0, $33 = 0, $or4_i_i_i = 0, $35 = 0, $36 = 0, $37 = 0, $conv12_i = 0, $add_i_i = 0.0, $sub_i_i = 0.0, $div_i_i = 0.0, $sub15_i_i = 0.0, $walkableClimb_i = 0, $n_0145_i = 0, $i_0142_i = 0, $bmax_sroa_0_0_load84141_i = 0.0, $bmax_sroa_6_4_load89140_i = 0.0, $bmin_sroa_0_0_load94139_i = 0.0, $bmin_sroa_6_4_load99138_i = 0.0, $38 = 0, $conv6_i = 0, $j_0132_i = 0, $bmax_sroa_0_0_load86131_i = 0.0, $bmax_sroa_6_4_load91130_i = 0.0, $bmin_sroa_0_0_load96129_i = 0.0, $bmin_sroa_6_4_load101128_i = 0.0, $mul_i = 0, $41 = 0, $arrayidx19_i = 0, $add_i1 = 0, $42 = 0, $retval_0_i69_i = 0.0, $sub_i = 0.0, $cond_i67_i = 0.0, $mul23_i = 0, $45 = 0.0, $46 = 0.0, $51 = 0.0, $52 = 0.0, $bmin_sroa_6_4_load103_i = 0.0, $bmin_sroa_0_0_load98_i = 0.0, $bmax_sroa_6_4_load93_i = 0.0, $bmax_sroa_0_0_load88_i = 0.0, $57 = 0.0, $add2_i_i = 0.0, $cond_i_i_i = 0.0, $sub5_i_i = 0.0, $cond_i32_i_i = 0.0, $div22_i_i = 0.0, $sub26_i_i = 0.0, $sub35_i_i = 0.0, $sub36_i_i = 0.0, $mul41_i_i = 0.0, $mul_i_i_i = 0.0, $mul46_i = 0, $inc58_pre_phi_i = 0, $bmin_sroa_6_4_load102_i = 0.0, $bmin_sroa_0_0_load97_i = 0.0, $bmax_sroa_6_4_load92_i = 0.0, $bmax_sroa_0_0_load87_i = 0.0, $bmin_sroa_6_4_load100_i = 0.0, $bmin_sroa_0_0_load95_i = 0.0, $bmax_sroa_6_4_load90_i = 0.0, $bmax_sroa_0_0_load85_i = 0.0, $n_1_i = 0, $conv38 = 0, $conv39 = 0, $58 = 0, $arrayidx48 = 0, $arrayidx49 = 0, $_pre101 = 0, $cond = 0, $60 = 0, $k_094_us = 0, $61 = 0, $next_i_us = 0, $62 = 0, $mul45_us = 0, $66 = 0.0, $sub51_us = 0.0, $div_us = 0.0, $div60_us = 0.0, $cmp61_us = 0, $div87_us = 0.0, $div6086_us = 0.0, $cond5_i75_us = 0, $cond5_i69_us = 0, $71 = 0, $72 = 0, $k_094 = 0, $73 = 0, $next_i = 0, $74 = 0, $mul75 = 0, $78 = 0.0, $sub82 = 0.0, $div83 = 0.0, $div93 = 0.0, $cmp94 = 0, $div8385 = 0.0, $div9384 = 0.0, $cond5_i63 = 0, $cond5_i = 0, $83 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $nei = sp | 0;
 $neia = sp + 16 | 0;
 if (($tile | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $1 = HEAP32[(HEAP32[$tile + 8 >> 2] | 0) + 24 >> 2] | 0;
 if (($1 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $cmp14 = ($side | 0) == -1;
 $verts20 = $tile + 16 | 0;
 $linksFreeList_i = $tile + 4 | 0;
 $links_i = $tile + 20 | 0;
 $2 = HEAP32[$tile + 12 >> 2] | 0;
 $tobool_i = ($target | 0) == 0;
 $m_tiles_i_i = $this + 68 | 0;
 $sub_ptr_lhs_cast_i_i = $target;
 $salt_i_i = $target | 0;
 $m_polyBits_i_i_i = $this + 80 | 0;
 $m_tileBits_i_i_i = $this + 76 | 0;
 $header_i = $target + 8 | 0;
 $polys_i = $target + 12 | 0;
 $verts18_i = $target + 16 | 0;
 $i_099 = 0;
 do {
  $3 = HEAP8[$2 + ($i_099 << 5) + 30 >> 0] | 0;
  $conv = $3 & 255;
  if (!($3 << 24 >> 24 == 0)) {
   $firstLink = $2 + ($i_099 << 5) | 0;
   $j_096 = 0;
   do {
    $4 = HEAP16[$2 + ($i_099 << 5) + 16 + ($j_096 << 1) >> 1] | 0;
    $conv6 = $4 & 65535;
    L13 : do {
     if (($conv6 & 32768 | 0) != 0) {
      if ($cmp14 | ($conv6 & 255 | 0) == ($side | 0)) {
       $mul = (HEAPU16[$2 + ($i_099 << 5) + 4 + ($j_096 << 1) >> 1] | 0) * 3 | 0;
       $6 = HEAP32[$verts20 >> 2] | 0;
       $arrayidx21 = $6 + ($mul << 2) | 0;
       $mul25 = (HEAPU16[$2 + ($i_099 << 5) + 4 + ((($j_096 + 1 | 0) % ($conv | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
       $arrayidx27 = $6 + ($mul25 << 2) | 0;
       $add_i = $conv6 + 4 | 0;
       $and_i = $add_i & 7;
       if (!$tobool_i) {
        $8 = $add_i & 3;
        do {
         if (($8 | 0) == 0) {
          $9 = +HEAPF32[$6 + ($mul + 2 << 2) >> 2];
          $10 = +HEAPF32[$6 + ($mul25 + 2 << 2) >> 2];
          if ($9 < $10) {
           $amax_sroa_0_0_load104_i = $10;
           $22 = +HEAPF32[$6 + ($mul25 + 1 << 2) >> 2];
           $amin_sroa_0_0_load105_i = $9;
           $21 = +HEAPF32[$6 + ($mul + 1 << 2) >> 2];
           label = 16;
           break;
          } else {
           $24 = +HEAPF32[$6 + ($mul25 + 1 << 2) >> 2];
           $amin_sroa_0_0_load105106_i = $10;
           $23 = +HEAPF32[$6 + ($mul + 1 << 2) >> 2];
           $amax_sroa_0_0_load104108_i = $9;
           label = 17;
           break;
          }
         } else if (($8 | 0) == 2) {
          $15 = +HEAPF32[$arrayidx21 >> 2];
          $16 = +HEAPF32[$arrayidx27 >> 2];
          if ($15 < $16) {
           $amax_sroa_0_0_load104_i = $16;
           $22 = +HEAPF32[$6 + ($mul25 + 1 << 2) >> 2];
           $amin_sroa_0_0_load105_i = $15;
           $21 = +HEAPF32[$6 + ($mul + 1 << 2) >> 2];
           label = 16;
           break;
          } else {
           $27 = +HEAPF32[$6 + ($mul25 + 1 << 2) >> 2];
           $amin_sroa_0_0_load105111_i = $16;
           $26 = +HEAPF32[$6 + ($mul + 1 << 2) >> 2];
           $amax_sroa_0_0_load104112_i = $15;
           label = 18;
           break;
          }
         } else {
          $amax_sroa_0_0_load104_i = 0.0;
          $22 = 0.0;
          $amin_sroa_0_0_load105_i = 0.0;
          $21 = 0.0;
          label = 16;
         }
        } while (0);
        if ((label | 0) == 16) {
         label = 0;
         if (($8 | 0) == 0) {
          $24 = $21;
          $amin_sroa_0_0_load105106_i = $amin_sroa_0_0_load105_i;
          $23 = $22;
          $amax_sroa_0_0_load104108_i = $amax_sroa_0_0_load104_i;
          label = 17;
         } else if (($8 | 0) == 2) {
          $27 = $21;
          $amin_sroa_0_0_load105111_i = $amin_sroa_0_0_load105_i;
          $26 = $22;
          $amax_sroa_0_0_load104112_i = $amax_sroa_0_0_load104_i;
          label = 18;
         } else {
          $retval_0_i77_i = 0.0;
          $30 = $21;
          $amin_sroa_0_0_load105107_i = $amin_sroa_0_0_load105_i;
          $29 = $22;
          $amax_sroa_0_0_load104109_i = $amax_sroa_0_0_load104_i;
         }
        }
        if ((label | 0) == 17) {
         label = 0;
         $retval_0_i77_i = +HEAPF32[$arrayidx21 >> 2];
         $30 = $24;
         $amin_sroa_0_0_load105107_i = $amin_sroa_0_0_load105106_i;
         $29 = $23;
         $amax_sroa_0_0_load104109_i = $amax_sroa_0_0_load104108_i;
        } else if ((label | 0) == 18) {
         label = 0;
         $retval_0_i77_i = +HEAPF32[$6 + ($mul + 2 << 2) >> 2];
         $30 = $27;
         $amin_sroa_0_0_load105107_i = $amin_sroa_0_0_load105111_i;
         $29 = $26;
         $amax_sroa_0_0_load104109_i = $amax_sroa_0_0_load104112_i;
        }
        $33 = HEAP32[$m_polyBits_i_i_i >> 2] | 0;
        $or4_i_i_i = HEAP32[$salt_i_i >> 2] << (HEAP32[$m_tileBits_i_i_i >> 2] | 0) + $33 | (($sub_ptr_lhs_cast_i_i - (HEAP32[$m_tiles_i_i >> 2] | 0) | 0) / 60 | 0) << $33;
        $35 = HEAP32[$header_i >> 2] | 0;
        $36 = HEAP32[$35 + 24 >> 2] | 0;
        if (($36 | 0) > 0) {
         $37 = HEAP32[$polys_i >> 2] | 0;
         $conv12_i = $and_i | 32768;
         $add_i_i = $amin_sroa_0_0_load105107_i + .009999999776482582;
         $sub_i_i = $amax_sroa_0_0_load104109_i + -.009999999776482582;
         $div_i_i = ($29 - $30) / ($amax_sroa_0_0_load104109_i - $amin_sroa_0_0_load105107_i);
         $sub15_i_i = $30 - $amin_sroa_0_0_load105107_i * $div_i_i;
         $walkableClimb_i = $35 + 68 | 0;
         $bmin_sroa_6_4_load99138_i = 0.0;
         $bmin_sroa_0_0_load94139_i = 0.0;
         $bmax_sroa_6_4_load89140_i = 0.0;
         $bmax_sroa_0_0_load84141_i = 0.0;
         $i_0142_i = 0;
         $n_0145_i = 0;
         while (1) {
          $38 = HEAP8[$37 + ($i_0142_i << 5) + 30 >> 0] | 0;
          $conv6_i = $38 & 255;
          L35 : do {
           if ($38 << 24 >> 24 == 0) {
            $n_1_i = $n_0145_i;
            $bmax_sroa_0_0_load85_i = $bmax_sroa_0_0_load84141_i;
            $bmax_sroa_6_4_load90_i = $bmax_sroa_6_4_load89140_i;
            $bmin_sroa_0_0_load95_i = $bmin_sroa_0_0_load94139_i;
            $bmin_sroa_6_4_load100_i = $bmin_sroa_6_4_load99138_i;
           } else {
            $bmin_sroa_6_4_load101128_i = $bmin_sroa_6_4_load99138_i;
            $bmin_sroa_0_0_load96129_i = $bmin_sroa_0_0_load94139_i;
            $bmax_sroa_6_4_load91130_i = $bmax_sroa_6_4_load89140_i;
            $bmax_sroa_0_0_load86131_i = $bmax_sroa_0_0_load84141_i;
            $j_0132_i = 0;
            while (1) {
             if ((HEAPU16[$37 + ($i_0142_i << 5) + 16 + ($j_0132_i << 1) >> 1] | 0 | 0) == ($conv12_i | 0)) {
              $mul_i = (HEAPU16[$37 + ($i_0142_i << 5) + 4 + ($j_0132_i << 1) >> 1] | 0) * 3 | 0;
              $41 = HEAP32[$verts18_i >> 2] | 0;
              $arrayidx19_i = $41 + ($mul_i << 2) | 0;
              $add_i1 = $j_0132_i + 1 | 0;
              $42 = HEAP16[$37 + ($i_0142_i << 5) + 4 + ((($add_i1 | 0) % ($conv6_i | 0) | 0) << 1) >> 1] | 0;
              if (($8 | 0) == 0) {
               $retval_0_i69_i = +HEAPF32[$arrayidx19_i >> 2];
              } else if (($8 | 0) == 2) {
               $retval_0_i69_i = +HEAPF32[$41 + ($mul_i + 2 << 2) >> 2];
              } else {
               $retval_0_i69_i = 0.0;
              }
              $sub_i = $retval_0_i77_i - $retval_0_i69_i;
              if ($sub_i < 0.0) {
               $cond_i67_i = -0.0 - $sub_i;
              } else {
               $cond_i67_i = $sub_i;
              }
              if ($cond_i67_i > .009999999776482582) {
               $bmax_sroa_0_0_load87_i = $bmax_sroa_0_0_load86131_i;
               $bmax_sroa_6_4_load92_i = $bmax_sroa_6_4_load91130_i;
               $bmin_sroa_0_0_load97_i = $bmin_sroa_0_0_load96129_i;
               $bmin_sroa_6_4_load102_i = $bmin_sroa_6_4_load101128_i;
               $inc58_pre_phi_i = $add_i1;
              } else {
               $mul23_i = ($42 & 65535) * 3 | 0;
               do {
                if (($8 | 0) == 0) {
                 $45 = +HEAPF32[$41 + ($mul_i + 2 << 2) >> 2];
                 $46 = +HEAPF32[$41 + ($mul23_i + 2 << 2) >> 2];
                 if ($45 < $46) {
                  $bmax_sroa_0_0_load88_i = $46;
                  $bmax_sroa_6_4_load93_i = +HEAPF32[$41 + ($mul23_i + 1 << 2) >> 2];
                  $bmin_sroa_0_0_load98_i = $45;
                  $bmin_sroa_6_4_load103_i = +HEAPF32[$41 + ($mul_i + 1 << 2) >> 2];
                  break;
                 } else {
                  $bmax_sroa_0_0_load88_i = $45;
                  $bmax_sroa_6_4_load93_i = +HEAPF32[$41 + ($mul_i + 1 << 2) >> 2];
                  $bmin_sroa_0_0_load98_i = $46;
                  $bmin_sroa_6_4_load103_i = +HEAPF32[$41 + ($mul23_i + 1 << 2) >> 2];
                  break;
                 }
                } else if (($8 | 0) == 2) {
                 $51 = +HEAPF32[$arrayidx19_i >> 2];
                 $52 = +HEAPF32[$41 + ($mul23_i << 2) >> 2];
                 if ($51 < $52) {
                  $bmax_sroa_0_0_load88_i = $52;
                  $bmax_sroa_6_4_load93_i = +HEAPF32[$41 + ($mul23_i + 1 << 2) >> 2];
                  $bmin_sroa_0_0_load98_i = $51;
                  $bmin_sroa_6_4_load103_i = +HEAPF32[$41 + ($mul_i + 1 << 2) >> 2];
                  break;
                 } else {
                  $bmax_sroa_0_0_load88_i = $51;
                  $bmax_sroa_6_4_load93_i = +HEAPF32[$41 + ($mul_i + 1 << 2) >> 2];
                  $bmin_sroa_0_0_load98_i = $52;
                  $bmin_sroa_6_4_load103_i = +HEAPF32[$41 + ($mul23_i + 1 << 2) >> 2];
                  break;
                 }
                } else {
                 $bmax_sroa_0_0_load88_i = $bmax_sroa_0_0_load86131_i;
                 $bmax_sroa_6_4_load93_i = $bmax_sroa_6_4_load91130_i;
                 $bmin_sroa_0_0_load98_i = $bmin_sroa_0_0_load96129_i;
                 $bmin_sroa_6_4_load103_i = $bmin_sroa_6_4_load101128_i;
                }
               } while (0);
               $57 = +HEAPF32[$walkableClimb_i >> 2];
               $add2_i_i = $bmin_sroa_0_0_load98_i + .009999999776482582;
               $cond_i_i_i = $add_i_i > $add2_i_i ? $add_i_i : $add2_i_i;
               $sub5_i_i = $bmax_sroa_0_0_load88_i + -.009999999776482582;
               $cond_i32_i_i = $sub_i_i < $sub5_i_i ? $sub_i_i : $sub5_i_i;
               if ($cond_i_i_i > $cond_i32_i_i) {
                $bmax_sroa_0_0_load87_i = $bmax_sroa_0_0_load88_i;
                $bmax_sroa_6_4_load92_i = $bmax_sroa_6_4_load93_i;
                $bmin_sroa_0_0_load97_i = $bmin_sroa_0_0_load98_i;
                $bmin_sroa_6_4_load102_i = $bmin_sroa_6_4_load103_i;
                $inc58_pre_phi_i = $add_i1;
               } else {
                $div22_i_i = ($bmax_sroa_6_4_load93_i - $bmin_sroa_6_4_load103_i) / ($bmax_sroa_0_0_load88_i - $bmin_sroa_0_0_load98_i);
                $sub26_i_i = $bmin_sroa_6_4_load103_i - $bmin_sroa_0_0_load98_i * $div22_i_i;
                $sub35_i_i = $cond_i_i_i * $div22_i_i + $sub26_i_i - ($cond_i_i_i * $div_i_i + $sub15_i_i);
                $sub36_i_i = $cond_i32_i_i * $div22_i_i + $sub26_i_i - ($cond_i32_i_i * $div_i_i + $sub15_i_i);
                if ($sub35_i_i * $sub36_i_i < 0.0) {
                 break;
                }
                $mul41_i_i = $57 * 2.0;
                $mul_i_i_i = $mul41_i_i * $mul41_i_i;
                if ($sub36_i_i * $sub36_i_i <= $mul_i_i_i | $sub35_i_i * $sub35_i_i <= $mul_i_i_i) {
                 break;
                } else {
                 $bmax_sroa_0_0_load87_i = $bmax_sroa_0_0_load88_i;
                 $bmax_sroa_6_4_load92_i = $bmax_sroa_6_4_load93_i;
                 $bmin_sroa_0_0_load97_i = $bmin_sroa_0_0_load98_i;
                 $bmin_sroa_6_4_load102_i = $bmin_sroa_6_4_load103_i;
                 $inc58_pre_phi_i = $add_i1;
                }
               }
              }
             } else {
              $bmax_sroa_0_0_load87_i = $bmax_sroa_0_0_load86131_i;
              $bmax_sroa_6_4_load92_i = $bmax_sroa_6_4_load91130_i;
              $bmin_sroa_0_0_load97_i = $bmin_sroa_0_0_load96129_i;
              $bmin_sroa_6_4_load102_i = $bmin_sroa_6_4_load101128_i;
              $inc58_pre_phi_i = $j_0132_i + 1 | 0;
             }
             if (($inc58_pre_phi_i | 0) < ($conv6_i | 0)) {
              $bmin_sroa_6_4_load101128_i = $bmin_sroa_6_4_load102_i;
              $bmin_sroa_0_0_load96129_i = $bmin_sroa_0_0_load97_i;
              $bmax_sroa_6_4_load91130_i = $bmax_sroa_6_4_load92_i;
              $bmax_sroa_0_0_load86131_i = $bmax_sroa_0_0_load87_i;
              $j_0132_i = $inc58_pre_phi_i;
             } else {
              $n_1_i = $n_0145_i;
              $bmax_sroa_0_0_load85_i = $bmax_sroa_0_0_load87_i;
              $bmax_sroa_6_4_load90_i = $bmax_sroa_6_4_load92_i;
              $bmin_sroa_0_0_load95_i = $bmin_sroa_0_0_load97_i;
              $bmin_sroa_6_4_load100_i = $bmin_sroa_6_4_load102_i;
              break L35;
             }
            }
            if (($n_0145_i | 0) < 4) {
             $mul46_i = $n_0145_i << 1;
             HEAPF32[$neia + ($mul46_i << 2) >> 2] = $amin_sroa_0_0_load105107_i > $bmin_sroa_0_0_load98_i ? $amin_sroa_0_0_load105107_i : $bmin_sroa_0_0_load98_i;
             HEAPF32[$neia + (($mul46_i | 1) << 2) >> 2] = $amax_sroa_0_0_load104109_i < $bmax_sroa_0_0_load88_i ? $amax_sroa_0_0_load104109_i : $bmax_sroa_0_0_load88_i;
             HEAP32[$nei + ($n_0145_i << 2) >> 2] = $i_0142_i | $or4_i_i_i;
             $n_1_i = $n_0145_i + 1 | 0;
             $bmax_sroa_0_0_load85_i = $bmax_sroa_0_0_load88_i;
             $bmax_sroa_6_4_load90_i = $bmax_sroa_6_4_load93_i;
             $bmin_sroa_0_0_load95_i = $bmin_sroa_0_0_load98_i;
             $bmin_sroa_6_4_load100_i = $bmin_sroa_6_4_load103_i;
            } else {
             $n_1_i = $n_0145_i;
             $bmax_sroa_0_0_load85_i = $bmax_sroa_0_0_load88_i;
             $bmax_sroa_6_4_load90_i = $bmax_sroa_6_4_load93_i;
             $bmin_sroa_0_0_load95_i = $bmin_sroa_0_0_load98_i;
             $bmin_sroa_6_4_load100_i = $bmin_sroa_6_4_load103_i;
            }
           }
          } while (0);
          $i_0142_i = $i_0142_i + 1 | 0;
          if (($i_0142_i | 0) >= ($36 | 0)) {
           break;
          } else {
           $bmin_sroa_6_4_load99138_i = $bmin_sroa_6_4_load100_i;
           $bmin_sroa_0_0_load94139_i = $bmin_sroa_0_0_load95_i;
           $bmax_sroa_6_4_load89140_i = $bmax_sroa_6_4_load90_i;
           $bmax_sroa_0_0_load84141_i = $bmax_sroa_0_0_load85_i;
           $n_0145_i = $n_1_i;
          }
         }
         if (($n_1_i | 0) > 0) {
          $conv38 = $j_096 & 255;
          $conv39 = $4 & 255;
          $58 = $conv6 & 251;
          $arrayidx48 = $6 + ($mul + 2 << 2) | 0;
          $arrayidx49 = $6 + ($mul25 + 2 << 2) | 0;
          $_pre101 = HEAP32[$linksFreeList_i >> 2] | 0;
          if (($58 | 0) == 0) {
           $k_094_us = 0;
           $60 = $_pre101;
           while (1) {
            if (($60 | 0) == -1) {
             $71 = -1;
            } else {
             $61 = HEAP32[$links_i >> 2] | 0;
             $next_i_us = $61 + ($60 * 12 | 0) + 4 | 0;
             $62 = HEAP32[$next_i_us >> 2] | 0;
             HEAP32[$linksFreeList_i >> 2] = $62;
             HEAP32[$61 + ($60 * 12 | 0) >> 2] = HEAP32[$nei + ($k_094_us << 2) >> 2];
             HEAP8[$61 + ($60 * 12 | 0) + 8 >> 0] = $conv38;
             HEAP8[$61 + ($60 * 12 | 0) + 9 >> 0] = $conv39;
             HEAP32[$next_i_us >> 2] = HEAP32[$firstLink >> 2];
             HEAP32[$firstLink >> 2] = $60;
             $mul45_us = $k_094_us << 1;
             $66 = +HEAPF32[$arrayidx48 >> 2];
             $sub51_us = +HEAPF32[$arrayidx49 >> 2] - $66;
             $div_us = (+HEAPF32[$neia + ($mul45_us << 2) >> 2] - $66) / $sub51_us;
             $div60_us = (+HEAPF32[$neia + (($mul45_us | 1) << 2) >> 2] - $66) / $sub51_us;
             $cmp61_us = $div_us > $div60_us;
             $div87_us = $cmp61_us ? $div60_us : $div_us;
             $div6086_us = $cmp61_us ? $div_us : $div60_us;
             if ($div87_us < 0.0) {
              $cond5_i75_us = 0;
             } else {
              $cond5_i75_us = $div87_us > 1.0 ? -1 : ~~($div87_us * 255.0);
             }
             HEAP8[$61 + ($60 * 12 | 0) + 10 >> 0] = $cond5_i75_us;
             if ($div6086_us < 0.0) {
              $cond5_i69_us = 0;
             } else {
              $cond5_i69_us = $div6086_us > 1.0 ? -1 : ~~($div6086_us * 255.0);
             }
             HEAP8[$61 + ($60 * 12 | 0) + 11 >> 0] = $cond5_i69_us;
             $71 = $62;
            }
            $k_094_us = $k_094_us + 1 | 0;
            if (($k_094_us | 0) >= ($n_1_i | 0)) {
             break L13;
            } else {
             $60 = $71;
            }
           }
          }
          $cond = ($58 | 0) == 2;
          $k_094 = 0;
          $72 = $_pre101;
          while (1) {
           if (($72 | 0) == -1) {
            $83 = -1;
           } else {
            $73 = HEAP32[$links_i >> 2] | 0;
            $next_i = $73 + ($72 * 12 | 0) + 4 | 0;
            $74 = HEAP32[$next_i >> 2] | 0;
            HEAP32[$linksFreeList_i >> 2] = $74;
            HEAP32[$73 + ($72 * 12 | 0) >> 2] = HEAP32[$nei + ($k_094 << 2) >> 2];
            HEAP8[$73 + ($72 * 12 | 0) + 8 >> 0] = $conv38;
            HEAP8[$73 + ($72 * 12 | 0) + 9 >> 0] = $conv39;
            HEAP32[$next_i >> 2] = HEAP32[$firstLink >> 2];
            HEAP32[$firstLink >> 2] = $72;
            if ($cond) {
             $mul75 = $k_094 << 1;
             $78 = +HEAPF32[$arrayidx21 >> 2];
             $sub82 = +HEAPF32[$arrayidx27 >> 2] - $78;
             $div83 = (+HEAPF32[$neia + ($mul75 << 2) >> 2] - $78) / $sub82;
             $div93 = (+HEAPF32[$neia + (($mul75 | 1) << 2) >> 2] - $78) / $sub82;
             $cmp94 = $div83 > $div93;
             $div8385 = $cmp94 ? $div93 : $div83;
             $div9384 = $cmp94 ? $div83 : $div93;
             if ($div8385 < 0.0) {
              $cond5_i63 = 0;
             } else {
              $cond5_i63 = $div8385 > 1.0 ? -1 : ~~($div8385 * 255.0);
             }
             HEAP8[$73 + ($72 * 12 | 0) + 10 >> 0] = $cond5_i63;
             if ($div9384 < 0.0) {
              $cond5_i = 0;
             } else {
              $cond5_i = $div9384 > 1.0 ? -1 : ~~($div9384 * 255.0);
             }
             HEAP8[$73 + ($72 * 12 | 0) + 11 >> 0] = $cond5_i;
             $83 = $74;
            } else {
             $83 = $74;
            }
           }
           $k_094 = $k_094 + 1 | 0;
           if (($k_094 | 0) >= ($n_1_i | 0)) {
            break;
           } else {
            $72 = $83;
           }
          }
         }
        }
       }
      }
     }
    } while (0);
    $j_096 = $j_096 + 1 | 0;
   } while (($j_096 | 0) < ($conv | 0));
  }
  $i_099 = $i_099 + 1 | 0;
 } while (($i_099 | 0) < ($1 | 0));
 STACKTOP = sp;
 return;
}
function __Z19initWithFileContentNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($contents) {
 $contents = $contents | 0;
 var $row_i_i = 0, $face_i_i = 0, $x_i_i = 0, $y_i_i = 0, $z_i_i = 0, $call1 = 0, $m_chunkyMesh_i = 0, $0 = 0, $1 = 0, $2 = 0, $cond_i_i_i = 0, $call_i = 0, $7 = 0, $m_verts_i15_i = 0, $add_ptr_i_i = 0, $11 = 0, $arrayidx8_i_i = 0, $13 = 0, $14 = 0, $arraydecay26_i_i = 0, $15 = 0, $16 = 0, $arrayidx30_phi_trans_insert_i_i = 0, $_ph115_ph_i_i_ph = 0, $_ph116_ph_i_i_ph = 0, $src_0_ph_ph_i_i_ph = 0, $_ph115_i_i_ph = 0, $src_0_ph_i_i_ph = 0, $src_0_i_i = 0, $start_0_off0_ph_ph_i_i_i = 0, $done_0_off0_ph_ph_i_i_i = 0, $n_0_ph_ph_i_i_i = 0, $buf_addr_0_ph_ph_i_i_i = 0, $start_0_off0_ph_i_i_i = 0, $done_0_off0_ph_i_i_i = 0, $buf_addr_0_ph_i_i_i = 0, $not_start_0_off0_i_i_i = 0, $buf_addr_0_ph436_i_us_i_i = 0, $done_0_off0_ph234_i_us_i_i = 0, $buf_addr_015_us_i_us_i_i = 0, $17 = 0, $incdec_ptr_us_i_us_i_i = 0, $buf_addr_015_us_i_i_i = 0, $18 = 0, $incdec_ptr_us_i_i_i = 0, $done_0_off0_ph234_i_lcssa88_i_i = 0, $incdec_ptr_us_i_lcssa84_i_i = 0, $_lcssa81_i_i = 0, $done_0_off0_ph234_i91_i_i = 0, $incdec_ptr_us_i86_i_i = 0, $19 = 0, $_done_0_off0_i_i_i = 0, $buf_addr_0_lcssa_i_i_i = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $_mul_i53_i_i = 0, $26$0 = 0, $call_i1_i_i = 0, $33 = 0, $36 = 0, $37 = 0, $mul12_i61_i_i = 0, $41 = 0, $j_0_ph_i_i_i = 0, $row_addr_0_ph_i_i_i = 0, $42 = 0, $row_addr_0_i_i_i = 0, $43 = 0, $row_addr_1_i_i_i = 0, $incdec_ptr_i70_i_i = 0, $44 = 0, $row_addr_2_i_i_i = 0, $incdec_ptr21_i_i_i = 0, $45 = 0, $46 = 0, $s_addr_0_i_i_i = 0, $incdec_ptr_i4_i_i = 0, $47 = 0, $conv1_i_i_i = 0, $neg_0_i_i_i = 0, $48 = 0, $s_addr_1_ph_i_i_i = 0, $neg_1_ph_i_i_i = 0, $conv56_i_i_i = 0, $conv511_i_i_i = 0, $n_010_i_i_i = 0, $s_addr_19_i_i_i = 0, $incdec_ptr9_i_i_i = 0, $sub11_i_i_i = 0, $conv5_i_i_i = 0, $n_0_lcssa_i_i_i = 0, $cond_i9_i_i = 0, $inc_i74_i_i = 0, $retval_0_i_i_i = 0, $50 = 0, $cmp32_i_i = 0, $51 = 0, $i_0114_i_i = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $_mul_i_i_i = 0, $56$0 = 0, $call_i10_i_i = 0, $63 = 0, $66 = 0, $67 = 0, $mul12_i_i_i = 0, $69 = 0, $inc_i_i = 0, $70 = 0, $71$0 = 0, $78 = 0, $79 = 0, $80 = 0, $i49_079_i_i = 0, $81 = 0, $mul56_i_i = 0, $83 = 0, $add_i_i = 0, $mul60_i_i = 0, $add63_i_i = 0, $mul66_i_i = 0, $87 = 0.0, $sub74_i_i = 0.0, $sub78_i_i = 0.0, $90 = 0.0, $sub74_1_i_i = 0.0, $sub78_1_i_i = 0.0, $93 = 0.0, $sub74_2_i_i = 0.0, $sub78_2_i_i = 0.0, $arrayidx84_i_i = 0, $sub91_i_i = 0.0, $sub99_i_i = 0.0, $arrayidx100_i_i = 0, $sub107_i_i = 0.0, $arrayidx108_i_i = 0, $call120_i_i = 0.0, $div_i_i = 0.0, $add131_i_i = 0, $$etemp$5$0 = 0, $$etemp$5$1 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $99 = 0, $m_verts_i_i = 0, $100 = 0, $m_vertCount_i_i = 0, $101 = 0, $arraydecay_i = 0, $102 = 0, $arraydecay21_i = 0, $103 = 0, $call22_i = 0, $104 = 0, $nodes_i5_i = 0, $tris_i6_i = 0, $105 = 0, $106 = 0, $m_verts_i4_i = 0, $107 = 0, $m_tris_i_i = 0, $108 = 0, $m_triCount_i_i = 0, $109 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 664 | 0;
 $row_i_i = sp | 0;
 $face_i_i = sp + 512 | 0;
 $x_i_i = sp + 640 | 0;
 $y_i_i = sp + 648 | 0;
 $z_i_i = sp + 656 | 0;
 _puts(160) | 0;
 $call1 = __Znwj(50216) | 0;
 $m_chunkyMesh_i = $call1;
 HEAP32[$m_chunkyMesh_i >> 2] = 0;
 $0 = $call1 + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $call1 + 9248 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $call1 + 50212 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[4914] = $call1;
 if ((HEAP8[$contents >> 0] & 1) == 0) {
  $cond_i_i_i = $contents + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$contents + 8 >> 2] | 0;
 }
 HEAP32[$1 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 $call_i = __Znwj(284) | 0;
 $7 = $call_i + 260 | 0;
 HEAPF32[$7 >> 2] = 1.0;
 $m_verts_i15_i = $call_i + 264 | 0;
 _memset($m_verts_i15_i | 0, 0, 20) | 0;
 HEAP32[$0 >> 2] = $call_i;
 $add_ptr_i_i = $cond_i_i_i + (_strlen($cond_i_i_i | 0) | 0) | 0;
 $11 = $row_i_i | 0;
 $arrayidx8_i_i = $row_i_i + 1 | 0;
 $13 = $call_i + 276 | 0;
 $14 = $m_verts_i15_i;
 $arraydecay26_i_i = $face_i_i | 0;
 $15 = $call_i + 280 | 0;
 $16 = $call_i + 268 | 0;
 $arrayidx30_phi_trans_insert_i_i = $face_i_i + 4 | 0;
 $src_0_ph_ph_i_i_ph = $cond_i_i_i;
 $_ph116_ph_i_i_ph = 0;
 $_ph115_ph_i_i_ph = 0;
 L5 : while (1) {
  $src_0_ph_i_i_ph = $src_0_ph_ph_i_i_ph;
  $_ph115_i_i_ph = $_ph115_ph_i_i_ph;
  while (1) {
   $src_0_i_i = $src_0_ph_i_i_ph;
   while (1) {
    if (!($src_0_i_i >>> 0 < $add_ptr_i_i >>> 0)) {
     break L5;
    }
    HEAP8[$11 >> 0] = 0;
    $buf_addr_0_ph_ph_i_i_i = $src_0_i_i;
    $n_0_ph_ph_i_i_i = 0;
    $done_0_off0_ph_ph_i_i_i = 0;
    $start_0_off0_ph_ph_i_i_i = 1;
    L12 : while (1) {
     $buf_addr_0_ph_i_i_i = $buf_addr_0_ph_ph_i_i_i;
     $done_0_off0_ph_i_i_i = $done_0_off0_ph_ph_i_i_i;
     $start_0_off0_ph_i_i_i = $start_0_off0_ph_ph_i_i_i;
     L14 : while (1) {
      if (!($buf_addr_0_ph_i_i_i >>> 0 < $add_ptr_i_i >>> 0 & ($done_0_off0_ph_i_i_i ^ 1))) {
       $buf_addr_0_lcssa_i_i_i = $buf_addr_0_ph_i_i_i;
       break L12;
      }
      $not_start_0_off0_i_i_i = $start_0_off0_ph_i_i_i ^ 1;
      L17 : do {
       if ($start_0_off0_ph_i_i_i) {
        $done_0_off0_ph234_i_us_i_i = $done_0_off0_ph_i_i_i;
        $buf_addr_0_ph436_i_us_i_i = $buf_addr_0_ph_i_i_i;
        while (1) {
         $buf_addr_015_us_i_us_i_i = $buf_addr_0_ph436_i_us_i_i;
         L20 : while (1) {
          $17 = HEAP8[$buf_addr_015_us_i_us_i_i >> 0] | 0;
          $incdec_ptr_us_i_us_i_i = $buf_addr_015_us_i_us_i_i + 1 | 0;
          switch ($17 << 24 >> 24 | 0) {
          case 10:
           {
            break L20;
            break;
           }
          case 92:
          case 13:
           {
            break;
           }
          case 9:
          case 32:
           {
            $_lcssa81_i_i = $17;
            $incdec_ptr_us_i_lcssa84_i_i = $incdec_ptr_us_i_us_i_i;
            $done_0_off0_ph234_i_lcssa88_i_i = $done_0_off0_ph234_i_us_i_i;
            break L17;
            break;
           }
          default:
           {
            $19 = $17;
            $incdec_ptr_us_i86_i_i = $incdec_ptr_us_i_us_i_i;
            $done_0_off0_ph234_i91_i_i = $done_0_off0_ph234_i_us_i_i;
            break L14;
           }
          }
          if ($incdec_ptr_us_i_us_i_i >>> 0 < $add_ptr_i_i >>> 0) {
           $buf_addr_015_us_i_us_i_i = $incdec_ptr_us_i_us_i_i;
          } else {
           $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_us_i_i;
           break L12;
          }
         }
         if ($incdec_ptr_us_i_us_i_i >>> 0 < $add_ptr_i_i >>> 0 & ($done_0_off0_ph234_i_us_i_i ^ 1)) {
          $done_0_off0_ph234_i_us_i_i = $done_0_off0_ph234_i_us_i_i | $not_start_0_off0_i_i_i;
          $buf_addr_0_ph436_i_us_i_i = $incdec_ptr_us_i_us_i_i;
         } else {
          $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_us_i_i;
          break L12;
         }
        }
       } else {
        $buf_addr_015_us_i_i_i = $buf_addr_0_ph_i_i_i;
        while (1) {
         $18 = HEAP8[$buf_addr_015_us_i_i_i >> 0] | 0;
         $incdec_ptr_us_i_i_i = $buf_addr_015_us_i_i_i + 1 | 0;
         switch ($18 << 24 >> 24 | 0) {
         case 92:
         case 13:
          {
           break;
          }
         case 9:
         case 32:
          {
           $_lcssa81_i_i = $18;
           $incdec_ptr_us_i_lcssa84_i_i = $incdec_ptr_us_i_i_i;
           $done_0_off0_ph234_i_lcssa88_i_i = $done_0_off0_ph_i_i_i;
           break L17;
           break;
          }
         case 10:
          {
           $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_i_i;
           break L12;
           break;
          }
         default:
          {
           $19 = $18;
           $incdec_ptr_us_i86_i_i = $incdec_ptr_us_i_i_i;
           $done_0_off0_ph234_i91_i_i = $done_0_off0_ph_i_i_i;
           break L14;
          }
         }
         if ($incdec_ptr_us_i_i_i >>> 0 < $add_ptr_i_i >>> 0) {
          $buf_addr_015_us_i_i_i = $incdec_ptr_us_i_i_i;
         } else {
          $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_i_i;
          break L12;
         }
        }
       }
      } while (0);
      if ($start_0_off0_ph_i_i_i) {
       $buf_addr_0_ph_i_i_i = $incdec_ptr_us_i_lcssa84_i_i;
       $done_0_off0_ph_i_i_i = $done_0_off0_ph234_i_lcssa88_i_i;
       $start_0_off0_ph_i_i_i = 1;
      } else {
       $19 = $_lcssa81_i_i;
       $incdec_ptr_us_i86_i_i = $incdec_ptr_us_i_lcssa84_i_i;
       $done_0_off0_ph234_i91_i_i = $done_0_off0_ph234_i_lcssa88_i_i;
       break;
      }
     }
     HEAP8[$row_i_i + $n_0_ph_ph_i_i_i >> 0] = $19;
     $_done_0_off0_i_i_i = ($n_0_ph_ph_i_i_i | 0) > 509 | $done_0_off0_ph234_i91_i_i;
     $buf_addr_0_ph_ph_i_i_i = $incdec_ptr_us_i86_i_i;
     $n_0_ph_ph_i_i_i = $n_0_ph_ph_i_i_i + 1 | 0;
     $done_0_off0_ph_ph_i_i_i = $_done_0_off0_i_i_i;
     $start_0_off0_ph_ph_i_i_i = 0;
    }
    HEAP8[$row_i_i + $n_0_ph_ph_i_i_i >> 0] = 0;
    $20 = HEAP8[$11 >> 0] | 0;
    if (($20 << 24 >> 24 | 0) == 102) {
     break;
    } else if (($20 << 24 >> 24 | 0) != 118) {
     $src_0_i_i = $buf_addr_0_lcssa_i_i_i;
     continue;
    }
    $21 = HEAP8[$arrayidx8_i_i >> 0] | 0;
    if (($21 << 24 >> 24 | 0) == 110 | ($21 << 24 >> 24 | 0) == 116) {
     $src_0_i_i = $buf_addr_0_lcssa_i_i_i;
    } else {
     label = 22;
     break;
    }
   }
   if ((label | 0) == 22) {
    label = 0;
    _sscanf($arrayidx8_i_i | 0, 8336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $x_i_i, HEAP32[tempVarArgs + 8 >> 2] = $y_i_i, HEAP32[tempVarArgs + 16 >> 2] = $z_i_i, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $22 = +HEAPF32[$x_i_i >> 2];
    $23 = +HEAPF32[$y_i_i >> 2];
    $24 = +HEAPF32[$z_i_i >> 2];
    $25 = HEAP32[$13 >> 2] | 0;
    if (($25 | 0) < ($_ph115_i_i_ph | 0)) {
     $37 = HEAP32[$14 >> 2] | 0;
     $36 = $_ph115_i_i_ph;
    } else {
     $_mul_i53_i_i = ($_ph115_i_i_ph | 0) == 0 ? 8 : $_ph115_i_i_ph << 1;
     $26$0 = _llvm_umul_with_overflow_i32($_mul_i53_i_i * 3 | 0 | 0, 4) | 0;
     $call_i1_i_i = __Znwj(tempRet0 ? -1 : $26$0) | 0;
     $33 = $call_i1_i_i;
     if (($25 | 0) != 0) {
      _memcpy($call_i1_i_i | 0, HEAP32[$14 >> 2] | 0, $25 * 12 | 0) | 0;
     }
     HEAP32[$14 >> 2] = $33;
     $37 = $33;
     $36 = $_mul_i53_i_i;
    }
    $mul12_i61_i_i = $25 * 3 | 0;
    HEAPF32[$37 + ($mul12_i61_i_i << 2) >> 2] = $22 * +HEAPF32[$7 >> 2];
    HEAPF32[$37 + ($mul12_i61_i_i + 1 << 2) >> 2] = $23 * +HEAPF32[$7 >> 2];
    HEAPF32[$37 + ($mul12_i61_i_i + 2 << 2) >> 2] = $24 * +HEAPF32[$7 >> 2];
    HEAP32[$13 >> 2] = $25 + 1;
    $src_0_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
    $_ph115_i_i_ph = $36;
    continue;
   }
   $41 = HEAP32[$13 >> 2] | 0;
   $row_addr_0_ph_i_i_i = $arrayidx8_i_i;
   $j_0_ph_i_i_i = 0;
   L42 : while (1) {
    $row_addr_0_i_i_i = $row_addr_0_ph_i_i_i;
    $42 = HEAP8[$row_addr_0_ph_i_i_i >> 0] | 0;
    while (1) {
     if ($42 << 24 >> 24 == 0) {
      $retval_0_i_i_i = $j_0_ph_i_i_i;
      break L42;
     } else {
      $row_addr_1_i_i_i = $row_addr_0_i_i_i;
      $43 = $42;
     }
     while (1) {
      if (!(($43 << 24 >> 24 | 0) == 9 | ($43 << 24 >> 24 | 0) == 32)) {
       $row_addr_2_i_i_i = $row_addr_1_i_i_i;
       $44 = $43;
       break;
      }
      $incdec_ptr_i70_i_i = $row_addr_1_i_i_i + 1 | 0;
      $row_addr_1_i_i_i = $incdec_ptr_i70_i_i;
      $43 = HEAP8[$incdec_ptr_i70_i_i >> 0] | 0;
     }
     while (1) {
      if (($44 << 24 >> 24 | 0) == 47) {
       HEAP8[$row_addr_2_i_i_i >> 0] = 0;
      } else if (($44 << 24 >> 24 | 0) == 0 | ($44 << 24 >> 24 | 0) == 32 | ($44 << 24 >> 24 | 0) == 9) {
       break;
      }
      $incdec_ptr21_i_i_i = $row_addr_2_i_i_i + 1 | 0;
      $row_addr_2_i_i_i = $incdec_ptr21_i_i_i;
      $44 = HEAP8[$incdec_ptr21_i_i_i >> 0] | 0;
     }
     $45 = HEAP8[$row_addr_1_i_i_i >> 0] | 0;
     if ($45 << 24 >> 24 == 0) {
      $row_addr_0_i_i_i = $row_addr_2_i_i_i;
      $42 = $44;
     } else {
      $s_addr_0_i_i_i = $row_addr_1_i_i_i;
      $46 = $45;
      break;
     }
    }
    while (1) {
     $incdec_ptr_i4_i_i = $s_addr_0_i_i_i + 1 | 0;
     if ((_isspace($46 << 24 >> 24 | 0) | 0) == 0) {
      break;
     }
     $s_addr_0_i_i_i = $incdec_ptr_i4_i_i;
     $46 = HEAP8[$incdec_ptr_i4_i_i >> 0] | 0;
    }
    $47 = HEAP8[$s_addr_0_i_i_i >> 0] | 0;
    $conv1_i_i_i = $47 << 24 >> 24;
    if (($conv1_i_i_i | 0) == 45) {
     $neg_0_i_i_i = 1;
     label = 45;
    } else if (($conv1_i_i_i | 0) == 43) {
     $neg_0_i_i_i = 0;
     label = 45;
    } else {
     $neg_1_ph_i_i_i = 0;
     $s_addr_1_ph_i_i_i = $s_addr_0_i_i_i;
     $48 = $47;
    }
    if ((label | 0) == 45) {
     label = 0;
     $neg_1_ph_i_i_i = $neg_0_i_i_i;
     $s_addr_1_ph_i_i_i = $incdec_ptr_i4_i_i;
     $48 = HEAP8[$incdec_ptr_i4_i_i >> 0] | 0;
    }
    $conv56_i_i_i = $48 << 24 >> 24;
    if (($conv56_i_i_i - 48 | 0) >>> 0 < 10 >>> 0) {
     $s_addr_19_i_i_i = $s_addr_1_ph_i_i_i;
     $n_010_i_i_i = 0;
     $conv511_i_i_i = $conv56_i_i_i;
     while (1) {
      $incdec_ptr9_i_i_i = $s_addr_19_i_i_i + 1 | 0;
      $sub11_i_i_i = ($n_010_i_i_i * 10 | 0) + 48 - $conv511_i_i_i | 0;
      $conv5_i_i_i = HEAP8[$incdec_ptr9_i_i_i >> 0] | 0;
      if (($conv5_i_i_i - 48 | 0) >>> 0 < 10 >>> 0) {
       $s_addr_19_i_i_i = $incdec_ptr9_i_i_i;
       $n_010_i_i_i = $sub11_i_i_i;
       $conv511_i_i_i = $conv5_i_i_i;
      } else {
       $n_0_lcssa_i_i_i = $sub11_i_i_i;
       break;
      }
     }
    } else {
     $n_0_lcssa_i_i_i = 0;
    }
    $cond_i9_i_i = ($neg_1_ph_i_i_i | 0) != 0 ? $n_0_lcssa_i_i_i : -$n_0_lcssa_i_i_i | 0;
    $inc_i74_i_i = $j_0_ph_i_i_i + 1 | 0;
    HEAP32[$face_i_i + ($j_0_ph_i_i_i << 2) >> 2] = (($cond_i9_i_i | 0) < 0 ? $41 : -1) + $cond_i9_i_i;
    if (($j_0_ph_i_i_i | 0) > 30) {
     $retval_0_i_i_i = $inc_i74_i_i;
     break;
    } else {
     $row_addr_0_ph_i_i_i = $row_addr_2_i_i_i;
     $j_0_ph_i_i_i = $inc_i74_i_i;
    }
   }
   if (($retval_0_i_i_i | 0) > 2) {
    break;
   } else {
    $src_0_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
   }
  }
  $50 = HEAP32[$arraydecay26_i_i >> 2] | 0;
  $cmp32_i_i = ($50 | 0) < 0;
  $52 = $_ph116_ph_i_i_ph;
  $i_0114_i_i = 2;
  $51 = HEAP32[$arrayidx30_phi_trans_insert_i_i >> 2] | 0;
  while (1) {
   $53 = HEAP32[$face_i_i + ($i_0114_i_i << 2) >> 2] | 0;
   if ($cmp32_i_i) {
    $69 = $52;
   } else {
    $54 = HEAP32[$13 >> 2] | 0;
    if (($50 | 0) >= ($54 | 0) | ($51 | 0) < 0) {
     $69 = $52;
    } else {
     if (($53 | 0) > -1 & ($51 | 0) < ($54 | 0) & ($53 | 0) < ($54 | 0)) {
      $55 = HEAP32[$15 >> 2] | 0;
      if (($55 | 0) < ($52 | 0)) {
       $67 = HEAP32[$16 >> 2] | 0;
       $66 = $52;
      } else {
       $_mul_i_i_i = ($52 | 0) == 0 ? 8 : $52 << 1;
       $56$0 = _llvm_umul_with_overflow_i32($_mul_i_i_i * 3 | 0 | 0, 4) | 0;
       $call_i10_i_i = __Znwj(tempRet0 ? -1 : $56$0) | 0;
       $63 = $call_i10_i_i;
       if (($55 | 0) != 0) {
        _memcpy($call_i10_i_i | 0, HEAP32[$16 >> 2] | 0, $55 * 12 | 0) | 0;
       }
       HEAP32[$16 >> 2] = $63;
       $67 = $63;
       $66 = $_mul_i_i_i;
      }
      $mul12_i_i_i = $55 * 3 | 0;
      HEAP32[$67 + ($mul12_i_i_i << 2) >> 2] = $50;
      HEAP32[$67 + ($mul12_i_i_i + 1 << 2) >> 2] = $51;
      HEAP32[$67 + ($mul12_i_i_i + 2 << 2) >> 2] = $53;
      HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
      $69 = $66;
     } else {
      $69 = $52;
     }
    }
   }
   $inc_i_i = $i_0114_i_i + 1 | 0;
   if (($inc_i_i | 0) < ($retval_0_i_i_i | 0)) {
    $52 = $69;
    $i_0114_i_i = $inc_i_i;
    $51 = $53;
   } else {
    $src_0_ph_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
    $_ph116_ph_i_i_ph = $69;
    $_ph115_ph_i_i_ph = $_ph115_i_i_ph;
    continue L5;
   }
  }
 }
 if (($cond_i_i_i | 0) != 0) {
  _free($cond_i_i_i);
 }
 $70 = HEAP32[$15 >> 2] | 0;
 $71$0 = _llvm_umul_with_overflow_i32($70 * 3 | 0 | 0, 4) | 0;
 $78 = __Znwj(tempRet0 ? -1 : $71$0) | 0;
 $79 = $call_i + 272 | 0;
 HEAP32[$79 >> 2] = $78;
 if (($70 | 0) > 0) {
  $i49_079_i_i = 0;
  $80 = $78;
 } else {
  $$etemp$5$0 = 128;
  $$etemp$5$1 = 0;
  $$etemp$6$0 = 512;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 4;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 4;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 4;
  $$etemp$9$1 = 0;
  $99 = HEAP32[$0 >> 2] | 0;
  $m_verts_i_i = $99 + 264 | 0;
  $100 = HEAP32[$m_verts_i_i >> 2] | 0;
  $m_vertCount_i_i = $99 + 276 | 0;
  $101 = HEAP32[$m_vertCount_i_i >> 2] | 0;
  $arraydecay_i = $call1 + 8 | 0;
  $102 = $arraydecay_i;
  $arraydecay21_i = $call1 + 20 | 0;
  $103 = $arraydecay21_i;
  __Z12rcCalcBoundsPKfiPfS1_($100, $101, $102, $103);
  $call22_i = __Znwj(20) | 0;
  $104 = $call22_i;
  $nodes_i5_i = $call22_i;
  HEAP32[$nodes_i5_i >> 2] = 0;
  $tris_i6_i = $call22_i + 8 | 0;
  $105 = $tris_i6_i;
  HEAP32[$105 >> 2] = 0;
  HEAP32[$m_chunkyMesh_i >> 2] = $104;
  $106 = HEAP32[$0 >> 2] | 0;
  $m_verts_i4_i = $106 + 264 | 0;
  $107 = HEAP32[$m_verts_i4_i >> 2] | 0;
  $m_tris_i_i = $106 + 268 | 0;
  $108 = HEAP32[$m_tris_i_i >> 2] | 0;
  $m_triCount_i_i = $106 + 280 | 0;
  $109 = HEAP32[$m_triCount_i_i >> 2] | 0;
  __Z21rcCreateChunkyTriMeshPKfPKiiiP15rcChunkyTriMesh($107, $108, $109, $104);
  STACKTOP = sp;
  return 1;
 }
 while (1) {
  $81 = HEAP32[$16 >> 2] | 0;
  $mul56_i_i = (HEAP32[$81 + ($i49_079_i_i << 2) >> 2] | 0) * 3 | 0;
  $83 = HEAP32[$14 >> 2] | 0;
  $add_i_i = $i49_079_i_i + 1 | 0;
  $mul60_i_i = (HEAP32[$81 + ($add_i_i << 2) >> 2] | 0) * 3 | 0;
  $add63_i_i = $i49_079_i_i + 2 | 0;
  $mul66_i_i = (HEAP32[$81 + ($add63_i_i << 2) >> 2] | 0) * 3 | 0;
  $87 = +HEAPF32[$83 + ($mul56_i_i << 2) >> 2];
  $sub74_i_i = +HEAPF32[$83 + ($mul60_i_i << 2) >> 2] - $87;
  $sub78_i_i = +HEAPF32[$83 + ($mul66_i_i << 2) >> 2] - $87;
  $90 = +HEAPF32[$83 + ($mul56_i_i + 1 << 2) >> 2];
  $sub74_1_i_i = +HEAPF32[$83 + ($mul60_i_i + 1 << 2) >> 2] - $90;
  $sub78_1_i_i = +HEAPF32[$83 + ($mul66_i_i + 1 << 2) >> 2] - $90;
  $93 = +HEAPF32[$83 + ($mul56_i_i + 2 << 2) >> 2];
  $sub74_2_i_i = +HEAPF32[$83 + ($mul60_i_i + 2 << 2) >> 2] - $93;
  $sub78_2_i_i = +HEAPF32[$83 + ($mul66_i_i + 2 << 2) >> 2] - $93;
  $arrayidx84_i_i = $80 + ($i49_079_i_i << 2) | 0;
  $sub91_i_i = $sub74_1_i_i * $sub78_2_i_i - $sub74_2_i_i * $sub78_1_i_i;
  HEAPF32[$arrayidx84_i_i >> 2] = $sub91_i_i;
  $sub99_i_i = $sub74_2_i_i * $sub78_i_i - $sub74_i_i * $sub78_2_i_i;
  $arrayidx100_i_i = $80 + ($add_i_i << 2) | 0;
  HEAPF32[$arrayidx100_i_i >> 2] = $sub99_i_i;
  $sub107_i_i = $sub74_i_i * $sub78_1_i_i - $sub74_1_i_i * $sub78_i_i;
  $arrayidx108_i_i = $80 + ($add63_i_i << 2) | 0;
  HEAPF32[$arrayidx108_i_i >> 2] = $sub107_i_i;
  $call120_i_i = +Math_sqrt($sub107_i_i * $sub107_i_i + ($sub91_i_i * $sub91_i_i + $sub99_i_i * $sub99_i_i));
  if ($call120_i_i > 0.0) {
   $div_i_i = 1.0 / $call120_i_i;
   HEAPF32[$arrayidx84_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx84_i_i >> 2];
   HEAPF32[$arrayidx100_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx100_i_i >> 2];
   HEAPF32[$arrayidx108_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx108_i_i >> 2];
  }
  $add131_i_i = $i49_079_i_i + 3 | 0;
  if (($add131_i_i | 0) >= ((HEAP32[$15 >> 2] | 0) * 3 | 0 | 0)) {
   break;
  }
  $i49_079_i_i = $add131_i_i;
  $80 = HEAP32[$79 >> 2] | 0;
 }
 $$etemp$5$0 = 128;
 $$etemp$5$1 = 0;
 $$etemp$6$0 = 512;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 4;
 $$etemp$7$1 = 0;
 $$etemp$8$0 = 4;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 4;
 $$etemp$9$1 = 0;
 $99 = HEAP32[$0 >> 2] | 0;
 $m_verts_i_i = $99 + 264 | 0;
 $100 = HEAP32[$m_verts_i_i >> 2] | 0;
 $m_vertCount_i_i = $99 + 276 | 0;
 $101 = HEAP32[$m_vertCount_i_i >> 2] | 0;
 $arraydecay_i = $call1 + 8 | 0;
 $102 = $arraydecay_i;
 $arraydecay21_i = $call1 + 20 | 0;
 $103 = $arraydecay21_i;
 __Z12rcCalcBoundsPKfiPfS1_($100, $101, $102, $103);
 $call22_i = __Znwj(20) | 0;
 $104 = $call22_i;
 $nodes_i5_i = $call22_i;
 HEAP32[$nodes_i5_i >> 2] = 0;
 $tris_i6_i = $call22_i + 8 | 0;
 $105 = $tris_i6_i;
 HEAP32[$105 >> 2] = 0;
 HEAP32[$m_chunkyMesh_i >> 2] = $104;
 $106 = HEAP32[$0 >> 2] | 0;
 $m_verts_i4_i = $106 + 264 | 0;
 $107 = HEAP32[$m_verts_i4_i >> 2] | 0;
 $m_tris_i_i = $106 + 268 | 0;
 $108 = HEAP32[$m_tris_i_i >> 2] | 0;
 $m_triCount_i_i = $106 + 280 | 0;
 $109 = HEAP32[$m_triCount_i_i >> 2] | 0;
 __Z21rcCreateChunkyTriMeshPKfPKiiiP15rcChunkyTriMesh($107, $108, $109, $104);
 STACKTOP = sp;
 return 1;
}
function __Z12initWithFileNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($filename) {
 $filename = $filename | 0;
 var $row_i_i = 0, $face_i_i = 0, $x_i_i = 0, $y_i_i = 0, $z_i_i = 0, $call1 = 0, $m_chunkyMesh_i = 0, $0 = 0, $1 = 0, $2 = 0, $cond_i_i_i = 0, $call_i = 0, $7 = 0, $m_verts_i14_i = 0, $call_i_i = 0, $call3_i_i = 0, $call_i1_i_i = 0, $add_ptr_i_i = 0, $16 = 0, $arrayidx20_i_i = 0, $18 = 0, $19 = 0, $arraydecay38_i_i = 0, $20 = 0, $21 = 0, $arrayidx42_phi_trans_insert_i_i = 0, $_ph125_ph_i_i_ph = 0, $_ph126_ph_i_i_ph = 0, $src_0_ph_ph_i_i_ph = 0, $_ph125_i_i_ph = 0, $src_0_ph_i_i_ph = 0, $src_0_i_i = 0, $start_0_off0_ph_ph_i_i_i = 0, $done_0_off0_ph_ph_i_i_i = 0, $n_0_ph_ph_i_i_i = 0, $buf_addr_0_ph_ph_i_i_i = 0, $start_0_off0_ph_i_i_i = 0, $done_0_off0_ph_i_i_i = 0, $buf_addr_0_ph_i_i_i = 0, $not_start_0_off0_i_i_i = 0, $buf_addr_0_ph436_i_us_i_i = 0, $done_0_off0_ph234_i_us_i_i = 0, $buf_addr_015_us_i_us_i_i = 0, $22 = 0, $incdec_ptr_us_i_us_i_i = 0, $buf_addr_015_us_i_i_i = 0, $23 = 0, $incdec_ptr_us_i_i_i = 0, $done_0_off0_ph234_i_lcssa98_i_i = 0, $incdec_ptr_us_i_lcssa94_i_i = 0, $_lcssa91_i_i = 0, $done_0_off0_ph234_i101_i_i = 0, $incdec_ptr_us_i96_i_i = 0, $24 = 0, $_done_0_off0_i_i_i = 0, $buf_addr_0_lcssa_i_i_i = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0, $_mul_i63_i_i = 0, $31$0 = 0, $call_i2_i_i = 0, $38 = 0, $41 = 0, $42 = 0, $mul12_i71_i_i = 0, $46 = 0, $j_0_ph_i_i_i = 0, $row_addr_0_ph_i_i_i = 0, $47 = 0, $row_addr_0_i_i_i = 0, $48 = 0, $row_addr_1_i_i_i = 0, $incdec_ptr_i80_i_i = 0, $49 = 0, $row_addr_2_i_i_i = 0, $incdec_ptr21_i_i_i = 0, $50 = 0, $51 = 0, $s_addr_0_i_i_i = 0, $incdec_ptr_i10_i_i = 0, $52 = 0, $conv1_i_i_i = 0, $neg_0_i_i_i = 0, $53 = 0, $s_addr_1_ph_i_i_i = 0, $neg_1_ph_i_i_i = 0, $conv56_i_i_i = 0, $conv511_i_i_i = 0, $n_010_i_i_i = 0, $s_addr_19_i_i_i = 0, $incdec_ptr9_i_i_i = 0, $sub11_i_i_i = 0, $conv5_i_i_i = 0, $n_0_lcssa_i_i_i = 0, $cond_i15_i_i = 0, $inc_i84_i_i = 0, $retval_0_i_i_i = 0, $55 = 0, $56 = 0, $i_0124_i_i = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $_mul_i_i_i = 0, $61$0 = 0, $call_i16_i_i = 0, $68 = 0, $71 = 0, $72 = 0, $mul12_i_i_i = 0, $74 = 0, $inc_i_i = 0, $75 = 0, $76$0 = 0, $83 = 0, $84 = 0, $85 = 0, $i61_089_i_i = 0, $86 = 0, $mul68_i_i = 0, $88 = 0, $add_i_i = 0, $mul72_i_i = 0, $add75_i_i = 0, $mul78_i_i = 0, $92 = 0.0, $sub86_i_i = 0.0, $sub90_i_i = 0.0, $95 = 0.0, $sub86_1_i_i = 0.0, $sub90_1_i_i = 0.0, $98 = 0.0, $sub86_2_i_i = 0.0, $sub90_2_i_i = 0.0, $arrayidx96_i_i = 0, $sub103_i_i = 0.0, $sub111_i_i = 0.0, $arrayidx112_i_i = 0, $sub119_i_i = 0.0, $arrayidx120_i_i = 0, $call132_i_i = 0.0, $div_i_i = 0.0, $add143_i_i = 0, $105 = 0, $call22_i = 0, $110 = 0, $112 = 0, $retval_0 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 664 | 0;
 $row_i_i = sp | 0;
 $face_i_i = sp + 512 | 0;
 $x_i_i = sp + 640 | 0;
 $y_i_i = sp + 648 | 0;
 $z_i_i = sp + 656 | 0;
 _printf(4928, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $call1 = __Znwj(50216) | 0;
 $m_chunkyMesh_i = $call1;
 HEAP32[$m_chunkyMesh_i >> 2] = 0;
 $0 = $call1 + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $call1 + 9248 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $call1 + 50212 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[4914] = $call1;
 if ((HEAP8[$filename >> 0] & 1) == 0) {
  $cond_i_i_i = $filename + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$filename + 8 >> 2] | 0;
 }
 HEAP32[$1 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 $call_i = __Znwj(284) | 0;
 $7 = $call_i + 260 | 0;
 HEAPF32[$7 >> 2] = 1.0;
 $m_verts_i14_i = $call_i + 264 | 0;
 _memset($m_verts_i14_i | 0, 0, 20) | 0;
 HEAP32[$0 >> 2] = $call_i;
 $call_i_i = _fopen($cond_i_i_i | 0, 1288) | 0;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 8408, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  _puts(184) | 0;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _fseek($call_i_i | 0, 0, 2) | 0;
 $call3_i_i = _ftell($call_i_i | 0) | 0;
 _fseek($call_i_i | 0, 0, 0) | 0;
 $call_i1_i_i = __Znwj(($call3_i_i | 0) > -1 ? $call3_i_i : -1) | 0;
 _fread($call_i1_i_i | 0, $call3_i_i | 0, 1, $call_i_i | 0) | 0;
 _fclose($call_i_i | 0) | 0;
 $add_ptr_i_i = $call_i1_i_i + $call3_i_i | 0;
 $16 = $row_i_i | 0;
 $arrayidx20_i_i = $row_i_i + 1 | 0;
 $18 = $call_i + 276 | 0;
 $19 = $m_verts_i14_i;
 $arraydecay38_i_i = $face_i_i | 0;
 $20 = $call_i + 280 | 0;
 $21 = $call_i + 268 | 0;
 $arrayidx42_phi_trans_insert_i_i = $face_i_i + 4 | 0;
 $src_0_ph_ph_i_i_ph = $call_i1_i_i;
 $_ph126_ph_i_i_ph = 0;
 $_ph125_ph_i_i_ph = 0;
 L10 : while (1) {
  $src_0_ph_i_i_ph = $src_0_ph_ph_i_i_ph;
  $_ph125_i_i_ph = $_ph125_ph_i_i_ph;
  while (1) {
   $src_0_i_i = $src_0_ph_i_i_ph;
   while (1) {
    if (!($src_0_i_i >>> 0 < $add_ptr_i_i >>> 0)) {
     break L10;
    }
    HEAP8[$16 >> 0] = 0;
    $buf_addr_0_ph_ph_i_i_i = $src_0_i_i;
    $n_0_ph_ph_i_i_i = 0;
    $done_0_off0_ph_ph_i_i_i = 0;
    $start_0_off0_ph_ph_i_i_i = 1;
    L17 : while (1) {
     $buf_addr_0_ph_i_i_i = $buf_addr_0_ph_ph_i_i_i;
     $done_0_off0_ph_i_i_i = $done_0_off0_ph_ph_i_i_i;
     $start_0_off0_ph_i_i_i = $start_0_off0_ph_ph_i_i_i;
     L19 : while (1) {
      if (!($buf_addr_0_ph_i_i_i >>> 0 < $add_ptr_i_i >>> 0 & ($done_0_off0_ph_i_i_i ^ 1))) {
       $buf_addr_0_lcssa_i_i_i = $buf_addr_0_ph_i_i_i;
       break L17;
      }
      $not_start_0_off0_i_i_i = $start_0_off0_ph_i_i_i ^ 1;
      L22 : do {
       if ($start_0_off0_ph_i_i_i) {
        $done_0_off0_ph234_i_us_i_i = $done_0_off0_ph_i_i_i;
        $buf_addr_0_ph436_i_us_i_i = $buf_addr_0_ph_i_i_i;
        while (1) {
         $buf_addr_015_us_i_us_i_i = $buf_addr_0_ph436_i_us_i_i;
         L25 : while (1) {
          $22 = HEAP8[$buf_addr_015_us_i_us_i_i >> 0] | 0;
          $incdec_ptr_us_i_us_i_i = $buf_addr_015_us_i_us_i_i + 1 | 0;
          switch ($22 << 24 >> 24 | 0) {
          case 10:
           {
            break L25;
            break;
           }
          case 92:
          case 13:
           {
            break;
           }
          case 9:
          case 32:
           {
            $_lcssa91_i_i = $22;
            $incdec_ptr_us_i_lcssa94_i_i = $incdec_ptr_us_i_us_i_i;
            $done_0_off0_ph234_i_lcssa98_i_i = $done_0_off0_ph234_i_us_i_i;
            break L22;
            break;
           }
          default:
           {
            $24 = $22;
            $incdec_ptr_us_i96_i_i = $incdec_ptr_us_i_us_i_i;
            $done_0_off0_ph234_i101_i_i = $done_0_off0_ph234_i_us_i_i;
            break L19;
           }
          }
          if ($incdec_ptr_us_i_us_i_i >>> 0 < $add_ptr_i_i >>> 0) {
           $buf_addr_015_us_i_us_i_i = $incdec_ptr_us_i_us_i_i;
          } else {
           $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_us_i_i;
           break L17;
          }
         }
         if ($incdec_ptr_us_i_us_i_i >>> 0 < $add_ptr_i_i >>> 0 & ($done_0_off0_ph234_i_us_i_i ^ 1)) {
          $done_0_off0_ph234_i_us_i_i = $done_0_off0_ph234_i_us_i_i | $not_start_0_off0_i_i_i;
          $buf_addr_0_ph436_i_us_i_i = $incdec_ptr_us_i_us_i_i;
         } else {
          $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_us_i_i;
          break L17;
         }
        }
       } else {
        $buf_addr_015_us_i_i_i = $buf_addr_0_ph_i_i_i;
        while (1) {
         $23 = HEAP8[$buf_addr_015_us_i_i_i >> 0] | 0;
         $incdec_ptr_us_i_i_i = $buf_addr_015_us_i_i_i + 1 | 0;
         switch ($23 << 24 >> 24 | 0) {
         case 92:
         case 13:
          {
           break;
          }
         case 9:
         case 32:
          {
           $_lcssa91_i_i = $23;
           $incdec_ptr_us_i_lcssa94_i_i = $incdec_ptr_us_i_i_i;
           $done_0_off0_ph234_i_lcssa98_i_i = $done_0_off0_ph_i_i_i;
           break L22;
           break;
          }
         case 10:
          {
           $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_i_i;
           break L17;
           break;
          }
         default:
          {
           $24 = $23;
           $incdec_ptr_us_i96_i_i = $incdec_ptr_us_i_i_i;
           $done_0_off0_ph234_i101_i_i = $done_0_off0_ph_i_i_i;
           break L19;
          }
         }
         if ($incdec_ptr_us_i_i_i >>> 0 < $add_ptr_i_i >>> 0) {
          $buf_addr_015_us_i_i_i = $incdec_ptr_us_i_i_i;
         } else {
          $buf_addr_0_lcssa_i_i_i = $incdec_ptr_us_i_i_i;
          break L17;
         }
        }
       }
      } while (0);
      if ($start_0_off0_ph_i_i_i) {
       $buf_addr_0_ph_i_i_i = $incdec_ptr_us_i_lcssa94_i_i;
       $done_0_off0_ph_i_i_i = $done_0_off0_ph234_i_lcssa98_i_i;
       $start_0_off0_ph_i_i_i = 1;
      } else {
       $24 = $_lcssa91_i_i;
       $incdec_ptr_us_i96_i_i = $incdec_ptr_us_i_lcssa94_i_i;
       $done_0_off0_ph234_i101_i_i = $done_0_off0_ph234_i_lcssa98_i_i;
       break;
      }
     }
     HEAP8[$row_i_i + $n_0_ph_ph_i_i_i >> 0] = $24;
     $_done_0_off0_i_i_i = ($n_0_ph_ph_i_i_i | 0) > 509 | $done_0_off0_ph234_i101_i_i;
     $buf_addr_0_ph_ph_i_i_i = $incdec_ptr_us_i96_i_i;
     $n_0_ph_ph_i_i_i = $n_0_ph_ph_i_i_i + 1 | 0;
     $done_0_off0_ph_ph_i_i_i = $_done_0_off0_i_i_i;
     $start_0_off0_ph_ph_i_i_i = 0;
    }
    HEAP8[$row_i_i + $n_0_ph_ph_i_i_i >> 0] = 0;
    $25 = HEAP8[$16 >> 0] | 0;
    if (($25 << 24 >> 24 | 0) == 102) {
     break;
    } else if (($25 << 24 >> 24 | 0) != 118) {
     $src_0_i_i = $buf_addr_0_lcssa_i_i_i;
     continue;
    }
    $26 = HEAP8[$arrayidx20_i_i >> 0] | 0;
    if (($26 << 24 >> 24 | 0) == 110 | ($26 << 24 >> 24 | 0) == 116) {
     $src_0_i_i = $buf_addr_0_lcssa_i_i_i;
    } else {
     label = 27;
     break;
    }
   }
   if ((label | 0) == 27) {
    label = 0;
    _sscanf($arrayidx20_i_i | 0, 8336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $x_i_i, HEAP32[tempVarArgs + 8 >> 2] = $y_i_i, HEAP32[tempVarArgs + 16 >> 2] = $z_i_i, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $27 = +HEAPF32[$x_i_i >> 2];
    $28 = +HEAPF32[$y_i_i >> 2];
    $29 = +HEAPF32[$z_i_i >> 2];
    $30 = HEAP32[$18 >> 2] | 0;
    if (($30 | 0) < ($_ph125_i_i_ph | 0)) {
     $42 = HEAP32[$19 >> 2] | 0;
     $41 = $_ph125_i_i_ph;
    } else {
     $_mul_i63_i_i = ($_ph125_i_i_ph | 0) == 0 ? 8 : $_ph125_i_i_ph << 1;
     $31$0 = _llvm_umul_with_overflow_i32($_mul_i63_i_i * 3 | 0 | 0, 4) | 0;
     $call_i2_i_i = __Znwj(tempRet0 ? -1 : $31$0) | 0;
     $38 = $call_i2_i_i;
     if (($30 | 0) != 0) {
      _memcpy($call_i2_i_i | 0, HEAP32[$19 >> 2] | 0, $30 * 12 | 0) | 0;
     }
     HEAP32[$19 >> 2] = $38;
     $42 = $38;
     $41 = $_mul_i63_i_i;
    }
    $mul12_i71_i_i = $30 * 3 | 0;
    HEAPF32[$42 + ($mul12_i71_i_i << 2) >> 2] = $27 * +HEAPF32[$7 >> 2];
    HEAPF32[$42 + ($mul12_i71_i_i + 1 << 2) >> 2] = $28 * +HEAPF32[$7 >> 2];
    HEAPF32[$42 + ($mul12_i71_i_i + 2 << 2) >> 2] = $29 * +HEAPF32[$7 >> 2];
    HEAP32[$18 >> 2] = $30 + 1;
    $src_0_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
    $_ph125_i_i_ph = $41;
    continue;
   }
   $46 = HEAP32[$18 >> 2] | 0;
   $row_addr_0_ph_i_i_i = $arrayidx20_i_i;
   $j_0_ph_i_i_i = 0;
   L47 : while (1) {
    $row_addr_0_i_i_i = $row_addr_0_ph_i_i_i;
    $47 = HEAP8[$row_addr_0_ph_i_i_i >> 0] | 0;
    while (1) {
     if ($47 << 24 >> 24 == 0) {
      $retval_0_i_i_i = $j_0_ph_i_i_i;
      break L47;
     } else {
      $row_addr_1_i_i_i = $row_addr_0_i_i_i;
      $48 = $47;
     }
     while (1) {
      if (!(($48 << 24 >> 24 | 0) == 9 | ($48 << 24 >> 24 | 0) == 32)) {
       $row_addr_2_i_i_i = $row_addr_1_i_i_i;
       $49 = $48;
       break;
      }
      $incdec_ptr_i80_i_i = $row_addr_1_i_i_i + 1 | 0;
      $row_addr_1_i_i_i = $incdec_ptr_i80_i_i;
      $48 = HEAP8[$incdec_ptr_i80_i_i >> 0] | 0;
     }
     while (1) {
      if (($49 << 24 >> 24 | 0) == 47) {
       HEAP8[$row_addr_2_i_i_i >> 0] = 0;
      } else if (($49 << 24 >> 24 | 0) == 0 | ($49 << 24 >> 24 | 0) == 32 | ($49 << 24 >> 24 | 0) == 9) {
       break;
      }
      $incdec_ptr21_i_i_i = $row_addr_2_i_i_i + 1 | 0;
      $row_addr_2_i_i_i = $incdec_ptr21_i_i_i;
      $49 = HEAP8[$incdec_ptr21_i_i_i >> 0] | 0;
     }
     $50 = HEAP8[$row_addr_1_i_i_i >> 0] | 0;
     if ($50 << 24 >> 24 == 0) {
      $row_addr_0_i_i_i = $row_addr_2_i_i_i;
      $47 = $49;
     } else {
      $s_addr_0_i_i_i = $row_addr_1_i_i_i;
      $51 = $50;
      break;
     }
    }
    while (1) {
     $incdec_ptr_i10_i_i = $s_addr_0_i_i_i + 1 | 0;
     if ((_isspace($51 << 24 >> 24 | 0) | 0) == 0) {
      break;
     }
     $s_addr_0_i_i_i = $incdec_ptr_i10_i_i;
     $51 = HEAP8[$incdec_ptr_i10_i_i >> 0] | 0;
    }
    $52 = HEAP8[$s_addr_0_i_i_i >> 0] | 0;
    $conv1_i_i_i = $52 << 24 >> 24;
    if (($conv1_i_i_i | 0) == 45) {
     $neg_0_i_i_i = 1;
     label = 50;
    } else if (($conv1_i_i_i | 0) == 43) {
     $neg_0_i_i_i = 0;
     label = 50;
    } else {
     $neg_1_ph_i_i_i = 0;
     $s_addr_1_ph_i_i_i = $s_addr_0_i_i_i;
     $53 = $52;
    }
    if ((label | 0) == 50) {
     label = 0;
     $neg_1_ph_i_i_i = $neg_0_i_i_i;
     $s_addr_1_ph_i_i_i = $incdec_ptr_i10_i_i;
     $53 = HEAP8[$incdec_ptr_i10_i_i >> 0] | 0;
    }
    $conv56_i_i_i = $53 << 24 >> 24;
    if (($conv56_i_i_i - 48 | 0) >>> 0 < 10 >>> 0) {
     $s_addr_19_i_i_i = $s_addr_1_ph_i_i_i;
     $n_010_i_i_i = 0;
     $conv511_i_i_i = $conv56_i_i_i;
     while (1) {
      $incdec_ptr9_i_i_i = $s_addr_19_i_i_i + 1 | 0;
      $sub11_i_i_i = ($n_010_i_i_i * 10 | 0) + 48 - $conv511_i_i_i | 0;
      $conv5_i_i_i = HEAP8[$incdec_ptr9_i_i_i >> 0] | 0;
      if (($conv5_i_i_i - 48 | 0) >>> 0 < 10 >>> 0) {
       $s_addr_19_i_i_i = $incdec_ptr9_i_i_i;
       $n_010_i_i_i = $sub11_i_i_i;
       $conv511_i_i_i = $conv5_i_i_i;
      } else {
       $n_0_lcssa_i_i_i = $sub11_i_i_i;
       break;
      }
     }
    } else {
     $n_0_lcssa_i_i_i = 0;
    }
    $cond_i15_i_i = ($neg_1_ph_i_i_i | 0) != 0 ? $n_0_lcssa_i_i_i : -$n_0_lcssa_i_i_i | 0;
    $inc_i84_i_i = $j_0_ph_i_i_i + 1 | 0;
    HEAP32[$face_i_i + ($j_0_ph_i_i_i << 2) >> 2] = (($cond_i15_i_i | 0) < 0 ? $46 : -1) + $cond_i15_i_i;
    if (($j_0_ph_i_i_i | 0) > 30) {
     $retval_0_i_i_i = $inc_i84_i_i;
     break;
    } else {
     $row_addr_0_ph_i_i_i = $row_addr_2_i_i_i;
     $j_0_ph_i_i_i = $inc_i84_i_i;
    }
   }
   if (($retval_0_i_i_i | 0) <= 2) {
    $src_0_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
    continue;
   }
   $55 = HEAP32[$arraydecay38_i_i >> 2] | 0;
   if (($55 | 0) < 0) {
    $src_0_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
   } else {
    break;
   }
  }
  $57 = $_ph126_ph_i_i_ph;
  $i_0124_i_i = 2;
  $56 = HEAP32[$arrayidx42_phi_trans_insert_i_i >> 2] | 0;
  while (1) {
   $58 = HEAP32[$face_i_i + ($i_0124_i_i << 2) >> 2] | 0;
   $59 = HEAP32[$18 >> 2] | 0;
   if (($55 | 0) >= ($59 | 0) | ($56 | 0) < 0) {
    $74 = $57;
   } else {
    if (($58 | 0) > -1 & ($56 | 0) < ($59 | 0) & ($58 | 0) < ($59 | 0)) {
     $60 = HEAP32[$20 >> 2] | 0;
     if (($60 | 0) < ($57 | 0)) {
      $72 = HEAP32[$21 >> 2] | 0;
      $71 = $57;
     } else {
      $_mul_i_i_i = ($57 | 0) == 0 ? 8 : $57 << 1;
      $61$0 = _llvm_umul_with_overflow_i32($_mul_i_i_i * 3 | 0 | 0, 4) | 0;
      $call_i16_i_i = __Znwj(tempRet0 ? -1 : $61$0) | 0;
      $68 = $call_i16_i_i;
      if (($60 | 0) != 0) {
       _memcpy($call_i16_i_i | 0, HEAP32[$21 >> 2] | 0, $60 * 12 | 0) | 0;
      }
      HEAP32[$21 >> 2] = $68;
      $72 = $68;
      $71 = $_mul_i_i_i;
     }
     $mul12_i_i_i = $60 * 3 | 0;
     HEAP32[$72 + ($mul12_i_i_i << 2) >> 2] = $55;
     HEAP32[$72 + ($mul12_i_i_i + 1 << 2) >> 2] = $56;
     HEAP32[$72 + ($mul12_i_i_i + 2 << 2) >> 2] = $58;
     HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
     $74 = $71;
    } else {
     $74 = $57;
    }
   }
   $inc_i_i = $i_0124_i_i + 1 | 0;
   if (($inc_i_i | 0) < ($retval_0_i_i_i | 0)) {
    $57 = $74;
    $i_0124_i_i = $inc_i_i;
    $56 = $58;
   } else {
    $src_0_ph_ph_i_i_ph = $buf_addr_0_lcssa_i_i_i;
    $_ph126_ph_i_i_ph = $74;
    $_ph125_ph_i_i_ph = $_ph125_i_i_ph;
    continue L10;
   }
  }
 }
 if (($call_i1_i_i | 0) != 0) {
  _free($call_i1_i_i);
 }
 $75 = HEAP32[$20 >> 2] | 0;
 $76$0 = _llvm_umul_with_overflow_i32($75 * 3 | 0 | 0, 4) | 0;
 $83 = __Znwj(tempRet0 ? -1 : $76$0) | 0;
 $84 = $call_i + 272 | 0;
 HEAP32[$84 >> 2] = $83;
 L95 : do {
  if (($75 | 0) > 0) {
   $i61_089_i_i = 0;
   $85 = $83;
   while (1) {
    $86 = HEAP32[$21 >> 2] | 0;
    $mul68_i_i = (HEAP32[$86 + ($i61_089_i_i << 2) >> 2] | 0) * 3 | 0;
    $88 = HEAP32[$19 >> 2] | 0;
    $add_i_i = $i61_089_i_i + 1 | 0;
    $mul72_i_i = (HEAP32[$86 + ($add_i_i << 2) >> 2] | 0) * 3 | 0;
    $add75_i_i = $i61_089_i_i + 2 | 0;
    $mul78_i_i = (HEAP32[$86 + ($add75_i_i << 2) >> 2] | 0) * 3 | 0;
    $92 = +HEAPF32[$88 + ($mul68_i_i << 2) >> 2];
    $sub86_i_i = +HEAPF32[$88 + ($mul72_i_i << 2) >> 2] - $92;
    $sub90_i_i = +HEAPF32[$88 + ($mul78_i_i << 2) >> 2] - $92;
    $95 = +HEAPF32[$88 + ($mul68_i_i + 1 << 2) >> 2];
    $sub86_1_i_i = +HEAPF32[$88 + ($mul72_i_i + 1 << 2) >> 2] - $95;
    $sub90_1_i_i = +HEAPF32[$88 + ($mul78_i_i + 1 << 2) >> 2] - $95;
    $98 = +HEAPF32[$88 + ($mul68_i_i + 2 << 2) >> 2];
    $sub86_2_i_i = +HEAPF32[$88 + ($mul72_i_i + 2 << 2) >> 2] - $98;
    $sub90_2_i_i = +HEAPF32[$88 + ($mul78_i_i + 2 << 2) >> 2] - $98;
    $arrayidx96_i_i = $85 + ($i61_089_i_i << 2) | 0;
    $sub103_i_i = $sub86_1_i_i * $sub90_2_i_i - $sub86_2_i_i * $sub90_1_i_i;
    HEAPF32[$arrayidx96_i_i >> 2] = $sub103_i_i;
    $sub111_i_i = $sub86_2_i_i * $sub90_i_i - $sub86_i_i * $sub90_2_i_i;
    $arrayidx112_i_i = $85 + ($add_i_i << 2) | 0;
    HEAPF32[$arrayidx112_i_i >> 2] = $sub111_i_i;
    $sub119_i_i = $sub86_i_i * $sub90_1_i_i - $sub86_1_i_i * $sub90_i_i;
    $arrayidx120_i_i = $85 + ($add75_i_i << 2) | 0;
    HEAPF32[$arrayidx120_i_i >> 2] = $sub119_i_i;
    $call132_i_i = +Math_sqrt($sub119_i_i * $sub119_i_i + ($sub103_i_i * $sub103_i_i + $sub111_i_i * $sub111_i_i));
    if ($call132_i_i > 0.0) {
     $div_i_i = 1.0 / $call132_i_i;
     HEAPF32[$arrayidx96_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx96_i_i >> 2];
     HEAPF32[$arrayidx112_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx112_i_i >> 2];
     HEAPF32[$arrayidx120_i_i >> 2] = $div_i_i * +HEAPF32[$arrayidx120_i_i >> 2];
    }
    $add143_i_i = $i61_089_i_i + 3 | 0;
    if (($add143_i_i | 0) >= ((HEAP32[$20 >> 2] | 0) * 3 | 0 | 0)) {
     break L95;
    }
    $i61_089_i_i = $add143_i_i;
    $85 = HEAP32[$84 >> 2] | 0;
   }
  }
 } while (0);
 _strncpy($call_i | 0, $cond_i_i_i | 0, 260) | 0;
 HEAP8[$call_i + 259 >> 0] = 0;
 $105 = HEAP32[$0 >> 2] | 0;
 __Z12rcCalcBoundsPKfiPfS1_(HEAP32[$105 + 264 >> 2] | 0, HEAP32[$105 + 276 >> 2] | 0, $call1 + 8 | 0, $call1 + 20 | 0);
 $call22_i = __Znwj(20) | 0;
 $110 = $call22_i;
 HEAP32[$call22_i >> 2] = 0;
 HEAP32[$call22_i + 8 >> 2] = 0;
 HEAP32[$m_chunkyMesh_i >> 2] = $110;
 $112 = HEAP32[$0 >> 2] | 0;
 __Z21rcCreateChunkyTriMeshPKfPKiiiP15rcChunkyTriMesh(HEAP32[$112 + 264 >> 2] | 0, HEAP32[$112 + 268 >> 2] | 0, HEAP32[$112 + 280 >> 2] | 0, $110);
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNK14dtNavMeshQuery16findStraightPathEPKfS1_PKjiPfPhPjPiii($this, $startPos, $endPos, $path, $pathSize, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) {
 $this = $this | 0;
 $startPos = $startPos | 0;
 $endPos = $endPos | 0;
 $path = $path | 0;
 $pathSize = $pathSize | 0;
 $straightPath = $straightPath | 0;
 $straightPathFlags = $straightPathFlags | 0;
 $straightPathRefs = $straightPathRefs | 0;
 $straightPathCount = $straightPathCount | 0;
 $maxStraightPath = $maxStraightPath | 0;
 var $closestStartPos = 0, $closestEndPos = 0, $portalApex = 0, $left = 0, $right = 0, $0 = 0, $arraydecay = 0, $this_idx53 = 0, $arraydecay10 = 0, $call17 = 0, $arraydecay22 = 0, $3 = 0.0, $4 = 0.0, $arrayidx3_i = 0, $5 = 0.0, $arrayidx5_i = 0, $6 = 0, $arraydecay36 = 0, $arraydecay37 = 0, $arrayidx8_i179 = 0, $arrayidx8_i153 = 0, $arrayidx2_i135 = 0, $arrayidx2_i184 = 0, $arrayidx2_i144 = 0, $arrayidx4_i146 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $10 = 0.0, $11 = 0.0, $portalRight_sroa_13_0 = 0.0, $portalRight_sroa_7_0 = 0.0, $portalRight_sroa_0_0 = 0.0, $i_0234 = 0, $rightPolyRef_0233 = 0, $leftPolyRef_0231 = 0, $rightPolyType_0230 = 0, $leftPolyType_0228 = 0, $rightIndex_0226 = 0, $leftIndex_0224 = 0, $12 = 0, $add = 0, $cmp31 = 0, $arrayidx33 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $sub3_i_i = 0, $17 = 0, $sub5_i_i = 0, $and10_i_i = 0, $and11_i_i = 0, $18 = 0, $add_i_i4 = 0, $sub_i_i5 = 0, $20 = 0, $arrayidx_i = 0, $22 = 0, $and10_i_i15 = 0, $and11_i_i16 = 0, $arrayidx_i27 = 0, $26 = 0, $28 = 0, $shr1_i4_i = 0, $34 = 0.0, $35 = 0.0, $sub_i42 = 0.0, $36 = 0.0, $37 = 0.0, $sub4_i45 = 0.0, $add_i = 0.0, $add14_i = 0.0, $storemerge_i = 0.0, $38 = 0.0, $sub25_i = 0.0, $sub30_i = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $47 = 0, $48 = 0.0, $sub_i_i202 = 0.0, $sub4_i_i205 = 0.0, $50 = 0.0, $sub7_i_i208 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $flags_0 = 0, $call115 = 0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $rightIndex_1 = 0, $rightPolyType_1 = 0, $rightPolyRef_1 = 0, $67 = 0, $68 = 0.0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $70 = 0.0, $sub7_i_i = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $flags163_0 = 0, $call174 = 0, $78 = 0.0, $79 = 0.0, $portalLeft_sroa_13_1 = 0.0, $portalLeft_sroa_7_1 = 0.0, $portalLeft_sroa_0_1 = 0.0, $portalRight_sroa_13_2 = 0.0, $portalRight_sroa_7_2 = 0.0, $portalRight_sroa_0_2 = 0.0, $80 = 0, $leftIndex_1 = 0, $rightIndex_2 = 0, $leftPolyType_1 = 0, $rightPolyType_2 = 0, $leftPolyRef_1 = 0, $rightPolyRef_2 = 0, $i_1 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $closestStartPos = sp | 0;
 $closestEndPos = sp + 16 | 0;
 $portalApex = sp + 32 | 0;
 $left = sp + 48 | 0;
 $right = sp + 64 | 0;
 HEAP32[$straightPathCount >> 2] = 0;
 if (($maxStraightPath | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $0 = HEAP32[$path >> 2] | 0;
 if (($0 | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $arraydecay = $closestStartPos | 0;
 $this_idx53 = $this | 0;
 if ((__ZNK14dtNavMeshQuery26closestPointOnPolyBoundaryEjPKfPf(HEAP32[$this_idx53 >> 2] | 0, $0, $startPos, $arraydecay) | 0) < 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $arraydecay10 = $closestEndPos | 0;
 if ((__ZNK14dtNavMeshQuery26closestPointOnPolyBoundaryEjPKfPf(HEAP32[$this_idx53 >> 2] | 0, HEAP32[$path + ($pathSize - 1 << 2) >> 2] | 0, $endPos, $arraydecay10) | 0) < 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call17 = __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($arraydecay, 1, HEAP32[$path >> 2] | 0, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) | 0;
 if (($call17 | 0) != 536870912) {
  $retval_0 = $call17;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 L16 : do {
  if (($pathSize | 0) > 1) {
   $arraydecay22 = $portalApex | 0;
   $3 = +HEAPF32[$arraydecay >> 2];
   HEAPF32[$arraydecay22 >> 2] = $3;
   $4 = +HEAPF32[$closestStartPos + 4 >> 2];
   $arrayidx3_i = $portalApex + 4 | 0;
   HEAPF32[$arrayidx3_i >> 2] = $4;
   $5 = +HEAPF32[$closestStartPos + 8 >> 2];
   $arrayidx5_i = $portalApex + 8 | 0;
   HEAPF32[$arrayidx5_i >> 2] = $5;
   $6 = HEAP32[$path >> 2] | 0;
   $arraydecay36 = $left | 0;
   $arraydecay37 = $right | 0;
   $arrayidx8_i179 = $right + 8 | 0;
   $arrayidx8_i153 = $left + 8 | 0;
   $arrayidx2_i135 = $left + 4 | 0;
   $arrayidx2_i184 = $right + 4 | 0;
   $arrayidx2_i144 = $closestEndPos + 4 | 0;
   $arrayidx4_i146 = $closestEndPos + 8 | 0;
   $12 = 0;
   $leftIndex_0224 = 0;
   $rightIndex_0226 = 0;
   $leftPolyType_0228 = 0;
   $rightPolyType_0230 = 0;
   $leftPolyRef_0231 = $6;
   $rightPolyRef_0233 = $6;
   $i_0234 = 0;
   $portalRight_sroa_0_0 = $3;
   $portalRight_sroa_7_0 = $4;
   $portalRight_sroa_13_0 = $5;
   $11 = $3;
   $10 = $4;
   $9 = $5;
   $8 = $3;
   $7 = $5;
   L18 : while (1) {
    $add = $i_0234 + 1 | 0;
    $cmp31 = ($add | 0) < ($pathSize | 0);
    do {
     if ($cmp31) {
      $arrayidx33 = $path + ($i_0234 << 2) | 0;
      $13 = HEAP32[$arrayidx33 >> 2] | 0;
      $14 = HEAP32[$path + ($add << 2) >> 2] | 0;
      $15 = HEAP32[$this_idx53 >> 2] | 0;
      if (($13 | 0) == 0) {
       label = 20;
       break L18;
      }
      $16 = HEAP32[$15 + 76 >> 2] | 0;
      $sub3_i_i = (1 << $16) - 1 | 0;
      $17 = HEAP32[$15 + 80 >> 2] | 0;
      $sub5_i_i = (1 << $17) - 1 | 0;
      $and10_i_i = $13 >>> ($17 >>> 0) & $sub3_i_i;
      $and11_i_i = $sub5_i_i & $13;
      $18 = HEAP32[$15 + 48 >> 2] | 0;
      if (!($and10_i_i >>> 0 < $18 >>> 0)) {
       label = 20;
       break L18;
      }
      $add_i_i4 = $17 + $16 | 0;
      $sub_i_i5 = (1 << HEAP32[$15 + 72 >> 2]) - 1 | 0;
      $20 = HEAP32[$15 + 68 >> 2] | 0;
      $arrayidx_i = $20 + ($and10_i_i * 60 | 0) | 0;
      if ((HEAP32[$arrayidx_i >> 2] | 0) != ($sub_i_i5 & $13 >>> ($add_i_i4 >>> 0) | 0)) {
       label = 20;
       break L18;
      }
      $22 = HEAP32[$20 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
      if (($22 | 0) == 0) {
       label = 20;
       break L18;
      }
      if (!($and11_i_i >>> 0 < (HEAP32[$22 + 24 >> 2] | 0) >>> 0)) {
       label = 20;
       break L18;
      }
      if (($14 | 0) == 0) {
       label = 20;
       break L18;
      }
      $and10_i_i15 = $14 >>> ($17 >>> 0) & $sub3_i_i;
      $and11_i_i16 = $sub5_i_i & $14;
      if (!($and10_i_i15 >>> 0 < $18 >>> 0)) {
       label = 20;
       break L18;
      }
      $arrayidx_i27 = $20 + ($and10_i_i15 * 60 | 0) | 0;
      if ((HEAP32[$arrayidx_i27 >> 2] | 0) != ($sub_i_i5 & $14 >>> ($add_i_i4 >>> 0) | 0)) {
       label = 20;
       break L18;
      }
      $26 = HEAP32[$20 + ($and10_i_i15 * 60 | 0) + 8 >> 2] | 0;
      if (($26 | 0) == 0) {
       label = 20;
       break L18;
      }
      if (!($and11_i_i16 >>> 0 < (HEAP32[$26 + 24 >> 2] | 0) >>> 0)) {
       label = 20;
       break L18;
      }
      $28 = HEAP32[$20 + ($and10_i_i15 * 60 | 0) + 12 >> 2] | 0;
      $shr1_i4_i = (HEAPU8[$28 + ($and11_i_i16 << 5) + 31 >> 0] | 0) >>> 6;
      if ((__ZNK14dtNavMeshQuery15getPortalPointsEjPK6dtPolyPK10dtMeshTilejS2_S5_PfS6_($13, (HEAP32[$20 + ($and10_i_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i << 5) | 0, $arrayidx_i, $14, $28 + ($and11_i_i16 << 5) | 0, $arrayidx_i27, $arraydecay36, $arraydecay37) | 0) < 0) {
       label = 20;
       break L18;
      }
      $34 = +HEAPF32[$arraydecay37 >> 2];
      if (($i_0234 | 0) != 0) {
       $44 = $shr1_i4_i;
       $43 = $34;
       $42 = +HEAPF32[$arrayidx8_i179 >> 2];
       label = 31;
       break;
      }
      $35 = +HEAPF32[$arraydecay36 >> 2];
      $sub_i42 = $34 - $35;
      $36 = +HEAPF32[$arrayidx8_i179 >> 2];
      $37 = +HEAPF32[$arrayidx8_i153 >> 2];
      $sub4_i45 = $36 - $37;
      $add_i = $sub_i42 * $sub_i42 + $sub4_i45 * $sub4_i45;
      $add14_i = $sub_i42 * ($8 - $35) + $sub4_i45 * ($7 - $37);
      if ($add_i > 0.0) {
       $storemerge_i = $add14_i / $add_i;
      } else {
       $storemerge_i = $add14_i;
      }
      if ($storemerge_i < 0.0) {
       $38 = 0.0;
      } else {
       if ($storemerge_i > 1.0) {
        $38 = 1.0;
       } else {
        $38 = $storemerge_i;
       }
      }
      $sub25_i = $35 + $sub_i42 * $38 - $8;
      $sub30_i = $sub4_i45 * $38 + $37 - $7;
      if ($sub25_i * $sub25_i + $sub30_i * $sub30_i < 10000001111620804.0e-22) {
       $i_1 = 0;
       $rightPolyRef_2 = $rightPolyRef_0233;
       $leftPolyRef_1 = $leftPolyRef_0231;
       $rightPolyType_2 = $rightPolyType_0230;
       $leftPolyType_1 = $leftPolyType_0228;
       $rightIndex_2 = $rightIndex_0226;
       $leftIndex_1 = $leftIndex_0224;
       $80 = $shr1_i4_i;
       $portalRight_sroa_0_2 = $portalRight_sroa_0_0;
       $portalRight_sroa_7_2 = $portalRight_sroa_7_0;
       $portalRight_sroa_13_2 = $portalRight_sroa_13_0;
       $portalLeft_sroa_0_1 = $11;
       $portalLeft_sroa_7_1 = $10;
       $portalLeft_sroa_13_1 = $9;
       $79 = $8;
       $78 = $7;
      } else {
       $44 = $shr1_i4_i;
       $43 = $34;
       $42 = $36;
       label = 31;
      }
     } else {
      $39 = +HEAPF32[$arraydecay10 >> 2];
      HEAPF32[$arraydecay36 >> 2] = $39;
      $40 = +HEAPF32[$arrayidx2_i144 >> 2];
      HEAPF32[$arrayidx2_i135 >> 2] = $40;
      $41 = +HEAPF32[$arrayidx4_i146 >> 2];
      HEAPF32[$arrayidx8_i153 >> 2] = $41;
      HEAPF32[$arraydecay37 >> 2] = $39;
      HEAPF32[$arrayidx2_i184 >> 2] = $40;
      HEAPF32[$arrayidx8_i179 >> 2] = $41;
      $44 = 0;
      $43 = $39;
      $42 = $41;
      label = 31;
     }
    } while (0);
    do {
     if ((label | 0) == 31) {
      label = 0;
      if (($portalRight_sroa_13_0 - $7) * ($43 - $8) - ($portalRight_sroa_0_0 - $8) * ($42 - $7) > 0.0) {
       $rightPolyRef_1 = $rightPolyRef_0233;
       $rightPolyType_1 = $rightPolyType_0230;
       $rightIndex_1 = $rightIndex_0226;
       $62 = $8;
       $61 = $7;
       $60 = $portalRight_sroa_0_0;
       $59 = $portalRight_sroa_7_0;
       $58 = $portalRight_sroa_13_0;
      } else {
       if ((HEAP8[24344] | 0) == 0) {
        if ((___cxa_guard_acquire(24344) | 0) != 0) {
         HEAPF32[2874] = 3.725290298461914e-9;
         $47;
        }
       }
       $48 = +HEAPF32[$arraydecay22 >> 2];
       $sub_i_i202 = $portalRight_sroa_0_0 - $48;
       $sub4_i_i205 = $portalRight_sroa_7_0 - +HEAPF32[$arrayidx3_i >> 2];
       $50 = +HEAPF32[$arrayidx5_i >> 2];
       $sub7_i_i208 = $portalRight_sroa_13_0 - $50;
       if ($sub_i_i202 * $sub_i_i202 + $sub4_i_i205 * $sub4_i_i205 + $sub7_i_i208 * $sub7_i_i208 < +HEAPF32[2874]) {
        $55 = +HEAPF32[$arraydecay37 >> 2];
        $54 = +HEAPF32[$arrayidx8_i179 >> 2];
       } else {
        $52 = +HEAPF32[$arraydecay37 >> 2];
        $53 = +HEAPF32[$arrayidx8_i179 >> 2];
        if (($9 - $50) * ($52 - $48) - ($11 - $48) * ($53 - $50) > 0.0) {
         $55 = $52;
         $54 = $53;
        } else {
         HEAPF32[$arraydecay22 >> 2] = $11;
         HEAPF32[$arrayidx3_i >> 2] = $10;
         HEAPF32[$arrayidx5_i >> 2] = $9;
         if (($leftPolyRef_0231 | 0) == 0) {
          $flags_0 = 2;
         } else {
          $flags_0 = $leftPolyType_0228 << 24 >> 24 == 1 ? 4 : 0;
         }
         $call115 = __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($arraydecay22, $flags_0, $leftPolyRef_0231, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) | 0;
         if (($call115 | 0) == 536870912) {
          $i_1 = $leftIndex_0224;
          $rightPolyRef_2 = $rightPolyRef_0233;
          $leftPolyRef_1 = $leftPolyRef_0231;
          $rightPolyType_2 = $rightPolyType_0230;
          $leftPolyType_1 = $leftPolyType_0228;
          $rightIndex_2 = $leftIndex_0224;
          $leftIndex_1 = $leftIndex_0224;
          $80 = $44;
          $portalRight_sroa_0_2 = $11;
          $portalRight_sroa_7_2 = $10;
          $portalRight_sroa_13_2 = $9;
          $portalLeft_sroa_0_1 = $11;
          $portalLeft_sroa_7_1 = $10;
          $portalLeft_sroa_13_1 = $9;
          $79 = $11;
          $78 = $9;
          break;
         } else {
          $retval_0 = $call115;
          label = 57;
          break L18;
         }
        }
       }
       $56 = +HEAPF32[$arrayidx2_i184 >> 2];
       if ($cmp31) {
        $rightPolyRef_1 = HEAP32[$path + ($add << 2) >> 2] | 0;
        $rightPolyType_1 = $44;
        $rightIndex_1 = $i_0234;
        $62 = $48;
        $61 = $50;
        $60 = $55;
        $59 = $56;
        $58 = $54;
       } else {
        $rightPolyRef_1 = 0;
        $rightPolyType_1 = $44;
        $rightIndex_1 = $i_0234;
        $62 = $48;
        $61 = $50;
        $60 = $55;
        $59 = $56;
        $58 = $54;
       }
      }
      if (($9 - $61) * (+HEAPF32[$arraydecay36 >> 2] - $62) - ($11 - $62) * (+HEAPF32[$arrayidx8_i153 >> 2] - $61) < 0.0) {
       $i_1 = $i_0234;
       $rightPolyRef_2 = $rightPolyRef_1;
       $leftPolyRef_1 = $leftPolyRef_0231;
       $rightPolyType_2 = $rightPolyType_1;
       $leftPolyType_1 = $leftPolyType_0228;
       $rightIndex_2 = $rightIndex_1;
       $leftIndex_1 = $leftIndex_0224;
       $80 = $44;
       $portalRight_sroa_0_2 = $60;
       $portalRight_sroa_7_2 = $59;
       $portalRight_sroa_13_2 = $58;
       $portalLeft_sroa_0_1 = $11;
       $portalLeft_sroa_7_1 = $10;
       $portalLeft_sroa_13_1 = $9;
       $79 = $62;
       $78 = $61;
      } else {
       if ((HEAP8[24344] | 0) == 0) {
        if ((___cxa_guard_acquire(24344) | 0) != 0) {
         HEAPF32[2874] = 3.725290298461914e-9;
         $67;
        }
       }
       $68 = +HEAPF32[$arraydecay22 >> 2];
       $sub_i_i = $11 - $68;
       $sub4_i_i = $10 - +HEAPF32[$arrayidx3_i >> 2];
       $70 = +HEAPF32[$arrayidx5_i >> 2];
       $sub7_i_i = $9 - $70;
       if ($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i + $sub7_i_i * $sub7_i_i < +HEAPF32[2874]) {
        $75 = +HEAPF32[$arraydecay36 >> 2];
        $74 = +HEAPF32[$arrayidx8_i153 >> 2];
       } else {
        $72 = +HEAPF32[$arraydecay36 >> 2];
        $73 = +HEAPF32[$arrayidx8_i153 >> 2];
        if (($58 - $70) * ($72 - $68) - ($60 - $68) * ($73 - $70) < 0.0) {
         $75 = $72;
         $74 = $73;
        } else {
         HEAPF32[$arraydecay22 >> 2] = $60;
         HEAPF32[$arrayidx3_i >> 2] = $59;
         HEAPF32[$arrayidx5_i >> 2] = $58;
         if (($rightPolyRef_1 | 0) == 0) {
          $flags163_0 = 2;
         } else {
          $flags163_0 = $rightPolyType_1 << 24 >> 24 == 1 ? 4 : 0;
         }
         $call174 = __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($arraydecay22, $flags163_0, $rightPolyRef_1, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) | 0;
         if (($call174 | 0) == 536870912) {
          $i_1 = $rightIndex_1;
          $rightPolyRef_2 = $rightPolyRef_1;
          $leftPolyRef_1 = $leftPolyRef_0231;
          $rightPolyType_2 = $rightPolyType_1;
          $leftPolyType_1 = $leftPolyType_0228;
          $rightIndex_2 = $rightIndex_1;
          $leftIndex_1 = $rightIndex_1;
          $80 = $44;
          $portalRight_sroa_0_2 = $60;
          $portalRight_sroa_7_2 = $59;
          $portalRight_sroa_13_2 = $58;
          $portalLeft_sroa_0_1 = $60;
          $portalLeft_sroa_7_1 = $59;
          $portalLeft_sroa_13_1 = $58;
          $79 = $60;
          $78 = $58;
          break;
         } else {
          $retval_0 = $call174;
          label = 57;
          break L18;
         }
        }
       }
       $76 = +HEAPF32[$arrayidx2_i135 >> 2];
       if ($cmp31) {
        $i_1 = $i_0234;
        $rightPolyRef_2 = $rightPolyRef_1;
        $leftPolyRef_1 = HEAP32[$path + ($add << 2) >> 2] | 0;
        $rightPolyType_2 = $rightPolyType_1;
        $leftPolyType_1 = $44;
        $rightIndex_2 = $rightIndex_1;
        $leftIndex_1 = $i_0234;
        $80 = $44;
        $portalRight_sroa_0_2 = $60;
        $portalRight_sroa_7_2 = $59;
        $portalRight_sroa_13_2 = $58;
        $portalLeft_sroa_0_1 = $75;
        $portalLeft_sroa_7_1 = $76;
        $portalLeft_sroa_13_1 = $74;
        $79 = $68;
        $78 = $70;
       } else {
        $i_1 = $i_0234;
        $rightPolyRef_2 = $rightPolyRef_1;
        $leftPolyRef_1 = 0;
        $rightPolyType_2 = $rightPolyType_1;
        $leftPolyType_1 = $44;
        $rightIndex_2 = $rightIndex_1;
        $leftIndex_1 = $i_0234;
        $80 = $44;
        $portalRight_sroa_0_2 = $60;
        $portalRight_sroa_7_2 = $59;
        $portalRight_sroa_13_2 = $58;
        $portalLeft_sroa_0_1 = $75;
        $portalLeft_sroa_7_1 = $76;
        $portalLeft_sroa_13_1 = $74;
        $79 = $68;
        $78 = $70;
       }
      }
     }
    } while (0);
    $i_0234 = $i_1 + 1 | 0;
    if (($i_0234 | 0) >= ($pathSize | 0)) {
     break L16;
    } else {
     $12 = $80;
     $leftIndex_0224 = $leftIndex_1;
     $rightIndex_0226 = $rightIndex_2;
     $leftPolyType_0228 = $leftPolyType_1;
     $rightPolyType_0230 = $rightPolyType_2;
     $leftPolyRef_0231 = $leftPolyRef_1;
     $rightPolyRef_0233 = $rightPolyRef_2;
     $portalRight_sroa_0_0 = $portalRight_sroa_0_2;
     $portalRight_sroa_7_0 = $portalRight_sroa_7_2;
     $portalRight_sroa_13_0 = $portalRight_sroa_13_2;
     $11 = $portalLeft_sroa_0_1;
     $10 = $portalLeft_sroa_7_1;
     $9 = $portalLeft_sroa_13_1;
     $8 = $79;
     $7 = $78;
    }
   }
   if ((label | 0) == 20) {
    if ((__ZNK14dtNavMeshQuery26closestPointOnPolyBoundaryEjPKfPf(HEAP32[$this_idx53 >> 2] | 0, HEAP32[$arrayidx33 >> 2] | 0, $endPos, $arraydecay10) | 0) < 0) {
     $retval_0 = -2147483640;
     STACKTOP = sp;
     return $retval_0 | 0;
    }
    __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($arraydecay10, 0, HEAP32[$arrayidx33 >> 2] | 0, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) | 0;
    $retval_0 = (HEAP32[$straightPathCount >> 2] | 0) >= ($maxStraightPath | 0) ? 1073741904 : 1073741888;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if ((label | 0) == 57) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($arraydecay10, 2, 0, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) | 0;
 $retval_0 = (HEAP32[$straightPathCount >> 2] | 0) >= ($maxStraightPath | 0) ? 1073741840 : 1073741824;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z20rcBuildDistanceFieldP9rcContextR20rcCompactHeightfield($ctx, $chf) {
 $ctx = $ctx | 0;
 $chf = $chf | 0;
 var $m_timerEnabled_i = 0, $dist = 0, $3 = 0, $spanCount = 0, $call_i_i = 0, $6 = 0, $7 = 0, $call_i_i3 = 0, $8 = 0, $width_i = 0, $13 = 0, $height_i = 0, $14 = 0, $15 = 0, $cmp5277_i = 0, $cells_i = 0, $spans_i = 0, $areas_i = 0, $_pre67_pre = 0, $x_0278_us_i = 0, $bf_load_us_i = 0, $bf_clear_us_i = 0, $bf_lshr_us_i = 0, $add12_us_i = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $_pre68 = 0, $_pre69 = 0, $i8_0276_us_i = 0, $23 = 0, $bf_load_i_us_i = 0, $and_i_us_i = 0, $nc_1_us_i = 0, $and_i_us_1_i = 0, $y_0281_us_i = 0, $mul_us_i = 0, $mul26_us_3_i = 0, $add23_us_2_i = 0, $add25_us_1_i = 0, $mul26_us_1_i = 0, $add23_us_i = 0, $y57_0272_i = 0, $mul66_i = 0, $mul158_i = 0, $add187_i = 0, $_pre = 0, $x61_0270_i = 0, $bf_load71_i = 0, $bf_clear72_i = 0, $bf_lshr77_i = 0, $add78_i = 0, $add90_i = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $_pre64 = 0, $i70_0268_i = 0, $31 = 0, $and_i245_i = 0, $add102_i = 0, $add107_i = 0, $arrayidx108_i = 0, $33 = 0, $conv115_i = 0, $34 = 0, $and_i237_i = 0, $add135_i = 0, $and_i227_i = 0, $add165_i = 0, $add171_i = 0, $arrayidx172_i = 0, $38 = 0, $conv179_i = 0, $39 = 0, $and_i217_i = 0, $add202_i = 0, $inc222_i = 0, $y224_0266_in_i = 0, $mul234_i = 0, $mul330_i = 0, $add359_i = 0, $_pre65 = 0, $x228_0262_in_i = 0, $bf_load239_i = 0, $bf_clear240_i = 0, $bf_lshr245_i = 0, $add246_i = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $_pre66 = 0, $i238_0258_i = 0, $47 = 0, $and_i207_i = 0, $add270_i = 0, $add276_i = 0, $arrayidx277_i = 0, $49 = 0, $conv284_i = 0, $50 = 0, $and_i197_i = 0, $add307_i = 0, $and_i187_i = 0, $add337_i = 0, $add343_i = 0, $arrayidx344_i = 0, $54 = 0, $conv351_i = 0, $55 = 0, $and_i177_i = 0, $add374_i = 0, $58 = 0, $59 = 0, $i395_0256_i = 0, $60 = 0, $cond_i_i = 0, $inc403_i = 0, $nc_1_us_1_i = 0, $and_i_us_2_i = 0, $nc_1_us_2_i = 0, $and_i_us_3_i = 0, $nc_1_us_3_i = 0, $64 = 0, $66 = 0, $69 = 0, $70 = 0, $cmp229_i = 0, $cells_i43 = 0, $spans_i44 = 0, $y_033_i = 0, $mul4_i = 0, $_pre_i = 0, $x_030_i = 0, $bf_load_i = 0, $bf_clear_i = 0, $bf_lshr_i = 0, $add8_i = 0, $i_027_i = 0, $72 = 0, $conv_i = 0, $73 = 0, $bf_clear_i_i = 0, $mul63_i = 0, $d_025_i = 0, $dir_024_i = 0, $and_i_i = 0, $add23_i = 0, $add25_i = 0, $77 = 0, $add33_i = 0, $add36_i = 0, $add39_i = 0, $and_i = 0, $and_i13_i = 0, $82 = 0, $inc_pre_phi_i = 0, $d_1_i = 0, $cmp = 0, $_63 = 0, $85 = 0, $retval_0 = 0, tempVarArgs = 0, sp = 0, $x228_0262_in_i$looptemp = 0, $y224_0266_in_i$looptemp = 0;
 sp = STACKTOP;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 17);
 }
 $dist = $chf + 68 | 0;
 $3 = HEAP32[$dist >> 2] | 0;
 if (($3 | 0) != 0) {
  _free($3);
  HEAP32[$dist >> 2] = 0;
 }
 $spanCount = $chf + 8 | 0;
 $call_i_i = _malloc(HEAP32[$spanCount >> 2] << 1) | 0;
 $6 = $call_i_i;
 $7 = HEAP32[$spanCount >> 2] | 0;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6312, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $7, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call_i_i3 = _malloc($7 << 1) | 0;
 $8 = $call_i_i3;
 if (($call_i_i3 | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8480, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$spanCount >> 2], tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  _free($call_i_i);
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 18);
 }
 $width_i = $chf | 0;
 $13 = HEAP32[$width_i >> 2] | 0;
 $height_i = $chf + 4 | 0;
 $14 = HEAP32[$height_i >> 2] | 0;
 $15 = HEAP32[$spanCount >> 2] | 0;
 if (($15 | 0) > 0) {
  _memset($call_i_i | 0, -1 | 0, (($15 | 0) > 1 ? $15 << 1 : 2) | 0) | 0;
 }
 if (($14 | 0) > 0) {
  $cmp5277_i = ($13 | 0) > 0;
  $cells_i = $chf + 60 | 0;
  $spans_i = $chf + 64 | 0;
  $areas_i = $chf + 72 | 0;
  if ($cmp5277_i) {
   $_pre67_pre = HEAP32[$cells_i >> 2] | 0;
   $y_0281_us_i = 0;
   while (1) {
    $mul_us_i = Math_imul($y_0281_us_i, $13) | 0;
    $mul26_us_3_i = Math_imul($y_0281_us_i - 1 | 0, $13) | 0;
    $add23_us_2_i = $mul_us_i + 1 | 0;
    $add25_us_1_i = $y_0281_us_i + 1 | 0;
    $mul26_us_1_i = Math_imul($add25_us_1_i, $13) | 0;
    $add23_us_i = $mul_us_i - 1 | 0;
    $x_0278_us_i = 0;
    do {
     $bf_load_us_i = HEAP32[$_pre67_pre + ($x_0278_us_i + $mul_us_i << 2) >> 2] | 0;
     $bf_clear_us_i = $bf_load_us_i & 16777215;
     $bf_lshr_us_i = $bf_load_us_i >>> 24;
     $add12_us_i = $bf_clear_us_i + $bf_lshr_us_i | 0;
     if (($bf_lshr_us_i | 0) != 0) {
      $19 = $_pre67_pre + ($x_0278_us_i + $mul26_us_3_i << 2) | 0;
      $20 = $_pre67_pre + ($add23_us_2_i + $x_0278_us_i << 2) | 0;
      $21 = $_pre67_pre + ($x_0278_us_i + $mul26_us_1_i << 2) | 0;
      $22 = $_pre67_pre + ($add23_us_i + $x_0278_us_i << 2) | 0;
      $_pre68 = HEAP32[$spans_i >> 2] | 0;
      $_pre69 = HEAP32[$areas_i >> 2] | 0;
      $i8_0276_us_i = $bf_clear_us_i;
      do {
       $23 = HEAP8[$_pre69 + $i8_0276_us_i >> 0] | 0;
       $bf_load_i_us_i = HEAP32[$_pre68 + ($i8_0276_us_i << 3) + 4 >> 2] | 0;
       $and_i_us_i = $bf_load_i_us_i & 63;
       if (($and_i_us_i | 0) == 63) {
        $nc_1_us_i = 0;
       } else {
        $nc_1_us_i = $23 << 24 >> 24 == (HEAP8[$_pre69 + ((HEAP32[$22 >> 2] & 16777215) + $and_i_us_i) >> 0] | 0) | 0;
       }
       $and_i_us_1_i = $bf_load_i_us_i >>> 6 & 63;
       if (($and_i_us_1_i | 0) == 63) {
        $nc_1_us_1_i = $nc_1_us_i;
       } else {
        $nc_1_us_1_i = ($23 << 24 >> 24 == (HEAP8[$_pre69 + ((HEAP32[$21 >> 2] & 16777215) + $and_i_us_1_i) >> 0] | 0)) + $nc_1_us_i | 0;
       }
       $and_i_us_2_i = $bf_load_i_us_i >>> 12 & 63;
       if (($and_i_us_2_i | 0) == 63) {
        $nc_1_us_2_i = $nc_1_us_1_i;
       } else {
        $nc_1_us_2_i = ($23 << 24 >> 24 == (HEAP8[$_pre69 + ((HEAP32[$20 >> 2] & 16777215) + $and_i_us_2_i) >> 0] | 0)) + $nc_1_us_1_i | 0;
       }
       $and_i_us_3_i = $bf_load_i_us_i >>> 18 & 63;
       if (($and_i_us_3_i | 0) == 63) {
        $nc_1_us_3_i = $nc_1_us_2_i;
       } else {
        $nc_1_us_3_i = ($23 << 24 >> 24 == (HEAP8[$_pre69 + ((HEAP32[$19 >> 2] & 16777215) + $and_i_us_3_i) >> 0] | 0)) + $nc_1_us_2_i | 0;
       }
       if (($nc_1_us_3_i | 0) != 4) {
        HEAP16[$6 + ($i8_0276_us_i << 1) >> 1] = 0;
       }
       $i8_0276_us_i = $i8_0276_us_i + 1 | 0;
      } while (($i8_0276_us_i | 0) < ($add12_us_i | 0));
     }
     $x_0278_us_i = $x_0278_us_i + 1 | 0;
    } while (($x_0278_us_i | 0) < ($13 | 0));
    if (($add25_us_1_i | 0) < ($14 | 0)) {
     $y_0281_us_i = $add25_us_1_i;
    } else {
     $y57_0272_i = 0;
     break;
    }
   }
  } else {
   $y57_0272_i = 0;
  }
  while (1) {
   if ($cmp5277_i) {
    $mul66_i = Math_imul($y57_0272_i, $13) | 0;
    $mul158_i = Math_imul($y57_0272_i - 1 | 0, $13) | 0;
    $add187_i = $mul158_i + 1 | 0;
    $_pre = HEAP32[$cells_i >> 2] | 0;
    $x61_0270_i = 0;
    do {
     $bf_load71_i = HEAP32[$_pre + ($x61_0270_i + $mul66_i << 2) >> 2] | 0;
     $bf_clear72_i = $bf_load71_i & 16777215;
     $bf_lshr77_i = $bf_load71_i >>> 24;
     $add78_i = $bf_clear72_i + $bf_lshr77_i | 0;
     if (($bf_lshr77_i | 0) != 0) {
      $add90_i = $x61_0270_i - 1 | 0;
      $27 = $_pre + ($x61_0270_i + $mul158_i << 2) | 0;
      $28 = $_pre + ($add187_i + $x61_0270_i << 2) | 0;
      $29 = $_pre + ($add90_i + $mul66_i << 2) | 0;
      $30 = $_pre + ($add90_i + $mul158_i << 2) | 0;
      $_pre64 = HEAP32[$spans_i >> 2] | 0;
      $i70_0268_i = $bf_clear72_i;
      do {
       $31 = $_pre64 + ($i70_0268_i << 3) + 4 | 0;
       $and_i245_i = HEAP32[$31 >> 2] & 63;
       if (($and_i245_i | 0) != 63) {
        $add102_i = (HEAP32[$29 >> 2] & 16777215) + $and_i245_i | 0;
        $add107_i = (HEAPU16[$6 + ($add102_i << 1) >> 1] | 0) + 2 | 0;
        $arrayidx108_i = $6 + ($i70_0268_i << 1) | 0;
        $33 = HEAP16[$arrayidx108_i >> 1] | 0;
        if ($add107_i >>> 0 < ($33 & 65535) >>> 0) {
         $conv115_i = $add107_i & 65535;
         HEAP16[$arrayidx108_i >> 1] = $conv115_i;
         $34 = $conv115_i;
        } else {
         $34 = $33;
        }
        $and_i237_i = (HEAP32[$_pre64 + ($add102_i << 3) + 4 >> 2] | 0) >>> 18 & 63;
        if (($and_i237_i | 0) != 63) {
         $add135_i = (HEAPU16[$6 + ((HEAP32[$30 >> 2] & 16777215) + $and_i237_i << 1) >> 1] | 0) + 3 | 0;
         if ($add135_i >>> 0 < ($34 & 65535) >>> 0) {
          HEAP16[$arrayidx108_i >> 1] = $add135_i;
         }
        }
       }
       $and_i227_i = (HEAP32[$31 >> 2] | 0) >>> 18 & 63;
       if (($and_i227_i | 0) != 63) {
        $add165_i = (HEAP32[$27 >> 2] & 16777215) + $and_i227_i | 0;
        $add171_i = (HEAPU16[$6 + ($add165_i << 1) >> 1] | 0) + 2 | 0;
        $arrayidx172_i = $6 + ($i70_0268_i << 1) | 0;
        $38 = HEAP16[$arrayidx172_i >> 1] | 0;
        if ($add171_i >>> 0 < ($38 & 65535) >>> 0) {
         $conv179_i = $add171_i & 65535;
         HEAP16[$arrayidx172_i >> 1] = $conv179_i;
         $39 = $conv179_i;
        } else {
         $39 = $38;
        }
        $and_i217_i = (HEAP32[$_pre64 + ($add165_i << 3) + 4 >> 2] | 0) >>> 12 & 63;
        if (($and_i217_i | 0) != 63) {
         $add202_i = (HEAPU16[$6 + ((HEAP32[$28 >> 2] & 16777215) + $and_i217_i << 1) >> 1] | 0) + 3 | 0;
         if ($add202_i >>> 0 < ($39 & 65535) >>> 0) {
          HEAP16[$arrayidx172_i >> 1] = $add202_i;
         }
        }
       }
       $i70_0268_i = $i70_0268_i + 1 | 0;
      } while (($i70_0268_i | 0) < ($add78_i | 0));
     }
     $x61_0270_i = $x61_0270_i + 1 | 0;
    } while (($x61_0270_i | 0) < ($13 | 0));
   }
   $inc222_i = $y57_0272_i + 1 | 0;
   if (($inc222_i | 0) < ($14 | 0)) {
    $y57_0272_i = $inc222_i;
   } else {
    $y224_0266_in_i = $14;
    break;
   }
  }
  do {
   $y224_0266_in_i$looptemp = $y224_0266_in_i;
   $y224_0266_in_i = $y224_0266_in_i - 1 | 0;
   if ($cmp5277_i) {
    $mul234_i = Math_imul($y224_0266_in_i, $13) | 0;
    $mul330_i = Math_imul($y224_0266_in_i$looptemp, $13) | 0;
    $add359_i = $mul330_i - 2 | 0;
    $_pre65 = HEAP32[$cells_i >> 2] | 0;
    $x228_0262_in_i = $13;
    do {
     $x228_0262_in_i$looptemp = $x228_0262_in_i;
     $x228_0262_in_i = $x228_0262_in_i - 1 | 0;
     $bf_load239_i = HEAP32[$_pre65 + ($x228_0262_in_i + $mul234_i << 2) >> 2] | 0;
     $bf_clear240_i = $bf_load239_i & 16777215;
     $bf_lshr245_i = $bf_load239_i >>> 24;
     $add246_i = $bf_clear240_i + $bf_lshr245_i | 0;
     if (($bf_lshr245_i | 0) != 0) {
      $43 = $_pre65 + ($x228_0262_in_i + $mul330_i << 2) | 0;
      $44 = $_pre65 + ($add359_i + $x228_0262_in_i$looptemp << 2) | 0;
      $45 = $_pre65 + ($x228_0262_in_i$looptemp + $mul234_i << 2) | 0;
      $46 = $_pre65 + ($x228_0262_in_i$looptemp + $mul330_i << 2) | 0;
      $_pre66 = HEAP32[$spans_i >> 2] | 0;
      $i238_0258_i = $bf_clear240_i;
      do {
       $47 = $_pre66 + ($i238_0258_i << 3) + 4 | 0;
       $and_i207_i = (HEAP32[$47 >> 2] | 0) >>> 12 & 63;
       if (($and_i207_i | 0) != 63) {
        $add270_i = (HEAP32[$45 >> 2] & 16777215) + $and_i207_i | 0;
        $add276_i = (HEAPU16[$6 + ($add270_i << 1) >> 1] | 0) + 2 | 0;
        $arrayidx277_i = $6 + ($i238_0258_i << 1) | 0;
        $49 = HEAP16[$arrayidx277_i >> 1] | 0;
        if ($add276_i >>> 0 < ($49 & 65535) >>> 0) {
         $conv284_i = $add276_i & 65535;
         HEAP16[$arrayidx277_i >> 1] = $conv284_i;
         $50 = $conv284_i;
        } else {
         $50 = $49;
        }
        $and_i197_i = (HEAP32[$_pre66 + ($add270_i << 3) + 4 >> 2] | 0) >>> 6 & 63;
        if (($and_i197_i | 0) != 63) {
         $add307_i = (HEAPU16[$6 + ((HEAP32[$46 >> 2] & 16777215) + $and_i197_i << 1) >> 1] | 0) + 3 | 0;
         if ($add307_i >>> 0 < ($50 & 65535) >>> 0) {
          HEAP16[$arrayidx277_i >> 1] = $add307_i;
         }
        }
       }
       $and_i187_i = (HEAP32[$47 >> 2] | 0) >>> 6 & 63;
       if (($and_i187_i | 0) != 63) {
        $add337_i = (HEAP32[$43 >> 2] & 16777215) + $and_i187_i | 0;
        $add343_i = (HEAPU16[$6 + ($add337_i << 1) >> 1] | 0) + 2 | 0;
        $arrayidx344_i = $6 + ($i238_0258_i << 1) | 0;
        $54 = HEAP16[$arrayidx344_i >> 1] | 0;
        if ($add343_i >>> 0 < ($54 & 65535) >>> 0) {
         $conv351_i = $add343_i & 65535;
         HEAP16[$arrayidx344_i >> 1] = $conv351_i;
         $55 = $conv351_i;
        } else {
         $55 = $54;
        }
        $and_i177_i = HEAP32[$_pre66 + ($add337_i << 3) + 4 >> 2] & 63;
        if (($and_i177_i | 0) != 63) {
         $add374_i = (HEAPU16[$6 + ((HEAP32[$44 >> 2] & 16777215) + $and_i177_i << 1) >> 1] | 0) + 3 | 0;
         if ($add374_i >>> 0 < ($55 & 65535) >>> 0) {
          HEAP16[$arrayidx344_i >> 1] = $add374_i;
         }
        }
       }
       $i238_0258_i = $i238_0258_i + 1 | 0;
      } while (($i238_0258_i | 0) < ($add246_i | 0));
     }
    } while (($x228_0262_in_i | 0) > 0);
   }
  } while (($y224_0266_in_i | 0) > 0);
 }
 $58 = HEAP32[$spanCount >> 2] | 0;
 if (($58 | 0) > 0) {
  $i395_0256_i = 0;
  $59 = 0;
  while (1) {
   $60 = HEAP16[$6 + ($i395_0256_i << 1) >> 1] | 0;
   $cond_i_i = ($60 & 65535) >>> 0 > ($59 & 65535) >>> 0 ? $60 : $59;
   $inc403_i = $i395_0256_i + 1 | 0;
   if (($inc403_i | 0) < ($58 | 0)) {
    $i395_0256_i = $inc403_i;
    $59 = $cond_i_i;
   } else {
    $64 = $cond_i_i;
    break;
   }
  }
 } else {
  $64 = 0;
 }
 HEAP16[$chf + 24 >> 1] = $64;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  $66 = $ctx;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$66 >> 2] | 0) + 24 >> 2] & 127]($ctx, 18);
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$66 >> 2] | 0) + 20 >> 2] & 127]($ctx, 19);
  }
 }
 $69 = HEAP32[$width_i >> 2] | 0;
 $70 = HEAP32[$height_i >> 2] | 0;
 if (($70 | 0) > 0) {
  $cmp229_i = ($69 | 0) > 0;
  $cells_i43 = $chf + 60 | 0;
  $spans_i44 = $chf + 64 | 0;
  $y_033_i = 0;
  do {
   if ($cmp229_i) {
    $mul4_i = Math_imul($y_033_i, $69) | 0;
    $_pre_i = HEAP32[$cells_i43 >> 2] | 0;
    $x_030_i = 0;
    do {
     $bf_load_i = HEAP32[$_pre_i + ($x_030_i + $mul4_i << 2) >> 2] | 0;
     $bf_clear_i = $bf_load_i & 16777215;
     $bf_lshr_i = $bf_load_i >>> 24;
     $add8_i = $bf_clear_i + $bf_lshr_i | 0;
     if (($bf_lshr_i | 0) != 0) {
      $i_027_i = $bf_clear_i;
      do {
       $72 = HEAP16[$6 + ($i_027_i << 1) >> 1] | 0;
       $conv_i = $72 & 65535;
       if (($72 & 65535) >>> 0 < 3 >>> 0) {
        HEAP16[$8 + ($i_027_i << 1) >> 1] = $72;
       } else {
        $73 = HEAP32[$spans_i44 >> 2] | 0;
        $bf_clear_i_i = HEAP32[$73 + ($i_027_i << 3) + 4 >> 2] & 16777215;
        $mul63_i = $conv_i << 1;
        $dir_024_i = 0;
        $d_025_i = $conv_i;
        while (1) {
         $and_i_i = $bf_clear_i_i >>> (($dir_024_i * 6 | 0) >>> 0) & 63;
         do {
          if (($and_i_i | 0) == 63) {
           $d_1_i = $d_025_i + $mul63_i | 0;
           $inc_pre_phi_i = $dir_024_i + 1 | 0;
          } else {
           $add23_i = (HEAP32[11520 + ($dir_024_i << 2) >> 2] | 0) + $x_030_i | 0;
           $add25_i = (HEAP32[11504 + ($dir_024_i << 2) >> 2] | 0) + $y_033_i | 0;
           $77 = $_pre_i + ((Math_imul($add25_i, $69) | 0) + $add23_i << 2) | 0;
           $add33_i = (HEAP32[$77 >> 2] & 16777215) + $and_i_i | 0;
           $add36_i = (HEAPU16[$6 + ($add33_i << 1) >> 1] | 0) + $d_025_i | 0;
           $add39_i = $dir_024_i + 1 | 0;
           $and_i = $add39_i & 3;
           $and_i13_i = (HEAP32[$73 + ($add33_i << 3) + 4 >> 2] & 16777215) >>> (($and_i * 6 | 0) >>> 0) & 63;
           if (($and_i13_i | 0) == 63) {
            $d_1_i = $add36_i + $conv_i | 0;
            $inc_pre_phi_i = $add39_i;
            break;
           } else {
            $82 = $_pre_i + ((HEAP32[11520 + ($and_i << 2) >> 2] | 0) + $add23_i + (Math_imul((HEAP32[11504 + ($and_i << 2) >> 2] | 0) + $add25_i | 0, $69) | 0) << 2) | 0;
            $d_1_i = (HEAPU16[$6 + ((HEAP32[$82 >> 2] & 16777215) + $and_i13_i << 1) >> 1] | 0) + $add36_i | 0;
            $inc_pre_phi_i = $add39_i;
            break;
           }
          }
         } while (0);
         if (($inc_pre_phi_i | 0) < 4) {
          $dir_024_i = $inc_pre_phi_i;
          $d_025_i = $d_1_i;
         } else {
          break;
         }
        }
        HEAP16[$8 + ($i_027_i << 1) >> 1] = ($d_1_i + 5 | 0) / 9 | 0;
       }
       $i_027_i = $i_027_i + 1 | 0;
      } while (($i_027_i | 0) < ($add8_i | 0));
     }
     $x_030_i = $x_030_i + 1 | 0;
    } while (($x_030_i | 0) < ($69 | 0));
   }
   $y_033_i = $y_033_i + 1 | 0;
  } while (($y_033_i | 0) < ($70 | 0));
 }
 $cmp = ($call_i_i3 | 0) == ($call_i_i | 0);
 $_63 = $cmp ? $8 : $6;
 HEAP32[$dist >> 2] = $cmp ? $6 : $8;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  $85 = $ctx;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$85 >> 2] | 0) + 24 >> 2] & 127]($ctx, 19);
  if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$85 >> 2] | 0) + 24 >> 2] & 127]($ctx, 17);
  }
 }
 if (($_63 | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _free($_63);
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i$0 = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i$0 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$8$0 = 26;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 1;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 12;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$8$0 = 26;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 1;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 12;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$8$0 = 26;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 1;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 12;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i$0 = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i$0 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$8$0 = 26;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 1;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 12;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$8$0 = 26;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 1;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 12;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$8$0 = 26;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 1;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 12;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$6$0 = 26;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 1;
 $$etemp$7$1 = 0;
 $$etemp$8$0 = 12;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 12;
 $$etemp$9$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP16[$__v >> 1] = $call36_i;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$6$0 = 26;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 1;
 $$etemp$7$1 = 0;
 $$etemp$8$0 = 12;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 12;
 $$etemp$9$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$6$0 = 26;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 1;
 $$etemp$7$1 = 0;
 $$etemp$8$0 = 12;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 12;
 $$etemp$9$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__g_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i125_pre_phi_i = 0, $arrayidx_i_i_i128_pre_phi_i = 0, $cond_i_i18_i = 0, $arraydecay5_i = 0, $__cap__i_i137_i = 0, $__size__i2_i115_i = 0, $arrayidx_i_i = 0, $arrayidx4_i_i = 0, $sub_ptr_rhs_cast_i96_i = 0, $add_ptr_i98_i = 0, $sub_ptr_rhs_cast24_i_i = 0, $__size__i2_i_i87_i = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $cond_i_i18155_i = 0, $arraydecay5151_i = 0, $11 = 0, $__a_0_i = 0, $cmp_i1_i_i_i34_i = 0, $agg_tmp1_sroa_0_1 = 0, $16 = 0, $cmp_i_i_i39_i = 0, $agg_tmp23_sroa_0_2 = 0, $21 = 0, $tobool_i_i62_i = 0, $cond_i68_i = 0, $cond_i78175_i = 0, $cond_i141_i = 0, $cond_i_i130_i = 0, $cond_i_i18154_i = 0, $__a_1_i = 0, $32 = 0, $retval_0_i_off0_i_i = 0, $37 = 0, $cmp_i80_i = 0, $cmp2_i_i = 0, $40 = 0, $cond_i_i92_i = 0, $__first_addr_05_i_i_i = 0, $incdec_ptr_i_i100_i = 0, $__first_addr_0_lcssa_i_i_i = 0, $sub_ptr_sub25_i_i = 0, $cond_i_i18153_ph_i = 0, $arraydecay5150_ph_i = 0, $_ph_i = 0, $__ninp__i_i_i = 0, $46 = 0, $_pre_i12_i_i_i = 0, $cond_i_i18156_i = 0, $__a_2_i = 0, $50 = 0, $cond_i23_i = 0, $arraydecay5152_i = 0, $call36_i = 0, $52 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 32 | 0;
 $__grouping_i = sp + 40 | 0;
 $__buf_i = sp + 56 | 0;
 $__g_i = sp + 72 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = $__atoms_i | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping_i, $__iob, $4, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i18_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i128_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i125_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i18_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i128_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i125_pre_phi_i = $__data__i_i_i_i;
 }
 $arraydecay5_i = $__g_i | 0;
 $__cap__i_i137_i = $__buf_i | 0;
 $__size__i2_i115_i = $__buf_i + 4 | 0;
 $arrayidx_i_i = $__atoms_i + 24 | 0;
 $arrayidx4_i_i = $__atoms_i + 25 | 0;
 $sub_ptr_rhs_cast_i96_i = $__g_i;
 $add_ptr_i98_i = $__atoms_i + 26 | 0;
 $sub_ptr_rhs_cast24_i_i = $__atoms_i;
 $__size__i2_i_i87_i = $__grouping_i + 4 | 0;
 $__a_0_i = $cond_i_i18_i;
 $11 = 0;
 $arraydecay5151_i = $arraydecay5_i;
 $cond_i_i18155_i = $cond_i_i18_i;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L11 : while (1) {
  if (($agg_tmp1_sroa_0_0 | 0) == 0) {
   $16 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$agg_tmp1_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$agg_tmp1_sroa_0_0 + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i34_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp1_sroa_0_0) | 0) == -1;
    $16 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i34_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $16 = $agg_tmp1_sroa_0_0;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i39_i = ($16 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 19;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 19;
    } else {
     if ($cmp_i_i_i39_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $cond_i_i18156_i = $cond_i_i18155_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L11;
     }
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($cmp_i_i_i39_i) {
    $__a_2_i = $__a_0_i;
    $cond_i_i18156_i = $cond_i_i18155_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $21 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i62_i = ($21 & 1) == 0;
  if ($tobool_i_i62_i) {
   $cond_i68_i = ($21 & 255) >>> 1;
  } else {
   $cond_i68_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
  }
  if (($cond_i_i18155_i - $__a_0_i | 0) == ($cond_i68_i | 0)) {
   if ($tobool_i_i62_i) {
    $cond_i78175_i = ($21 & 255) >>> 1;
   } else {
    $cond_i78175_i = HEAP32[$__size__i2_i115_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i78175_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i141_i = 10;
   } else {
    $cond_i141_i = (HEAP32[$__cap__i_i137_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i141_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i130_i = $arrayidx_i_i_i128_pre_phi_i;
   } else {
    $cond_i_i130_i = HEAP32[$__data__i_i_i125_pre_phi_i >> 2] | 0;
   }
   $__a_1_i = $cond_i_i130_i;
   $cond_i_i18154_i = $cond_i_i130_i + $cond_i78175_i | 0;
  } else {
   $__a_1_i = $__a_0_i;
   $cond_i_i18154_i = $cond_i_i18155_i;
  }
  $32 = HEAP32[$16 + 12 >> 2] | 0;
  if (($32 | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$32 >> 0] | 0;
  }
  $37 = HEAP8[$__thousands_sep_i >> 0] | 0;
  $cmp_i80_i = ($cond_i_i18154_i | 0) == ($__a_1_i | 0);
  if ($cmp_i80_i) {
   $cmp2_i_i = (HEAP8[$arrayidx_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24;
   if ($cmp2_i_i | (HEAP8[$arrayidx4_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
    HEAP8[$cond_i_i18154_i >> 0] = $cmp2_i_i ? 43 : 45;
    $_ph_i = 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   } else {
    label = 51;
   }
  } else {
   label = 51;
  }
  do {
   if ((label | 0) == 51) {
    label = 0;
    $40 = HEAP8[$5 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i_i92_i = ($40 & 255) >>> 1;
    } else {
     $cond_i_i92_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    }
    if (($cond_i_i92_i | 0) != 0 & $retval_0_i_off0_i_i << 24 >> 24 == $37 << 24 >> 24) {
     if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) >= 160) {
      $_ph_i = $11;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i;
      break;
     }
     HEAP32[$arraydecay5151_i >> 2] = $11;
     $_ph_i = 0;
     $arraydecay5150_ph_i = $arraydecay5151_i + 4 | 0;
     $cond_i_i18153_ph_i = $cond_i_i18154_i;
     break;
    } else {
     $__first_addr_05_i_i_i = $4;
    }
    while (1) {
     $incdec_ptr_i_i100_i = $__first_addr_05_i_i_i + 1 | 0;
     if ((HEAP8[$__first_addr_05_i_i_i >> 0] | 0) == $retval_0_i_off0_i_i << 24 >> 24) {
      $__first_addr_0_lcssa_i_i_i = $__first_addr_05_i_i_i;
      break;
     }
     if (($incdec_ptr_i_i100_i | 0) == ($add_ptr_i98_i | 0)) {
      $__first_addr_0_lcssa_i_i_i = $add_ptr_i98_i;
      break;
     } else {
      $__first_addr_05_i_i_i = $incdec_ptr_i_i100_i;
     }
    }
    $sub_ptr_sub25_i_i = $__first_addr_0_lcssa_i_i_i - $sub_ptr_rhs_cast24_i_i | 0;
    if (($sub_ptr_sub25_i_i | 0) > 23) {
     $__a_2_i = $__a_1_i;
     $cond_i_i18156_i = $cond_i_i18154_i;
     $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
     break L11;
    }
    if (($retval_0_i_i | 0) == 8 | ($retval_0_i_i | 0) == 10) {
     if (($sub_ptr_sub25_i_i | 0) >= ($retval_0_i_i | 0)) {
      $__a_2_i = $__a_1_i;
      $cond_i_i18156_i = $cond_i_i18154_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
      break L11;
     }
    } else if (($retval_0_i_i | 0) == 16) {
     if (($sub_ptr_sub25_i_i | 0) >= 22) {
      if ($cmp_i80_i) {
       $__a_2_i = $cond_i_i18154_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if (($cond_i_i18154_i - $__a_1_i | 0) >= 3) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      if ((HEAP8[$cond_i_i18154_i - 1 >> 0] | 0) != 48) {
       $__a_2_i = $__a_1_i;
       $cond_i_i18156_i = $cond_i_i18154_i;
       $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
       break L11;
      }
      HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
      $_ph_i = 0;
      $arraydecay5150_ph_i = $arraydecay5151_i;
      $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
      break;
     }
    }
    HEAP8[$cond_i_i18154_i >> 0] = HEAP8[19528 + $sub_ptr_sub25_i_i >> 0] | 0;
    $_ph_i = $11 + 1 | 0;
    $arraydecay5150_ph_i = $arraydecay5151_i;
    $cond_i_i18153_ph_i = $cond_i_i18154_i + 1 | 0;
   }
  } while (0);
  $__ninp__i_i_i = $agg_tmp1_sroa_0_1 + 12 | 0;
  $46 = HEAP32[$__ninp__i_i_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$agg_tmp1_sroa_0_1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp1_sroa_0_1 >> 2] | 0) + 40 >> 2] & 255]($agg_tmp1_sroa_0_1) | 0;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i_i >> 2] = $46 + 1;
   $__a_0_i = $__a_1_i;
   $11 = $_ph_i;
   $arraydecay5151_i = $arraydecay5150_ph_i;
   $cond_i_i18155_i = $cond_i_i18153_ph_i;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$5 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i23_i = ($50 & 255) >>> 1;
 } else {
  $cond_i23_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 if (($cond_i23_i | 0) == 0) {
  $arraydecay5152_i = $arraydecay5151_i;
 } else {
  if (($arraydecay5151_i - $sub_ptr_rhs_cast_i96_i | 0) < 160) {
   HEAP32[$arraydecay5151_i >> 2] = $11;
   $arraydecay5152_i = $arraydecay5151_i + 4 | 0;
  } else {
   $arraydecay5152_i = $arraydecay5151_i;
  }
 }
 $call36_i = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a_2_i, $cond_i_i18156_i, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
 }
 L95 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($arraydecay5152_i | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $arraydecay5152_i - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__size__i2_i_i87_i >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $arraydecay5152_i - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L107 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L107;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L95;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i39_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$16 + 12 >> 2] | 0) == (HEAP32[$16 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 36 >> 2] & 255]($16) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $16;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 107;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 109;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 107;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 109;
    }
   }
  }
 } while (0);
 if ((label | 0) == 107) {
  if ($cmp_i_i_i_i) {
   label = 109;
  }
 }
 if ((label | 0) == 109) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$6$0 = 26;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 1;
  $$etemp$7$1 = 0;
  $$etemp$8$0 = 12;
  $$etemp$8$1 = 0;
  $$etemp$9$0 = 12;
  $$etemp$9$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$6$0 = 26;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 1;
 $$etemp$7$1 = 0;
 $$etemp$8$0 = 12;
 $$etemp$8$1 = 0;
 $$etemp$9$0 = 12;
 $$etemp$9$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZN9dtNavMesh7addTileEPhiijPj($this, $data, $dataSize, $lastRef) {
 $this = $this | 0;
 $data = $data | 0;
 $dataSize = $dataSize | 0;
 $lastRef = $lastRef | 0;
 var $nearestPt_i = 0, $neis = 0, $0 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $m_tileLutMask_i = 0, $10 = 0, $and_i_i = 0, $m_posLookup_i = 0, $arrayidx_i = 0, $tile_09_i = 0, $tile_011_i = 0, $12 = 0, $tile_0_i = 0, $m_nextFree = 0, $16 = 0, $next = 0, $18 = 0, $19 = 0, $and_i = 0, $21 = 0, $arrayidx = 0, $m_nextFree19 = 0, $prev_0 = 0, $tile_0_in = 0, $tile_0 = 0, $22 = 0, $tile_1160 = 0, $mul = 0, $mul48 = 0, $29 = 0, $30 = 0, $mul52 = 0, $mul54 = 0, $mul56 = 0, $mul58 = 0, $verts = 0, $add_ptr_sum = 0, $40 = 0, $polys = 0, $add_ptr62_sum = 0, $41 = 0, $links = 0, $add_ptr63_sum = 0, $add_ptr64_sum = 0, $add_ptr65_sum = 0, $add_ptr66_sum = 0, $bvTree = 0, $45 = 0, $offMeshCons = 0, $linksFreeList = 0, $sub79174 = 0, $i_0176 = 0, $header84 = 0, $m_polyBits_i_i_i = 0, $50 = 0, $or4_i_i_i = 0, $53 = 0, $55 = 0, $i_035_i = 0, $firstLink_i = 0, $57 = 0, $58 = 0, $59 = 0, $j_032_in_i = 0, $j_032_i = 0, $60 = 0, $next_i_i5 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $arraydecay8_i = 0, $arrayidx16_i = 0, $arrayidx2_i_i = 0, $69 = 0, $70 = 0, $71 = 0, $i_058_i = 0, $poly2_i = 0, $idxprom_i = 0, $rad_i = 0, $73 = 0.0, $arrayidx7_i = 0, $call9_i = 0, $75 = 0.0, $sub_i28 = 0.0, $sub18_i = 0.0, $79 = 0.0, $mul_i = 0, $81 = 0, $84 = 0, $85 = 0, $next_i46_i = 0, $86 = 0, $firstLink_i35 = 0, $next_i_i37 = 0, $idxprom41_i = 0, $90 = 0, $firstLink54_i = 0, $inc_i40 = 0, $93 = 0, $95 = 0, $98 = 0, $99 = 0, $and_i_i134 = 0, $tile_010_i = 0, $tile_013_i = 0, $n_012_i = 0, $101 = 0, $n_1_i = 0, $j_0173 = 0, $104 = 0, $105 = 0, $inc103 = 0, $i105_0171 = 0, $106 = 0, $107 = 0, $nx_0_i = 0, $ny_0_i = 0, $and_i_i_i = 0, $tile_010_i_i = 0, $tile_013_i_i = 0, $n_012_i_i = 0, $110 = 0, $n_1_i_i = 0, $and_i121 = 0, $j113_0170 = 0, $113 = 0, $inc127 = 0, $retval_0 = 0, sp = 0, $i_0176$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $nearestPt_i = sp | 0;
 $neis = sp + 16 | 0;
 $0 = $data;
 if ((HEAP32[$data >> 2] | 0) != 1145979222) {
  $retval_0 = -2147483647;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP32[$data + 4 >> 2] | 0) != 7) {
  $retval_0 = -2147483646;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $4 = $data + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $data + 12 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $9 = HEAP32[$data + 16 >> 2] | 0;
 $m_tileLutMask_i = $this + 56 | 0;
 $10 = HEAP32[$m_tileLutMask_i >> 2] | 0;
 $and_i_i = $10 & (Math_imul($7, -669632447) | 0) + (Math_imul($5, -1918454973) | 0);
 $m_posLookup_i = $this + 60 | 0;
 $arrayidx_i = (HEAP32[$m_posLookup_i >> 2] | 0) + ($and_i_i << 2) | 0;
 $tile_09_i = HEAP32[$arrayidx_i >> 2] | 0;
 L7 : do {
  if (($tile_09_i | 0) != 0) {
   $tile_011_i = $tile_09_i;
   while (1) {
    $12 = HEAP32[$tile_011_i + 8 >> 2] | 0;
    if (($12 | 0) != 0) {
     if ((HEAP32[$12 + 8 >> 2] | 0) == ($5 | 0)) {
      if ((HEAP32[$12 + 12 >> 2] | 0) == ($7 | 0)) {
       if ((HEAP32[$12 + 16 >> 2] | 0) == ($9 | 0)) {
        break;
       }
      }
     }
    }
    $tile_0_i = HEAP32[$tile_011_i + 56 >> 2] | 0;
    if (($tile_0_i | 0) == 0) {
     break L7;
    } else {
     $tile_011_i = $tile_0_i;
    }
   }
   if (($tile_011_i | 0) != 0) {
    $retval_0 = -2147483648;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 do {
  if (($lastRef | 0) == 0) {
   $m_nextFree = $this + 64 | 0;
   $16 = HEAP32[$m_nextFree >> 2] | 0;
   if (($16 | 0) == 0) {
    $retval_0 = -2147483644;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else {
    $next = $16 + 56 | 0;
    HEAP32[$m_nextFree >> 2] = HEAP32[$next >> 2];
    HEAP32[$next >> 2] = 0;
    $tile_1160 = $16;
    break;
   }
  } else {
   $18 = HEAP32[$this + 76 >> 2] | 0;
   $19 = HEAP32[$this + 80 >> 2] | 0;
   $and_i = $lastRef >>> ($19 >>> 0) & (1 << $18) - 1;
   if (($and_i | 0) >= (HEAP32[$this + 48 >> 2] | 0)) {
    $retval_0 = -2147483644;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
   $21 = HEAP32[$this + 68 >> 2] | 0;
   $arrayidx = $21 + ($and_i * 60 | 0) | 0;
   $m_nextFree19 = $this + 64 | 0;
   $tile_0_in = $m_nextFree19;
   $prev_0 = 0;
   while (1) {
    $tile_0 = HEAP32[$tile_0_in >> 2] | 0;
    if (($tile_0 | 0) != ($arrayidx | 0) & ($tile_0 | 0) != 0) {
     $tile_0_in = $tile_0 + 56 | 0;
     $prev_0 = $tile_0;
    } else {
     break;
    }
   }
   if (($tile_0 | 0) != ($arrayidx | 0)) {
    $retval_0 = -2147483644;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
   $22 = HEAP32[$21 + ($and_i * 60 | 0) + 56 >> 2] | 0;
   if (($prev_0 | 0) == 0) {
    HEAP32[$m_nextFree19 >> 2] = $22;
   } else {
    HEAP32[$prev_0 + 56 >> 2] = $22;
   }
   HEAP32[$arrayidx >> 2] = $lastRef >>> (($18 + $19 | 0) >>> 0) & (1 << HEAP32[$this + 72 >> 2]) - 1;
   if (($arrayidx | 0) == 0) {
    $retval_0 = -2147483644;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else {
    $tile_1160 = $arrayidx;
   }
  }
 } while (0);
 HEAP32[$tile_1160 + 56 >> 2] = HEAP32[$arrayidx_i >> 2];
 HEAP32[$arrayidx_i >> 2] = $tile_1160;
 $mul = (HEAP32[$data + 28 >> 2] | 0) * 12 | 0;
 $mul48 = HEAP32[$data + 24 >> 2] << 5;
 $29 = $data + 32 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 $mul52 = (HEAP32[$data + 36 >> 2] | 0) * 12 | 0;
 $mul54 = (HEAP32[$data + 40 >> 2] | 0) * 12 | 0;
 $mul56 = HEAP32[$data + 44 >> 2] << 2;
 $mul58 = HEAP32[$data + 48 >> 2] << 4;
 $verts = $tile_1160 + 16 | 0;
 HEAP32[$verts >> 2] = $data + 100;
 $add_ptr_sum = $mul + 100 | 0;
 $40 = $data + $add_ptr_sum | 0;
 $polys = $tile_1160 + 12 | 0;
 HEAP32[$polys >> 2] = $40;
 $add_ptr62_sum = $add_ptr_sum + $mul48 | 0;
 $41 = $data + $add_ptr62_sum | 0;
 $links = $tile_1160 + 20 | 0;
 HEAP32[$links >> 2] = $41;
 $add_ptr63_sum = $add_ptr62_sum + ($30 * 12 | 0) | 0;
 HEAP32[$tile_1160 + 24 >> 2] = $data + $add_ptr63_sum;
 $add_ptr64_sum = $add_ptr63_sum + $mul52 | 0;
 HEAP32[$tile_1160 + 28 >> 2] = $data + $add_ptr64_sum;
 $add_ptr65_sum = $add_ptr64_sum + $mul54 | 0;
 HEAP32[$tile_1160 + 32 >> 2] = $data + $add_ptr65_sum;
 $add_ptr66_sum = $add_ptr65_sum + $mul56 | 0;
 $bvTree = $tile_1160 + 36 | 0;
 HEAP32[$bvTree >> 2] = $data + $add_ptr66_sum;
 $45 = $data + ($add_ptr66_sum + $mul58) | 0;
 $offMeshCons = $tile_1160 + 40 | 0;
 HEAP32[$offMeshCons >> 2] = $45;
 if (($mul58 | 0) == 0) {
  HEAP32[$bvTree >> 2] = 0;
 }
 $linksFreeList = $tile_1160 + 4 | 0;
 HEAP32[$linksFreeList >> 2] = 0;
 HEAP32[$41 + (($30 - 1 | 0) * 12 | 0) + 4 >> 2] = -1;
 $sub79174 = (HEAP32[$29 >> 2] | 0) - 1 | 0;
 if (($sub79174 | 0) > 0) {
  $i_0176 = 0;
  do {
   $i_0176$looptemp = $i_0176;
   $i_0176 = $i_0176 + 1 | 0;
   HEAP32[$41 + ($i_0176$looptemp * 12 | 0) + 4 >> 2] = $i_0176;
  } while (($i_0176 | 0) < ($sub79174 | 0));
 }
 $header84 = $tile_1160 + 8 | 0;
 HEAP32[$header84 >> 2] = $0;
 HEAP32[$tile_1160 + 44 >> 2] = $data;
 HEAP32[$tile_1160 + 48 >> 2] = $dataSize;
 HEAP32[$tile_1160 + 52 >> 2] = 1;
 if (($tile_1160 | 0) == 0) {
  $95 = $10;
 } else {
  $m_polyBits_i_i_i = $this + 80 | 0;
  $50 = HEAP32[$m_polyBits_i_i_i >> 2] | 0;
  $or4_i_i_i = HEAP32[$tile_1160 >> 2] << (HEAP32[$this + 76 >> 2] | 0) + $50 | (($tile_1160 - (HEAP32[$this + 68 >> 2] | 0) | 0) / 60 | 0) << $50;
  $53 = HEAP32[$data + 24 >> 2] | 0;
  if (($53 | 0) > 0) {
   $i_035_i = 0;
   $55 = 0;
   while (1) {
    $firstLink_i = $40 + ($i_035_i << 5) | 0;
    HEAP32[$firstLink_i >> 2] = -1;
    if ((HEAP8[$40 + ($i_035_i << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
     $65 = $55;
    } else {
     $57 = HEAP8[$40 + ($i_035_i << 5) + 30 >> 0] | 0;
     if ($57 << 24 >> 24 == 0) {
      $65 = $55;
     } else {
      $j_032_in_i = $57 & 255;
      $59 = -1;
      $58 = $55;
      while (1) {
       $j_032_i = $j_032_in_i - 1 | 0;
       $60 = HEAP16[$40 + ($i_035_i << 5) + 16 + ($j_032_i << 1) >> 1] | 0;
       if ($60 << 16 >> 16 < 1) {
        $64 = $59;
        $63 = $58;
       } else {
        if (($58 | 0) == -1) {
         $64 = $59;
         $63 = -1;
        } else {
         $next_i_i5 = $41 + ($58 * 12 | 0) + 4 | 0;
         $62 = HEAP32[$next_i_i5 >> 2] | 0;
         HEAP32[$linksFreeList >> 2] = $62;
         HEAP32[$41 + ($58 * 12 | 0) >> 2] = $or4_i_i_i | ($60 & 65535) - 1;
         HEAP8[$41 + ($58 * 12 | 0) + 8 >> 0] = $j_032_i;
         HEAP8[$41 + ($58 * 12 | 0) + 9 >> 0] = -1;
         HEAP8[$41 + ($58 * 12 | 0) + 11 >> 0] = 0;
         HEAP8[$41 + ($58 * 12 | 0) + 10 >> 0] = 0;
         HEAP32[$next_i_i5 >> 2] = $59;
         HEAP32[$firstLink_i >> 2] = $58;
         $64 = $58;
         $63 = $62;
        }
       }
       if (($j_032_i | 0) > 0) {
        $j_032_in_i = $j_032_i;
        $59 = $64;
        $58 = $63;
       } else {
        $65 = $63;
        break;
       }
      }
     }
    }
    $i_035_i = $i_035_i + 1 | 0;
    if (($i_035_i | 0) >= ($53 | 0)) {
     break;
    } else {
     $55 = $65;
    }
   }
  } else {}
  if ((HEAP32[$data + 52 >> 2] | 0) > 0) {
   $arraydecay8_i = $nearestPt_i | 0;
   $arrayidx16_i = $nearestPt_i + 8 | 0;
   $arrayidx2_i_i = $nearestPt_i + 4 | 0;
   $i_058_i = 0;
   $71 = $0;
   $70 = $45;
   $69 = $40;
   while (1) {
    $poly2_i = $70 + ($i_058_i * 36 | 0) + 28 | 0;
    $idxprom_i = HEAPU16[$poly2_i >> 1] | 0;
    $rad_i = $70 + ($i_058_i * 36 | 0) + 24 | 0;
    $73 = +HEAPF32[$rad_i >> 2];
    $arrayidx7_i = $70 + ($i_058_i * 36 | 0) | 0;
    $call9_i = __ZNK9dtNavMesh21findNearestPolyInTileEPK10dtMeshTilePKfS4_Pf($this, $tile_1160, $arrayidx7_i, $73, +HEAPF32[$71 + 68 >> 2], $73, $arraydecay8_i) | 0;
    if (($call9_i | 0) != 0) {
     $75 = +HEAPF32[$arraydecay8_i >> 2];
     $sub_i28 = $75 - +HEAPF32[$arrayidx7_i >> 2];
     $sub18_i = +HEAPF32[$arrayidx16_i >> 2] - +HEAPF32[$70 + ($i_058_i * 36 | 0) + 8 >> 2];
     $79 = +HEAPF32[$rad_i >> 2];
     if (!($sub_i28 * $sub_i28 + $sub18_i * $sub18_i > $79 * $79)) {
      $mul_i = (HEAPU16[$69 + ($idxprom_i << 5) + 4 >> 1] | 0) * 3 | 0;
      $81 = HEAP32[$verts >> 2] | 0;
      HEAPF32[$81 + ($mul_i << 2) >> 2] = $75;
      HEAPF32[$81 + ($mul_i + 1 << 2) >> 2] = +HEAPF32[$arrayidx2_i_i >> 2];
      HEAPF32[$81 + ($mul_i + 2 << 2) >> 2] = +HEAPF32[$arrayidx16_i >> 2];
      $84 = HEAP32[$linksFreeList >> 2] | 0;
      if (!(($84 | 0) == -1)) {
       $85 = HEAP32[$links >> 2] | 0;
       $next_i46_i = $85 + ($84 * 12 | 0) + 4 | 0;
       $86 = HEAP32[$next_i46_i >> 2] | 0;
       HEAP32[$linksFreeList >> 2] = $86;
       HEAP32[$85 + ($84 * 12 | 0) >> 2] = $call9_i;
       HEAP8[$85 + ($84 * 12 | 0) + 8 >> 0] = 0;
       HEAP8[$85 + ($84 * 12 | 0) + 9 >> 0] = -1;
       HEAP8[$85 + ($84 * 12 | 0) + 11 >> 0] = 0;
       HEAP8[$85 + ($84 * 12 | 0) + 10 >> 0] = 0;
       $firstLink_i35 = $69 + ($idxprom_i << 5) | 0;
       HEAP32[$next_i46_i >> 2] = HEAP32[$firstLink_i35 >> 2];
       HEAP32[$firstLink_i35 >> 2] = $84;
       if (!(($86 | 0) == -1)) {
        $next_i_i37 = $85 + ($86 * 12 | 0) + 4 | 0;
        HEAP32[$linksFreeList >> 2] = HEAP32[$next_i_i37 >> 2];
        $idxprom41_i = $call9_i & 65535 & (1 << HEAP32[$m_polyBits_i_i_i >> 2]) + 65535;
        $90 = HEAP32[$polys >> 2] | 0;
        HEAP32[$85 + ($86 * 12 | 0) >> 2] = $or4_i_i_i | (HEAPU16[$poly2_i >> 1] | 0);
        HEAP8[$85 + ($86 * 12 | 0) + 8 >> 0] = -1;
        HEAP8[$85 + ($86 * 12 | 0) + 9 >> 0] = -1;
        HEAP8[$85 + ($86 * 12 | 0) + 11 >> 0] = 0;
        HEAP8[$85 + ($86 * 12 | 0) + 10 >> 0] = 0;
        $firstLink54_i = $90 + ($idxprom41_i << 5) | 0;
        HEAP32[$next_i_i37 >> 2] = HEAP32[$firstLink54_i >> 2];
        HEAP32[$firstLink54_i >> 2] = $86;
       }
      }
     }
    }
    $inc_i40 = $i_058_i + 1 | 0;
    $93 = HEAP32[$header84 >> 2] | 0;
    if (($inc_i40 | 0) >= (HEAP32[$93 + 52 >> 2] | 0)) {
     break;
    }
    $i_058_i = $inc_i40;
    $71 = $93;
    $70 = HEAP32[$offMeshCons >> 2] | 0;
    $69 = HEAP32[$polys >> 2] | 0;
   }
   $95 = HEAP32[$m_tileLutMask_i >> 2] | 0;
  } else {
   $95 = $10;
  }
 }
 $98 = HEAP32[$4 >> 2] | 0;
 $99 = HEAP32[$6 >> 2] | 0;
 $and_i_i134 = (Math_imul($99, -669632447) | 0) + (Math_imul($98, -1918454973) | 0) & $95;
 $tile_010_i = HEAP32[(HEAP32[$m_posLookup_i >> 2] | 0) + ($and_i_i134 << 2) >> 2] | 0;
 if (($tile_010_i | 0) == 0) {
  $i105_0171 = 0;
 } else {
  $n_012_i = 0;
  $tile_013_i = $tile_010_i;
  while (1) {
   $101 = HEAP32[$tile_013_i + 8 >> 2] | 0;
   if (($101 | 0) == 0) {
    $n_1_i = $n_012_i;
   } else {
    if ((HEAP32[$101 + 8 >> 2] | 0) == ($98 | 0)) {
     if ((HEAP32[$101 + 12 >> 2] | 0) == ($99 | 0) & ($n_012_i | 0) < 32) {
      HEAP32[$neis + ($n_012_i << 2) >> 2] = $tile_013_i;
      $n_1_i = $n_012_i + 1 | 0;
     } else {
      $n_1_i = $n_012_i;
     }
    } else {
     $n_1_i = $n_012_i;
    }
   }
   $tile_013_i = HEAP32[$tile_013_i + 56 >> 2] | 0;
   if (($tile_013_i | 0) == 0) {
    break;
   } else {
    $n_012_i = $n_1_i;
   }
  }
  if (($n_1_i | 0) > 0) {
   $j_0173 = 0;
   while (1) {
    $104 = HEAP32[$neis + ($j_0173 << 2) >> 2] | 0;
    if (($104 | 0) == ($tile_1160 | 0)) {
     $105 = $tile_1160;
    } else {
     __ZN9dtNavMesh15connectExtLinksEP10dtMeshTileS1_i($this, $tile_1160, $104, -1);
     __ZN9dtNavMesh15connectExtLinksEP10dtMeshTileS1_i($this, $104, $tile_1160, -1);
     $105 = $104;
    }
    __ZN9dtNavMesh22connectExtOffMeshLinksEP10dtMeshTileS1_i($this, $tile_1160, $105, -1);
    __ZN9dtNavMesh22connectExtOffMeshLinksEP10dtMeshTileS1_i($this, $105, $tile_1160, -1);
    $inc103 = $j_0173 + 1 | 0;
    if (($inc103 | 0) < ($n_1_i | 0)) {
     $j_0173 = $inc103;
    } else {
     $i105_0171 = 0;
     break;
    }
   }
  } else {
   $i105_0171 = 0;
  }
 }
 while (1) {
  $106 = HEAP32[$4 >> 2] | 0;
  $107 = HEAP32[$6 >> 2] | 0;
  switch ($i105_0171 | 0) {
  case 0:
   {
    $ny_0_i = $107;
    $nx_0_i = $106 + 1 | 0;
    break;
   }
  case 1:
   {
    $ny_0_i = $107 + 1 | 0;
    $nx_0_i = $106 + 1 | 0;
    break;
   }
  case 2:
   {
    $ny_0_i = $107 + 1 | 0;
    $nx_0_i = $106;
    break;
   }
  case 3:
   {
    $ny_0_i = $107 + 1 | 0;
    $nx_0_i = $106 - 1 | 0;
    break;
   }
  case 4:
   {
    $ny_0_i = $107;
    $nx_0_i = $106 - 1 | 0;
    break;
   }
  case 5:
   {
    $ny_0_i = $107 - 1 | 0;
    $nx_0_i = $106 - 1 | 0;
    break;
   }
  case 6:
   {
    $ny_0_i = $107 - 1 | 0;
    $nx_0_i = $106;
    break;
   }
  case 7:
   {
    $ny_0_i = $107 - 1 | 0;
    $nx_0_i = $106 + 1 | 0;
    break;
   }
  default:
   {
    $ny_0_i = $107;
    $nx_0_i = $106;
   }
  }
  $and_i_i_i = (Math_imul($ny_0_i, -669632447) | 0) + (Math_imul($nx_0_i, -1918454973) | 0) & HEAP32[$m_tileLutMask_i >> 2];
  $tile_010_i_i = HEAP32[(HEAP32[$m_posLookup_i >> 2] | 0) + ($and_i_i_i << 2) >> 2] | 0;
  if (($tile_010_i_i | 0) != 0) {
   $n_012_i_i = 0;
   $tile_013_i_i = $tile_010_i_i;
   while (1) {
    $110 = HEAP32[$tile_013_i_i + 8 >> 2] | 0;
    if (($110 | 0) == 0) {
     $n_1_i_i = $n_012_i_i;
    } else {
     if ((HEAP32[$110 + 8 >> 2] | 0) == ($nx_0_i | 0)) {
      if ((HEAP32[$110 + 12 >> 2] | 0) == ($ny_0_i | 0) & ($n_012_i_i | 0) < 32) {
       HEAP32[$neis + ($n_012_i_i << 2) >> 2] = $tile_013_i_i;
       $n_1_i_i = $n_012_i_i + 1 | 0;
      } else {
       $n_1_i_i = $n_012_i_i;
      }
     } else {
      $n_1_i_i = $n_012_i_i;
     }
    }
    $tile_013_i_i = HEAP32[$tile_013_i_i + 56 >> 2] | 0;
    if (($tile_013_i_i | 0) == 0) {
     break;
    } else {
     $n_012_i_i = $n_1_i_i;
    }
   }
   if (($n_1_i_i | 0) > 0) {
    $and_i121 = $i105_0171 + 4 & 7;
    $j113_0170 = 0;
    do {
     $113 = HEAP32[$neis + ($j113_0170 << 2) >> 2] | 0;
     __ZN9dtNavMesh15connectExtLinksEP10dtMeshTileS1_i($this, $tile_1160, $113, $i105_0171);
     __ZN9dtNavMesh15connectExtLinksEP10dtMeshTileS1_i($this, $113, $tile_1160, $and_i121);
     __ZN9dtNavMesh22connectExtOffMeshLinksEP10dtMeshTileS1_i($this, $tile_1160, $113, $i105_0171);
     __ZN9dtNavMesh22connectExtOffMeshLinksEP10dtMeshTileS1_i($this, $113, $tile_1160, $and_i121);
     $j113_0170 = $j113_0170 + 1 | 0;
    } while (($j113_0170 | 0) < ($n_1_i_i | 0));
   }
  }
  $inc127 = $i105_0171 + 1 | 0;
  if (($inc127 | 0) < 8) {
   $i105_0171 = $inc127;
  } else {
   $retval_0 = 1073741824;
   break;
  }
 }
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, $__b_0, $__e_0, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b_0 = $__b_0 | 0;
 $__e_0 = $__e_0 | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $__p_i_i_i_i = 0, $ref_tmp22 = 0, $agg_tmp = 0, $agg_tmp23 = 0, $__locale_2_i_i2 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $__b_sroa_0_0 = 0, $__e_sroa_0_0 = 0, $_pre184 = 0, $__fmtb_addr_0_ph182 = 0, $__b_sroa_0_1 = 0, $__e_sroa_0_1 = 0, $24 = 0, $cmp_i1_i_i_i = 0, $__b_sroa_0_2 = 0, $29 = 0, $cmp_i_i_i = 0, $__e_sroa_0_3 = 0, $__e_sroa_0_4 = 0, $incdec_ptr = 0, $call_i43 = 0, $incdec_ptr16 = 0, $__fmtb_addr_1 = 0, $__cmd_0 = 0, $__opt_0 = 0, $46 = 0, $__b_sroa_0_3 = 0, $__e_sroa_0_5 = 0, $__fmtb_addr_0_ph_be = 0, $48 = 0, $49 = 0, $__fmtb_addr_0_pn = 0, $__fmtb_addr_2 = 0, $51 = 0, $__fmtb_addr_2_lcssa = 0, $__b_sroa_0_4 = 0, $__e_sroa_0_6 = 0, $_pre_i12_i_i83 = 0, $53 = 0, $_pre_i_i_i67 = 0, $cmp_i1_i_i_i65 = 0, $__b_sroa_0_5 = 0, $58 = 0, $cmp_i_i_i70 = 0, $__e_sroa_0_7 = 0, $_pre_i12_i_i83186 = 0, $__e_sroa_0_8 = 0, $_pre_i12_i_i83185 = 0, $63 = 0, $__ninp__i_i = 0, $64 = 0, $__einp__i_i = 0, $retval_0_i_off0_i = 0, $71 = 0, $__ninp__i_i108 = 0, $75 = 0, $__einp__i_i109 = 0, $retval_0_i_off0_i117 = 0, $call_i121 = 0, $83 = 0, $__e_sroa_0_10 = 0, $_pre_i_i_i147 = 0, $cmp_i1_i_i_i145 = 0, $91 = 0, $cmp_i_i_i150 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i_i = sp | 0;
 $ref_tmp22 = sp + 16 | 0;
 $agg_tmp = sp + 24 | 0;
 $agg_tmp23 = sp + 32 | 0;
 $__locale_2_i_i2 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i2 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i2 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i2 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $11 = $9;
   $12 = $__locale_2_i_i2 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i2 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i2);
   }
   HEAP32[$__err >> 2] = 0;
   L10 : do {
    if (($__fmtb | 0) == ($__fmte | 0)) {
     $_pre_i_i_i147 = $__b_0;
     $__e_sroa_0_10 = $__e_0;
    } else {
     $17 = $9;
     $18 = $9 + 8 | 0;
     $19 = $9;
     $20 = $this;
     $21 = $agg_tmp | 0;
     $22 = $agg_tmp23 | 0;
     $23 = $ref_tmp22 | 0;
     $__fmtb_addr_0_ph182 = $__fmtb;
     $_pre184 = 0;
     $__e_sroa_0_0 = $__e_0;
     $__b_sroa_0_0 = $__b_0;
     L12 : while (1) {
      $24 = $_pre184;
      $__e_sroa_0_1 = $__e_sroa_0_0;
      $__b_sroa_0_1 = $__b_sroa_0_0;
      while (1) {
       if (($24 | 0) != 0) {
        $_pre_i_i_i147 = $__b_sroa_0_1;
        $__e_sroa_0_10 = $__e_sroa_0_1;
        break L10;
       }
       if (($__b_sroa_0_1 | 0) == 0) {
        $29 = 0;
        $__b_sroa_0_2 = 0;
       } else {
        if ((HEAP32[$__b_sroa_0_1 + 12 >> 2] | 0) == (HEAP32[$__b_sroa_0_1 + 16 >> 2] | 0)) {
         $cmp_i1_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__b_sroa_0_1 >> 2] | 0) + 36 >> 2] & 255]($__b_sroa_0_1) | 0) == -1;
         $29 = $cmp_i1_i_i_i ? 0 : $__b_sroa_0_1;
         $__b_sroa_0_2 = $cmp_i1_i_i_i ? 0 : $__b_sroa_0_1;
        } else {
         $29 = $__b_sroa_0_1;
         $__b_sroa_0_2 = $__b_sroa_0_1;
        }
       }
       $cmp_i_i_i = ($29 | 0) == 0;
       do {
        if (($__e_sroa_0_1 | 0) == 0) {
         label = 20;
        } else {
         if ((HEAP32[$__e_sroa_0_1 + 12 >> 2] | 0) == (HEAP32[$__e_sroa_0_1 + 16 >> 2] | 0)) {
          if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_1 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_1) | 0) == -1) {
           label = 20;
           break;
          }
         }
         if ($cmp_i_i_i) {
          $__e_sroa_0_4 = $__e_sroa_0_1;
         } else {
          $__e_sroa_0_3 = $__e_sroa_0_1;
          label = 21;
          break L12;
         }
        }
       } while (0);
       if ((label | 0) == 20) {
        label = 0;
        if ($cmp_i_i_i) {
         $__e_sroa_0_3 = 0;
         label = 21;
         break L12;
        } else {
         $__e_sroa_0_4 = 0;
        }
       }
       if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($11, HEAP8[$__fmtb_addr_0_ph182 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
        label = 26;
        break;
       }
       $48 = HEAP8[$__fmtb_addr_0_ph182 >> 0] | 0;
       if ($48 << 24 >> 24 > -1) {
        $49 = HEAP32[$18 >> 2] | 0;
        if (!((HEAP16[$49 + ($48 << 24 >> 24 << 1) >> 1] & 8192) == 0)) {
         $__fmtb_addr_0_pn = $__fmtb_addr_0_ph182;
         label = 37;
         break;
        }
       }
       $__ninp__i_i108 = $29 + 12 | 0;
       $75 = HEAP32[$__ninp__i_i108 >> 2] | 0;
       $__einp__i_i109 = $29 + 16 | 0;
       if (($75 | 0) == (HEAP32[$__einp__i_i109 >> 2] | 0)) {
        $retval_0_i_off0_i117 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0) & 255;
       } else {
        $retval_0_i_off0_i117 = HEAP8[$75 >> 0] | 0;
       }
       $call_i121 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 12 >> 2] & 63]($11, $retval_0_i_off0_i117) | 0;
       if ($call_i121 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 12 >> 2] & 63]($11, HEAP8[$__fmtb_addr_0_ph182 >> 0] | 0) | 0) << 24 >> 24) {
        label = 62;
        break;
       }
       HEAP32[$__err >> 2] = 4;
       $24 = 4;
       $__e_sroa_0_1 = $__e_sroa_0_4;
       $__b_sroa_0_1 = $__b_sroa_0_2;
      }
      L38 : do {
       if ((label | 0) == 26) {
        label = 0;
        $incdec_ptr = $__fmtb_addr_0_ph182 + 1 | 0;
        if (($incdec_ptr | 0) == ($__fmte | 0)) {
         label = 27;
         break L12;
        }
        $call_i43 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($11, HEAP8[$incdec_ptr >> 0] | 0, 0) | 0;
        if (($call_i43 << 24 >> 24 | 0) == 69 | ($call_i43 << 24 >> 24 | 0) == 48) {
         $incdec_ptr16 = $__fmtb_addr_0_ph182 + 2 | 0;
         if (($incdec_ptr16 | 0) == ($__fmte | 0)) {
          label = 30;
          break L12;
         }
         $__opt_0 = $call_i43;
         $__cmd_0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($11, HEAP8[$incdec_ptr16 >> 0] | 0, 0) | 0;
         $__fmtb_addr_1 = $incdec_ptr16;
        } else {
         $__opt_0 = 0;
         $__cmd_0 = $call_i43;
         $__fmtb_addr_1 = $incdec_ptr;
        }
        $46 = HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] | 0;
        HEAP32[$21 >> 2] = $29;
        HEAP32[$22 >> 2] = $__e_sroa_0_4;
        FUNCTION_TABLE_viiiiiiiii[$46 & 31]($ref_tmp22, $this, $agg_tmp, $agg_tmp23, $__iob, $__err, $__tm, $__cmd_0, $__opt_0);
        $__fmtb_addr_0_ph_be = $__fmtb_addr_1 + 1 | 0;
        $__e_sroa_0_5 = $__e_sroa_0_4;
        $__b_sroa_0_3 = HEAP32[$23 >> 2] | 0;
       } else if ((label | 0) == 37) {
        while (1) {
         label = 0;
         $__fmtb_addr_2 = $__fmtb_addr_0_pn + 1 | 0;
         if (($__fmtb_addr_2 | 0) == ($__fmte | 0)) {
          $__fmtb_addr_2_lcssa = $__fmte;
          break;
         }
         $51 = HEAP8[$__fmtb_addr_2 >> 0] | 0;
         if (!($51 << 24 >> 24 > -1)) {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         }
         if ((HEAP16[$49 + ($51 << 24 >> 24 << 1) >> 1] & 8192) == 0) {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         } else {
          $__fmtb_addr_0_pn = $__fmtb_addr_2;
          label = 37;
         }
        }
        $_pre_i_i_i67 = $29;
        $53 = $__e_sroa_0_4;
        $_pre_i12_i_i83 = $__e_sroa_0_4;
        $__e_sroa_0_6 = $__e_sroa_0_4;
        $__b_sroa_0_4 = $__b_sroa_0_2;
        while (1) {
         if (($_pre_i_i_i67 | 0) == 0) {
          $58 = 0;
          $__b_sroa_0_5 = $__b_sroa_0_4;
         } else {
          if ((HEAP32[$_pre_i_i_i67 + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i67 + 16 >> 2] | 0)) {
           $cmp_i1_i_i_i65 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i67 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i67) | 0) == -1;
           $58 = $cmp_i1_i_i_i65 ? 0 : $_pre_i_i_i67;
           $__b_sroa_0_5 = $cmp_i1_i_i_i65 ? 0 : $__b_sroa_0_4;
          } else {
           $58 = $_pre_i_i_i67;
           $__b_sroa_0_5 = $__b_sroa_0_4;
          }
         }
         $cmp_i_i_i70 = ($58 | 0) == 0;
         do {
          if (($53 | 0) == 0) {
           $_pre_i12_i_i83186 = $_pre_i12_i_i83;
           $__e_sroa_0_7 = $__e_sroa_0_6;
           label = 48;
          } else {
           if ((HEAP32[$53 + 12 >> 2] | 0) != (HEAP32[$53 + 16 >> 2] | 0)) {
            if ($cmp_i_i_i70) {
             $63 = $53;
             $_pre_i12_i_i83185 = $_pre_i12_i_i83;
             $__e_sroa_0_8 = $__e_sroa_0_6;
             break;
            } else {
             $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
             $__e_sroa_0_5 = $__e_sroa_0_6;
             $__b_sroa_0_3 = $__b_sroa_0_5;
             break L38;
            }
           }
           if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($53) | 0) == -1) {
            $_pre_i12_i_i83186 = 0;
            $__e_sroa_0_7 = 0;
            label = 48;
           } else {
            if ($cmp_i_i_i70 ^ ($_pre_i12_i_i83 | 0) == 0) {
             $63 = $_pre_i12_i_i83;
             $_pre_i12_i_i83185 = $_pre_i12_i_i83;
             $__e_sroa_0_8 = $__e_sroa_0_6;
            } else {
             $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
             $__e_sroa_0_5 = $__e_sroa_0_6;
             $__b_sroa_0_3 = $__b_sroa_0_5;
             break L38;
            }
           }
          }
         } while (0);
         if ((label | 0) == 48) {
          label = 0;
          if ($cmp_i_i_i70) {
           $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
           $__e_sroa_0_5 = $__e_sroa_0_7;
           $__b_sroa_0_3 = $__b_sroa_0_5;
           break L38;
          } else {
           $63 = 0;
           $_pre_i12_i_i83185 = $_pre_i12_i_i83186;
           $__e_sroa_0_8 = $__e_sroa_0_7;
          }
         }
         $__ninp__i_i = $58 + 12 | 0;
         $64 = HEAP32[$__ninp__i_i >> 2] | 0;
         $__einp__i_i = $58 + 16 | 0;
         if (($64 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $retval_0_i_off0_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 255]($58) | 0) & 255;
         } else {
          $retval_0_i_off0_i = HEAP8[$64 >> 0] | 0;
         }
         if (!($retval_0_i_off0_i << 24 >> 24 > -1)) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          $__e_sroa_0_5 = $__e_sroa_0_8;
          $__b_sroa_0_3 = $__b_sroa_0_5;
          break L38;
         }
         if ((HEAP16[(HEAP32[$18 >> 2] | 0) + ($retval_0_i_off0_i << 24 >> 24 << 1) >> 1] & 8192) == 0) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          $__e_sroa_0_5 = $__e_sroa_0_8;
          $__b_sroa_0_3 = $__b_sroa_0_5;
          break L38;
         }
         $71 = HEAP32[$__ninp__i_i >> 2] | 0;
         if (($71 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 40 >> 2] & 255]($58) | 0;
          $_pre_i_i_i67 = $58;
          $53 = $63;
          $_pre_i12_i_i83 = $_pre_i12_i_i83185;
          $__e_sroa_0_6 = $__e_sroa_0_8;
          $__b_sroa_0_4 = $__b_sroa_0_5;
          continue;
         } else {
          HEAP32[$__ninp__i_i >> 2] = $71 + 1;
          $_pre_i_i_i67 = $58;
          $53 = $63;
          $_pre_i12_i_i83 = $_pre_i12_i_i83185;
          $__e_sroa_0_6 = $__e_sroa_0_8;
          $__b_sroa_0_4 = $__b_sroa_0_5;
          continue;
         }
        }
       } else if ((label | 0) == 62) {
        label = 0;
        $83 = HEAP32[$__ninp__i_i108 >> 2] | 0;
        if (($83 | 0) == (HEAP32[$__einp__i_i109 >> 2] | 0)) {
         FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 40 >> 2] & 255]($29) | 0;
        } else {
         HEAP32[$__ninp__i_i108 >> 2] = $83 + 1;
        }
        $__fmtb_addr_0_ph_be = $__fmtb_addr_0_ph182 + 1 | 0;
        $__e_sroa_0_5 = $__e_sroa_0_4;
        $__b_sroa_0_3 = $__b_sroa_0_2;
       }
      } while (0);
      if (($__fmtb_addr_0_ph_be | 0) == ($__fmte | 0)) {
       $_pre_i_i_i147 = $__b_sroa_0_3;
       $__e_sroa_0_10 = $__e_sroa_0_5;
       break L10;
      }
      $__fmtb_addr_0_ph182 = $__fmtb_addr_0_ph_be;
      $_pre184 = HEAP32[$__err >> 2] | 0;
      $__e_sroa_0_0 = $__e_sroa_0_5;
      $__b_sroa_0_0 = $__b_sroa_0_3;
     }
     if ((label | 0) == 21) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $29;
      $__e_sroa_0_10 = $__e_sroa_0_3;
      break;
     } else if ((label | 0) == 27) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $29;
      $__e_sroa_0_10 = $__e_sroa_0_4;
      break;
     } else if ((label | 0) == 30) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $29;
      $__e_sroa_0_10 = $__e_sroa_0_4;
      break;
     }
    }
   } while (0);
   if (($_pre_i_i_i147 | 0) == 0) {
    $91 = 0;
   } else {
    if ((HEAP32[$_pre_i_i_i147 + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i147 + 16 >> 2] | 0)) {
     $cmp_i1_i_i_i145 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i147 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i147) | 0) == -1;
     $91 = $cmp_i1_i_i_i145 ? 0 : $_pre_i_i_i147;
    } else {
     $91 = $_pre_i_i_i147;
    }
   }
   $cmp_i_i_i150 = ($91 | 0) == 0;
   do {
    if (($__e_sroa_0_10 | 0) == 0) {
     label = 74;
    } else {
     if ((HEAP32[$__e_sroa_0_10 + 12 >> 2] | 0) == (HEAP32[$__e_sroa_0_10 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_10 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_10) | 0) == -1) {
       label = 74;
       break;
      }
     }
     if ($cmp_i_i_i150) {
      $97 = $agg_result | 0;
      HEAP32[$97 >> 2] = $91;
      STACKTOP = sp;
      return;
     }
    }
   } while (0);
   if ((label | 0) == 74) {
    if (!$cmp_i_i_i150) {
     $97 = $agg_result | 0;
     HEAP32[$97 >> 2] = $91;
     STACKTOP = sp;
     return;
    }
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $97 = $agg_result | 0;
   HEAP32[$97 >> 2] = $91;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function _free($mem) {
 $mem = $mem | 0;
 var $add_ptr = 0, $0 = 0, $1 = 0, $3 = 0, $and = 0, $and5 = 0, $add_ptr6 = 0, $4 = 0, $5 = 0, $add_ptr_sum231 = 0, $add_ptr16 = 0, $6 = 0, $add17 = 0, $shr = 0, $9 = 0, $11 = 0, $12 = 0, $fd56 = 0, $fd67_pre_phi = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $bk82 = 0, $fd86 = 0, $28 = 0, $29 = 0, $arrayidx103 = 0, $30 = 0, $RP_0 = 0, $R_0 = 0, $arrayidx108 = 0, $31 = 0, $arrayidx113 = 0, $32 = 0, $R_1 = 0, $35 = 0, $arrayidx130 = 0, $arrayidx149 = 0, $42 = 0, $43 = 0, $46 = 0, $49 = 0, $50 = 0, $psize_0 = 0, $p_0 = 0, $52 = 0, $53 = 0, $54 = 0, $add243 = 0, $add254 = 0, $add262 = 0, $shr263 = 0, $61 = 0, $63 = 0, $64 = 0, $fd306 = 0, $fd317_pre_phi = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $bk338 = 0, $fd342 = 0, $83 = 0, $84 = 0, $arrayidx362 = 0, $85 = 0, $RP355_0 = 0, $R327_0 = 0, $arrayidx369 = 0, $86 = 0, $arrayidx374 = 0, $87 = 0, $R327_1 = 0, $91 = 0, $arrayidx395 = 0, $arrayidx414 = 0, $98 = 0, $99 = 0, $102 = 0, $psize_1 = 0, $shr493 = 0, $shl500 = 0, $106 = 0, $107 = 0, $shl503 = 0, $108 = 0, $109 = 0, $_pre_phi = 0, $F502_0 = 0, $112 = 0, $shr527 = 0, $and537 = 0, $shl538 = 0, $and541 = 0, $shl543 = 0, $and546 = 0, $add551 = 0, $I526_0 = 0, $arrayidx559 = 0, $114 = 0, $shl565 = 0, $115 = 0, $cond = 0, $K575_0285 = 0, $T_0284 = 0, $arrayidx591 = 0, $118 = 0, $T_0_lcssa = 0, $fd609 = 0, $121 = 0, $123 = 0, $dec = 0, $sp_0_in_i = 0, $sp_0_i = 0;
 if (($mem | 0) == 0) {
  return;
 }
 $add_ptr = $mem - 8 | 0;
 $0 = $add_ptr;
 $1 = HEAP32[4956] | 0;
 if ($add_ptr >>> 0 < $1 >>> 0) {
  _abort();
 }
 $3 = HEAP32[$mem - 4 >> 2] | 0;
 $and = $3 & 3;
 if (($and | 0) == 1) {
  _abort();
 }
 $and5 = $3 & -8;
 $add_ptr6 = $mem + ($and5 - 8) | 0;
 $4 = $add_ptr6;
 do {
  if (($3 & 1 | 0) == 0) {
   $5 = HEAP32[$add_ptr >> 2] | 0;
   if (($and | 0) == 0) {
    return;
   }
   $add_ptr_sum231 = -8 - $5 | 0;
   $add_ptr16 = $mem + $add_ptr_sum231 | 0;
   $6 = $add_ptr16;
   $add17 = $5 + $and5 | 0;
   if ($add_ptr16 >>> 0 < $1 >>> 0) {
    _abort();
   }
   if (($6 | 0) == (HEAP32[4957] | 0)) {
    $49 = $mem + ($and5 - 4) | 0;
    $50 = HEAP32[$49 >> 2] | 0;
    if (($50 & 3 | 0) != 3) {
     $p_0 = $6;
     $psize_0 = $add17;
     break;
    }
    HEAP32[4954] = $add17;
    HEAP32[$49 >> 2] = $50 & -2;
    HEAP32[$mem + ($add_ptr_sum231 + 4) >> 2] = $add17 | 1;
    HEAP32[$add_ptr6 >> 2] = $add17;
    return;
   }
   $shr = $5 >>> 3;
   if ($5 >>> 0 < 256 >>> 0) {
    $9 = HEAP32[$mem + ($add_ptr_sum231 + 8) >> 2] | 0;
    $11 = HEAP32[$mem + ($add_ptr_sum231 + 12) >> 2] | 0;
    $12 = 19848 + ($shr << 1 << 2) | 0;
    if (($9 | 0) != ($12 | 0)) {
     if ($9 >>> 0 < $1 >>> 0) {
      _abort();
     }
     if ((HEAP32[$9 + 12 >> 2] | 0) != ($6 | 0)) {
      _abort();
     }
    }
    if (($11 | 0) == ($9 | 0)) {
     HEAP32[4952] = HEAP32[4952] & ~(1 << $shr);
     $p_0 = $6;
     $psize_0 = $add17;
     break;
    }
    if (($11 | 0) == ($12 | 0)) {
     $fd67_pre_phi = $11 + 8 | 0;
    } else {
     if ($11 >>> 0 < $1 >>> 0) {
      _abort();
     }
     $fd56 = $11 + 8 | 0;
     if ((HEAP32[$fd56 >> 2] | 0) == ($6 | 0)) {
      $fd67_pre_phi = $fd56;
     } else {
      _abort();
     }
    }
    HEAP32[$9 + 12 >> 2] = $11;
    HEAP32[$fd67_pre_phi >> 2] = $9;
    $p_0 = $6;
    $psize_0 = $add17;
    break;
   }
   $18 = $add_ptr16;
   $20 = HEAP32[$mem + ($add_ptr_sum231 + 24) >> 2] | 0;
   $22 = HEAP32[$mem + ($add_ptr_sum231 + 12) >> 2] | 0;
   do {
    if (($22 | 0) == ($18 | 0)) {
     $28 = $mem + ($add_ptr_sum231 + 20) | 0;
     $29 = HEAP32[$28 >> 2] | 0;
     if (($29 | 0) == 0) {
      $arrayidx103 = $mem + ($add_ptr_sum231 + 16) | 0;
      $30 = HEAP32[$arrayidx103 >> 2] | 0;
      if (($30 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $30;
       $RP_0 = $arrayidx103;
      }
     } else {
      $R_0 = $29;
      $RP_0 = $28;
     }
     while (1) {
      $arrayidx108 = $R_0 + 20 | 0;
      $31 = HEAP32[$arrayidx108 >> 2] | 0;
      if (($31 | 0) != 0) {
       $R_0 = $31;
       $RP_0 = $arrayidx108;
       continue;
      }
      $arrayidx113 = $R_0 + 16 | 0;
      $32 = HEAP32[$arrayidx113 >> 2] | 0;
      if (($32 | 0) == 0) {
       break;
      } else {
       $R_0 = $32;
       $RP_0 = $arrayidx113;
      }
     }
     if ($RP_0 >>> 0 < $1 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $24 = HEAP32[$mem + ($add_ptr_sum231 + 8) >> 2] | 0;
     if ($24 >>> 0 < $1 >>> 0) {
      _abort();
     }
     $bk82 = $24 + 12 | 0;
     if ((HEAP32[$bk82 >> 2] | 0) != ($18 | 0)) {
      _abort();
     }
     $fd86 = $22 + 8 | 0;
     if ((HEAP32[$fd86 >> 2] | 0) == ($18 | 0)) {
      HEAP32[$bk82 >> 2] = $22;
      HEAP32[$fd86 >> 2] = $24;
      $R_1 = $22;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($20 | 0) == 0) {
    $p_0 = $6;
    $psize_0 = $add17;
   } else {
    $35 = HEAP32[$mem + ($add_ptr_sum231 + 28) >> 2] | 0;
    $arrayidx130 = 20112 + ($35 << 2) | 0;
    if (($18 | 0) == (HEAP32[$arrayidx130 >> 2] | 0)) {
     HEAP32[$arrayidx130 >> 2] = $R_1;
     if (($R_1 | 0) == 0) {
      HEAP32[4953] = HEAP32[4953] & ~(1 << $35);
      $p_0 = $6;
      $psize_0 = $add17;
      break;
     }
    } else {
     if ($20 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     }
     $arrayidx149 = $20 + 16 | 0;
     if ((HEAP32[$arrayidx149 >> 2] | 0) == ($18 | 0)) {
      HEAP32[$arrayidx149 >> 2] = $R_1;
     } else {
      HEAP32[$20 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $p_0 = $6;
      $psize_0 = $add17;
      break;
     }
    }
    $42 = HEAP32[4956] | 0;
    if ($R_1 >>> 0 < $42 >>> 0) {
     _abort();
    }
    HEAP32[$R_1 + 24 >> 2] = $20;
    $43 = HEAP32[$mem + ($add_ptr_sum231 + 16) >> 2] | 0;
    do {
     if (($43 | 0) != 0) {
      if ($43 >>> 0 < $42 >>> 0) {
       _abort();
      } else {
       HEAP32[$R_1 + 16 >> 2] = $43;
       HEAP32[$43 + 24 >> 2] = $R_1;
       break;
      }
     }
    } while (0);
    $46 = HEAP32[$mem + ($add_ptr_sum231 + 20) >> 2] | 0;
    if (($46 | 0) == 0) {
     $p_0 = $6;
     $psize_0 = $add17;
    } else {
     if ($46 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 20 >> 2] = $46;
      HEAP32[$46 + 24 >> 2] = $R_1;
      $p_0 = $6;
      $psize_0 = $add17;
      break;
     }
    }
   }
  } else {
   $p_0 = $0;
   $psize_0 = $and5;
  }
 } while (0);
 $52 = $p_0;
 if (!($52 >>> 0 < $add_ptr6 >>> 0)) {
  _abort();
 }
 $53 = $mem + ($and5 - 4) | 0;
 $54 = HEAP32[$53 >> 2] | 0;
 if (($54 & 1 | 0) == 0) {
  _abort();
 }
 if (($54 & 2 | 0) == 0) {
  if (($4 | 0) == (HEAP32[4958] | 0)) {
   $add243 = (HEAP32[4955] | 0) + $psize_0 | 0;
   HEAP32[4955] = $add243;
   HEAP32[4958] = $p_0;
   HEAP32[$p_0 + 4 >> 2] = $add243 | 1;
   if (($p_0 | 0) != (HEAP32[4957] | 0)) {
    return;
   }
   HEAP32[4957] = 0;
   HEAP32[4954] = 0;
   return;
  }
  if (($4 | 0) == (HEAP32[4957] | 0)) {
   $add254 = (HEAP32[4954] | 0) + $psize_0 | 0;
   HEAP32[4954] = $add254;
   HEAP32[4957] = $p_0;
   HEAP32[$p_0 + 4 >> 2] = $add254 | 1;
   HEAP32[$52 + $add254 >> 2] = $add254;
   return;
  }
  $add262 = ($54 & -8) + $psize_0 | 0;
  $shr263 = $54 >>> 3;
  do {
   if ($54 >>> 0 < 256 >>> 0) {
    $61 = HEAP32[$mem + $and5 >> 2] | 0;
    $63 = HEAP32[$mem + ($and5 | 4) >> 2] | 0;
    $64 = 19848 + ($shr263 << 1 << 2) | 0;
    if (($61 | 0) != ($64 | 0)) {
     if ($61 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     }
     if ((HEAP32[$61 + 12 >> 2] | 0) != ($4 | 0)) {
      _abort();
     }
    }
    if (($63 | 0) == ($61 | 0)) {
     HEAP32[4952] = HEAP32[4952] & ~(1 << $shr263);
     break;
    }
    if (($63 | 0) == ($64 | 0)) {
     $fd317_pre_phi = $63 + 8 | 0;
    } else {
     if ($63 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     }
     $fd306 = $63 + 8 | 0;
     if ((HEAP32[$fd306 >> 2] | 0) == ($4 | 0)) {
      $fd317_pre_phi = $fd306;
     } else {
      _abort();
     }
    }
    HEAP32[$61 + 12 >> 2] = $63;
    HEAP32[$fd317_pre_phi >> 2] = $61;
   } else {
    $72 = $add_ptr6;
    $74 = HEAP32[$mem + ($and5 + 16) >> 2] | 0;
    $76 = HEAP32[$mem + ($and5 | 4) >> 2] | 0;
    do {
     if (($76 | 0) == ($72 | 0)) {
      $83 = $mem + ($and5 + 12) | 0;
      $84 = HEAP32[$83 >> 2] | 0;
      if (($84 | 0) == 0) {
       $arrayidx362 = $mem + ($and5 + 8) | 0;
       $85 = HEAP32[$arrayidx362 >> 2] | 0;
       if (($85 | 0) == 0) {
        $R327_1 = 0;
        break;
       } else {
        $R327_0 = $85;
        $RP355_0 = $arrayidx362;
       }
      } else {
       $R327_0 = $84;
       $RP355_0 = $83;
      }
      while (1) {
       $arrayidx369 = $R327_0 + 20 | 0;
       $86 = HEAP32[$arrayidx369 >> 2] | 0;
       if (($86 | 0) != 0) {
        $R327_0 = $86;
        $RP355_0 = $arrayidx369;
        continue;
       }
       $arrayidx374 = $R327_0 + 16 | 0;
       $87 = HEAP32[$arrayidx374 >> 2] | 0;
       if (($87 | 0) == 0) {
        break;
       } else {
        $R327_0 = $87;
        $RP355_0 = $arrayidx374;
       }
      }
      if ($RP355_0 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      } else {
       HEAP32[$RP355_0 >> 2] = 0;
       $R327_1 = $R327_0;
       break;
      }
     } else {
      $78 = HEAP32[$mem + $and5 >> 2] | 0;
      if ($78 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      }
      $bk338 = $78 + 12 | 0;
      if ((HEAP32[$bk338 >> 2] | 0) != ($72 | 0)) {
       _abort();
      }
      $fd342 = $76 + 8 | 0;
      if ((HEAP32[$fd342 >> 2] | 0) == ($72 | 0)) {
       HEAP32[$bk338 >> 2] = $76;
       HEAP32[$fd342 >> 2] = $78;
       $R327_1 = $76;
       break;
      } else {
       _abort();
      }
     }
    } while (0);
    if (($74 | 0) != 0) {
     $91 = HEAP32[$mem + ($and5 + 20) >> 2] | 0;
     $arrayidx395 = 20112 + ($91 << 2) | 0;
     if (($72 | 0) == (HEAP32[$arrayidx395 >> 2] | 0)) {
      HEAP32[$arrayidx395 >> 2] = $R327_1;
      if (($R327_1 | 0) == 0) {
       HEAP32[4953] = HEAP32[4953] & ~(1 << $91);
       break;
      }
     } else {
      if ($74 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      }
      $arrayidx414 = $74 + 16 | 0;
      if ((HEAP32[$arrayidx414 >> 2] | 0) == ($72 | 0)) {
       HEAP32[$arrayidx414 >> 2] = $R327_1;
      } else {
       HEAP32[$74 + 20 >> 2] = $R327_1;
      }
      if (($R327_1 | 0) == 0) {
       break;
      }
     }
     $98 = HEAP32[4956] | 0;
     if ($R327_1 >>> 0 < $98 >>> 0) {
      _abort();
     }
     HEAP32[$R327_1 + 24 >> 2] = $74;
     $99 = HEAP32[$mem + ($and5 + 8) >> 2] | 0;
     do {
      if (($99 | 0) != 0) {
       if ($99 >>> 0 < $98 >>> 0) {
        _abort();
       } else {
        HEAP32[$R327_1 + 16 >> 2] = $99;
        HEAP32[$99 + 24 >> 2] = $R327_1;
        break;
       }
      }
     } while (0);
     $102 = HEAP32[$mem + ($and5 + 12) >> 2] | 0;
     if (($102 | 0) != 0) {
      if ($102 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      } else {
       HEAP32[$R327_1 + 20 >> 2] = $102;
       HEAP32[$102 + 24 >> 2] = $R327_1;
       break;
      }
     }
    }
   }
  } while (0);
  HEAP32[$p_0 + 4 >> 2] = $add262 | 1;
  HEAP32[$52 + $add262 >> 2] = $add262;
  if (($p_0 | 0) == (HEAP32[4957] | 0)) {
   HEAP32[4954] = $add262;
   return;
  } else {
   $psize_1 = $add262;
  }
 } else {
  HEAP32[$53 >> 2] = $54 & -2;
  HEAP32[$p_0 + 4 >> 2] = $psize_0 | 1;
  HEAP32[$52 + $psize_0 >> 2] = $psize_0;
  $psize_1 = $psize_0;
 }
 $shr493 = $psize_1 >>> 3;
 if ($psize_1 >>> 0 < 256 >>> 0) {
  $shl500 = $shr493 << 1;
  $106 = 19848 + ($shl500 << 2) | 0;
  $107 = HEAP32[4952] | 0;
  $shl503 = 1 << $shr493;
  if (($107 & $shl503 | 0) == 0) {
   HEAP32[4952] = $107 | $shl503;
   $F502_0 = $106;
   $_pre_phi = 19848 + ($shl500 + 2 << 2) | 0;
  } else {
   $108 = 19848 + ($shl500 + 2 << 2) | 0;
   $109 = HEAP32[$108 >> 2] | 0;
   if ($109 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
    _abort();
   } else {
    $F502_0 = $109;
    $_pre_phi = $108;
   }
  }
  HEAP32[$_pre_phi >> 2] = $p_0;
  HEAP32[$F502_0 + 12 >> 2] = $p_0;
  HEAP32[$p_0 + 8 >> 2] = $F502_0;
  HEAP32[$p_0 + 12 >> 2] = $106;
  return;
 }
 $112 = $p_0;
 $shr527 = $psize_1 >>> 8;
 if (($shr527 | 0) == 0) {
  $I526_0 = 0;
 } else {
  if ($psize_1 >>> 0 > 16777215 >>> 0) {
   $I526_0 = 31;
  } else {
   $and537 = ($shr527 + 1048320 | 0) >>> 16 & 8;
   $shl538 = $shr527 << $and537;
   $and541 = ($shl538 + 520192 | 0) >>> 16 & 4;
   $shl543 = $shl538 << $and541;
   $and546 = ($shl543 + 245760 | 0) >>> 16 & 2;
   $add551 = 14 - ($and541 | $and537 | $and546) + ($shl543 << $and546 >>> 15) | 0;
   $I526_0 = $psize_1 >>> (($add551 + 7 | 0) >>> 0) & 1 | $add551 << 1;
  }
 }
 $arrayidx559 = 20112 + ($I526_0 << 2) | 0;
 HEAP32[$p_0 + 28 >> 2] = $I526_0;
 HEAP32[$p_0 + 20 >> 2] = 0;
 HEAP32[$p_0 + 16 >> 2] = 0;
 $114 = HEAP32[4953] | 0;
 $shl565 = 1 << $I526_0;
 L199 : do {
  if (($114 & $shl565 | 0) == 0) {
   HEAP32[4953] = $114 | $shl565;
   HEAP32[$arrayidx559 >> 2] = $112;
   HEAP32[$p_0 + 24 >> 2] = $arrayidx559;
   HEAP32[$p_0 + 12 >> 2] = $p_0;
   HEAP32[$p_0 + 8 >> 2] = $p_0;
  } else {
   $115 = HEAP32[$arrayidx559 >> 2] | 0;
   if (($I526_0 | 0) == 31) {
    $cond = 0;
   } else {
    $cond = 25 - ($I526_0 >>> 1) | 0;
   }
   L205 : do {
    if ((HEAP32[$115 + 4 >> 2] & -8 | 0) == ($psize_1 | 0)) {
     $T_0_lcssa = $115;
    } else {
     $T_0284 = $115;
     $K575_0285 = $psize_1 << $cond;
     while (1) {
      $arrayidx591 = $T_0284 + 16 + ($K575_0285 >>> 31 << 2) | 0;
      $118 = HEAP32[$arrayidx591 >> 2] | 0;
      if (($118 | 0) == 0) {
       break;
      }
      if ((HEAP32[$118 + 4 >> 2] & -8 | 0) == ($psize_1 | 0)) {
       $T_0_lcssa = $118;
       break L205;
      } else {
       $T_0284 = $118;
       $K575_0285 = $K575_0285 << 1;
      }
     }
     if ($arrayidx591 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$arrayidx591 >> 2] = $112;
      HEAP32[$p_0 + 24 >> 2] = $T_0284;
      HEAP32[$p_0 + 12 >> 2] = $p_0;
      HEAP32[$p_0 + 8 >> 2] = $p_0;
      break L199;
     }
    }
   } while (0);
   $fd609 = $T_0_lcssa + 8 | 0;
   $121 = HEAP32[$fd609 >> 2] | 0;
   $123 = HEAP32[4956] | 0;
   if ($T_0_lcssa >>> 0 >= $123 >>> 0 & $121 >>> 0 >= $123 >>> 0) {
    HEAP32[$121 + 12 >> 2] = $112;
    HEAP32[$fd609 >> 2] = $112;
    HEAP32[$p_0 + 8 >> 2] = $121;
    HEAP32[$p_0 + 12 >> 2] = $T_0_lcssa;
    HEAP32[$p_0 + 24 >> 2] = 0;
    break;
   } else {
    _abort();
   }
  }
 } while (0);
 $dec = (HEAP32[4960] | 0) - 1 | 0;
 HEAP32[4960] = $dec;
 if (($dec | 0) == 0) {
  $sp_0_in_i = 20264;
 } else {
  return;
 }
 while (1) {
  $sp_0_i = HEAP32[$sp_0_in_i >> 2] | 0;
  if (($sp_0_i | 0) == 0) {
   break;
  } else {
   $sp_0_in_i = $sp_0_i + 8 | 0;
  }
 }
 HEAP32[4960] = -1;
 return;
}
function _qsort($base, $nel, $width, $cmp) {
 $base = $base | 0;
 $nel = $nel | 0;
 $width = $width | 0;
 $cmp = $cmp | 0;
 var $tmp_i98 = 0, $tmp_i = 0, $ar_i = 0, $lp = 0, $mul = 0, $add_ptr_sum = 0, $arrayidx2 = 0, $1 = 0, $2 = 0, $i_0 = 0, $add6 = 0, $idx_neg = 0, $add_ptr1 = 0, $arrayidx_i = 0, $4 = 0, $tobool21_i = 0, $cond_i260 = 0, $tobool_i261 = 0, $sub_ptr_lhs_cast = 0, $5 = 0, $pshift_0268 = 0, $head_0267 = 0, $p_sroa_0_0_load234266 = 0, $6 = 0, $7 = 0, $i_021_i = 0, $head_addr_020_i = 0, $pshift_addr_019_i = 0, $add_ptr_i = 0, $sub_i = 0, $add_ptr6_i = 0, $inc_i = 0, $arrayidx15_i = 0, $pshift_addr_0_be_i = 0, $head_addr_0_be_i = 0, $i_0_lcssa_i = 0, $arrayidx_i54 = 0, $9 = 0, $10 = 0, $i_020_us_i = 0, $12 = 0, $width_addr_022_us_i = 0, $cond_us_i = 0, $13 = 0, $cond_i263 = 0, $width_addr_022_i262 = 0, $sub15 = 0, $15 = 0, $i_021_i67 = 0, $head_addr_020_i68 = 0, $pshift_addr_019_i69 = 0, $add_ptr_i70 = 0, $sub_i71 = 0, $add_ptr6_i75 = 0, $inc_i84 = 0, $arrayidx15_i85 = 0, $pshift_addr_0_be_i90 = 0, $head_addr_0_be_i91 = 0, $i_0_lcssa_i96 = 0, $arrayidx_i100 = 0, $17 = 0, $18 = 0, $i_020_us_i110 = 0, $20 = 0, $width_addr_022_us_i117 = 0, $cond_us_i119 = 0, $21 = 0, $cond_i123257 = 0, $width_addr_022_i121256 = 0, $cmp_i136 = 0, $_p_sroa_0_0_load234 = 0, $sub_i140_sub15 = 0, $22 = 0, $p_sroa_0_0_load237 = 0, $pshift_1 = 0, $or = 0, $add_ptr33 = 0, $pshift_0_lcssa = 0, $head_0_lcssa = 0, $p_sroa_0_0_load234_lcssa = 0, $_lcssa = 0, $23 = 0, $p_sroa_0_0_load235 = 0, $head_1 = 0, $pshift_2 = 0, $sub_i147 = 0, $nTrailingZeros_06_i_i = 0, $x_addr_05_i_i = 0, $nTrailingZeros_06_i7_i = 0, $x_addr_05_i8_i = 0, $inc_i9_i = 0, $call151 = 0, $call151243 = 0, $call151242 = 0, $24 = 0, $25 = 0, $n_addr_0_i160 = 0, $shr_i176 = 0, $sub50 = 0, $or_i201 = 0, $shr8_i202 = 0, $or_i189 = 0, $or63 = 0, $add_ptr65 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, label = 0, sp = 0, $i_020_us_i$looptemp = 0, $10$looptemp = 0, $i_020_us_i110$looptemp = 0, $18$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 936 | 0;
 $tmp_i98 = sp | 0;
 $tmp_i = sp + 256 | 0;
 $ar_i = sp + 512 | 0;
 $lp = sp + 744 | 0;
 $mul = Math_imul($width, $nel) | 0;
 if (($mul | 0) == 0) {
  $$etemp$7$0 = 192;
  $$etemp$7$1 = 0;
  STACKTOP = sp;
  return;
 }
 $add_ptr_sum = $mul - $width | 0;
 HEAP32[$lp + 4 >> 2] = $width;
 $arrayidx2 = $lp | 0;
 HEAP32[$arrayidx2 >> 2] = $width;
 $i_0 = 2;
 $2 = $width;
 $1 = $width;
 while (1) {
  $add6 = $2 + $width + $1 | 0;
  HEAP32[$lp + ($i_0 << 2) >> 2] = $add6;
  if ($add6 >>> 0 < $mul >>> 0) {
   $i_0 = $i_0 + 1 | 0;
   $2 = $1;
   $1 = $add6;
  } else {
   break;
  }
 }
 $idx_neg = -$width | 0;
 $add_ptr1 = $base + $add_ptr_sum | 0;
 if (($add_ptr_sum | 0) > 0) {
  $arrayidx_i = $ar_i | 0;
  $4 = $tmp_i | 0;
  $tobool21_i = ($width | 0) == 0;
  $cond_i260 = $width >>> 0 > 256 >>> 0 ? 256 : $width;
  $tobool_i261 = ($cond_i260 | 0) == ($width | 0);
  $sub_ptr_lhs_cast = $add_ptr1;
  $5 = $tmp_i98 | 0;
  $6 = 0;
  $p_sroa_0_0_load234266 = 1;
  $head_0267 = $base;
  $pshift_0268 = 1;
  while (1) {
   do {
    if (($p_sroa_0_0_load234266 & 3 | 0) == 3) {
     HEAP32[$arrayidx_i >> 2] = $head_0267;
     L44 : do {
      if (($pshift_0268 | 0) > 1) {
       $pshift_addr_019_i = $pshift_0268;
       $head_addr_020_i = $head_0267;
       $i_021_i = 1;
       $7 = $head_0267;
       while (1) {
        $add_ptr_i = $head_addr_020_i + $idx_neg | 0;
        $sub_i = $pshift_addr_019_i - 2 | 0;
        $add_ptr6_i = $head_addr_020_i + (-((HEAP32[$lp + ($sub_i << 2) >> 2] | 0) + $width | 0) | 0) | 0;
        if ((FUNCTION_TABLE_iii[$cmp & 63]($7, $add_ptr6_i) | 0) > -1) {
         if ((FUNCTION_TABLE_iii[$cmp & 63]($7, $add_ptr_i) | 0) > -1) {
          $i_0_lcssa_i = $i_021_i;
          break;
         }
        }
        $inc_i = $i_021_i + 1 | 0;
        $arrayidx15_i = $ar_i + ($i_021_i << 2) | 0;
        if ((FUNCTION_TABLE_iii[$cmp & 63]($add_ptr6_i, $add_ptr_i) | 0) > -1) {
         HEAP32[$arrayidx15_i >> 2] = $add_ptr6_i;
         $head_addr_0_be_i = $add_ptr6_i;
         $pshift_addr_0_be_i = $pshift_addr_019_i - 1 | 0;
        } else {
         HEAP32[$arrayidx15_i >> 2] = $add_ptr_i;
         $head_addr_0_be_i = $add_ptr_i;
         $pshift_addr_0_be_i = $sub_i;
        }
        if (($pshift_addr_0_be_i | 0) <= 1) {
         $i_0_lcssa_i = $inc_i;
         break;
        }
        $pshift_addr_019_i = $pshift_addr_0_be_i;
        $head_addr_020_i = $head_addr_0_be_i;
        $i_021_i = $inc_i;
        $7 = HEAP32[$arrayidx_i >> 2] | 0;
       }
       if (($i_0_lcssa_i | 0) >= 2) {
        $arrayidx_i54 = $ar_i + ($i_0_lcssa_i << 2) | 0;
        HEAP32[$arrayidx_i54 >> 2] = $4;
        if (!$tobool21_i) {
         if (($i_0_lcssa_i | 0) > 0) {
          $width_addr_022_us_i = $width;
          $12 = $4;
         } else {
          $9 = HEAP32[$arrayidx_i >> 2] | 0;
          _memcpy($4 | 0, $9 | 0, $cond_i260) | 0;
          if ($tobool_i261) {
           break;
          } else {
           $width_addr_022_i262 = $width;
           $cond_i263 = $cond_i260;
          }
          while (1) {
           $width_addr_022_i262 = $width_addr_022_i262 - $cond_i263 | 0;
           $cond_i263 = $width_addr_022_i262 >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_i262;
           _memcpy($4 | 0, $9 | 0, $cond_i263) | 0;
           if (($width_addr_022_i262 | 0) == ($cond_i263 | 0)) {
            break L44;
           }
          }
         }
         while (1) {
          $cond_us_i = $width_addr_022_us_i >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_us_i;
          $13 = HEAP32[$arrayidx_i >> 2] | 0;
          _memcpy($12 | 0, $13 | 0, $cond_us_i) | 0;
          $i_020_us_i = 0;
          $10 = $13;
          do {
           $i_020_us_i$looptemp = $i_020_us_i;
           $i_020_us_i = $i_020_us_i + 1 | 0;
           $10$looptemp = $10;
           $10 = HEAP32[$ar_i + ($i_020_us_i << 2) >> 2] | 0;
           _memcpy($10$looptemp | 0, $10 | 0, $cond_us_i) | 0;
           HEAP32[$ar_i + ($i_020_us_i$looptemp << 2) >> 2] = $10$looptemp + $cond_us_i;
          } while (($i_020_us_i | 0) < ($i_0_lcssa_i | 0));
          if (($width_addr_022_us_i | 0) == ($cond_us_i | 0)) {
           break L44;
          }
          $width_addr_022_us_i = $width_addr_022_us_i - $cond_us_i | 0;
          $12 = HEAP32[$arrayidx_i54 >> 2] | 0;
         }
        }
       }
      }
     } while (0);
     $pshift_1 = $pshift_0268 + 2 | 0;
     $p_sroa_0_0_load237 = $p_sroa_0_0_load234266 >>> 2 | $6 << 30;
     $22 = $6 >>> 2;
    } else {
     $sub15 = $pshift_0268 - 1 | 0;
     L13 : do {
      if ((HEAP32[$lp + ($sub15 << 2) >> 2] | 0) >>> 0 < ($sub_ptr_lhs_cast - $head_0267 | 0) >>> 0) {
       HEAP32[$arrayidx_i >> 2] = $head_0267;
       if (($pshift_0268 | 0) > 1) {
        $pshift_addr_019_i69 = $pshift_0268;
        $head_addr_020_i68 = $head_0267;
        $i_021_i67 = 1;
        $15 = $head_0267;
        while (1) {
         $add_ptr_i70 = $head_addr_020_i68 + $idx_neg | 0;
         $sub_i71 = $pshift_addr_019_i69 - 2 | 0;
         $add_ptr6_i75 = $head_addr_020_i68 + (-((HEAP32[$lp + ($sub_i71 << 2) >> 2] | 0) + $width | 0) | 0) | 0;
         if ((FUNCTION_TABLE_iii[$cmp & 63]($15, $add_ptr6_i75) | 0) > -1) {
          if ((FUNCTION_TABLE_iii[$cmp & 63]($15, $add_ptr_i70) | 0) > -1) {
           $i_0_lcssa_i96 = $i_021_i67;
           break;
          }
         }
         $inc_i84 = $i_021_i67 + 1 | 0;
         $arrayidx15_i85 = $ar_i + ($i_021_i67 << 2) | 0;
         if ((FUNCTION_TABLE_iii[$cmp & 63]($add_ptr6_i75, $add_ptr_i70) | 0) > -1) {
          HEAP32[$arrayidx15_i85 >> 2] = $add_ptr6_i75;
          $head_addr_0_be_i91 = $add_ptr6_i75;
          $pshift_addr_0_be_i90 = $pshift_addr_019_i69 - 1 | 0;
         } else {
          HEAP32[$arrayidx15_i85 >> 2] = $add_ptr_i70;
          $head_addr_0_be_i91 = $add_ptr_i70;
          $pshift_addr_0_be_i90 = $sub_i71;
         }
         if (($pshift_addr_0_be_i90 | 0) <= 1) {
          $i_0_lcssa_i96 = $inc_i84;
          break;
         }
         $pshift_addr_019_i69 = $pshift_addr_0_be_i90;
         $head_addr_020_i68 = $head_addr_0_be_i91;
         $i_021_i67 = $inc_i84;
         $15 = HEAP32[$arrayidx_i >> 2] | 0;
        }
        if (($i_0_lcssa_i96 | 0) >= 2) {
         $arrayidx_i100 = $ar_i + ($i_0_lcssa_i96 << 2) | 0;
         HEAP32[$arrayidx_i100 >> 2] = $5;
         if (!$tobool21_i) {
          if (($i_0_lcssa_i96 | 0) > 0) {
           $width_addr_022_us_i117 = $width;
           $20 = $5;
          } else {
           $17 = HEAP32[$arrayidx_i >> 2] | 0;
           _memcpy($5 | 0, $17 | 0, $cond_i260) | 0;
           if ($tobool_i261) {
            break;
           } else {
            $width_addr_022_i121256 = $width;
            $cond_i123257 = $cond_i260;
           }
           while (1) {
            $width_addr_022_i121256 = $width_addr_022_i121256 - $cond_i123257 | 0;
            $cond_i123257 = $width_addr_022_i121256 >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_i121256;
            _memcpy($5 | 0, $17 | 0, $cond_i123257) | 0;
            if (($width_addr_022_i121256 | 0) == ($cond_i123257 | 0)) {
             break L13;
            }
           }
          }
          while (1) {
           $cond_us_i119 = $width_addr_022_us_i117 >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_us_i117;
           $21 = HEAP32[$arrayidx_i >> 2] | 0;
           _memcpy($20 | 0, $21 | 0, $cond_us_i119) | 0;
           $i_020_us_i110 = 0;
           $18 = $21;
           do {
            $i_020_us_i110$looptemp = $i_020_us_i110;
            $i_020_us_i110 = $i_020_us_i110 + 1 | 0;
            $18$looptemp = $18;
            $18 = HEAP32[$ar_i + ($i_020_us_i110 << 2) >> 2] | 0;
            _memcpy($18$looptemp | 0, $18 | 0, $cond_us_i119) | 0;
            HEAP32[$ar_i + ($i_020_us_i110$looptemp << 2) >> 2] = $18$looptemp + $cond_us_i119;
           } while (($i_020_us_i110 | 0) < ($i_0_lcssa_i96 | 0));
           if (($width_addr_022_us_i117 | 0) == ($cond_us_i119 | 0)) {
            break L13;
           }
           $width_addr_022_us_i117 = $width_addr_022_us_i117 - $cond_us_i119 | 0;
           $20 = HEAP32[$arrayidx_i100 >> 2] | 0;
          }
         }
        }
       }
      } else {
       _trinkle($head_0267, $width, $cmp, $p_sroa_0_0_load234266, $6, $pshift_0268, 0, $arrayidx2);
      }
     } while (0);
     if (($pshift_0268 | 0) == 1) {
      $pshift_1 = 0;
      $p_sroa_0_0_load237 = $p_sroa_0_0_load234266 << 1;
      $22 = $p_sroa_0_0_load234266 >>> 31 | $6 << 1;
      break;
     } else {
      $cmp_i136 = $sub15 >>> 0 > 31 >>> 0;
      $_p_sroa_0_0_load234 = $cmp_i136 ? 0 : $p_sroa_0_0_load234266;
      $sub_i140_sub15 = $cmp_i136 ? $pshift_0268 - 33 | 0 : $sub15;
      $pshift_1 = 1;
      $p_sroa_0_0_load237 = $_p_sroa_0_0_load234 << $sub_i140_sub15;
      $22 = $_p_sroa_0_0_load234 >>> ((32 - $sub_i140_sub15 | 0) >>> 0) | ($cmp_i136 ? $p_sroa_0_0_load234266 : $6) << $sub_i140_sub15;
      break;
     }
    }
   } while (0);
   $or = $p_sroa_0_0_load237 | 1;
   $add_ptr33 = $head_0267 + $width | 0;
   if ($add_ptr33 >>> 0 < $add_ptr1 >>> 0) {
    $6 = $22;
    $p_sroa_0_0_load234266 = $or;
    $head_0267 = $add_ptr33;
    $pshift_0268 = $pshift_1;
   } else {
    $_lcssa = $22;
    $p_sroa_0_0_load234_lcssa = $or;
    $head_0_lcssa = $add_ptr33;
    $pshift_0_lcssa = $pshift_1;
    break;
   }
  }
 } else {
  $_lcssa = 0;
  $p_sroa_0_0_load234_lcssa = 1;
  $head_0_lcssa = $base;
  $pshift_0_lcssa = 1;
 }
 _trinkle($head_0_lcssa, $width, $cmp, $p_sroa_0_0_load234_lcssa, $_lcssa, $pshift_0_lcssa, 0, $arrayidx2);
 $pshift_2 = $pshift_0_lcssa;
 $head_1 = $head_0_lcssa;
 $p_sroa_0_0_load235 = $p_sroa_0_0_load234_lcssa;
 $23 = $_lcssa;
 while (1) {
  if (($pshift_2 | 0) == 1) {
   if (($p_sroa_0_0_load235 | 0) == 1) {
    if (($23 | 0) == 0) {
     break;
    } else {
     label = 52;
    }
   }
  } else {
   label = 52;
  }
  if ((label | 0) == 52) {
   label = 0;
   if (($pshift_2 | 0) >= 2) {
    $shr_i176 = $p_sroa_0_0_load235 >>> 30;
    $sub50 = $pshift_2 - 2 | 0;
    $or_i201 = ($p_sroa_0_0_load235 << 1 & 2147483646 | $shr_i176 << 31) ^ 3;
    $shr8_i202 = ($shr_i176 | $23 << 2) >>> 1;
    _trinkle($head_1 + (-((HEAP32[$lp + ($sub50 << 2) >> 2] | 0) + $width | 0) | 0) | 0, $width, $cmp, $or_i201, $shr8_i202, $pshift_2 - 1 | 0, 1, $arrayidx2);
    $or_i189 = $shr8_i202 << 1 | $shr_i176 & 1;
    $or63 = $or_i201 << 1 | 1;
    $add_ptr65 = $head_1 + $idx_neg | 0;
    _trinkle($add_ptr65, $width, $cmp, $or63, $or_i189, $sub50, 1, $arrayidx2);
    $pshift_2 = $sub50;
    $head_1 = $add_ptr65;
    $p_sroa_0_0_load235 = $or63;
    $23 = $or_i189;
    continue;
   }
  }
  $sub_i147 = $p_sroa_0_0_load235 - 1 | 0;
  do {
   if (($sub_i147 | 0) == 0) {
    $call151243 = 32;
    label = 62;
   } else {
    if (($sub_i147 & 1 | 0) == 0) {
     $x_addr_05_i_i = $sub_i147;
     $nTrailingZeros_06_i_i = 0;
     do {
      $nTrailingZeros_06_i_i = $nTrailingZeros_06_i_i + 1 | 0;
      $x_addr_05_i_i = $x_addr_05_i_i >>> 1;
     } while (($x_addr_05_i_i & 1 | 0) == 0);
     if (($nTrailingZeros_06_i_i | 0) == 0) {
      label = 57;
     } else {
      $call151 = $nTrailingZeros_06_i_i;
     }
    } else {
     label = 57;
    }
    if ((label | 0) == 57) {
     label = 0;
     if (($23 | 0) == 0) {
      $call151243 = 64;
      label = 62;
      break;
     }
     if (($23 & 1 | 0) == 0) {
      $x_addr_05_i8_i = $23;
      $nTrailingZeros_06_i7_i = 0;
     } else {
      $n_addr_0_i160 = 0;
      $25 = $p_sroa_0_0_load235;
      $24 = $23;
      $call151242 = 0;
      break;
     }
     while (1) {
      $inc_i9_i = $nTrailingZeros_06_i7_i + 1 | 0;
      $x_addr_05_i8_i = $x_addr_05_i8_i >>> 1;
      if (($x_addr_05_i8_i & 1 | 0) != 0) {
       break;
      } else {
       $nTrailingZeros_06_i7_i = $inc_i9_i;
      }
     }
     if (($inc_i9_i | 0) == 0) {
      $n_addr_0_i160 = 0;
      $25 = $p_sroa_0_0_load235;
      $24 = $23;
      $call151242 = 0;
      break;
     } else {
      $call151 = $nTrailingZeros_06_i7_i + 33 | 0;
     }
    }
    if ($call151 >>> 0 > 31 >>> 0) {
     $call151243 = $call151;
     label = 62;
    } else {
     $n_addr_0_i160 = $call151;
     $25 = $p_sroa_0_0_load235;
     $24 = $23;
     $call151242 = $call151;
    }
   }
  } while (0);
  if ((label | 0) == 62) {
   label = 0;
   $n_addr_0_i160 = $call151243 - 32 | 0;
   $25 = $23;
   $24 = 0;
   $call151242 = $call151243;
  }
  $pshift_2 = $call151242 + $pshift_2 | 0;
  $head_1 = $head_1 + $idx_neg | 0;
  $p_sroa_0_0_load235 = $24 << 32 - $n_addr_0_i160 | $25 >>> ($n_addr_0_i160 >>> 0);
  $23 = $24 >>> ($n_addr_0_i160 >>> 0);
 }
 $$etemp$7$0 = 192;
 $$etemp$7$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, $__b_0, $__e_0, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b_0 = $__b_0 | 0;
 $__e_0 = $__e_0 | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $__p_i_i_i_i = 0, $ref_tmp22 = 0, $agg_tmp = 0, $agg_tmp23 = 0, $__locale_2_i_i2 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $__b_sroa_0_0 = 0, $__e_sroa_0_0 = 0, $_pre187 = 0, $__fmtb_addr_0_ph185 = 0, $__b_sroa_0_1 = 0, $__e_sroa_0_1 = 0, $24 = 0, $25 = 0, $retval_0_i_i_i_i = 0, $cmp_i1_i_i_i = 0, $__b_sroa_0_2 = 0, $30 = 0, $31 = 0, $32 = 0, $retval_0_i_i12_i_i = 0, $__e_sroa_0_3 = 0, $__e_sroa_0_4 = 0, $incdec_ptr = 0, $call_i44 = 0, $incdec_ptr16 = 0, $__fmtb_addr_1 = 0, $__cmd_0 = 0, $__opt_0 = 0, $49 = 0, $__b_sroa_0_3 = 0, $__e_sroa_0_5 = 0, $__fmtb_addr_0_ph_be = 0, $__fmtb_addr_0_pn = 0, $__fmtb_addr_2 = 0, $__fmtb_addr_2_lcssa = 0, $__b_sroa_0_4 = 0, $__e_sroa_0_6 = 0, $_pre_i15_i_i87 = 0, $55 = 0, $_pre_i_i_i68 = 0, $56 = 0, $retval_0_i_i_i_i65 = 0, $cmp_i1_i_i_i66 = 0, $__b_sroa_0_5 = 0, $61 = 0, $62 = 0, $63 = 0, $retval_0_i_i12_i_i84 = 0, $__e_sroa_0_7 = 0, $_pre_i15_i_i87189 = 0, $__e_sroa_0_8 = 0, $_pre_i15_i_i87188 = 0, $68 = 0, $__ninp__i_i = 0, $69 = 0, $__einp__i_i = 0, $retval_0_i_i = 0, $75 = 0, $__ninp__i_i106 = 0, $79 = 0, $__einp__i_i107 = 0, $retval_0_i_i114 = 0, $call_i118 = 0, $87 = 0, $__e_sroa_0_10 = 0, $_pre_i_i_i147 = 0, $91 = 0, $retval_0_i_i_i_i144 = 0, $cmp_i1_i_i_i145 = 0, $96 = 0, $97 = 0, $98 = 0, $retval_0_i_i12_i_i163 = 0, $104 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i_i = sp | 0;
 $ref_tmp22 = sp + 16 | 0;
 $agg_tmp = sp + 24 | 0;
 $agg_tmp23 = sp + 32 | 0;
 $__locale_2_i_i2 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i2 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i2 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i2 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $11 = $9;
   $12 = $__locale_2_i_i2 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i2 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i2);
   }
   HEAP32[$__err >> 2] = 0;
   L10 : do {
    if (($__fmtb | 0) == ($__fmte | 0)) {
     $_pre_i_i_i147 = $__b_0;
     $__e_sroa_0_10 = $__e_0;
    } else {
     $17 = $9;
     $18 = $9;
     $19 = $9;
     $20 = $this;
     $21 = $agg_tmp | 0;
     $22 = $agg_tmp23 | 0;
     $23 = $ref_tmp22 | 0;
     $__fmtb_addr_0_ph185 = $__fmtb;
     $_pre187 = 0;
     $__e_sroa_0_0 = $__e_0;
     $__b_sroa_0_0 = $__b_0;
     L12 : while (1) {
      $24 = $_pre187;
      $__e_sroa_0_1 = $__e_sroa_0_0;
      $__b_sroa_0_1 = $__b_sroa_0_0;
      while (1) {
       if (($24 | 0) != 0) {
        $_pre_i_i_i147 = $__b_sroa_0_1;
        $__e_sroa_0_10 = $__e_sroa_0_1;
        break L10;
       }
       if (($__b_sroa_0_1 | 0) == 0) {
        $31 = 1;
        $30 = 0;
        $__b_sroa_0_2 = 0;
       } else {
        $25 = HEAP32[$__b_sroa_0_1 + 12 >> 2] | 0;
        if (($25 | 0) == (HEAP32[$__b_sroa_0_1 + 16 >> 2] | 0)) {
         $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__b_sroa_0_1 >> 2] | 0) + 36 >> 2] & 255]($__b_sroa_0_1) | 0;
        } else {
         $retval_0_i_i_i_i = HEAP32[$25 >> 2] | 0;
        }
        $cmp_i1_i_i_i = ($retval_0_i_i_i_i | 0) == -1;
        $31 = $cmp_i1_i_i_i ? 1 : 0;
        $30 = $cmp_i1_i_i_i ? 0 : $__b_sroa_0_1;
        $__b_sroa_0_2 = $cmp_i1_i_i_i ? 0 : $__b_sroa_0_1;
       }
       if (($__e_sroa_0_1 | 0) == 0) {
        label = 23;
       } else {
        $32 = HEAP32[$__e_sroa_0_1 + 12 >> 2] | 0;
        if (($32 | 0) == (HEAP32[$__e_sroa_0_1 + 16 >> 2] | 0)) {
         $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_1 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_1) | 0;
        } else {
         $retval_0_i_i12_i_i = HEAP32[$32 >> 2] | 0;
        }
        if (($retval_0_i_i12_i_i | 0) == -1) {
         label = 23;
        } else {
         if ($31) {
          $__e_sroa_0_4 = $__e_sroa_0_1;
         } else {
          $__e_sroa_0_3 = $__e_sroa_0_1;
          label = 25;
          break L12;
         }
        }
       }
       if ((label | 0) == 23) {
        label = 0;
        if ($31) {
         $__e_sroa_0_3 = 0;
         label = 25;
         break L12;
        } else {
         $__e_sroa_0_4 = 0;
        }
       }
       if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 52 >> 2] & 127]($11, HEAP32[$__fmtb_addr_0_ph185 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
        label = 30;
        break;
       }
       if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 127]($11, 8192, HEAP32[$__fmtb_addr_0_ph185 >> 2] | 0) | 0) {
        $__fmtb_addr_0_pn = $__fmtb_addr_0_ph185;
        label = 40;
        break;
       }
       $__ninp__i_i106 = $30 + 12 | 0;
       $79 = HEAP32[$__ninp__i_i106 >> 2] | 0;
       $__einp__i_i107 = $30 + 16 | 0;
       if (($79 | 0) == (HEAP32[$__einp__i_i107 >> 2] | 0)) {
        $retval_0_i_i114 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0;
       } else {
        $retval_0_i_i114 = HEAP32[$79 >> 2] | 0;
       }
       $call_i118 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($11, $retval_0_i_i114) | 0;
       if (($call_i118 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($11, HEAP32[$__fmtb_addr_0_ph185 >> 2] | 0) | 0)) {
        label = 66;
        break;
       }
       HEAP32[$__err >> 2] = 4;
       $24 = 4;
       $__e_sroa_0_1 = $__e_sroa_0_4;
       $__b_sroa_0_1 = $__b_sroa_0_2;
      }
      L41 : do {
       if ((label | 0) == 30) {
        label = 0;
        $incdec_ptr = $__fmtb_addr_0_ph185 + 4 | 0;
        if (($incdec_ptr | 0) == ($__fmte | 0)) {
         label = 31;
         break L12;
        }
        $call_i44 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 52 >> 2] & 127]($11, HEAP32[$incdec_ptr >> 2] | 0, 0) | 0;
        if (($call_i44 << 24 >> 24 | 0) == 69 | ($call_i44 << 24 >> 24 | 0) == 48) {
         $incdec_ptr16 = $__fmtb_addr_0_ph185 + 8 | 0;
         if (($incdec_ptr16 | 0) == ($__fmte | 0)) {
          label = 34;
          break L12;
         }
         $__opt_0 = $call_i44;
         $__cmd_0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 52 >> 2] & 127]($11, HEAP32[$incdec_ptr16 >> 2] | 0, 0) | 0;
         $__fmtb_addr_1 = $incdec_ptr16;
        } else {
         $__opt_0 = 0;
         $__cmd_0 = $call_i44;
         $__fmtb_addr_1 = $incdec_ptr;
        }
        $49 = HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] | 0;
        HEAP32[$21 >> 2] = $30;
        HEAP32[$22 >> 2] = $__e_sroa_0_4;
        FUNCTION_TABLE_viiiiiiiii[$49 & 31]($ref_tmp22, $this, $agg_tmp, $agg_tmp23, $__iob, $__err, $__tm, $__cmd_0, $__opt_0);
        $__fmtb_addr_0_ph_be = $__fmtb_addr_1 + 4 | 0;
        $__e_sroa_0_5 = $__e_sroa_0_4;
        $__b_sroa_0_3 = HEAP32[$23 >> 2] | 0;
       } else if ((label | 0) == 40) {
        while (1) {
         label = 0;
         $__fmtb_addr_2 = $__fmtb_addr_0_pn + 4 | 0;
         if (($__fmtb_addr_2 | 0) == ($__fmte | 0)) {
          $__fmtb_addr_2_lcssa = $__fmte;
          break;
         }
         if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 127]($11, 8192, HEAP32[$__fmtb_addr_2 >> 2] | 0) | 0) {
          $__fmtb_addr_0_pn = $__fmtb_addr_2;
          label = 40;
         } else {
          $__fmtb_addr_2_lcssa = $__fmtb_addr_2;
          break;
         }
        }
        $_pre_i_i_i68 = $30;
        $55 = $__e_sroa_0_4;
        $_pre_i15_i_i87 = $__e_sroa_0_4;
        $__e_sroa_0_6 = $__e_sroa_0_4;
        $__b_sroa_0_4 = $__b_sroa_0_2;
        while (1) {
         if (($_pre_i_i_i68 | 0) == 0) {
          $62 = 1;
          $61 = 0;
          $__b_sroa_0_5 = $__b_sroa_0_4;
         } else {
          $56 = HEAP32[$_pre_i_i_i68 + 12 >> 2] | 0;
          if (($56 | 0) == (HEAP32[$_pre_i_i_i68 + 16 >> 2] | 0)) {
           $retval_0_i_i_i_i65 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i68 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i68) | 0;
          } else {
           $retval_0_i_i_i_i65 = HEAP32[$56 >> 2] | 0;
          }
          $cmp_i1_i_i_i66 = ($retval_0_i_i_i_i65 | 0) == -1;
          $62 = $cmp_i1_i_i_i66 ? 1 : 0;
          $61 = $cmp_i1_i_i_i66 ? 0 : $_pre_i_i_i68;
          $__b_sroa_0_5 = $cmp_i1_i_i_i66 ? 0 : $__b_sroa_0_4;
         }
         if (($55 | 0) == 0) {
          $_pre_i15_i_i87189 = $_pre_i15_i_i87;
          $__e_sroa_0_7 = $__e_sroa_0_6;
          label = 53;
         } else {
          $63 = HEAP32[$55 + 12 >> 2] | 0;
          if (($63 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
           $retval_0_i_i12_i_i84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
          } else {
           $retval_0_i_i12_i_i84 = HEAP32[$63 >> 2] | 0;
          }
          if (($retval_0_i_i12_i_i84 | 0) == -1) {
           $_pre_i15_i_i87189 = 0;
           $__e_sroa_0_7 = 0;
           label = 53;
          } else {
           if ($62 ^ ($_pre_i15_i_i87 | 0) == 0) {
            $68 = $_pre_i15_i_i87;
            $_pre_i15_i_i87188 = $_pre_i15_i_i87;
            $__e_sroa_0_8 = $__e_sroa_0_6;
           } else {
            $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
            $__e_sroa_0_5 = $__e_sroa_0_6;
            $__b_sroa_0_3 = $__b_sroa_0_5;
            break L41;
           }
          }
         }
         if ((label | 0) == 53) {
          label = 0;
          if ($62) {
           $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
           $__e_sroa_0_5 = $__e_sroa_0_7;
           $__b_sroa_0_3 = $__b_sroa_0_5;
           break L41;
          } else {
           $68 = 0;
           $_pre_i15_i_i87188 = $_pre_i15_i_i87189;
           $__e_sroa_0_8 = $__e_sroa_0_7;
          }
         }
         $__ninp__i_i = $61 + 12 | 0;
         $69 = HEAP32[$__ninp__i_i >> 2] | 0;
         $__einp__i_i = $61 + 16 | 0;
         if (($69 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          $retval_0_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$61 >> 2] | 0) + 36 >> 2] & 255]($61) | 0;
         } else {
          $retval_0_i_i = HEAP32[$69 >> 2] | 0;
         }
         if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 127]($11, 8192, $retval_0_i_i) | 0)) {
          $__fmtb_addr_0_ph_be = $__fmtb_addr_2_lcssa;
          $__e_sroa_0_5 = $__e_sroa_0_8;
          $__b_sroa_0_3 = $__b_sroa_0_5;
          break L41;
         }
         $75 = HEAP32[$__ninp__i_i >> 2] | 0;
         if (($75 | 0) == (HEAP32[$__einp__i_i >> 2] | 0)) {
          FUNCTION_TABLE_ii[HEAP32[(HEAP32[$61 >> 2] | 0) + 40 >> 2] & 255]($61) | 0;
          $_pre_i_i_i68 = $61;
          $55 = $68;
          $_pre_i15_i_i87 = $_pre_i15_i_i87188;
          $__e_sroa_0_6 = $__e_sroa_0_8;
          $__b_sroa_0_4 = $__b_sroa_0_5;
          continue;
         } else {
          HEAP32[$__ninp__i_i >> 2] = $75 + 4;
          $_pre_i_i_i68 = $61;
          $55 = $68;
          $_pre_i15_i_i87 = $_pre_i15_i_i87188;
          $__e_sroa_0_6 = $__e_sroa_0_8;
          $__b_sroa_0_4 = $__b_sroa_0_5;
          continue;
         }
        }
       } else if ((label | 0) == 66) {
        label = 0;
        $87 = HEAP32[$__ninp__i_i106 >> 2] | 0;
        if (($87 | 0) == (HEAP32[$__einp__i_i107 >> 2] | 0)) {
         FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 40 >> 2] & 255]($30) | 0;
        } else {
         HEAP32[$__ninp__i_i106 >> 2] = $87 + 4;
        }
        $__fmtb_addr_0_ph_be = $__fmtb_addr_0_ph185 + 4 | 0;
        $__e_sroa_0_5 = $__e_sroa_0_4;
        $__b_sroa_0_3 = $__b_sroa_0_2;
       }
      } while (0);
      if (($__fmtb_addr_0_ph_be | 0) == ($__fmte | 0)) {
       $_pre_i_i_i147 = $__b_sroa_0_3;
       $__e_sroa_0_10 = $__e_sroa_0_5;
       break L10;
      }
      $__fmtb_addr_0_ph185 = $__fmtb_addr_0_ph_be;
      $_pre187 = HEAP32[$__err >> 2] | 0;
      $__e_sroa_0_0 = $__e_sroa_0_5;
      $__b_sroa_0_0 = $__b_sroa_0_3;
     }
     if ((label | 0) == 25) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $30;
      $__e_sroa_0_10 = $__e_sroa_0_3;
      break;
     } else if ((label | 0) == 31) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $30;
      $__e_sroa_0_10 = $__e_sroa_0_4;
      break;
     } else if ((label | 0) == 34) {
      HEAP32[$__err >> 2] = 4;
      $_pre_i_i_i147 = $30;
      $__e_sroa_0_10 = $__e_sroa_0_4;
      break;
     }
    }
   } while (0);
   if (($_pre_i_i_i147 | 0) == 0) {
    $97 = 1;
    $96 = 0;
   } else {
    $91 = HEAP32[$_pre_i_i_i147 + 12 >> 2] | 0;
    if (($91 | 0) == (HEAP32[$_pre_i_i_i147 + 16 >> 2] | 0)) {
     $retval_0_i_i_i_i144 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i147 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i147) | 0;
    } else {
     $retval_0_i_i_i_i144 = HEAP32[$91 >> 2] | 0;
    }
    $cmp_i1_i_i_i145 = ($retval_0_i_i_i_i144 | 0) == -1;
    $97 = $cmp_i1_i_i_i145 ? 1 : 0;
    $96 = $cmp_i1_i_i_i145 ? 0 : $_pre_i_i_i147;
   }
   if (($__e_sroa_0_10 | 0) == 0) {
    label = 81;
   } else {
    $98 = HEAP32[$__e_sroa_0_10 + 12 >> 2] | 0;
    if (($98 | 0) == (HEAP32[$__e_sroa_0_10 + 16 >> 2] | 0)) {
     $retval_0_i_i12_i_i163 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_10 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_10) | 0;
    } else {
     $retval_0_i_i12_i_i163 = HEAP32[$98 >> 2] | 0;
    }
    if (($retval_0_i_i12_i_i163 | 0) == -1) {
     label = 81;
    } else {
     if ($97) {
      $104 = $agg_result | 0;
      HEAP32[$104 >> 2] = $96;
      STACKTOP = sp;
      return;
     }
    }
   }
   if ((label | 0) == 81) {
    if (!$97) {
     $104 = $agg_result | 0;
     HEAP32[$104 >> 2] = $96;
     STACKTOP = sp;
     return;
    }
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $104 = $agg_result | 0;
   HEAP32[$104 >> 2] = $96;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZN38EmscriptenBindingInitializer_my_moduleC2Ev() {
 var $args_i202 = 0, $args_i199 = 0, $args_i196 = 0, $args_i193 = 0, $args_i190 = 0, $args_i187 = 0, $args_i183 = 0, $args_i179 = 0, $args_i175 = 0, $args_i171 = 0, $args_i167 = 0, $args_i163 = 0, $args_i159 = 0, $args_i155 = 0, $args_i151 = 0, $args_i147 = 0, $args_i143 = 0, $args_i139 = 0, $args_i135 = 0, $args_i131 = 0, $args_i124 = 0, $args_i120 = 0, $args_i116 = 0, $args_i109 = 0, $args_i105 = 0, $args_i93 = 0, $args_i82 = 0, $args_i77 = 0, $args_i73 = 0, $args_i63 = 0, $args_i53 = 0, $args_i43 = 0, $args_i36 = 0, $args_i32 = 0, $args_i28 = 0, $args_i25 = 0, $args_i18 = 0, $args_i14 = 0, $args_i11 = 0, $args_i8 = 0, $args_i4 = 0, $args_i1 = 0, $args_i = 0, $arraydecay_i_i = 0, $arraydecay_i_i3 = 0, $arraydecay_i_i6 = 0, $arraydecay_i_i10 = 0, $arraydecay_i_i13 = 0, $arraydecay_i_i16 = 0, $arraydecay_i_i20 = 0, $arraydecay_i_i27 = 0, $arraydecay_i_i30 = 0, $arraydecay_i_i34 = 0, $arraydecay_i_i38 = 0, $arraydecay_i_i45 = 0, $arraydecay_i_i55 = 0, $arraydecay_i_i65 = 0, $arraydecay_i_i75 = 0, $arraydecay_i_i79 = 0, $arraydecay_i_i84 = 0, $arraydecay_i_i95 = 0, $arraydecay_i_i107 = 0, $arraydecay_i_i111 = 0, $arraydecay_i_i118 = 0, $arraydecay_i_i122 = 0, $arraydecay_i_i126 = 0, $arraydecay_i_i133 = 0, $arraydecay_i_i137 = 0, $arraydecay_i_i141 = 0, $arraydecay_i_i145 = 0, $arraydecay_i_i149 = 0, $arraydecay_i_i153 = 0, $arraydecay_i_i157 = 0, $arraydecay_i_i161 = 0, $arraydecay_i_i165 = 0, $arraydecay_i_i169 = 0, $arraydecay_i_i173 = 0, $arraydecay_i_i177 = 0, $arraydecay_i_i181 = 0, $arraydecay_i_i185 = 0, $arraydecay_i_i189 = 0, $arraydecay_i_i192 = 0, $arraydecay_i_i195 = 0, $arraydecay_i_i198 = 0, $arraydecay_i_i201 = 0, $arraydecay_i_i204 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 $args_i202 = sp | 0;
 $args_i199 = sp + 8 | 0;
 $args_i196 = sp + 16 | 0;
 $args_i193 = sp + 24 | 0;
 $args_i190 = sp + 32 | 0;
 $args_i187 = sp + 40 | 0;
 $args_i183 = sp + 48 | 0;
 $args_i179 = sp + 64 | 0;
 $args_i175 = sp + 80 | 0;
 $args_i171 = sp + 96 | 0;
 $args_i167 = sp + 112 | 0;
 $args_i163 = sp + 128 | 0;
 $args_i159 = sp + 144 | 0;
 $args_i155 = sp + 160 | 0;
 $args_i151 = sp + 176 | 0;
 $args_i147 = sp + 192 | 0;
 $args_i143 = sp + 208 | 0;
 $args_i139 = sp + 224 | 0;
 $args_i135 = sp + 240 | 0;
 $args_i131 = sp + 256 | 0;
 $args_i124 = sp + 272 | 0;
 $args_i120 = sp + 296 | 0;
 $args_i116 = sp + 312 | 0;
 $args_i109 = sp + 328 | 0;
 $args_i105 = sp + 352 | 0;
 $args_i93 = sp + 368 | 0;
 $args_i82 = sp + 416 | 0;
 $args_i77 = sp + 464 | 0;
 $args_i73 = sp + 480 | 0;
 $args_i63 = sp + 496 | 0;
 $args_i53 = sp + 536 | 0;
 $args_i43 = sp + 576 | 0;
 $args_i36 = sp + 616 | 0;
 $args_i32 = sp + 656 | 0;
 $args_i28 = sp + 672 | 0;
 $args_i25 = sp + 688 | 0;
 $args_i18 = sp + 696 | 0;
 $args_i14 = sp + 720 | 0;
 $args_i11 = sp + 744 | 0;
 $args_i8 = sp + 752 | 0;
 $args_i4 = sp + 760 | 0;
 $args_i1 = sp + 776 | 0;
 $args_i = sp + 792 | 0;
 HEAP32[$args_i >> 2] = 1;
 $arraydecay_i_i = $args_i + 4 | 0;
 HEAP32[$arraydecay_i_i >> 2] = 17816;
 __embind_register_function(1152, 1, $arraydecay_i_i | 0, 11312, 82, 24);
 HEAP32[$args_i1 >> 2] = 2;
 $arraydecay_i_i3 = $args_i1 + 4 | 0;
 HEAP32[$arraydecay_i_i3 >> 2] = 17816;
 HEAP32[$args_i1 + 8 >> 2] = 19120;
 __embind_register_function(1128, 2, $arraydecay_i_i3 | 0, 11344, 48, 98);
 HEAP32[$args_i4 >> 2] = 2;
 $arraydecay_i_i6 = $args_i4 + 4 | 0;
 HEAP32[$arraydecay_i_i6 >> 2] = 17816;
 HEAP32[$args_i4 + 8 >> 2] = 19120;
 __embind_register_function(1072, 2, $arraydecay_i_i6 | 0, 11344, 48, 54);
 HEAP32[$args_i8 >> 2] = 1;
 $arraydecay_i_i10 = $args_i8 + 4 | 0;
 HEAP32[$arraydecay_i_i10 >> 2] = 17816;
 __embind_register_function(1056, 1, $arraydecay_i_i10 | 0, 11312, 82, 22);
 HEAP32[$args_i11 >> 2] = 1;
 $arraydecay_i_i13 = $args_i11 + 4 | 0;
 HEAP32[$arraydecay_i_i13 >> 2] = 17808;
 __embind_register_function(1032, 1, $arraydecay_i_i13 | 0, 11168, 118, 22);
 HEAP32[$args_i14 >> 2] = 5;
 $arraydecay_i_i16 = $args_i14 + 4 | 0;
 HEAP32[$arraydecay_i_i16 >> 2] = 17808;
 HEAP32[$args_i14 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i14 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i14 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i14 + 20 >> 2] = __ZTIi;
 __embind_register_function(872, 5, $arraydecay_i_i16 | 0, 11224, 22, 22);
 HEAP32[$args_i18 >> 2] = 5;
 $arraydecay_i_i20 = $args_i18 + 4 | 0;
 HEAP32[$arraydecay_i_i20 >> 2] = 17808;
 HEAP32[$args_i18 + 8 >> 2] = __ZTIi;
 HEAP32[$args_i18 + 12 >> 2] = __ZTIi;
 HEAP32[$args_i18 + 16 >> 2] = __ZTIi;
 HEAP32[$args_i18 + 20 >> 2] = __ZTIi;
 __embind_register_function(840, 5, $arraydecay_i_i20 | 0, 11176, 28, 26);
 HEAP32[$args_i25 >> 2] = 1;
 $arraydecay_i_i27 = $args_i25 + 4 | 0;
 HEAP32[$arraydecay_i_i27 >> 2] = 17808;
 __embind_register_function(784, 1, $arraydecay_i_i27 | 0, 11168, 118, 26);
 HEAP32[$args_i28 >> 2] = 2;
 $arraydecay_i_i30 = $args_i28 + 4 | 0;
 HEAP32[$arraydecay_i_i30 >> 2] = 17808;
 HEAP32[$args_i28 + 8 >> 2] = 19120;
 __embind_register_function(704, 2, $arraydecay_i_i30 | 0, 11288, 32, 200);
 HEAP32[$args_i32 >> 2] = 2;
 $arraydecay_i_i34 = $args_i32 + 4 | 0;
 HEAP32[$arraydecay_i_i34 >> 2] = 17808;
 HEAP32[$args_i32 + 8 >> 2] = 19120;
 __embind_register_function(664, 2, $arraydecay_i_i34 | 0, 11288, 32, 46);
 HEAP32[$args_i36 >> 2] = 8;
 $arraydecay_i_i38 = $args_i36 + 4 | 0;
 HEAP32[$arraydecay_i_i38 >> 2] = 17808;
 HEAP32[$args_i36 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i36 + 32 >> 2] = 19120;
 __embind_register_function(648, 8, $arraydecay_i_i38 | 0, 11264, 24, 26);
 HEAP32[$args_i43 >> 2] = 8;
 $arraydecay_i_i45 = $args_i43 + 4 | 0;
 HEAP32[$arraydecay_i_i45 >> 2] = 17808;
 HEAP32[$args_i43 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i43 + 32 >> 2] = 19120;
 __embind_register_function(592, 8, $arraydecay_i_i45 | 0, 11264, 24, 22);
 HEAP32[$args_i53 >> 2] = 9;
 $arraydecay_i_i55 = $args_i53 + 4 | 0;
 HEAP32[$arraydecay_i_i55 >> 2] = 17808;
 HEAP32[$args_i53 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i53 + 32 >> 2] = __ZTIi;
 HEAP32[$args_i53 + 36 >> 2] = 19120;
 __embind_register_function(10320, 9, $arraydecay_i_i55 | 0, 11248, 22, 22);
 HEAP32[$args_i63 >> 2] = 8;
 $arraydecay_i_i65 = $args_i63 + 4 | 0;
 HEAP32[$arraydecay_i_i65 >> 2] = 17808;
 HEAP32[$args_i63 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i63 + 32 >> 2] = __ZTIt;
 __embind_register_function(10264, 8, $arraydecay_i_i65 | 0, 11232, 22, 24);
 HEAP32[$args_i73 >> 2] = 2;
 $arraydecay_i_i75 = $args_i73 + 4 | 0;
 HEAP32[$arraydecay_i_i75 >> 2] = 17808;
 HEAP32[$args_i73 + 8 >> 2] = 19120;
 __embind_register_function(10208, 2, $arraydecay_i_i75 | 0, 11288, 32, 220);
 HEAP32[$args_i77 >> 2] = 3;
 $arraydecay_i_i79 = $args_i77 + 4 | 0;
 HEAP32[$arraydecay_i_i79 >> 2] = 17816;
 HEAP32[$args_i77 + 8 >> 2] = __ZTIi;
 HEAP32[$args_i77 + 12 >> 2] = __ZTIf;
 __embind_register_function(10080, 3, $arraydecay_i_i79 | 0, 11328, 22, 24);
 HEAP32[$args_i82 >> 2] = 10;
 $arraydecay_i_i84 = $args_i82 + 4 | 0;
 HEAP32[$arraydecay_i_i84 >> 2] = __ZTIi;
 HEAP32[$args_i82 + 8 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 32 >> 2] = __ZTIf;
 HEAP32[$args_i82 + 36 >> 2] = __ZTIh;
 HEAP32[$args_i82 + 40 >> 2] = __ZTIf;
 __embind_register_function(10032, 10, $arraydecay_i_i84 | 0, 11296, 22, 22);
 HEAP32[$args_i93 >> 2] = 11;
 $arraydecay_i_i95 = $args_i93 + 4 | 0;
 HEAP32[$arraydecay_i_i95 >> 2] = 17808;
 HEAP32[$args_i93 + 8 >> 2] = __ZTIi;
 HEAP32[$args_i93 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 20 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 24 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 28 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 32 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 36 >> 2] = __ZTIf;
 HEAP32[$args_i93 + 40 >> 2] = __ZTIh;
 HEAP32[$args_i93 + 44 >> 2] = __ZTIf;
 __embind_register_function(9936, 11, $arraydecay_i_i95 | 0, 11184, 22, 22);
 HEAP32[$args_i105 >> 2] = 2;
 $arraydecay_i_i107 = $args_i105 + 4 | 0;
 HEAP32[$arraydecay_i_i107 >> 2] = 17808;
 HEAP32[$args_i105 + 8 >> 2] = __ZTIi;
 __embind_register_function(9880, 2, $arraydecay_i_i107 | 0, 11208, 24, 222);
 HEAP32[$args_i109 >> 2] = 5;
 $arraydecay_i_i111 = $args_i109 + 4 | 0;
 HEAP32[$arraydecay_i_i111 >> 2] = 17816;
 HEAP32[$args_i109 + 8 >> 2] = __ZTIi;
 HEAP32[$args_i109 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i109 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i109 + 20 >> 2] = __ZTIf;
 __embind_register_function(9840, 5, $arraydecay_i_i111 | 0, 11320, 22, 22);
 HEAP32[$args_i116 >> 2] = 2;
 $arraydecay_i_i118 = $args_i116 + 4 | 0;
 HEAP32[$arraydecay_i_i118 >> 2] = 17816;
 HEAP32[$args_i116 + 8 >> 2] = __ZTIf;
 __embind_register_function(9808, 2, $arraydecay_i_i118 | 0, 11336, 22, 22);
 HEAP32[$args_i120 >> 2] = 2;
 $arraydecay_i_i122 = $args_i120 + 4 | 0;
 HEAP32[$arraydecay_i_i122 >> 2] = 17816;
 HEAP32[$args_i120 + 8 >> 2] = 19120;
 __embind_register_function(9768, 2, $arraydecay_i_i122 | 0, 11344, 48, 128);
 HEAP32[$args_i124 >> 2] = 5;
 $arraydecay_i_i126 = $args_i124 + 4 | 0;
 HEAP32[$arraydecay_i_i126 >> 2] = 17808;
 HEAP32[$args_i124 + 8 >> 2] = __ZTIi;
 HEAP32[$args_i124 + 12 >> 2] = __ZTIf;
 HEAP32[$args_i124 + 16 >> 2] = __ZTIf;
 HEAP32[$args_i124 + 20 >> 2] = __ZTIf;
 __embind_register_function(9672, 5, $arraydecay_i_i126 | 0, 11200, 22, 22);
 HEAP32[$args_i131 >> 2] = 2;
 $arraydecay_i_i133 = $args_i131 + 4 | 0;
 HEAP32[$arraydecay_i_i133 >> 2] = 17808;
 HEAP32[$args_i131 + 8 >> 2] = __ZTIf;
 __embind_register_function(9640, 2, $arraydecay_i_i133 | 0, 11280, 22, 24);
 HEAP32[$args_i135 >> 2] = 2;
 $arraydecay_i_i137 = $args_i135 + 4 | 0;
 HEAP32[$arraydecay_i_i137 >> 2] = 17808;
 HEAP32[$args_i135 + 8 >> 2] = __ZTIf;
 __embind_register_function(9520, 2, $arraydecay_i_i137 | 0, 11280, 22, 36);
 HEAP32[$args_i139 >> 2] = 2;
 $arraydecay_i_i141 = $args_i139 + 4 | 0;
 HEAP32[$arraydecay_i_i141 >> 2] = 17808;
 HEAP32[$args_i139 + 8 >> 2] = __ZTIf;
 __embind_register_function(9448, 2, $arraydecay_i_i141 | 0, 11280, 22, 42);
 HEAP32[$args_i143 >> 2] = 2;
 $arraydecay_i_i145 = $args_i143 + 4 | 0;
 HEAP32[$arraydecay_i_i145 >> 2] = 17808;
 HEAP32[$args_i143 + 8 >> 2] = __ZTIf;
 __embind_register_function(9384, 2, $arraydecay_i_i145 | 0, 11280, 22, 40);
 HEAP32[$args_i147 >> 2] = 2;
 $arraydecay_i_i149 = $args_i147 + 4 | 0;
 HEAP32[$arraydecay_i_i149 >> 2] = 17808;
 HEAP32[$args_i147 + 8 >> 2] = __ZTIf;
 __embind_register_function(9272, 2, $arraydecay_i_i149 | 0, 11280, 22, 32);
 HEAP32[$args_i151 >> 2] = 2;
 $arraydecay_i_i153 = $args_i151 + 4 | 0;
 HEAP32[$arraydecay_i_i153 >> 2] = 17808;
 HEAP32[$args_i151 + 8 >> 2] = __ZTIf;
 __embind_register_function(9232, 2, $arraydecay_i_i153 | 0, 11280, 22, 34);
 HEAP32[$args_i155 >> 2] = 2;
 $arraydecay_i_i157 = $args_i155 + 4 | 0;
 HEAP32[$arraydecay_i_i157 >> 2] = 17808;
 HEAP32[$args_i155 + 8 >> 2] = __ZTIf;
 __embind_register_function(9192, 2, $arraydecay_i_i157 | 0, 11280, 22, 38);
 HEAP32[$args_i159 >> 2] = 2;
 $arraydecay_i_i161 = $args_i159 + 4 | 0;
 HEAP32[$arraydecay_i_i161 >> 2] = 17808;
 HEAP32[$args_i159 + 8 >> 2] = __ZTIf;
 __embind_register_function(9152, 2, $arraydecay_i_i161 | 0, 11280, 22, 22);
 HEAP32[$args_i163 >> 2] = 2;
 $arraydecay_i_i165 = $args_i163 + 4 | 0;
 HEAP32[$arraydecay_i_i165 >> 2] = 17808;
 HEAP32[$args_i163 + 8 >> 2] = __ZTIf;
 __embind_register_function(9064, 2, $arraydecay_i_i165 | 0, 11280, 22, 30);
 HEAP32[$args_i167 >> 2] = 2;
 $arraydecay_i_i169 = $args_i167 + 4 | 0;
 HEAP32[$arraydecay_i_i169 >> 2] = 17808;
 HEAP32[$args_i167 + 8 >> 2] = __ZTIf;
 __embind_register_function(8920, 2, $arraydecay_i_i169 | 0, 11280, 22, 44);
 HEAP32[$args_i171 >> 2] = 2;
 $arraydecay_i_i173 = $args_i171 + 4 | 0;
 HEAP32[$arraydecay_i_i173 >> 2] = 17808;
 HEAP32[$args_i171 + 8 >> 2] = __ZTIf;
 __embind_register_function(8888, 2, $arraydecay_i_i173 | 0, 11280, 22, 28);
 HEAP32[$args_i175 >> 2] = 2;
 $arraydecay_i_i177 = $args_i175 + 4 | 0;
 HEAP32[$arraydecay_i_i177 >> 2] = 17808;
 HEAP32[$args_i175 + 8 >> 2] = __ZTIf;
 __embind_register_function(8808, 2, $arraydecay_i_i177 | 0, 11280, 22, 46);
 HEAP32[$args_i179 >> 2] = 2;
 $arraydecay_i_i181 = $args_i179 + 4 | 0;
 HEAP32[$arraydecay_i_i181 >> 2] = 17808;
 HEAP32[$args_i179 + 8 >> 2] = __ZTIf;
 __embind_register_function(8728, 2, $arraydecay_i_i181 | 0, 11280, 22, 26);
 HEAP32[$args_i183 >> 2] = 2;
 $arraydecay_i_i185 = $args_i183 + 4 | 0;
 HEAP32[$arraydecay_i_i185 >> 2] = 17808;
 HEAP32[$args_i183 + 8 >> 2] = __ZTIh;
 __embind_register_function(8696, 2, $arraydecay_i_i185 | 0, 11216, 28, 152);
 HEAP32[$args_i187 >> 2] = 1;
 $arraydecay_i_i189 = $args_i187 + 4 | 0;
 HEAP32[$arraydecay_i_i189 >> 2] = 17808;
 __embind_register_function(8640, 1, $arraydecay_i_i189 | 0, 11168, 118, 24);
 HEAP32[$args_i190 >> 2] = 1;
 $arraydecay_i_i192 = $args_i190 + 4 | 0;
 HEAP32[$arraydecay_i_i192 >> 2] = 17808;
 __embind_register_function(8536, 1, $arraydecay_i_i192 | 0, 11168, 118, 32);
 HEAP32[$args_i193 >> 2] = 1;
 $arraydecay_i_i195 = $args_i193 + 4 | 0;
 HEAP32[$arraydecay_i_i195 >> 2] = 17808;
 __embind_register_function(8456, 1, $arraydecay_i_i195 | 0, 11168, 118, 34);
 HEAP32[$args_i196 >> 2] = 1;
 $arraydecay_i_i198 = $args_i196 + 4 | 0;
 HEAP32[$arraydecay_i_i198 >> 2] = 17808;
 __embind_register_function(8384, 1, $arraydecay_i_i198 | 0, 11168, 118, 30);
 HEAP32[$args_i199 >> 2] = 1;
 $arraydecay_i_i201 = $args_i199 + 4 | 0;
 HEAP32[$arraydecay_i_i201 >> 2] = 17808;
 __embind_register_function(8352, 1, $arraydecay_i_i201 | 0, 11168, 118, 36);
 HEAP32[$args_i202 >> 2] = 1;
 $arraydecay_i_i204 = $args_i202 + 4 | 0;
 HEAP32[$arraydecay_i_i204 >> 2] = 17808;
 __embind_register_function(8248, 1, $arraydecay_i_i204 | 0, 11168, 118, 28);
 STACKTOP = sp;
 return;
}
function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $0 = 0, $add_ptr = 0, $1 = 0, $2 = 0, $3 = 0, $add_ptr5 = 0, $4 = 0, $add6 = 0, $5 = 0, $shr = 0, $8 = 0, $10 = 0, $11 = 0, $fd43 = 0, $fd53_pre_phi = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $bk70 = 0, $fd74 = 0, $add_ptr5_sum24 = 0, $27 = 0, $28 = 0, $arrayidx90 = 0, $29 = 0, $RP_0 = 0, $R_0 = 0, $arrayidx95 = 0, $30 = 0, $arrayidx100 = 0, $31 = 0, $R_1 = 0, $34 = 0, $arrayidx118 = 0, $arrayidx138 = 0, $41 = 0, $add_ptr5_sum26 = 0, $42 = 0, $45 = 0, $48 = 0, $49 = 0, $psize_addr_0 = 0, $p_addr_0 = 0, $51 = 0, $52 = 0, $53 = 0, $add229 = 0, $add246 = 0, $add255 = 0, $shr256 = 0, $61 = 0, $63 = 0, $64 = 0, $fd304 = 0, $fd315_pre_phi = 0, $70 = 0, $72 = 0, $74 = 0, $76 = 0, $bk337 = 0, $fd341 = 0, $80 = 0, $81 = 0, $arrayidx361 = 0, $82 = 0, $RP354_0 = 0, $R325_0 = 0, $arrayidx368 = 0, $83 = 0, $arrayidx373 = 0, $84 = 0, $R325_1 = 0, $87 = 0, $arrayidx396 = 0, $arrayidx417 = 0, $94 = 0, $95 = 0, $98 = 0, $psize_addr_1 = 0, $shr501 = 0, $shl508 = 0, $104 = 0, $105 = 0, $shl513 = 0, $106 = 0, $107 = 0, $_pre_phi = 0, $F511_0 = 0, $110 = 0, $shr540 = 0, $and550 = 0, $shl551 = 0, $and554 = 0, $shl556 = 0, $and559 = 0, $add564 = 0, $I539_0 = 0, $arrayidx573 = 0, $112 = 0, $shl580 = 0, $113 = 0, $cond = 0, $K591_043 = 0, $T_042 = 0, $arrayidx607 = 0, $116 = 0, $T_0_lcssa = 0, $fd626 = 0, $119 = 0, $121 = 0;
 $0 = $p;
 $add_ptr = $0 + $psize | 0;
 $1 = $add_ptr;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do {
  if (($2 & 1 | 0) == 0) {
   $3 = HEAP32[$p >> 2] | 0;
   if (($2 & 3 | 0) == 0) {
    return;
   }
   $add_ptr5 = $0 + (-$3 | 0) | 0;
   $4 = $add_ptr5;
   $add6 = $3 + $psize | 0;
   $5 = HEAP32[4956] | 0;
   if ($add_ptr5 >>> 0 < $5 >>> 0) {
    _abort();
   }
   if (($4 | 0) == (HEAP32[4957] | 0)) {
    $48 = $0 + ($psize + 4) | 0;
    $49 = HEAP32[$48 >> 2] | 0;
    if (($49 & 3 | 0) != 3) {
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
     break;
    }
    HEAP32[4954] = $add6;
    HEAP32[$48 >> 2] = $49 & -2;
    HEAP32[$0 + (4 - $3) >> 2] = $add6 | 1;
    HEAP32[$add_ptr >> 2] = $add6;
    return;
   }
   $shr = $3 >>> 3;
   if ($3 >>> 0 < 256 >>> 0) {
    $8 = HEAP32[$0 + (8 - $3) >> 2] | 0;
    $10 = HEAP32[$0 + (12 - $3) >> 2] | 0;
    $11 = 19848 + ($shr << 1 << 2) | 0;
    if (($8 | 0) != ($11 | 0)) {
     if ($8 >>> 0 < $5 >>> 0) {
      _abort();
     }
     if ((HEAP32[$8 + 12 >> 2] | 0) != ($4 | 0)) {
      _abort();
     }
    }
    if (($10 | 0) == ($8 | 0)) {
     HEAP32[4952] = HEAP32[4952] & ~(1 << $shr);
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
     break;
    }
    if (($10 | 0) == ($11 | 0)) {
     $fd53_pre_phi = $10 + 8 | 0;
    } else {
     if ($10 >>> 0 < $5 >>> 0) {
      _abort();
     }
     $fd43 = $10 + 8 | 0;
     if ((HEAP32[$fd43 >> 2] | 0) == ($4 | 0)) {
      $fd53_pre_phi = $fd43;
     } else {
      _abort();
     }
    }
    HEAP32[$8 + 12 >> 2] = $10;
    HEAP32[$fd53_pre_phi >> 2] = $8;
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
    break;
   }
   $17 = $add_ptr5;
   $19 = HEAP32[$0 + (24 - $3) >> 2] | 0;
   $21 = HEAP32[$0 + (12 - $3) >> 2] | 0;
   do {
    if (($21 | 0) == ($17 | 0)) {
     $add_ptr5_sum24 = 16 - $3 | 0;
     $27 = $0 + ($add_ptr5_sum24 + 4) | 0;
     $28 = HEAP32[$27 >> 2] | 0;
     if (($28 | 0) == 0) {
      $arrayidx90 = $0 + $add_ptr5_sum24 | 0;
      $29 = HEAP32[$arrayidx90 >> 2] | 0;
      if (($29 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $29;
       $RP_0 = $arrayidx90;
      }
     } else {
      $R_0 = $28;
      $RP_0 = $27;
     }
     while (1) {
      $arrayidx95 = $R_0 + 20 | 0;
      $30 = HEAP32[$arrayidx95 >> 2] | 0;
      if (($30 | 0) != 0) {
       $R_0 = $30;
       $RP_0 = $arrayidx95;
       continue;
      }
      $arrayidx100 = $R_0 + 16 | 0;
      $31 = HEAP32[$arrayidx100 >> 2] | 0;
      if (($31 | 0) == 0) {
       break;
      } else {
       $R_0 = $31;
       $RP_0 = $arrayidx100;
      }
     }
     if ($RP_0 >>> 0 < $5 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $23 = HEAP32[$0 + (8 - $3) >> 2] | 0;
     if ($23 >>> 0 < $5 >>> 0) {
      _abort();
     }
     $bk70 = $23 + 12 | 0;
     if ((HEAP32[$bk70 >> 2] | 0) != ($17 | 0)) {
      _abort();
     }
     $fd74 = $21 + 8 | 0;
     if ((HEAP32[$fd74 >> 2] | 0) == ($17 | 0)) {
      HEAP32[$bk70 >> 2] = $21;
      HEAP32[$fd74 >> 2] = $23;
      $R_1 = $21;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($19 | 0) == 0) {
    $p_addr_0 = $4;
    $psize_addr_0 = $add6;
   } else {
    $34 = HEAP32[$0 + (28 - $3) >> 2] | 0;
    $arrayidx118 = 20112 + ($34 << 2) | 0;
    if (($17 | 0) == (HEAP32[$arrayidx118 >> 2] | 0)) {
     HEAP32[$arrayidx118 >> 2] = $R_1;
     if (($R_1 | 0) == 0) {
      HEAP32[4953] = HEAP32[4953] & ~(1 << $34);
      $p_addr_0 = $4;
      $psize_addr_0 = $add6;
      break;
     }
    } else {
     if ($19 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     }
     $arrayidx138 = $19 + 16 | 0;
     if ((HEAP32[$arrayidx138 >> 2] | 0) == ($17 | 0)) {
      HEAP32[$arrayidx138 >> 2] = $R_1;
     } else {
      HEAP32[$19 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $p_addr_0 = $4;
      $psize_addr_0 = $add6;
      break;
     }
    }
    $41 = HEAP32[4956] | 0;
    if ($R_1 >>> 0 < $41 >>> 0) {
     _abort();
    }
    HEAP32[$R_1 + 24 >> 2] = $19;
    $add_ptr5_sum26 = 16 - $3 | 0;
    $42 = HEAP32[$0 + $add_ptr5_sum26 >> 2] | 0;
    do {
     if (($42 | 0) != 0) {
      if ($42 >>> 0 < $41 >>> 0) {
       _abort();
      } else {
       HEAP32[$R_1 + 16 >> 2] = $42;
       HEAP32[$42 + 24 >> 2] = $R_1;
       break;
      }
     }
    } while (0);
    $45 = HEAP32[$0 + ($add_ptr5_sum26 + 4) >> 2] | 0;
    if (($45 | 0) == 0) {
     $p_addr_0 = $4;
     $psize_addr_0 = $add6;
    } else {
     if ($45 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 20 >> 2] = $45;
      HEAP32[$45 + 24 >> 2] = $R_1;
      $p_addr_0 = $4;
      $psize_addr_0 = $add6;
      break;
     }
    }
   }
  } else {
   $p_addr_0 = $p;
   $psize_addr_0 = $psize;
  }
 } while (0);
 $51 = HEAP32[4956] | 0;
 if ($add_ptr >>> 0 < $51 >>> 0) {
  _abort();
 }
 $52 = $0 + ($psize + 4) | 0;
 $53 = HEAP32[$52 >> 2] | 0;
 if (($53 & 2 | 0) == 0) {
  if (($1 | 0) == (HEAP32[4958] | 0)) {
   $add229 = (HEAP32[4955] | 0) + $psize_addr_0 | 0;
   HEAP32[4955] = $add229;
   HEAP32[4958] = $p_addr_0;
   HEAP32[$p_addr_0 + 4 >> 2] = $add229 | 1;
   if (($p_addr_0 | 0) != (HEAP32[4957] | 0)) {
    return;
   }
   HEAP32[4957] = 0;
   HEAP32[4954] = 0;
   return;
  }
  if (($1 | 0) == (HEAP32[4957] | 0)) {
   $add246 = (HEAP32[4954] | 0) + $psize_addr_0 | 0;
   HEAP32[4954] = $add246;
   HEAP32[4957] = $p_addr_0;
   HEAP32[$p_addr_0 + 4 >> 2] = $add246 | 1;
   HEAP32[$p_addr_0 + $add246 >> 2] = $add246;
   return;
  }
  $add255 = ($53 & -8) + $psize_addr_0 | 0;
  $shr256 = $53 >>> 3;
  do {
   if ($53 >>> 0 < 256 >>> 0) {
    $61 = HEAP32[$0 + ($psize + 8) >> 2] | 0;
    $63 = HEAP32[$0 + ($psize + 12) >> 2] | 0;
    $64 = 19848 + ($shr256 << 1 << 2) | 0;
    if (($61 | 0) != ($64 | 0)) {
     if ($61 >>> 0 < $51 >>> 0) {
      _abort();
     }
     if ((HEAP32[$61 + 12 >> 2] | 0) != ($1 | 0)) {
      _abort();
     }
    }
    if (($63 | 0) == ($61 | 0)) {
     HEAP32[4952] = HEAP32[4952] & ~(1 << $shr256);
     break;
    }
    if (($63 | 0) == ($64 | 0)) {
     $fd315_pre_phi = $63 + 8 | 0;
    } else {
     if ($63 >>> 0 < $51 >>> 0) {
      _abort();
     }
     $fd304 = $63 + 8 | 0;
     if ((HEAP32[$fd304 >> 2] | 0) == ($1 | 0)) {
      $fd315_pre_phi = $fd304;
     } else {
      _abort();
     }
    }
    HEAP32[$61 + 12 >> 2] = $63;
    HEAP32[$fd315_pre_phi >> 2] = $61;
   } else {
    $70 = $add_ptr;
    $72 = HEAP32[$0 + ($psize + 24) >> 2] | 0;
    $74 = HEAP32[$0 + ($psize + 12) >> 2] | 0;
    do {
     if (($74 | 0) == ($70 | 0)) {
      $80 = $0 + ($psize + 20) | 0;
      $81 = HEAP32[$80 >> 2] | 0;
      if (($81 | 0) == 0) {
       $arrayidx361 = $0 + ($psize + 16) | 0;
       $82 = HEAP32[$arrayidx361 >> 2] | 0;
       if (($82 | 0) == 0) {
        $R325_1 = 0;
        break;
       } else {
        $R325_0 = $82;
        $RP354_0 = $arrayidx361;
       }
      } else {
       $R325_0 = $81;
       $RP354_0 = $80;
      }
      while (1) {
       $arrayidx368 = $R325_0 + 20 | 0;
       $83 = HEAP32[$arrayidx368 >> 2] | 0;
       if (($83 | 0) != 0) {
        $R325_0 = $83;
        $RP354_0 = $arrayidx368;
        continue;
       }
       $arrayidx373 = $R325_0 + 16 | 0;
       $84 = HEAP32[$arrayidx373 >> 2] | 0;
       if (($84 | 0) == 0) {
        break;
       } else {
        $R325_0 = $84;
        $RP354_0 = $arrayidx373;
       }
      }
      if ($RP354_0 >>> 0 < $51 >>> 0) {
       _abort();
      } else {
       HEAP32[$RP354_0 >> 2] = 0;
       $R325_1 = $R325_0;
       break;
      }
     } else {
      $76 = HEAP32[$0 + ($psize + 8) >> 2] | 0;
      if ($76 >>> 0 < $51 >>> 0) {
       _abort();
      }
      $bk337 = $76 + 12 | 0;
      if ((HEAP32[$bk337 >> 2] | 0) != ($70 | 0)) {
       _abort();
      }
      $fd341 = $74 + 8 | 0;
      if ((HEAP32[$fd341 >> 2] | 0) == ($70 | 0)) {
       HEAP32[$bk337 >> 2] = $74;
       HEAP32[$fd341 >> 2] = $76;
       $R325_1 = $74;
       break;
      } else {
       _abort();
      }
     }
    } while (0);
    if (($72 | 0) != 0) {
     $87 = HEAP32[$0 + ($psize + 28) >> 2] | 0;
     $arrayidx396 = 20112 + ($87 << 2) | 0;
     if (($70 | 0) == (HEAP32[$arrayidx396 >> 2] | 0)) {
      HEAP32[$arrayidx396 >> 2] = $R325_1;
      if (($R325_1 | 0) == 0) {
       HEAP32[4953] = HEAP32[4953] & ~(1 << $87);
       break;
      }
     } else {
      if ($72 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      }
      $arrayidx417 = $72 + 16 | 0;
      if ((HEAP32[$arrayidx417 >> 2] | 0) == ($70 | 0)) {
       HEAP32[$arrayidx417 >> 2] = $R325_1;
      } else {
       HEAP32[$72 + 20 >> 2] = $R325_1;
      }
      if (($R325_1 | 0) == 0) {
       break;
      }
     }
     $94 = HEAP32[4956] | 0;
     if ($R325_1 >>> 0 < $94 >>> 0) {
      _abort();
     }
     HEAP32[$R325_1 + 24 >> 2] = $72;
     $95 = HEAP32[$0 + ($psize + 16) >> 2] | 0;
     do {
      if (($95 | 0) != 0) {
       if ($95 >>> 0 < $94 >>> 0) {
        _abort();
       } else {
        HEAP32[$R325_1 + 16 >> 2] = $95;
        HEAP32[$95 + 24 >> 2] = $R325_1;
        break;
       }
      }
     } while (0);
     $98 = HEAP32[$0 + ($psize + 20) >> 2] | 0;
     if (($98 | 0) != 0) {
      if ($98 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
       _abort();
      } else {
       HEAP32[$R325_1 + 20 >> 2] = $98;
       HEAP32[$98 + 24 >> 2] = $R325_1;
       break;
      }
     }
    }
   }
  } while (0);
  HEAP32[$p_addr_0 + 4 >> 2] = $add255 | 1;
  HEAP32[$p_addr_0 + $add255 >> 2] = $add255;
  if (($p_addr_0 | 0) == (HEAP32[4957] | 0)) {
   HEAP32[4954] = $add255;
   return;
  } else {
   $psize_addr_1 = $add255;
  }
 } else {
  HEAP32[$52 >> 2] = $53 & -2;
  HEAP32[$p_addr_0 + 4 >> 2] = $psize_addr_0 | 1;
  HEAP32[$p_addr_0 + $psize_addr_0 >> 2] = $psize_addr_0;
  $psize_addr_1 = $psize_addr_0;
 }
 $shr501 = $psize_addr_1 >>> 3;
 if ($psize_addr_1 >>> 0 < 256 >>> 0) {
  $shl508 = $shr501 << 1;
  $104 = 19848 + ($shl508 << 2) | 0;
  $105 = HEAP32[4952] | 0;
  $shl513 = 1 << $shr501;
  if (($105 & $shl513 | 0) == 0) {
   HEAP32[4952] = $105 | $shl513;
   $F511_0 = $104;
   $_pre_phi = 19848 + ($shl508 + 2 << 2) | 0;
  } else {
   $106 = 19848 + ($shl508 + 2 << 2) | 0;
   $107 = HEAP32[$106 >> 2] | 0;
   if ($107 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
    _abort();
   } else {
    $F511_0 = $107;
    $_pre_phi = $106;
   }
  }
  HEAP32[$_pre_phi >> 2] = $p_addr_0;
  HEAP32[$F511_0 + 12 >> 2] = $p_addr_0;
  HEAP32[$p_addr_0 + 8 >> 2] = $F511_0;
  HEAP32[$p_addr_0 + 12 >> 2] = $104;
  return;
 }
 $110 = $p_addr_0;
 $shr540 = $psize_addr_1 >>> 8;
 if (($shr540 | 0) == 0) {
  $I539_0 = 0;
 } else {
  if ($psize_addr_1 >>> 0 > 16777215 >>> 0) {
   $I539_0 = 31;
  } else {
   $and550 = ($shr540 + 1048320 | 0) >>> 16 & 8;
   $shl551 = $shr540 << $and550;
   $and554 = ($shl551 + 520192 | 0) >>> 16 & 4;
   $shl556 = $shl551 << $and554;
   $and559 = ($shl556 + 245760 | 0) >>> 16 & 2;
   $add564 = 14 - ($and554 | $and550 | $and559) + ($shl556 << $and559 >>> 15) | 0;
   $I539_0 = $psize_addr_1 >>> (($add564 + 7 | 0) >>> 0) & 1 | $add564 << 1;
  }
 }
 $arrayidx573 = 20112 + ($I539_0 << 2) | 0;
 HEAP32[$p_addr_0 + 28 >> 2] = $I539_0;
 HEAP32[$p_addr_0 + 20 >> 2] = 0;
 HEAP32[$p_addr_0 + 16 >> 2] = 0;
 $112 = HEAP32[4953] | 0;
 $shl580 = 1 << $I539_0;
 if (($112 & $shl580 | 0) == 0) {
  HEAP32[4953] = $112 | $shl580;
  HEAP32[$arrayidx573 >> 2] = $110;
  HEAP32[$p_addr_0 + 24 >> 2] = $arrayidx573;
  HEAP32[$p_addr_0 + 12 >> 2] = $p_addr_0;
  HEAP32[$p_addr_0 + 8 >> 2] = $p_addr_0;
  return;
 }
 $113 = HEAP32[$arrayidx573 >> 2] | 0;
 if (($I539_0 | 0) == 31) {
  $cond = 0;
 } else {
  $cond = 25 - ($I539_0 >>> 1) | 0;
 }
 L194 : do {
  if ((HEAP32[$113 + 4 >> 2] & -8 | 0) == ($psize_addr_1 | 0)) {
   $T_0_lcssa = $113;
  } else {
   $T_042 = $113;
   $K591_043 = $psize_addr_1 << $cond;
   while (1) {
    $arrayidx607 = $T_042 + 16 + ($K591_043 >>> 31 << 2) | 0;
    $116 = HEAP32[$arrayidx607 >> 2] | 0;
    if (($116 | 0) == 0) {
     break;
    }
    if ((HEAP32[$116 + 4 >> 2] & -8 | 0) == ($psize_addr_1 | 0)) {
     $T_0_lcssa = $116;
     break L194;
    } else {
     $T_042 = $116;
     $K591_043 = $K591_043 << 1;
    }
   }
   if ($arrayidx607 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
    _abort();
   }
   HEAP32[$arrayidx607 >> 2] = $110;
   HEAP32[$p_addr_0 + 24 >> 2] = $T_042;
   HEAP32[$p_addr_0 + 12 >> 2] = $p_addr_0;
   HEAP32[$p_addr_0 + 8 >> 2] = $p_addr_0;
   return;
  }
 } while (0);
 $fd626 = $T_0_lcssa + 8 | 0;
 $119 = HEAP32[$fd626 >> 2] | 0;
 $121 = HEAP32[4956] | 0;
 if (!($T_0_lcssa >>> 0 >= $121 >>> 0 & $119 >>> 0 >= $121 >>> 0)) {
  _abort();
 }
 HEAP32[$119 + 12 >> 2] = $110;
 HEAP32[$fd626 >> 2] = $110;
 HEAP32[$p_addr_0 + 8 >> 2] = $119;
 HEAP32[$p_addr_0 + 12 >> 2] = $T_0_lcssa;
 HEAP32[$p_addr_0 + 24 >> 2] = 0;
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e_0, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $sub_ptr_div_i_i = 0, $0 = 0, $call1 = 0, $exception_i = 0, $__stat_hold_sroa_0_0_load140 = 0, $__status_0 = 0, $cmp6182 = 0, $__n_does_match_0_lcssa = 0, $__n_might_match_0_lcssa = 0, $__sbuf__i_i_i = 0, $4 = 0, $__ky_0186 = 0, $__st_0185 = 0, $__n_does_match_0184 = 0, $__n_might_match_0183 = 0, $5 = 0, $cond_i_i = 0, $__n_might_match_1 = 0, $__n_does_match_1 = 0, $incdec_ptr = 0, $__e_sroa_0_0_ph = 0, $__n_might_match_2_ph = 0, $__n_does_match_2_ph = 0, $__indx_0_ph = 0, $cmp14 = 0, $__e_sroa_0_0 = 0, $__indx_0 = 0, $7 = 0, $8 = 0, $retval_0_i_i_i_i = 0, $13 = 0, $14 = 0, $retval_0_i_i12_i_i = 0, $cmp_i1_i13_i_i = 0, $__e_sroa_0_1 = 0, $_pre_i15_i_i126 = 0, $19 = 0, $20 = 0, $21 = 0, $retval_0_i_i = 0, $__c_0 = 0, $inc78_pre = 0, $__ky22_0162_us = 0, $__consume_0_off0161_us = 0, $__st_1159_us = 0, $__n_does_match_3158_us = 0, $__n_might_match_3157_us = 0, $28 = 0, $tobool_i_i_i_i_us = 0, $cond_i_i_i_us = 0, $cond_i_us = 0, $__n_might_match_4_us = 0, $__n_does_match_4_us = 0, $__consume_1_off0_us = 0, $incdec_ptr48_us = 0, $__ky22_0162 = 0, $__consume_0_off0161 = 0, $__st_1159 = 0, $__n_does_match_3158 = 0, $__n_might_match_3157 = 0, $__size__i_i_i_i = 0, $cond_i_i_i = 0, $37 = 0, $cond_i = 0, $__n_might_match_4 = 0, $__n_does_match_4 = 0, $__consume_1_off0 = 0, $incdec_ptr48 = 0, $__consume_0_off0_lcssa = 0, $__n_does_match_3_lcssa = 0, $__n_might_match_3_lcssa = 0, $39 = 0, $__ninp__i_i76 = 0, $40 = 0, $__ky58_0170 = 0, $__st_2169 = 0, $__n_does_match_5168 = 0, $45 = 0, $cond_i93 = 0, $__n_does_match_6 = 0, $incdec_ptr72 = 0, $47 = 0, $retval_0_i_i_i_i105 = 0, $52 = 0, $53 = 0, $retval_0_i_i12_i_i123 = 0, $__kb_addr_0149 = 0, $__st_3148 = 0, $incdec_ptr92 = 0, $__kb_addr_0146 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 $sub_ptr_div_i_i = ($__ke - $__kb | 0) / 12 | 0;
 $0 = sp | 0;
 if ($sub_ptr_div_i_i >>> 0 > 100 >>> 0) {
  $call1 = _malloc($sub_ptr_div_i_i) | 0;
  if (($call1 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
   return 0;
  } else {
   $__status_0 = $call1;
   $__stat_hold_sroa_0_0_load140 = $call1;
  }
 } else {
  $__status_0 = $0;
  $__stat_hold_sroa_0_0_load140 = 0;
 }
 $cmp6182 = ($__kb | 0) == ($__ke | 0);
 if ($cmp6182) {
  $__n_might_match_0_lcssa = $sub_ptr_div_i_i;
  $__n_does_match_0_lcssa = 0;
 } else {
  $__n_might_match_0183 = $sub_ptr_div_i_i;
  $__n_does_match_0184 = 0;
  $__st_0185 = $__status_0;
  $__ky_0186 = $__kb;
  while (1) {
   $5 = HEAP8[$__ky_0186 >> 0] | 0;
   if (($5 & 1) == 0) {
    $cond_i_i = ($5 & 255) >>> 1;
   } else {
    $cond_i_i = HEAP32[$__ky_0186 + 4 >> 2] | 0;
   }
   if (($cond_i_i | 0) == 0) {
    HEAP8[$__st_0185 >> 0] = 2;
    $__n_does_match_1 = $__n_does_match_0184 + 1 | 0;
    $__n_might_match_1 = $__n_might_match_0183 - 1 | 0;
   } else {
    HEAP8[$__st_0185 >> 0] = 1;
    $__n_does_match_1 = $__n_does_match_0184;
    $__n_might_match_1 = $__n_might_match_0183;
   }
   $incdec_ptr = $__ky_0186 + 12 | 0;
   if (($incdec_ptr | 0) == ($__ke | 0)) {
    $__n_might_match_0_lcssa = $__n_might_match_1;
    $__n_does_match_0_lcssa = $__n_does_match_1;
    break;
   } else {
    $__n_might_match_0183 = $__n_might_match_1;
    $__n_does_match_0184 = $__n_does_match_1;
    $__st_0185 = $__st_0185 + 1 | 0;
    $__ky_0186 = $incdec_ptr;
   }
  }
 }
 $__sbuf__i_i_i = $__b | 0;
 $4 = $__ct;
 $__indx_0_ph = 0;
 $__n_does_match_2_ph = $__n_does_match_0_lcssa;
 $__n_might_match_2_ph = $__n_might_match_0_lcssa;
 $__e_sroa_0_0_ph = $__e_0;
 L18 : while (1) {
  $cmp14 = ($__n_might_match_2_ph | 0) != 0;
  $__indx_0 = $__indx_0_ph;
  $__e_sroa_0_0 = $__e_sroa_0_0_ph;
  while (1) {
   $7 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($7 | 0) == 0) {
     $13 = 1;
    } else {
     $8 = HEAP32[$7 + 12 >> 2] | 0;
     if (($8 | 0) == (HEAP32[$7 + 16 >> 2] | 0)) {
      $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7) | 0;
     } else {
      $retval_0_i_i_i_i = HEAP32[$8 >> 2] | 0;
     }
     if (($retval_0_i_i_i_i | 0) == -1) {
      HEAP32[$__sbuf__i_i_i >> 2] = 0;
      $13 = 1;
      break;
     } else {
      $13 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
      break;
     }
    }
   } while (0);
   if (($__e_sroa_0_0 | 0) == 0) {
    $19 = 1;
    $_pre_i15_i_i126 = 0;
    $__e_sroa_0_1 = 0;
   } else {
    $14 = HEAP32[$__e_sroa_0_0 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$__e_sroa_0_0 + 16 >> 2] | 0)) {
     $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_0) | 0;
    } else {
     $retval_0_i_i12_i_i = HEAP32[$14 >> 2] | 0;
    }
    $cmp_i1_i13_i_i = ($retval_0_i_i12_i_i | 0) == -1;
    $19 = $cmp_i1_i13_i_i ? 1 : 0;
    $_pre_i15_i_i126 = $cmp_i1_i13_i_i ? 0 : $__e_sroa_0_0;
    $__e_sroa_0_1 = $cmp_i1_i13_i_i ? 0 : $__e_sroa_0_0;
   }
   $20 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   if (!(($13 ^ $19) & $cmp14)) {
    break L18;
   }
   $21 = HEAP32[$20 + 12 >> 2] | 0;
   if (($21 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) {
    $retval_0_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 255]($20) | 0;
   } else {
    $retval_0_i_i = HEAP32[$21 >> 2] | 0;
   }
   if ($__case_sensitive) {
    $__c_0 = $retval_0_i_i;
   } else {
    $__c_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($__ct, $retval_0_i_i) | 0;
   }
   $inc78_pre = $__indx_0 + 1 | 0;
   if ($cmp6182) {
    $__indx_0 = $inc78_pre;
    $__e_sroa_0_0 = $__e_sroa_0_1;
   } else {
    break;
   }
  }
  if ($__case_sensitive) {
   $__n_might_match_3157_us = $__n_might_match_2_ph;
   $__n_does_match_3158_us = $__n_does_match_2_ph;
   $__st_1159_us = $__status_0;
   $__consume_0_off0161_us = 0;
   $__ky22_0162_us = $__kb;
   while (1) {
    do {
     if ((HEAP8[$__st_1159_us >> 0] | 0) == 1) {
      $28 = HEAP8[$__ky22_0162_us >> 0] | 0;
      $tobool_i_i_i_i_us = ($28 & 1) == 0;
      if ($tobool_i_i_i_i_us) {
       $cond_i_i_i_us = $__ky22_0162_us + 4 | 0;
      } else {
       $cond_i_i_i_us = HEAP32[$__ky22_0162_us + 8 >> 2] | 0;
      }
      if (($__c_0 | 0) != (HEAP32[$cond_i_i_i_us + ($__indx_0 << 2) >> 2] | 0)) {
       HEAP8[$__st_1159_us >> 0] = 0;
       $__consume_1_off0_us = $__consume_0_off0161_us;
       $__n_does_match_4_us = $__n_does_match_3158_us;
       $__n_might_match_4_us = $__n_might_match_3157_us - 1 | 0;
       break;
      }
      if ($tobool_i_i_i_i_us) {
       $cond_i_us = ($28 & 255) >>> 1;
      } else {
       $cond_i_us = HEAP32[$__ky22_0162_us + 4 >> 2] | 0;
      }
      if (($cond_i_us | 0) == ($inc78_pre | 0)) {
       HEAP8[$__st_1159_us >> 0] = 2;
       $__consume_1_off0_us = 1;
       $__n_does_match_4_us = $__n_does_match_3158_us + 1 | 0;
       $__n_might_match_4_us = $__n_might_match_3157_us - 1 | 0;
      } else {
       $__consume_1_off0_us = 1;
       $__n_does_match_4_us = $__n_does_match_3158_us;
       $__n_might_match_4_us = $__n_might_match_3157_us;
      }
     } else {
      $__consume_1_off0_us = $__consume_0_off0161_us;
      $__n_does_match_4_us = $__n_does_match_3158_us;
      $__n_might_match_4_us = $__n_might_match_3157_us;
     }
    } while (0);
    $incdec_ptr48_us = $__ky22_0162_us + 12 | 0;
    if (($incdec_ptr48_us | 0) == ($__ke | 0)) {
     $__n_might_match_3_lcssa = $__n_might_match_4_us;
     $__n_does_match_3_lcssa = $__n_does_match_4_us;
     $__consume_0_off0_lcssa = $__consume_1_off0_us;
     break;
    } else {
     $__n_might_match_3157_us = $__n_might_match_4_us;
     $__n_does_match_3158_us = $__n_does_match_4_us;
     $__st_1159_us = $__st_1159_us + 1 | 0;
     $__consume_0_off0161_us = $__consume_1_off0_us;
     $__ky22_0162_us = $incdec_ptr48_us;
    }
   }
  } else {
   $__n_might_match_3157 = $__n_might_match_2_ph;
   $__n_does_match_3158 = $__n_does_match_2_ph;
   $__st_1159 = $__status_0;
   $__consume_0_off0161 = 0;
   $__ky22_0162 = $__kb;
   while (1) {
    do {
     if ((HEAP8[$__st_1159 >> 0] | 0) == 1) {
      $__size__i_i_i_i = $__ky22_0162;
      if ((HEAP8[$__size__i_i_i_i >> 0] & 1) == 0) {
       $cond_i_i_i = $__ky22_0162 + 4 | 0;
      } else {
       $cond_i_i_i = HEAP32[$__ky22_0162 + 8 >> 2] | 0;
      }
      if (($__c_0 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($__ct, HEAP32[$cond_i_i_i + ($__indx_0 << 2) >> 2] | 0) | 0)) {
       HEAP8[$__st_1159 >> 0] = 0;
       $__consume_1_off0 = $__consume_0_off0161;
       $__n_does_match_4 = $__n_does_match_3158;
       $__n_might_match_4 = $__n_might_match_3157 - 1 | 0;
       break;
      }
      $37 = HEAP8[$__size__i_i_i_i >> 0] | 0;
      if (($37 & 1) == 0) {
       $cond_i = ($37 & 255) >>> 1;
      } else {
       $cond_i = HEAP32[$__ky22_0162 + 4 >> 2] | 0;
      }
      if (($cond_i | 0) == ($inc78_pre | 0)) {
       HEAP8[$__st_1159 >> 0] = 2;
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_3158 + 1 | 0;
       $__n_might_match_4 = $__n_might_match_3157 - 1 | 0;
      } else {
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_3158;
       $__n_might_match_4 = $__n_might_match_3157;
      }
     } else {
      $__consume_1_off0 = $__consume_0_off0161;
      $__n_does_match_4 = $__n_does_match_3158;
      $__n_might_match_4 = $__n_might_match_3157;
     }
    } while (0);
    $incdec_ptr48 = $__ky22_0162 + 12 | 0;
    if (($incdec_ptr48 | 0) == ($__ke | 0)) {
     $__n_might_match_3_lcssa = $__n_might_match_4;
     $__n_does_match_3_lcssa = $__n_does_match_4;
     $__consume_0_off0_lcssa = $__consume_1_off0;
     break;
    } else {
     $__n_might_match_3157 = $__n_might_match_4;
     $__n_does_match_3158 = $__n_does_match_4;
     $__st_1159 = $__st_1159 + 1 | 0;
     $__consume_0_off0161 = $__consume_1_off0;
     $__ky22_0162 = $incdec_ptr48;
    }
   }
  }
  if (!$__consume_0_off0_lcssa) {
   $__indx_0_ph = $inc78_pre;
   $__n_does_match_2_ph = $__n_does_match_3_lcssa;
   $__n_might_match_2_ph = $__n_might_match_3_lcssa;
   $__e_sroa_0_0_ph = $__e_sroa_0_1;
   continue;
  }
  $39 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i76 = $39 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i76 >> 2] | 0;
  if (($40 | 0) == (HEAP32[$39 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$39 >> 2] | 0) + 40 >> 2] & 255]($39) | 0;
  } else {
   HEAP32[$__ninp__i_i76 >> 2] = $40 + 4;
  }
  if (($__n_might_match_3_lcssa + $__n_does_match_3_lcssa | 0) >>> 0 < 2 >>> 0) {
   $__indx_0_ph = $inc78_pre;
   $__n_does_match_2_ph = $__n_does_match_3_lcssa;
   $__n_might_match_2_ph = $__n_might_match_3_lcssa;
   $__e_sroa_0_0_ph = $__e_sroa_0_1;
   continue;
  } else {
   $__n_does_match_5168 = $__n_does_match_3_lcssa;
   $__st_2169 = $__status_0;
   $__ky58_0170 = $__kb;
  }
  while (1) {
   if ((HEAP8[$__st_2169 >> 0] | 0) == 2) {
    $45 = HEAP8[$__ky58_0170 >> 0] | 0;
    if (($45 & 1) == 0) {
     $cond_i93 = ($45 & 255) >>> 1;
    } else {
     $cond_i93 = HEAP32[$__ky58_0170 + 4 >> 2] | 0;
    }
    if (($cond_i93 | 0) == ($inc78_pre | 0)) {
     $__n_does_match_6 = $__n_does_match_5168;
    } else {
     HEAP8[$__st_2169 >> 0] = 0;
     $__n_does_match_6 = $__n_does_match_5168 - 1 | 0;
    }
   } else {
    $__n_does_match_6 = $__n_does_match_5168;
   }
   $incdec_ptr72 = $__ky58_0170 + 12 | 0;
   if (($incdec_ptr72 | 0) == ($__ke | 0)) {
    $__indx_0_ph = $inc78_pre;
    $__n_does_match_2_ph = $__n_does_match_6;
    $__n_might_match_2_ph = $__n_might_match_3_lcssa;
    $__e_sroa_0_0_ph = $__e_sroa_0_1;
    continue L18;
   } else {
    $__n_does_match_5168 = $__n_does_match_6;
    $__st_2169 = $__st_2169 + 1 | 0;
    $__ky58_0170 = $incdec_ptr72;
   }
  }
 }
 do {
  if (($20 | 0) == 0) {
   $52 = 1;
  } else {
   $47 = HEAP32[$20 + 12 >> 2] | 0;
   if (($47 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i105 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 255]($20) | 0;
   } else {
    $retval_0_i_i_i_i105 = HEAP32[$47 >> 2] | 0;
   }
   if (($retval_0_i_i_i_i105 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $52 = 1;
    break;
   } else {
    $52 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 if (($_pre_i15_i_i126 | 0) == 0) {
  label = 92;
 } else {
  $53 = HEAP32[$_pre_i15_i_i126 + 12 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$_pre_i15_i_i126 + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i123 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i126 >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i126) | 0;
  } else {
   $retval_0_i_i12_i_i123 = HEAP32[$53 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i123 | 0) == -1) {
   label = 92;
  } else {
   if (!$52) {
    label = 94;
   }
  }
 }
 if ((label | 0) == 92) {
  if ($52) {
   label = 94;
  }
 }
 if ((label | 0) == 94) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 L123 : do {
  if ($cmp6182) {
   label = 98;
  } else {
   $__st_3148 = $__status_0;
   $__kb_addr_0149 = $__kb;
   while (1) {
    if ((HEAP8[$__st_3148 >> 0] | 0) == 2) {
     $__kb_addr_0146 = $__kb_addr_0149;
     break L123;
    }
    $incdec_ptr92 = $__kb_addr_0149 + 12 | 0;
    if (($incdec_ptr92 | 0) == ($__ke | 0)) {
     label = 98;
     break;
    } else {
     $__st_3148 = $__st_3148 + 1 | 0;
     $__kb_addr_0149 = $incdec_ptr92;
    }
   }
  }
 } while (0);
 if ((label | 0) == 98) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $__kb_addr_0146 = $__ke;
 }
 if (($__stat_hold_sroa_0_0_load140 | 0) == 0) {
  $$etemp$1$0 = 100;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $__kb_addr_0146 | 0;
 }
 _free($__stat_hold_sroa_0_0_load140);
 $$etemp$1$0 = 100;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return $__kb_addr_0146 | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $6 = 0, $7 = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i117_pre_phi_i = 0, $arrayidx_i_i_i120_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i97_i = 0, $__size__i2_i86_i = 0, $15 = 0, $16 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i29_i = 0, $__a_0_i = 0, $17 = 0, $retval_0_i_i_i_i26_i = 0, $cmp_i1_i_i_i27_i = 0, $agg_tmp1_sroa_0_1 = 0, $22 = 0, $23 = 0, $24 = 0, $retval_0_i_i12_i_i44_i = 0, $agg_tmp23_sroa_0_2 = 0, $30 = 0, $tobool_i_i58_i = 0, $cond_i60_i = 0, $cond_i69128_i = 0, $cond_i101_i = 0, $cond_i_i122_i = 0, $__a_1_i = 0, $__ninp__i_i104_i = 0, $41 = 0, $__einp__i_i105_i = 0, $retval_0_i_i_i = 0, $46 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $50 = 0, $cond_i79_i = 0, $53 = 0, $54 = 0, $call37_i = 0.0, $56 = 0, $57 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $59 = 0, $61 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $64 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $65 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $67 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $71 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $76 = 0, $77 = 0, $retval_0_i_i12_i_i_i = 0, $85 = 0, $87 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 376 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 128 | 0;
 $__thousands_sep_i = sp + 136 | 0;
 $__grouping_i = sp + 144 | 0;
 $__buf_i = sp + 160 | 0;
 $__a_end_i = sp + 176 | 0;
 $__g_i = sp + 184 | 0;
 $__g_end_i = sp + 344 | 0;
 $__dc_i = sp + 352 | 0;
 $__in_units_i = sp + 360 | 0;
 $__exp_i = sp + 368 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $6 = $__grouping_i;
 $7 = $__buf_i;
 $arraydecay_i = sp | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping_i, $__iob, $arraydecay_i, $__decimal_point_i, $__thousands_sep_i);
 _memset($7 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$7 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i120_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i117_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i120_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i117_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i97_i = $__buf_i | 0;
 $__size__i2_i86_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__decimal_point_i >> 2] | 0;
 $16 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i29_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i29_i | 0) == 0) {
   $23 = 1;
   $22 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $17 = HEAP32[$_pre_i_i_i29_i + 12 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$_pre_i_i_i29_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i26_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i29_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i29_i) | 0;
   } else {
    $retval_0_i_i_i_i26_i = HEAP32[$17 >> 2] | 0;
   }
   $cmp_i1_i_i_i27_i = ($retval_0_i_i_i_i26_i | 0) == -1;
   $23 = $cmp_i1_i_i_i27_i ? 1 : 0;
   $22 = $cmp_i1_i_i_i27_i ? 0 : $_pre_i_i_i29_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i27_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 16;
  } else {
   $24 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i44_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i44_i = HEAP32[$24 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i44_i | 0) == -1) {
    label = 16;
   } else {
    if ($23) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   if ($23) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $30 = HEAP8[$7 >> 0] | 0;
  $tobool_i_i58_i = ($30 & 1) == 0;
  if ($tobool_i_i58_i) {
   $cond_i60_i = ($30 & 255) >>> 1;
  } else {
   $cond_i60_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i60_i | 0)) {
   if ($tobool_i_i58_i) {
    $cond_i69128_i = ($30 & 255) >>> 1;
   } else {
    $cond_i69128_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i69128_i << 1);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i101_i = 10;
   } else {
    $cond_i101_i = (HEAP32[$__cap__i_i97_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i101_i);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i_i122_i = $arrayidx_i_i_i120_pre_phi_i;
   } else {
    $cond_i_i122_i = HEAP32[$__data__i_i_i117_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i122_i + $cond_i69128_i;
   $__a_1_i = $cond_i_i122_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i104_i = $22 + 12 | 0;
  $41 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  $__einp__i_i105_i = $22 + 16 | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$41 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_0_i_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $15, $16, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $46 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] & 255]($22) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i104_i >> 2] = $46 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$6 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i79_i = ($50 & 255) >>> 1;
 } else {
  $cond_i79_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i79_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $53 = HEAP32[$__g_end_i >> 2] | 0;
  if (($53 - $__g_i | 0) < 160) {
   $54 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $53 + 4;
   HEAP32[$53 >> 2] = $54;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF32[$__v >> 2] = $call37_i;
 $56 = HEAP32[$__g_end_i >> 2] | 0;
 $57 = HEAP8[$6 >> 0] | 0;
 if (($57 & 1) == 0) {
  $cond_i_i15_i = ($57 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L66 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($56 | 0)) {
    $61 = $57;
   } else {
    $incdec_ptr6_i_i_i_i = $56 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $59 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $59;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $61 = HEAP8[$6 >> 0] | 0;
    } else {
     $61 = $57;
    }
   }
   if (($61 & 1) == 0) {
    $cond_i25_i_i = ($61 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $56 - 4 | 0;
   $64 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $64 << 24 >> 24 < 1 | $64 << 24 >> 24 == 127;
   L78 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $65 = $64;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($65 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $67 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $67 << 24 >> 24 < 1 | $67 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $65 = $67;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $67;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L78;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L66;
    } else {
     $_lcssa_i_i = $64;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($22 | 0) == 0) {
  $76 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $71 = HEAP32[$22 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$71 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $76 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 85;
 } else {
  $77 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$77 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 85;
  } else {
   if (!$76) {
    label = 87;
   }
  }
 }
 if ((label | 0) == 85) {
  if ($76) {
   label = 87;
  }
 }
 if ((label | 0) == 87) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$7 >> 0] & 1) == 0)) {
  $85 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($85 | 0) != 0) {
   _free($85);
  }
 }
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $87 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($87 | 0) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($87);
 $$etemp$12$0 = 128;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $6 = 0, $7 = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i117_pre_phi_i = 0, $arrayidx_i_i_i120_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i97_i = 0, $__size__i2_i86_i = 0, $15 = 0, $16 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i29_i = 0, $__a_0_i = 0, $17 = 0, $retval_0_i_i_i_i26_i = 0, $cmp_i1_i_i_i27_i = 0, $agg_tmp1_sroa_0_1 = 0, $22 = 0, $23 = 0, $24 = 0, $retval_0_i_i12_i_i44_i = 0, $agg_tmp23_sroa_0_2 = 0, $30 = 0, $tobool_i_i58_i = 0, $cond_i60_i = 0, $cond_i69128_i = 0, $cond_i101_i = 0, $cond_i_i122_i = 0, $__a_1_i = 0, $__ninp__i_i104_i = 0, $41 = 0, $__einp__i_i105_i = 0, $retval_0_i_i_i = 0, $46 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $50 = 0, $cond_i79_i = 0, $53 = 0, $54 = 0, $call37_i = 0.0, $56 = 0, $57 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $59 = 0, $61 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $64 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $65 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $67 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $71 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $76 = 0, $77 = 0, $retval_0_i_i12_i_i_i = 0, $85 = 0, $87 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 376 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 128 | 0;
 $__thousands_sep_i = sp + 136 | 0;
 $__grouping_i = sp + 144 | 0;
 $__buf_i = sp + 160 | 0;
 $__a_end_i = sp + 176 | 0;
 $__g_i = sp + 184 | 0;
 $__g_end_i = sp + 344 | 0;
 $__dc_i = sp + 352 | 0;
 $__in_units_i = sp + 360 | 0;
 $__exp_i = sp + 368 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $6 = $__grouping_i;
 $7 = $__buf_i;
 $arraydecay_i = sp | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping_i, $__iob, $arraydecay_i, $__decimal_point_i, $__thousands_sep_i);
 _memset($7 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$7 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i120_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i117_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i120_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i117_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i97_i = $__buf_i | 0;
 $__size__i2_i86_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__decimal_point_i >> 2] | 0;
 $16 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i29_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i29_i | 0) == 0) {
   $23 = 1;
   $22 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $17 = HEAP32[$_pre_i_i_i29_i + 12 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$_pre_i_i_i29_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i26_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i29_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i29_i) | 0;
   } else {
    $retval_0_i_i_i_i26_i = HEAP32[$17 >> 2] | 0;
   }
   $cmp_i1_i_i_i27_i = ($retval_0_i_i_i_i26_i | 0) == -1;
   $23 = $cmp_i1_i_i_i27_i ? 1 : 0;
   $22 = $cmp_i1_i_i_i27_i ? 0 : $_pre_i_i_i29_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i27_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 16;
  } else {
   $24 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i44_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i44_i = HEAP32[$24 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i44_i | 0) == -1) {
    label = 16;
   } else {
    if ($23) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   if ($23) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $30 = HEAP8[$7 >> 0] | 0;
  $tobool_i_i58_i = ($30 & 1) == 0;
  if ($tobool_i_i58_i) {
   $cond_i60_i = ($30 & 255) >>> 1;
  } else {
   $cond_i60_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i60_i | 0)) {
   if ($tobool_i_i58_i) {
    $cond_i69128_i = ($30 & 255) >>> 1;
   } else {
    $cond_i69128_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i69128_i << 1);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i101_i = 10;
   } else {
    $cond_i101_i = (HEAP32[$__cap__i_i97_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i101_i);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i_i122_i = $arrayidx_i_i_i120_pre_phi_i;
   } else {
    $cond_i_i122_i = HEAP32[$__data__i_i_i117_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i122_i + $cond_i69128_i;
   $__a_1_i = $cond_i_i122_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i104_i = $22 + 12 | 0;
  $41 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  $__einp__i_i105_i = $22 + 16 | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$41 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_0_i_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $15, $16, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $46 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] & 255]($22) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i104_i >> 2] = $46 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$6 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i79_i = ($50 & 255) >>> 1;
 } else {
  $cond_i79_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i79_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $53 = HEAP32[$__g_end_i >> 2] | 0;
  if (($53 - $__g_i | 0) < 160) {
   $54 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $53 + 4;
   HEAP32[$53 >> 2] = $54;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF64[$__v >> 3] = $call37_i;
 $56 = HEAP32[$__g_end_i >> 2] | 0;
 $57 = HEAP8[$6 >> 0] | 0;
 if (($57 & 1) == 0) {
  $cond_i_i15_i = ($57 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L66 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($56 | 0)) {
    $61 = $57;
   } else {
    $incdec_ptr6_i_i_i_i = $56 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $59 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $59;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $61 = HEAP8[$6 >> 0] | 0;
    } else {
     $61 = $57;
    }
   }
   if (($61 & 1) == 0) {
    $cond_i25_i_i = ($61 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $56 - 4 | 0;
   $64 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $64 << 24 >> 24 < 1 | $64 << 24 >> 24 == 127;
   L78 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $65 = $64;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($65 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $67 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $67 << 24 >> 24 < 1 | $67 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $65 = $67;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $67;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L78;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L66;
    } else {
     $_lcssa_i_i = $64;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($22 | 0) == 0) {
  $76 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $71 = HEAP32[$22 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$71 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $76 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 85;
 } else {
  $77 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$77 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 85;
  } else {
   if (!$76) {
    label = 87;
   }
  }
 }
 if ((label | 0) == 85) {
  if ($76) {
   label = 87;
  }
 }
 if ((label | 0) == 87) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$7 >> 0] & 1) == 0)) {
  $85 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($85 | 0) != 0) {
   _free($85);
  }
 }
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $87 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($87 | 0) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($87);
 $$etemp$12$0 = 128;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $6 = 0, $7 = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i117_pre_phi_i = 0, $arrayidx_i_i_i120_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i97_i = 0, $__size__i2_i86_i = 0, $15 = 0, $16 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i29_i = 0, $__a_0_i = 0, $17 = 0, $retval_0_i_i_i_i26_i = 0, $cmp_i1_i_i_i27_i = 0, $agg_tmp1_sroa_0_1 = 0, $22 = 0, $23 = 0, $24 = 0, $retval_0_i_i12_i_i44_i = 0, $agg_tmp23_sroa_0_2 = 0, $30 = 0, $tobool_i_i58_i = 0, $cond_i60_i = 0, $cond_i69128_i = 0, $cond_i101_i = 0, $cond_i_i122_i = 0, $__a_1_i = 0, $__ninp__i_i104_i = 0, $41 = 0, $__einp__i_i105_i = 0, $retval_0_i_i_i = 0, $46 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $50 = 0, $cond_i79_i = 0, $53 = 0, $54 = 0, $call37_i = 0.0, $56 = 0, $57 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $59 = 0, $61 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $64 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $65 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $67 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $71 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $76 = 0, $77 = 0, $retval_0_i_i12_i_i_i = 0, $85 = 0, $87 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 376 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 128 | 0;
 $__thousands_sep_i = sp + 136 | 0;
 $__grouping_i = sp + 144 | 0;
 $__buf_i = sp + 160 | 0;
 $__a_end_i = sp + 176 | 0;
 $__g_i = sp + 184 | 0;
 $__g_end_i = sp + 344 | 0;
 $__dc_i = sp + 352 | 0;
 $__in_units_i = sp + 360 | 0;
 $__exp_i = sp + 368 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $6 = $__grouping_i;
 $7 = $__buf_i;
 $arraydecay_i = sp | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping_i, $__iob, $arraydecay_i, $__decimal_point_i, $__thousands_sep_i);
 _memset($7 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$7 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i120_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i117_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i120_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i117_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i97_i = $__buf_i | 0;
 $__size__i2_i86_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__decimal_point_i >> 2] | 0;
 $16 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i29_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i29_i | 0) == 0) {
   $23 = 1;
   $22 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $17 = HEAP32[$_pre_i_i_i29_i + 12 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$_pre_i_i_i29_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i26_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i29_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i29_i) | 0;
   } else {
    $retval_0_i_i_i_i26_i = HEAP32[$17 >> 2] | 0;
   }
   $cmp_i1_i_i_i27_i = ($retval_0_i_i_i_i26_i | 0) == -1;
   $23 = $cmp_i1_i_i_i27_i ? 1 : 0;
   $22 = $cmp_i1_i_i_i27_i ? 0 : $_pre_i_i_i29_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i27_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 16;
  } else {
   $24 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i44_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i44_i = HEAP32[$24 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i44_i | 0) == -1) {
    label = 16;
   } else {
    if ($23) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   if ($23) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $30 = HEAP8[$7 >> 0] | 0;
  $tobool_i_i58_i = ($30 & 1) == 0;
  if ($tobool_i_i58_i) {
   $cond_i60_i = ($30 & 255) >>> 1;
  } else {
   $cond_i60_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i60_i | 0)) {
   if ($tobool_i_i58_i) {
    $cond_i69128_i = ($30 & 255) >>> 1;
   } else {
    $cond_i69128_i = HEAP32[$__size__i2_i86_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i69128_i << 1);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i101_i = 10;
   } else {
    $cond_i101_i = (HEAP32[$__cap__i_i97_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i101_i);
   if ((HEAP8[$7 >> 0] & 1) == 0) {
    $cond_i_i122_i = $arrayidx_i_i_i120_pre_phi_i;
   } else {
    $cond_i_i122_i = HEAP32[$__data__i_i_i117_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i122_i + $cond_i69128_i;
   $__a_1_i = $cond_i_i122_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i104_i = $22 + 12 | 0;
  $41 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  $__einp__i_i105_i = $22 + 16 | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$41 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_0_i_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $15, $16, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $46 = HEAP32[$__ninp__i_i104_i >> 2] | 0;
  if (($46 | 0) == (HEAP32[$__einp__i_i105_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] & 255]($22) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i104_i >> 2] = $46 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i29_i = $22;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $50 = HEAP8[$6 >> 0] | 0;
 if (($50 & 1) == 0) {
  $cond_i79_i = ($50 & 255) >>> 1;
 } else {
  $cond_i79_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i79_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $53 = HEAP32[$__g_end_i >> 2] | 0;
  if (($53 - $__g_i | 0) < 160) {
   $54 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $53 + 4;
   HEAP32[$53 >> 2] = $54;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF64[$__v >> 3] = $call37_i;
 $56 = HEAP32[$__g_end_i >> 2] | 0;
 $57 = HEAP8[$6 >> 0] | 0;
 if (($57 & 1) == 0) {
  $cond_i_i15_i = ($57 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L66 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($56 | 0)) {
    $61 = $57;
   } else {
    $incdec_ptr6_i_i_i_i = $56 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $59 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $59;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $61 = HEAP8[$6 >> 0] | 0;
    } else {
     $61 = $57;
    }
   }
   if (($61 & 1) == 0) {
    $cond_i25_i_i = ($61 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $56 - 4 | 0;
   $64 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $64 << 24 >> 24 < 1 | $64 << 24 >> 24 == 127;
   L78 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $65 = $64;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($65 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $67 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $67 << 24 >> 24 < 1 | $67 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $65 = $67;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $67;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L78;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L66;
    } else {
     $_lcssa_i_i = $64;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($22 | 0) == 0) {
  $76 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $71 = HEAP32[$22 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$22 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 255]($22) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$71 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $76 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 85;
 } else {
  $77 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$77 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 85;
  } else {
   if (!$76) {
    label = 87;
   }
  }
 }
 if ((label | 0) == 85) {
  if ($76) {
   label = 87;
  }
 }
 if ((label | 0) == 87) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$7 >> 0] & 1) == 0)) {
  $85 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($85 | 0) != 0) {
   _free($85);
  }
 }
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $87 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($87 | 0) == 0) {
  $$etemp$12$0 = 128;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($87);
 $$etemp$12$0 = 128;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e_0, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $sub_ptr_div_i_i = 0, $0 = 0, $call1 = 0, $exception_i = 0, $__stat_hold_sroa_0_0_load134 = 0, $__status_0 = 0, $cmp6176 = 0, $__n_does_match_0_lcssa = 0, $__n_might_match_0_lcssa = 0, $__sbuf__i_i_i = 0, $4 = 0, $__ky_0180 = 0, $__st_0179 = 0, $__n_does_match_0178 = 0, $__n_might_match_0177 = 0, $5 = 0, $cond_i_i = 0, $__n_might_match_1 = 0, $__n_does_match_1 = 0, $incdec_ptr = 0, $__e_sroa_0_0_ph = 0, $__n_might_match_2_ph = 0, $__n_does_match_2_ph = 0, $__indx_0_ph = 0, $cmp14 = 0, $__e_sroa_0_0 = 0, $__indx_0 = 0, $7 = 0, $12 = 0, $cmp_i_i_i = 0, $cmp_i1_i10_i_i = 0, $__e_sroa_0_1 = 0, $_pre_i12_i_i120 = 0, $cmp_i15_i_i = 0, $17 = 0, $18 = 0, $retval_0_i_off0_i = 0, $__c_0 = 0, $inc80_pre = 0, $__ky22_0156_us = 0, $__consume_0_off0155_us = 0, $__st_1153_us = 0, $__n_does_match_3152_us = 0, $__n_might_match_3151_us = 0, $25 = 0, $tobool_i_i_i_i_us = 0, $cond_i_i_i_us = 0, $cond_i_us = 0, $__n_might_match_4_us = 0, $__n_does_match_4_us = 0, $__consume_1_off0_us = 0, $incdec_ptr50_us = 0, $__ky22_0156 = 0, $__consume_0_off0155 = 0, $__st_1153 = 0, $__n_does_match_3152 = 0, $__n_might_match_3151 = 0, $__size__i_i_i_i = 0, $cond_i_i_i = 0, $34 = 0, $cond_i = 0, $__n_might_match_4 = 0, $__n_does_match_4 = 0, $__consume_1_off0 = 0, $incdec_ptr50 = 0, $__consume_0_off0_lcssa = 0, $__n_does_match_3_lcssa = 0, $__n_might_match_3_lcssa = 0, $36 = 0, $__ninp__i_i76 = 0, $37 = 0, $__ky60_0164 = 0, $__st_2163 = 0, $__n_does_match_5162 = 0, $42 = 0, $cond_i93 = 0, $__n_does_match_6 = 0, $incdec_ptr74 = 0, $48 = 0, $cmp_i_i_i108 = 0, $__kb_addr_0143 = 0, $__st_3142 = 0, $incdec_ptr94 = 0, $__kb_addr_0140 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 $sub_ptr_div_i_i = ($__ke - $__kb | 0) / 12 | 0;
 $0 = sp | 0;
 if ($sub_ptr_div_i_i >>> 0 > 100 >>> 0) {
  $call1 = _malloc($sub_ptr_div_i_i) | 0;
  if (($call1 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
   return 0;
  } else {
   $__status_0 = $call1;
   $__stat_hold_sroa_0_0_load134 = $call1;
  }
 } else {
  $__status_0 = $0;
  $__stat_hold_sroa_0_0_load134 = 0;
 }
 $cmp6176 = ($__kb | 0) == ($__ke | 0);
 if ($cmp6176) {
  $__n_might_match_0_lcssa = $sub_ptr_div_i_i;
  $__n_does_match_0_lcssa = 0;
 } else {
  $__n_might_match_0177 = $sub_ptr_div_i_i;
  $__n_does_match_0178 = 0;
  $__st_0179 = $__status_0;
  $__ky_0180 = $__kb;
  while (1) {
   $5 = HEAP8[$__ky_0180 >> 0] | 0;
   if (($5 & 1) == 0) {
    $cond_i_i = ($5 & 255) >>> 1;
   } else {
    $cond_i_i = HEAP32[$__ky_0180 + 4 >> 2] | 0;
   }
   if (($cond_i_i | 0) == 0) {
    HEAP8[$__st_0179 >> 0] = 2;
    $__n_does_match_1 = $__n_does_match_0178 + 1 | 0;
    $__n_might_match_1 = $__n_might_match_0177 - 1 | 0;
   } else {
    HEAP8[$__st_0179 >> 0] = 1;
    $__n_does_match_1 = $__n_does_match_0178;
    $__n_might_match_1 = $__n_might_match_0177;
   }
   $incdec_ptr = $__ky_0180 + 12 | 0;
   if (($incdec_ptr | 0) == ($__ke | 0)) {
    $__n_might_match_0_lcssa = $__n_might_match_1;
    $__n_does_match_0_lcssa = $__n_does_match_1;
    break;
   } else {
    $__n_might_match_0177 = $__n_might_match_1;
    $__n_does_match_0178 = $__n_does_match_1;
    $__st_0179 = $__st_0179 + 1 | 0;
    $__ky_0180 = $incdec_ptr;
   }
  }
 }
 $__sbuf__i_i_i = $__b | 0;
 $4 = $__ct;
 $__indx_0_ph = 0;
 $__n_does_match_2_ph = $__n_does_match_0_lcssa;
 $__n_might_match_2_ph = $__n_might_match_0_lcssa;
 $__e_sroa_0_0_ph = $__e_0;
 L18 : while (1) {
  $cmp14 = ($__n_might_match_2_ph | 0) != 0;
  $__indx_0 = $__indx_0_ph;
  $__e_sroa_0_0 = $__e_sroa_0_0_ph;
  while (1) {
   $7 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($7 | 0) == 0) {
     $12 = 0;
    } else {
     if ((HEAP32[$7 + 12 >> 2] | 0) == (HEAP32[$7 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i >> 2] = 0;
       $12 = 0;
       break;
      } else {
       $12 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
       break;
      }
     } else {
      $12 = $7;
     }
    }
   } while (0);
   $cmp_i_i_i = ($12 | 0) == 0;
   if (($__e_sroa_0_0 | 0) == 0) {
    $_pre_i12_i_i120 = 0;
    $__e_sroa_0_1 = 0;
   } else {
    if ((HEAP32[$__e_sroa_0_0 + 12 >> 2] | 0) == (HEAP32[$__e_sroa_0_0 + 16 >> 2] | 0)) {
     $cmp_i1_i10_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($__e_sroa_0_0) | 0) == -1;
     $_pre_i12_i_i120 = $cmp_i1_i10_i_i ? 0 : $__e_sroa_0_0;
     $__e_sroa_0_1 = $cmp_i1_i10_i_i ? 0 : $__e_sroa_0_0;
    } else {
     $_pre_i12_i_i120 = $__e_sroa_0_0;
     $__e_sroa_0_1 = $__e_sroa_0_0;
    }
   }
   $cmp_i15_i_i = ($_pre_i12_i_i120 | 0) == 0;
   $17 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   if (!(($cmp_i_i_i ^ $cmp_i15_i_i) & $cmp14)) {
    break L18;
   }
   $18 = HEAP32[$17 + 12 >> 2] | 0;
   if (($18 | 0) == (HEAP32[$17 + 16 >> 2] | 0)) {
    $retval_0_i_off0_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 255]($17) | 0) & 255;
   } else {
    $retval_0_i_off0_i = HEAP8[$18 >> 0] | 0;
   }
   if ($__case_sensitive) {
    $__c_0 = $retval_0_i_off0_i;
   } else {
    $__c_0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($__ct, $retval_0_i_off0_i) | 0;
   }
   $inc80_pre = $__indx_0 + 1 | 0;
   if ($cmp6176) {
    $__indx_0 = $inc80_pre;
    $__e_sroa_0_0 = $__e_sroa_0_1;
   } else {
    break;
   }
  }
  if ($__case_sensitive) {
   $__n_might_match_3151_us = $__n_might_match_2_ph;
   $__n_does_match_3152_us = $__n_does_match_2_ph;
   $__st_1153_us = $__status_0;
   $__consume_0_off0155_us = 0;
   $__ky22_0156_us = $__kb;
   while (1) {
    do {
     if ((HEAP8[$__st_1153_us >> 0] | 0) == 1) {
      $25 = HEAP8[$__ky22_0156_us >> 0] | 0;
      $tobool_i_i_i_i_us = ($25 & 1) == 0;
      if ($tobool_i_i_i_i_us) {
       $cond_i_i_i_us = $__ky22_0156_us + 1 | 0;
      } else {
       $cond_i_i_i_us = HEAP32[$__ky22_0156_us + 8 >> 2] | 0;
      }
      if (!($__c_0 << 24 >> 24 == (HEAP8[$cond_i_i_i_us + $__indx_0 >> 0] | 0))) {
       HEAP8[$__st_1153_us >> 0] = 0;
       $__consume_1_off0_us = $__consume_0_off0155_us;
       $__n_does_match_4_us = $__n_does_match_3152_us;
       $__n_might_match_4_us = $__n_might_match_3151_us - 1 | 0;
       break;
      }
      if ($tobool_i_i_i_i_us) {
       $cond_i_us = ($25 & 255) >>> 1;
      } else {
       $cond_i_us = HEAP32[$__ky22_0156_us + 4 >> 2] | 0;
      }
      if (($cond_i_us | 0) == ($inc80_pre | 0)) {
       HEAP8[$__st_1153_us >> 0] = 2;
       $__consume_1_off0_us = 1;
       $__n_does_match_4_us = $__n_does_match_3152_us + 1 | 0;
       $__n_might_match_4_us = $__n_might_match_3151_us - 1 | 0;
      } else {
       $__consume_1_off0_us = 1;
       $__n_does_match_4_us = $__n_does_match_3152_us;
       $__n_might_match_4_us = $__n_might_match_3151_us;
      }
     } else {
      $__consume_1_off0_us = $__consume_0_off0155_us;
      $__n_does_match_4_us = $__n_does_match_3152_us;
      $__n_might_match_4_us = $__n_might_match_3151_us;
     }
    } while (0);
    $incdec_ptr50_us = $__ky22_0156_us + 12 | 0;
    if (($incdec_ptr50_us | 0) == ($__ke | 0)) {
     $__n_might_match_3_lcssa = $__n_might_match_4_us;
     $__n_does_match_3_lcssa = $__n_does_match_4_us;
     $__consume_0_off0_lcssa = $__consume_1_off0_us;
     break;
    } else {
     $__n_might_match_3151_us = $__n_might_match_4_us;
     $__n_does_match_3152_us = $__n_does_match_4_us;
     $__st_1153_us = $__st_1153_us + 1 | 0;
     $__consume_0_off0155_us = $__consume_1_off0_us;
     $__ky22_0156_us = $incdec_ptr50_us;
    }
   }
  } else {
   $__n_might_match_3151 = $__n_might_match_2_ph;
   $__n_does_match_3152 = $__n_does_match_2_ph;
   $__st_1153 = $__status_0;
   $__consume_0_off0155 = 0;
   $__ky22_0156 = $__kb;
   while (1) {
    do {
     if ((HEAP8[$__st_1153 >> 0] | 0) == 1) {
      $__size__i_i_i_i = $__ky22_0156;
      if ((HEAP8[$__size__i_i_i_i >> 0] & 1) == 0) {
       $cond_i_i_i = $__ky22_0156 + 1 | 0;
      } else {
       $cond_i_i_i = HEAP32[$__ky22_0156 + 8 >> 2] | 0;
      }
      if (!($__c_0 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($__ct, HEAP8[$cond_i_i_i + $__indx_0 >> 0] | 0) | 0) << 24 >> 24)) {
       HEAP8[$__st_1153 >> 0] = 0;
       $__consume_1_off0 = $__consume_0_off0155;
       $__n_does_match_4 = $__n_does_match_3152;
       $__n_might_match_4 = $__n_might_match_3151 - 1 | 0;
       break;
      }
      $34 = HEAP8[$__size__i_i_i_i >> 0] | 0;
      if (($34 & 1) == 0) {
       $cond_i = ($34 & 255) >>> 1;
      } else {
       $cond_i = HEAP32[$__ky22_0156 + 4 >> 2] | 0;
      }
      if (($cond_i | 0) == ($inc80_pre | 0)) {
       HEAP8[$__st_1153 >> 0] = 2;
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_3152 + 1 | 0;
       $__n_might_match_4 = $__n_might_match_3151 - 1 | 0;
      } else {
       $__consume_1_off0 = 1;
       $__n_does_match_4 = $__n_does_match_3152;
       $__n_might_match_4 = $__n_might_match_3151;
      }
     } else {
      $__consume_1_off0 = $__consume_0_off0155;
      $__n_does_match_4 = $__n_does_match_3152;
      $__n_might_match_4 = $__n_might_match_3151;
     }
    } while (0);
    $incdec_ptr50 = $__ky22_0156 + 12 | 0;
    if (($incdec_ptr50 | 0) == ($__ke | 0)) {
     $__n_might_match_3_lcssa = $__n_might_match_4;
     $__n_does_match_3_lcssa = $__n_does_match_4;
     $__consume_0_off0_lcssa = $__consume_1_off0;
     break;
    } else {
     $__n_might_match_3151 = $__n_might_match_4;
     $__n_does_match_3152 = $__n_does_match_4;
     $__st_1153 = $__st_1153 + 1 | 0;
     $__consume_0_off0155 = $__consume_1_off0;
     $__ky22_0156 = $incdec_ptr50;
    }
   }
  }
  if (!$__consume_0_off0_lcssa) {
   $__indx_0_ph = $inc80_pre;
   $__n_does_match_2_ph = $__n_does_match_3_lcssa;
   $__n_might_match_2_ph = $__n_might_match_3_lcssa;
   $__e_sroa_0_0_ph = $__e_sroa_0_1;
   continue;
  }
  $36 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i76 = $36 + 12 | 0;
  $37 = HEAP32[$__ninp__i_i76 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 40 >> 2] & 255]($36) | 0;
  } else {
   HEAP32[$__ninp__i_i76 >> 2] = $37 + 1;
  }
  if (($__n_might_match_3_lcssa + $__n_does_match_3_lcssa | 0) >>> 0 < 2 >>> 0) {
   $__indx_0_ph = $inc80_pre;
   $__n_does_match_2_ph = $__n_does_match_3_lcssa;
   $__n_might_match_2_ph = $__n_might_match_3_lcssa;
   $__e_sroa_0_0_ph = $__e_sroa_0_1;
   continue;
  } else {
   $__n_does_match_5162 = $__n_does_match_3_lcssa;
   $__st_2163 = $__status_0;
   $__ky60_0164 = $__kb;
  }
  while (1) {
   if ((HEAP8[$__st_2163 >> 0] | 0) == 2) {
    $42 = HEAP8[$__ky60_0164 >> 0] | 0;
    if (($42 & 1) == 0) {
     $cond_i93 = ($42 & 255) >>> 1;
    } else {
     $cond_i93 = HEAP32[$__ky60_0164 + 4 >> 2] | 0;
    }
    if (($cond_i93 | 0) == ($inc80_pre | 0)) {
     $__n_does_match_6 = $__n_does_match_5162;
    } else {
     HEAP8[$__st_2163 >> 0] = 0;
     $__n_does_match_6 = $__n_does_match_5162 - 1 | 0;
    }
   } else {
    $__n_does_match_6 = $__n_does_match_5162;
   }
   $incdec_ptr74 = $__ky60_0164 + 12 | 0;
   if (($incdec_ptr74 | 0) == ($__ke | 0)) {
    $__indx_0_ph = $inc80_pre;
    $__n_does_match_2_ph = $__n_does_match_6;
    $__n_might_match_2_ph = $__n_might_match_3_lcssa;
    $__e_sroa_0_0_ph = $__e_sroa_0_1;
    continue L18;
   } else {
    $__n_does_match_5162 = $__n_does_match_6;
    $__st_2163 = $__st_2163 + 1 | 0;
    $__ky60_0164 = $incdec_ptr74;
   }
  }
 }
 do {
  if (($17 | 0) == 0) {
   $48 = 0;
  } else {
   if ((HEAP32[$17 + 12 >> 2] | 0) == (HEAP32[$17 + 16 >> 2] | 0)) {
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 255]($17) | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $48 = 0;
     break;
    } else {
     $48 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   } else {
    $48 = $17;
   }
  }
 } while (0);
 $cmp_i_i_i108 = ($48 | 0) == 0;
 do {
  if ($cmp_i15_i_i) {
   label = 90;
  } else {
   if ((HEAP32[$_pre_i12_i_i120 + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i120 + 16 >> 2] | 0)) {
    if ($cmp_i_i_i108) {
     break;
    } else {
     label = 92;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i120 >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i120) | 0) == -1) {
    label = 90;
   } else {
    if (!$cmp_i_i_i108) {
     label = 92;
    }
   }
  }
 } while (0);
 if ((label | 0) == 90) {
  if ($cmp_i_i_i108) {
   label = 92;
  }
 }
 if ((label | 0) == 92) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 L118 : do {
  if ($cmp6176) {
   label = 96;
  } else {
   $__st_3142 = $__status_0;
   $__kb_addr_0143 = $__kb;
   while (1) {
    if ((HEAP8[$__st_3142 >> 0] | 0) == 2) {
     $__kb_addr_0140 = $__kb_addr_0143;
     break L118;
    }
    $incdec_ptr94 = $__kb_addr_0143 + 12 | 0;
    if (($incdec_ptr94 | 0) == ($__ke | 0)) {
     label = 96;
     break;
    } else {
     $__st_3142 = $__st_3142 + 1 | 0;
     $__kb_addr_0143 = $incdec_ptr94;
    }
   }
  }
 } while (0);
 if ((label | 0) == 96) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $__kb_addr_0140 = $__ke;
 }
 if (($__stat_hold_sroa_0_0_load134 | 0) == 0) {
  $$etemp$1$0 = 100;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $__kb_addr_0140 | 0;
 }
 _free($__stat_hold_sroa_0_0_load134);
 $$etemp$1$0 = 100;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return $__kb_addr_0140 | 0;
}
function __Z25rcBuildCompactHeightfieldP9rcContextiiR13rcHeightfieldR20rcCompactHeightfield($ctx, $walkableHeight, $walkableClimb, $hf, $chf) {
 $ctx = $ctx | 0;
 $walkableHeight = $walkableHeight | 0;
 $walkableClimb = $walkableClimb | 0;
 $hf = $hf | 0;
 $chf = $chf | 0;
 var $m_timerEnabled_i = 0, $3 = 0, $4 = 0, $cmp19_i = 0, $cmp215_i = 0, $5 = 0, $inc11_us_i = 0, $x_017_us_i = 0, $spanCount_116_us_i = 0, $s_011_us_i = 0, $s_014_us_i = 0, $spanCount_213_us_i = 0, $inc_spanCount_2_us_i = 0, $s_0_us_i = 0, $spanCount_2_lcssa_us_i = 0, $y_021_us_i = 0, $spanCount_020_us_i = 0, $mul_us_i = 0, $spanCount_0_lcssa_i = 0, $11 = 0.0, $arrayidx3_i134 = 0, $ch = 0, $mul16 = 0, $call_i_i = 0, $cells = 0, $mul19 = 0, $mul23 = 0, $call_i_i1 = 0, $spans = 0, $call_i_i2 = 0, $areas = 0, $spans44 = 0, $inc98_us = 0, $idx_1187_us = 0, $x_0186_us = 0, $add43_us = 0, $19 = 0, $idx_2183_us = 0, $s_0182_us = 0, $20 = 0, $bf_load56_us = 0, $bf_clear61_us = 0, $next_us = 0, $21 = 0, $cond_us = 0, $23 = 0, $sub_us = 0, $cond5_i_us = 0, $24 = 0, $next95_us_pre_phi = 0, $idx_3_us = 0, $26 = 0, $idx_4_us = 0, $28 = 0, $idx_0191_us = 0, $y_0190_us = 0, $mul42_us = 0, $tooHighNeighbour_0179 = 0, $y100_0177 = 0, $mul109 = 0, $tooHighNeighbour_1174 = 0, $x104_0172 = 0, $bf_load113 = 0, $bf_clear114 = 0, $bf_lshr118 = 0, $add119 = 0, $tooHighNeighbour_2169 = 0, $i_0168 = 0, $31 = 0, $32 = 0, $y158 = 0, $bf_load_i148 = 0, $tooHighNeighbour_3166 = 0, $dir_0165 = 0, $mul_i146 = 0, $shl_i149 = 0, $neg_i150 = 0, $or_i153 = 0, $bf_clear6_i155 = 0, $bf_set_i156 = 0, $add130 = 0, $add132 = 0, $add142 = 0, $bf_load145 = 0, $bf_clear146 = 0, $bf_lshr150 = 0, $add151 = 0, $39 = 0, $40 = 0, $conv164 = 0, $add168 = 0, $k_0164 = 0, $tooHighNeighbour_4163 = 0, $41 = 0, $conv170 = 0, $add174 = 0, $sub182 = 0, $sub188 = 0, $bf_set_i = 0, $tooHighNeighbour_5 = 0, $inc197 = 0, $bf_load_i148193 = 0, $tooHighNeighbour_6 = 0, $inc203 = 0, $tooHighNeighbour_2_lcssa = 0, $inc206 = 0, $tooHighNeighbour_1_lcssa = 0, $retval_0 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 3);
 }
 $3 = HEAP32[$hf >> 2] | 0;
 $4 = HEAP32[$hf + 4 >> 2] | 0;
 $cmp19_i = ($4 | 0) > 0;
 $cmp215_i = ($3 | 0) > 0;
 if ($cmp19_i & $cmp215_i) {
  $5 = HEAP32[$hf + 40 >> 2] | 0;
  $spanCount_020_us_i = 0;
  $y_021_us_i = 0;
  while (1) {
   $mul_us_i = Math_imul($y_021_us_i, $3) | 0;
   $spanCount_116_us_i = $spanCount_020_us_i;
   $x_017_us_i = 0;
   while (1) {
    $s_011_us_i = HEAP32[$5 + ($x_017_us_i + $mul_us_i << 2) >> 2] | 0;
    if (($s_011_us_i | 0) == 0) {
     $spanCount_2_lcssa_us_i = $spanCount_116_us_i;
    } else {
     $spanCount_213_us_i = $spanCount_116_us_i;
     $s_014_us_i = $s_011_us_i;
     while (1) {
      $inc_spanCount_2_us_i = ((HEAP32[$s_014_us_i >> 2] | 0) >>> 0 > 67108863 >>> 0) + $spanCount_213_us_i | 0;
      $s_0_us_i = HEAP32[$s_014_us_i + 4 >> 2] | 0;
      if (($s_0_us_i | 0) == 0) {
       $spanCount_2_lcssa_us_i = $inc_spanCount_2_us_i;
       break;
      } else {
       $spanCount_213_us_i = $inc_spanCount_2_us_i;
       $s_014_us_i = $s_0_us_i;
      }
     }
    }
    $x_017_us_i = $x_017_us_i + 1 | 0;
    if (($x_017_us_i | 0) >= ($3 | 0)) {
     break;
    } else {
     $spanCount_116_us_i = $spanCount_2_lcssa_us_i;
    }
   }
   $inc11_us_i = $y_021_us_i + 1 | 0;
   if (($inc11_us_i | 0) < ($4 | 0)) {
    $spanCount_020_us_i = $spanCount_2_lcssa_us_i;
    $y_021_us_i = $inc11_us_i;
   } else {
    $spanCount_0_lcssa_i = $spanCount_2_lcssa_us_i;
    break;
   }
  }
 } else {
  $spanCount_0_lcssa_i = 0;
 }
 HEAP32[$chf >> 2] = $3;
 HEAP32[$chf + 4 >> 2] = $4;
 HEAP32[$chf + 8 >> 2] = $spanCount_0_lcssa_i;
 HEAP32[$chf + 12 >> 2] = $walkableHeight;
 HEAP32[$chf + 16 >> 2] = $walkableClimb;
 HEAP16[$chf + 26 >> 1] = 0;
 HEAPF32[$chf + 28 >> 2] = +HEAPF32[$hf + 8 >> 2];
 HEAPF32[$chf + 32 >> 2] = +HEAPF32[$hf + 12 >> 2];
 HEAPF32[$chf + 36 >> 2] = +HEAPF32[$hf + 16 >> 2];
 HEAPF32[$chf + 40 >> 2] = +HEAPF32[$hf + 20 >> 2];
 $11 = +HEAPF32[$hf + 24 >> 2];
 $arrayidx3_i134 = $chf + 44 | 0;
 HEAPF32[$arrayidx3_i134 >> 2] = $11;
 HEAPF32[$chf + 48 >> 2] = +HEAPF32[$hf + 28 >> 2];
 $ch = $hf + 36 | 0;
 HEAPF32[$arrayidx3_i134 >> 2] = $11 + +($walkableHeight | 0) * +HEAPF32[$ch >> 2];
 HEAPF32[$chf + 52 >> 2] = +HEAPF32[$hf + 32 >> 2];
 HEAPF32[$chf + 56 >> 2] = +HEAPF32[$ch >> 2];
 $mul16 = Math_imul($3 << 2, $4) | 0;
 $call_i_i = _malloc($mul16) | 0;
 $cells = $chf + 60 | 0;
 HEAP32[$cells >> 2] = $call_i_i;
 if (($call_i_i | 0) == 0) {
  $mul19 = Math_imul($4, $3) | 0;
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $mul19, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _memset($call_i_i | 0, 0, $mul16 | 0) | 0;
 $mul23 = $spanCount_0_lcssa_i << 3;
 $call_i_i1 = _malloc($mul23) | 0;
 $spans = $chf + 64 | 0;
 HEAP32[$spans >> 2] = $call_i_i1;
 if (($call_i_i1 | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 9088, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $spanCount_0_lcssa_i, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _memset($call_i_i1 | 0, 0, $mul23 | 0) | 0;
 $call_i_i2 = _malloc($spanCount_0_lcssa_i) | 0;
 $areas = $chf + 72 | 0;
 HEAP32[$areas >> 2] = $call_i_i2;
 if (($call_i_i2 | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 6960, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $spanCount_0_lcssa_i, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _memset($call_i_i2 | 0, 0, $spanCount_0_lcssa_i | 0) | 0;
 if ($cmp19_i) {
  $spans44 = $hf + 40 | 0;
  if ($cmp215_i) {
   $y_0190_us = 0;
   $idx_0191_us = 0;
   while (1) {
    $mul42_us = Math_imul($y_0190_us, $3) | 0;
    $x_0186_us = 0;
    $idx_1187_us = $idx_0191_us;
    while (1) {
     $add43_us = $x_0186_us + $mul42_us | 0;
     $19 = HEAP32[(HEAP32[$spans44 >> 2] | 0) + ($add43_us << 2) >> 2] | 0;
     if (($19 | 0) == 0) {
      $idx_4_us = $idx_1187_us;
     } else {
      $28 = (HEAP32[$cells >> 2] | 0) + ($add43_us << 2) | 0;
      HEAP32[$28 >> 2] = $idx_1187_us & 16777215;
      $s_0182_us = $19;
      $idx_2183_us = $idx_1187_us;
      while (1) {
       $20 = $s_0182_us;
       $bf_load56_us = HEAP32[$20 >> 2] | 0;
       if ($bf_load56_us >>> 0 > 67108863 >>> 0) {
        $bf_clear61_us = $bf_load56_us >>> 13 & 8191;
        $next_us = $s_0182_us + 4 | 0;
        $21 = HEAP32[$next_us >> 2] | 0;
        if (($21 | 0) == 0) {
         $cond_us = 65535;
        } else {
         $cond_us = HEAP32[$21 >> 2] & 8191;
        }
        $23 = HEAP32[$spans >> 2] | 0;
        HEAP16[$23 + ($idx_2183_us << 3) >> 1] = $bf_clear61_us;
        $sub_us = $cond_us - $bf_clear61_us | 0;
        if (($sub_us | 0) < 0) {
         $cond5_i_us = 0;
        } else {
         $cond5_i_us = ($sub_us | 0) > 255 ? -16777216 : $sub_us << 24;
        }
        $24 = $23 + ($idx_2183_us << 3) + 4 | 0;
        HEAP32[$24 >> 2] = HEAP32[$24 >> 2] & 16777215 | $cond5_i_us;
        HEAP8[(HEAP32[$areas >> 2] | 0) + $idx_2183_us >> 0] = (HEAP32[$20 >> 2] | 0) >>> 26;
        HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 16777216;
        $idx_3_us = $idx_2183_us + 1 | 0;
        $next95_us_pre_phi = $next_us;
       } else {
        $idx_3_us = $idx_2183_us;
        $next95_us_pre_phi = $s_0182_us + 4 | 0;
       }
       $26 = HEAP32[$next95_us_pre_phi >> 2] | 0;
       if (($26 | 0) == 0) {
        $idx_4_us = $idx_3_us;
        break;
       } else {
        $s_0182_us = $26;
        $idx_2183_us = $idx_3_us;
       }
      }
     }
     $x_0186_us = $x_0186_us + 1 | 0;
     if (($x_0186_us | 0) >= ($3 | 0)) {
      break;
     } else {
      $idx_1187_us = $idx_4_us;
     }
    }
    $inc98_us = $y_0190_us + 1 | 0;
    if (($inc98_us | 0) < ($4 | 0)) {
     $y_0190_us = $inc98_us;
     $idx_0191_us = $idx_4_us;
    } else {
     $y100_0177 = 0;
     $tooHighNeighbour_0179 = 0;
     break;
    }
   }
  } else {
   $y100_0177 = 0;
   $tooHighNeighbour_0179 = 0;
  }
  while (1) {
   if ($cmp215_i) {
    $mul109 = Math_imul($y100_0177, $3) | 0;
    $x104_0172 = 0;
    $tooHighNeighbour_1174 = $tooHighNeighbour_0179;
    while (1) {
     $bf_load113 = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x104_0172 + $mul109 << 2) >> 2] | 0;
     $bf_clear114 = $bf_load113 & 16777215;
     $bf_lshr118 = $bf_load113 >>> 24;
     $add119 = $bf_clear114 + $bf_lshr118 | 0;
     if (($bf_lshr118 | 0) == 0) {
      $tooHighNeighbour_2_lcssa = $tooHighNeighbour_1174;
     } else {
      $i_0168 = $bf_clear114;
      $tooHighNeighbour_2169 = $tooHighNeighbour_1174;
      while (1) {
       $31 = HEAP32[$spans >> 2] | 0;
       $32 = $31 + ($i_0168 << 3) + 4 | 0;
       $y158 = $31 + ($i_0168 << 3) | 0;
       $dir_0165 = 0;
       $tooHighNeighbour_3166 = $tooHighNeighbour_2169;
       $bf_load_i148 = HEAP32[$32 >> 2] | 0;
       while (1) {
        $mul_i146 = $dir_0165 * 6 | 0;
        $shl_i149 = 63 << $mul_i146;
        $neg_i150 = $shl_i149 ^ 16777215;
        $or_i153 = $bf_load_i148 & $neg_i150 | $shl_i149;
        $bf_clear6_i155 = $bf_load_i148 & -16777216;
        $bf_set_i156 = $or_i153 & 16777215 | $bf_clear6_i155;
        HEAP32[$32 >> 2] = $bf_set_i156;
        $add130 = (HEAP32[11520 + ($dir_0165 << 2) >> 2] | 0) + $x104_0172 | 0;
        $add132 = (HEAP32[11504 + ($dir_0165 << 2) >> 2] | 0) + $y100_0177 | 0;
        L62 : do {
         if (($add132 | $add130 | 0) > -1 & ($add130 | 0) < ($3 | 0) & ($add132 | 0) < ($4 | 0)) {
          $add142 = (Math_imul($add132, $3) | 0) + $add130 | 0;
          $bf_load145 = HEAP32[(HEAP32[$cells >> 2] | 0) + ($add142 << 2) >> 2] | 0;
          $bf_clear146 = $bf_load145 & 16777215;
          $bf_lshr150 = $bf_load145 >>> 24;
          $add151 = $bf_clear146 + $bf_lshr150 | 0;
          if (($bf_lshr150 | 0) == 0) {
           $tooHighNeighbour_6 = $tooHighNeighbour_3166;
           $bf_load_i148193 = $bf_set_i156;
          } else {
           $39 = HEAP32[$spans >> 2] | 0;
           $40 = HEAP16[$y158 >> 1] | 0;
           $conv164 = $40 & 65535;
           $add168 = ($bf_load_i148 >>> 24) + $conv164 | 0;
           $tooHighNeighbour_4163 = $tooHighNeighbour_3166;
           $k_0164 = $bf_clear146;
           while (1) {
            $41 = HEAP16[$39 + ($k_0164 << 3) >> 1] | 0;
            $conv170 = $41 & 65535;
            $add174 = ((HEAP32[$39 + ($k_0164 << 3) + 4 >> 2] | 0) >>> 24) + $conv170 | 0;
            if (((($add168 | 0) < ($add174 | 0) ? $add168 : $add174) - ((($40 & 65535) >>> 0 > ($41 & 65535) >>> 0 ? $40 : $41) & 65535) | 0) < ($walkableHeight | 0)) {
             $tooHighNeighbour_5 = $tooHighNeighbour_4163;
            } else {
             $sub182 = $conv170 - $conv164 | 0;
             if (((($sub182 | 0) < 0 ? -$sub182 | 0 : $sub182) | 0) > ($walkableClimb | 0)) {
              $tooHighNeighbour_5 = $tooHighNeighbour_4163;
             } else {
              $sub188 = $k_0164 - $bf_clear146 | 0;
              if (!($sub188 >>> 0 > 62 >>> 0)) {
               break;
              }
              $tooHighNeighbour_5 = ($tooHighNeighbour_4163 | 0) > ($sub188 | 0) ? $tooHighNeighbour_4163 : $sub188;
             }
            }
            $inc197 = $k_0164 + 1 | 0;
            if (($inc197 | 0) < ($add151 | 0)) {
             $tooHighNeighbour_4163 = $tooHighNeighbour_5;
             $k_0164 = $inc197;
            } else {
             $tooHighNeighbour_6 = $tooHighNeighbour_5;
             $bf_load_i148193 = $bf_set_i156;
             break L62;
            }
           }
           $bf_set_i = ($or_i153 & $neg_i150 | ($sub188 & 63) << $mul_i146) & 16777215 | $bf_clear6_i155;
           HEAP32[$32 >> 2] = $bf_set_i;
           $tooHighNeighbour_6 = $tooHighNeighbour_4163;
           $bf_load_i148193 = $bf_set_i;
          }
         } else {
          $tooHighNeighbour_6 = $tooHighNeighbour_3166;
          $bf_load_i148193 = $bf_set_i156;
         }
        } while (0);
        $dir_0165 = $dir_0165 + 1 | 0;
        if (($dir_0165 | 0) >= 4) {
         break;
        } else {
         $tooHighNeighbour_3166 = $tooHighNeighbour_6;
         $bf_load_i148 = $bf_load_i148193;
        }
       }
       $inc203 = $i_0168 + 1 | 0;
       if (($inc203 | 0) < ($add119 | 0)) {
        $i_0168 = $inc203;
        $tooHighNeighbour_2169 = $tooHighNeighbour_6;
       } else {
        $tooHighNeighbour_2_lcssa = $tooHighNeighbour_6;
        break;
       }
      }
     }
     $inc206 = $x104_0172 + 1 | 0;
     if (($inc206 | 0) < ($3 | 0)) {
      $x104_0172 = $inc206;
      $tooHighNeighbour_1174 = $tooHighNeighbour_2_lcssa;
     } else {
      $tooHighNeighbour_1_lcssa = $tooHighNeighbour_2_lcssa;
      break;
     }
    }
   } else {
    $tooHighNeighbour_1_lcssa = $tooHighNeighbour_0179;
   }
   $y100_0177 = $y100_0177 + 1 | 0;
   if (($y100_0177 | 0) >= ($4 | 0)) {
    break;
   } else {
    $tooHighNeighbour_0179 = $tooHighNeighbour_1_lcssa;
   }
  }
  if (($tooHighNeighbour_1_lcssa | 0) > 62) {
   __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 5904, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $tooHighNeighbour_1_lcssa, HEAP32[tempVarArgs + 8 >> 2] = 62, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
  }
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 3);
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i112_pre_phi_i = 0, $arrayidx_i_i_i115_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i92_i = 0, $__size__i2_i81_i = 0, $13 = 0, $14 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i27_i = 0, $__a_0_i = 0, $cmp_i1_i_i_i25_i = 0, $agg_tmp1_sroa_0_1 = 0, $19 = 0, $cmp_i_i_i30_i = 0, $agg_tmp23_sroa_0_2 = 0, $25 = 0, $tobool_i_i53_i = 0, $cond_i55_i = 0, $cond_i64125_i = 0, $cond_i96_i = 0, $cond_i_i117_i = 0, $__a_1_i = 0, $__ninp__i_i99_i = 0, $36 = 0, $__einp__i_i100_i = 0, $retval_0_i_off0_i_i = 0, $41 = 0, $_pre_i12_i_i_i = 0, $__a_2_i = 0, $45 = 0, $cond_i74_i = 0, $48 = 0, $49 = 0, $call37_i = 0.0, $51 = 0, $52 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 32 | 0;
 $__thousands_sep_i = sp + 40 | 0;
 $__grouping_i = sp + 48 | 0;
 $__buf_i = sp + 64 | 0;
 $__a_end_i = sp + 80 | 0;
 $__g_i = sp + 88 | 0;
 $__g_end_i = sp + 248 | 0;
 $__dc_i = sp + 256 | 0;
 $__in_units_i = sp + 264 | 0;
 $__exp_i = sp + 272 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = sp | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping_i, $__iob, $4, $__decimal_point_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i115_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i112_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i115_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i112_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i92_i = $__buf_i | 0;
 $__size__i2_i81_i = $__buf_i + 4 | 0;
 $13 = HEAP8[$__decimal_point_i >> 0] | 0;
 $14 = HEAP8[$__thousands_sep_i >> 0] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i27_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L6 : while (1) {
  if (($_pre_i_i_i27_i | 0) == 0) {
   $19 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$_pre_i_i_i27_i + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i27_i + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i25_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i27_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i27_i) | 0) == -1;
    $19 = $cmp_i1_i_i_i25_i ? 0 : $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i25_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $19 = $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i30_i = ($19 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 15;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 15;
    } else {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($cmp_i_i_i30_i) {
    $__a_2_i = $__a_0_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $25 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i53_i = ($25 & 1) == 0;
  if ($tobool_i_i53_i) {
   $cond_i55_i = ($25 & 255) >>> 1;
  } else {
   $cond_i55_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i55_i | 0)) {
   if ($tobool_i_i53_i) {
    $cond_i64125_i = ($25 & 255) >>> 1;
   } else {
    $cond_i64125_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i64125_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i96_i = 10;
   } else {
    $cond_i96_i = (HEAP32[$__cap__i_i92_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i96_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i117_i = $arrayidx_i_i_i115_pre_phi_i;
   } else {
    $cond_i_i117_i = HEAP32[$__data__i_i_i112_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i117_i + $cond_i64125_i;
   $__a_1_i = $cond_i_i117_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i99_i = $19 + 12 | 0;
  $36 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  $__einp__i_i100_i = $19 + 16 | 0;
  if (($36 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$36 >> 0] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_0_i_off0_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $13, $14, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $4) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $41 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 40 >> 2] & 255]($19) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i99_i >> 2] = $41 + 1;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $45 = HEAP8[$5 >> 0] | 0;
 if (($45 & 1) == 0) {
  $cond_i74_i = ($45 & 255) >>> 1;
 } else {
  $cond_i74_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i74_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $48 = HEAP32[$__g_end_i >> 2] | 0;
  if (($48 - $__g_i | 0) < 160) {
   $49 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $49;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF32[$__v >> 2] = $call37_i;
 $51 = HEAP32[$__g_end_i >> 2] | 0;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i15_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L65 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($51 | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $51 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $51 - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L77 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L77;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L65;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i30_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$19 + 12 >> 2] | 0) == (HEAP32[$19 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $19;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 84;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 86;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 84;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 86;
    }
   }
  }
 } while (0);
 if ((label | 0) == 84) {
  if ($cmp_i_i_i_i) {
   label = 86;
  }
 }
 if ((label | 0) == 86) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$12$0 = 32;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 1;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 1;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i112_pre_phi_i = 0, $arrayidx_i_i_i115_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i92_i = 0, $__size__i2_i81_i = 0, $13 = 0, $14 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i27_i = 0, $__a_0_i = 0, $cmp_i1_i_i_i25_i = 0, $agg_tmp1_sroa_0_1 = 0, $19 = 0, $cmp_i_i_i30_i = 0, $agg_tmp23_sroa_0_2 = 0, $25 = 0, $tobool_i_i53_i = 0, $cond_i55_i = 0, $cond_i64125_i = 0, $cond_i96_i = 0, $cond_i_i117_i = 0, $__a_1_i = 0, $__ninp__i_i99_i = 0, $36 = 0, $__einp__i_i100_i = 0, $retval_0_i_off0_i_i = 0, $41 = 0, $_pre_i12_i_i_i = 0, $__a_2_i = 0, $45 = 0, $cond_i74_i = 0, $48 = 0, $49 = 0, $call37_i = 0.0, $51 = 0, $52 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 32 | 0;
 $__thousands_sep_i = sp + 40 | 0;
 $__grouping_i = sp + 48 | 0;
 $__buf_i = sp + 64 | 0;
 $__a_end_i = sp + 80 | 0;
 $__g_i = sp + 88 | 0;
 $__g_end_i = sp + 248 | 0;
 $__dc_i = sp + 256 | 0;
 $__in_units_i = sp + 264 | 0;
 $__exp_i = sp + 272 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = sp | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping_i, $__iob, $4, $__decimal_point_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i115_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i112_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i115_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i112_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i92_i = $__buf_i | 0;
 $__size__i2_i81_i = $__buf_i + 4 | 0;
 $13 = HEAP8[$__decimal_point_i >> 0] | 0;
 $14 = HEAP8[$__thousands_sep_i >> 0] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i27_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L6 : while (1) {
  if (($_pre_i_i_i27_i | 0) == 0) {
   $19 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$_pre_i_i_i27_i + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i27_i + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i25_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i27_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i27_i) | 0) == -1;
    $19 = $cmp_i1_i_i_i25_i ? 0 : $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i25_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $19 = $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i30_i = ($19 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 15;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 15;
    } else {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($cmp_i_i_i30_i) {
    $__a_2_i = $__a_0_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $25 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i53_i = ($25 & 1) == 0;
  if ($tobool_i_i53_i) {
   $cond_i55_i = ($25 & 255) >>> 1;
  } else {
   $cond_i55_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i55_i | 0)) {
   if ($tobool_i_i53_i) {
    $cond_i64125_i = ($25 & 255) >>> 1;
   } else {
    $cond_i64125_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i64125_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i96_i = 10;
   } else {
    $cond_i96_i = (HEAP32[$__cap__i_i92_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i96_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i117_i = $arrayidx_i_i_i115_pre_phi_i;
   } else {
    $cond_i_i117_i = HEAP32[$__data__i_i_i112_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i117_i + $cond_i64125_i;
   $__a_1_i = $cond_i_i117_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i99_i = $19 + 12 | 0;
  $36 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  $__einp__i_i100_i = $19 + 16 | 0;
  if (($36 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$36 >> 0] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_0_i_off0_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $13, $14, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $4) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $41 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 40 >> 2] & 255]($19) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i99_i >> 2] = $41 + 1;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $45 = HEAP8[$5 >> 0] | 0;
 if (($45 & 1) == 0) {
  $cond_i74_i = ($45 & 255) >>> 1;
 } else {
  $cond_i74_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i74_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $48 = HEAP32[$__g_end_i >> 2] | 0;
  if (($48 - $__g_i | 0) < 160) {
   $49 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $49;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF64[$__v >> 3] = $call37_i;
 $51 = HEAP32[$__g_end_i >> 2] | 0;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i15_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L65 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($51 | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $51 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $51 - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L77 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L77;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L65;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i30_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$19 + 12 >> 2] | 0) == (HEAP32[$19 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $19;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 84;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 86;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 84;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 86;
    }
   }
  }
 } while (0);
 if ((label | 0) == 84) {
  if ($cmp_i_i_i_i) {
   label = 86;
  }
 }
 if ((label | 0) == 86) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$12$0 = 32;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 1;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 1;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__decimal_point_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $__in_units_i = 0, $__exp_i = 0, $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i112_pre_phi_i = 0, $arrayidx_i_i_i115_pre_phi_i = 0, $cond_i_i_i = 0, $arraydecay4_i = 0, $__cap__i_i92_i = 0, $__size__i2_i81_i = 0, $13 = 0, $14 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i27_i = 0, $__a_0_i = 0, $cmp_i1_i_i_i25_i = 0, $agg_tmp1_sroa_0_1 = 0, $19 = 0, $cmp_i_i_i30_i = 0, $agg_tmp23_sroa_0_2 = 0, $25 = 0, $tobool_i_i53_i = 0, $cond_i55_i = 0, $cond_i64125_i = 0, $cond_i96_i = 0, $cond_i_i117_i = 0, $__a_1_i = 0, $__ninp__i_i99_i = 0, $36 = 0, $__einp__i_i100_i = 0, $retval_0_i_off0_i_i = 0, $41 = 0, $_pre_i12_i_i_i = 0, $__a_2_i = 0, $45 = 0, $cond_i74_i = 0, $48 = 0, $49 = 0, $call37_i = 0.0, $51 = 0, $52 = 0, $cond_i_i15_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $54 = 0, $56 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $59 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $60 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $62 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $70 = 0, $cmp_i_i_i_i = 0, $78 = 0, $80 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, $$etemp$18$0 = 0, $$etemp$18$1 = 0, $$etemp$19$0 = 0, $$etemp$19$1 = 0, $$etemp$20$0 = 0, $$etemp$20$1 = 0, $$etemp$21$0 = 0, $$etemp$21$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__decimal_point_i = sp + 32 | 0;
 $__thousands_sep_i = sp + 40 | 0;
 $__grouping_i = sp + 48 | 0;
 $__buf_i = sp + 64 | 0;
 $__a_end_i = sp + 80 | 0;
 $__g_i = sp + 88 | 0;
 $__g_end_i = sp + 248 | 0;
 $__dc_i = sp + 256 | 0;
 $__in_units_i = sp + 264 | 0;
 $__exp_i = sp + 272 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $4 = sp | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping_i, $__iob, $4, $__decimal_point_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i115_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i112_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i115_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i112_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i_i;
 $arraydecay4_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay4_i;
 HEAP32[$__dc_i >> 2] = 0;
 HEAP8[$__in_units_i >> 0] = 1;
 HEAP8[$__exp_i >> 0] = 69;
 $__cap__i_i92_i = $__buf_i | 0;
 $__size__i2_i81_i = $__buf_i + 4 | 0;
 $13 = HEAP8[$__decimal_point_i >> 0] | 0;
 $14 = HEAP8[$__thousands_sep_i >> 0] | 0;
 $__a_0_i = $cond_i_i_i;
 $_pre_i_i_i27_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 L6 : while (1) {
  if (($_pre_i_i_i27_i | 0) == 0) {
   $19 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   if ((HEAP32[$_pre_i_i_i27_i + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i27_i + 16 >> 2] | 0)) {
    $cmp_i1_i_i_i25_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i27_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i27_i) | 0) == -1;
    $19 = $cmp_i1_i_i_i25_i ? 0 : $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i25_i ? 0 : $agg_tmp1_sroa_0_0;
   } else {
    $19 = $_pre_i_i_i27_i;
    $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
   }
  }
  $cmp_i_i_i30_i = ($19 | 0) == 0;
  do {
   if (($agg_tmp23_sroa_0_0 | 0) == 0) {
    label = 15;
   } else {
    if ((HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0) != (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
      break;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0) == -1) {
     label = 15;
    } else {
     if ($cmp_i_i_i30_i) {
      $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
     } else {
      $__a_2_i = $__a_0_i;
      $_pre_i12_i_i_i = $agg_tmp23_sroa_0_0;
      break L6;
     }
    }
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($cmp_i_i_i30_i) {
    $__a_2_i = $__a_0_i;
    $_pre_i12_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $25 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i53_i = ($25 & 1) == 0;
  if ($tobool_i_i53_i) {
   $cond_i55_i = ($25 & 255) >>> 1;
  } else {
   $cond_i55_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i55_i | 0)) {
   if ($tobool_i_i53_i) {
    $cond_i64125_i = ($25 & 255) >>> 1;
   } else {
    $cond_i64125_i = HEAP32[$__size__i2_i81_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i64125_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i96_i = 10;
   } else {
    $cond_i96_i = (HEAP32[$__cap__i_i92_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i96_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i117_i = $arrayidx_i_i_i115_pre_phi_i;
   } else {
    $cond_i_i117_i = HEAP32[$__data__i_i_i112_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i117_i + $cond_i64125_i;
   $__a_1_i = $cond_i_i117_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i99_i = $19 + 12 | 0;
  $36 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  $__einp__i_i100_i = $19 + 16 | 0;
  if (($36 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   $retval_0_i_off0_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) & 255;
  } else {
   $retval_0_i_off0_i_i = HEAP8[$36 >> 0] | 0;
  }
  if ((__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_0_i_off0_i_i, $__in_units_i, $__exp_i, $__a_1_i, $__a_end_i, $13, $14, $__grouping_i, $arraydecay4_i, $__g_end_i, $__dc_i, $4) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i12_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $41 = HEAP32[$__ninp__i_i99_i >> 2] | 0;
  if (($41 | 0) == (HEAP32[$__einp__i_i100_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 40 >> 2] & 255]($19) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i99_i >> 2] = $41 + 1;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i27_i = $19;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $45 = HEAP8[$5 >> 0] | 0;
 if (($45 & 1) == 0) {
  $cond_i74_i = ($45 & 255) >>> 1;
 } else {
  $cond_i74_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (!(($cond_i74_i | 0) == 0 | (HEAP8[$__in_units_i >> 0] | 0) == 0)) {
  $48 = HEAP32[$__g_end_i >> 2] | 0;
  if (($48 - $__g_i | 0) < 160) {
   $49 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $49;
  }
 }
 $call37_i = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err);
 HEAPF64[$__v >> 3] = $call37_i;
 $51 = HEAP32[$__g_end_i >> 2] | 0;
 $52 = HEAP8[$5 >> 0] | 0;
 if (($52 & 1) == 0) {
  $cond_i_i15_i = ($52 & 255) >>> 1;
 } else {
  $cond_i_i15_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L65 : do {
  if (($cond_i_i15_i | 0) != 0) {
   if (($arraydecay4_i | 0) == ($51 | 0)) {
    $56 = $52;
   } else {
    $incdec_ptr6_i_i_i_i = $51 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay4_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $54 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $54;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $56 = HEAP8[$5 >> 0] | 0;
    } else {
     $56 = $52;
    }
   }
   if (($56 & 1) == 0) {
    $cond_i25_i_i = ($56 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $51 - 4 | 0;
   $59 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $59 << 24 >> 24 < 1 | $59 << 24 >> 24 == 127;
   L77 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay4_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay4_i;
     $60 = $59;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($60 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $62 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $60 = $62;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $62;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L77;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L65;
    } else {
     $_lcssa_i_i = $59;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if ($cmp_i_i_i30_i) {
  $70 = 0;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  if ((HEAP32[$19 + 12 >> 2] | 0) == (HEAP32[$19 + 16 >> 2] | 0)) {
   $cmp_i1_i_i_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 255]($19) | 0) == -1;
   $70 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
   $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
  } else {
   $70 = $19;
   $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
  }
 }
 $cmp_i_i_i_i = ($70 | 0) == 0;
 do {
  if (($_pre_i12_i_i_i | 0) == 0) {
   label = 84;
  } else {
   if ((HEAP32[$_pre_i12_i_i_i + 12 >> 2] | 0) != (HEAP32[$_pre_i12_i_i_i + 16 >> 2] | 0)) {
    if ($cmp_i_i_i_i) {
     break;
    } else {
     label = 86;
     break;
    }
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i_i) | 0) == -1) {
    label = 84;
   } else {
    if (!$cmp_i_i_i_i) {
     label = 86;
    }
   }
  }
 } while (0);
 if ((label | 0) == 84) {
  if ($cmp_i_i_i_i) {
   label = 86;
  }
 }
 if ((label | 0) == 86) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $78 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($78 | 0) != 0) {
   _free($78);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  $$etemp$12$0 = 32;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 1;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 1;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 12;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 12;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  $$etemp$18$0 = 4;
  $$etemp$18$1 = 0;
  $$etemp$19$0 = 4;
  $$etemp$19$1 = 0;
  $$etemp$20$0 = 1;
  $$etemp$20$1 = 0;
  $$etemp$21$0 = 1;
  $$etemp$21$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($80);
 $$etemp$12$0 = 32;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 1;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 1;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 12;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 12;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 $$etemp$18$0 = 4;
 $$etemp$18$1 = 0;
 $$etemp$19$0 = 4;
 $$etemp$19$1 = 0;
 $$etemp$20$0 = 1;
 $$etemp$20$1 = 0;
 $$etemp$21$0 = 1;
 $$etemp$21$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $__size__i_i_i = 0, $arrayidx_i_i_i_i136 = 0, $__data__i_i_i_i133 = 0, $__size__i2_i_i = 0, $__size__i_i_i143 = 0, $tobool = 0, $arrayidx_i_i_i193 = 0, $__data__i_i_i174 = 0, $__size__i2_i_i175 = 0, $cmp24 = 0, $__size__i_i_i116 = 0, $arrayidx_i_i_i_i112 = 0, $__data__i_i_i_i109 = 0, $__size__i2_i99 = 0, $__tab__i = 0, $1 = 0, $__db_addr_0218 = 0, $__p_0217 = 0, $call_i = 0, $6 = 0, $7 = 0, $tobool_i_i_i = 0, $cond_i_i = 0, $cond_i_i_i138 = 0, $10 = 0, $11 = 0, $12 = 0, $tobool_i_i_i145 = 0, $cond_i_i151 = 0, $cond_i_i195235 = 0, $cond_i6_i183 = 0, $add_ptr_i184 = 0, $16 = 0, $17 = 0, $__result_addr_05_i_i164 = 0, $incdec_ptr_i_i_i165 = 0, $incdec_ptr_i_i166 = 0, $__result_addr_0_lcssa_i_i169 = 0, $19 = 0, $incdec_ptr15___db_addr_0 = 0, $__d_0199 = 0, $20 = 0, $incdec_ptr23 = 0, $__d_0_lcssa = 0, $__d_0_lcssa224 = 0, $24 = 0, $umax = 0, $scevgep227228 = 0, $26 = 0, $__f_0204 = 0, $__d_1203 = 0, $incdec_ptr31 = 0, $27 = 0, $dec = 0, $cmp29 = 0, $scevgep229 = 0, $__d_1_lcssa240 = 0, $__f_0_lcssa238 = 0, $__d_1_lcssa239 = 0, $__f_0_lcssa237 = 0, $cond = 0, $29 = 0, $30 = 0, $__f_1210 = 0, $dec42 = 0, $31 = 0, $_lcssa = 0, $__d_2 = 0, $call_i129 = 0, $33 = 0, $34 = 0, $tobool_i_i_i118 = 0, $cond_i_i124 = 0, $cond_i_i_i114 = 0, $__gl_0216 = 0, $__ig_0215 = 0, $__ng_0214 = 0, $__d_3213 = 0, $38 = 0, $inc = 0, $39 = 0, $tobool_i_i98 = 0, $cond_i104 = 0, $cond_i_i_i93 = 0, $cond_i_i_i = 0, $__ng_1 = 0, $__ig_1 = 0, $__gl_1 = 0, $45 = 0, $46 = 0, $47 = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $48 = 0, $incdec_ptr2_i_i = 0, $incdec_ptr_i_i82 = 0, $__db_addr_2 = 0, $50 = 0, $tobool_i_i = 0, $cond_i = 0, $_pn = 0, $cond_i6_i = 0, $add_ptr_i_i242 = 0, $add_ptr_i = 0, $54 = 0, $55 = 0, $__result_addr_05_i_i = 0, $incdec_ptr_i_i_i = 0, $incdec_ptr_i_i = 0, $__result_addr_0_lcssa_i_i = 0, $and93 = 0, label = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__ct;
 $__size__i_i_i = $__sn;
 $arrayidx_i_i_i_i136 = $__sn + 1 | 0;
 $__data__i_i_i_i133 = $__sn + 8 | 0;
 $__size__i2_i_i = $__sn + 4 | 0;
 $__size__i_i_i143 = $__sym;
 $tobool = ($__flags & 512 | 0) == 0;
 $arrayidx_i_i_i193 = $__sym + 1 | 0;
 $__data__i_i_i174 = $__sym + 8 | 0;
 $__size__i2_i_i175 = $__sym + 4 | 0;
 $cmp24 = ($__fd | 0) > 0;
 $__size__i_i_i116 = $__grp;
 $arrayidx_i_i_i_i112 = $__grp + 1 | 0;
 $__data__i_i_i_i109 = $__grp + 8 | 0;
 $__size__i2_i99 = $__grp + 4 | 0;
 $__tab__i = $__ct + 8 | 0;
 $1 = -$__fd | 0;
 $__p_0217 = 0;
 $__db_addr_0218 = $__db;
 while (1) {
  switch (HEAP8[$__pat + $__p_0217 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $__db_addr_2 = $__db_addr_0218;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $call_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $6 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $6 + 1;
    HEAP8[$6 >> 0] = $call_i;
    $__db_addr_2 = $__db_addr_0218;
    break;
   }
  case 3:
   {
    $7 = HEAP8[$__size__i_i_i >> 0] | 0;
    $tobool_i_i_i = ($7 & 1) == 0;
    if ($tobool_i_i_i) {
     $cond_i_i = ($7 & 255) >>> 1;
    } else {
     $cond_i_i = HEAP32[$__size__i2_i_i >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $__db_addr_2 = $__db_addr_0218;
    } else {
     if ($tobool_i_i_i) {
      $cond_i_i_i138 = $arrayidx_i_i_i_i136;
     } else {
      $cond_i_i_i138 = HEAP32[$__data__i_i_i_i133 >> 2] | 0;
     }
     $10 = HEAP8[$cond_i_i_i138 >> 0] | 0;
     $11 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $11 + 1;
     HEAP8[$11 >> 0] = $10;
     $__db_addr_2 = $__db_addr_0218;
    }
    break;
   }
  case 2:
   {
    $12 = HEAP8[$__size__i_i_i143 >> 0] | 0;
    $tobool_i_i_i145 = ($12 & 1) == 0;
    if ($tobool_i_i_i145) {
     $cond_i_i151 = ($12 & 255) >>> 1;
    } else {
     $cond_i_i151 = HEAP32[$__size__i2_i_i175 >> 2] | 0;
    }
    if (($cond_i_i151 | 0) == 0 | $tobool) {
     $__db_addr_2 = $__db_addr_0218;
    } else {
     if ($tobool_i_i_i145) {
      $cond_i6_i183 = ($12 & 255) >>> 1;
      $cond_i_i195235 = $arrayidx_i_i_i193;
     } else {
      $cond_i6_i183 = HEAP32[$__size__i2_i_i175 >> 2] | 0;
      $cond_i_i195235 = HEAP32[$__data__i_i_i174 >> 2] | 0;
     }
     $add_ptr_i184 = $cond_i_i195235 + $cond_i6_i183 | 0;
     $16 = HEAP32[$__me >> 2] | 0;
     if (($cond_i_i195235 | 0) == ($add_ptr_i184 | 0)) {
      $__result_addr_0_lcssa_i_i169 = $16;
     } else {
      $__result_addr_05_i_i164 = $16;
      $17 = $cond_i_i195235;
      while (1) {
       HEAP8[$__result_addr_05_i_i164 >> 0] = HEAP8[$17 >> 0] | 0;
       $incdec_ptr_i_i_i165 = $17 + 1 | 0;
       $incdec_ptr_i_i166 = $__result_addr_05_i_i164 + 1 | 0;
       if (($incdec_ptr_i_i_i165 | 0) == ($add_ptr_i184 | 0)) {
        $__result_addr_0_lcssa_i_i169 = $incdec_ptr_i_i166;
        break;
       } else {
        $__result_addr_05_i_i164 = $incdec_ptr_i_i166;
        $17 = $incdec_ptr_i_i_i165;
       }
      }
     }
     HEAP32[$__me >> 2] = $__result_addr_0_lcssa_i_i169;
     $__db_addr_2 = $__db_addr_0218;
    }
    break;
   }
  case 4:
   {
    $19 = HEAP32[$__me >> 2] | 0;
    $incdec_ptr15___db_addr_0 = $__neg ? $__db_addr_0218 + 1 | 0 : $__db_addr_0218;
    L30 : do {
     if ($incdec_ptr15___db_addr_0 >>> 0 < $__de >>> 0) {
      $__d_0199 = $incdec_ptr15___db_addr_0;
      while (1) {
       $20 = HEAP8[$__d_0199 >> 0] | 0;
       if (!($20 << 24 >> 24 > -1)) {
        $__d_0_lcssa = $__d_0199;
        break L30;
       }
       $incdec_ptr23 = $__d_0199 + 1 | 0;
       if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($20 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
        $__d_0_lcssa = $__d_0199;
        break L30;
       }
       if ($incdec_ptr23 >>> 0 < $__de >>> 0) {
        $__d_0199 = $incdec_ptr23;
       } else {
        $__d_0_lcssa = $incdec_ptr23;
        break;
       }
      }
     } else {
      $__d_0_lcssa = $incdec_ptr15___db_addr_0;
     }
    } while (0);
    $__d_0_lcssa224 = $__d_0_lcssa;
    if ($cmp24) {
     if ($__d_0_lcssa >>> 0 > $incdec_ptr15___db_addr_0 >>> 0) {
      $24 = $incdec_ptr15___db_addr_0 - $__d_0_lcssa224 | 0;
      $umax = $24 >>> 0 < $1 >>> 0 ? $1 : $24;
      $scevgep227228 = $umax + $__fd | 0;
      $__d_1203 = $__d_0_lcssa;
      $__f_0204 = $__fd;
      $26 = $19;
      while (1) {
       $incdec_ptr31 = $__d_1203 - 1 | 0;
       $27 = HEAP8[$incdec_ptr31 >> 0] | 0;
       HEAP32[$__me >> 2] = $26 + 1;
       HEAP8[$26 >> 0] = $27;
       $dec = $__f_0204 - 1 | 0;
       $cmp29 = ($dec | 0) > 0;
       if (!($incdec_ptr31 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0 & $cmp29)) {
        break;
       }
       $__d_1203 = $incdec_ptr31;
       $__f_0204 = $dec;
       $26 = HEAP32[$__me >> 2] | 0;
      }
      $scevgep229 = $__d_0_lcssa + $umax | 0;
      if ($cmp29) {
       $__f_0_lcssa238 = $scevgep227228;
       $__d_1_lcssa240 = $scevgep229;
       label = 32;
      } else {
       $cond = 0;
       $__f_0_lcssa237 = $scevgep227228;
       $__d_1_lcssa239 = $scevgep229;
      }
     } else {
      $__f_0_lcssa238 = $__fd;
      $__d_1_lcssa240 = $__d_0_lcssa;
      label = 32;
     }
     if ((label | 0) == 32) {
      label = 0;
      $cond = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
      $__f_0_lcssa237 = $__f_0_lcssa238;
      $__d_1_lcssa239 = $__d_1_lcssa240;
     }
     $29 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $29 + 1;
     if (($__f_0_lcssa237 | 0) > 0) {
      $__f_1210 = $__f_0_lcssa237;
      $30 = $29;
      while (1) {
       HEAP8[$30 >> 0] = $cond;
       $dec42 = $__f_1210 - 1 | 0;
       $31 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $31 + 1;
       if (($dec42 | 0) > 0) {
        $__f_1210 = $dec42;
        $30 = $31;
       } else {
        $_lcssa = $31;
        break;
       }
      }
     } else {
      $_lcssa = $29;
     }
     HEAP8[$_lcssa >> 0] = $__dp;
     $__d_2 = $__d_1_lcssa239;
    } else {
     $__d_2 = $__d_0_lcssa;
    }
    if (($__d_2 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
     $call_i129 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $33 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $33 + 1;
     HEAP8[$33 >> 0] = $call_i129;
    } else {
     $34 = HEAP8[$__size__i_i_i116 >> 0] | 0;
     $tobool_i_i_i118 = ($34 & 1) == 0;
     if ($tobool_i_i_i118) {
      $cond_i_i124 = ($34 & 255) >>> 1;
     } else {
      $cond_i_i124 = HEAP32[$__size__i2_i99 >> 2] | 0;
     }
     if (($cond_i_i124 | 0) == 0) {
      $__d_3213 = $__d_2;
      $__ng_0214 = 0;
      $__ig_0215 = 0;
      $__gl_0216 = -1;
     } else {
      if ($tobool_i_i_i118) {
       $cond_i_i_i114 = $arrayidx_i_i_i_i112;
      } else {
       $cond_i_i_i114 = HEAP32[$__data__i_i_i_i109 >> 2] | 0;
      }
      $__d_3213 = $__d_2;
      $__ng_0214 = 0;
      $__ig_0215 = 0;
      $__gl_0216 = HEAP8[$cond_i_i_i114 >> 0] | 0;
     }
     while (1) {
      if (($__ng_0214 | 0) == ($__gl_0216 | 0)) {
       $38 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $38 + 1;
       HEAP8[$38 >> 0] = $__ts;
       $inc = $__ig_0215 + 1 | 0;
       $39 = HEAP8[$__size__i_i_i116 >> 0] | 0;
       $tobool_i_i98 = ($39 & 1) == 0;
       if ($tobool_i_i98) {
        $cond_i104 = ($39 & 255) >>> 1;
       } else {
        $cond_i104 = HEAP32[$__size__i2_i99 >> 2] | 0;
       }
       if ($inc >>> 0 < $cond_i104 >>> 0) {
        if ($tobool_i_i98) {
         $cond_i_i_i93 = $arrayidx_i_i_i_i112;
        } else {
         $cond_i_i_i93 = HEAP32[$__data__i_i_i_i109 >> 2] | 0;
        }
        if ((HEAP8[$cond_i_i_i93 + $inc >> 0] | 0) == 127) {
         $__gl_1 = -1;
         $__ig_1 = $inc;
         $__ng_1 = 0;
        } else {
         if ($tobool_i_i98) {
          $cond_i_i_i = $arrayidx_i_i_i_i112;
         } else {
          $cond_i_i_i = HEAP32[$__data__i_i_i_i109 >> 2] | 0;
         }
         $__gl_1 = HEAP8[$cond_i_i_i + $inc >> 0] | 0;
         $__ig_1 = $inc;
         $__ng_1 = 0;
        }
       } else {
        $__gl_1 = $__gl_0216;
        $__ig_1 = $inc;
        $__ng_1 = 0;
       }
      } else {
       $__gl_1 = $__gl_0216;
       $__ig_1 = $__ig_0215;
       $__ng_1 = $__ng_0214;
      }
      $__d_3213 = $__d_3213 - 1 | 0;
      $45 = HEAP8[$__d_3213 >> 0] | 0;
      $46 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $46 + 1;
      HEAP8[$46 >> 0] = $45;
      if (($__d_3213 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
       break;
      } else {
       $__ng_0214 = $__ng_1 + 1 | 0;
       $__ig_0215 = $__ig_1;
       $__gl_0216 = $__gl_1;
      }
     }
    }
    $47 = HEAP32[$__me >> 2] | 0;
    if (($19 | 0) == ($47 | 0)) {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
    } else {
     $incdec_ptr6_i_i = $47 - 1 | 0;
     if ($incdec_ptr6_i_i >>> 0 > $19 >>> 0) {
      $__first_addr_08_i_i = $19;
      $incdec_ptr9_i_i = $incdec_ptr6_i_i;
      while (1) {
       $48 = HEAP8[$__first_addr_08_i_i >> 0] | 0;
       HEAP8[$__first_addr_08_i_i >> 0] = HEAP8[$incdec_ptr9_i_i >> 0] | 0;
       HEAP8[$incdec_ptr9_i_i >> 0] = $48;
       $incdec_ptr2_i_i = $__first_addr_08_i_i + 1 | 0;
       $incdec_ptr_i_i82 = $incdec_ptr9_i_i - 1 | 0;
       if ($incdec_ptr2_i_i >>> 0 < $incdec_ptr_i_i82 >>> 0) {
        $__first_addr_08_i_i = $incdec_ptr2_i_i;
        $incdec_ptr9_i_i = $incdec_ptr_i_i82;
       } else {
        $__db_addr_2 = $incdec_ptr15___db_addr_0;
        break;
       }
      }
     } else {
      $__db_addr_2 = $incdec_ptr15___db_addr_0;
     }
    }
    break;
   }
  default:
   {
    $__db_addr_2 = $__db_addr_0218;
   }
  }
  $__p_0217 = $__p_0217 + 1 | 0;
  if (!($__p_0217 >>> 0 < 4 >>> 0)) {
   break;
  } else {
   $__db_addr_0218 = $__db_addr_2;
  }
 }
 $50 = HEAP8[$__size__i_i_i >> 0] | 0;
 $tobool_i_i = ($50 & 1) == 0;
 if ($tobool_i_i) {
  $cond_i = ($50 & 255) >>> 1;
 } else {
  $cond_i = HEAP32[$__size__i2_i_i >> 2] | 0;
 }
 if ($cond_i >>> 0 > 1 >>> 0) {
  if ($tobool_i_i) {
   $cond_i6_i = ($50 & 255) >>> 1;
   $_pn = $arrayidx_i_i_i_i136;
  } else {
   $cond_i6_i = HEAP32[$__size__i2_i_i >> 2] | 0;
   $_pn = HEAP32[$__data__i_i_i_i133 >> 2] | 0;
  }
  $add_ptr_i_i242 = $_pn + 1 | 0;
  $add_ptr_i = $_pn + $cond_i6_i | 0;
  $54 = HEAP32[$__me >> 2] | 0;
  if (($add_ptr_i_i242 | 0) == ($add_ptr_i | 0)) {
   $__result_addr_0_lcssa_i_i = $54;
  } else {
   $__result_addr_05_i_i = $54;
   $55 = $add_ptr_i_i242;
   while (1) {
    HEAP8[$__result_addr_05_i_i >> 0] = HEAP8[$55 >> 0] | 0;
    $incdec_ptr_i_i_i = $55 + 1 | 0;
    $incdec_ptr_i_i = $__result_addr_05_i_i + 1 | 0;
    if (($incdec_ptr_i_i_i | 0) == ($add_ptr_i | 0)) {
     $__result_addr_0_lcssa_i_i = $incdec_ptr_i_i;
     break;
    } else {
     $__result_addr_05_i_i = $incdec_ptr_i_i;
     $55 = $incdec_ptr_i_i_i;
    }
   }
  }
  HEAP32[$__me >> 2] = $__result_addr_0_lcssa_i_i;
 }
 $and93 = $__flags & 176;
 if (($and93 | 0) == 16) {
  return;
 } else if (($and93 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  return;
 }
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $__size__i_i_i = 0, $__data__i_i_i_i131 = 0, $__data__i1_i_i_i = 0, $__size__i_i_i137 = 0, $tobool = 0, $__data__i_i_i156 = 0, $__data__i1_i_i183 = 0, $cmp24 = 0, $__size__i_i_i114 = 0, $arrayidx_i_i_i_i110 = 0, $__data__i_i_i_i107 = 0, $__size__i2_i98 = 0, $1 = 0, $__db_addr_0218 = 0, $__p_0217 = 0, $call_i = 0, $6 = 0, $7 = 0, $tobool_i_i_i = 0, $cond_i_i = 0, $cond_i_i_i133 = 0, $10 = 0, $11 = 0, $12 = 0, $tobool_i_i_i139 = 0, $cond_i_i145 = 0, $cond_i_i158226 = 0, $cond_i6_i191 = 0, $add_ptr_i192 = 0, $16 = 0, $19 = 0, $20 = 0, $__result_addr_05_i_i171 = 0, $__result_addr_0_lcssa_i_i178 = 0, $23 = 0, $incdec_ptr15___db_addr_0 = 0, $__d_0196 = 0, $incdec_ptr23 = 0, $__d_0_lcssa = 0, $incdec_ptr32205 = 0, $__f_0201 = 0, $__d_1200 = 0, $incdec_ptr32 = 0, $cmp29 = 0, $__d_1_lcssa231 = 0, $__f_0_lcssa229 = 0, $call_i136 = 0, $28 = 0, $incdec_ptr40207 = 0, $incdec_ptr40211 = 0, $29 = 0, $__f_1208 = 0, $__d_1_lcssa230234 = 0, $_lcssa = 0, $__d_2 = 0, $call_i126 = 0, $31 = 0, $incdec_ptr49 = 0, $32 = 0, $tobool_i_i_i116 = 0, $cond_i_i122 = 0, $cond_i_i_i112 = 0, $__gl_0216_ph = 0, $36 = 0, $__gl_0216 = 0, $__ig_0215 = 0, $__ng_0214 = 0, $__d_3213 = 0, $incdec_ptr61 = 0, $inc = 0, $37 = 0, $tobool_i_i97 = 0, $cond_i103 = 0, $cond_i_i_i92 = 0, $cond_i_i_i = 0, $43 = 0, $__ng_1 = 0, $__ig_1 = 0, $__gl_1 = 0, $incdec_ptr79 = 0, $44 = 0, $incdec_ptr80 = 0, $45 = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $46 = 0, $incdec_ptr2_i_i = 0, $incdec_ptr_i_i81 = 0, $__db_addr_2 = 0, $48 = 0, $tobool_i_i = 0, $cond_i = 0, $_pn = 0, $cond_i6_i = 0, $add_ptr_i_i236 = 0, $add_ptr_i = 0, $52 = 0, $55 = 0, $56 = 0, $__result_addr_05_i_i = 0, $__result_addr_0_lcssa_i_i = 0, $and93 = 0, label = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__ct;
 $__size__i_i_i = $__sn;
 $__data__i_i_i_i131 = $__sn + 4 | 0;
 $__data__i1_i_i_i = $__sn + 8 | 0;
 $__size__i_i_i137 = $__sym;
 $tobool = ($__flags & 512 | 0) == 0;
 $__data__i_i_i156 = $__sym + 4 | 0;
 $__data__i1_i_i183 = $__sym + 8 | 0;
 $cmp24 = ($__fd | 0) > 0;
 $__size__i_i_i114 = $__grp;
 $arrayidx_i_i_i_i110 = $__grp + 1 | 0;
 $__data__i_i_i_i107 = $__grp + 8 | 0;
 $__size__i2_i98 = $__grp + 4 | 0;
 $1 = $__ct;
 $__p_0217 = 0;
 $__db_addr_0218 = $__db;
 while (1) {
  switch (HEAP8[$__pat + $__p_0217 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $__db_addr_2 = $__db_addr_0218;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $call_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $6 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $6 + 4;
    HEAP32[$6 >> 2] = $call_i;
    $__db_addr_2 = $__db_addr_0218;
    break;
   }
  case 3:
   {
    $7 = HEAP8[$__size__i_i_i >> 0] | 0;
    $tobool_i_i_i = ($7 & 1) == 0;
    if ($tobool_i_i_i) {
     $cond_i_i = ($7 & 255) >>> 1;
    } else {
     $cond_i_i = HEAP32[$__data__i_i_i_i131 >> 2] | 0;
    }
    if (($cond_i_i | 0) == 0) {
     $__db_addr_2 = $__db_addr_0218;
    } else {
     if ($tobool_i_i_i) {
      $cond_i_i_i133 = $__data__i_i_i_i131;
     } else {
      $cond_i_i_i133 = HEAP32[$__data__i1_i_i_i >> 2] | 0;
     }
     $10 = HEAP32[$cond_i_i_i133 >> 2] | 0;
     $11 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $11 + 4;
     HEAP32[$11 >> 2] = $10;
     $__db_addr_2 = $__db_addr_0218;
    }
    break;
   }
  case 2:
   {
    $12 = HEAP8[$__size__i_i_i137 >> 0] | 0;
    $tobool_i_i_i139 = ($12 & 1) == 0;
    if ($tobool_i_i_i139) {
     $cond_i_i145 = ($12 & 255) >>> 1;
    } else {
     $cond_i_i145 = HEAP32[$__data__i_i_i156 >> 2] | 0;
    }
    if (($cond_i_i145 | 0) == 0 | $tobool) {
     $__db_addr_2 = $__db_addr_0218;
    } else {
     if ($tobool_i_i_i139) {
      $cond_i6_i191 = ($12 & 255) >>> 1;
      $cond_i_i158226 = $__data__i_i_i156;
     } else {
      $cond_i6_i191 = HEAP32[$__data__i_i_i156 >> 2] | 0;
      $cond_i_i158226 = HEAP32[$__data__i1_i_i183 >> 2] | 0;
     }
     $add_ptr_i192 = $cond_i_i158226 + ($cond_i6_i191 << 2) | 0;
     $16 = HEAP32[$__me >> 2] | 0;
     if (($cond_i_i158226 | 0) == ($add_ptr_i192 | 0)) {
      $__result_addr_0_lcssa_i_i178 = $16;
     } else {
      $19 = ($cond_i_i158226 + ($cond_i6_i191 - 1 << 2) - $cond_i_i158226 | 0) >>> 2;
      $__result_addr_05_i_i171 = $16;
      $20 = $cond_i_i158226;
      while (1) {
       HEAP32[$__result_addr_05_i_i171 >> 2] = HEAP32[$20 >> 2];
       $20 = $20 + 4 | 0;
       if (($20 | 0) == ($add_ptr_i192 | 0)) {
        break;
       } else {
        $__result_addr_05_i_i171 = $__result_addr_05_i_i171 + 4 | 0;
       }
      }
      $__result_addr_0_lcssa_i_i178 = $16 + ($19 + 1 << 2) | 0;
     }
     HEAP32[$__me >> 2] = $__result_addr_0_lcssa_i_i178;
     $__db_addr_2 = $__db_addr_0218;
    }
    break;
   }
  case 4:
   {
    $23 = HEAP32[$__me >> 2] | 0;
    $incdec_ptr15___db_addr_0 = $__neg ? $__db_addr_0218 + 4 | 0 : $__db_addr_0218;
    L32 : do {
     if ($incdec_ptr15___db_addr_0 >>> 0 < $__de >>> 0) {
      $__d_0196 = $incdec_ptr15___db_addr_0;
      while (1) {
       $incdec_ptr23 = $__d_0196 + 4 | 0;
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 127]($__ct, 2048, HEAP32[$__d_0196 >> 2] | 0) | 0)) {
        $__d_0_lcssa = $__d_0196;
        break L32;
       }
       if ($incdec_ptr23 >>> 0 < $__de >>> 0) {
        $__d_0196 = $incdec_ptr23;
       } else {
        $__d_0_lcssa = $incdec_ptr23;
        break;
       }
      }
     } else {
      $__d_0_lcssa = $incdec_ptr15___db_addr_0;
     }
    } while (0);
    if ($cmp24) {
     if ($__d_0_lcssa >>> 0 > $incdec_ptr15___db_addr_0 >>> 0) {
      $__d_1200 = $__d_0_lcssa;
      $__f_0201 = $__fd;
      $incdec_ptr32205 = HEAP32[$__me >> 2] | 0;
      while (1) {
       $__d_1200 = $__d_1200 - 4 | 0;
       $incdec_ptr32 = $incdec_ptr32205 + 4 | 0;
       HEAP32[$incdec_ptr32205 >> 2] = HEAP32[$__d_1200 >> 2];
       $__f_0201 = $__f_0201 - 1 | 0;
       $cmp29 = ($__f_0201 | 0) > 0;
       if (!($__d_1200 >>> 0 > $incdec_ptr15___db_addr_0 >>> 0 & $cmp29)) {
        break;
       } else {
        $incdec_ptr32205 = $incdec_ptr32;
       }
      }
      HEAP32[$__me >> 2] = $incdec_ptr32;
      if ($cmp29) {
       $__f_0_lcssa229 = $__f_0201;
       $__d_1_lcssa231 = $__d_1200;
       label = 33;
      } else {
       HEAP32[$__me >> 2] = $incdec_ptr32205 + 8;
       $_lcssa = $incdec_ptr32;
       $__d_1_lcssa230234 = $__d_1200;
      }
     } else {
      $__f_0_lcssa229 = $__fd;
      $__d_1_lcssa231 = $__d_0_lcssa;
      label = 33;
     }
     if ((label | 0) == 33) {
      label = 0;
      $call_i136 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
      $28 = HEAP32[$__me >> 2] | 0;
      $incdec_ptr40207 = $28 + 4 | 0;
      HEAP32[$__me >> 2] = $incdec_ptr40207;
      if (($__f_0_lcssa229 | 0) > 0) {
       $__f_1208 = $__f_0_lcssa229;
       $29 = $28;
       $incdec_ptr40211 = $incdec_ptr40207;
       while (1) {
        HEAP32[$29 >> 2] = $call_i136;
        $__f_1208 = $__f_1208 - 1 | 0;
        if (($__f_1208 | 0) <= 0) {
         break;
        } else {
         $29 = $incdec_ptr40211;
         $incdec_ptr40211 = $incdec_ptr40211 + 4 | 0;
        }
       }
       HEAP32[$__me >> 2] = $28 + ($__f_0_lcssa229 + 1 << 2);
       $_lcssa = $28 + ($__f_0_lcssa229 << 2) | 0;
       $__d_1_lcssa230234 = $__d_1_lcssa231;
      } else {
       $_lcssa = $28;
       $__d_1_lcssa230234 = $__d_1_lcssa231;
      }
     }
     HEAP32[$_lcssa >> 2] = $__dp;
     $__d_2 = $__d_1_lcssa230234;
    } else {
     $__d_2 = $__d_0_lcssa;
    }
    if (($__d_2 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
     $call_i126 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $31 = HEAP32[$__me >> 2] | 0;
     $incdec_ptr49 = $31 + 4 | 0;
     HEAP32[$__me >> 2] = $incdec_ptr49;
     HEAP32[$31 >> 2] = $call_i126;
     $45 = $incdec_ptr49;
    } else {
     $32 = HEAP8[$__size__i_i_i114 >> 0] | 0;
     $tobool_i_i_i116 = ($32 & 1) == 0;
     if ($tobool_i_i_i116) {
      $cond_i_i122 = ($32 & 255) >>> 1;
     } else {
      $cond_i_i122 = HEAP32[$__size__i2_i98 >> 2] | 0;
     }
     if (($cond_i_i122 | 0) == 0) {
      $__gl_0216_ph = -1;
     } else {
      if ($tobool_i_i_i116) {
       $cond_i_i_i112 = $arrayidx_i_i_i_i110;
      } else {
       $cond_i_i_i112 = HEAP32[$__data__i_i_i_i107 >> 2] | 0;
      }
      $__gl_0216_ph = HEAP8[$cond_i_i_i112 >> 0] | 0;
     }
     $__d_3213 = $__d_2;
     $__ng_0214 = 0;
     $__ig_0215 = 0;
     $__gl_0216 = $__gl_0216_ph;
     $36 = HEAP32[$__me >> 2] | 0;
     while (1) {
      if (($__ng_0214 | 0) == ($__gl_0216 | 0)) {
       $incdec_ptr61 = $36 + 4 | 0;
       HEAP32[$__me >> 2] = $incdec_ptr61;
       HEAP32[$36 >> 2] = $__ts;
       $inc = $__ig_0215 + 1 | 0;
       $37 = HEAP8[$__size__i_i_i114 >> 0] | 0;
       $tobool_i_i97 = ($37 & 1) == 0;
       if ($tobool_i_i97) {
        $cond_i103 = ($37 & 255) >>> 1;
       } else {
        $cond_i103 = HEAP32[$__size__i2_i98 >> 2] | 0;
       }
       if ($inc >>> 0 < $cond_i103 >>> 0) {
        if ($tobool_i_i97) {
         $cond_i_i_i92 = $arrayidx_i_i_i_i110;
        } else {
         $cond_i_i_i92 = HEAP32[$__data__i_i_i_i107 >> 2] | 0;
        }
        if ((HEAP8[$cond_i_i_i92 + $inc >> 0] | 0) == 127) {
         $__gl_1 = -1;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         $43 = $incdec_ptr61;
        } else {
         if ($tobool_i_i97) {
          $cond_i_i_i = $arrayidx_i_i_i_i110;
         } else {
          $cond_i_i_i = HEAP32[$__data__i_i_i_i107 >> 2] | 0;
         }
         $__gl_1 = HEAP8[$cond_i_i_i + $inc >> 0] | 0;
         $__ig_1 = $inc;
         $__ng_1 = 0;
         $43 = $incdec_ptr61;
        }
       } else {
        $__gl_1 = $__gl_0216;
        $__ig_1 = $inc;
        $__ng_1 = 0;
        $43 = $incdec_ptr61;
       }
      } else {
       $__gl_1 = $__gl_0216;
       $__ig_1 = $__ig_0215;
       $__ng_1 = $__ng_0214;
       $43 = $36;
      }
      $incdec_ptr79 = $__d_3213 - 4 | 0;
      $44 = HEAP32[$incdec_ptr79 >> 2] | 0;
      $incdec_ptr80 = $43 + 4 | 0;
      HEAP32[$__me >> 2] = $incdec_ptr80;
      HEAP32[$43 >> 2] = $44;
      if (($incdec_ptr79 | 0) == ($incdec_ptr15___db_addr_0 | 0)) {
       $45 = $incdec_ptr80;
       break;
      } else {
       $__d_3213 = $incdec_ptr79;
       $__ng_0214 = $__ng_1 + 1 | 0;
       $__ig_0215 = $__ig_1;
       $__gl_0216 = $__gl_1;
       $36 = $incdec_ptr80;
      }
     }
    }
    if (($23 | 0) == ($45 | 0)) {
     $__db_addr_2 = $incdec_ptr15___db_addr_0;
    } else {
     $incdec_ptr6_i_i = $45 - 4 | 0;
     if ($incdec_ptr6_i_i >>> 0 > $23 >>> 0) {
      $__first_addr_08_i_i = $23;
      $incdec_ptr9_i_i = $incdec_ptr6_i_i;
      while (1) {
       $46 = HEAP32[$__first_addr_08_i_i >> 2] | 0;
       HEAP32[$__first_addr_08_i_i >> 2] = HEAP32[$incdec_ptr9_i_i >> 2];
       HEAP32[$incdec_ptr9_i_i >> 2] = $46;
       $incdec_ptr2_i_i = $__first_addr_08_i_i + 4 | 0;
       $incdec_ptr_i_i81 = $incdec_ptr9_i_i - 4 | 0;
       if ($incdec_ptr2_i_i >>> 0 < $incdec_ptr_i_i81 >>> 0) {
        $__first_addr_08_i_i = $incdec_ptr2_i_i;
        $incdec_ptr9_i_i = $incdec_ptr_i_i81;
       } else {
        $__db_addr_2 = $incdec_ptr15___db_addr_0;
        break;
       }
      }
     } else {
      $__db_addr_2 = $incdec_ptr15___db_addr_0;
     }
    }
    break;
   }
  default:
   {
    $__db_addr_2 = $__db_addr_0218;
   }
  }
  $__p_0217 = $__p_0217 + 1 | 0;
  if (!($__p_0217 >>> 0 < 4 >>> 0)) {
   break;
  } else {
   $__db_addr_0218 = $__db_addr_2;
  }
 }
 $48 = HEAP8[$__size__i_i_i >> 0] | 0;
 $tobool_i_i = ($48 & 1) == 0;
 if ($tobool_i_i) {
  $cond_i = ($48 & 255) >>> 1;
 } else {
  $cond_i = HEAP32[$__data__i_i_i_i131 >> 2] | 0;
 }
 if ($cond_i >>> 0 > 1 >>> 0) {
  if ($tobool_i_i) {
   $cond_i6_i = ($48 & 255) >>> 1;
   $_pn = $__data__i_i_i_i131;
  } else {
   $cond_i6_i = HEAP32[$__data__i_i_i_i131 >> 2] | 0;
   $_pn = HEAP32[$__data__i1_i_i_i >> 2] | 0;
  }
  $add_ptr_i_i236 = $_pn + 4 | 0;
  $add_ptr_i = $_pn + ($cond_i6_i << 2) | 0;
  $52 = HEAP32[$__me >> 2] | 0;
  if (($add_ptr_i_i236 | 0) == ($add_ptr_i | 0)) {
   $__result_addr_0_lcssa_i_i = $52;
  } else {
   $55 = ($_pn + ($cond_i6_i - 1 << 2) - $add_ptr_i_i236 | 0) >>> 2;
   $__result_addr_05_i_i = $52;
   $56 = $add_ptr_i_i236;
   while (1) {
    HEAP32[$__result_addr_05_i_i >> 2] = HEAP32[$56 >> 2];
    $56 = $56 + 4 | 0;
    if (($56 | 0) == ($add_ptr_i | 0)) {
     break;
    } else {
     $__result_addr_05_i_i = $__result_addr_05_i_i + 4 | 0;
    }
   }
   $__result_addr_0_lcssa_i_i = $52 + ($55 + 1 << 2) | 0;
  }
  HEAP32[$__me >> 2] = $__result_addr_0_lcssa_i_i;
 }
 $and93 = $__flags & 176;
 if (($and93 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  return;
 } else if (($and93 | 0) == 16) {
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  return;
 }
}
function __ZNK9dtNavMesh21findNearestPolyInTileEPK10dtMeshTilePKfS4_Pf($this, $tile, $center, $extents_val, $extents_1_val, $extents_2_val, $nearestPt) {
 $this = $this | 0;
 $tile = $tile | 0;
 $center = $center | 0;
 $extents_val = +$extents_val;
 $extents_1_val = +$extents_1_val;
 $extents_2_val = +$extents_2_val;
 $nearestPt = $nearestPt | 0;
 var $polys = 0, $closestPtPoly = 0, $0 = 0.0, $sub_i = 0.0, $arrayidx3_i = 0, $1 = 0.0, $sub5_i = 0.0, $arrayidx7_i = 0, $2 = 0.0, $sub9_i = 0.0, $add_i18 = 0.0, $add5_i = 0.0, $add9_i = 0.0, $4 = 0, $5 = 0, $6 = 0, $arrayidx4_i1 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $cond5_i_i = 0.0, $10 = 0.0, $11 = 0.0, $cond5_i139_i = 0.0, $12 = 0.0, $13 = 0.0, $cond5_i133_i = 0.0, $cond5_i127_i = 0.0, $cond5_i121_i = 0.0, $cond5_i115_i = 0.0, $and_i4 = 0, $and51_i = 0, $and57_i = 0, $or_i = 0, $or69_i = 0, $or76_i = 0, $16 = 0, $retval_0_i109_i = 0, $node_0182_i = 0, $n_0181_i = 0, $cond_i90_i = 0, $cond23_i_i = 0, $i184_i = 0, $_cond23_i_i = 0, $i_i = 0, $25 = 0, $cmp87_i = 0, $cmp87191_i = 0, $i190_i = 0, $call8694189_i = 0, $n_1_i = 0, $n_1_i12 = 0, $n_1_i11 = 0, $node_0_be_i = 0, $29 = 0, $or4_i_i_i = 0, $32 = 0, $33 = 0, $verts123_i = 0, $i110_0175_i = 0, $n107_0174_i = 0, $mul122_i = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0, $conv128_i = 0, $j_0166_i = 0, $bmax106_sroa_0_0_load147165_i = 0.0, $bmax106_sroa_4_4_load148164_i = 0.0, $bmax106_sroa_8_8_load149163_i = 0.0, $bmin105_sroa_0_0_load150162_i = 0.0, $bmin105_sroa_4_4_load151161_i = 0.0, $bmin105_sroa_8_8_load152160_i = 0.0, $mul134_i = 0, $42 = 0.0, $cond_i_i72_i = 0.0, $43 = 0.0, $cond_i11_i76_i = 0.0, $44 = 0.0, $cond_i9_i80_i = 0.0, $cond_i_i_i = 0.0, $cond_i11_i_i = 0.0, $cond_i9_i_i = 0.0, $inc139_i = 0, $bmax106_sroa_0_0_load147_lcssa_i = 0.0, $bmax106_sroa_4_4_load148_lcssa_i = 0.0, $bmax106_sroa_8_8_load149_lcssa_i = 0.0, $bmin105_sroa_0_0_load150_lcssa_i = 0.0, $bmin105_sroa_4_4_load151_lcssa_i = 0.0, $bmin105_sroa_8_8_load152_lcssa_i = 0.0, $n107_1_i = 0, $inc152_i = 0, $retval_0_i = 0, $m_polyBits_i = 0, $arraydecay7 = 0, $arrayidx2_i14 = 0, $arrayidx5_i16 = 0, $arrayidx3_i11 = 0, $arrayidx5_i = 0, $nearest_029_us = 0, $nearestDistanceSqr_028_us = 0.0, $i_027_us = 0, $45 = 0, $sub_i13_us = 0.0, $sub4_i_us = 0.0, $sub7_i_us = 0.0, $add10_i_us = 0.0, $cmp10_us = 0, $nearest_1_us = 0, $inc_us = 0, $nearest_029 = 0, $nearestDistanceSqr_028 = 0.0, $i_027 = 0, $53 = 0, $55 = 0.0, $sub_i13 = 0.0, $57 = 0.0, $sub4_i = 0.0, $59 = 0.0, $sub7_i = 0.0, $add10_i = 0.0, $nearestDistanceSqr_1 = 0.0, $nearest_1 = 0, $inc = 0, $nearest_0_lcssa = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 $polys = sp | 0;
 $closestPtPoly = sp + 512 | 0;
 $0 = +HEAPF32[$center >> 2];
 $sub_i = $0 - $extents_val;
 $arrayidx3_i = $center + 4 | 0;
 $1 = +HEAPF32[$arrayidx3_i >> 2];
 $sub5_i = $1 - $extents_1_val;
 $arrayidx7_i = $center + 8 | 0;
 $2 = +HEAPF32[$arrayidx7_i >> 2];
 $sub9_i = $2 - $extents_2_val;
 $add_i18 = $0 + $extents_val;
 $add5_i = $1 + $extents_1_val;
 $add9_i = $2 + $extents_2_val;
 $4 = HEAP32[$tile + 36 >> 2] | 0;
 if (($4 | 0) == 0) {
  $29 = HEAP32[$this + 80 >> 2] | 0;
  $or4_i_i_i = HEAP32[$tile >> 2] << (HEAP32[$this + 76 >> 2] | 0) + $29 | (($tile - (HEAP32[$this + 68 >> 2] | 0) | 0) / 60 | 0) << $29;
  $32 = HEAP32[(HEAP32[$tile + 8 >> 2] | 0) + 24 >> 2] | 0;
  if (($32 | 0) <= 0) {
   $nearest_0_lcssa = 0;
   $$etemp$1$0 = 512;
   $$etemp$1$1 = 0;
   STACKTOP = sp;
   return $nearest_0_lcssa | 0;
  }
  $33 = HEAP32[$tile + 12 >> 2] | 0;
  $verts123_i = $tile + 16 | 0;
  $n107_0174_i = 0;
  $i110_0175_i = 0;
  while (1) {
   if ((HEAP8[$33 + ($i110_0175_i << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
    $n107_1_i = $n107_0174_i;
   } else {
    $mul122_i = (HEAPU16[$33 + ($i110_0175_i << 5) + 4 >> 1] | 0) * 3 | 0;
    $36 = HEAP32[$verts123_i >> 2] | 0;
    $37 = +HEAPF32[$36 + ($mul122_i << 2) >> 2];
    $38 = +HEAPF32[$36 + ($mul122_i + 1 << 2) >> 2];
    $39 = +HEAPF32[$36 + ($mul122_i + 2 << 2) >> 2];
    $40 = HEAP8[$33 + ($i110_0175_i << 5) + 30 >> 0] | 0;
    if (($40 & 255) >>> 0 > 1 >>> 0) {
     $conv128_i = $40 & 255;
     $bmin105_sroa_8_8_load152160_i = $39;
     $bmin105_sroa_4_4_load151161_i = $38;
     $bmin105_sroa_0_0_load150162_i = $37;
     $bmax106_sroa_8_8_load149163_i = $39;
     $bmax106_sroa_4_4_load148164_i = $38;
     $bmax106_sroa_0_0_load147165_i = $37;
     $j_0166_i = 1;
     while (1) {
      $mul134_i = (HEAPU16[$33 + ($i110_0175_i << 5) + 4 + ($j_0166_i << 1) >> 1] | 0) * 3 | 0;
      $42 = +HEAPF32[$36 + ($mul134_i << 2) >> 2];
      $cond_i_i72_i = $bmin105_sroa_0_0_load150162_i < $42 ? $bmin105_sroa_0_0_load150162_i : $42;
      $43 = +HEAPF32[$36 + ($mul134_i + 1 << 2) >> 2];
      $cond_i11_i76_i = $bmin105_sroa_4_4_load151161_i < $43 ? $bmin105_sroa_4_4_load151161_i : $43;
      $44 = +HEAPF32[$36 + ($mul134_i + 2 << 2) >> 2];
      $cond_i9_i80_i = $bmin105_sroa_8_8_load152160_i < $44 ? $bmin105_sroa_8_8_load152160_i : $44;
      $cond_i_i_i = $bmax106_sroa_0_0_load147165_i > $42 ? $bmax106_sroa_0_0_load147165_i : $42;
      $cond_i11_i_i = $bmax106_sroa_4_4_load148164_i > $43 ? $bmax106_sroa_4_4_load148164_i : $43;
      $cond_i9_i_i = $bmax106_sroa_8_8_load149163_i > $44 ? $bmax106_sroa_8_8_load149163_i : $44;
      $inc139_i = $j_0166_i + 1 | 0;
      if (($inc139_i | 0) < ($conv128_i | 0)) {
       $bmin105_sroa_8_8_load152160_i = $cond_i9_i80_i;
       $bmin105_sroa_4_4_load151161_i = $cond_i11_i76_i;
       $bmin105_sroa_0_0_load150162_i = $cond_i_i72_i;
       $bmax106_sroa_8_8_load149163_i = $cond_i9_i_i;
       $bmax106_sroa_4_4_load148164_i = $cond_i11_i_i;
       $bmax106_sroa_0_0_load147165_i = $cond_i_i_i;
       $j_0166_i = $inc139_i;
      } else {
       $bmin105_sroa_8_8_load152_lcssa_i = $cond_i9_i80_i;
       $bmin105_sroa_4_4_load151_lcssa_i = $cond_i11_i76_i;
       $bmin105_sroa_0_0_load150_lcssa_i = $cond_i_i72_i;
       $bmax106_sroa_8_8_load149_lcssa_i = $cond_i9_i_i;
       $bmax106_sroa_4_4_load148_lcssa_i = $cond_i11_i_i;
       $bmax106_sroa_0_0_load147_lcssa_i = $cond_i_i_i;
       break;
      }
     }
    } else {
     $bmin105_sroa_8_8_load152_lcssa_i = $39;
     $bmin105_sroa_4_4_load151_lcssa_i = $38;
     $bmin105_sroa_0_0_load150_lcssa_i = $37;
     $bmax106_sroa_8_8_load149_lcssa_i = $39;
     $bmax106_sroa_4_4_load148_lcssa_i = $38;
     $bmax106_sroa_0_0_load147_lcssa_i = $37;
    }
    if ($sub9_i > $bmax106_sroa_8_8_load149_lcssa_i) {
     $n107_1_i = $n107_0174_i;
    } else {
     if ($add9_i >= $bmin105_sroa_8_8_load152_lcssa_i & (($n107_0174_i | 0) < 128 & ($sub5_i > $bmax106_sroa_4_4_load148_lcssa_i | $add5_i < $bmin105_sroa_4_4_load151_lcssa_i ? 0 : $sub_i > $bmax106_sroa_0_0_load147_lcssa_i | $add_i18 < $bmin105_sroa_0_0_load150_lcssa_i ? 0 : 1))) {
      HEAP32[$polys + ($n107_0174_i << 2) >> 2] = $or4_i_i_i | $i110_0175_i;
      $n107_1_i = $n107_0174_i + 1 | 0;
     } else {
      $n107_1_i = $n107_0174_i;
     }
    }
   }
   $inc152_i = $i110_0175_i + 1 | 0;
   if (($inc152_i | 0) < ($32 | 0)) {
    $n107_0174_i = $n107_1_i;
    $i110_0175_i = $inc152_i;
   } else {
    $retval_0_i = $n107_1_i;
    break;
   }
  }
 } else {
  $5 = HEAP32[$tile + 8 >> 2] | 0;
  $6 = HEAP32[$5 + 48 >> 2] | 0;
  $arrayidx4_i1 = $4 + ($6 << 4) | 0;
  $7 = +HEAPF32[$5 + 96 >> 2];
  $8 = +HEAPF32[$5 + 72 >> 2];
  $9 = +HEAPF32[$5 + 84 >> 2];
  if ($sub_i < $8) {
   $cond5_i_i = $8;
  } else {
   $cond5_i_i = $sub_i > $9 ? $9 : $sub_i;
  }
  $10 = +HEAPF32[$5 + 76 >> 2];
  $11 = +HEAPF32[$5 + 88 >> 2];
  if ($sub5_i < $10) {
   $cond5_i139_i = $10;
  } else {
   $cond5_i139_i = $sub5_i > $11 ? $11 : $sub5_i;
  }
  $12 = +HEAPF32[$5 + 80 >> 2];
  $13 = +HEAPF32[$5 + 92 >> 2];
  if ($sub9_i < $12) {
   $cond5_i133_i = $12;
  } else {
   $cond5_i133_i = $sub9_i > $13 ? $13 : $sub9_i;
  }
  if ($add_i18 < $8) {
   $cond5_i127_i = $8;
  } else {
   $cond5_i127_i = $add_i18 > $9 ? $9 : $add_i18;
  }
  if ($add5_i < $10) {
   $cond5_i121_i = $10;
  } else {
   $cond5_i121_i = $add5_i > $11 ? $11 : $add5_i;
  }
  if ($add9_i < $12) {
   $cond5_i115_i = $12;
  } else {
   $cond5_i115_i = $add9_i > $13 ? $13 : $add9_i;
  }
  $and_i4 = ~~($7 * ($cond5_i_i - $8)) & -2;
  $and51_i = ~~($7 * ($cond5_i139_i - $10)) & -2;
  $and57_i = ~~($7 * ($cond5_i133_i - $12)) & -2;
  $or_i = ~~($7 * ($cond5_i127_i - $8) + 1.0) | 1;
  $or69_i = ~~($7 * ($cond5_i121_i - $10) + 1.0) | 1;
  $or76_i = ~~($7 * ($cond5_i115_i - $12) + 1.0) | 1;
  if (($tile | 0) == 0) {
   $retval_0_i109_i = 0;
  } else {
   $16 = HEAP32[$this + 80 >> 2] | 0;
   $retval_0_i109_i = HEAP32[$tile >> 2] << (HEAP32[$this + 76 >> 2] | 0) + $16 | (($tile - (HEAP32[$this + 68 >> 2] | 0) | 0) / 60 | 0) << $16;
  }
  if (($6 | 0) > 0) {
   $n_0181_i = 0;
   $node_0182_i = $4;
  } else {
   $nearest_0_lcssa = 0;
   $$etemp$1$0 = 512;
   $$etemp$1$1 = 0;
   STACKTOP = sp;
   return $nearest_0_lcssa | 0;
  }
  while (1) {
   if (($and_i4 & 65535) >>> 0 > (HEAPU16[$node_0182_i + 6 >> 1] | 0) >>> 0) {
    $cond_i90_i = 0;
   } else {
    $cond_i90_i = ($or_i & 65535) >>> 0 >= (HEAPU16[$node_0182_i >> 1] | 0) >>> 0;
   }
   if (($and51_i & 65535) >>> 0 > (HEAPU16[$node_0182_i + 8 >> 1] | 0) >>> 0) {
    $cond23_i_i = 0;
   } else {
    $cond23_i_i = $cond_i90_i & ($or69_i & 65535) >>> 0 >= (HEAPU16[$node_0182_i + 2 >> 1] | 0) >>> 0;
   }
   if (($and57_i & 65535) >>> 0 > (HEAPU16[$node_0182_i + 10 >> 1] | 0) >>> 0) {
    $i184_i = $node_0182_i + 12 | 0;
    $n_1_i = $n_0181_i;
    $call8694189_i = 0;
    $i190_i = $i184_i;
    $cmp87191_i = (HEAP32[$i184_i >> 2] | 0) > -1;
    label = 25;
   } else {
    $_cond23_i_i = $cond23_i_i & ($or76_i & 65535) >>> 0 >= (HEAPU16[$node_0182_i + 4 >> 1] | 0) >>> 0;
    $i_i = $node_0182_i + 12 | 0;
    $25 = HEAP32[$i_i >> 2] | 0;
    $cmp87_i = ($25 | 0) > -1;
    if ($cmp87_i & $_cond23_i_i & ($n_0181_i | 0) < 128) {
     HEAP32[$polys + ($n_0181_i << 2) >> 2] = $25 | $retval_0_i109_i;
     $n_1_i12 = $n_0181_i + 1 | 0;
     label = 26;
    } else {
     $n_1_i = $n_0181_i;
     $call8694189_i = $_cond23_i_i;
     $i190_i = $i_i;
     $cmp87191_i = $cmp87_i;
     label = 25;
    }
   }
   if ((label | 0) == 25) {
    label = 0;
    if ($call8694189_i | $cmp87191_i) {
     $n_1_i12 = $n_1_i;
     label = 26;
    } else {
     $node_0_be_i = $node_0182_i + (-(HEAP32[$i190_i >> 2] | 0) << 4) | 0;
     $n_1_i11 = $n_1_i;
    }
   }
   if ((label | 0) == 26) {
    label = 0;
    $node_0_be_i = $node_0182_i + 16 | 0;
    $n_1_i11 = $n_1_i12;
   }
   if ($node_0_be_i >>> 0 < $arrayidx4_i1 >>> 0) {
    $n_0181_i = $n_1_i11;
    $node_0182_i = $node_0_be_i;
   } else {
    $retval_0_i = $n_1_i11;
    break;
   }
  }
 }
 if (($retval_0_i | 0) <= 0) {
  $nearest_0_lcssa = 0;
  $$etemp$1$0 = 512;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $nearest_0_lcssa | 0;
 }
 $m_polyBits_i = $this + 80 | 0;
 $arraydecay7 = $closestPtPoly | 0;
 $arrayidx2_i14 = $closestPtPoly + 4 | 0;
 $arrayidx5_i16 = $closestPtPoly + 8 | 0;
 $arrayidx3_i11 = $nearestPt + 4 | 0;
 $arrayidx5_i = $nearestPt + 8 | 0;
 if (($nearestPt | 0) == 0) {
  $i_027_us = 0;
  $nearestDistanceSqr_028_us = 3.4028234663852886e+38;
  $nearest_029_us = 0;
  while (1) {
   $45 = HEAP32[$polys + ($i_027_us << 2) >> 2] | 0;
   __ZNK9dtNavMesh24closestPointOnPolyInTileEPK10dtMeshTilejPKfPf($tile, (1 << HEAP32[$m_polyBits_i >> 2]) - 1 & $45, $center, $arraydecay7);
   $sub_i13_us = +HEAPF32[$arraydecay7 >> 2] - +HEAPF32[$center >> 2];
   $sub4_i_us = +HEAPF32[$arrayidx2_i14 >> 2] - +HEAPF32[$arrayidx3_i >> 2];
   $sub7_i_us = +HEAPF32[$arrayidx5_i16 >> 2] - +HEAPF32[$arrayidx7_i >> 2];
   $add10_i_us = $sub_i13_us * $sub_i13_us + $sub4_i_us * $sub4_i_us + $sub7_i_us * $sub7_i_us;
   $cmp10_us = $add10_i_us < $nearestDistanceSqr_028_us;
   $nearest_1_us = $cmp10_us ? $45 : $nearest_029_us;
   $inc_us = $i_027_us + 1 | 0;
   if (($inc_us | 0) < ($retval_0_i | 0)) {
    $i_027_us = $inc_us;
    $nearestDistanceSqr_028_us = $cmp10_us ? $add10_i_us : $nearestDistanceSqr_028_us;
    $nearest_029_us = $nearest_1_us;
   } else {
    $nearest_0_lcssa = $nearest_1_us;
    break;
   }
  }
  $$etemp$1$0 = 512;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $nearest_0_lcssa | 0;
 } else {
  $i_027 = 0;
  $nearestDistanceSqr_028 = 3.4028234663852886e+38;
  $nearest_029 = 0;
 }
 while (1) {
  $53 = HEAP32[$polys + ($i_027 << 2) >> 2] | 0;
  __ZNK9dtNavMesh24closestPointOnPolyInTileEPK10dtMeshTilejPKfPf($tile, (1 << HEAP32[$m_polyBits_i >> 2]) - 1 & $53, $center, $arraydecay7);
  $55 = +HEAPF32[$arraydecay7 >> 2];
  $sub_i13 = $55 - +HEAPF32[$center >> 2];
  $57 = +HEAPF32[$arrayidx2_i14 >> 2];
  $sub4_i = $57 - +HEAPF32[$arrayidx3_i >> 2];
  $59 = +HEAPF32[$arrayidx5_i16 >> 2];
  $sub7_i = $59 - +HEAPF32[$arrayidx7_i >> 2];
  $add10_i = $sub_i13 * $sub_i13 + $sub4_i * $sub4_i + $sub7_i * $sub7_i;
  if ($add10_i < $nearestDistanceSqr_028) {
   HEAPF32[$nearestPt >> 2] = $55;
   HEAPF32[$arrayidx3_i11 >> 2] = $57;
   HEAPF32[$arrayidx5_i >> 2] = $59;
   $nearest_1 = $53;
   $nearestDistanceSqr_1 = $add10_i;
  } else {
   $nearest_1 = $nearest_029;
   $nearestDistanceSqr_1 = $nearestDistanceSqr_028;
  }
  $inc = $i_027 + 1 | 0;
  if (($inc | 0) < ($retval_0_i | 0)) {
   $i_027 = $inc;
   $nearestDistanceSqr_028 = $nearestDistanceSqr_1;
   $nearest_029 = $nearest_1;
  } else {
   $nearest_0_lcssa = $nearest_1;
   break;
  }
 }
 $$etemp$1$0 = 512;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return $nearest_0_lcssa | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i$0 = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i$0 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$11$0 = 104;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 4;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 12;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 12;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 4;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$11$0 = 104;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 4;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 12;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 12;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 4;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$11$0 = 104;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 4;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 12;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 12;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 4;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i$0 = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, $$etemp$16$0 = 0, $$etemp$16$1 = 0, $$etemp$17$0 = 0, $$etemp$17$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i$0 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i$0;
 HEAP32[$__v + 4 >> 2] = tempRet0;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$11$0 = 104;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 4;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 12;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 12;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 4;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$11$0 = 104;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 4;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 12;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 12;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  $$etemp$16$0 = 4;
  $$etemp$16$1 = 0;
  $$etemp$17$0 = 4;
  $$etemp$17$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$11$0 = 104;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 4;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 12;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 12;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 $$etemp$16$0 = 4;
 $$etemp$16$1 = 0;
 $$etemp$17$0 = 4;
 $$etemp$17$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$9$0 = 104;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 4;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 12;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP16[$__v >> 1] = $call36_i;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$9$0 = 104;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 4;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 12;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$9$0 = 104;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 4;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 12;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__atoms_i = 0, $__thousands_sep_i = 0, $__grouping_i = 0, $__buf_i = 0, $__a_end_i = 0, $__g_i = 0, $__g_end_i = 0, $__dc_i = 0, $1 = 0, $3 = 0, $5 = 0, $6 = 0, $and_i_i = 0, $retval_0_i_i = 0, $arraydecay_i = 0, $__data__i_i_i_i = 0, $arrayidx_i_i_i_i = 0, $__data__i_i_i118_pre_phi_i = 0, $arrayidx_i_i_i121_pre_phi_i = 0, $cond_i_i17_i = 0, $arraydecay5_i = 0, $__cap__i_i109_i = 0, $__size__i2_i88_i = 0, $15 = 0, $agg_tmp1_sroa_0_0 = 0, $agg_tmp23_sroa_0_0 = 0, $_pre_i_i_i38_i = 0, $__a_0_i = 0, $16 = 0, $retval_0_i_i_i_i35_i = 0, $cmp_i1_i_i_i36_i = 0, $agg_tmp1_sroa_0_1 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0_i_i12_i_i53_i = 0, $agg_tmp23_sroa_0_2 = 0, $29 = 0, $tobool_i_i67_i = 0, $cond_i73_i = 0, $cond_i83130_i = 0, $cond_i113_i = 0, $cond_i_i123_i = 0, $__a_1_i = 0, $__ninp__i_i96_i = 0, $40 = 0, $__einp__i_i97_i = 0, $retval_0_i_i_i = 0, $45 = 0, $_pre_i15_i_i_i = 0, $__a_2_i = 0, $49 = 0, $cond_i22_i = 0, $51 = 0, $52 = 0, $call36_i = 0, $54 = 0, $55 = 0, $cond_i_i_i = 0, $incdec_ptr6_i_i_i_i = 0, $incdec_ptr9_i_i_i_i = 0, $__first_addr_08_i_i_i_i = 0, $57 = 0, $59 = 0, $cond_i_i44_i_i = 0, $cond_i25_i_i = 0, $add_ptr3_i_i = 0, $62 = 0, $or_cond2736_i_i = 0, $sub_ptr_lhs_cast_i_i = 0, $or_cond2739_i_i = 0, $63 = 0, $__r_038_i_i = 0, $__ig_037_i_i = 0, $incdec_ptr___ig_0_i_i = 0, $incdec_ptr18_i_i = 0, $65 = 0, $or_cond27_i_i = 0, $or_cond27_lcssa_i_i = 0, $_lcssa_i_i = 0, $69 = 0, $retval_0_i_i_i_i_i = 0, $cmp_i1_i_i_i_i = 0, $agg_tmp1_sroa_0_2 = 0, $74 = 0, $75 = 0, $retval_0_i_i12_i_i_i = 0, $83 = 0, $85 = 0, $$etemp$9$0 = 0, $$etemp$9$1 = 0, $$etemp$10$0 = 0, $$etemp$10$1 = 0, $$etemp$11$0 = 0, $$etemp$11$1 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, $$etemp$13$0 = 0, $$etemp$13$1 = 0, $$etemp$14$0 = 0, $$etemp$14$1 = 0, $$etemp$15$0 = 0, $$etemp$15$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 328 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__atoms_i = sp | 0;
 $__thousands_sep_i = sp + 104 | 0;
 $__grouping_i = sp + 112 | 0;
 $__buf_i = sp + 128 | 0;
 $__a_end_i = sp + 144 | 0;
 $__g_i = sp + 152 | 0;
 $__g_end_i = sp + 312 | 0;
 $__dc_i = sp + 320 | 0;
 $1 = HEAP32[$__b >> 2] | 0;
 $3 = HEAP32[$__e >> 2] | 0;
 $5 = $__grouping_i;
 $6 = $__buf_i;
 $and_i_i = HEAP32[$__iob + 4 >> 2] & 74;
 if (($and_i_i | 0) == 8) {
  $retval_0_i_i = 16;
 } else if (($and_i_i | 0) == 0) {
  $retval_0_i_i = 0;
 } else if (($and_i_i | 0) == 64) {
  $retval_0_i_i = 8;
 } else {
  $retval_0_i_i = 10;
 }
 $arraydecay_i = $__atoms_i | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping_i, $__iob, $arraydecay_i, $__thousands_sep_i);
 _memset($6 | 0, 0, 12) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, 10);
 if ((HEAP8[$6 >> 0] & 1) == 0) {
  $arrayidx_i_i_i_i = $__buf_i + 1 | 0;
  $cond_i_i17_i = $arrayidx_i_i_i_i;
  $arrayidx_i_i_i121_pre_phi_i = $arrayidx_i_i_i_i;
  $__data__i_i_i118_pre_phi_i = $__buf_i + 8 | 0;
 } else {
  $__data__i_i_i_i = $__buf_i + 8 | 0;
  $cond_i_i17_i = HEAP32[$__data__i_i_i_i >> 2] | 0;
  $arrayidx_i_i_i121_pre_phi_i = $__buf_i + 1 | 0;
  $__data__i_i_i118_pre_phi_i = $__data__i_i_i_i;
 }
 HEAP32[$__a_end_i >> 2] = $cond_i_i17_i;
 $arraydecay5_i = $__g_i | 0;
 HEAP32[$__g_end_i >> 2] = $arraydecay5_i;
 HEAP32[$__dc_i >> 2] = 0;
 $__cap__i_i109_i = $__buf_i | 0;
 $__size__i2_i88_i = $__buf_i + 4 | 0;
 $15 = HEAP32[$__thousands_sep_i >> 2] | 0;
 $__a_0_i = $cond_i_i17_i;
 $_pre_i_i_i38_i = $1;
 $agg_tmp23_sroa_0_0 = $3;
 $agg_tmp1_sroa_0_0 = $1;
 while (1) {
  if (($_pre_i_i_i38_i | 0) == 0) {
   $22 = 1;
   $21 = 0;
   $agg_tmp1_sroa_0_1 = $agg_tmp1_sroa_0_0;
  } else {
   $16 = HEAP32[$_pre_i_i_i38_i + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$_pre_i_i_i38_i + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i35_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i38_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i38_i) | 0;
   } else {
    $retval_0_i_i_i_i35_i = HEAP32[$16 >> 2] | 0;
   }
   $cmp_i1_i_i_i36_i = ($retval_0_i_i_i_i35_i | 0) == -1;
   $22 = $cmp_i1_i_i_i36_i ? 1 : 0;
   $21 = $cmp_i1_i_i_i36_i ? 0 : $_pre_i_i_i38_i;
   $agg_tmp1_sroa_0_1 = $cmp_i1_i_i_i36_i ? 0 : $agg_tmp1_sroa_0_0;
  }
  if (($agg_tmp23_sroa_0_0 | 0) == 0) {
   label = 20;
  } else {
   $23 = HEAP32[$agg_tmp23_sroa_0_0 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$agg_tmp23_sroa_0_0 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i53_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$agg_tmp23_sroa_0_0 >> 2] | 0) + 36 >> 2] & 255]($agg_tmp23_sroa_0_0) | 0;
   } else {
    $retval_0_i_i12_i_i53_i = HEAP32[$23 >> 2] | 0;
   }
   if (($retval_0_i_i12_i_i53_i | 0) == -1) {
    label = 20;
   } else {
    if ($22) {
     $agg_tmp23_sroa_0_2 = $agg_tmp23_sroa_0_0;
    } else {
     $__a_2_i = $__a_0_i;
     $_pre_i15_i_i_i = $agg_tmp23_sroa_0_0;
     break;
    }
   }
  }
  if ((label | 0) == 20) {
   label = 0;
   if ($22) {
    $__a_2_i = $__a_0_i;
    $_pre_i15_i_i_i = 0;
    break;
   } else {
    $agg_tmp23_sroa_0_2 = 0;
   }
  }
  $29 = HEAP8[$6 >> 0] | 0;
  $tobool_i_i67_i = ($29 & 1) == 0;
  if ($tobool_i_i67_i) {
   $cond_i73_i = ($29 & 255) >>> 1;
  } else {
   $cond_i73_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
  }
  if (((HEAP32[$__a_end_i >> 2] | 0) - $__a_0_i | 0) == ($cond_i73_i | 0)) {
   if ($tobool_i_i67_i) {
    $cond_i83130_i = ($29 & 255) >>> 1;
   } else {
    $cond_i83130_i = HEAP32[$__size__i2_i88_i >> 2] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i83130_i << 1);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i113_i = 10;
   } else {
    $cond_i113_i = (HEAP32[$__cap__i_i109_i >> 2] & -2) - 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf_i, $cond_i113_i);
   if ((HEAP8[$6 >> 0] & 1) == 0) {
    $cond_i_i123_i = $arrayidx_i_i_i121_pre_phi_i;
   } else {
    $cond_i_i123_i = HEAP32[$__data__i_i_i118_pre_phi_i >> 2] | 0;
   }
   HEAP32[$__a_end_i >> 2] = $cond_i_i123_i + $cond_i83130_i;
   $__a_1_i = $cond_i_i123_i;
  } else {
   $__a_1_i = $__a_0_i;
  }
  $__ninp__i_i96_i = $21 + 12 | 0;
  $40 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  $__einp__i_i97_i = $21 + 16 | 0;
  if (($40 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   $retval_0_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i = HEAP32[$40 >> 2] | 0;
  }
  if ((__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_0_i_i_i, $retval_0_i_i, $__a_1_i, $__a_end_i, $__dc_i, $15, $__grouping_i, $arraydecay5_i, $__g_end_i, $arraydecay_i) | 0) != 0) {
   $__a_2_i = $__a_1_i;
   $_pre_i15_i_i_i = $agg_tmp23_sroa_0_2;
   break;
  }
  $45 = HEAP32[$__ninp__i_i96_i >> 2] | 0;
  if (($45 | 0) == (HEAP32[$__einp__i_i97_i >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 40 >> 2] & 255]($21) | 0;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  } else {
   HEAP32[$__ninp__i_i96_i >> 2] = $45 + 4;
   $__a_0_i = $__a_1_i;
   $_pre_i_i_i38_i = $21;
   $agg_tmp23_sroa_0_0 = $agg_tmp23_sroa_0_2;
   $agg_tmp1_sroa_0_0 = $agg_tmp1_sroa_0_1;
   continue;
  }
 }
 $49 = HEAP8[$5 >> 0] | 0;
 if (($49 & 1) == 0) {
  $cond_i22_i = ($49 & 255) >>> 1;
 } else {
  $cond_i22_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 if (($cond_i22_i | 0) != 0) {
  $51 = HEAP32[$__g_end_i >> 2] | 0;
  if (($51 - $__g_i | 0) < 160) {
   $52 = HEAP32[$__dc_i >> 2] | 0;
   HEAP32[$__g_end_i >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $52;
  }
 }
 $call36_i = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a_2_i, HEAP32[$__a_end_i >> 2] | 0, $__err, $retval_0_i_i) | 0;
 HEAP32[$__v >> 2] = $call36_i;
 $54 = HEAP32[$__g_end_i >> 2] | 0;
 $55 = HEAP8[$5 >> 0] | 0;
 if (($55 & 1) == 0) {
  $cond_i_i_i = ($55 & 255) >>> 1;
 } else {
  $cond_i_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
 }
 L71 : do {
  if (($cond_i_i_i | 0) != 0) {
   if (($arraydecay5_i | 0) == ($54 | 0)) {
    $59 = $55;
   } else {
    $incdec_ptr6_i_i_i_i = $54 - 4 | 0;
    if ($incdec_ptr6_i_i_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $__first_addr_08_i_i_i_i = $arraydecay5_i;
     $incdec_ptr9_i_i_i_i = $incdec_ptr6_i_i_i_i;
     do {
      $57 = HEAP32[$__first_addr_08_i_i_i_i >> 2] | 0;
      HEAP32[$__first_addr_08_i_i_i_i >> 2] = HEAP32[$incdec_ptr9_i_i_i_i >> 2];
      HEAP32[$incdec_ptr9_i_i_i_i >> 2] = $57;
      $__first_addr_08_i_i_i_i = $__first_addr_08_i_i_i_i + 4 | 0;
      $incdec_ptr9_i_i_i_i = $incdec_ptr9_i_i_i_i - 4 | 0;
     } while ($__first_addr_08_i_i_i_i >>> 0 < $incdec_ptr9_i_i_i_i >>> 0);
     $59 = HEAP8[$5 >> 0] | 0;
    } else {
     $59 = $55;
    }
   }
   if (($59 & 1) == 0) {
    $cond_i25_i_i = ($59 & 255) >>> 1;
    $cond_i_i44_i_i = $__grouping_i + 1 | 0;
   } else {
    $cond_i25_i_i = HEAP32[$__grouping_i + 4 >> 2] | 0;
    $cond_i_i44_i_i = HEAP32[$__grouping_i + 8 >> 2] | 0;
   }
   $add_ptr3_i_i = $54 - 4 | 0;
   $62 = HEAP8[$cond_i_i44_i_i >> 0] | 0;
   $or_cond2736_i_i = $62 << 24 >> 24 < 1 | $62 << 24 >> 24 == 127;
   L83 : do {
    if ($add_ptr3_i_i >>> 0 > $arraydecay5_i >>> 0) {
     $sub_ptr_lhs_cast_i_i = $cond_i_i44_i_i + $cond_i25_i_i | 0;
     $__ig_037_i_i = $cond_i_i44_i_i;
     $__r_038_i_i = $arraydecay5_i;
     $63 = $62;
     $or_cond2739_i_i = $or_cond2736_i_i;
     while (1) {
      if (!$or_cond2739_i_i) {
       if (($63 << 24 >> 24 | 0) != (HEAP32[$__r_038_i_i >> 2] | 0)) {
        break;
       }
      }
      $incdec_ptr___ig_0_i_i = ($sub_ptr_lhs_cast_i_i - $__ig_037_i_i | 0) > 1 ? $__ig_037_i_i + 1 | 0 : $__ig_037_i_i;
      $incdec_ptr18_i_i = $__r_038_i_i + 4 | 0;
      $65 = HEAP8[$incdec_ptr___ig_0_i_i >> 0] | 0;
      $or_cond27_i_i = $65 << 24 >> 24 < 1 | $65 << 24 >> 24 == 127;
      if ($incdec_ptr18_i_i >>> 0 < $add_ptr3_i_i >>> 0) {
       $__ig_037_i_i = $incdec_ptr___ig_0_i_i;
       $__r_038_i_i = $incdec_ptr18_i_i;
       $63 = $65;
       $or_cond2739_i_i = $or_cond27_i_i;
      } else {
       $_lcssa_i_i = $65;
       $or_cond27_lcssa_i_i = $or_cond27_i_i;
       break L83;
      }
     }
     HEAP32[$__err >> 2] = 4;
     break L71;
    } else {
     $_lcssa_i_i = $62;
     $or_cond27_lcssa_i_i = $or_cond2736_i_i;
    }
   } while (0);
   if (!$or_cond27_lcssa_i_i) {
    if (!(((HEAP32[$add_ptr3_i_i >> 2] | 0) - 1 | 0) >>> 0 < $_lcssa_i_i << 24 >> 24 >>> 0)) {
     HEAP32[$__err >> 2] = 4;
    }
   }
  }
 } while (0);
 if (($21 | 0) == 0) {
  $74 = 1;
  $agg_tmp1_sroa_0_2 = $agg_tmp1_sroa_0_1;
 } else {
  $69 = HEAP32[$21 + 12 >> 2] | 0;
  if (($69 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) {
   $retval_0_i_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21) | 0;
  } else {
   $retval_0_i_i_i_i_i = HEAP32[$69 >> 2] | 0;
  }
  $cmp_i1_i_i_i_i = ($retval_0_i_i_i_i_i | 0) == -1;
  $74 = $cmp_i1_i_i_i_i ? 1 : ($agg_tmp1_sroa_0_1 | 0) == 0;
  $agg_tmp1_sroa_0_2 = $cmp_i1_i_i_i_i ? 0 : $agg_tmp1_sroa_0_1;
 }
 if (($_pre_i15_i_i_i | 0) == 0) {
  label = 89;
 } else {
  $75 = HEAP32[$_pre_i15_i_i_i + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$_pre_i15_i_i_i + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i_i >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i_i) | 0;
  } else {
   $retval_0_i_i12_i_i_i = HEAP32[$75 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i_i | 0) == -1) {
   label = 89;
  } else {
   if (!$74) {
    label = 91;
   }
  }
 }
 if ((label | 0) == 89) {
  if ($74) {
   label = 91;
  }
 }
 if ((label | 0) == 91) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 }
 HEAP32[$agg_result >> 2] = $agg_tmp1_sroa_0_2;
 if (!((HEAP8[$6 >> 0] & 1) == 0)) {
  $83 = HEAP32[$__buf_i + 8 >> 2] | 0;
  if (($83 | 0) != 0) {
   _free($83);
  }
 }
 if ((HEAP8[$5 >> 0] & 1) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 $85 = HEAP32[$__grouping_i + 8 >> 2] | 0;
 if (($85 | 0) == 0) {
  $$etemp$9$0 = 104;
  $$etemp$9$1 = 0;
  $$etemp$10$0 = 4;
  $$etemp$10$1 = 0;
  $$etemp$11$0 = 12;
  $$etemp$11$1 = 0;
  $$etemp$12$0 = 12;
  $$etemp$12$1 = 0;
  $$etemp$13$0 = 4;
  $$etemp$13$1 = 0;
  $$etemp$14$0 = 4;
  $$etemp$14$1 = 0;
  $$etemp$15$0 = 4;
  $$etemp$15$1 = 0;
  STACKTOP = sp;
  return;
 }
 _free($85);
 $$etemp$9$0 = 104;
 $$etemp$9$1 = 0;
 $$etemp$10$0 = 4;
 $$etemp$10$1 = 0;
 $$etemp$11$0 = 12;
 $$etemp$11$1 = 0;
 $$etemp$12$0 = 12;
 $$etemp$12$1 = 0;
 $$etemp$13$0 = 4;
 $$etemp$13$1 = 0;
 $$etemp$14$0 = 4;
 $$etemp$14$1 = 0;
 $$etemp$15$0 = 4;
 $$etemp$15$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $__p_i_i_i285 = 0, $__p_i_i_i275 = 0, $__p_i_i_i256 = 0, $__p_i_i_i244 = 0, $__p_i_i_i234 = 0, $__p_i_i_i224 = 0, $__p_i_i_i214 = 0, $__p_i_i_i204 = 0, $__p_i_i_i194 = 0, $__p_i_i_i184 = 0, $__p_i_i_i174 = 0, $__p_i_i_i164 = 0, $__p_i_i_i154 = 0, $__p_i_i_i144 = 0, $__p_i_i_i134 = 0, $__p_i_i_i124 = 0, $__p_i_i_i114 = 0, $__p_i_i_i104 = 0, $__p_i_i_i94 = 0, $__p_i_i_i84 = 0, $__p_i_i_i74 = 0, $__p_i_i_i64 = 0, $__p_i_i_i53 = 0, $__p_i_i_i43 = 0, $__p_i_i_i33 = 0, $__p_i_i_i22 = 0, $__p_i_i_i12 = 0, $__p_i_i_i = 0, $__begin__i_i = 0, $__end__i_i = 0, $__allocated__i_i_i_i_i = 0, $1 = 0, $3 = 0, $__n_addr_0_i_i = 0, $4 = 0, $name_ = 0, $__s_i_i = 0, $5 = 0, $call_i_i_i32 = 0, $call_i_i_i63 = 0, $call_i_i_i_i_i = 0, $call_i_i_i_i_i269 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $__p_i_i_i285 = sp | 0;
 $__p_i_i_i275 = sp + 16 | 0;
 $__p_i_i_i256 = sp + 32 | 0;
 $__p_i_i_i244 = sp + 48 | 0;
 $__p_i_i_i234 = sp + 64 | 0;
 $__p_i_i_i224 = sp + 80 | 0;
 $__p_i_i_i214 = sp + 96 | 0;
 $__p_i_i_i204 = sp + 112 | 0;
 $__p_i_i_i194 = sp + 128 | 0;
 $__p_i_i_i184 = sp + 144 | 0;
 $__p_i_i_i174 = sp + 160 | 0;
 $__p_i_i_i164 = sp + 176 | 0;
 $__p_i_i_i154 = sp + 192 | 0;
 $__p_i_i_i144 = sp + 208 | 0;
 $__p_i_i_i134 = sp + 224 | 0;
 $__p_i_i_i124 = sp + 240 | 0;
 $__p_i_i_i114 = sp + 256 | 0;
 $__p_i_i_i104 = sp + 272 | 0;
 $__p_i_i_i94 = sp + 288 | 0;
 $__p_i_i_i84 = sp + 304 | 0;
 $__p_i_i_i74 = sp + 320 | 0;
 $__p_i_i_i64 = sp + 336 | 0;
 $__p_i_i_i53 = sp + 352 | 0;
 $__p_i_i_i43 = sp + 368 | 0;
 $__p_i_i_i33 = sp + 384 | 0;
 $__p_i_i_i22 = sp + 400 | 0;
 $__p_i_i_i12 = sp + 416 | 0;
 $__p_i_i_i = sp + 432 | 0;
 HEAP32[$this + 4 >> 2] = $refs - 1;
 HEAP32[$this >> 2] = 12992;
 $__begin__i_i = $this + 8 | 0;
 $__end__i_i = $this + 12 | 0;
 $__allocated__i_i_i_i_i = $this + 136 | 0;
 HEAP8[$__allocated__i_i_i_i_i >> 0] = 1;
 $1 = $this + 24 | 0;
 HEAP32[$__end__i_i >> 2] = $1;
 HEAP32[$__begin__i_i >> 2] = $1;
 HEAP32[$this + 16 >> 2] = $__allocated__i_i_i_i_i;
 $__n_addr_0_i_i = 28;
 $3 = $1;
 do {
  if (($3 | 0) == 0) {
   $4 = 0;
  } else {
   HEAP32[$3 >> 2] = 0;
   $4 = HEAP32[$__end__i_i >> 2] | 0;
  }
  $3 = $4 + 4 | 0;
  HEAP32[$__end__i_i >> 2] = $3;
  $__n_addr_0_i_i = $__n_addr_0_i_i - 1 | 0;
 } while (($__n_addr_0_i_i | 0) != 0);
 $name_ = $this + 144 | 0;
 HEAP8[$name_ >> 0] = 2;
 $__s_i_i = $name_;
 HEAP8[$__s_i_i + 1 >> 0] = 67;
 HEAP8[$__s_i_i + 2 >> 0] = 0;
 $5 = HEAP32[$__begin__i_i >> 2] | 0;
 if (($3 | 0) != ($5 | 0)) {
  HEAP32[$__end__i_i >> 2] = $4 + (-(($4 - $5 | 0) >>> 2) << 2);
 }
 HEAP32[5503] = 0;
 HEAP32[5502] = 12696;
 if (!((HEAP32[5832] | 0) == -1)) {
  HEAP32[$__p_i_i_i12 >> 2] = 23328;
  HEAP32[$__p_i_i_i12 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i12 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23328, $__p_i_i_i12);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22008, (HEAP32[5833] | 0) - 1 | 0);
 HEAP32[5501] = 0;
 HEAP32[5500] = 12656;
 if (!((HEAP32[5830] | 0) == -1)) {
  HEAP32[$__p_i_i_i22 >> 2] = 23320;
  HEAP32[$__p_i_i_i22 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i22 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23320, $__p_i_i_i22);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22e3, (HEAP32[5831] | 0) - 1 | 0);
 HEAP32[5557] = 0;
 HEAP32[5556] = 13104;
 HEAP32[5558] = 0;
 HEAP8[22236] = 0;
 $call_i_i_i32 = ___ctype_b_loc() | 0;
 HEAP32[5558] = HEAP32[$call_i_i_i32 >> 2];
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i33 >> 2] = 23648;
  HEAP32[$__p_i_i_i33 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i33 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i33);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22224, (HEAP32[5913] | 0) - 1 | 0);
 HEAP32[5555] = 0;
 HEAP32[5554] = 13024;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i43 >> 2] = 23640;
  HEAP32[$__p_i_i_i43 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i43 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i43);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22216, (HEAP32[5911] | 0) - 1 | 0);
 HEAP32[5509] = 0;
 HEAP32[5508] = 12792;
 if (!((HEAP32[5836] | 0) == -1)) {
  HEAP32[$__p_i_i_i53 >> 2] = 23344;
  HEAP32[$__p_i_i_i53 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i53 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23344, $__p_i_i_i53);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22032, (HEAP32[5837] | 0) - 1 | 0);
 HEAP32[5505] = 0;
 HEAP32[5504] = 12736;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i_i_i63 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i_i_i63;
  }
 }
 HEAP32[5506] = HEAP32[5446];
 if (!((HEAP32[5834] | 0) == -1)) {
  HEAP32[$__p_i_i_i64 >> 2] = 23336;
  HEAP32[$__p_i_i_i64 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i64 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23336, $__p_i_i_i64);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22016, (HEAP32[5835] | 0) - 1 | 0);
 HEAP32[5511] = 0;
 HEAP32[5510] = 12848;
 if (!((HEAP32[5838] | 0) == -1)) {
  HEAP32[$__p_i_i_i74 >> 2] = 23352;
  HEAP32[$__p_i_i_i74 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i74 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23352, $__p_i_i_i74);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22040, (HEAP32[5839] | 0) - 1 | 0);
 HEAP32[5513] = 0;
 HEAP32[5512] = 12904;
 if (!((HEAP32[5840] | 0) == -1)) {
  HEAP32[$__p_i_i_i84 >> 2] = 23360;
  HEAP32[$__p_i_i_i84 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i84 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23360, $__p_i_i_i84);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22048, (HEAP32[5841] | 0) - 1 | 0);
 HEAP32[5483] = 0;
 HEAP32[5482] = 12200;
 HEAP8[21936] = 46;
 HEAP8[21937] = 44;
 _memset(21940, 0, 12) | 0;
 if (!((HEAP32[5816] | 0) == -1)) {
  HEAP32[$__p_i_i_i94 >> 2] = 23264;
  HEAP32[$__p_i_i_i94 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i94 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i94);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21928, (HEAP32[5817] | 0) - 1 | 0);
 HEAP32[5475] = 0;
 HEAP32[5474] = 12152;
 HEAP32[5476] = 46;
 HEAP32[5477] = 44;
 _memset(21912, 0, 12) | 0;
 if (!((HEAP32[5814] | 0) == -1)) {
  HEAP32[$__p_i_i_i104 >> 2] = 23256;
  HEAP32[$__p_i_i_i104 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i104 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i104);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21896, (HEAP32[5815] | 0) - 1 | 0);
 HEAP32[5499] = 0;
 HEAP32[5498] = 12584;
 if (!((HEAP32[5828] | 0) == -1)) {
  HEAP32[$__p_i_i_i114 >> 2] = 23312;
  HEAP32[$__p_i_i_i114 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i114 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23312, $__p_i_i_i114);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21992, (HEAP32[5829] | 0) - 1 | 0);
 HEAP32[5497] = 0;
 HEAP32[5496] = 12512;
 if (!((HEAP32[5826] | 0) == -1)) {
  HEAP32[$__p_i_i_i124 >> 2] = 23304;
  HEAP32[$__p_i_i_i124 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i124 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23304, $__p_i_i_i124);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21984, (HEAP32[5827] | 0) - 1 | 0);
 HEAP32[5495] = 0;
 HEAP32[5494] = 12448;
 if (!((HEAP32[5824] | 0) == -1)) {
  HEAP32[$__p_i_i_i134 >> 2] = 23296;
  HEAP32[$__p_i_i_i134 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i134 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23296, $__p_i_i_i134);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21976, (HEAP32[5825] | 0) - 1 | 0);
 HEAP32[5493] = 0;
 HEAP32[5492] = 12384;
 if (!((HEAP32[5822] | 0) == -1)) {
  HEAP32[$__p_i_i_i144 >> 2] = 23288;
  HEAP32[$__p_i_i_i144 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i144 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23288, $__p_i_i_i144);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21968, (HEAP32[5823] | 0) - 1 | 0);
 HEAP32[5567] = 0;
 HEAP32[5566] = 14032;
 if (!((HEAP32[6032] | 0) == -1)) {
  HEAP32[$__p_i_i_i154 >> 2] = 24128;
  HEAP32[$__p_i_i_i154 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i154 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(24128, $__p_i_i_i154);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22264, (HEAP32[6033] | 0) - 1 | 0);
 HEAP32[5565] = 0;
 HEAP32[5564] = 13968;
 if (!((HEAP32[6030] | 0) == -1)) {
  HEAP32[$__p_i_i_i164 >> 2] = 24120;
  HEAP32[$__p_i_i_i164 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i164 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(24120, $__p_i_i_i164);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22256, (HEAP32[6031] | 0) - 1 | 0);
 HEAP32[5563] = 0;
 HEAP32[5562] = 13904;
 if (!((HEAP32[6028] | 0) == -1)) {
  HEAP32[$__p_i_i_i174 >> 2] = 24112;
  HEAP32[$__p_i_i_i174 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i174 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(24112, $__p_i_i_i174);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22248, (HEAP32[6029] | 0) - 1 | 0);
 HEAP32[5561] = 0;
 HEAP32[5560] = 13840;
 if (!((HEAP32[6026] | 0) == -1)) {
  HEAP32[$__p_i_i_i184 >> 2] = 24104;
  HEAP32[$__p_i_i_i184 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i184 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(24104, $__p_i_i_i184);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 22240, (HEAP32[6027] | 0) - 1 | 0);
 HEAP32[5457] = 0;
 HEAP32[5456] = 11856;
 if (!((HEAP32[5804] | 0) == -1)) {
  HEAP32[$__p_i_i_i194 >> 2] = 23216;
  HEAP32[$__p_i_i_i194 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i194 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23216, $__p_i_i_i194);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21824, (HEAP32[5805] | 0) - 1 | 0);
 HEAP32[5455] = 0;
 HEAP32[5454] = 11816;
 if (!((HEAP32[5802] | 0) == -1)) {
  HEAP32[$__p_i_i_i204 >> 2] = 23208;
  HEAP32[$__p_i_i_i204 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i204 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23208, $__p_i_i_i204);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21816, (HEAP32[5803] | 0) - 1 | 0);
 HEAP32[5453] = 0;
 HEAP32[5452] = 11776;
 if (!((HEAP32[5800] | 0) == -1)) {
  HEAP32[$__p_i_i_i214 >> 2] = 23200;
  HEAP32[$__p_i_i_i214 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i214 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23200, $__p_i_i_i214);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21808, (HEAP32[5801] | 0) - 1 | 0);
 HEAP32[5451] = 0;
 HEAP32[5450] = 11736;
 if (!((HEAP32[5798] | 0) == -1)) {
  HEAP32[$__p_i_i_i224 >> 2] = 23192;
  HEAP32[$__p_i_i_i224 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i224 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23192, $__p_i_i_i224);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21800, (HEAP32[5799] | 0) - 1 | 0);
 HEAP32[5471] = 0;
 HEAP32[5470] = 12056;
 HEAP32[5472] = 12104;
 if (!((HEAP32[5812] | 0) == -1)) {
  HEAP32[$__p_i_i_i234 >> 2] = 23248;
  HEAP32[$__p_i_i_i234 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i234 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23248, $__p_i_i_i234);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21880, (HEAP32[5813] | 0) - 1 | 0);
 HEAP32[5467] = 0;
 HEAP32[5466] = 11960;
 HEAP32[5468] = 12008;
 if (!((HEAP32[5810] | 0) == -1)) {
  HEAP32[$__p_i_i_i244 >> 2] = 23240;
  HEAP32[$__p_i_i_i244 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i244 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23240, $__p_i_i_i244);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21864, (HEAP32[5811] | 0) - 1 | 0);
 HEAP32[5463] = 0;
 HEAP32[5462] = 12960;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i_i_i_i_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i_i_i_i_i;
  }
 }
 HEAP32[5464] = HEAP32[5446];
 HEAP32[5462] = 11928;
 if (!((HEAP32[5808] | 0) == -1)) {
  HEAP32[$__p_i_i_i256 >> 2] = 23232;
  HEAP32[$__p_i_i_i256 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i256 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23232, $__p_i_i_i256);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21848, (HEAP32[5809] | 0) - 1 | 0);
 HEAP32[5459] = 0;
 HEAP32[5458] = 12960;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i_i_i_i_i269 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i_i_i_i_i269;
  }
 }
 HEAP32[5460] = HEAP32[5446];
 HEAP32[5458] = 11896;
 if (!((HEAP32[5806] | 0) == -1)) {
  HEAP32[$__p_i_i_i275 >> 2] = 23224;
  HEAP32[$__p_i_i_i275 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i275 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23224, $__p_i_i_i275);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21832, (HEAP32[5807] | 0) - 1 | 0);
 HEAP32[5491] = 0;
 HEAP32[5490] = 12288;
 if (!((HEAP32[5820] | 0) == -1)) {
  HEAP32[$__p_i_i_i285 >> 2] = 23280;
  HEAP32[$__p_i_i_i285 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i285 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23280, $__p_i_i_i285);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21960, (HEAP32[5821] | 0) - 1 | 0);
 HEAP32[5489] = 0;
 HEAP32[5488] = 12248;
 if (!((HEAP32[5818] | 0) == -1)) {
  HEAP32[$__p_i_i_i >> 2] = 23272;
  HEAP32[$__p_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23272, $__p_i_i_i);
 }
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, 21952, (HEAP32[5819] | 0) - 1 | 0);
 STACKTOP = sp;
 return;
}
function __Z19rcErodeWalkableAreaP9rcContextiR20rcCompactHeightfield($ctx, $radius, $chf) {
 $ctx = $ctx | 0;
 $radius = $radius | 0;
 $chf = $chf | 0;
 var $0 = 0, $1 = 0, $m_timerEnabled_i = 0, $spanCount = 0, $call_i_i = 0, $6 = 0, $cmp5301 = 0, $cells = 0, $areas = 0, $spans = 0, $x_0302_us = 0, $bf_load_us = 0, $bf_clear_us = 0, $bf_lshr_us = 0, $add11_us = 0, $add31_us_3 = 0, $add27_us_2 = 0, $add31_us_2 = 0, $add31_us_1 = 0, $add31_us = 0, $inc55_us_pre_phi = 0, $i_0299_us = 0, $9 = 0, $bf_load_i_us = 0, $and_i_us = 0, $nc_1_us = 0, $and_i_us_1 = 0, $inc52_us = 0, $y_0305_us = 0, $mul7_us = 0, $mul30_us_3 = 0, $add29_us_1 = 0, $mul30_us_1 = 0, $y60_0295 = 0, $mul69 = 0, $mul156 = 0, $add184 = 0, $x64_0293 = 0, $bf_load74 = 0, $bf_clear75 = 0, $bf_lshr80 = 0, $add81 = 0, $add157 = 0, $add190 = 0, $add92 = 0, $add96 = 0, $add125 = 0, $i73_0291 = 0, $18 = 0, $19 = 0, $and_i269 = 0, $add102 = 0, $add107 = 0, $cond_i261 = 0, $arrayidx111 = 0, $23 = 0, $conv109 = 0, $24 = 0, $and_i259 = 0, $add134 = 0, $cond_i249 = 0, $and_i247 = 0, $add163 = 0, $31 = 0, $add169 = 0, $cond_i237 = 0, $arrayidx173 = 0, $33 = 0, $conv171 = 0, $34 = 0, $and_i235 = 0, $add199 = 0, $cond_i225 = 0, $inc218 = 0, $y220_0289_in = 0, $mul230 = 0, $mul324 = 0, $add352 = 0, $x224_0285_in = 0, $bf_load235 = 0, $bf_clear236 = 0, $bf_lshr241 = 0, $add242 = 0, $add325 = 0, $add358 = 0, $add260 = 0, $add293 = 0, $i234_0281 = 0, $41 = 0, $42 = 0, $and_i223 = 0, $add266 = 0, $add272 = 0, $cond_i213 = 0, $arrayidx276 = 0, $46 = 0, $conv274 = 0, $47 = 0, $and_i211 = 0, $add302 = 0, $cond_i201 = 0, $and_i199 = 0, $add331 = 0, $54 = 0, $add337 = 0, $cond_i189 = 0, $arrayidx341 = 0, $56 = 0, $conv339 = 0, $57 = 0, $and_i187 = 0, $add367 = 0, $cond_i = 0, $62 = 0, $conv396 = 0, $areas399 = 0, $63 = 0, $i389_0279 = 0, $66 = 0, $retval_0 = 0, $nc_1_us_1 = 0, $and_i_us_2 = 0, $nc_1_us_2 = 0, $and_i_us_3 = 0, $nc_1_us_3 = 0, tempVarArgs = 0, sp = 0, $x224_0285_in$looptemp = 0, $y220_0289_in$looptemp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$chf >> 2] | 0;
 $1 = HEAP32[$chf + 4 >> 2] | 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 13);
 }
 $spanCount = $chf + 8 | 0;
 $call_i_i = _malloc(HEAP32[$spanCount >> 2] | 0) | 0;
 $6 = HEAP32[$spanCount >> 2] | 0;
 if (($call_i_i | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 7320, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $6, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 _memset($call_i_i | 0, -1 | 0, $6 | 0) | 0;
 if (($1 | 0) > 0) {
  $cmp5301 = ($0 | 0) > 0;
  $cells = $chf + 60 | 0;
  $areas = $chf + 72 | 0;
  $spans = $chf + 64 | 0;
  if ($cmp5301) {
   $y_0305_us = 0;
   while (1) {
    $mul7_us = Math_imul($y_0305_us, $0) | 0;
    $mul30_us_3 = Math_imul($y_0305_us - 1 | 0, $0) | 0;
    $add29_us_1 = $y_0305_us + 1 | 0;
    $mul30_us_1 = Math_imul($add29_us_1, $0) | 0;
    $x_0302_us = 0;
    while (1) {
     $bf_load_us = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x_0302_us + $mul7_us << 2) >> 2] | 0;
     $bf_clear_us = $bf_load_us & 16777215;
     $bf_lshr_us = $bf_load_us >>> 24;
     $add11_us = $bf_clear_us + $bf_lshr_us | 0;
     if (($bf_lshr_us | 0) == 0) {
      $inc55_us_pre_phi = $x_0302_us + 1 | 0;
     } else {
      $add31_us_3 = $x_0302_us + $mul30_us_3 | 0;
      $add27_us_2 = $x_0302_us + 1 | 0;
      $add31_us_2 = $add27_us_2 + $mul7_us | 0;
      $add31_us_1 = $x_0302_us + $mul30_us_1 | 0;
      $add31_us = $x_0302_us - 1 + $mul7_us | 0;
      $i_0299_us = $bf_clear_us;
      while (1) {
       $9 = HEAP32[$areas >> 2] | 0;
       if ((HEAP8[$9 + $i_0299_us >> 0] | 0) == 0) {
        HEAP8[$call_i_i + $i_0299_us >> 0] = 0;
       } else {
        $bf_load_i_us = HEAP32[(HEAP32[$spans >> 2] | 0) + ($i_0299_us << 3) + 4 >> 2] | 0;
        $and_i_us = $bf_load_i_us & 63;
        if (($and_i_us | 0) == 63) {
         $nc_1_us = 0;
        } else {
         $nc_1_us = (HEAP8[$9 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add31_us << 2) >> 2] & 16777215) + $and_i_us) >> 0] | 0) != 0 | 0;
        }
        $and_i_us_1 = $bf_load_i_us >>> 6 & 63;
        if (($and_i_us_1 | 0) == 63) {
         $nc_1_us_1 = $nc_1_us;
        } else {
         $nc_1_us_1 = ((HEAP8[$9 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add31_us_1 << 2) >> 2] & 16777215) + $and_i_us_1) >> 0] | 0) != 0) + $nc_1_us | 0;
        }
        $and_i_us_2 = $bf_load_i_us >>> 12 & 63;
        if (($and_i_us_2 | 0) == 63) {
         $nc_1_us_2 = $nc_1_us_1;
        } else {
         $nc_1_us_2 = ((HEAP8[$9 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add31_us_2 << 2) >> 2] & 16777215) + $and_i_us_2) >> 0] | 0) != 0) + $nc_1_us_1 | 0;
        }
        $and_i_us_3 = $bf_load_i_us >>> 18 & 63;
        if (($and_i_us_3 | 0) == 63) {
         $nc_1_us_3 = $nc_1_us_2;
        } else {
         $nc_1_us_3 = ((HEAP8[$9 + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add31_us_3 << 2) >> 2] & 16777215) + $and_i_us_3) >> 0] | 0) != 0) + $nc_1_us_2 | 0;
        }
        if (($nc_1_us_3 | 0) != 4) {
         HEAP8[$call_i_i + $i_0299_us >> 0] = 0;
        }
       }
       $inc52_us = $i_0299_us + 1 | 0;
       if (($inc52_us | 0) < ($add11_us | 0)) {
        $i_0299_us = $inc52_us;
       } else {
        $inc55_us_pre_phi = $add27_us_2;
        break;
       }
      }
     }
     if (($inc55_us_pre_phi | 0) < ($0 | 0)) {
      $x_0302_us = $inc55_us_pre_phi;
     } else {
      break;
     }
    }
    if (($add29_us_1 | 0) < ($1 | 0)) {
     $y_0305_us = $add29_us_1;
    } else {
     $y60_0295 = 0;
     break;
    }
   }
  } else {
   $y60_0295 = 0;
  }
  while (1) {
   if ($cmp5301) {
    $mul69 = Math_imul($y60_0295, $0) | 0;
    $mul156 = Math_imul($y60_0295 - 1 | 0, $0) | 0;
    $add184 = $mul156 + 1 | 0;
    $x64_0293 = 0;
    do {
     $bf_load74 = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x64_0293 + $mul69 << 2) >> 2] | 0;
     $bf_clear75 = $bf_load74 & 16777215;
     $bf_lshr80 = $bf_load74 >>> 24;
     $add81 = $bf_clear75 + $bf_lshr80 | 0;
     if (($bf_lshr80 | 0) != 0) {
      $add157 = $x64_0293 + $mul156 | 0;
      $add190 = $add184 + $x64_0293 | 0;
      $add92 = $x64_0293 - 1 | 0;
      $add96 = $add92 + $mul69 | 0;
      $add125 = $add92 + $mul156 | 0;
      $i73_0291 = $bf_clear75;
      do {
       $18 = HEAP32[$spans >> 2] | 0;
       $19 = $18 + ($i73_0291 << 3) + 4 | 0;
       $and_i269 = HEAP32[$19 >> 2] & 63;
       if (($and_i269 | 0) != 63) {
        $add102 = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add96 << 2) >> 2] & 16777215) + $and_i269 | 0;
        $add107 = (HEAPU8[$call_i_i + $add102 >> 0] | 0) + 2 | 0;
        $cond_i261 = $add107 >>> 0 < 255 >>> 0 ? $add107 : 255;
        $arrayidx111 = $call_i_i + $i73_0291 | 0;
        $23 = HEAP8[$arrayidx111 >> 0] | 0;
        if (($cond_i261 & 255) >>> 0 < ($23 & 255) >>> 0) {
         $conv109 = $cond_i261 & 255;
         HEAP8[$arrayidx111 >> 0] = $conv109;
         $24 = $conv109;
        } else {
         $24 = $23;
        }
        $and_i259 = (HEAP32[$18 + ($add102 << 3) + 4 >> 2] | 0) >>> 18 & 63;
        if (($and_i259 | 0) != 63) {
         $add134 = (HEAPU8[$call_i_i + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add125 << 2) >> 2] & 16777215) + $and_i259) >> 0] | 0) + 3 | 0;
         $cond_i249 = $add134 >>> 0 < 255 >>> 0 ? $add134 : 255;
         if (($cond_i249 & 255) >>> 0 < ($24 & 255) >>> 0) {
          HEAP8[$arrayidx111 >> 0] = $cond_i249;
         }
        }
       }
       $and_i247 = (HEAP32[$19 >> 2] | 0) >>> 18 & 63;
       if (($and_i247 | 0) != 63) {
        $add163 = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add157 << 2) >> 2] & 16777215) + $and_i247 | 0;
        $31 = HEAP32[$spans >> 2] | 0;
        $add169 = (HEAPU8[$call_i_i + $add163 >> 0] | 0) + 2 | 0;
        $cond_i237 = $add169 >>> 0 < 255 >>> 0 ? $add169 : 255;
        $arrayidx173 = $call_i_i + $i73_0291 | 0;
        $33 = HEAP8[$arrayidx173 >> 0] | 0;
        if (($cond_i237 & 255) >>> 0 < ($33 & 255) >>> 0) {
         $conv171 = $cond_i237 & 255;
         HEAP8[$arrayidx173 >> 0] = $conv171;
         $34 = $conv171;
        } else {
         $34 = $33;
        }
        $and_i235 = (HEAP32[$31 + ($add163 << 3) + 4 >> 2] | 0) >>> 12 & 63;
        if (($and_i235 | 0) != 63) {
         $add199 = (HEAPU8[$call_i_i + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add190 << 2) >> 2] & 16777215) + $and_i235) >> 0] | 0) + 3 | 0;
         $cond_i225 = $add199 >>> 0 < 255 >>> 0 ? $add199 : 255;
         if (($cond_i225 & 255) >>> 0 < ($34 & 255) >>> 0) {
          HEAP8[$arrayidx173 >> 0] = $cond_i225;
         }
        }
       }
       $i73_0291 = $i73_0291 + 1 | 0;
      } while (($i73_0291 | 0) < ($add81 | 0));
     }
     $x64_0293 = $x64_0293 + 1 | 0;
    } while (($x64_0293 | 0) < ($0 | 0));
   }
   $inc218 = $y60_0295 + 1 | 0;
   if (($inc218 | 0) < ($1 | 0)) {
    $y60_0295 = $inc218;
   } else {
    $y220_0289_in = $1;
    break;
   }
  }
  do {
   $y220_0289_in$looptemp = $y220_0289_in;
   $y220_0289_in = $y220_0289_in - 1 | 0;
   if ($cmp5301) {
    $mul230 = Math_imul($y220_0289_in, $0) | 0;
    $mul324 = Math_imul($y220_0289_in$looptemp, $0) | 0;
    $add352 = $mul324 - 2 | 0;
    $x224_0285_in = $0;
    do {
     $x224_0285_in$looptemp = $x224_0285_in;
     $x224_0285_in = $x224_0285_in - 1 | 0;
     $bf_load235 = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x224_0285_in + $mul230 << 2) >> 2] | 0;
     $bf_clear236 = $bf_load235 & 16777215;
     $bf_lshr241 = $bf_load235 >>> 24;
     $add242 = $bf_clear236 + $bf_lshr241 | 0;
     if (($bf_lshr241 | 0) != 0) {
      $add325 = $x224_0285_in + $mul324 | 0;
      $add358 = $add352 + $x224_0285_in$looptemp | 0;
      $add260 = $x224_0285_in$looptemp + $mul230 | 0;
      $add293 = $x224_0285_in$looptemp + $mul324 | 0;
      $i234_0281 = $bf_clear236;
      do {
       $41 = HEAP32[$spans >> 2] | 0;
       $42 = $41 + ($i234_0281 << 3) + 4 | 0;
       $and_i223 = (HEAP32[$42 >> 2] | 0) >>> 12 & 63;
       if (($and_i223 | 0) != 63) {
        $add266 = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add260 << 2) >> 2] & 16777215) + $and_i223 | 0;
        $add272 = (HEAPU8[$call_i_i + $add266 >> 0] | 0) + 2 | 0;
        $cond_i213 = $add272 >>> 0 < 255 >>> 0 ? $add272 : 255;
        $arrayidx276 = $call_i_i + $i234_0281 | 0;
        $46 = HEAP8[$arrayidx276 >> 0] | 0;
        if (($cond_i213 & 255) >>> 0 < ($46 & 255) >>> 0) {
         $conv274 = $cond_i213 & 255;
         HEAP8[$arrayidx276 >> 0] = $conv274;
         $47 = $conv274;
        } else {
         $47 = $46;
        }
        $and_i211 = (HEAP32[$41 + ($add266 << 3) + 4 >> 2] | 0) >>> 6 & 63;
        if (($and_i211 | 0) != 63) {
         $add302 = (HEAPU8[$call_i_i + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add293 << 2) >> 2] & 16777215) + $and_i211) >> 0] | 0) + 3 | 0;
         $cond_i201 = $add302 >>> 0 < 255 >>> 0 ? $add302 : 255;
         if (($cond_i201 & 255) >>> 0 < ($47 & 255) >>> 0) {
          HEAP8[$arrayidx276 >> 0] = $cond_i201;
         }
        }
       }
       $and_i199 = (HEAP32[$42 >> 2] | 0) >>> 6 & 63;
       if (($and_i199 | 0) != 63) {
        $add331 = (HEAP32[(HEAP32[$cells >> 2] | 0) + ($add325 << 2) >> 2] & 16777215) + $and_i199 | 0;
        $54 = HEAP32[$spans >> 2] | 0;
        $add337 = (HEAPU8[$call_i_i + $add331 >> 0] | 0) + 2 | 0;
        $cond_i189 = $add337 >>> 0 < 255 >>> 0 ? $add337 : 255;
        $arrayidx341 = $call_i_i + $i234_0281 | 0;
        $56 = HEAP8[$arrayidx341 >> 0] | 0;
        if (($cond_i189 & 255) >>> 0 < ($56 & 255) >>> 0) {
         $conv339 = $cond_i189 & 255;
         HEAP8[$arrayidx341 >> 0] = $conv339;
         $57 = $conv339;
        } else {
         $57 = $56;
        }
        $and_i187 = HEAP32[$54 + ($add331 << 3) + 4 >> 2] & 63;
        if (($and_i187 | 0) != 63) {
         $add367 = (HEAPU8[$call_i_i + ((HEAP32[(HEAP32[$cells >> 2] | 0) + ($add358 << 2) >> 2] & 16777215) + $and_i187) >> 0] | 0) + 3 | 0;
         $cond_i = $add367 >>> 0 < 255 >>> 0 ? $add367 : 255;
         if (($cond_i & 255) >>> 0 < ($57 & 255) >>> 0) {
          HEAP8[$arrayidx341 >> 0] = $cond_i;
         }
        }
       }
       $i234_0281 = $i234_0281 + 1 | 0;
      } while (($i234_0281 | 0) < ($add242 | 0));
     }
    } while (($x224_0285_in | 0) > 0);
   }
  } while (($y220_0289_in | 0) > 0);
 }
 $62 = HEAP32[$spanCount >> 2] | 0;
 if (($62 | 0) > 0) {
  $conv396 = $radius << 1 & 254;
  $areas399 = $chf + 72 | 0;
  $i389_0279 = 0;
  $63 = $62;
  while (1) {
   if ((HEAPU8[$call_i_i + $i389_0279 >> 0] | 0) >>> 0 < $conv396 >>> 0) {
    HEAP8[(HEAP32[$areas399 >> 2] | 0) + $i389_0279 >> 0] = 0;
    $66 = HEAP32[$spanCount >> 2] | 0;
   } else {
    $66 = $63;
   }
   $i389_0279 = $i389_0279 + 1 | 0;
   if (($i389_0279 | 0) >= ($66 | 0)) {
    break;
   } else {
    $63 = $66;
   }
  }
 }
 _free($call_i_i);
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  $retval_0 = 1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 13);
 $retval_0 = 1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc_0_0_val, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc_0_0_val = $__loc_0_0_val | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i_i84 = 0, $__p_i_i_i_i = 0, $ref_tmp = 0, $tmpcast27 = 0, $ref_tmp4 = 0, $ref_tmp6 = 0, $tmpcast26 = 0, $ref_tmp7 = 0, $ref_tmp11 = 0, $ref_tmp13 = 0, $ref_tmp21 = 0, $tmpcast25 = 0, $ref_tmp22 = 0, $ref_tmp25 = 0, $tmpcast = 0, $ref_tmp26 = 0, $ref_tmp31 = 0, $ref_tmp33 = 0, $sub_i_i_i = 0, $4 = 0, $5 = 0, $exception_i_i_i = 0, $6 = 0, $7 = 0, $vtable_i = 0, $10 = 0, $__size__i2_i_i_i = 0, $18 = 0, $20 = 0, $__size__i2_i_i_i36 = 0, $28 = 0, $29 = 0, $call_i = 0, $call_i52 = 0, $32 = 0, $__size__i2_i_i_i55 = 0, $38 = 0, $__size__i2_i_i_i69 = 0, $44 = 0, $sub_i_i_i91 = 0, $51 = 0, $52 = 0, $exception_i_i_i103 = 0, $53 = 0, $54 = 0, $vtable_i105 = 0, $57 = 0, $__size__i2_i_i_i109 = 0, $65 = 0, $67 = 0, $__size__i2_i_i_i125 = 0, $75 = 0, $76 = 0, $call_i139 = 0, $call_i142 = 0, $79 = 0, $__size__i2_i_i_i145 = 0, $85 = 0, $__size__i2_i_i_i159 = 0, $91 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i_i84 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $ref_tmp = sp + 32 | 0;
 $tmpcast27 = $ref_tmp;
 $ref_tmp4 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp6 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast26 = $ref_tmp6;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp11 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp13 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast25 = $ref_tmp21;
 $ref_tmp22 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp25 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast = $ref_tmp25;
 $ref_tmp26 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp31 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp33 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 if ($__intl) {
  if (!((HEAP32[6030] | 0) == -1)) {
   HEAP32[$__p_i_i_i_i >> 2] = 24120;
   HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
   HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(24120, $__p_i_i_i_i);
  }
  $sub_i_i_i = (HEAP32[6031] | 0) - 1 | 0;
  $4 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
  if (!((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $4 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
   $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
   $6 = $exception_i_i_i;
   HEAP32[$6 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i | 0, 17848, 212);
  }
  $5 = HEAP32[$4 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($5 | 0) == 0) {
   $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
   $6 = $exception_i_i_i;
   HEAP32[$6 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i | 0, 17848, 212);
  }
  $7 = $5;
  $vtable_i = HEAP32[$5 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 44 >> 2] & 127]($tmpcast27, $7);
   $10 = $__pat;
   tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
   HEAP8[$10 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp4, $7);
   $__size__i2_i_i_i = $__sn;
   if ((HEAP8[$__size__i2_i_i_i >> 0] & 1) == 0) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__size__i2_i_i_i >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   $18 = $ref_tmp4;
   HEAP32[$__size__i2_i_i_i >> 2] = HEAP32[$18 >> 2];
   HEAP32[$__size__i2_i_i_i + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$__size__i2_i_i_i + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   _memset($18 | 0, 0, 12) | 0;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 40 >> 2] & 127]($tmpcast26, $7);
   $20 = $__pat;
   tempBigInt = HEAP32[$ref_tmp6 >> 2] | 0;
   HEAP8[$20 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp7, $7);
   $__size__i2_i_i_i36 = $__sn;
   if ((HEAP8[$__size__i2_i_i_i36 >> 0] & 1) == 0) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__size__i2_i_i_i36 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   $28 = $ref_tmp7;
   HEAP32[$__size__i2_i_i_i36 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$__size__i2_i_i_i36 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
   HEAP32[$__size__i2_i_i_i36 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
   _memset($28 | 0, 0, 12) | 0;
  }
  $29 = $5;
  $call_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 12 >> 2] & 255]($7) | 0;
  HEAP8[$__dp >> 0] = $call_i;
  $call_i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 16 >> 2] & 255]($7) | 0;
  HEAP8[$__ts >> 0] = $call_i52;
  $32 = $5;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp11, $7);
  $__size__i2_i_i_i55 = $__grp;
  if ((HEAP8[$__size__i2_i_i_i55 >> 0] & 1) == 0) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i55 >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  $38 = $ref_tmp11;
  HEAP32[$__size__i2_i_i_i55 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$__size__i2_i_i_i55 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i55 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
  _memset($38 | 0, 0, 12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$32 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp13, $7);
  $__size__i2_i_i_i69 = $__sym;
  if ((HEAP8[$__size__i2_i_i_i69 >> 0] & 1) == 0) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i69 >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  $44 = $ref_tmp13;
  HEAP32[$__size__i2_i_i_i69 >> 2] = HEAP32[$44 >> 2];
  HEAP32[$__size__i2_i_i_i69 + 4 >> 2] = HEAP32[$44 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i69 + 8 >> 2] = HEAP32[$44 + 8 >> 2];
  _memset($44 | 0, 0, 12) | 0;
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 255]($7) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  if (!((HEAP32[6032] | 0) == -1)) {
   HEAP32[$__p_i_i_i_i84 >> 2] = 24128;
   HEAP32[$__p_i_i_i_i84 + 4 >> 2] = 34;
   HEAP32[$__p_i_i_i_i84 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(24128, $__p_i_i_i_i84);
  }
  $sub_i_i_i91 = (HEAP32[6033] | 0) - 1 | 0;
  $51 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
  if (!((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $51 >> 2 >>> 0 > $sub_i_i_i91 >>> 0)) {
   $exception_i_i_i103 = ___cxa_allocate_exception(4) | 0;
   $53 = $exception_i_i_i103;
   HEAP32[$53 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i103 | 0, 17848, 212);
  }
  $52 = HEAP32[$51 + ($sub_i_i_i91 << 2) >> 2] | 0;
  if (($52 | 0) == 0) {
   $exception_i_i_i103 = ___cxa_allocate_exception(4) | 0;
   $53 = $exception_i_i_i103;
   HEAP32[$53 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i103 | 0, 17848, 212);
  }
  $54 = $52;
  $vtable_i105 = HEAP32[$52 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i105 + 44 >> 2] & 127]($tmpcast25, $54);
   $57 = $__pat;
   tempBigInt = HEAP32[$ref_tmp21 >> 2] | 0;
   HEAP8[$57 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp22, $54);
   $__size__i2_i_i_i109 = $__sn;
   if ((HEAP8[$__size__i2_i_i_i109 >> 0] & 1) == 0) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__size__i2_i_i_i109 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   $65 = $ref_tmp22;
   HEAP32[$__size__i2_i_i_i109 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$__size__i2_i_i_i109 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
   HEAP32[$__size__i2_i_i_i109 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
   _memset($65 | 0, 0, 12) | 0;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i105 + 40 >> 2] & 127]($tmpcast, $54);
   $67 = $__pat;
   tempBigInt = HEAP32[$ref_tmp25 >> 2] | 0;
   HEAP8[$67 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp26, $54);
   $__size__i2_i_i_i125 = $__sn;
   if ((HEAP8[$__size__i2_i_i_i125 >> 0] & 1) == 0) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__size__i2_i_i_i125 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   $75 = $ref_tmp26;
   HEAP32[$__size__i2_i_i_i125 >> 2] = HEAP32[$75 >> 2];
   HEAP32[$__size__i2_i_i_i125 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
   HEAP32[$__size__i2_i_i_i125 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
   _memset($75 | 0, 0, 12) | 0;
  }
  $76 = $52;
  $call_i139 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 12 >> 2] & 255]($54) | 0;
  HEAP8[$__dp >> 0] = $call_i139;
  $call_i142 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 16 >> 2] & 255]($54) | 0;
  HEAP8[$__ts >> 0] = $call_i142;
  $79 = $52;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$79 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp31, $54);
  $__size__i2_i_i_i145 = $__grp;
  if ((HEAP8[$__size__i2_i_i_i145 >> 0] & 1) == 0) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i145 >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  $85 = $ref_tmp31;
  HEAP32[$__size__i2_i_i_i145 >> 2] = HEAP32[$85 >> 2];
  HEAP32[$__size__i2_i_i_i145 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i145 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
  _memset($85 | 0, 0, 12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$79 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp33, $54);
  $__size__i2_i_i_i159 = $__sym;
  if ((HEAP8[$__size__i2_i_i_i159 >> 0] & 1) == 0) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i159 >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  $91 = $ref_tmp33;
  HEAP32[$__size__i2_i_i_i159 >> 2] = HEAP32[$91 >> 2];
  HEAP32[$__size__i2_i_i_i159 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i159 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
  _memset($91 | 0, 0, 12) | 0;
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 36 >> 2] & 255]($54) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc_0_0_val, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc_0_0_val = $__loc_0_0_val | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $__p_i_i_i_i77 = 0, $__p_i_i_i_i = 0, $ref_tmp = 0, $tmpcast27 = 0, $ref_tmp4 = 0, $ref_tmp6 = 0, $tmpcast26 = 0, $ref_tmp7 = 0, $ref_tmp11 = 0, $ref_tmp13 = 0, $ref_tmp21 = 0, $tmpcast25 = 0, $ref_tmp22 = 0, $ref_tmp25 = 0, $tmpcast = 0, $ref_tmp26 = 0, $ref_tmp31 = 0, $ref_tmp33 = 0, $sub_i_i_i = 0, $4 = 0, $5 = 0, $exception_i_i_i = 0, $6 = 0, $7 = 0, $vtable_i = 0, $10 = 0, $__size__i3_i_i_i = 0, $18 = 0, $20 = 0, $__size__i3_i_i_i36 = 0, $28 = 0, $29 = 0, $call_i = 0, $call_i51 = 0, $__size__i2_i_i_i = 0, $38 = 0, $__size__i3_i_i_i63 = 0, $45 = 0, $sub_i_i_i84 = 0, $51 = 0, $52 = 0, $exception_i_i_i96 = 0, $53 = 0, $54 = 0, $vtable_i98 = 0, $57 = 0, $__size__i3_i_i_i102 = 0, $65 = 0, $67 = 0, $__size__i3_i_i_i117 = 0, $75 = 0, $76 = 0, $call_i130 = 0, $call_i133 = 0, $__size__i2_i_i_i136 = 0, $85 = 0, $__size__i3_i_i_i150 = 0, $92 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $__p_i_i_i_i77 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $ref_tmp = sp + 32 | 0;
 $tmpcast27 = $ref_tmp;
 $ref_tmp4 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp6 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast26 = $ref_tmp6;
 $ref_tmp7 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp11 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp13 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp21 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast25 = $ref_tmp21;
 $ref_tmp22 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp25 = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $tmpcast = $ref_tmp25;
 $ref_tmp26 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp31 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $ref_tmp33 = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 if ($__intl) {
  if (!((HEAP32[6026] | 0) == -1)) {
   HEAP32[$__p_i_i_i_i >> 2] = 24104;
   HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
   HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(24104, $__p_i_i_i_i);
  }
  $sub_i_i_i = (HEAP32[6027] | 0) - 1 | 0;
  $4 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
  if (!((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $4 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
   $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
   $6 = $exception_i_i_i;
   HEAP32[$6 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i | 0, 17848, 212);
  }
  $5 = HEAP32[$4 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($5 | 0) == 0) {
   $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
   $6 = $exception_i_i_i;
   HEAP32[$6 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i | 0, 17848, 212);
  }
  $7 = $5;
  $vtable_i = HEAP32[$5 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 44 >> 2] & 127]($tmpcast27, $7);
   $10 = $__pat;
   tempBigInt = HEAP32[$ref_tmp >> 2] | 0;
   HEAP8[$10 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$10 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp4, $7);
   $__size__i3_i_i_i = $__sn;
   if ((HEAP8[$__size__i3_i_i_i >> 0] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i3_i_i_i >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   $18 = $ref_tmp4;
   HEAP32[$__size__i3_i_i_i >> 2] = HEAP32[$18 >> 2];
   HEAP32[$__size__i3_i_i_i + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$__size__i3_i_i_i + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   _memset($18 | 0, 0, 12) | 0;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i + 40 >> 2] & 127]($tmpcast26, $7);
   $20 = $__pat;
   tempBigInt = HEAP32[$ref_tmp6 >> 2] | 0;
   HEAP8[$20 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$20 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp7, $7);
   $__size__i3_i_i_i36 = $__sn;
   if ((HEAP8[$__size__i3_i_i_i36 >> 0] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i3_i_i_i36 >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   $28 = $ref_tmp7;
   HEAP32[$__size__i3_i_i_i36 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$__size__i3_i_i_i36 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
   HEAP32[$__size__i3_i_i_i36 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
   _memset($28 | 0, 0, 12) | 0;
  }
  $29 = $5;
  $call_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 12 >> 2] & 255]($7) | 0;
  HEAP32[$__dp >> 2] = $call_i;
  $call_i51 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 16 >> 2] & 255]($7) | 0;
  HEAP32[$__ts >> 2] = $call_i51;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp11, $7);
  $__size__i2_i_i_i = $__grp;
  if ((HEAP8[$__size__i2_i_i_i >> 0] & 1) == 0) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  $38 = $ref_tmp11;
  HEAP32[$__size__i2_i_i_i >> 2] = HEAP32[$38 >> 2];
  HEAP32[$__size__i2_i_i_i + 4 >> 2] = HEAP32[$38 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i + 8 >> 2] = HEAP32[$38 + 8 >> 2];
  _memset($38 | 0, 0, 12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp13, $7);
  $__size__i3_i_i_i63 = $__sym;
  if ((HEAP8[$__size__i3_i_i_i63 >> 0] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i3_i_i_i63 >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  $45 = $ref_tmp13;
  HEAP32[$__size__i3_i_i_i63 >> 2] = HEAP32[$45 >> 2];
  HEAP32[$__size__i3_i_i_i63 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
  HEAP32[$__size__i3_i_i_i63 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
  _memset($45 | 0, 0, 12) | 0;
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($7) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  if (!((HEAP32[6028] | 0) == -1)) {
   HEAP32[$__p_i_i_i_i77 >> 2] = 24112;
   HEAP32[$__p_i_i_i_i77 + 4 >> 2] = 34;
   HEAP32[$__p_i_i_i_i77 + 8 >> 2] = 0;
   __ZNSt3__111__call_onceERVmPvPFvS2_E(24112, $__p_i_i_i_i77);
  }
  $sub_i_i_i84 = (HEAP32[6029] | 0) - 1 | 0;
  $51 = HEAP32[$__loc_0_0_val + 8 >> 2] | 0;
  if (!((HEAP32[$__loc_0_0_val + 12 >> 2] | 0) - $51 >> 2 >>> 0 > $sub_i_i_i84 >>> 0)) {
   $exception_i_i_i96 = ___cxa_allocate_exception(4) | 0;
   $53 = $exception_i_i_i96;
   HEAP32[$53 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i96 | 0, 17848, 212);
  }
  $52 = HEAP32[$51 + ($sub_i_i_i84 << 2) >> 2] | 0;
  if (($52 | 0) == 0) {
   $exception_i_i_i96 = ___cxa_allocate_exception(4) | 0;
   $53 = $exception_i_i_i96;
   HEAP32[$53 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i96 | 0, 17848, 212);
  }
  $54 = $52;
  $vtable_i98 = HEAP32[$52 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i98 + 44 >> 2] & 127]($tmpcast25, $54);
   $57 = $__pat;
   tempBigInt = HEAP32[$ref_tmp21 >> 2] | 0;
   HEAP8[$57 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$57 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 32 >> 2] & 127]($ref_tmp22, $54);
   $__size__i3_i_i_i102 = $__sn;
   if ((HEAP8[$__size__i3_i_i_i102 >> 0] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i3_i_i_i102 >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   $65 = $ref_tmp22;
   HEAP32[$__size__i3_i_i_i102 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$__size__i3_i_i_i102 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
   HEAP32[$__size__i3_i_i_i102 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
   _memset($65 | 0, 0, 12) | 0;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$vtable_i98 + 40 >> 2] & 127]($tmpcast, $54);
   $67 = $__pat;
   tempBigInt = HEAP32[$ref_tmp25 >> 2] | 0;
   HEAP8[$67 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 1 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 2 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$67 + 3 >> 0] = tempBigInt;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 127]($ref_tmp26, $54);
   $__size__i3_i_i_i117 = $__sn;
   if ((HEAP8[$__size__i3_i_i_i117 >> 0] & 1) == 0) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__size__i3_i_i_i117 >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   $75 = $ref_tmp26;
   HEAP32[$__size__i3_i_i_i117 >> 2] = HEAP32[$75 >> 2];
   HEAP32[$__size__i3_i_i_i117 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
   HEAP32[$__size__i3_i_i_i117 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
   _memset($75 | 0, 0, 12) | 0;
  }
  $76 = $52;
  $call_i130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 12 >> 2] & 255]($54) | 0;
  HEAP32[$__dp >> 2] = $call_i130;
  $call_i133 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 16 >> 2] & 255]($54) | 0;
  HEAP32[$__ts >> 2] = $call_i133;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 20 >> 2] & 127]($ref_tmp31, $54);
  $__size__i2_i_i_i136 = $__grp;
  if ((HEAP8[$__size__i2_i_i_i136 >> 0] & 1) == 0) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__size__i2_i_i_i136 >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  $85 = $ref_tmp31;
  HEAP32[$__size__i2_i_i_i136 >> 2] = HEAP32[$85 >> 2];
  HEAP32[$__size__i2_i_i_i136 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
  HEAP32[$__size__i2_i_i_i136 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
  _memset($85 | 0, 0, 12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$52 >> 2] | 0) + 24 >> 2] & 127]($ref_tmp33, $54);
  $__size__i3_i_i_i150 = $__sym;
  if ((HEAP8[$__size__i3_i_i_i150 >> 0] & 1) == 0) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__size__i3_i_i_i150 >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  $92 = $ref_tmp33;
  HEAP32[$__size__i3_i_i_i150 >> 2] = HEAP32[$92 >> 2];
  HEAP32[$__size__i3_i_i_i150 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
  HEAP32[$__size__i3_i_i_i150 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
  _memset($92 | 0, 0, 12) | 0;
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 255]($54) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}
function __Z14getRandomPointNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($callback) {
 $callback = $callback | 0;
 var $verts71_i = 0, $areas_i = 0, $pt_i = 0, $h_i = 0, $0 = 0, $i_03_i = 0, $m_nav_i = 0, $5 = 0, $7 = 0, $tile_081_i = 0, $tsum_080_i = 0.0, $i_079_i = 0, $8 = 0, $arrayidx_i_i = 0, $add_i = 0.0, $tsum_1_i = 0.0, $tile_1_i = 0, $14 = 0, $or4_i_i_i = 0, $header16_i = 0, $polys_i = 0, $verts33_i = 0, $poly_073_i = 0, $polyRef_072_i = 0, $areaSum_071_i = 0.0, $i14_068_i = 0, $18 = 0, $arrayidx_i7 = 0, $or_i = 0, $21 = 0, $mul32_i = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $conv27_i = 0, $26 = 0, $j_064_i = 0, $polyArea_063_i = 0.0, $mul38_i = 0, $27 = 0, $mul44_i = 0, $add48_i = 0.0, $inc50_i = 0, $polyArea_0_lcssa_i = 0.0, $add52_i = 0.0, $areaSum_1_i = 0.0, $polyRef_1_i = 0, $poly_1_i = 0, $mul68_i = 0, $35 = 0, $arrayidx72_i = 0, $arrayidx3_i48_i = 0, $arrayidx5_i50_i = 0, $vertCount75_i = 0, $40 = 0, $conv76_i = 0, $j73_060_i = 0, $mul82_i = 0, $mul85_i = 0, $div_i13_i = 0.0, $div_i9_i = 0.0, $45 = 0, $conv94_i = 0, $arraydecay96_i = 0, $46 = 0.0, $47 = 0.0, $areasum_052_i_i = 0.0, $i_051_i_i = 0, $48 = 0, $sub12_i_i_i = 0.0, $mul7_i_i = 0.0, $acc_049_i_i = 0.0, $i8_048_i_i = 0, $53 = 0.0, $add14_i_i = 0.0, $inc19_i_i = 0, $54 = 0.0, $55 = 0.0, $tri_0_i_i = 0, $u_0_i_i = 0.0, $call_i_i_i = 0.0, $sub22_i_i = 0.0, $mul24_i_i = 0.0, $mul25_i_i = 0.0, $56 = 0, $add39_i_i = 0.0, $arrayidx49_i_i = 0, $add57_i_i = 0.0, $call98_i = 0, $64 = 0.0, $randomPt_sroa_4_0 = 0.0, $randomPt_sroa_2_0 = 0.0, $randomPt_sroa_0_0 = 0.0, $retval_1_i = 0, $cond_i_i_i10 = 0, $cond_i_i_i = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 632 | 0;
 $verts71_i = sp | 0;
 $areas_i = sp + 72 | 0;
 $pt_i = sp + 96 | 0;
 $h_i = sp + 112 | 0;
 $0 = sp + 120 | 0;
 $i_03_i = 0;
 do {
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 $m_nav_i = HEAP32[4910] | 0;
 $5 = HEAP32[$m_nav_i >> 2] | 0;
 if ((HEAP32[$5 + 48 >> 2] | 0) > 0) {
  $i_079_i = 0;
  $tsum_080_i = 0.0;
  $tile_081_i = 0;
  $7 = $5;
  while (1) {
   $8 = HEAP32[$7 + 68 >> 2] | 0;
   $arrayidx_i_i = $8 + ($i_079_i * 60 | 0) | 0;
   if (($arrayidx_i_i | 0) == 0) {
    $tile_1_i = $tile_081_i;
    $tsum_1_i = $tsum_080_i;
   } else {
    if ((HEAP32[$8 + ($i_079_i * 60 | 0) + 8 >> 2] | 0) == 0) {
     $tile_1_i = $tile_081_i;
     $tsum_1_i = $tsum_080_i;
    } else {
     $add_i = $tsum_080_i + 1.0;
     if ($add_i * +(_rand() | 0) * 4.656612873077393e-10 > 1.0) {
      $tile_1_i = $tile_081_i;
      $tsum_1_i = $add_i;
     } else {
      $tile_1_i = $arrayidx_i_i;
      $tsum_1_i = $add_i;
     }
    }
   }
   $i_079_i = $i_079_i + 1 | 0;
   $7 = HEAP32[$m_nav_i >> 2] | 0;
   if (($i_079_i | 0) >= (HEAP32[$7 + 48 >> 2] | 0)) {
    break;
   } else {
    $tsum_080_i = $tsum_1_i;
    $tile_081_i = $tile_1_i;
   }
  }
  if (($tile_1_i | 0) == 0) {
   $retval_1_i = -2147483648;
   $randomPt_sroa_0_0 = 0.0;
   $randomPt_sroa_2_0 = 0.0;
   $randomPt_sroa_4_0 = 0.0;
  } else {
   $14 = HEAP32[$7 + 80 >> 2] | 0;
   $or4_i_i_i = HEAP32[$tile_1_i >> 2] << (HEAP32[$7 + 76 >> 2] | 0) + $14 | (($tile_1_i - (HEAP32[$7 + 68 >> 2] | 0) | 0) / 60 | 0) << $14;
   $header16_i = $tile_1_i + 8 | 0;
   if ((HEAP32[(HEAP32[$header16_i >> 2] | 0) + 24 >> 2] | 0) > 0) {
    $polys_i = $tile_1_i + 12 | 0;
    $verts33_i = $tile_1_i + 16 | 0;
    $i14_068_i = 0;
    $areaSum_071_i = 0.0;
    $polyRef_072_i = 0;
    $poly_073_i = 0;
    while (1) {
     $18 = HEAP32[$polys_i >> 2] | 0;
     $arrayidx_i7 = $18 + ($i14_068_i << 5) | 0;
     if ((HEAPU8[$18 + ($i14_068_i << 5) + 31 >> 0] | 0) >>> 0 < 64 >>> 0) {
      $or_i = $i14_068_i | $or4_i_i_i;
      if ((HEAP16[$18 + ($i14_068_i << 5) + 28 >> 1] & 3) == 0) {
       $poly_1_i = $poly_073_i;
       $polyRef_1_i = $polyRef_072_i;
       $areaSum_1_i = $areaSum_071_i;
      } else {
       $21 = HEAP8[$18 + ($i14_068_i << 5) + 30 >> 0] | 0;
       if (($21 & 255) >>> 0 > 2 >>> 0) {
        $mul32_i = (HEAPU16[$18 + ($i14_068_i << 5) + 4 >> 1] | 0) * 3 | 0;
        $23 = HEAP32[$verts33_i >> 2] | 0;
        $24 = +HEAPF32[$23 + ($mul32_i << 2) >> 2];
        $25 = +HEAPF32[$23 + ($mul32_i + 2 << 2) >> 2];
        $conv27_i = $21 & 255;
        $polyArea_063_i = 0.0;
        $j_064_i = 2;
        $26 = HEAP16[$18 + ($i14_068_i << 5) + 6 >> 1] | 0;
        while (1) {
         $mul38_i = ($26 & 65535) * 3 | 0;
         $27 = HEAP16[$18 + ($i14_068_i << 5) + 4 + ($j_064_i << 1) >> 1] | 0;
         $mul44_i = ($27 & 65535) * 3 | 0;
         $add48_i = $polyArea_063_i + ((+HEAPF32[$23 + ($mul38_i + 2 << 2) >> 2] - $25) * (+HEAPF32[$23 + ($mul44_i << 2) >> 2] - $24) - (+HEAPF32[$23 + ($mul38_i << 2) >> 2] - $24) * (+HEAPF32[$23 + ($mul44_i + 2 << 2) >> 2] - $25));
         $inc50_i = $j_064_i + 1 | 0;
         if (($inc50_i | 0) < ($conv27_i | 0)) {
          $polyArea_063_i = $add48_i;
          $j_064_i = $inc50_i;
          $26 = $27;
         } else {
          $polyArea_0_lcssa_i = $add48_i;
          break;
         }
        }
       } else {
        $polyArea_0_lcssa_i = 0.0;
       }
       $add52_i = $areaSum_071_i + $polyArea_0_lcssa_i;
       if ($add52_i * +(_rand() | 0) * 4.656612873077393e-10 > $polyArea_0_lcssa_i) {
        $poly_1_i = $poly_073_i;
        $polyRef_1_i = $polyRef_072_i;
        $areaSum_1_i = $add52_i;
       } else {
        $poly_1_i = $arrayidx_i7;
        $polyRef_1_i = $or_i;
        $areaSum_1_i = $add52_i;
       }
      }
     } else {
      $poly_1_i = $poly_073_i;
      $polyRef_1_i = $polyRef_072_i;
      $areaSum_1_i = $areaSum_071_i;
     }
     $i14_068_i = $i14_068_i + 1 | 0;
     if (($i14_068_i | 0) >= (HEAP32[(HEAP32[$header16_i >> 2] | 0) + 24 >> 2] | 0)) {
      break;
     } else {
      $areaSum_071_i = $areaSum_1_i;
      $polyRef_072_i = $polyRef_1_i;
      $poly_073_i = $poly_1_i;
     }
    }
    if (($poly_1_i | 0) == 0) {
     $retval_1_i = -2147483648;
     $randomPt_sroa_0_0 = 0.0;
     $randomPt_sroa_2_0 = 0.0;
     $randomPt_sroa_4_0 = 0.0;
    } else {
     $mul68_i = (HEAPU16[$poly_1_i + 4 >> 1] | 0) * 3 | 0;
     $35 = HEAP32[$verts33_i >> 2] | 0;
     $arrayidx72_i = $verts71_i | 0;
     HEAPF32[$arrayidx72_i >> 2] = +HEAPF32[$35 + ($mul68_i << 2) >> 2];
     $arrayidx3_i48_i = $verts71_i + 4 | 0;
     HEAPF32[$arrayidx3_i48_i >> 2] = +HEAPF32[$35 + ($mul68_i + 1 << 2) >> 2];
     $arrayidx5_i50_i = $verts71_i + 8 | 0;
     HEAPF32[$arrayidx5_i50_i >> 2] = +HEAPF32[$35 + ($mul68_i + 2 << 2) >> 2];
     $vertCount75_i = $poly_1_i + 30 | 0;
     $40 = HEAP8[$vertCount75_i >> 0] | 0;
     if (($40 & 255) >>> 0 > 1 >>> 0) {
      $conv76_i = $40 & 255;
      $j73_060_i = 1;
      do {
       $mul82_i = (HEAPU16[$poly_1_i + 4 + ($j73_060_i << 1) >> 1] | 0) * 3 | 0;
       $mul85_i = $j73_060_i * 3 | 0;
       HEAPF32[$verts71_i + ($mul85_i << 2) >> 2] = +HEAPF32[$35 + ($mul82_i << 2) >> 2];
       HEAPF32[$verts71_i + ($mul85_i + 1 << 2) >> 2] = +HEAPF32[$35 + ($mul82_i + 1 << 2) >> 2];
       HEAPF32[$verts71_i + ($mul85_i + 2 << 2) >> 2] = +HEAPF32[$35 + ($mul82_i + 2 << 2) >> 2];
       $j73_060_i = $j73_060_i + 1 | 0;
      } while (($j73_060_i | 0) < ($conv76_i | 0));
     }
     $div_i13_i = +(_rand() | 0) * 4.656612873077393e-10;
     $div_i9_i = +(_rand() | 0) * 4.656612873077393e-10;
     $45 = HEAP8[$vertCount75_i >> 0] | 0;
     $conv94_i = $45 & 255;
     $arraydecay96_i = $pt_i | 0;
     $46 = +HEAPF32[$arrayidx72_i >> 2];
     $47 = +HEAPF32[$arrayidx5_i50_i >> 2];
     L34 : do {
      if (($45 & 255) >>> 0 > 2 >>> 0) {
       $i_051_i_i = 2;
       $areasum_052_i_i = 0.0;
       do {
        $48 = $i_051_i_i * 3 | 0;
        $sub12_i_i_i = (+HEAPF32[$verts71_i + ($48 - 1 << 2) >> 2] - $47) * (+HEAPF32[$verts71_i + ($48 << 2) >> 2] - $46) - (+HEAPF32[$verts71_i + ($48 - 3 << 2) >> 2] - $46) * (+HEAPF32[$verts71_i + ($48 + 2 << 2) >> 2] - $47);
        HEAPF32[$areas_i + ($i_051_i_i << 2) >> 2] = $sub12_i_i_i;
        $areasum_052_i_i = $areasum_052_i_i + ($sub12_i_i_i < .0010000000474974513 ? .0010000000474974513 : $sub12_i_i_i);
        $i_051_i_i = $i_051_i_i + 1 | 0;
       } while (($i_051_i_i | 0) < ($conv94_i | 0));
       $mul7_i_i = $areasum_052_i_i * $div_i13_i;
       $i8_048_i_i = 2;
       $acc_049_i_i = 0.0;
       while (1) {
        $53 = +HEAPF32[$areas_i + ($i8_048_i_i << 2) >> 2];
        $add14_i_i = $acc_049_i_i + $53;
        $inc19_i_i = $i8_048_i_i + 1 | 0;
        if ($mul7_i_i >= $acc_049_i_i & $mul7_i_i < $add14_i_i) {
         break;
        }
        if (($inc19_i_i | 0) < ($conv94_i | 0)) {
         $i8_048_i_i = $inc19_i_i;
         $acc_049_i_i = $add14_i_i;
        } else {
         $u_0_i_i = 0.0;
         $tri_0_i_i = 0;
         $55 = $46;
         $54 = $47;
         break L34;
        }
       }
       $u_0_i_i = ($mul7_i_i - $acc_049_i_i) / $53;
       $tri_0_i_i = $i8_048_i_i;
       $55 = $46;
       $54 = $47;
      } else {
       $u_0_i_i = 0.0;
       $tri_0_i_i = 0;
       $55 = $46;
       $54 = $47;
      }
     } while (0);
     $call_i_i_i = +Math_sqrt($div_i9_i);
     $sub22_i_i = 1.0 - $call_i_i_i;
     $mul24_i_i = (1.0 - $u_0_i_i) * $call_i_i_i;
     $mul25_i_i = $u_0_i_i * $call_i_i_i;
     $56 = $tri_0_i_i * 3 | 0;
     $add39_i_i = $sub22_i_i * $55 + $mul24_i_i * +HEAPF32[$verts71_i + ($56 - 3 << 2) >> 2] + $mul25_i_i * +HEAPF32[$verts71_i + ($56 << 2) >> 2];
     HEAPF32[$arraydecay96_i >> 2] = $add39_i_i;
     $arrayidx49_i_i = $pt_i + 4 | 0;
     HEAPF32[$arrayidx49_i_i >> 2] = $sub22_i_i * +HEAPF32[$arrayidx3_i48_i >> 2] + $mul24_i_i * +HEAPF32[$verts71_i + ($56 - 2 << 2) >> 2] + $mul25_i_i * +HEAPF32[$verts71_i + ($56 + 1 << 2) >> 2];
     $add57_i_i = $sub22_i_i * $54 + $mul24_i_i * +HEAPF32[$verts71_i + ($56 - 1 << 2) >> 2] + $mul25_i_i * +HEAPF32[$verts71_i + ($56 + 2 << 2) >> 2];
     HEAPF32[$pt_i + 8 >> 2] = $add57_i_i;
     HEAPF32[$h_i >> 2] = 0.0;
     $call98_i = __ZNK14dtNavMeshQuery13getPolyHeightEjPKfPf(HEAP32[$m_nav_i >> 2] | 0, $polyRef_1_i, $arraydecay96_i, $h_i) | 0;
     if (($call98_i | 0) < 0) {
      $retval_1_i = $call98_i;
      $randomPt_sroa_0_0 = 0.0;
      $randomPt_sroa_2_0 = 0.0;
      $randomPt_sroa_4_0 = 0.0;
     } else {
      $64 = +HEAPF32[$h_i >> 2];
      HEAPF32[$arrayidx49_i_i >> 2] = $64;
      $retval_1_i = 1073741824;
      $randomPt_sroa_0_0 = $add39_i_i;
      $randomPt_sroa_2_0 = $64;
      $randomPt_sroa_4_0 = $add57_i_i;
     }
    }
   } else {
    $retval_1_i = -2147483648;
    $randomPt_sroa_0_0 = 0.0;
    $randomPt_sroa_2_0 = 0.0;
    $randomPt_sroa_4_0 = 0.0;
   }
  }
 } else {
  $retval_1_i = -2147483648;
  $randomPt_sroa_0_0 = 0.0;
  $randomPt_sroa_2_0 = 0.0;
  $randomPt_sroa_4_0 = 0.0;
 }
 if (($retval_1_i | 0) < 0) {
  _printf(6576, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $retval_1_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  if ((HEAP8[$callback >> 0] & 1) == 0) {
   $cond_i_i_i10 = $callback + 1 | 0;
  } else {
   $cond_i_i_i10 = HEAP32[$callback + 8 >> 2] | 0;
  }
  _sprintf($0 | 0, 6432, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i10, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$8$0 = 512;
  $$etemp$8$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  if ((HEAP8[$callback >> 0] & 1) == 0) {
   $cond_i_i_i = $callback + 1 | 0;
  } else {
   $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
  }
  _sprintf($0 | 0, 6360, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, HEAPF64[tempVarArgs + 8 >> 3] = $randomPt_sroa_0_0, HEAPF64[tempVarArgs + 16 >> 3] = $randomPt_sroa_2_0, HEAPF64[tempVarArgs + 24 >> 3] = $randomPt_sroa_4_0, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$8$0 = 512;
  $$etemp$8$1 = 0;
  STACKTOP = sp;
  return;
 }
}
function __ZL12delaunayHullP9rcContextiPKfiPKiR10rcIntArrayS6_($ctx, $npts, $pts, $nhull, $hull, $tris, $edges) {
 $ctx = $ctx | 0;
 $npts = $npts | 0;
 $pts = $pts | 0;
 $nhull = $nhull | 0;
 $hull = $hull | 0;
 $tris = $tris | 0;
 $edges = $edges | 0;
 var $nfaces = 0, $nedges = 0, $mul = 0, $mul1 = 0, $m_cap_i = 0, $0 = 0, $1 = 0, $_lcssa_i = 0, $call_i1_i = 0, $m_size_i = 0, $3 = 0, $m_data_i4 = 0, $6 = 0, $m_size19_pre_phi_i = 0, $m_data_i = 0, $8 = 0, $i_0148 = 0, $j_0147 = 0, $9 = 0, $10 = 0, $11 = 0, $i_012_i_i = 0, $mul_i_i = 0, $12 = 0, $inc_i_i = 0, $mul_i = 0, $inc_i = 0, $15 = 0, $inc = 0, $currentEdge_0144 = 0, $mul5 = 0, $16 = 0, $18 = 0, $20 = 0, $_ph = 0, $m_cap_i5 = 0, $21 = 0, $22 = 0, $mul_i14 = 0, $call_i1_i20 = 0, $m_size_i21 = 0, $24 = 0, $m_data_i25 = 0, $27 = 0, $m_size19_pre_phi_i33 = 0, $_pre = 0, $mul17 = 0, $m_cap_i35 = 0, $29 = 0, $30 = 0, $_lcssa_i48 = 0, $call_i1_i50 = 0, $m_size_i51 = 0, $32 = 0, $m_data_i55 = 0, $35 = 0, $m_size19_pre_phi_i63 = 0, $41 = 0, $42 = 0, $m_data_i102 = 0, $m_size_i99 = 0, $43 = 0, $m_data_i97 = 0, $m_cap_i65 = 0, $i27_0139 = 0, $mul31 = 0, $arrayidx_i105 = 0, $44 = 0, $mul37 = 0, $45 = 0, $arrayidx_i103 = 0, $46 = 0, $49 = 0, $53 = 0, $mul68 = 0, $54 = 0, $arrayidx_i101 = 0, $55 = 0, $58 = 0, $62 = 0, $63 = 0, $i98_0137 = 0, $mul104 = 0, $arrayidx_i98 = 0, $64 = 0, $arrayidx115_pre = 0, $_pre96 = 0, $66 = 0, $arrayidx116 = 0, $67 = 0, $69 = 0, $sub134 = 0, $78 = 0, $79 = 0, $_lcssa_i78 = 0, $call_i1_i80 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $87 = 0, $88 = 0, $i98_1 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $nfaces = sp | 0;
 $nedges = sp + 8 | 0;
 HEAP32[$nfaces >> 2] = 0;
 HEAP32[$nedges >> 2] = 0;
 $mul = $npts * 10 | 0;
 $mul1 = $npts * 40 | 0;
 $m_cap_i = $edges + 8 | 0;
 $0 = HEAP32[$m_cap_i >> 2] | 0;
 if (($0 | 0) < ($mul1 | 0)) {
  if (($0 | 0) == 0) {
   HEAP32[$m_cap_i >> 2] = $mul1;
   $_lcssa_i = $mul1;
  } else {
   $1 = $0;
   do {
    $1 = $1 << 1;
   } while (($1 | 0) < ($mul1 | 0));
   HEAP32[$m_cap_i >> 2] = $1;
   $_lcssa_i = $1;
  }
  $call_i1_i = _malloc($_lcssa_i << 2) | 0;
  $m_size_i = $edges + 4 | 0;
  $3 = HEAP32[$m_size_i >> 2] | 0;
  $m_data_i4 = $edges | 0;
  if (($3 | 0) != 0 & ($call_i1_i | 0) != 0) {
   _memcpy($call_i1_i | 0, HEAP32[$m_data_i4 >> 2] | 0, $3 << 2) | 0;
  }
  $6 = HEAP32[$m_data_i4 >> 2] | 0;
  if (($6 | 0) != 0) {
   _free($6);
  }
  HEAP32[$m_data_i4 >> 2] = $call_i1_i;
  $m_size19_pre_phi_i = $m_size_i;
 } else {
  $m_size19_pre_phi_i = $edges + 4 | 0;
 }
 HEAP32[$m_size19_pre_phi_i >> 2] = $mul1;
 if (($nhull | 0) > 0) {
  $m_data_i = $edges | 0;
  $j_0147 = $nhull - 1 | 0;
  $i_0148 = 0;
  $8 = 0;
  while (1) {
   $9 = HEAP32[$m_data_i >> 2] | 0;
   $10 = HEAP32[$hull + ($j_0147 << 2) >> 2] | 0;
   $11 = HEAP32[$hull + ($i_0148 << 2) >> 2] | 0;
   L21 : do {
    if (($8 | 0) < ($mul | 0)) {
     L24 : do {
      if (($8 | 0) > 0) {
       $i_012_i_i = 0;
       while (1) {
        $mul_i_i = $i_012_i_i << 2;
        $12 = HEAP32[$9 + ($mul_i_i << 2) >> 2] | 0;
        if (($12 | 0) == ($10 | 0)) {
         if ((HEAP32[$9 + (($mul_i_i | 1) << 2) >> 2] | 0) == ($11 | 0)) {
          break;
         }
        }
        if (($12 | 0) == ($11 | 0)) {
         if ((HEAP32[$9 + (($mul_i_i | 1) << 2) >> 2] | 0) == ($10 | 0)) {
          break;
         }
        }
        $inc_i_i = $i_012_i_i + 1 | 0;
        if (($inc_i_i | 0) < ($8 | 0)) {
         $i_012_i_i = $inc_i_i;
        } else {
         break L24;
        }
       }
       if (!(($i_012_i_i | 0) == -1)) {
        $15 = $8;
        break L21;
       }
      }
     } while (0);
     $mul_i = $8 << 2;
     HEAP32[$9 + ($mul_i << 2) >> 2] = $10;
     HEAP32[$9 + (($mul_i | 1) << 2) >> 2] = $11;
     HEAP32[$9 + (($mul_i | 2) << 2) >> 2] = -2;
     HEAP32[$9 + (($mul_i | 3) << 2) >> 2] = -1;
     $inc_i = $8 + 1 | 0;
     HEAP32[$nedges >> 2] = $inc_i;
     $15 = $inc_i;
    } else {
     __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $8, HEAP32[tempVarArgs + 8 >> 2] = $mul, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
     $15 = $8;
    }
   } while (0);
   $inc = $i_0148 + 1 | 0;
   if (($inc | 0) < ($nhull | 0)) {
    $j_0147 = $i_0148;
    $i_0148 = $inc;
    $8 = $15;
   } else {
    break;
   }
  }
  if (($15 | 0) > 0) {
   $currentEdge_0144 = 0;
   do {
    $mul5 = $currentEdge_0144 << 2;
    $16 = HEAP32[$m_data_i >> 2] | 0;
    if ((HEAP32[$16 + (($mul5 | 2) << 2) >> 2] | 0) == -1) {
     __ZL13completeFacetP9rcContextPKfiPiRiiS4_i($ctx, $pts, $npts, $16, $nedges, $mul, $nfaces, $currentEdge_0144);
     $18 = HEAP32[$m_data_i >> 2] | 0;
    } else {
     $18 = $16;
    }
    if ((HEAP32[$18 + (($mul5 | 3) << 2) >> 2] | 0) == -1) {
     __ZL13completeFacetP9rcContextPKfiPiRiiS4_i($ctx, $pts, $npts, $18, $nedges, $mul, $nfaces, $currentEdge_0144);
    }
    $currentEdge_0144 = $currentEdge_0144 + 1 | 0;
    $20 = HEAP32[$nedges >> 2] | 0;
   } while (($currentEdge_0144 | 0) < ($20 | 0));
   $_pre = HEAP32[$nfaces >> 2] | 0;
   $mul17 = $_pre << 2;
   $m_cap_i35 = $tris + 8 | 0;
   $29 = HEAP32[$m_cap_i35 >> 2] | 0;
   if (($29 | 0) < ($mul17 | 0)) {
    if (($29 | 0) == 0) {
     HEAP32[$m_cap_i35 >> 2] = $mul17;
     $_lcssa_i48 = $mul17;
    } else {
     $30 = $29;
     do {
      $30 = $30 << 1;
     } while (($30 | 0) < ($mul17 | 0));
     HEAP32[$m_cap_i35 >> 2] = $30;
     $_lcssa_i48 = $30;
    }
    $call_i1_i50 = _malloc($_lcssa_i48 << 2) | 0;
    $m_size_i51 = $tris + 4 | 0;
    $32 = HEAP32[$m_size_i51 >> 2] | 0;
    $m_data_i55 = $tris | 0;
    if (($32 | 0) != 0 & ($call_i1_i50 | 0) != 0) {
     _memcpy($call_i1_i50 | 0, HEAP32[$m_data_i55 >> 2] | 0, $32 << 2) | 0;
    }
    $35 = HEAP32[$m_data_i55 >> 2] | 0;
    if (($35 | 0) != 0) {
     _free($35);
    }
    HEAP32[$m_data_i55 >> 2] = $call_i1_i50;
    $m_size19_pre_phi_i63 = $m_size_i51;
   } else {
    $m_size19_pre_phi_i63 = $tris + 4 | 0;
   }
   HEAP32[$m_size19_pre_phi_i63 >> 2] = $mul17;
   if (($_pre | 0) > 0) {
    _memset(HEAP32[$tris >> 2] | 0, -1 | 0, (($mul17 | 0) > 1 ? $_pre << 4 : 4) | 0) | 0;
    $41 = $20;
   } else {
    $41 = $20;
   }
  } else {
   $_ph = $15;
   label = 31;
  }
 } else {
  $_ph = 0;
  label = 31;
 }
 if ((label | 0) == 31) {
  $m_cap_i5 = $tris + 8 | 0;
  $21 = HEAP32[$m_cap_i5 >> 2] | 0;
  if (($21 | 0) < 0) {
   $22 = $21;
   while (1) {
    $mul_i14 = $22 << 1;
    if (($22 | 0) < 0) {
     $22 = $mul_i14;
    } else {
     break;
    }
   }
   HEAP32[$m_cap_i5 >> 2] = $mul_i14;
   $call_i1_i20 = _malloc($22 << 3) | 0;
   $m_size_i21 = $tris + 4 | 0;
   $24 = HEAP32[$m_size_i21 >> 2] | 0;
   $m_data_i25 = $tris | 0;
   if (($24 | 0) != 0 & ($call_i1_i20 | 0) != 0) {
    _memcpy($call_i1_i20 | 0, HEAP32[$m_data_i25 >> 2] | 0, $24 << 2) | 0;
   }
   $27 = HEAP32[$m_data_i25 >> 2] | 0;
   if (($27 | 0) != 0) {
    _free($27);
   }
   HEAP32[$m_data_i25 >> 2] = $call_i1_i20;
   $m_size19_pre_phi_i33 = $m_size_i21;
  } else {
   $m_size19_pre_phi_i33 = $tris + 4 | 0;
  }
  HEAP32[$m_size19_pre_phi_i33 >> 2] = 0;
  $41 = $_ph;
 }
 if (($41 | 0) > 0) {
  $42 = HEAP32[$edges >> 2] | 0;
  $m_data_i102 = $tris | 0;
  $i27_0139 = 0;
  do {
   $mul31 = $i27_0139 << 2;
   $arrayidx_i105 = $42 + ($mul31 << 2) | 0;
   $44 = HEAP32[$42 + (($mul31 | 3) << 2) >> 2] | 0;
   do {
    if (($44 | 0) > -1) {
     $mul37 = $44 << 2;
     $45 = HEAP32[$m_data_i102 >> 2] | 0;
     $arrayidx_i103 = $45 + ($mul37 << 2) | 0;
     $46 = HEAP32[$arrayidx_i103 >> 2] | 0;
     if (($46 | 0) == -1) {
      HEAP32[$arrayidx_i103 >> 2] = HEAP32[$arrayidx_i105 >> 2];
      HEAP32[$45 + (($mul37 | 1) << 2) >> 2] = HEAP32[$42 + (($mul31 | 1) << 2) >> 2];
      break;
     }
     $49 = HEAP32[$42 + (($mul31 | 1) << 2) >> 2] | 0;
     if (($46 | 0) == ($49 | 0)) {
      HEAP32[$45 + (($mul37 | 2) << 2) >> 2] = HEAP32[$arrayidx_i105 >> 2];
      break;
     }
     if ((HEAP32[$45 + (($mul37 | 1) << 2) >> 2] | 0) == (HEAP32[$arrayidx_i105 >> 2] | 0)) {
      HEAP32[$45 + (($mul37 | 2) << 2) >> 2] = $49;
     }
    }
   } while (0);
   $53 = HEAP32[$42 + (($mul31 | 2) << 2) >> 2] | 0;
   do {
    if (($53 | 0) > -1) {
     $mul68 = $53 << 2;
     $54 = HEAP32[$m_data_i102 >> 2] | 0;
     $arrayidx_i101 = $54 + ($mul68 << 2) | 0;
     $55 = HEAP32[$arrayidx_i101 >> 2] | 0;
     if (($55 | 0) == -1) {
      HEAP32[$arrayidx_i101 >> 2] = HEAP32[$42 + (($mul31 | 1) << 2) >> 2];
      HEAP32[$54 + (($mul68 | 1) << 2) >> 2] = HEAP32[$arrayidx_i105 >> 2];
      break;
     }
     $58 = HEAP32[$arrayidx_i105 >> 2] | 0;
     if (($55 | 0) == ($58 | 0)) {
      HEAP32[$54 + (($mul68 | 2) << 2) >> 2] = HEAP32[$42 + (($mul31 | 1) << 2) >> 2];
      break;
     }
     if ((HEAP32[$54 + (($mul68 | 1) << 2) >> 2] | 0) == (HEAP32[$42 + (($mul31 | 1) << 2) >> 2] | 0)) {
      HEAP32[$54 + (($mul68 | 2) << 2) >> 2] = $58;
     }
    }
   } while (0);
   $i27_0139 = $i27_0139 + 1 | 0;
  } while (($i27_0139 | 0) < ($41 | 0));
 }
 $m_size_i99 = $tris + 4 | 0;
 $43 = HEAP32[$m_size_i99 >> 2] | 0;
 if (($43 | 0) <= 3) {
  STACKTOP = sp;
  return;
 }
 $m_data_i97 = $tris | 0;
 $m_cap_i65 = $tris + 8 | 0;
 $i98_0137 = 0;
 $63 = $43;
 $62 = HEAP32[$m_data_i97 >> 2] | 0;
 while (1) {
  $mul104 = $i98_0137 << 2;
  $arrayidx_i98 = $62 + ($mul104 << 2) | 0;
  $64 = HEAP32[$arrayidx_i98 >> 2] | 0;
  $arrayidx115_pre = $62 + (($mul104 | 1) << 2) | 0;
  $_pre96 = HEAP32[$arrayidx115_pre >> 2] | 0;
  if (($64 | 0) == -1) {
   $66 = $_pre96;
   label = 75;
  } else {
   if (($_pre96 | 0) == -1) {
    $66 = -1;
    label = 75;
   } else {
    if ((HEAP32[$62 + (($mul104 | 2) << 2) >> 2] | 0) == -1) {
     $66 = $_pre96;
     label = 75;
    } else {
     $i98_1 = $i98_0137;
     $88 = $63;
     $87 = $62;
    }
   }
  }
  if ((label | 0) == 75) {
   label = 0;
   $arrayidx116 = $62 + (($mul104 | 2) << 2) | 0;
   $67 = HEAP32[$arrayidx116 >> 2] | 0;
   __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 2, 9464, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $i98_0137, HEAP32[tempVarArgs + 8 >> 2] = $64, HEAP32[tempVarArgs + 16 >> 2] = $66, HEAP32[tempVarArgs + 24 >> 2] = $67, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $69 = HEAP32[$m_data_i97 >> 2] | 0;
   HEAP32[$arrayidx_i98 >> 2] = HEAP32[$69 + ((HEAP32[$m_size_i99 >> 2] | 0) - 4 << 2) >> 2];
   HEAP32[$arrayidx115_pre >> 2] = HEAP32[$69 + ((HEAP32[$m_size_i99 >> 2] | 0) - 3 << 2) >> 2];
   HEAP32[$arrayidx116 >> 2] = HEAP32[$69 + ((HEAP32[$m_size_i99 >> 2] | 0) - 2 << 2) >> 2];
   HEAP32[$62 + (($mul104 | 3) << 2) >> 2] = HEAP32[$69 + ((HEAP32[$m_size_i99 >> 2] | 0) - 1 << 2) >> 2];
   $sub134 = (HEAP32[$m_size_i99 >> 2] | 0) - 4 | 0;
   $78 = HEAP32[$m_cap_i65 >> 2] | 0;
   if (($78 | 0) < ($sub134 | 0)) {
    if (($78 | 0) == 0) {
     HEAP32[$m_cap_i65 >> 2] = $sub134;
     $_lcssa_i78 = $sub134;
    } else {
     $79 = $78;
     do {
      $79 = $79 << 1;
     } while (($79 | 0) < ($sub134 | 0));
     HEAP32[$m_cap_i65 >> 2] = $79;
     $_lcssa_i78 = $79;
    }
    $call_i1_i80 = _malloc($_lcssa_i78 << 2) | 0;
    $80 = $call_i1_i80;
    $81 = HEAP32[$m_size_i99 >> 2] | 0;
    if (($81 | 0) != 0 & ($call_i1_i80 | 0) != 0) {
     _memcpy($call_i1_i80 | 0, HEAP32[$m_data_i97 >> 2] | 0, $81 << 2) | 0;
    }
    $84 = HEAP32[$m_data_i97 >> 2] | 0;
    if (($84 | 0) != 0) {
     _free($84);
    }
    HEAP32[$m_data_i97 >> 2] = $80;
    $86 = $80;
   } else {
    $86 = $69;
   }
   HEAP32[$m_size_i99 >> 2] = $sub134;
   $i98_1 = $i98_0137 - 1 | 0;
   $88 = $sub134;
   $87 = $86;
  }
  $i98_0137 = $i98_1 + 1 | 0;
  if (($i98_0137 | 0) >= (($88 | 0) / 4 | 0 | 0)) {
   break;
  } else {
   $63 = $88;
   $62 = $87;
  }
 }
 STACKTOP = sp;
 return;
}
function __ZL13completeFacetP9rcContextPKfiPiRiiS4_i($ctx, $pts, $npts, $edges, $nedges, $maxEdges, $nfaces, $e) {
 $ctx = $ctx | 0;
 $pts = $pts | 0;
 $npts = $npts | 0;
 $edges = $edges | 0;
 $nedges = $nedges | 0;
 $maxEdges = $maxEdges | 0;
 $nfaces = $nfaces | 0;
 $e = $e | 0;
 var $c = 0, $r = 0, $mul = 0, $arrayidx = 0, $arrayidx1 = 0, $t_0_in = 0, $s_0_in = 0, $s_0 = 0, $t_0 = 0, $mul16 = 0, $arrayidx17 = 0, $mul18 = 0, $arrayidx19 = 0, $arrayidx2_i = 0, $arrayidx3_i = 0, $arraydecay = 0, $arrayidx3_i_i110 = 0, $u_0242 = 0, $pt_0241 = 0, $mul20 = 0, $arrayidx21 = 0, $4 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $call1_i = 0.0, $12 = 0, $pt_1 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $arrayidx13_i124 = 0, $19 = 0, $cmp11_i189 = 0, $i_012_i190 = 0, $mul_i191 = 0, $20 = 0, $cmp2_i193 = 0, $inc_i205 = 0, $23 = 0, $i_012_i_i158 = 0, $mul_i_i159 = 0, $24 = 0, $inc_i_i173 = 0, $mul_i178 = 0, $inc_i186 = 0, $28 = 0, $29 = 0, $arrayidx4_i141 = 0, $31 = 0, $arrayidx13_i149 = 0, $33 = 0, $cmp11_i129 = 0, $i_012_i = 0, $mul_i130 = 0, $34 = 0, $cmp2_i132 = 0, $inc_i135 = 0, $37 = 0, $i_012_i_i = 0, $mul_i_i = 0, $38 = 0, $inc_i_i = 0, $mul_i108 = 0, $42 = 0, $43 = 0, $arrayidx4_i93 = 0, $45 = 0, $arrayidx13_i101 = 0, $48 = 0, $49 = 0, $51 = 0, $arrayidx13_i = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $c = sp | 0;
 $r = sp + 16 | 0;
 $mul = $e << 2;
 $arrayidx = $edges + ($mul << 2) | 0;
 $arrayidx1 = $edges + (($mul | 2) << 2) | 0;
 do {
  if ((HEAP32[$arrayidx1 >> 2] | 0) == -1) {
   $s_0_in = $arrayidx;
   $t_0_in = $edges + (($mul | 1) << 2) | 0;
  } else {
   if ((HEAP32[$edges + (($mul | 3) << 2) >> 2] | 0) == -1) {
    $s_0_in = $edges + (($mul | 1) << 2) | 0;
    $t_0_in = $arrayidx;
    break;
   } else {
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $s_0 = HEAP32[$s_0_in >> 2] | 0;
 $t_0 = HEAP32[$t_0_in >> 2] | 0;
 _memset($c | 0, 0, 12) | 0;
 HEAPF32[$r >> 2] = -1.0;
 if (($npts | 0) > 0) {
  $mul16 = $s_0 * 3 | 0;
  $arrayidx17 = $pts + ($mul16 << 2) | 0;
  $mul18 = $t_0 * 3 | 0;
  $arrayidx19 = $pts + ($mul18 << 2) | 0;
  $arrayidx2_i = $pts + ($mul18 + 2 << 2) | 0;
  $arrayidx3_i = $pts + ($mul16 + 2 << 2) | 0;
  $arraydecay = $c | 0;
  $arrayidx3_i_i110 = $c + 8 | 0;
  $pt_0241 = $npts;
  $u_0242 = 0;
  while (1) {
   do {
    if (($u_0242 | 0) == ($s_0 | 0) | ($u_0242 | 0) == ($t_0 | 0)) {
     $pt_1 = $pt_0241;
    } else {
     $mul20 = $u_0242 * 3 | 0;
     $arrayidx21 = $pts + ($mul20 << 2) | 0;
     $4 = +HEAPF32[$arrayidx17 >> 2];
     $6 = +HEAPF32[$arrayidx3_i >> 2];
     $7 = +HEAPF32[$arrayidx21 >> 2];
     $8 = +HEAPF32[$pts + ($mul20 + 2 << 2) >> 2];
     if ((+HEAPF32[$arrayidx19 >> 2] - $4) * ($8 - $6) - (+HEAPF32[$arrayidx2_i >> 2] - $6) * ($7 - $4) > 9999999747378752.0e-21) {
      $9 = +HEAPF32[$r >> 2];
      if ($9 < 0.0) {
       __ZL12circumCirclePKfS0_S0_PfRf($arrayidx17, $arrayidx19, $arrayidx21, $arraydecay, $r);
       $pt_1 = $u_0242;
       break;
      }
      $sub_i_i = $7 - +HEAPF32[$arraydecay >> 2];
      $sub4_i_i = $8 - +HEAPF32[$arrayidx3_i_i110 >> 2];
      $call1_i = +Math_sqrt($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i);
      if ($call1_i > $9 * 1.0010000467300415) {
       $pt_1 = $pt_0241;
      } else {
       if ($call1_i < $9 * .9990000128746033) {
        __ZL12circumCirclePKfS0_S0_PfRf($arrayidx17, $arrayidx19, $arrayidx21, $arraydecay, $r);
        $pt_1 = $u_0242;
        break;
       }
       $12 = HEAP32[$nedges >> 2] | 0;
       if (__ZL12overlapEdgesPKfPKiiii($pts, $edges, $12, $s_0, $u_0242) | 0) {
        $pt_1 = $pt_0241;
       } else {
        if (__ZL12overlapEdgesPKfPKiiii($pts, $edges, $12, $t_0, $u_0242) | 0) {
         $pt_1 = $pt_0241;
        } else {
         __ZL12circumCirclePKfS0_S0_PfRf($arrayidx17, $arrayidx19, $arrayidx21, $arraydecay, $r);
         $pt_1 = $u_0242;
        }
       }
      }
     } else {
      $pt_1 = $pt_0241;
     }
    }
   } while (0);
   $u_0242 = $u_0242 + 1 | 0;
   if (($u_0242 | 0) >= ($npts | 0)) {
    break;
   } else {
    $pt_0241 = $pt_1;
   }
  }
  if (($pt_1 | 0) < ($npts | 0)) {
   $13 = HEAP32[$nfaces >> 2] | 0;
   $14 = HEAP32[$arrayidx >> 2] | 0;
   $15 = HEAP32[$edges + (($mul | 1) << 2) >> 2] | 0;
   if (($14 | 0) == ($s_0 | 0) & ($15 | 0) == ($t_0 | 0)) {
    if ((HEAP32[$arrayidx1 >> 2] | 0) == -1) {
     HEAP32[$arrayidx1 >> 2] = $13;
    } else {
     $17 = $t_0;
     label = 22;
    }
   } else {
    $17 = $15;
    label = 22;
   }
   if ((label | 0) == 22) {
    if (($17 | 0) == ($s_0 | 0) & ($14 | 0) == ($t_0 | 0)) {
     $arrayidx13_i124 = $edges + (($mul | 3) << 2) | 0;
     if ((HEAP32[$arrayidx13_i124 >> 2] | 0) == -1) {
      HEAP32[$arrayidx13_i124 >> 2] = $13;
     }
    }
   }
   $19 = HEAP32[$nedges >> 2] | 0;
   $cmp11_i189 = ($19 | 0) > 0;
   L35 : do {
    if ($cmp11_i189) {
     $i_012_i190 = 0;
     while (1) {
      $mul_i191 = $i_012_i190 << 2;
      $20 = HEAP32[$edges + ($mul_i191 << 2) >> 2] | 0;
      $cmp2_i193 = ($20 | 0) == ($pt_1 | 0);
      if ($cmp2_i193) {
       if ((HEAP32[$edges + (($mul_i191 | 1) << 2) >> 2] | 0) == ($s_0 | 0)) {
        break;
       }
      }
      if (($20 | 0) == ($s_0 | 0)) {
       if ((HEAP32[$edges + (($mul_i191 | 1) << 2) >> 2] | 0) == ($pt_1 | 0)) {
        break;
       }
      }
      $inc_i205 = $i_012_i190 + 1 | 0;
      if (($inc_i205 | 0) < ($19 | 0)) {
       $i_012_i190 = $inc_i205;
      } else {
       label = 32;
       break L35;
      }
     }
     if (($i_012_i190 | 0) == -1) {
      label = 32;
     } else {
      $28 = HEAP32[$nfaces >> 2] | 0;
      $29 = HEAP32[$edges + (($mul_i191 | 1) << 2) >> 2] | 0;
      if ($cmp2_i193 & ($29 | 0) == ($s_0 | 0)) {
       $arrayidx4_i141 = $edges + (($mul_i191 | 2) << 2) | 0;
       if ((HEAP32[$arrayidx4_i141 >> 2] | 0) == -1) {
        HEAP32[$arrayidx4_i141 >> 2] = $28;
        label = 48;
        break;
       } else {
        $31 = $s_0;
       }
      } else {
       $31 = $29;
      }
      if (($31 | 0) == ($pt_1 | 0) & ($20 | 0) == ($s_0 | 0)) {
       $arrayidx13_i149 = $edges + (($mul_i191 | 3) << 2) | 0;
       if ((HEAP32[$arrayidx13_i149 >> 2] | 0) == -1) {
        HEAP32[$arrayidx13_i149 >> 2] = $28;
        label = 48;
       } else {
        label = 48;
       }
      } else {
       label = 48;
      }
     }
    } else {
     label = 32;
    }
   } while (0);
   L52 : do {
    if ((label | 0) == 32) {
     $23 = HEAP32[$nfaces >> 2] | 0;
     if (($19 | 0) >= ($maxEdges | 0)) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $19, HEAP32[tempVarArgs + 8 >> 2] = $maxEdges, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      label = 48;
      break;
     }
     L57 : do {
      if ($cmp11_i189) {
       $i_012_i_i158 = 0;
       while (1) {
        $mul_i_i159 = $i_012_i_i158 << 2;
        $24 = HEAP32[$edges + ($mul_i_i159 << 2) >> 2] | 0;
        if (($24 | 0) == ($pt_1 | 0)) {
         if ((HEAP32[$edges + (($mul_i_i159 | 1) << 2) >> 2] | 0) == ($s_0 | 0)) {
          break;
         }
        }
        if (($24 | 0) == ($s_0 | 0)) {
         if ((HEAP32[$edges + (($mul_i_i159 | 1) << 2) >> 2] | 0) == ($pt_1 | 0)) {
          break;
         }
        }
        $inc_i_i173 = $i_012_i_i158 + 1 | 0;
        if (($inc_i_i173 | 0) < ($19 | 0)) {
         $i_012_i_i158 = $inc_i_i173;
        } else {
         break L57;
        }
       }
       if (!(($i_012_i_i158 | 0) == -1)) {
        label = 48;
        break L52;
       }
      }
     } while (0);
     $mul_i178 = $19 << 2;
     HEAP32[$edges + ($mul_i178 << 2) >> 2] = $pt_1;
     HEAP32[$edges + (($mul_i178 | 1) << 2) >> 2] = $s_0;
     HEAP32[$edges + (($mul_i178 | 2) << 2) >> 2] = $23;
     HEAP32[$edges + (($mul_i178 | 3) << 2) >> 2] = -1;
     $inc_i186 = (HEAP32[$nedges >> 2] | 0) + 1 | 0;
     HEAP32[$nedges >> 2] = $inc_i186;
     $33 = $inc_i186;
    }
   } while (0);
   if ((label | 0) == 48) {
    $33 = HEAP32[$nedges >> 2] | 0;
   }
   $cmp11_i129 = ($33 | 0) > 0;
   L71 : do {
    if ($cmp11_i129) {
     $i_012_i = 0;
     while (1) {
      $mul_i130 = $i_012_i << 2;
      $34 = HEAP32[$edges + ($mul_i130 << 2) >> 2] | 0;
      $cmp2_i132 = ($34 | 0) == ($t_0 | 0);
      if ($cmp2_i132) {
       if ((HEAP32[$edges + (($mul_i130 | 1) << 2) >> 2] | 0) == ($pt_1 | 0)) {
        break;
       }
      }
      if (($34 | 0) == ($pt_1 | 0)) {
       if ((HEAP32[$edges + (($mul_i130 | 1) << 2) >> 2] | 0) == ($t_0 | 0)) {
        break;
       }
      }
      $inc_i135 = $i_012_i + 1 | 0;
      if (($inc_i135 | 0) < ($33 | 0)) {
       $i_012_i = $inc_i135;
      } else {
       label = 56;
       break L71;
      }
     }
     if (($i_012_i | 0) == -1) {
      label = 56;
     } else {
      $42 = HEAP32[$nfaces >> 2] | 0;
      $43 = HEAP32[$edges + (($mul_i130 | 1) << 2) >> 2] | 0;
      if ($cmp2_i132 & ($43 | 0) == ($pt_1 | 0)) {
       $arrayidx4_i93 = $edges + (($mul_i130 | 2) << 2) | 0;
       if ((HEAP32[$arrayidx4_i93 >> 2] | 0) == -1) {
        HEAP32[$arrayidx4_i93 >> 2] = $42;
        break;
       } else {
        $45 = $pt_1;
       }
      } else {
       $45 = $43;
      }
      if (($45 | 0) == ($t_0 | 0) & ($34 | 0) == ($pt_1 | 0)) {
       $arrayidx13_i101 = $edges + (($mul_i130 | 3) << 2) | 0;
       if ((HEAP32[$arrayidx13_i101 >> 2] | 0) == -1) {
        HEAP32[$arrayidx13_i101 >> 2] = $42;
       }
      }
     }
    } else {
     label = 56;
    }
   } while (0);
   L88 : do {
    if ((label | 0) == 56) {
     $37 = HEAP32[$nfaces >> 2] | 0;
     if (($33 | 0) >= ($maxEdges | 0)) {
      __ZN9rcContext3logE13rcLogCategoryPKcz($ctx, 3, 8768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $33, HEAP32[tempVarArgs + 8 >> 2] = $maxEdges, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
      break;
     }
     L93 : do {
      if ($cmp11_i129) {
       $i_012_i_i = 0;
       while (1) {
        $mul_i_i = $i_012_i_i << 2;
        $38 = HEAP32[$edges + ($mul_i_i << 2) >> 2] | 0;
        if (($38 | 0) == ($t_0 | 0)) {
         if ((HEAP32[$edges + (($mul_i_i | 1) << 2) >> 2] | 0) == ($pt_1 | 0)) {
          break;
         }
        }
        if (($38 | 0) == ($pt_1 | 0)) {
         if ((HEAP32[$edges + (($mul_i_i | 1) << 2) >> 2] | 0) == ($t_0 | 0)) {
          break;
         }
        }
        $inc_i_i = $i_012_i_i + 1 | 0;
        if (($inc_i_i | 0) < ($33 | 0)) {
         $i_012_i_i = $inc_i_i;
        } else {
         break L93;
        }
       }
       if (!(($i_012_i_i | 0) == -1)) {
        break L88;
       }
      }
     } while (0);
     $mul_i108 = $33 << 2;
     HEAP32[$edges + ($mul_i108 << 2) >> 2] = $t_0;
     HEAP32[$edges + (($mul_i108 | 1) << 2) >> 2] = $pt_1;
     HEAP32[$edges + (($mul_i108 | 2) << 2) >> 2] = $37;
     HEAP32[$edges + (($mul_i108 | 3) << 2) >> 2] = -1;
     HEAP32[$nedges >> 2] = (HEAP32[$nedges >> 2] | 0) + 1;
    }
   } while (0);
   HEAP32[$nfaces >> 2] = (HEAP32[$nfaces >> 2] | 0) + 1;
   STACKTOP = sp;
   return;
  }
 }
 $48 = HEAP32[$arrayidx >> 2] | 0;
 $49 = HEAP32[$edges + (($mul | 1) << 2) >> 2] | 0;
 if (($48 | 0) == ($s_0 | 0) & ($49 | 0) == ($t_0 | 0)) {
  if ((HEAP32[$arrayidx1 >> 2] | 0) == -1) {
   HEAP32[$arrayidx1 >> 2] = -2;
   STACKTOP = sp;
   return;
  } else {
   $51 = $t_0;
  }
 } else {
  $51 = $49;
 }
 if (!(($51 | 0) == ($s_0 | 0) & ($48 | 0) == ($t_0 | 0))) {
  STACKTOP = sp;
  return;
 }
 $arrayidx13_i = $edges + (($mul | 3) << 2) | 0;
 if (!((HEAP32[$arrayidx13_i >> 2] | 0) == -1)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$arrayidx13_i >> 2] = -2;
 STACKTOP = sp;
 return;
}
function __ZL13expandRegionsitR20rcCompactHeightfieldPtS1_S1_S1_R10rcIntArray($maxIter, $level, $chf, $srcReg, $srcDist, $dstReg, $dstDist, $stack) {
 $maxIter = $maxIter | 0;
 $level = $level | 0;
 $chf = $chf | 0;
 $srcReg = $srcReg | 0;
 $srcDist = $srcDist | 0;
 $dstReg = $dstReg | 0;
 $dstDist = $dstDist | 0;
 $stack = $stack | 0;
 var $0 = 0, $1 = 0, $m_cap_i = 0, $2 = 0, $3 = 0, $mul_i = 0, $call_i1_i = 0, $m_size_i1 = 0, $5 = 0, $m_data_i2 = 0, $8 = 0, $m_size19_pre_phi_i = 0, $cmp2123 = 0, $cells = 0, $dist = 0, $areas = 0, $m_size_i = 0, $m_data_i = 0, $y_0127 = 0, $mul = 0, $cells65_pre_phi = 0, $areas49_pre_phi = 0, $m_data_i91_pre_phi = 0, $m_size_i73_pre_phi = 0, $spanCount = 0, $cmp118 = 0, $spans = 0, $x_0124 = 0, $bf_load = 0, $bf_clear = 0, $bf_lshr = 0, $add7 = 0, $i_0122 = 0, $17 = 0, $add_i = 0, $18 = 0, $19 = 0, $_lcssa_i16 = 0, $call_i1_i18 = 0, $20 = 0, $21 = 0, $24 = 0, $26 = 0, $27 = 0, $add_i64 = 0, $28 = 0, $29 = 0, $_lcssa_i46 = 0, $call_i1_i48 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $add_i69 = 0, $38 = 0, $39 = 0, $_lcssa_i76 = 0, $call_i1_i78 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $inc25 = 0, $47 = 0, $srcReg108 = 0, $srcDist107 = 0, $dstReg106 = 0, $dstDist105 = 0, $54 = 0, $_pre135 = 0, $55 = 0, $failed_0115 = 0, $j_0114 = 0, $56 = 0, $57 = 0, $arrayidx_i88 = 0, $58 = 0, $60 = 0, $61 = 0, $bf_clear_i84 = 0, $dir_0112 = 0, $d2_0111 = 0, $r_0110 = 0, $and_i86 = 0, $add64 = 0, $add70 = 0, $69 = 0, $add88 = 0, $cmp90 = 0, $r_1 = 0, $d2_1 = 0, $72 = 0, $failed_1 = 0, $add110 = 0, $73 = 0, $failed_0_lcssa = 0, $inc120 = 0, $_pre = 0, $srcReg108_ph = 0, $srcDist107_ph = 0, $dstReg106_ph = 0, $dstDist105_ph = 0, $iter_0_ph = 0, $srcReg109 = 0, $srcReg108$phi = 0, $srcDist107$phi = 0, label = 0;
 $0 = HEAP32[$chf >> 2] | 0;
 $1 = HEAP32[$chf + 4 >> 2] | 0;
 $m_cap_i = $stack + 8 | 0;
 $2 = HEAP32[$m_cap_i >> 2] | 0;
 if (($2 | 0) < 0) {
  $3 = $2;
  while (1) {
   $mul_i = $3 << 1;
   if (($3 | 0) < 0) {
    $3 = $mul_i;
   } else {
    break;
   }
  }
  HEAP32[$m_cap_i >> 2] = $mul_i;
  $call_i1_i = _malloc($3 << 3) | 0;
  $m_size_i1 = $stack + 4 | 0;
  $5 = HEAP32[$m_size_i1 >> 2] | 0;
  $m_data_i2 = $stack | 0;
  if (($5 | 0) != 0 & ($call_i1_i | 0) != 0) {
   _memcpy($call_i1_i | 0, HEAP32[$m_data_i2 >> 2] | 0, $5 << 2) | 0;
  }
  $8 = HEAP32[$m_data_i2 >> 2] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
  HEAP32[$m_data_i2 >> 2] = $call_i1_i;
  $m_size19_pre_phi_i = $m_size_i1;
 } else {
  $m_size19_pre_phi_i = $stack + 4 | 0;
 }
 HEAP32[$m_size19_pre_phi_i >> 2] = 0;
 if (($1 | 0) > 0) {
  $cmp2123 = ($0 | 0) > 0;
  $cells = $chf + 60 | 0;
  $dist = $chf + 68 | 0;
  $areas = $chf + 72 | 0;
  $m_size_i = $stack + 4 | 0;
  $m_data_i = $stack | 0;
  $y_0127 = 0;
  while (1) {
   if ($cmp2123) {
    $mul = Math_imul($y_0127, $0) | 0;
    $x_0124 = 0;
    do {
     $bf_load = HEAP32[(HEAP32[$cells >> 2] | 0) + ($x_0124 + $mul << 2) >> 2] | 0;
     $bf_clear = $bf_load & 16777215;
     $bf_lshr = $bf_load >>> 24;
     $add7 = $bf_clear + $bf_lshr | 0;
     if (($bf_lshr | 0) != 0) {
      $i_0122 = $bf_clear;
      do {
       if (!((HEAPU16[(HEAP32[$dist >> 2] | 0) + ($i_0122 << 1) >> 1] | 0) >>> 0 < ($level & 65535) >>> 0)) {
        if ((HEAP16[$srcReg + ($i_0122 << 1) >> 1] | 0) == 0) {
         if ((HEAP8[(HEAP32[$areas >> 2] | 0) + $i_0122 >> 0] | 0) != 0) {
          $17 = HEAP32[$m_size_i >> 2] | 0;
          $add_i = $17 + 1 | 0;
          $18 = HEAP32[$m_cap_i >> 2] | 0;
          if (($18 | 0) < ($add_i | 0)) {
           if (($18 | 0) == 0) {
            HEAP32[$m_cap_i >> 2] = $add_i;
            $_lcssa_i16 = $add_i;
           } else {
            $19 = $18;
            do {
             $19 = $19 << 1;
            } while (($19 | 0) < ($add_i | 0));
            HEAP32[$m_cap_i >> 2] = $19;
            $_lcssa_i16 = $19;
           }
           $call_i1_i18 = _malloc($_lcssa_i16 << 2) | 0;
           $20 = $call_i1_i18;
           $21 = HEAP32[$m_size_i >> 2] | 0;
           if (($21 | 0) != 0 & ($call_i1_i18 | 0) != 0) {
            _memcpy($call_i1_i18 | 0, HEAP32[$m_data_i >> 2] | 0, $21 << 2) | 0;
           }
           $24 = HEAP32[$m_data_i >> 2] | 0;
           if (($24 | 0) != 0) {
            _free($24);
           }
           HEAP32[$m_data_i >> 2] = $20;
           $26 = $20;
          } else {
           $26 = HEAP32[$m_data_i >> 2] | 0;
          }
          HEAP32[$m_size_i >> 2] = $add_i;
          HEAP32[$26 + ($17 << 2) >> 2] = $x_0124;
          $27 = HEAP32[$m_size_i >> 2] | 0;
          $add_i64 = $27 + 1 | 0;
          $28 = HEAP32[$m_cap_i >> 2] | 0;
          if (($28 | 0) < ($add_i64 | 0)) {
           if (($28 | 0) == 0) {
            HEAP32[$m_cap_i >> 2] = $add_i64;
            $_lcssa_i46 = $add_i64;
           } else {
            $29 = $28;
            do {
             $29 = $29 << 1;
            } while (($29 | 0) < ($add_i64 | 0));
            HEAP32[$m_cap_i >> 2] = $29;
            $_lcssa_i46 = $29;
           }
           $call_i1_i48 = _malloc($_lcssa_i46 << 2) | 0;
           $30 = $call_i1_i48;
           $31 = HEAP32[$m_size_i >> 2] | 0;
           if (($31 | 0) != 0 & ($call_i1_i48 | 0) != 0) {
            _memcpy($call_i1_i48 | 0, HEAP32[$m_data_i >> 2] | 0, $31 << 2) | 0;
           }
           $34 = HEAP32[$m_data_i >> 2] | 0;
           if (($34 | 0) != 0) {
            _free($34);
           }
           HEAP32[$m_data_i >> 2] = $30;
           $36 = $30;
          } else {
           $36 = $26;
          }
          HEAP32[$m_size_i >> 2] = $add_i64;
          HEAP32[$36 + ($27 << 2) >> 2] = $y_0127;
          $37 = HEAP32[$m_size_i >> 2] | 0;
          $add_i69 = $37 + 1 | 0;
          $38 = HEAP32[$m_cap_i >> 2] | 0;
          if (($38 | 0) < ($add_i69 | 0)) {
           if (($38 | 0) == 0) {
            HEAP32[$m_cap_i >> 2] = $add_i69;
            $_lcssa_i76 = $add_i69;
           } else {
            $39 = $38;
            do {
             $39 = $39 << 1;
            } while (($39 | 0) < ($add_i69 | 0));
            HEAP32[$m_cap_i >> 2] = $39;
            $_lcssa_i76 = $39;
           }
           $call_i1_i78 = _malloc($_lcssa_i76 << 2) | 0;
           $40 = $call_i1_i78;
           $41 = HEAP32[$m_size_i >> 2] | 0;
           if (($41 | 0) != 0 & ($call_i1_i78 | 0) != 0) {
            _memcpy($call_i1_i78 | 0, HEAP32[$m_data_i >> 2] | 0, $41 << 2) | 0;
           }
           $44 = HEAP32[$m_data_i >> 2] | 0;
           if (($44 | 0) != 0) {
            _free($44);
           }
           HEAP32[$m_data_i >> 2] = $40;
           $46 = $40;
          } else {
           $46 = $36;
          }
          HEAP32[$m_size_i >> 2] = $add_i69;
          HEAP32[$46 + ($37 << 2) >> 2] = $i_0122;
         }
        }
       }
       $i_0122 = $i_0122 + 1 | 0;
      } while (($i_0122 | 0) < ($add7 | 0));
     }
     $x_0124 = $x_0124 + 1 | 0;
    } while (($x_0124 | 0) < ($0 | 0));
   }
   $inc25 = $y_0127 + 1 | 0;
   if (($inc25 | 0) < ($1 | 0)) {
    $y_0127 = $inc25;
   } else {
    $m_size_i73_pre_phi = $m_size_i;
    $m_data_i91_pre_phi = $m_data_i;
    $areas49_pre_phi = $areas;
    $cells65_pre_phi = $cells;
    break;
   }
  }
 } else {
  $m_size_i73_pre_phi = $stack + 4 | 0;
  $m_data_i91_pre_phi = $stack | 0;
  $areas49_pre_phi = $chf + 72 | 0;
  $cells65_pre_phi = $chf + 60 | 0;
 }
 $spanCount = $chf + 8 | 0;
 $cmp118 = $level << 16 >> 16 == 0;
 $spans = $chf + 64 | 0;
 $iter_0_ph = 0;
 $dstDist105_ph = $dstDist;
 $dstReg106_ph = $dstReg;
 $srcDist107_ph = $srcDist;
 $srcReg108_ph = $srcReg;
 $_pre = HEAP32[$m_size_i73_pre_phi >> 2] | 0;
 L79 : while (1) {
  $dstDist105 = $dstDist105_ph;
  $dstReg106 = $dstReg106_ph;
  $srcDist107 = $srcDist107_ph;
  $srcReg108 = $srcReg108_ph;
  $47 = $_pre;
  while (1) {
   if (($47 | 0) <= 0) {
    $srcReg109 = $srcReg108;
    label = 73;
    break L79;
   }
   _memcpy($dstReg106 | 0, $srcReg108 | 0, HEAP32[$spanCount >> 2] << 1) | 0;
   _memcpy($dstDist105 | 0, $srcDist107 | 0, HEAP32[$spanCount >> 2] << 1) | 0;
   $54 = HEAP32[$m_size_i73_pre_phi >> 2] | 0;
   if (($54 | 0) > 0) {
    $_pre135 = HEAP32[$m_data_i91_pre_phi >> 2] | 0;
    $j_0114 = 0;
    $failed_0115 = 0;
    $55 = $54;
    while (1) {
     $56 = HEAP32[$_pre135 + ($j_0114 << 2) >> 2] | 0;
     $57 = HEAP32[$_pre135 + ($j_0114 + 1 << 2) >> 2] | 0;
     $arrayidx_i88 = $_pre135 + ($j_0114 + 2 << 2) | 0;
     $58 = HEAP32[$arrayidx_i88 >> 2] | 0;
     do {
      if (($58 | 0) < 0) {
       $failed_1 = $failed_0115 + 1 | 0;
       $72 = $55;
      } else {
       $60 = HEAP32[$areas49_pre_phi >> 2] | 0;
       $61 = HEAP8[$60 + $58 >> 0] | 0;
       $bf_clear_i84 = HEAP32[(HEAP32[$spans >> 2] | 0) + ($58 << 3) + 4 >> 2] & 16777215;
       $r_0110 = HEAP16[$srcReg108 + ($58 << 1) >> 1] | 0;
       $d2_0111 = -1;
       $dir_0112 = 0;
       while (1) {
        $and_i86 = $bf_clear_i84 >>> (($dir_0112 * 6 | 0) >>> 0) & 63;
        if (($and_i86 | 0) == 63) {
         $d2_1 = $d2_0111;
         $r_1 = $r_0110;
        } else {
         $add64 = (HEAP32[11520 + ($dir_0112 << 2) >> 2] | 0) + $56 + (Math_imul((HEAP32[11504 + ($dir_0112 << 2) >> 2] | 0) + $57 | 0, $0) | 0) | 0;
         $add70 = (HEAP32[(HEAP32[$cells65_pre_phi >> 2] | 0) + ($add64 << 2) >> 2] & 16777215) + $and_i86 | 0;
         if ((HEAP8[$60 + $add70 >> 0] | 0) == $61 << 24 >> 24) {
          $69 = HEAP16[$srcReg108 + ($add70 << 1) >> 1] | 0;
          if ($69 << 16 >> 16 > 0) {
           $add88 = (HEAPU16[$srcDist107 + ($add70 << 1) >> 1] | 0) + 2 | 0;
           $cmp90 = $add88 >>> 0 < ($d2_0111 & 65535) >>> 0;
           $d2_1 = $cmp90 ? $add88 & 65535 : $d2_0111;
           $r_1 = $cmp90 ? $69 : $r_0110;
          } else {
           $d2_1 = $d2_0111;
           $r_1 = $r_0110;
          }
         } else {
          $d2_1 = $d2_0111;
          $r_1 = $r_0110;
         }
        }
        $dir_0112 = $dir_0112 + 1 | 0;
        if (($dir_0112 | 0) >= 4) {
         break;
        } else {
         $r_0110 = $r_1;
         $d2_0111 = $d2_1;
        }
       }
       if ($r_1 << 16 >> 16 == 0) {
        $failed_1 = $failed_0115 + 1 | 0;
        $72 = $55;
        break;
       } else {
        HEAP32[$arrayidx_i88 >> 2] = -1;
        HEAP16[$dstReg106 + ($58 << 1) >> 1] = $r_1;
        HEAP16[$dstDist105 + ($58 << 1) >> 1] = $d2_1;
        $failed_1 = $failed_0115;
        $72 = HEAP32[$m_size_i73_pre_phi >> 2] | 0;
        break;
       }
      }
     } while (0);
     $add110 = $j_0114 + 3 | 0;
     if (($add110 | 0) < ($72 | 0)) {
      $j_0114 = $add110;
      $failed_0115 = $failed_1;
      $55 = $72;
     } else {
      $failed_0_lcssa = $failed_1;
      $73 = $72;
      break;
     }
    }
   } else {
    $failed_0_lcssa = 0;
    $73 = $54;
   }
   if (($failed_0_lcssa * 3 | 0 | 0) == ($73 | 0)) {
    $srcReg109 = $dstReg106;
    label = 73;
    break L79;
   }
   if ($cmp118) {
    $srcReg108$phi = $dstReg106;
    $srcDist107$phi = $dstDist105;
    $dstDist105 = $srcDist107;
    $dstReg106 = $srcReg108;
    $47 = $73;
    $srcReg108 = $srcReg108$phi;
    $srcDist107 = $srcDist107$phi;
   } else {
    break;
   }
  }
  $inc120 = $iter_0_ph + 1 | 0;
  if (($inc120 | 0) < ($maxIter | 0)) {
   $iter_0_ph = $inc120;
   $dstDist105_ph = $srcDist107;
   $dstReg106_ph = $srcReg108;
   $srcDist107_ph = $dstDist105;
   $srcReg108_ph = $dstReg106;
   $_pre = $73;
  } else {
   $srcReg109 = $dstReg106;
   label = 73;
   break;
  }
 }
 if ((label | 0) == 73) {
  return $srcReg109 | 0;
 }
 return 0;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i_i73 = 0, $__p_i_i_i_i = 0, $__grouping = 0, $__locale__i_i = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $6 = 0, $exception_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i_i80 = 0, $14 = 0, $15 = 0, $exception_i_i_i92 = 0, $16 = 0, $17 = 0, $20 = 0, $call_i96 = 0, $23 = 0, $__nf_0 = 0, $sub_ptr_lhs_cast = 0, $arrayidx10 = 0, $27 = 0, $28 = 0, $call_i99 = 0, $30 = 0, $incdec_ptr22 = 0, $call_i103 = 0, $33 = 0, $__ns_0197 = 0, $34 = 0, $call_i = 0, $incdec_ptr34 = 0, $__ns_1188 = 0, $39 = 0, $call_i108 = 0, $incdec_ptr47 = 0, $__ns_2 = 0, $__nf_1 = 0, $__size__i_i_i = 0, $44 = 0, $cond_i_i = 0, $add_ptr = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $50 = 0, $call_i121122 = 0, $arrayidx_i_i_i = 0, $__size__i2_i = 0, $__data__i_i_i132 = 0, $54 = 0, $__p_0181 = 0, $__dg_0180 = 0, $__dc_0179 = 0, $57 = 0, $58 = 0, $59 = 0, $cond_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i142143 = 0, $63 = 0, $incdec_ptr82 = 0, $incdec_ptr85 = 0, $64 = 0, $add_ptr90 = 0, $incdec_ptr6_i_i146 = 0, $incdec_ptr9_i_i149 = 0, $__first_addr_08_i_i150 = 0, $65 = 0, $incdec_ptr2_i_i151 = 0, $incdec_ptr_i_i152 = 0, $67 = 0, $68 = 0, $__nf_2174 = 0, $69 = 0, $call_i157158 = 0, $72 = 0, $incdec_ptr101 = 0, $call_i161162 = 0, $74 = 0, $incdec_ptr106 = 0, $incdec_ptr109 = 0, $75 = 0, $__nf_3 = 0, $add_ptr116 = 0, $storemerge = 0, $80 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i_i73 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__grouping = sp + 32 | 0;
 $__locale__i_i = $__loc | 0;
 $0 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if (!((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $6 = HEAP32[$5 + ($sub_i_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5814] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i73 >> 2] = 23256;
  HEAP32[$__p_i_i_i_i73 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i73 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i73);
 }
 $sub_i_i_i80 = (HEAP32[5815] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if (!((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i80 >>> 0)) {
  $exception_i_i_i92 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i92;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i92 | 0, 17848, 212);
 }
 $15 = HEAP32[$14 + ($sub_i_i_i80 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i_i92 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i92;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i92 | 0, 17848, 212);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 HEAP32[$__oe >> 2] = $__ob;
 $20 = HEAP8[$__nb >> 0] | 0;
 if (($20 << 24 >> 24 | 0) == 45 | ($20 << 24 >> 24 | 0) == 43) {
  $call_i96 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($8, $20) | 0;
  $23 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $23 + 4;
  HEAP32[$23 >> 2] = $call_i96;
  $__nf_0 = $__nb + 1 | 0;
 } else {
  $__nf_0 = $__nb;
 }
 $sub_ptr_lhs_cast = $__ne;
 L23 : do {
  if (($sub_ptr_lhs_cast - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0 >> 0] | 0) == 48) {
    $arrayidx10 = $__nf_0 + 1 | 0;
    $27 = HEAP8[$arrayidx10 >> 0] | 0;
    if (($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88) {
     $28 = $6;
     $call_i99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
     $30 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $30 + 4;
     HEAP32[$30 >> 2] = $call_i99;
     $incdec_ptr22 = $__nf_0 + 2 | 0;
     $call_i103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$arrayidx10 >> 0] | 0) | 0;
     $33 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $33 + 4;
     HEAP32[$33 >> 2] = $call_i103;
     if ($incdec_ptr22 >>> 0 < $__ne >>> 0) {
      $__ns_0197 = $incdec_ptr22;
      while (1) {
       $34 = HEAP8[$__ns_0197 >> 0] | 0;
       if ((HEAP8[24208] | 0) == 0) {
        if ((___cxa_guard_acquire(24208) | 0) != 0) {
         $call_i = _newlocale(2147483647, 896, 0) | 0;
         HEAP32[5446] = $call_i;
        }
       }
       $incdec_ptr34 = $__ns_0197 + 1 | 0;
       if ((_isxdigit_l($34 << 24 >> 24 | 0, HEAP32[5446] | 0) | 0) == 0) {
        $__nf_1 = $incdec_ptr22;
        $__ns_2 = $__ns_0197;
        break L23;
       }
       if ($incdec_ptr34 >>> 0 < $__ne >>> 0) {
        $__ns_0197 = $incdec_ptr34;
       } else {
        $__nf_1 = $incdec_ptr22;
        $__ns_2 = $incdec_ptr34;
        break;
       }
      }
     } else {
      $__nf_1 = $incdec_ptr22;
      $__ns_2 = $incdec_ptr22;
     }
    } else {
     label = 24;
    }
   } else {
    label = 24;
   }
  } else {
   label = 24;
  }
 } while (0);
 L38 : do {
  if ((label | 0) == 24) {
   if ($__nf_0 >>> 0 < $__ne >>> 0) {
    $__ns_1188 = $__nf_0;
    while (1) {
     $39 = HEAP8[$__ns_1188 >> 0] | 0;
     if ((HEAP8[24208] | 0) == 0) {
      if ((___cxa_guard_acquire(24208) | 0) != 0) {
       $call_i108 = _newlocale(2147483647, 896, 0) | 0;
       HEAP32[5446] = $call_i108;
      }
     }
     $incdec_ptr47 = $__ns_1188 + 1 | 0;
     if ((_isdigit_l($39 << 24 >> 24 | 0, HEAP32[5446] | 0) | 0) == 0) {
      $__nf_1 = $__nf_0;
      $__ns_2 = $__ns_1188;
      break L38;
     }
     if ($incdec_ptr47 >>> 0 < $__ne >>> 0) {
      $__ns_1188 = $incdec_ptr47;
     } else {
      $__nf_1 = $__nf_0;
      $__ns_2 = $incdec_ptr47;
      break;
     }
    }
   } else {
    $__nf_1 = $__nf_0;
    $__ns_2 = $__nf_0;
   }
  }
 } while (0);
 $__size__i_i_i = $__grouping;
 $44 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($44 & 1) == 0) {
  $cond_i_i = ($44 & 255) >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i_i | 0) == 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($8, $__nf_1, $__ns_2, HEAP32[$__oe >> 2] | 0) | 0;
  $add_ptr = (HEAP32[$__oe >> 2] | 0) + ($__ns_2 - $__nf_1 << 2) | 0;
  HEAP32[$__oe >> 2] = $add_ptr;
  $67 = $add_ptr;
 } else {
  if (($__nf_1 | 0) != ($__ns_2 | 0)) {
   $incdec_ptr6_i_i = $__ns_2 - 1 | 0;
   if ($incdec_ptr6_i_i >>> 0 > $__nf_1 >>> 0) {
    $__first_addr_08_i_i = $__nf_1;
    $incdec_ptr9_i_i = $incdec_ptr6_i_i;
    do {
     $50 = HEAP8[$__first_addr_08_i_i >> 0] | 0;
     HEAP8[$__first_addr_08_i_i >> 0] = HEAP8[$incdec_ptr9_i_i >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i >> 0] = $50;
     $__first_addr_08_i_i = $__first_addr_08_i_i + 1 | 0;
     $incdec_ptr9_i_i = $incdec_ptr9_i_i - 1 | 0;
    } while ($__first_addr_08_i_i >>> 0 < $incdec_ptr9_i_i >>> 0);
   }
  }
  $call_i121122 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
  if ($__nf_1 >>> 0 < $__ns_2 >>> 0) {
   $arrayidx_i_i_i = $__grouping + 1 | 0;
   $__size__i2_i = $__grouping + 4 | 0;
   $__data__i_i_i132 = $__grouping + 8 | 0;
   $54 = $6;
   $__dc_0179 = 0;
   $__dg_0180 = 0;
   $__p_0181 = $__nf_1;
   while (1) {
    $57 = HEAP8[((HEAP8[$__size__i_i_i >> 0] & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i132 >> 2] | 0) + $__dg_0180 >> 0] | 0;
    if ($57 << 24 >> 24 > 0 & ($__dc_0179 | 0) == ($57 << 24 >> 24 | 0)) {
     $58 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $58 + 4;
     HEAP32[$58 >> 2] = $call_i121122;
     $59 = HEAP8[$__size__i_i_i >> 0] | 0;
     if (($59 & 1) == 0) {
      $cond_i = ($59 & 255) >>> 1;
     } else {
      $cond_i = HEAP32[$__size__i2_i >> 2] | 0;
     }
     $__dg_1 = ($__dg_0180 >>> 0 < ($cond_i - 1 | 0) >>> 0) + $__dg_0180 | 0;
     $__dc_1 = 0;
    } else {
     $__dg_1 = $__dg_0180;
     $__dc_1 = $__dc_0179;
    }
    $call_i142143 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$__p_0181 >> 0] | 0) | 0;
    $63 = HEAP32[$__oe >> 2] | 0;
    $incdec_ptr82 = $63 + 4 | 0;
    HEAP32[$__oe >> 2] = $incdec_ptr82;
    HEAP32[$63 >> 2] = $call_i142143;
    $incdec_ptr85 = $__p_0181 + 1 | 0;
    if ($incdec_ptr85 >>> 0 < $__ns_2 >>> 0) {
     $__dc_0179 = $__dc_1 + 1 | 0;
     $__dg_0180 = $__dg_1;
     $__p_0181 = $incdec_ptr85;
    } else {
     $64 = $incdec_ptr82;
     break;
    }
   }
  } else {
   $64 = HEAP32[$__oe >> 2] | 0;
  }
  $add_ptr90 = $__ob + ($__nf_1 - $__nb << 2) | 0;
  if (($add_ptr90 | 0) == ($64 | 0)) {
   $67 = $64;
  } else {
   $incdec_ptr6_i_i146 = $64 - 4 | 0;
   if ($incdec_ptr6_i_i146 >>> 0 > $add_ptr90 >>> 0) {
    $__first_addr_08_i_i150 = $add_ptr90;
    $incdec_ptr9_i_i149 = $incdec_ptr6_i_i146;
    while (1) {
     $65 = HEAP32[$__first_addr_08_i_i150 >> 2] | 0;
     HEAP32[$__first_addr_08_i_i150 >> 2] = HEAP32[$incdec_ptr9_i_i149 >> 2];
     HEAP32[$incdec_ptr9_i_i149 >> 2] = $65;
     $incdec_ptr2_i_i151 = $__first_addr_08_i_i150 + 4 | 0;
     $incdec_ptr_i_i152 = $incdec_ptr9_i_i149 - 4 | 0;
     if ($incdec_ptr2_i_i151 >>> 0 < $incdec_ptr_i_i152 >>> 0) {
      $__first_addr_08_i_i150 = $incdec_ptr2_i_i151;
      $incdec_ptr9_i_i149 = $incdec_ptr_i_i152;
     } else {
      $67 = $64;
      break;
     }
    }
   } else {
    $67 = $64;
   }
  }
 }
 L82 : do {
  if ($__ns_2 >>> 0 < $__ne >>> 0) {
   $68 = $6;
   $__nf_2174 = $__ns_2;
   while (1) {
    $69 = HEAP8[$__nf_2174 >> 0] | 0;
    if ($69 << 24 >> 24 == 46) {
     break;
    }
    $call_i161162 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 44 >> 2] & 63]($8, $69) | 0;
    $74 = HEAP32[$__oe >> 2] | 0;
    $incdec_ptr106 = $74 + 4 | 0;
    HEAP32[$__oe >> 2] = $incdec_ptr106;
    HEAP32[$74 >> 2] = $call_i161162;
    $incdec_ptr109 = $__nf_2174 + 1 | 0;
    if ($incdec_ptr109 >>> 0 < $__ne >>> 0) {
     $__nf_2174 = $incdec_ptr109;
    } else {
     $__nf_3 = $incdec_ptr109;
     $75 = $incdec_ptr106;
     break L82;
    }
   }
   $call_i157158 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 255]($17) | 0;
   $72 = HEAP32[$__oe >> 2] | 0;
   $incdec_ptr101 = $72 + 4 | 0;
   HEAP32[$__oe >> 2] = $incdec_ptr101;
   HEAP32[$72 >> 2] = $call_i157158;
   $__nf_3 = $__nf_2174 + 1 | 0;
   $75 = $incdec_ptr101;
  } else {
   $__nf_3 = $__ns_2;
   $75 = $67;
  }
 } while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($8, $__nf_3, $__ne, $75) | 0;
 $add_ptr116 = (HEAP32[$__oe >> 2] | 0) + ($sub_ptr_lhs_cast - $__nf_3 << 2) | 0;
 HEAP32[$__oe >> 2] = $add_ptr116;
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $add_ptr116;
 } else {
  $storemerge = $__ob + ($__np - $__nb << 2) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $80 = HEAP32[$__grouping + 8 >> 2] | 0;
 if (($80 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($80);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__atoms = 0, $__buf = 0, $__locale_2_i_i43 = 0, $1 = 0, $sub_i_i_i = 0, $9 = 0, $10 = 0, $exception_i_i_i = 0, $arraydecay = 0, $15 = 0, $this4_i_i_i14 = 0, $__data__i_i_i = 0, $arrayidx_i_i_i = 0, $__data__i_i_i99_pre_phi = 0, $arrayidx_i_i_i102_pre_phi = 0, $cond_i_i = 0, $__sbuf__i_i_i17 = 0, $__sbuf__i1_i_i34 = 0, $__cap__i_i87 = 0, $__size__i2_i75 = 0, $arrayidx_i = 0, $arrayidx2_i = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast17_i = 0, $_pre_i_i_i30 = 0, $cond_i_i135 = 0, $22 = 0, $__a_0 = 0, $23 = 0, $retval_0_i_i_i_i27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $retval_0_i_i12_i_i45 = 0, $36 = 0, $tobool_i_i59 = 0, $cond_i61 = 0, $cond_i70144 = 0, $cond_i91 = 0, $cond_i_i104 = 0, $cond_i_i134 = 0, $__a_1 = 0, $55 = 0, $retval_0_i_i = 0, $cmp_i = 0, $cmp1_i = 0, $__first_addr_05_i_i = 0, $incdec_ptr_i_i = 0, $__first_addr_0_lcssa_i_i = 0, $sub_ptr_sub18_i = 0, $sub_ptr_div19_i = 0, $cond_i_i133_ph = 0, $_ph = 0, $66 = 0, $__ninp__i_i119 = 0, $67 = 0, $__a_2 = 0, $call_i93 = 0, $call35 = 0, $75 = 0, $76 = 0, $retval_0_i_i_i_i = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $retval_0_i_i12_i_i = 0, $92 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__atoms = sp + 16 | 0;
 $__buf = sp + 120 | 0;
 $__locale_2_i_i43 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i43 + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i_i43 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i43 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $10 = HEAP32[$9 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($10 | 0) != 0) {
   $arraydecay = $__atoms | 0;
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 48 >> 2] & 31]($10, 19528, 19554, $arraydecay) | 0;
   $15 = $__locale_2_i_i43 + 4 | 0;
   if (((tempValue = HEAP32[$15 >> 2] | 0, HEAP32[$15 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i43 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i43);
   }
   $this4_i_i_i14 = $__buf;
   _memset($this4_i_i_i14 | 0, 0, 12) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, 10);
   if ((HEAP8[$this4_i_i_i14 >> 0] & 1) == 0) {
    $arrayidx_i_i_i = $__buf + 1 | 0;
    $cond_i_i = $arrayidx_i_i_i;
    $arrayidx_i_i_i102_pre_phi = $arrayidx_i_i_i;
    $__data__i_i_i99_pre_phi = $__buf + 8 | 0;
   } else {
    $__data__i_i_i = $__buf + 8 | 0;
    $cond_i_i = HEAP32[$__data__i_i_i >> 2] | 0;
    $arrayidx_i_i_i102_pre_phi = $__buf + 1 | 0;
    $__data__i_i_i99_pre_phi = $__data__i_i_i;
   }
   $__sbuf__i_i_i17 = $__b | 0;
   $__sbuf__i1_i_i34 = $__e | 0;
   $__cap__i_i87 = $__buf | 0;
   $__size__i2_i75 = $__buf + 4 | 0;
   $arrayidx_i = $__atoms + 96 | 0;
   $arrayidx2_i = $__atoms + 100 | 0;
   $add_ptr_i = $__atoms + 104 | 0;
   $sub_ptr_rhs_cast17_i = $__atoms;
   $__a_0 = $cond_i_i;
   $22 = 0;
   $cond_i_i135 = $cond_i_i;
   $_pre_i_i_i30 = HEAP32[$__sbuf__i_i_i17 >> 2] | 0;
   L16 : while (1) {
    if (($_pre_i_i_i30 | 0) == 0) {
     $29 = 1;
     $28 = 0;
    } else {
     $23 = HEAP32[$_pre_i_i_i30 + 12 >> 2] | 0;
     if (($23 | 0) == (HEAP32[$_pre_i_i_i30 + 16 >> 2] | 0)) {
      $retval_0_i_i_i_i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i30 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i30) | 0;
     } else {
      $retval_0_i_i_i_i27 = HEAP32[$23 >> 2] | 0;
     }
     if (($retval_0_i_i_i_i27 | 0) == -1) {
      HEAP32[$__sbuf__i_i_i17 >> 2] = 0;
      $29 = 1;
      $28 = 0;
     } else {
      $29 = 0;
      $28 = $_pre_i_i_i30;
     }
    }
    $30 = HEAP32[$__sbuf__i1_i_i34 >> 2] | 0;
    do {
     if (($30 | 0) == 0) {
      label = 27;
     } else {
      $31 = HEAP32[$30 + 12 >> 2] | 0;
      if (($31 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) {
       $retval_0_i_i12_i_i45 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0;
      } else {
       $retval_0_i_i12_i_i45 = HEAP32[$31 >> 2] | 0;
      }
      if (($retval_0_i_i12_i_i45 | 0) == -1) {
       HEAP32[$__sbuf__i1_i_i34 >> 2] = 0;
       label = 27;
       break;
      } else {
       if ($29) {
        break;
       } else {
        $__a_2 = $__a_0;
        break L16;
       }
      }
     }
    } while (0);
    if ((label | 0) == 27) {
     label = 0;
     if ($29) {
      $__a_2 = $__a_0;
      break;
     }
    }
    $36 = HEAP8[$this4_i_i_i14 >> 0] | 0;
    $tobool_i_i59 = ($36 & 1) == 0;
    if ($tobool_i_i59) {
     $cond_i61 = ($36 & 255) >>> 1;
    } else {
     $cond_i61 = HEAP32[$__size__i2_i75 >> 2] | 0;
    }
    if (($cond_i_i135 - $__a_0 | 0) == ($cond_i61 | 0)) {
     if ($tobool_i_i59) {
      $cond_i70144 = ($36 & 255) >>> 1;
     } else {
      $cond_i70144 = HEAP32[$__size__i2_i75 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $cond_i70144 << 1);
     if ((HEAP8[$this4_i_i_i14 >> 0] & 1) == 0) {
      $cond_i91 = 10;
     } else {
      $cond_i91 = (HEAP32[$__cap__i_i87 >> 2] & -2) - 1 | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $cond_i91);
     if ((HEAP8[$this4_i_i_i14 >> 0] & 1) == 0) {
      $cond_i_i104 = $arrayidx_i_i_i102_pre_phi;
     } else {
      $cond_i_i104 = HEAP32[$__data__i_i_i99_pre_phi >> 2] | 0;
     }
     $__a_1 = $cond_i_i104;
     $cond_i_i134 = $cond_i_i104 + $cond_i70144 | 0;
    } else {
     $__a_1 = $__a_0;
     $cond_i_i134 = $cond_i_i135;
    }
    $55 = HEAP32[$28 + 12 >> 2] | 0;
    if (($55 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
     $retval_0_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0;
    } else {
     $retval_0_i_i = HEAP32[$55 >> 2] | 0;
    }
    $cmp_i = ($cond_i_i134 | 0) == ($__a_1 | 0);
    if ($cmp_i) {
     $cmp1_i = (HEAP32[$arrayidx_i >> 2] | 0) == ($retval_0_i_i | 0);
     if ($cmp1_i | (HEAP32[$arrayidx2_i >> 2] | 0) == ($retval_0_i_i | 0)) {
      HEAP8[$cond_i_i134 >> 0] = $cmp1_i ? 43 : 45;
      $_ph = 0;
      $cond_i_i133_ph = $cond_i_i134 + 1 | 0;
     } else {
      $__first_addr_05_i_i = $arraydecay;
      label = 57;
     }
    } else {
     $__first_addr_05_i_i = $arraydecay;
     label = 57;
    }
    do {
     if ((label | 0) == 57) {
      while (1) {
       label = 0;
       $incdec_ptr_i_i = $__first_addr_05_i_i + 4 | 0;
       if ((HEAP32[$__first_addr_05_i_i >> 2] | 0) == ($retval_0_i_i | 0)) {
        $__first_addr_0_lcssa_i_i = $__first_addr_05_i_i;
        break;
       }
       if (($incdec_ptr_i_i | 0) == ($add_ptr_i | 0)) {
        $__first_addr_0_lcssa_i_i = $add_ptr_i;
        break;
       } else {
        $__first_addr_05_i_i = $incdec_ptr_i_i;
        label = 57;
       }
      }
      $sub_ptr_sub18_i = $__first_addr_0_lcssa_i_i - $sub_ptr_rhs_cast17_i | 0;
      $sub_ptr_div19_i = $sub_ptr_sub18_i >> 2;
      if (($sub_ptr_sub18_i | 0) > 92) {
       $__a_2 = $__a_1;
       break L16;
      }
      if (($sub_ptr_sub18_i | 0) < 88) {
       HEAP8[$cond_i_i134 >> 0] = HEAP8[19528 + $sub_ptr_div19_i >> 0] | 0;
       $_ph = $22 + 1 | 0;
       $cond_i_i133_ph = $cond_i_i134 + 1 | 0;
       break;
      }
      if ($cmp_i) {
       $__a_2 = $cond_i_i134;
       break L16;
      }
      if (($cond_i_i134 - $__a_1 | 0) >= 3) {
       $__a_2 = $__a_1;
       break L16;
      }
      if ((HEAP8[$cond_i_i134 - 1 >> 0] | 0) != 48) {
       $__a_2 = $__a_1;
       break L16;
      }
      HEAP8[$cond_i_i134 >> 0] = HEAP8[19528 + $sub_ptr_div19_i >> 0] | 0;
      $_ph = 0;
      $cond_i_i133_ph = $cond_i_i134 + 1 | 0;
     }
    } while (0);
    $66 = HEAP32[$__sbuf__i_i_i17 >> 2] | 0;
    $__ninp__i_i119 = $66 + 12 | 0;
    $67 = HEAP32[$__ninp__i_i119 >> 2] | 0;
    if (($67 | 0) == (HEAP32[$66 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$66 >> 2] | 0) + 40 >> 2] & 255]($66) | 0;
     $__a_0 = $__a_1;
     $22 = $_ph;
     $cond_i_i135 = $cond_i_i133_ph;
     $_pre_i_i_i30 = $66;
     continue;
    } else {
     HEAP32[$__ninp__i_i119 >> 2] = $67 + 4;
     $__a_0 = $__a_1;
     $22 = $_ph;
     $cond_i_i135 = $cond_i_i133_ph;
     $_pre_i_i_i30 = $66;
     continue;
    }
   }
   HEAP8[$__a_2 + 3 >> 0] = 0;
   if ((HEAP8[24208] | 0) == 0) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i93 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i93;
    }
   }
   $call35 = __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__a_2, HEAP32[5446] | 0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if (($call35 | 0) != 1) {
    HEAP32[$__err >> 2] = 4;
   }
   $75 = HEAP32[$__sbuf__i_i_i17 >> 2] | 0;
   if (($75 | 0) == 0) {
    $82 = 1;
    $81 = 0;
   } else {
    $76 = HEAP32[$75 + 12 >> 2] | 0;
    if (($76 | 0) == (HEAP32[$75 + 16 >> 2] | 0)) {
     $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 36 >> 2] & 255]($75) | 0;
    } else {
     $retval_0_i_i_i_i = HEAP32[$76 >> 2] | 0;
    }
    if (($retval_0_i_i_i_i | 0) == -1) {
     HEAP32[$__sbuf__i_i_i17 >> 2] = 0;
     $82 = 1;
     $81 = 0;
    } else {
     $82 = 0;
     $81 = $75;
    }
   }
   $83 = HEAP32[$__sbuf__i1_i_i34 >> 2] | 0;
   do {
    if (($83 | 0) == 0) {
     label = 88;
    } else {
     $84 = HEAP32[$83 + 12 >> 2] | 0;
     if (($84 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) {
      $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 255]($83) | 0;
     } else {
      $retval_0_i_i12_i_i = HEAP32[$84 >> 2] | 0;
     }
     if (($retval_0_i_i12_i_i | 0) == -1) {
      HEAP32[$__sbuf__i1_i_i34 >> 2] = 0;
      label = 88;
      break;
     } else {
      if ($82) {
       break;
      } else {
       label = 90;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 88) {
    if ($82) {
     label = 90;
    }
   }
   if ((label | 0) == 90) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $81;
   if ((HEAP8[$this4_i_i_i14 >> 0] & 1) == 0) {
    $$etemp$3$0 = 104;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   $92 = HEAP32[$__buf + 8 >> 2] | 0;
   if (($92 | 0) == 0) {
    $$etemp$3$0 = 104;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   _free($92);
   $$etemp$3$0 = 104;
   $$etemp$3$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function _trinkle($head, $width, $cmp, $pp_val, $pp_1_val, $pshift, $trusty, $lp) {
 $head = $head | 0;
 $width = $width | 0;
 $cmp = $cmp | 0;
 $pp_val = $pp_val | 0;
 $pp_1_val = $pp_1_val | 0;
 $pshift = $pshift | 0;
 $trusty = $trusty | 0;
 $lp = $lp | 0;
 var $tmp_i41 = 0, $tmp_i = 0, $ar_i = 0, $ar = 0, $arrayidx4 = 0, $idx_neg14 = 0, $cmp836 = 0, $1 = 0, $cmp847 = 0, $head_addr_046 = 0, $i_045 = 0, $pshift_addr_044 = 0, $trusty_addr_043 = 0, $pp_val641 = 0, $p_sroa_6_4_load738 = 0, $add_ptr = 0, $3 = 0, $inc = 0, $sub_i = 0, $nTrailingZeros_06_i_i = 0, $x_addr_05_i_i = 0, $nTrailingZeros_06_i7_i = 0, $x_addr_05_i8_i = 0, $inc_i9_i = 0, $call2926 = 0, $call292612 = 0, $call292611 = 0, $4 = 0, $5 = 0, $n_addr_0_i = 0, $or_i = 0, $shr8_i = 0, $add = 0, $cmp8 = 0, $head_addr_0_lcssa = 0, $i_0_lcssa = 0, $pshift_addr_0_lcssa = 0, $trusty_addr_0_lcssa = 0, $pshift_addr_0_lcssa59 = 0, $i_0_lcssa58 = 0, $head_addr_0_lcssa57 = 0, $6 = 0, $arrayidx_i43 = 0, $cond_i6631 = 0, $7 = 0, $8 = 0, $i_020_us_i53 = 0, $10 = 0, $width_addr_022_us_i60 = 0, $cond_us_i62 = 0, $11 = 0, $cond_i6634 = 0, $width_addr_022_i6433 = 0, $arrayidx_i = 0, $14 = 0, $i_021_i = 0, $head_addr_020_i = 0, $pshift_addr_019_i = 0, $add_ptr_i = 0, $sub_i27 = 0, $add_ptr6_i = 0, $inc_i = 0, $arrayidx15_i = 0, $pshift_addr_0_be_i = 0, $head_addr_0_be_i = 0, $i_0_lcssa_i = 0, $16 = 0, $arrayidx_i29 = 0, $cond_i25 = 0, $17 = 0, $18 = 0, $i_020_us_i = 0, $20 = 0, $width_addr_022_us_i = 0, $cond_us_i = 0, $21 = 0, $cond_i28 = 0, $width_addr_022_i27 = 0, $sub_i34 = 0, $cond_i = 0, $22 = 0, $$etemp$8$0 = 0, $$etemp$8$1 = 0, label = 0, sp = 0, $i_020_us_i53$looptemp = 0, $8$looptemp = 0, $i_020_us_i$looptemp = 0, $18$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 976 | 0;
 $tmp_i41 = sp | 0;
 $tmp_i = sp + 256 | 0;
 $ar_i = sp + 512 | 0;
 $ar = sp + 744 | 0;
 $arrayidx4 = $ar | 0;
 HEAP32[$arrayidx4 >> 2] = $head;
 $idx_neg14 = -$width | 0;
 $cmp836 = ($pp_1_val | 0) == 0;
 L1 : do {
  if (($pp_val | 0) == 1 & $cmp836) {
   $trusty_addr_0_lcssa = $trusty;
   $pshift_addr_0_lcssa = $pshift;
   $i_0_lcssa = 1;
   $head_addr_0_lcssa = $head;
   label = 18;
  } else {
   $p_sroa_6_4_load738 = $pp_1_val;
   $pp_val641 = $pp_val;
   $trusty_addr_043 = $trusty;
   $pshift_addr_044 = $pshift;
   $i_045 = 1;
   $head_addr_046 = $head;
   $cmp847 = $cmp836;
   $1 = $head;
   while (1) {
    $add_ptr = $head_addr_046 + (-(HEAP32[$lp + ($pshift_addr_044 << 2) >> 2] | 0) | 0) | 0;
    if ((FUNCTION_TABLE_iii[$cmp & 63]($add_ptr, $1) | 0) < 1) {
     $trusty_addr_0_lcssa = $trusty_addr_043;
     $pshift_addr_0_lcssa = $pshift_addr_044;
     $i_0_lcssa = $i_045;
     $head_addr_0_lcssa = $head_addr_046;
     label = 18;
     break L1;
    }
    if (($trusty_addr_043 | 0) == 0 & ($pshift_addr_044 | 0) > 1) {
     $3 = HEAP32[$lp + ($pshift_addr_044 - 2 << 2) >> 2] | 0;
     if ((FUNCTION_TABLE_iii[$cmp & 63]($head_addr_046 + $idx_neg14 | 0, $add_ptr) | 0) > -1) {
      $head_addr_0_lcssa57 = $head_addr_046;
      $i_0_lcssa58 = $i_045;
      $pshift_addr_0_lcssa59 = $pshift_addr_044;
      break L1;
     }
     if ((FUNCTION_TABLE_iii[$cmp & 63]($head_addr_046 + (-($3 + $width | 0) | 0) | 0, $add_ptr) | 0) > -1) {
      $head_addr_0_lcssa57 = $head_addr_046;
      $i_0_lcssa58 = $i_045;
      $pshift_addr_0_lcssa59 = $pshift_addr_044;
      break L1;
     }
    }
    $inc = $i_045 + 1 | 0;
    HEAP32[$ar + ($i_045 << 2) >> 2] = $add_ptr;
    $sub_i = $pp_val641 - 1 | 0;
    do {
     if (($sub_i | 0) == 0) {
      $call292612 = 32;
      label = 15;
     } else {
      if (($sub_i & 1 | 0) == 0) {
       $x_addr_05_i_i = $sub_i;
       $nTrailingZeros_06_i_i = 0;
       do {
        $nTrailingZeros_06_i_i = $nTrailingZeros_06_i_i + 1 | 0;
        $x_addr_05_i_i = $x_addr_05_i_i >>> 1;
       } while (($x_addr_05_i_i & 1 | 0) == 0);
       if (($nTrailingZeros_06_i_i | 0) == 0) {
        label = 10;
       } else {
        $call2926 = $nTrailingZeros_06_i_i;
       }
      } else {
       label = 10;
      }
      if ((label | 0) == 10) {
       label = 0;
       if ($cmp847) {
        $call292612 = 64;
        label = 15;
        break;
       }
       if (($p_sroa_6_4_load738 & 1 | 0) == 0) {
        $x_addr_05_i8_i = $p_sroa_6_4_load738;
        $nTrailingZeros_06_i7_i = 0;
       } else {
        $n_addr_0_i = 0;
        $5 = $pp_val641;
        $4 = $p_sroa_6_4_load738;
        $call292611 = 0;
        break;
       }
       while (1) {
        $inc_i9_i = $nTrailingZeros_06_i7_i + 1 | 0;
        $x_addr_05_i8_i = $x_addr_05_i8_i >>> 1;
        if (($x_addr_05_i8_i & 1 | 0) != 0) {
         break;
        } else {
         $nTrailingZeros_06_i7_i = $inc_i9_i;
        }
       }
       if (($inc_i9_i | 0) == 0) {
        $n_addr_0_i = 0;
        $5 = $pp_val641;
        $4 = $p_sroa_6_4_load738;
        $call292611 = 0;
        break;
       } else {
        $call2926 = $nTrailingZeros_06_i7_i + 33 | 0;
       }
      }
      if ($call2926 >>> 0 > 31 >>> 0) {
       $call292612 = $call2926;
       label = 15;
      } else {
       $n_addr_0_i = $call2926;
       $5 = $pp_val641;
       $4 = $p_sroa_6_4_load738;
       $call292611 = $call2926;
      }
     }
    } while (0);
    if ((label | 0) == 15) {
     label = 0;
     $n_addr_0_i = $call292612 - 32 | 0;
     $5 = $p_sroa_6_4_load738;
     $4 = 0;
     $call292611 = $call292612;
    }
    $or_i = $4 << 32 - $n_addr_0_i | $5 >>> ($n_addr_0_i >>> 0);
    $shr8_i = $4 >>> ($n_addr_0_i >>> 0);
    $add = $call292611 + $pshift_addr_044 | 0;
    $cmp8 = ($shr8_i | 0) == 0;
    if (($or_i | 0) == 1 & $cmp8) {
     $head_addr_0_lcssa57 = $add_ptr;
     $i_0_lcssa58 = $inc;
     $pshift_addr_0_lcssa59 = $add;
     break L1;
    }
    $p_sroa_6_4_load738 = $shr8_i;
    $pp_val641 = $or_i;
    $trusty_addr_043 = 0;
    $pshift_addr_044 = $add;
    $i_045 = $inc;
    $head_addr_046 = $add_ptr;
    $cmp847 = $cmp8;
    $1 = HEAP32[$arrayidx4 >> 2] | 0;
   }
  }
 } while (0);
 if ((label | 0) == 18) {
  if (($trusty_addr_0_lcssa | 0) == 0) {
   $head_addr_0_lcssa57 = $head_addr_0_lcssa;
   $i_0_lcssa58 = $i_0_lcssa;
   $pshift_addr_0_lcssa59 = $pshift_addr_0_lcssa;
  } else {
   $$etemp$8$0 = 228;
   $$etemp$8$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $6 = $tmp_i41 | 0;
 L30 : do {
  if (($i_0_lcssa58 | 0) >= 2) {
   $arrayidx_i43 = $ar + ($i_0_lcssa58 << 2) | 0;
   HEAP32[$arrayidx_i43 >> 2] = $6;
   if (($width | 0) != 0) {
    if (($i_0_lcssa58 | 0) > 0) {
     $width_addr_022_us_i60 = $width;
     $10 = $6;
    } else {
     $cond_i6631 = $width >>> 0 > 256 >>> 0 ? 256 : $width;
     $7 = HEAP32[$arrayidx4 >> 2] | 0;
     _memcpy($6 | 0, $7 | 0, $cond_i6631) | 0;
     if (($cond_i6631 | 0) == ($width | 0)) {
      break;
     } else {
      $width_addr_022_i6433 = $width;
      $cond_i6634 = $cond_i6631;
     }
     while (1) {
      $width_addr_022_i6433 = $width_addr_022_i6433 - $cond_i6634 | 0;
      $cond_i6634 = $width_addr_022_i6433 >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_i6433;
      _memcpy($6 | 0, $7 | 0, $cond_i6634) | 0;
      if (($width_addr_022_i6433 | 0) == ($cond_i6634 | 0)) {
       break L30;
      }
     }
    }
    while (1) {
     $cond_us_i62 = $width_addr_022_us_i60 >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_us_i60;
     $11 = HEAP32[$arrayidx4 >> 2] | 0;
     _memcpy($10 | 0, $11 | 0, $cond_us_i62) | 0;
     $i_020_us_i53 = 0;
     $8 = $11;
     do {
      $i_020_us_i53$looptemp = $i_020_us_i53;
      $i_020_us_i53 = $i_020_us_i53 + 1 | 0;
      $8$looptemp = $8;
      $8 = HEAP32[$ar + ($i_020_us_i53 << 2) >> 2] | 0;
      _memcpy($8$looptemp | 0, $8 | 0, $cond_us_i62) | 0;
      HEAP32[$ar + ($i_020_us_i53$looptemp << 2) >> 2] = $8$looptemp + $cond_us_i62;
     } while (($i_020_us_i53 | 0) < ($i_0_lcssa58 | 0));
     if (($width_addr_022_us_i60 | 0) == ($cond_us_i62 | 0)) {
      break L30;
     }
     $width_addr_022_us_i60 = $width_addr_022_us_i60 - $cond_us_i62 | 0;
     $10 = HEAP32[$arrayidx_i43 >> 2] | 0;
    }
   }
  }
 } while (0);
 $arrayidx_i = $ar_i | 0;
 HEAP32[$arrayidx_i >> 2] = $head_addr_0_lcssa57;
 L44 : do {
  if (($pshift_addr_0_lcssa59 | 0) > 1) {
   $pshift_addr_019_i = $pshift_addr_0_lcssa59;
   $head_addr_020_i = $head_addr_0_lcssa57;
   $i_021_i = 1;
   $14 = $head_addr_0_lcssa57;
   while (1) {
    $add_ptr_i = $head_addr_020_i + $idx_neg14 | 0;
    $sub_i27 = $pshift_addr_019_i - 2 | 0;
    $add_ptr6_i = $head_addr_020_i + (-((HEAP32[$lp + ($sub_i27 << 2) >> 2] | 0) + $width | 0) | 0) | 0;
    if ((FUNCTION_TABLE_iii[$cmp & 63]($14, $add_ptr6_i) | 0) > -1) {
     if ((FUNCTION_TABLE_iii[$cmp & 63]($14, $add_ptr_i) | 0) > -1) {
      $i_0_lcssa_i = $i_021_i;
      break;
     }
    }
    $inc_i = $i_021_i + 1 | 0;
    $arrayidx15_i = $ar_i + ($i_021_i << 2) | 0;
    if ((FUNCTION_TABLE_iii[$cmp & 63]($add_ptr6_i, $add_ptr_i) | 0) > -1) {
     HEAP32[$arrayidx15_i >> 2] = $add_ptr6_i;
     $head_addr_0_be_i = $add_ptr6_i;
     $pshift_addr_0_be_i = $pshift_addr_019_i - 1 | 0;
    } else {
     HEAP32[$arrayidx15_i >> 2] = $add_ptr_i;
     $head_addr_0_be_i = $add_ptr_i;
     $pshift_addr_0_be_i = $sub_i27;
    }
    if (($pshift_addr_0_be_i | 0) <= 1) {
     $i_0_lcssa_i = $inc_i;
     break;
    }
    $pshift_addr_019_i = $pshift_addr_0_be_i;
    $head_addr_020_i = $head_addr_0_be_i;
    $i_021_i = $inc_i;
    $14 = HEAP32[$arrayidx_i >> 2] | 0;
   }
   $16 = $tmp_i | 0;
   if (($i_0_lcssa_i | 0) < 2) {
    $22 = $16;
   } else {
    $arrayidx_i29 = $ar_i + ($i_0_lcssa_i << 2) | 0;
    HEAP32[$arrayidx_i29 >> 2] = $16;
    if (($width | 0) == 0) {
     $22 = $16;
    } else {
     if (($i_0_lcssa_i | 0) > 0) {
      $width_addr_022_us_i = $width;
      $20 = $16;
     } else {
      $cond_i25 = $width >>> 0 > 256 >>> 0 ? 256 : $width;
      $17 = HEAP32[$arrayidx_i >> 2] | 0;
      _memcpy($16 | 0, $17 | 0, $cond_i25) | 0;
      if (($cond_i25 | 0) == ($width | 0)) {
       $22 = $16;
       break;
      } else {
       $width_addr_022_i27 = $width;
       $cond_i28 = $cond_i25;
      }
      while (1) {
       $sub_i34 = $width_addr_022_i27 - $cond_i28 | 0;
       $cond_i = $sub_i34 >>> 0 > 256 >>> 0 ? 256 : $sub_i34;
       _memcpy($16 | 0, $17 | 0, $cond_i) | 0;
       if (($sub_i34 | 0) == ($cond_i | 0)) {
        $22 = $16;
        break L44;
       } else {
        $width_addr_022_i27 = $sub_i34;
        $cond_i28 = $cond_i;
       }
      }
     }
     while (1) {
      $cond_us_i = $width_addr_022_us_i >>> 0 > 256 >>> 0 ? 256 : $width_addr_022_us_i;
      $21 = HEAP32[$arrayidx_i >> 2] | 0;
      _memcpy($20 | 0, $21 | 0, $cond_us_i) | 0;
      $i_020_us_i = 0;
      $18 = $21;
      do {
       $i_020_us_i$looptemp = $i_020_us_i;
       $i_020_us_i = $i_020_us_i + 1 | 0;
       $18$looptemp = $18;
       $18 = HEAP32[$ar_i + ($i_020_us_i << 2) >> 2] | 0;
       _memcpy($18$looptemp | 0, $18 | 0, $cond_us_i) | 0;
       HEAP32[$ar_i + ($i_020_us_i$looptemp << 2) >> 2] = $18$looptemp + $cond_us_i;
      } while (($i_020_us_i | 0) < ($i_0_lcssa_i | 0));
      if (($width_addr_022_us_i | 0) == ($cond_us_i | 0)) {
       $22 = $16;
       break L44;
      }
      $width_addr_022_us_i = $width_addr_022_us_i - $cond_us_i | 0;
      $20 = HEAP32[$arrayidx_i29 >> 2] | 0;
     }
    }
   }
  } else {
   $22 = $tmp_i | 0;
  }
 } while (0);
 $$etemp$8$0 = 228;
 $$etemp$8$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $0 = 0, $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $10 = 0, $add_ptr = 0, $found_our_static_ptr = 0, $found_any_static_type = 0, $search_done = 0, $__flags34 = 0, $path_dst_ptr_to_static_ptr = 0, $11 = 0, $is_dst_type_derived_from_static_type13_0_off0140 = 0, $p_0139 = 0, $does_dst_type_point_to_our_static_type_0_off0138 = 0, $12 = 0, $shr_i107 = 0, $offset_to_base_0_i112 = 0, $16 = 0, $does_dst_type_point_to_our_static_type_1_off0 = 0, $is_dst_type_derived_from_static_type13_1_off0 = 0, $incdec_ptr = 0, $does_dst_type_point_to_our_static_type_0_off0_lcssa = 0, $is_dst_type_derived_from_static_type13_2_off0 = 0, $is_dst_type_derived_from_static_type13_2_off0146 = 0, $number_to_dst_ptr = 0, $is_dst_type_derived_from_static_type13_2_off0147 = 0, $30 = 0, $add_ptr64 = 0, $31 = 0, $shr_i121 = 0, $offset_to_base_0_i126 = 0, $36 = 0, $incdec_ptr69 = 0, $39 = 0, $number_to_static_ptr76 = 0, $search_done79 = 0, $41 = 0, $p65_0 = 0, $43 = 0, $shr_i92 = 0, $offset_to_base_0_i97 = 0, $47 = 0, $incdec_ptr84 = 0, $path_dst_ptr_to_static_ptr99 = 0, $search_done92 = 0, $50 = 0, $search_done110 = 0, $51 = 0, $p65_1 = 0, $55 = 0, $shr_i76 = 0, $offset_to_base_0_i81 = 0, $59 = 0, $incdec_ptr105 = 0, $p65_2 = 0, $64 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $68 = 0, $incdec_ptr120 = 0, label = 0;
 $0 = $this | 0;
 if (($0 | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if (($0 | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
   if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $is_dst_type_derived_from_static_type = $info + 44 | 0;
    if ((HEAP32[$is_dst_type_derived_from_static_type >> 2] | 0) == 4) {
     return;
    }
    $10 = HEAP32[$this + 12 >> 2] | 0;
    $add_ptr = $this + 16 + ($10 << 3) | 0;
    L19 : do {
     if (($10 | 0) > 0) {
      $found_our_static_ptr = $info + 52 | 0;
      $found_any_static_type = $info + 53 | 0;
      $search_done = $info + 54 | 0;
      $__flags34 = $this + 8 | 0;
      $path_dst_ptr_to_static_ptr = $info + 24 | 0;
      $11 = $current_ptr;
      $does_dst_type_point_to_our_static_type_0_off0138 = 0;
      $p_0139 = $this + 16 | 0;
      $is_dst_type_derived_from_static_type13_0_off0140 = 0;
      L21 : while (1) {
       HEAP8[$found_our_static_ptr >> 0] = 0;
       HEAP8[$found_any_static_type >> 0] = 0;
       $12 = HEAP32[$p_0139 + 4 >> 2] | 0;
       $shr_i107 = $12 >> 8;
       if (($12 & 1 | 0) == 0) {
        $offset_to_base_0_i112 = $shr_i107;
       } else {
        $offset_to_base_0_i112 = HEAP32[(HEAP32[$11 >> 2] | 0) + $shr_i107 >> 2] | 0;
       }
       $16 = HEAP32[$p_0139 >> 2] | 0;
       FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$16 >> 2] | 0) + 20 >> 2] & 63]($16, $info, $current_ptr, $current_ptr + $offset_to_base_0_i112 | 0, 2 - ($12 >>> 1 & 1) | 0, $use_strcmp);
       if ((HEAP8[$search_done >> 0] | 0) != 0) {
        $is_dst_type_derived_from_static_type13_2_off0 = $is_dst_type_derived_from_static_type13_0_off0140;
        $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_0_off0138;
        break;
       }
       do {
        if ((HEAP8[$found_any_static_type >> 0] | 0) == 0) {
         $is_dst_type_derived_from_static_type13_1_off0 = $is_dst_type_derived_from_static_type13_0_off0140;
         $does_dst_type_point_to_our_static_type_1_off0 = $does_dst_type_point_to_our_static_type_0_off0138;
        } else {
         if ((HEAP8[$found_our_static_ptr >> 0] | 0) == 0) {
          if ((HEAP32[$__flags34 >> 2] & 1 | 0) == 0) {
           $is_dst_type_derived_from_static_type13_2_off0 = 1;
           $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_0_off0138;
           break L21;
          } else {
           $is_dst_type_derived_from_static_type13_1_off0 = 1;
           $does_dst_type_point_to_our_static_type_1_off0 = $does_dst_type_point_to_our_static_type_0_off0138;
           break;
          }
         }
         if ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) == 1) {
          label = 27;
          break L19;
         }
         if ((HEAP32[$__flags34 >> 2] & 2 | 0) == 0) {
          label = 27;
          break L19;
         } else {
          $is_dst_type_derived_from_static_type13_1_off0 = 1;
          $does_dst_type_point_to_our_static_type_1_off0 = 1;
         }
        }
       } while (0);
       $incdec_ptr = $p_0139 + 8 | 0;
       if ($incdec_ptr >>> 0 < $add_ptr >>> 0) {
        $does_dst_type_point_to_our_static_type_0_off0138 = $does_dst_type_point_to_our_static_type_1_off0;
        $p_0139 = $incdec_ptr;
        $is_dst_type_derived_from_static_type13_0_off0140 = $is_dst_type_derived_from_static_type13_1_off0;
       } else {
        $is_dst_type_derived_from_static_type13_2_off0 = $is_dst_type_derived_from_static_type13_1_off0;
        $does_dst_type_point_to_our_static_type_0_off0_lcssa = $does_dst_type_point_to_our_static_type_1_off0;
        break;
       }
      }
      if ($does_dst_type_point_to_our_static_type_0_off0_lcssa) {
       $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0;
       label = 26;
      } else {
       $is_dst_type_derived_from_static_type13_2_off0146 = $is_dst_type_derived_from_static_type13_2_off0;
       label = 23;
      }
     } else {
      $is_dst_type_derived_from_static_type13_2_off0146 = 0;
      label = 23;
     }
    } while (0);
    if ((label | 0) == 23) {
     HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
     $number_to_dst_ptr = $info + 40 | 0;
     HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) {
      if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
       HEAP8[$info + 54 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type13_2_off0146) {
        label = 27;
       } else {
        label = 28;
       }
      } else {
       $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0146;
       label = 26;
      }
     } else {
      $is_dst_type_derived_from_static_type13_2_off0147 = $is_dst_type_derived_from_static_type13_2_off0146;
      label = 26;
     }
    }
    if ((label | 0) == 26) {
     if ($is_dst_type_derived_from_static_type13_2_off0147) {
      label = 27;
     } else {
      label = 28;
     }
    }
    if ((label | 0) == 27) {
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 3;
     return;
    } else if ((label | 0) == 28) {
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 4;
     return;
    }
   }
  }
  if (($path_below | 0) != 1) {
   return;
  }
  HEAP32[$info + 32 >> 2] = 1;
  return;
 }
 $30 = HEAP32[$this + 12 >> 2] | 0;
 $add_ptr64 = $this + 16 + ($30 << 3) | 0;
 $31 = HEAP32[$this + 20 >> 2] | 0;
 $shr_i121 = $31 >> 8;
 if (($31 & 1 | 0) == 0) {
  $offset_to_base_0_i126 = $shr_i121;
 } else {
  $offset_to_base_0_i126 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $shr_i121 >> 2] | 0;
 }
 $36 = HEAP32[$this + 16 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$36 >> 2] | 0) + 24 >> 2] & 31]($36, $info, $current_ptr + $offset_to_base_0_i126 | 0, ($31 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 $incdec_ptr69 = $this + 24 | 0;
 if (($30 | 0) <= 1) {
  return;
 }
 $39 = HEAP32[$this + 8 >> 2] | 0;
 if (($39 & 2 | 0) == 0) {
  $number_to_static_ptr76 = $info + 36 | 0;
  if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) != 1) {
   if (($39 & 1 | 0) == 0) {
    $search_done110 = $info + 54 | 0;
    $51 = $current_ptr;
    $p65_2 = $incdec_ptr69;
    while (1) {
     if ((HEAP8[$search_done110 >> 0] | 0) != 0) {
      label = 53;
      break;
     }
     if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) == 1) {
      label = 53;
      break;
     }
     $64 = HEAP32[$p65_2 + 4 >> 2] | 0;
     $shr_i = $64 >> 8;
     if (($64 & 1 | 0) == 0) {
      $offset_to_base_0_i = $shr_i;
     } else {
      $offset_to_base_0_i = HEAP32[(HEAP32[$51 >> 2] | 0) + $shr_i >> 2] | 0;
     }
     $68 = HEAP32[$p65_2 >> 2] | 0;
     FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$68 >> 2] | 0) + 24 >> 2] & 31]($68, $info, $current_ptr + $offset_to_base_0_i | 0, ($64 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
     $incdec_ptr120 = $p65_2 + 8 | 0;
     if ($incdec_ptr120 >>> 0 < $add_ptr64 >>> 0) {
      $p65_2 = $incdec_ptr120;
     } else {
      label = 53;
      break;
     }
    }
    if ((label | 0) == 53) {
     return;
    }
   }
   $path_dst_ptr_to_static_ptr99 = $info + 24 | 0;
   $search_done92 = $info + 54 | 0;
   $50 = $current_ptr;
   $p65_1 = $incdec_ptr69;
   while (1) {
    if ((HEAP8[$search_done92 >> 0] | 0) != 0) {
     label = 53;
     break;
    }
    if ((HEAP32[$number_to_static_ptr76 >> 2] | 0) == 1) {
     if ((HEAP32[$path_dst_ptr_to_static_ptr99 >> 2] | 0) == 1) {
      label = 53;
      break;
     }
    }
    $55 = HEAP32[$p65_1 + 4 >> 2] | 0;
    $shr_i76 = $55 >> 8;
    if (($55 & 1 | 0) == 0) {
     $offset_to_base_0_i81 = $shr_i76;
    } else {
     $offset_to_base_0_i81 = HEAP32[(HEAP32[$50 >> 2] | 0) + $shr_i76 >> 2] | 0;
    }
    $59 = HEAP32[$p65_1 >> 2] | 0;
    FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$59 >> 2] | 0) + 24 >> 2] & 31]($59, $info, $current_ptr + $offset_to_base_0_i81 | 0, ($55 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
    $incdec_ptr105 = $p65_1 + 8 | 0;
    if ($incdec_ptr105 >>> 0 < $add_ptr64 >>> 0) {
     $p65_1 = $incdec_ptr105;
    } else {
     label = 53;
     break;
    }
   }
   if ((label | 0) == 53) {
    return;
   }
  }
 }
 $search_done79 = $info + 54 | 0;
 $41 = $current_ptr;
 $p65_0 = $incdec_ptr69;
 while (1) {
  if ((HEAP8[$search_done79 >> 0] | 0) != 0) {
   label = 53;
   break;
  }
  $43 = HEAP32[$p65_0 + 4 >> 2] | 0;
  $shr_i92 = $43 >> 8;
  if (($43 & 1 | 0) == 0) {
   $offset_to_base_0_i97 = $shr_i92;
  } else {
   $offset_to_base_0_i97 = HEAP32[(HEAP32[$41 >> 2] | 0) + $shr_i92 >> 2] | 0;
  }
  $47 = HEAP32[$p65_0 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$47 >> 2] | 0) + 24 >> 2] & 31]($47, $info, $current_ptr + $offset_to_base_0_i97 | 0, ($43 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
  $incdec_ptr84 = $p65_0 + 8 | 0;
  if ($incdec_ptr84 >>> 0 < $add_ptr64 >>> 0) {
   $p65_0 = $incdec_ptr84;
  } else {
   label = 53;
   break;
  }
 }
 if ((label | 0) == 53) {
  return;
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__atoms = 0, $__buf = 0, $__locale_2_i_i43 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $arraydecay = 0, $14 = 0, $this4_i_i_i13 = 0, $__data__i_i_i = 0, $arrayidx_i_i_i = 0, $__data__i_i_i92_pre_phi = 0, $arrayidx_i_i_i95_pre_phi = 0, $cond_i_i = 0, $__sbuf__i_i_i16 = 0, $__sbuf__i1_i_i30 = 0, $__cap__i_i80 = 0, $__size__i2_i68 = 0, $arrayidx_i = 0, $arrayidx4_i = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast24_i = 0, $_pre_i_i_i26 = 0, $cond_i_i128 = 0, $21 = 0, $__a_0 = 0, $26 = 0, $cmp_i_i_i29 = 0, $27 = 0, $32 = 0, $tobool_i_i52 = 0, $cond_i54 = 0, $cond_i63139 = 0, $cond_i84 = 0, $cond_i_i97 = 0, $cond_i_i127 = 0, $__a_1 = 0, $51 = 0, $retval_0_i_off0_i = 0, $cmp_i = 0, $cmp2_i = 0, $__first_addr_05_i_i = 0, $incdec_ptr_i_i = 0, $__first_addr_0_lcssa_i_i = 0, $sub_ptr_sub25_i = 0, $cond_i_i126_ph = 0, $_ph = 0, $62 = 0, $__ninp__i_i112 = 0, $63 = 0, $__a_2 = 0, $call_i86 = 0, $call35 = 0, $71 = 0, $76 = 0, $cmp_i_i_i = 0, $77 = 0, $85 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__atoms = sp + 16 | 0;
 $__buf = sp + 48 | 0;
 $__locale_2_i_i43 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i43 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i43 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i43 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $arraydecay = $__atoms | 0;
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] & 31]($9, 19528, 19554, $arraydecay) | 0;
   $14 = $__locale_2_i_i43 + 4 | 0;
   if (((tempValue = HEAP32[$14 >> 2] | 0, HEAP32[$14 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i43 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i43);
   }
   $this4_i_i_i13 = $__buf;
   _memset($this4_i_i_i13 | 0, 0, 12) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, 10);
   if ((HEAP8[$this4_i_i_i13 >> 0] & 1) == 0) {
    $arrayidx_i_i_i = $__buf + 1 | 0;
    $cond_i_i = $arrayidx_i_i_i;
    $arrayidx_i_i_i95_pre_phi = $arrayidx_i_i_i;
    $__data__i_i_i92_pre_phi = $__buf + 8 | 0;
   } else {
    $__data__i_i_i = $__buf + 8 | 0;
    $cond_i_i = HEAP32[$__data__i_i_i >> 2] | 0;
    $arrayidx_i_i_i95_pre_phi = $__buf + 1 | 0;
    $__data__i_i_i92_pre_phi = $__data__i_i_i;
   }
   $__sbuf__i_i_i16 = $__b | 0;
   $__sbuf__i1_i_i30 = $__e | 0;
   $__cap__i_i80 = $__buf | 0;
   $__size__i2_i68 = $__buf + 4 | 0;
   $arrayidx_i = $__atoms + 24 | 0;
   $arrayidx4_i = $__atoms + 25 | 0;
   $add_ptr_i = $__atoms + 26 | 0;
   $sub_ptr_rhs_cast24_i = $__atoms;
   $__a_0 = $cond_i_i;
   $21 = 0;
   $cond_i_i128 = $cond_i_i;
   $_pre_i_i_i26 = HEAP32[$__sbuf__i_i_i16 >> 2] | 0;
   L16 : while (1) {
    if (($_pre_i_i_i26 | 0) == 0) {
     $26 = 0;
    } else {
     if ((HEAP32[$_pre_i_i_i26 + 12 >> 2] | 0) == (HEAP32[$_pre_i_i_i26 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i_i_i26 >> 2] | 0) + 36 >> 2] & 255]($_pre_i_i_i26) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i16 >> 2] = 0;
       $26 = 0;
      } else {
       $26 = $_pre_i_i_i26;
      }
     } else {
      $26 = $_pre_i_i_i26;
     }
    }
    $cmp_i_i_i29 = ($26 | 0) == 0;
    $27 = HEAP32[$__sbuf__i1_i_i30 >> 2] | 0;
    do {
     if (($27 | 0) == 0) {
      label = 26;
     } else {
      if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) {
       if ($cmp_i_i_i29) {
        break;
       } else {
        $__a_2 = $__a_0;
        break L16;
       }
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 255]($27) | 0) == -1) {
       HEAP32[$__sbuf__i1_i_i30 >> 2] = 0;
       label = 26;
       break;
      } else {
       if ($cmp_i_i_i29) {
        break;
       } else {
        $__a_2 = $__a_0;
        break L16;
       }
      }
     }
    } while (0);
    if ((label | 0) == 26) {
     label = 0;
     if ($cmp_i_i_i29) {
      $__a_2 = $__a_0;
      break;
     }
    }
    $32 = HEAP8[$this4_i_i_i13 >> 0] | 0;
    $tobool_i_i52 = ($32 & 1) == 0;
    if ($tobool_i_i52) {
     $cond_i54 = ($32 & 255) >>> 1;
    } else {
     $cond_i54 = HEAP32[$__size__i2_i68 >> 2] | 0;
    }
    if (($cond_i_i128 - $__a_0 | 0) == ($cond_i54 | 0)) {
     if ($tobool_i_i52) {
      $cond_i63139 = ($32 & 255) >>> 1;
     } else {
      $cond_i63139 = HEAP32[$__size__i2_i68 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $cond_i63139 << 1);
     if ((HEAP8[$this4_i_i_i13 >> 0] & 1) == 0) {
      $cond_i84 = 10;
     } else {
      $cond_i84 = (HEAP32[$__cap__i_i80 >> 2] & -2) - 1 | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $cond_i84);
     if ((HEAP8[$this4_i_i_i13 >> 0] & 1) == 0) {
      $cond_i_i97 = $arrayidx_i_i_i95_pre_phi;
     } else {
      $cond_i_i97 = HEAP32[$__data__i_i_i92_pre_phi >> 2] | 0;
     }
     $__a_1 = $cond_i_i97;
     $cond_i_i127 = $cond_i_i97 + $cond_i63139 | 0;
    } else {
     $__a_1 = $__a_0;
     $cond_i_i127 = $cond_i_i128;
    }
    $51 = HEAP32[$26 + 12 >> 2] | 0;
    if (($51 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     $retval_0_i_off0_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 255]($26) | 0) & 255;
    } else {
     $retval_0_i_off0_i = HEAP8[$51 >> 0] | 0;
    }
    $cmp_i = ($cond_i_i127 | 0) == ($__a_1 | 0);
    if ($cmp_i) {
     $cmp2_i = (HEAP8[$arrayidx_i >> 0] | 0) == $retval_0_i_off0_i << 24 >> 24;
     if ($cmp2_i | (HEAP8[$arrayidx4_i >> 0] | 0) == $retval_0_i_off0_i << 24 >> 24) {
      HEAP8[$cond_i_i127 >> 0] = $cmp2_i ? 43 : 45;
      $_ph = 0;
      $cond_i_i126_ph = $cond_i_i127 + 1 | 0;
     } else {
      $__first_addr_05_i_i = $arraydecay;
      label = 57;
     }
    } else {
     $__first_addr_05_i_i = $arraydecay;
     label = 57;
    }
    do {
     if ((label | 0) == 57) {
      while (1) {
       label = 0;
       $incdec_ptr_i_i = $__first_addr_05_i_i + 1 | 0;
       if ((HEAP8[$__first_addr_05_i_i >> 0] | 0) == $retval_0_i_off0_i << 24 >> 24) {
        $__first_addr_0_lcssa_i_i = $__first_addr_05_i_i;
        break;
       }
       if (($incdec_ptr_i_i | 0) == ($add_ptr_i | 0)) {
        $__first_addr_0_lcssa_i_i = $add_ptr_i;
        break;
       } else {
        $__first_addr_05_i_i = $incdec_ptr_i_i;
        label = 57;
       }
      }
      $sub_ptr_sub25_i = $__first_addr_0_lcssa_i_i - $sub_ptr_rhs_cast24_i | 0;
      if (($sub_ptr_sub25_i | 0) > 23) {
       $__a_2 = $__a_1;
       break L16;
      }
      if (($sub_ptr_sub25_i | 0) < 22) {
       HEAP8[$cond_i_i127 >> 0] = HEAP8[19528 + $sub_ptr_sub25_i >> 0] | 0;
       $_ph = $21 + 1 | 0;
       $cond_i_i126_ph = $cond_i_i127 + 1 | 0;
       break;
      }
      if ($cmp_i) {
       $__a_2 = $cond_i_i127;
       break L16;
      }
      if (($cond_i_i127 - $__a_1 | 0) >= 3) {
       $__a_2 = $__a_1;
       break L16;
      }
      if ((HEAP8[$cond_i_i127 - 1 >> 0] | 0) != 48) {
       $__a_2 = $__a_1;
       break L16;
      }
      HEAP8[$cond_i_i127 >> 0] = HEAP8[19528 + $sub_ptr_sub25_i >> 0] | 0;
      $_ph = 0;
      $cond_i_i126_ph = $cond_i_i127 + 1 | 0;
     }
    } while (0);
    $62 = HEAP32[$__sbuf__i_i_i16 >> 2] | 0;
    $__ninp__i_i112 = $62 + 12 | 0;
    $63 = HEAP32[$__ninp__i_i112 >> 2] | 0;
    if (($63 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 40 >> 2] & 255]($62) | 0;
     $__a_0 = $__a_1;
     $21 = $_ph;
     $cond_i_i128 = $cond_i_i126_ph;
     $_pre_i_i_i26 = $62;
     continue;
    } else {
     HEAP32[$__ninp__i_i112 >> 2] = $63 + 1;
     $__a_0 = $__a_1;
     $21 = $_ph;
     $cond_i_i128 = $cond_i_i126_ph;
     $_pre_i_i_i26 = $62;
     continue;
    }
   }
   HEAP8[$__a_2 + 3 >> 0] = 0;
   if ((HEAP8[24208] | 0) == 0) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i86 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i86;
    }
   }
   $call35 = __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__a_2, HEAP32[5446] | 0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if (($call35 | 0) != 1) {
    HEAP32[$__err >> 2] = 4;
   }
   $71 = HEAP32[$__sbuf__i_i_i16 >> 2] | 0;
   if (($71 | 0) == 0) {
    $76 = 0;
   } else {
    if ((HEAP32[$71 + 12 >> 2] | 0) == (HEAP32[$71 + 16 >> 2] | 0)) {
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 255]($71) | 0) == -1) {
      HEAP32[$__sbuf__i_i_i16 >> 2] = 0;
      $76 = 0;
     } else {
      $76 = $71;
     }
    } else {
     $76 = $71;
    }
   }
   $cmp_i_i_i = ($76 | 0) == 0;
   $77 = HEAP32[$__sbuf__i1_i_i30 >> 2] | 0;
   do {
    if (($77 | 0) == 0) {
     label = 87;
    } else {
     if ((HEAP32[$77 + 12 >> 2] | 0) != (HEAP32[$77 + 16 >> 2] | 0)) {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 89;
       break;
      }
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$77 >> 2] | 0) + 36 >> 2] & 255]($77) | 0) == -1) {
      HEAP32[$__sbuf__i1_i_i30 >> 2] = 0;
      label = 87;
      break;
     } else {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 89;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 87) {
    if ($cmp_i_i_i) {
     label = 89;
    }
   }
   if ((label | 0) == 89) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = $76;
   if ((HEAP8[$this4_i_i_i13 >> 0] & 1) == 0) {
    STACKTOP = sp;
    return;
   }
   $85 = HEAP32[$__buf + 8 >> 2] | 0;
   if (($85 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   _free($85);
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i_i73 = 0, $__p_i_i_i_i = 0, $__grouping = 0, $__locale__i_i = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $6 = 0, $exception_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i_i80 = 0, $14 = 0, $15 = 0, $exception_i_i_i92 = 0, $16 = 0, $17 = 0, $20 = 0, $call_i96 = 0, $23 = 0, $__nf_0 = 0, $sub_ptr_lhs_cast = 0, $arrayidx10 = 0, $27 = 0, $28 = 0, $call_i99 = 0, $30 = 0, $incdec_ptr22 = 0, $call_i103 = 0, $33 = 0, $__ns_0198 = 0, $34 = 0, $call_i = 0, $incdec_ptr34 = 0, $__ns_1189 = 0, $39 = 0, $call_i108 = 0, $incdec_ptr47 = 0, $__ns_2 = 0, $__nf_1 = 0, $__size__i_i_i = 0, $44 = 0, $cond_i_i = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $50 = 0, $call_i121122 = 0, $arrayidx_i_i_i = 0, $__size__i2_i = 0, $__data__i_i_i132 = 0, $54 = 0, $__p_0182 = 0, $__dg_0181 = 0, $__dc_0180 = 0, $57 = 0, $58 = 0, $59 = 0, $cond_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i142143 = 0, $63 = 0, $add_ptr90 = 0, $64 = 0, $incdec_ptr6_i_i146 = 0, $incdec_ptr9_i_i149 = 0, $__first_addr_08_i_i150 = 0, $65 = 0, $67 = 0, $__nf_2175 = 0, $68 = 0, $call_i158159 = 0, $71 = 0, $call_i162163 = 0, $73 = 0, $incdec_ptr109 = 0, $__nf_3 = 0, $add_ptr116 = 0, $storemerge = 0, $79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i_i73 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__grouping = sp + 32 | 0;
 $__locale__i_i = $__loc | 0;
 $0 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if (!((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $6 = HEAP32[$5 + ($sub_i_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5816] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i73 >> 2] = 23264;
  HEAP32[$__p_i_i_i_i73 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i73 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i73);
 }
 $sub_i_i_i80 = (HEAP32[5817] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if (!((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i80 >>> 0)) {
  $exception_i_i_i92 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i92;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i92 | 0, 17848, 212);
 }
 $15 = HEAP32[$14 + ($sub_i_i_i80 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i_i92 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i92;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i92 | 0, 17848, 212);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 HEAP32[$__oe >> 2] = $__ob;
 $20 = HEAP8[$__nb >> 0] | 0;
 if (($20 << 24 >> 24 | 0) == 45 | ($20 << 24 >> 24 | 0) == 43) {
  $call_i96 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($8, $20) | 0;
  $23 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $23 + 1;
  HEAP8[$23 >> 0] = $call_i96;
  $__nf_0 = $__nb + 1 | 0;
 } else {
  $__nf_0 = $__nb;
 }
 $sub_ptr_lhs_cast = $__ne;
 L23 : do {
  if (($sub_ptr_lhs_cast - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0 >> 0] | 0) == 48) {
    $arrayidx10 = $__nf_0 + 1 | 0;
    $27 = HEAP8[$arrayidx10 >> 0] | 0;
    if (($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88) {
     $28 = $6;
     $call_i99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
     $30 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $30 + 1;
     HEAP8[$30 >> 0] = $call_i99;
     $incdec_ptr22 = $__nf_0 + 2 | 0;
     $call_i103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$arrayidx10 >> 0] | 0) | 0;
     $33 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $33 + 1;
     HEAP8[$33 >> 0] = $call_i103;
     if ($incdec_ptr22 >>> 0 < $__ne >>> 0) {
      $__ns_0198 = $incdec_ptr22;
      while (1) {
       $34 = HEAP8[$__ns_0198 >> 0] | 0;
       if ((HEAP8[24208] | 0) == 0) {
        if ((___cxa_guard_acquire(24208) | 0) != 0) {
         $call_i = _newlocale(2147483647, 896, 0) | 0;
         HEAP32[5446] = $call_i;
        }
       }
       $incdec_ptr34 = $__ns_0198 + 1 | 0;
       if ((_isxdigit_l($34 << 24 >> 24 | 0, HEAP32[5446] | 0) | 0) == 0) {
        $__nf_1 = $incdec_ptr22;
        $__ns_2 = $__ns_0198;
        break L23;
       }
       if ($incdec_ptr34 >>> 0 < $__ne >>> 0) {
        $__ns_0198 = $incdec_ptr34;
       } else {
        $__nf_1 = $incdec_ptr22;
        $__ns_2 = $incdec_ptr34;
        break;
       }
      }
     } else {
      $__nf_1 = $incdec_ptr22;
      $__ns_2 = $incdec_ptr22;
     }
    } else {
     label = 24;
    }
   } else {
    label = 24;
   }
  } else {
   label = 24;
  }
 } while (0);
 L38 : do {
  if ((label | 0) == 24) {
   if ($__nf_0 >>> 0 < $__ne >>> 0) {
    $__ns_1189 = $__nf_0;
    while (1) {
     $39 = HEAP8[$__ns_1189 >> 0] | 0;
     if ((HEAP8[24208] | 0) == 0) {
      if ((___cxa_guard_acquire(24208) | 0) != 0) {
       $call_i108 = _newlocale(2147483647, 896, 0) | 0;
       HEAP32[5446] = $call_i108;
      }
     }
     $incdec_ptr47 = $__ns_1189 + 1 | 0;
     if ((_isdigit_l($39 << 24 >> 24 | 0, HEAP32[5446] | 0) | 0) == 0) {
      $__nf_1 = $__nf_0;
      $__ns_2 = $__ns_1189;
      break L38;
     }
     if ($incdec_ptr47 >>> 0 < $__ne >>> 0) {
      $__ns_1189 = $incdec_ptr47;
     } else {
      $__nf_1 = $__nf_0;
      $__ns_2 = $incdec_ptr47;
      break;
     }
    }
   } else {
    $__nf_1 = $__nf_0;
    $__ns_2 = $__nf_0;
   }
  }
 } while (0);
 $__size__i_i_i = $__grouping;
 $44 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($44 & 1) == 0) {
  $cond_i_i = ($44 & 255) >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i_i | 0) == 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($8, $__nf_1, $__ns_2, HEAP32[$__oe >> 2] | 0) | 0;
  HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns_2 - $__nf_1);
 } else {
  if (($__nf_1 | 0) != ($__ns_2 | 0)) {
   $incdec_ptr6_i_i = $__ns_2 - 1 | 0;
   if ($incdec_ptr6_i_i >>> 0 > $__nf_1 >>> 0) {
    $__first_addr_08_i_i = $__nf_1;
    $incdec_ptr9_i_i = $incdec_ptr6_i_i;
    do {
     $50 = HEAP8[$__first_addr_08_i_i >> 0] | 0;
     HEAP8[$__first_addr_08_i_i >> 0] = HEAP8[$incdec_ptr9_i_i >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i >> 0] = $50;
     $__first_addr_08_i_i = $__first_addr_08_i_i + 1 | 0;
     $incdec_ptr9_i_i = $incdec_ptr9_i_i - 1 | 0;
    } while ($__first_addr_08_i_i >>> 0 < $incdec_ptr9_i_i >>> 0);
   }
  }
  $call_i121122 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
  if ($__nf_1 >>> 0 < $__ns_2 >>> 0) {
   $arrayidx_i_i_i = $__grouping + 1 | 0;
   $__size__i2_i = $__grouping + 4 | 0;
   $__data__i_i_i132 = $__grouping + 8 | 0;
   $54 = $6;
   $__dc_0180 = 0;
   $__dg_0181 = 0;
   $__p_0182 = $__nf_1;
   while (1) {
    $57 = HEAP8[((HEAP8[$__size__i_i_i >> 0] & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i132 >> 2] | 0) + $__dg_0181 >> 0] | 0;
    if ($57 << 24 >> 24 > 0 & ($__dc_0180 | 0) == ($57 << 24 >> 24 | 0)) {
     $58 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $call_i121122;
     $59 = HEAP8[$__size__i_i_i >> 0] | 0;
     if (($59 & 1) == 0) {
      $cond_i = ($59 & 255) >>> 1;
     } else {
      $cond_i = HEAP32[$__size__i2_i >> 2] | 0;
     }
     $__dg_1 = ($__dg_0181 >>> 0 < ($cond_i - 1 | 0) >>> 0) + $__dg_0181 | 0;
     $__dc_1 = 0;
    } else {
     $__dg_1 = $__dg_0181;
     $__dc_1 = $__dc_0180;
    }
    $call_i142143 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$__p_0182 >> 0] | 0) | 0;
    $63 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $63 + 1;
    HEAP8[$63 >> 0] = $call_i142143;
    $__p_0182 = $__p_0182 + 1 | 0;
    if (!($__p_0182 >>> 0 < $__ns_2 >>> 0)) {
     break;
    } else {
     $__dc_0180 = $__dc_1 + 1 | 0;
     $__dg_0181 = $__dg_1;
    }
   }
  }
  $add_ptr90 = $__ob + ($__nf_1 - $__nb) | 0;
  $64 = HEAP32[$__oe >> 2] | 0;
  if (($add_ptr90 | 0) != ($64 | 0)) {
   $incdec_ptr6_i_i146 = $64 - 1 | 0;
   if ($incdec_ptr6_i_i146 >>> 0 > $add_ptr90 >>> 0) {
    $__first_addr_08_i_i150 = $add_ptr90;
    $incdec_ptr9_i_i149 = $incdec_ptr6_i_i146;
    do {
     $65 = HEAP8[$__first_addr_08_i_i150 >> 0] | 0;
     HEAP8[$__first_addr_08_i_i150 >> 0] = HEAP8[$incdec_ptr9_i_i149 >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i149 >> 0] = $65;
     $__first_addr_08_i_i150 = $__first_addr_08_i_i150 + 1 | 0;
     $incdec_ptr9_i_i149 = $incdec_ptr9_i_i149 - 1 | 0;
    } while ($__first_addr_08_i_i150 >>> 0 < $incdec_ptr9_i_i149 >>> 0);
   }
  }
 }
 L81 : do {
  if ($__ns_2 >>> 0 < $__ne >>> 0) {
   $67 = $6;
   $__nf_2175 = $__ns_2;
   while (1) {
    $68 = HEAP8[$__nf_2175 >> 0] | 0;
    if ($68 << 24 >> 24 == 46) {
     break;
    }
    $call_i162163 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 63]($8, $68) | 0;
    $73 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $73 + 1;
    HEAP8[$73 >> 0] = $call_i162163;
    $incdec_ptr109 = $__nf_2175 + 1 | 0;
    if ($incdec_ptr109 >>> 0 < $__ne >>> 0) {
     $__nf_2175 = $incdec_ptr109;
    } else {
     $__nf_3 = $incdec_ptr109;
     break L81;
    }
   }
   $call_i158159 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 255]($17) | 0;
   $71 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $71 + 1;
   HEAP8[$71 >> 0] = $call_i158159;
   $__nf_3 = $__nf_2175 + 1 | 0;
  } else {
   $__nf_3 = $__ns_2;
  }
 } while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($8, $__nf_3, $__ne, HEAP32[$__oe >> 2] | 0) | 0;
 $add_ptr116 = (HEAP32[$__oe >> 2] | 0) + ($sub_ptr_lhs_cast - $__nf_3) | 0;
 HEAP32[$__oe >> 2] = $add_ptr116;
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $add_ptr116;
 } else {
  $storemerge = $__ob + ($__np - $__nb) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $79 = HEAP32[$__grouping + 8 >> 2] | 0;
 if (($79 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($79);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $wbuf_i = 0, $s_i = 0, $save_state = 0, $tmpcast = 0, $fend_0132 = 0, $incdec_ptr = 0, $fend_0_lcssa = 0, $1 = 0, $sub_ptr_lhs_cast7 = 0, $__l = 0, $arraydecay_i = 0, $4 = 0, $fend_1130 = 0, $frm_addr_0129 = 0, $to_addr_0128 = 0, $5$1 = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_sub = 0, $call_i = 0, $7 = 0, $tobool_i = 0, $wn__i = 0, $wcs_arraydecay_i = 0, $8 = 0, $n_addr_060_i = 0, $ws_059_i = 0, $cnt_058_i = 0, $wn_addr_057_i = 0, $div_i = 0, $cmp_i = 0, $wn_addr_0_div_i = 0, $sub_i = 0, $call_i1 = 0, $wn_addr_1_i = 0, $ws_1_i = 0, $add15_i = 0, $9 = 0, $10 = 0, $n_addr_0_lcssa_i = 0, $ws_0_lcssa_i = 0, $cnt_0_lcssa_i = 0, $wn_addr_0_lcssa_i = 0, $11 = 0, $wn_addr_3_i = 0, $cnt_2_i = 0, $ws_2_i = 0, $n_addr_2_i = 0, $call24_i = 0, $add_ptr36_i = 0, $dec_i = 0, $inc_i = 0, $cnt_3_i = 0, $frm_addr_193 = 0, $storemerge92 = 0, $call_i57 = 0, $call1_i58 = 0, $frm_addr_2 = 0, $incdec_ptr24 = 0, $frm_addr_1_lcssa = 0, $add_ptr31 = 0, $_pre175 = 0, $call_i70 = 0, $call1_i71 = 0, $incdec_ptr43 = 0, $fend_295 = 0, $incdec_ptr52 = 0, $fend_2_lcssa = 0, $28 = 0, $29 = 0, $fend_3 = 0, $30 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf_i = sp | 0;
 $s_i = sp + 1024 | 0;
 $save_state = sp + 1032 | 0;
 $tmpcast = $save_state;
 L1 : do {
  if (($frm | 0) == ($frm_end | 0)) {
   HEAP32[$to_nxt >> 2] = $to;
   HEAP32[$frm_nxt >> 2] = $frm;
   $30 = $frm;
  } else {
   $fend_0132 = $frm;
   while (1) {
    $incdec_ptr = $fend_0132 + 1 | 0;
    if ((HEAP8[$fend_0132 >> 0] | 0) == 0) {
     $fend_0_lcssa = $fend_0132;
     break;
    }
    if (($incdec_ptr | 0) == ($frm_end | 0)) {
     $fend_0_lcssa = $frm_end;
     break;
    } else {
     $fend_0132 = $incdec_ptr;
    }
   }
   HEAP32[$to_nxt >> 2] = $to;
   HEAP32[$frm_nxt >> 2] = $frm;
   if (($to | 0) == ($to_end | 0)) {
    $30 = $frm;
   } else {
    $1 = $st;
    $sub_ptr_lhs_cast7 = $to_end;
    $__l = $this + 8 | 0;
    $arraydecay_i = $wbuf_i | 0;
    $4 = $st | 0;
    $to_addr_0128 = $to;
    $frm_addr_0129 = $frm;
    $fend_1130 = $fend_0_lcssa;
    while (1) {
     $5$1 = HEAP32[$1 + 4 >> 2] | 0;
     HEAP32[$save_state >> 2] = HEAP32[$1 >> 2];
     HEAP32[$save_state + 4 >> 2] = $5$1;
     $sub_ptr_lhs_cast = $fend_1130;
     $sub_ptr_sub = $sub_ptr_lhs_cast - $frm_addr_0129 | 0;
     $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
     $7 = HEAP32[$frm_nxt >> 2] | 0;
     HEAP32[$s_i >> 2] = $7;
     $tobool_i = ($to_addr_0128 | 0) != 0;
     $wn__i = $tobool_i ? $sub_ptr_lhs_cast7 - $to_addr_0128 >> 2 : 256;
     $wcs_arraydecay_i = $tobool_i ? $to_addr_0128 : $arraydecay_i;
     L9 : do {
      if (($7 | 0) != 0 & ($wn__i | 0) != 0) {
       $wn_addr_057_i = $wn__i;
       $cnt_058_i = 0;
       $ws_059_i = $wcs_arraydecay_i;
       $n_addr_060_i = $sub_ptr_sub;
       $8 = $7;
       while (1) {
        $div_i = $n_addr_060_i >>> 2;
        $cmp_i = $div_i >>> 0 >= $wn_addr_057_i >>> 0;
        if (!($cmp_i | $n_addr_060_i >>> 0 > 131 >>> 0)) {
         $wn_addr_0_lcssa_i = $wn_addr_057_i;
         $cnt_0_lcssa_i = $cnt_058_i;
         $ws_0_lcssa_i = $ws_059_i;
         $n_addr_0_lcssa_i = $n_addr_060_i;
         $10 = $8;
         label = 13;
         break L9;
        }
        $wn_addr_0_div_i = $cmp_i ? $wn_addr_057_i : $div_i;
        $sub_i = $n_addr_060_i - $wn_addr_0_div_i | 0;
        $call_i1 = _mbsrtowcs($ws_059_i, $s_i, $wn_addr_0_div_i, $st) | 0;
        if (($call_i1 | 0) == -1) {
         $cnt_3_i = -1;
         break L9;
        }
        if (($ws_059_i | 0) == ($arraydecay_i | 0)) {
         $ws_1_i = $arraydecay_i;
         $wn_addr_1_i = $wn_addr_057_i;
        } else {
         $ws_1_i = $ws_059_i + ($call_i1 << 2) | 0;
         $wn_addr_1_i = $wn_addr_057_i - $call_i1 | 0;
        }
        $add15_i = $call_i1 + $cnt_058_i | 0;
        $9 = HEAP32[$s_i >> 2] | 0;
        if (($9 | 0) != 0 & ($wn_addr_1_i | 0) != 0) {
         $wn_addr_057_i = $wn_addr_1_i;
         $cnt_058_i = $add15_i;
         $ws_059_i = $ws_1_i;
         $n_addr_060_i = $sub_i;
         $8 = $9;
        } else {
         $wn_addr_0_lcssa_i = $wn_addr_1_i;
         $cnt_0_lcssa_i = $add15_i;
         $ws_0_lcssa_i = $ws_1_i;
         $n_addr_0_lcssa_i = $sub_i;
         $10 = $9;
         label = 13;
         break;
        }
       }
      } else {
       $wn_addr_0_lcssa_i = $wn__i;
       $cnt_0_lcssa_i = 0;
       $ws_0_lcssa_i = $wcs_arraydecay_i;
       $n_addr_0_lcssa_i = $sub_ptr_sub;
       $10 = $7;
       label = 13;
      }
     } while (0);
     L17 : do {
      if ((label | 0) == 13) {
       label = 0;
       if (($10 | 0) != 0 & ($wn_addr_0_lcssa_i | 0) != 0 & ($n_addr_0_lcssa_i | 0) != 0) {
        $n_addr_2_i = $n_addr_0_lcssa_i;
        $ws_2_i = $ws_0_lcssa_i;
        $cnt_2_i = $cnt_0_lcssa_i;
        $wn_addr_3_i = $wn_addr_0_lcssa_i;
        $11 = $10;
        while (1) {
         $call24_i = _mbrtowc($ws_2_i, $11, $n_addr_2_i, $st) | 0;
         if (($call24_i + 2 | 0) >>> 0 < 3 >>> 0) {
          break;
         }
         $add_ptr36_i = $11 + $call24_i | 0;
         HEAP32[$s_i >> 2] = $add_ptr36_i;
         $dec_i = $wn_addr_3_i - 1 | 0;
         $inc_i = $cnt_2_i + 1 | 0;
         if (($dec_i | 0) != 0 & ($n_addr_2_i | 0) != ($call24_i | 0)) {
          $n_addr_2_i = $n_addr_2_i - $call24_i | 0;
          $ws_2_i = $ws_2_i + 4 | 0;
          $cnt_2_i = $inc_i;
          $wn_addr_3_i = $dec_i;
          $11 = $add_ptr36_i;
         } else {
          $cnt_3_i = $inc_i;
          break L17;
         }
        }
        if (($call24_i | 0) == (-1 | 0)) {
         $cnt_3_i = -1;
         break;
        } else if (($call24_i | 0) == 0) {
         HEAP32[$s_i >> 2] = 0;
         $cnt_3_i = $cnt_2_i;
         break;
        } else {
         HEAP32[$4 >> 2] = 0;
         $cnt_3_i = $cnt_2_i;
         break;
        }
       } else {
        $cnt_3_i = $cnt_0_lcssa_i;
       }
      }
     } while (0);
     if ($tobool_i) {
      HEAP32[$frm_nxt >> 2] = HEAP32[$s_i >> 2];
     }
     if (($call_i | 0) != 0) {
      _uselocale($call_i | 0) | 0;
     }
     if (($cnt_3_i | 0) == (-1 | 0)) {
      label = 25;
      break;
     } else if (($cnt_3_i | 0) == 0) {
      $retval_0 = 2;
      label = 49;
      break;
     }
     $add_ptr31 = (HEAP32[$to_nxt >> 2] | 0) + ($cnt_3_i << 2) | 0;
     HEAP32[$to_nxt >> 2] = $add_ptr31;
     if (($add_ptr31 | 0) == ($to_end | 0)) {
      label = 47;
      break;
     }
     $_pre175 = HEAP32[$frm_nxt >> 2] | 0;
     if (($fend_1130 | 0) == ($frm_end | 0)) {
      $fend_3 = $frm_end;
      $29 = $_pre175;
      $28 = $add_ptr31;
     } else {
      $call_i70 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
      $call1_i71 = _mbrtowc($add_ptr31, $_pre175, 1, $st) | 0;
      if (($call_i70 | 0) != 0) {
       _uselocale($call_i70 | 0) | 0;
      }
      if (($call1_i71 | 0) != 0) {
       $retval_0 = 2;
       label = 49;
       break;
      }
      HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
      $incdec_ptr43 = (HEAP32[$frm_nxt >> 2] | 0) + 1 | 0;
      HEAP32[$frm_nxt >> 2] = $incdec_ptr43;
      L41 : do {
       if (($incdec_ptr43 | 0) == ($frm_end | 0)) {
        $fend_2_lcssa = $frm_end;
       } else {
        $fend_295 = $incdec_ptr43;
        while (1) {
         $incdec_ptr52 = $fend_295 + 1 | 0;
         if ((HEAP8[$fend_295 >> 0] | 0) == 0) {
          $fend_2_lcssa = $fend_295;
          break L41;
         }
         if (($incdec_ptr52 | 0) == ($frm_end | 0)) {
          $fend_2_lcssa = $frm_end;
          break;
         } else {
          $fend_295 = $incdec_ptr52;
         }
        }
       }
      } while (0);
      $fend_3 = $fend_2_lcssa;
      $29 = $incdec_ptr43;
      $28 = HEAP32[$to_nxt >> 2] | 0;
     }
     if (($29 | 0) == ($frm_end | 0) | ($28 | 0) == ($to_end | 0)) {
      $30 = $29;
      break L1;
     } else {
      $to_addr_0128 = $28;
      $frm_addr_0129 = $29;
      $fend_1130 = $fend_3;
     }
    }
    if ((label | 0) == 25) {
     HEAP32[$to_nxt >> 2] = $to_addr_0128;
     L49 : do {
      if (($frm_addr_0129 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
       $frm_addr_1_lcssa = $frm_addr_0129;
      } else {
       $storemerge92 = $to_addr_0128;
       $frm_addr_193 = $frm_addr_0129;
       while (1) {
        $call_i57 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
        $call1_i58 = _mbrtowc($storemerge92, $frm_addr_193, $sub_ptr_lhs_cast - $frm_addr_193 | 0, $tmpcast) | 0;
        if (($call_i57 | 0) != 0) {
         _uselocale($call_i57 | 0) | 0;
        }
        if (($call1_i58 | 0) == 0) {
         $frm_addr_2 = $frm_addr_193 + 1 | 0;
        } else if (($call1_i58 | 0) == (-1 | 0)) {
         label = 31;
         break;
        } else if (($call1_i58 | 0) == (-2 | 0)) {
         label = 32;
         break;
        } else {
         $frm_addr_2 = $frm_addr_193 + $call1_i58 | 0;
        }
        $incdec_ptr24 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
        HEAP32[$to_nxt >> 2] = $incdec_ptr24;
        if (($frm_addr_2 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
         $frm_addr_1_lcssa = $frm_addr_2;
         break L49;
        } else {
         $storemerge92 = $incdec_ptr24;
         $frm_addr_193 = $frm_addr_2;
        }
       }
       if ((label | 0) == 31) {
        HEAP32[$frm_nxt >> 2] = $frm_addr_193;
        $retval_0 = 2;
        STACKTOP = sp;
        return $retval_0 | 0;
       } else if ((label | 0) == 32) {
        HEAP32[$frm_nxt >> 2] = $frm_addr_193;
        $retval_0 = 1;
        STACKTOP = sp;
        return $retval_0 | 0;
       }
      }
     } while (0);
     HEAP32[$frm_nxt >> 2] = $frm_addr_1_lcssa;
     $retval_0 = ($frm_addr_1_lcssa | 0) != ($frm_end | 0) | 0;
     STACKTOP = sp;
     return $retval_0 | 0;
    } else if ((label | 0) == 47) {
     $30 = HEAP32[$frm_nxt >> 2] | 0;
     break;
    } else if ((label | 0) == 49) {
     STACKTOP = sp;
     return $retval_0 | 0;
    }
   }
  }
 } while (0);
 $retval_0 = ($30 | 0) != ($frm_end | 0) | 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z9initCrowdif($maxAgents, $maxAgentRadius) {
 $maxAgents = $maxAgents | 0;
 $maxAgentRadius = +$maxAgentRadius;
 var $0 = 0, $1 = 0, $m_maxAgents_i = 0, $mul_i = 0.0, $call_i_i_i_i = 0, $4 = 0, $mul10_i = 0, $mul11_i = 0.0, $dec_i_i_i = 0, $or_i_i_i = 0, $or2_i_i_i = 0, $or4_i_i_i = 0, $or6_i_i_i = 0, $inc_i_i_i = 0, $7 = 0, $call_i_i_i1_i = 0, $9 = 0, $11 = 0, $call_i_i1_i_i = 0, $call_i_i_i4_i = 0, $22 = 0, $call_i_i_i8_i = 0, $27 = 0, $call_i_i1_i10_i = 0, $i_024_i = 0, $m_maxPathResult_i = 0, $call_i_i_i = 0, $34 = 0, $m_navquery_i_i_i = 0, $35 = 0, $path_i_i_i = 0, $37 = 0, $path_1_i_i_i = 0, $39 = 0, $path_2_i_i_i = 0, $41 = 0, $path_3_i_i_i = 0, $43 = 0, $path_4_i_i_i = 0, $45 = 0, $path_5_i_i_i = 0, $47 = 0, $path_6_i_i_i = 0, $49 = 0, $path_7_i_i_i = 0, $51 = 0, $call_i_i_i_i_i = 0, $53 = 0, $m_maxPathSize_i_i = 0, $54 = 0, $i_05_i_i = 0, $call_i_i_i17_i = 0, $inc_i_i = 0, $call_i_i19_i = 0, $m_agents_i = 0, $call_i_i20_i = 0, $call_i_i21_i = 0, $m_agentAnims_i = 0, $inc73_i6 = 0, $63 = 0, $64 = 0, $i57_023_i = 0, $65 = 0, $66 = 0, $74 = 0, $75 = 0, $m_path_i26_i = 0, $call_i_i_i30_i = 0, $i75_021_i = 0, $call_i_i_i36_i = 0, $78 = 0, label = 0;
 $0 = HEAP32[4920] | 0;
 $1 = HEAP32[4912] | 0;
 __ZN7dtCrowd5purgeEv($0);
 $m_maxAgents_i = $0 | 0;
 HEAP32[$m_maxAgents_i >> 2] = $maxAgents;
 HEAPF32[$0 + 992 >> 2] = $maxAgentRadius;
 $mul_i = $maxAgentRadius * 2.0;
 HEAPF32[$0 + 720 >> 2] = $mul_i;
 HEAPF32[$0 + 724 >> 2] = $maxAgentRadius * 1.5;
 HEAPF32[$0 + 728 >> 2] = $mul_i;
 $call_i_i_i_i = _malloc(48) | 0;
 if (($call_i_i_i_i | 0) == 0) {
  HEAP32[$0 + 708 >> 2] = 0;
  return 1;
 }
 HEAP32[$call_i_i_i_i >> 2] = 0;
 HEAPF32[$call_i_i_i_i + 4 >> 2] = 0.0;
 _memset($call_i_i_i_i + 12 | 0, 0, 20) | 0;
 HEAP32[$0 + 708 >> 2] = $call_i_i_i_i;
 $4 = HEAP32[$m_maxAgents_i >> 2] | 0;
 $mul10_i = $4 << 2;
 $mul11_i = $maxAgentRadius * 3.0;
 if (($4 | 0) <= 0) {
  ___assert_fail(8136, 9328, 68, 1152);
  return 0;
 }
 if (!($mul11_i > 0.0)) {
  ___assert_fail(7096, 9328, 69, 1152);
  return 0;
 }
 HEAPF32[$call_i_i_i_i + 4 >> 2] = $mul11_i;
 HEAPF32[$call_i_i_i_i + 8 >> 2] = 1.0 / $mul11_i;
 $dec_i_i_i = $mul10_i - 1 | 0;
 $or_i_i_i = $dec_i_i_i >>> 1 | $dec_i_i_i;
 $or2_i_i_i = $or_i_i_i >>> 2 | $or_i_i_i;
 $or4_i_i_i = $or2_i_i_i >>> 4 | $or2_i_i_i;
 $or6_i_i_i = $or4_i_i_i >>> 8 | $or4_i_i_i;
 $inc_i_i_i = ($or6_i_i_i >>> 16 | $or6_i_i_i) + 1 | 0;
 $7 = $call_i_i_i_i + 28 | 0;
 HEAP32[$7 >> 2] = $inc_i_i_i;
 $call_i_i_i1_i = _malloc($inc_i_i_i << 1) | 0;
 $9 = $call_i_i_i_i + 24 | 0;
 HEAP32[$9 >> 2] = $call_i_i_i1_i;
 if (($call_i_i_i1_i | 0) == 0) {
  return 1;
 }
 HEAP32[$call_i_i_i_i + 20 >> 2] = $mul10_i;
 $11 = $call_i_i_i_i + 16 | 0;
 HEAP32[$11 >> 2] = 0;
 $call_i_i1_i_i = _malloc($4 << 5) | 0;
 HEAP32[$call_i_i_i_i + 12 >> 2] = $call_i_i1_i_i;
 if (($call_i_i1_i_i | 0) == 0) {
  return 1;
 }
 _memset(HEAP32[$9 >> 2] | 0, -1 | 0, HEAP32[$7 >> 2] << 1 | 0) | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$call_i_i_i_i + 32 >> 2] = 65535;
 HEAP32[$call_i_i_i_i + 36 >> 2] = 65535;
 HEAP32[$call_i_i_i_i + 40 >> 2] = -65535;
 HEAP32[$call_i_i_i_i + 44 >> 2] = -65535;
 $call_i_i_i4_i = _malloc(64) | 0;
 if (($call_i_i_i4_i | 0) == 0) {
  HEAP32[$0 + 704 >> 2] = 0;
  return 1;
 }
 _memset($call_i_i_i4_i + 40 | 0, 0, 24) | 0;
 HEAP32[$0 + 704 >> 2] = $call_i_i_i4_i;
 $22 = $call_i_i_i4_i + 40 | 0;
 HEAP32[$22 >> 2] = 6;
 HEAP32[$call_i_i_i4_i + 48 >> 2] = 0;
 $call_i_i_i8_i = _malloc(384) | 0;
 HEAP32[$call_i_i_i4_i + 44 >> 2] = $call_i_i_i8_i;
 if (($call_i_i_i8_i | 0) == 0) {
  return 1;
 }
 _memset($call_i_i_i8_i | 0, 0, HEAP32[$22 >> 2] << 6 | 0) | 0;
 $27 = $call_i_i_i4_i + 52 | 0;
 HEAP32[$27 >> 2] = 8;
 HEAP32[$call_i_i_i4_i + 60 >> 2] = 0;
 $call_i_i1_i10_i = _malloc(224) | 0;
 HEAP32[$call_i_i_i4_i + 56 >> 2] = $call_i_i1_i10_i;
 if (($call_i_i1_i10_i | 0) == 0) {
  return 1;
 }
 _memset($call_i_i1_i10_i | 0, 0, (HEAP32[$27 >> 2] | 0) * 28 | 0 | 0) | 0;
 _memset($0 + 480 | 0, 0, 224) | 0;
 $i_024_i = 0;
 do {
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) >> 2] = .4000000059604645;
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) + 4 >> 2] = 2.0;
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) + 8 >> 2] = .75;
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) + 12 >> 2] = .75;
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) + 16 >> 2] = 2.5;
  HEAPF32[$0 + 480 + ($i_024_i * 28 | 0) + 20 >> 2] = 2.5;
  HEAP8[$0 + 480 + ($i_024_i * 28 | 0) + 24 >> 0] = 33;
  HEAP8[$0 + 480 + ($i_024_i * 28 | 0) + 25 >> 0] = 7;
  HEAP8[$0 + 480 + ($i_024_i * 28 | 0) + 26 >> 0] = 2;
  HEAP8[$0 + 480 + ($i_024_i * 28 | 0) + 27 >> 0] = 5;
  $i_024_i = $i_024_i + 1 | 0;
 } while (($i_024_i | 0) < 8);
 $m_maxPathResult_i = $0 + 716 | 0;
 HEAP32[$m_maxPathResult_i >> 2] = 256;
 $call_i_i_i = _malloc(1024) | 0;
 HEAP32[$0 + 712 >> 2] = $call_i_i_i;
 if (($call_i_i_i | 0) == 0) {
  return 1;
 }
 $34 = HEAP32[$m_maxPathResult_i >> 2] | 0;
 $m_navquery_i_i_i = $0 + 476 | 0;
 $35 = HEAP32[$m_navquery_i_i_i >> 2] | 0;
 if (($35 | 0) != 0) {
  __ZN14dtNavMeshQueryD2Ev($35);
  _free($35);
 }
 HEAP32[$m_navquery_i_i_i >> 2] = 0;
 $path_i_i_i = $0 + 52 | 0;
 $37 = HEAP32[$path_i_i_i >> 2] | 0;
 if (($37 | 0) != 0) {
  _free($37);
 }
 HEAP32[$path_i_i_i >> 2] = 0;
 $path_1_i_i_i = $0 + 108 | 0;
 $39 = HEAP32[$path_1_i_i_i >> 2] | 0;
 if (($39 | 0) != 0) {
  _free($39);
 }
 HEAP32[$path_1_i_i_i >> 2] = 0;
 $path_2_i_i_i = $0 + 164 | 0;
 $41 = HEAP32[$path_2_i_i_i >> 2] | 0;
 if (($41 | 0) != 0) {
  _free($41);
 }
 HEAP32[$path_2_i_i_i >> 2] = 0;
 $path_3_i_i_i = $0 + 220 | 0;
 $43 = HEAP32[$path_3_i_i_i >> 2] | 0;
 if (($43 | 0) != 0) {
  _free($43);
 }
 HEAP32[$path_3_i_i_i >> 2] = 0;
 $path_4_i_i_i = $0 + 276 | 0;
 $45 = HEAP32[$path_4_i_i_i >> 2] | 0;
 if (($45 | 0) != 0) {
  _free($45);
 }
 HEAP32[$path_4_i_i_i >> 2] = 0;
 $path_5_i_i_i = $0 + 332 | 0;
 $47 = HEAP32[$path_5_i_i_i >> 2] | 0;
 if (($47 | 0) != 0) {
  _free($47);
 }
 HEAP32[$path_5_i_i_i >> 2] = 0;
 $path_6_i_i_i = $0 + 388 | 0;
 $49 = HEAP32[$path_6_i_i_i >> 2] | 0;
 if (($49 | 0) != 0) {
  _free($49);
 }
 HEAP32[$path_6_i_i_i >> 2] = 0;
 $path_7_i_i_i = $0 + 444 | 0;
 $51 = HEAP32[$path_7_i_i_i >> 2] | 0;
 if (($51 | 0) != 0) {
  _free($51);
 }
 HEAP32[$path_7_i_i_i >> 2] = 0;
 $call_i_i_i_i_i = _malloc(64) | 0;
 if (($call_i_i_i_i_i | 0) == 0) {
  HEAP32[$m_navquery_i_i_i >> 2] = 0;
  return 1;
 }
 $53 = $call_i_i_i_i_i;
 _memset($call_i_i_i_i_i | 0, 0, 64) | 0;
 HEAP32[$m_navquery_i_i_i >> 2] = $53;
 if ((__ZN14dtNavMeshQuery4initEPK9dtNavMeshi($53, $1, 4096) | 0) < 0) {
  return 1;
 }
 $m_maxPathSize_i_i = $0 + 468 | 0;
 HEAP32[$m_maxPathSize_i_i >> 2] = $34;
 $i_05_i_i = 0;
 $54 = $34;
 while (1) {
  HEAP32[$0 + 16 + ($i_05_i_i * 56 | 0) >> 2] = 0;
  $call_i_i_i17_i = _malloc($54 << 2) | 0;
  HEAP32[$0 + 16 + ($i_05_i_i * 56 | 0) + 36 >> 2] = $call_i_i_i17_i;
  $inc_i_i = $i_05_i_i + 1 | 0;
  if (($call_i_i_i17_i | 0) == 0) {
   label = 57;
   break;
  }
  if (($inc_i_i | 0) >= 8) {
   break;
  }
  $i_05_i_i = $inc_i_i;
  $54 = HEAP32[$m_maxPathSize_i_i >> 2] | 0;
 }
 if ((label | 0) == 57) {
  return 1;
 }
 HEAP32[$0 + 472 >> 2] = 0;
 $call_i_i19_i = _malloc((HEAP32[$m_maxAgents_i >> 2] | 0) * 608 | 0) | 0;
 $m_agents_i = $0 + 4 | 0;
 HEAP32[$m_agents_i >> 2] = $call_i_i19_i;
 if (($call_i_i19_i | 0) == 0) {
  return 1;
 }
 $call_i_i20_i = _malloc(HEAP32[$m_maxAgents_i >> 2] << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $call_i_i20_i;
 if (($call_i_i20_i | 0) == 0) {
  return 1;
 }
 $call_i_i21_i = _malloc((HEAP32[$m_maxAgents_i >> 2] | 0) * 52 | 0) | 0;
 $m_agentAnims_i = $0 + 12 | 0;
 HEAP32[$m_agentAnims_i >> 2] = $call_i_i21_i;
 if (($call_i_i21_i | 0) == 0) {
  return 1;
 }
 do {
  if ((HEAP32[$m_maxAgents_i >> 2] | 0) > 0) {
   $i57_023_i = 0;
   while (1) {
    $65 = HEAP32[$m_agents_i >> 2] | 0;
    $66 = $65 + ($i57_023_i * 608 | 0) | 0;
    if (($66 | 0) == 0) {
     $74 = $65;
    } else {
     _memset($66 | 0, 0, 608) | 0;
     HEAP32[$66 + 28 >> 2] = 0;
     HEAP32[$66 + 32 >> 2] = 0;
     HEAP32[$66 + 36 >> 2] = 0;
     HEAP32[$66 + 276 >> 2] = 0;
     HEAP32[$66 + 344 >> 2] = 0;
     HEAPF32[$66 + 40 >> 2] = 3.4028234663852886e+38;
     HEAPF32[$66 + 44 >> 2] = 3.4028234663852886e+38;
     HEAPF32[$66 + 48 >> 2] = 3.4028234663852886e+38;
     $74 = HEAP32[$m_agents_i >> 2] | 0;
    }
    HEAP8[$74 + ($i57_023_i * 608 | 0) >> 0] = 0;
    $75 = HEAP32[$m_maxPathResult_i >> 2] | 0;
    $m_path_i26_i = $74 + ($i57_023_i * 608 | 0) + 28 | 0;
    if ((HEAP32[$m_path_i26_i >> 2] | 0) != 0) {
     label = 51;
     break;
    }
    $call_i_i_i30_i = _malloc($75 << 2) | 0;
    HEAP32[$m_path_i26_i >> 2] = $call_i_i_i30_i;
    if (($call_i_i_i30_i | 0) == 0) {
     label = 57;
     break;
    }
    HEAP32[$74 + ($i57_023_i * 608 | 0) + 32 >> 2] = 0;
    HEAP32[$74 + ($i57_023_i * 608 | 0) + 36 >> 2] = $75;
    $inc73_i6 = $i57_023_i + 1 | 0;
    $63 = HEAP32[$m_maxAgents_i >> 2] | 0;
    if (($inc73_i6 | 0) < ($63 | 0)) {
     $i57_023_i = $inc73_i6;
    } else {
     label = 46;
     break;
    }
   }
   if ((label | 0) == 46) {
    if (($63 | 0) <= 0) {
     break;
    }
    $64 = HEAP32[$m_agentAnims_i >> 2] | 0;
    $i75_021_i = 0;
    do {
     HEAP8[$64 + ($i75_021_i * 52 | 0) >> 0] = 0;
     $i75_021_i = $i75_021_i + 1 | 0;
    } while (($i75_021_i | 0) < ($63 | 0));
   } else if ((label | 0) == 51) {
    ___assert_fail(6136, 7256, 217, 1152);
    return 0;
   } else if ((label | 0) == 57) {
    return 1;
   }
  }
 } while (0);
 $call_i_i_i36_i = _malloc(64) | 0;
 if (($call_i_i_i36_i | 0) == 0) {
  HEAP32[$0 + 1e3 >> 2] = 0;
  return 1;
 } else {
  $78 = $call_i_i_i36_i;
  _memset($call_i_i_i36_i | 0, 0, 64) | 0;
  HEAP32[$0 + 1e3 >> 2] = $78;
  __ZN14dtNavMeshQuery4initEPK9dtNavMeshi($78, $1, 512) | 0;
  return 1;
 }
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $buf_i = 0, $ws_i = 0, $tmp = 0, $fend_0119 = 0, $incdec_ptr = 0, $fend_0_lcssa = 0, $sub_ptr_lhs_cast7 = 0, $__l = 0, $arraydecay = 0, $2 = 0, $fend_1117 = 0, $frm_addr_0116 = 0, $to_addr_0115 = 0, $sub_ptr_div = 0, $call_i = 0, $4 = 0, $tobool_i = 0, $n__i = 0, $dst_arraydecay_i = 0, $5 = 0, $wn_addr_058_i = 0, $s_057_i = 0, $cnt_056_i = 0, $n_addr_055_i = 0, $cmp_i = 0, $n_addr_0_wn_addr_0_i = 0, $sub_i = 0, $call_i1 = 0, $n_addr_1_i = 0, $s_1_i = 0, $add15_i = 0, $6 = 0, $7 = 0, $wn_addr_0_lcssa_i = 0, $s_0_lcssa_i = 0, $cnt_0_lcssa_i = 0, $n_addr_0_lcssa_i = 0, $8 = 0, $n_addr_3_i = 0, $cnt_2_i = 0, $s_2_i = 0, $wn_addr_2_i = 0, $call24_i = 0, $incdec_ptr_i = 0, $dec_i = 0, $inc_i = 0, $cnt_3_i = 0, $14 = 0, $frm_addr_182 = 0, $15 = 0, $call_i51 = 0, $call1_i52 = 0, $add_ptr = 0, $incdec_ptr21 = 0, $frm_addr_1_lcssa = 0, $add_ptr27 = 0, $call_i64 = 0, $25 = 0, $26 = 0, $27 = 0, $p_085 = 0, $n_084 = 0, $incdec_ptr48 = 0, $incdec_ptr52 = 0, $fend_287 = 0, $incdec_ptr60 = 0, $fend_2_lcssa = 0, $30 = 0, $31 = 0, $fend_3 = 0, $32 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf_i = sp | 0;
 $ws_i = sp + 256 | 0;
 $tmp = sp + 264 | 0;
 L1 : do {
  if (($frm | 0) == ($frm_end | 0)) {
   HEAP32[$to_nxt >> 2] = $to;
   HEAP32[$frm_nxt >> 2] = $frm;
   $32 = $frm;
  } else {
   $fend_0119 = $frm;
   while (1) {
    $incdec_ptr = $fend_0119 + 4 | 0;
    if ((HEAP32[$fend_0119 >> 2] | 0) == 0) {
     $fend_0_lcssa = $fend_0119;
     break;
    }
    if (($incdec_ptr | 0) == ($frm_end | 0)) {
     $fend_0_lcssa = $frm_end;
     break;
    } else {
     $fend_0119 = $incdec_ptr;
    }
   }
   HEAP32[$to_nxt >> 2] = $to;
   HEAP32[$frm_nxt >> 2] = $frm;
   if (($to | 0) == ($to_end | 0)) {
    $32 = $frm;
   } else {
    $sub_ptr_lhs_cast7 = $to_end;
    $__l = $this + 8 | 0;
    $arraydecay = $tmp | 0;
    $2 = $buf_i | 0;
    $to_addr_0115 = $to;
    $frm_addr_0116 = $frm;
    $fend_1117 = $fend_0_lcssa;
    while (1) {
     $sub_ptr_div = $fend_1117 - $frm_addr_0116 >> 2;
     $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
     $4 = HEAP32[$frm_nxt >> 2] | 0;
     HEAP32[$ws_i >> 2] = $4;
     $tobool_i = ($to_addr_0115 | 0) != 0;
     $n__i = $tobool_i ? $sub_ptr_lhs_cast7 - $to_addr_0115 | 0 : 256;
     $dst_arraydecay_i = $tobool_i ? $to_addr_0115 : $2;
     L10 : do {
      if (($4 | 0) != 0 & ($n__i | 0) != 0) {
       $n_addr_055_i = $n__i;
       $cnt_056_i = 0;
       $s_057_i = $dst_arraydecay_i;
       $wn_addr_058_i = $sub_ptr_div;
       $5 = $4;
       while (1) {
        $cmp_i = $wn_addr_058_i >>> 0 >= $n_addr_055_i >>> 0;
        if (!($cmp_i | $wn_addr_058_i >>> 0 > 32 >>> 0)) {
         $n_addr_0_lcssa_i = $n_addr_055_i;
         $cnt_0_lcssa_i = $cnt_056_i;
         $s_0_lcssa_i = $s_057_i;
         $wn_addr_0_lcssa_i = $wn_addr_058_i;
         $7 = $5;
         label = 13;
         break L10;
        }
        $n_addr_0_wn_addr_0_i = $cmp_i ? $n_addr_055_i : $wn_addr_058_i;
        $sub_i = $wn_addr_058_i - $n_addr_0_wn_addr_0_i | 0;
        $call_i1 = _wcsrtombs($s_057_i, $ws_i, $n_addr_0_wn_addr_0_i) | 0;
        if (($call_i1 | 0) == -1) {
         $cnt_3_i = -1;
         break L10;
        }
        if (($s_057_i | 0) == ($2 | 0)) {
         $s_1_i = $2;
         $n_addr_1_i = $n_addr_055_i;
        } else {
         $s_1_i = $s_057_i + $call_i1 | 0;
         $n_addr_1_i = $n_addr_055_i - $call_i1 | 0;
        }
        $add15_i = $call_i1 + $cnt_056_i | 0;
        $6 = HEAP32[$ws_i >> 2] | 0;
        if (($6 | 0) != 0 & ($n_addr_1_i | 0) != 0) {
         $n_addr_055_i = $n_addr_1_i;
         $cnt_056_i = $add15_i;
         $s_057_i = $s_1_i;
         $wn_addr_058_i = $sub_i;
         $5 = $6;
        } else {
         $n_addr_0_lcssa_i = $n_addr_1_i;
         $cnt_0_lcssa_i = $add15_i;
         $s_0_lcssa_i = $s_1_i;
         $wn_addr_0_lcssa_i = $sub_i;
         $7 = $6;
         label = 13;
         break;
        }
       }
      } else {
       $n_addr_0_lcssa_i = $n__i;
       $cnt_0_lcssa_i = 0;
       $s_0_lcssa_i = $dst_arraydecay_i;
       $wn_addr_0_lcssa_i = $sub_ptr_div;
       $7 = $4;
       label = 13;
      }
     } while (0);
     L18 : do {
      if ((label | 0) == 13) {
       label = 0;
       if (($7 | 0) != 0 & ($n_addr_0_lcssa_i | 0) != 0 & ($wn_addr_0_lcssa_i | 0) != 0) {
        $wn_addr_2_i = $wn_addr_0_lcssa_i;
        $s_2_i = $s_0_lcssa_i;
        $cnt_2_i = $cnt_0_lcssa_i;
        $n_addr_3_i = $n_addr_0_lcssa_i;
        $8 = $7;
        while (1) {
         $call24_i = _wcrtomb($s_2_i, HEAP32[$8 >> 2] | 0) | 0;
         if (($call24_i + 1 | 0) >>> 0 < 2 >>> 0) {
          break;
         }
         $incdec_ptr_i = $8 + 4 | 0;
         HEAP32[$ws_i >> 2] = $incdec_ptr_i;
         $dec_i = $wn_addr_2_i - 1 | 0;
         $inc_i = $cnt_2_i + 1 | 0;
         if (($n_addr_3_i | 0) != ($call24_i | 0) & ($dec_i | 0) != 0) {
          $wn_addr_2_i = $dec_i;
          $s_2_i = $s_2_i + $call24_i | 0;
          $cnt_2_i = $inc_i;
          $n_addr_3_i = $n_addr_3_i - $call24_i | 0;
          $8 = $incdec_ptr_i;
         } else {
          $cnt_3_i = $inc_i;
          break L18;
         }
        }
        if (($call24_i | 0) == 0) {
         HEAP32[$ws_i >> 2] = 0;
         $cnt_3_i = $cnt_2_i;
        } else {
         $cnt_3_i = -1;
        }
       } else {
        $cnt_3_i = $cnt_0_lcssa_i;
       }
      }
     } while (0);
     if ($tobool_i) {
      HEAP32[$frm_nxt >> 2] = HEAP32[$ws_i >> 2];
     }
     if (($call_i | 0) != 0) {
      _uselocale($call_i | 0) | 0;
     }
     if (($cnt_3_i | 0) == (-1 | 0)) {
      label = 24;
      break;
     } else if (($cnt_3_i | 0) == 0) {
      $retval_0 = 1;
      label = 47;
      break;
     }
     $add_ptr27 = (HEAP32[$to_nxt >> 2] | 0) + $cnt_3_i | 0;
     HEAP32[$to_nxt >> 2] = $add_ptr27;
     if (($add_ptr27 | 0) == ($to_end | 0)) {
      label = 45;
      break;
     }
     if (($fend_1117 | 0) == ($frm_end | 0)) {
      $fend_3 = $frm_end;
      $31 = HEAP32[$frm_nxt >> 2] | 0;
      $30 = $add_ptr27;
     } else {
      $call_i64 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
      HEAP8[$arraydecay >> 0] = 0;
      if (($call_i64 | 0) != 0) {
       _uselocale($call_i64 | 0) | 0;
      }
      $25 = HEAP32[$to_nxt >> 2] | 0;
      if (($25 | 0) == ($to_end | 0)) {
       $retval_0 = 1;
       label = 47;
       break;
      } else {
       $n_084 = 0;
       $p_085 = $arraydecay;
       $27 = $25;
       $26 = 0;
      }
      while (1) {
       HEAP32[$to_nxt >> 2] = $27 + 1;
       HEAP8[$27 >> 0] = $26;
       if (($n_084 | 0) == 0) {
        break;
       }
       $incdec_ptr48 = $p_085 + 1 | 0;
       $n_084 = $n_084 - 1 | 0;
       $p_085 = $incdec_ptr48;
       $27 = HEAP32[$to_nxt >> 2] | 0;
       $26 = HEAP8[$incdec_ptr48 >> 0] | 0;
      }
      $incdec_ptr52 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
      HEAP32[$frm_nxt >> 2] = $incdec_ptr52;
      L44 : do {
       if (($incdec_ptr52 | 0) == ($frm_end | 0)) {
        $fend_2_lcssa = $frm_end;
       } else {
        $fend_287 = $incdec_ptr52;
        while (1) {
         $incdec_ptr60 = $fend_287 + 4 | 0;
         if ((HEAP32[$fend_287 >> 2] | 0) == 0) {
          $fend_2_lcssa = $fend_287;
          break L44;
         }
         if (($incdec_ptr60 | 0) == ($frm_end | 0)) {
          $fend_2_lcssa = $frm_end;
          break;
         } else {
          $fend_287 = $incdec_ptr60;
         }
        }
       }
      } while (0);
      $fend_3 = $fend_2_lcssa;
      $31 = $incdec_ptr52;
      $30 = HEAP32[$to_nxt >> 2] | 0;
     }
     if (($31 | 0) == ($frm_end | 0) | ($30 | 0) == ($to_end | 0)) {
      $32 = $31;
      break L1;
     } else {
      $to_addr_0115 = $30;
      $frm_addr_0116 = $31;
      $fend_1117 = $fend_3;
     }
    }
    if ((label | 0) == 24) {
     HEAP32[$to_nxt >> 2] = $to_addr_0115;
     L52 : do {
      if (($frm_addr_0116 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
       $frm_addr_1_lcssa = $frm_addr_0116;
      } else {
       $frm_addr_182 = $frm_addr_0116;
       $14 = $to_addr_0115;
       while (1) {
        $15 = HEAP32[$frm_addr_182 >> 2] | 0;
        $call_i51 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
        $call1_i52 = _wcrtomb($14, $15) | 0;
        if (($call_i51 | 0) != 0) {
         _uselocale($call_i51 | 0) | 0;
        }
        if (($call1_i52 | 0) == -1) {
         $frm_addr_1_lcssa = $frm_addr_182;
         break L52;
        }
        $add_ptr = (HEAP32[$to_nxt >> 2] | 0) + $call1_i52 | 0;
        HEAP32[$to_nxt >> 2] = $add_ptr;
        $incdec_ptr21 = $frm_addr_182 + 4 | 0;
        if (($incdec_ptr21 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
         $frm_addr_1_lcssa = $incdec_ptr21;
         break;
        } else {
         $frm_addr_182 = $incdec_ptr21;
         $14 = $add_ptr;
        }
       }
      }
     } while (0);
     HEAP32[$frm_nxt >> 2] = $frm_addr_1_lcssa;
     $retval_0 = 2;
     STACKTOP = sp;
     return $retval_0 | 0;
    } else if ((label | 0) == 45) {
     $32 = HEAP32[$frm_nxt >> 2] | 0;
     break;
    } else if ((label | 0) == 47) {
     STACKTOP = sp;
     return $retval_0 | 0;
    }
   }
  }
 } while (0);
 $retval_0 = ($32 | 0) != ($frm_end | 0) | 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__neg = 0, $__first__i_i_i = 0, $__second__i_i_i = 0, $add_ptr = 0, $__locale_2_i_i26 = 0, $1 = 0, $2 = 0, $sub_i_i_i = 0, $10 = 0, $11 = 0, $exception_i_i_i = 0, $13 = 0, $14 = 0, $15 = 0, $__size__i3_i = 0, $_pre37 = 0, $call_i12 = 0, $21 = 0, $tobool_i_i3 = 0, $__cap_0_i = 0, $__sz_0_i = 0, $25 = 0, $add16_i = 0, $__p_0_sum_pre_phi_i = 0, $call12_pn_i = 0, $call_i1516 = 0, $27 = 0, $28 = 0, $add_ptr1732 = 0, $__w_034 = 0, $incdec_ptr = 0, $__w_0_lcssa = 0, $sub_ptr_rhs_cast_i_i_i = 0, $30 = 0, $32 = 0, $cond_i40_i = 0, $34 = 0, $cond_i31_i = 0, $sub_ptr_div_i_i_i = 0, $35 = 0, $cond_i26_i = 0, $add_ptr_i = 0, $41 = 0, $__p_034_i = 0, $__first_addr_033_i = 0, $__p_0_lcssa_i = 0, $add9_i = 0, $__sbuf__i_i_i = 0, $44 = 0, $45 = 0, $retval_0_i_i_i_i = 0, $50 = 0, $51 = 0, $retval_0_i_i12_i_i = 0, $59 = 0, $64 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 440 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__wbuf = sp + 16 | 0;
 $__wb = sp + 416 | 0;
 $__wn = sp + 424 | 0;
 $__neg = sp + 432 | 0;
 $__first__i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i >> 2] = $__wbuf;
 $__second__i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i >> 2] = 182;
 $add_ptr = $__wbuf + 400 | 0;
 $__locale_2_i_i26 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i26;
 $2 = $__locale_2_i_i26 + 4 | 0;
 tempValue = HEAP32[$2 >> 2] | 0, HEAP32[$2 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $10 = HEAP32[$__locale_2_i_i26 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i26 + 12 >> 2] | 0) - $10 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $11 = HEAP32[$10 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($11 | 0) != 0) {
   $13 = $11;
   HEAP8[$__neg >> 0] = 0;
   $14 = $__e | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   do {
    if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $15, $__intl, $1, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $13, $__wb, $__wn, $add_ptr) | 0) {
     $__size__i3_i = $__v;
     if ((HEAP8[$__size__i3_i >> 0] & 1) == 0) {
      HEAP32[$__v + 4 >> 2] = 0;
      HEAP8[$__size__i3_i >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     $_pre37 = $11;
     if ((HEAP8[$__neg >> 0] | 0) != 0) {
      $call_i12 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre37 >> 2] | 0) + 44 >> 2] & 63]($13, 45) | 0;
      $21 = HEAP8[$__size__i3_i >> 0] | 0;
      $tobool_i_i3 = ($21 & 1) != 0;
      if ($tobool_i_i3) {
       $__sz_0_i = HEAP32[$__v + 4 >> 2] | 0;
       $__cap_0_i = (HEAP32[$__v >> 2] & -2) - 1 | 0;
      } else {
       $__sz_0_i = ($21 & 255) >>> 1;
       $__cap_0_i = 1;
      }
      if (($__sz_0_i | 0) == ($__cap_0_i | 0)) {
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__v, $__cap_0_i, 1, $__cap_0_i, $__cap_0_i, 0, 0);
       if ((HEAP8[$__size__i3_i >> 0] & 1) == 0) {
        label = 21;
       } else {
        label = 22;
       }
      } else {
       if ($tobool_i_i3) {
        label = 22;
       } else {
        label = 21;
       }
      }
      if ((label | 0) == 21) {
       HEAP8[$__size__i3_i >> 0] = ($__sz_0_i << 1) + 2;
       $call12_pn_i = $__v + 4 | 0;
       $__p_0_sum_pre_phi_i = $__sz_0_i + 1 | 0;
      } else if ((label | 0) == 22) {
       $25 = HEAP32[$__v + 8 >> 2] | 0;
       $add16_i = $__sz_0_i + 1 | 0;
       HEAP32[$__v + 4 >> 2] = $add16_i;
       $call12_pn_i = $25;
       $__p_0_sum_pre_phi_i = $add16_i;
      }
      HEAP32[$call12_pn_i + ($__sz_0_i << 2) >> 2] = $call_i12;
      HEAP32[$call12_pn_i + ($__p_0_sum_pre_phi_i << 2) >> 2] = 0;
     }
     $call_i1516 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre37 >> 2] | 0) + 44 >> 2] & 63]($13, 48) | 0;
     $27 = HEAP32[$__first__i_i_i >> 2] | 0;
     $28 = HEAP32[$__wn >> 2] | 0;
     $add_ptr1732 = $28 - 4 | 0;
     L31 : do {
      if ($27 >>> 0 < $add_ptr1732 >>> 0) {
       $__w_034 = $27;
       while (1) {
        $incdec_ptr = $__w_034 + 4 | 0;
        if ((HEAP32[$__w_034 >> 2] | 0) != ($call_i1516 | 0)) {
         $__w_0_lcssa = $__w_034;
         break L31;
        }
        if ($incdec_ptr >>> 0 < $add_ptr1732 >>> 0) {
         $__w_034 = $incdec_ptr;
        } else {
         $__w_0_lcssa = $incdec_ptr;
         break;
        }
       }
      } else {
       $__w_0_lcssa = $27;
      }
     } while (0);
     $sub_ptr_rhs_cast_i_i_i = $__w_0_lcssa;
     $30 = HEAP8[$__size__i3_i >> 0] | 0;
     if (($30 & 1) == 0) {
      $cond_i31_i = 1;
      $34 = $30;
      $cond_i40_i = ($30 & 255) >>> 1;
     } else {
      $32 = HEAP32[$__v >> 2] | 0;
      $cond_i31_i = ($32 & -2) - 1 | 0;
      $34 = $32 & 255;
      $cond_i40_i = HEAP32[$__v + 4 >> 2] | 0;
     }
     $sub_ptr_div_i_i_i = $28 - $sub_ptr_rhs_cast_i_i_i >> 2;
     if (($sub_ptr_div_i_i_i | 0) != 0) {
      if (($cond_i31_i - $cond_i40_i | 0) >>> 0 < $sub_ptr_div_i_i_i >>> 0) {
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__v, $cond_i31_i, $cond_i40_i + $sub_ptr_div_i_i_i - $cond_i31_i | 0, $cond_i40_i, $cond_i40_i, 0, 0);
       $35 = HEAP8[$__size__i3_i >> 0] | 0;
      } else {
       $35 = $34;
      }
      if (($35 & 1) == 0) {
       $cond_i26_i = $__v + 4 | 0;
      } else {
       $cond_i26_i = HEAP32[$__v + 8 >> 2] | 0;
      }
      $add_ptr_i = $cond_i26_i + ($cond_i40_i << 2) | 0;
      if (($__w_0_lcssa | 0) == ($28 | 0)) {
       $__p_0_lcssa_i = $add_ptr_i;
      } else {
       $41 = $cond_i40_i + (($add_ptr1732 - $sub_ptr_rhs_cast_i_i_i | 0) >>> 2) + 1 | 0;
       $__first_addr_033_i = $__w_0_lcssa;
       $__p_034_i = $add_ptr_i;
       while (1) {
        HEAP32[$__p_034_i >> 2] = HEAP32[$__first_addr_033_i >> 2];
        $__first_addr_033_i = $__first_addr_033_i + 4 | 0;
        if (($__first_addr_033_i | 0) == ($28 | 0)) {
         break;
        } else {
         $__p_034_i = $__p_034_i + 4 | 0;
        }
       }
       $__p_0_lcssa_i = $cond_i26_i + ($41 << 2) | 0;
      }
      HEAP32[$__p_0_lcssa_i >> 2] = 0;
      $add9_i = $cond_i40_i + $sub_ptr_div_i_i_i | 0;
      if ((HEAP8[$__size__i3_i >> 0] & 1) == 0) {
       HEAP8[$__size__i3_i >> 0] = $add9_i << 1;
       break;
      } else {
       HEAP32[$__v + 4 >> 2] = $add9_i;
       break;
      }
     }
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $44 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($44 | 0) == 0) {
     $50 = 1;
    } else {
     $45 = HEAP32[$44 + 12 >> 2] | 0;
     if (($45 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) {
      $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 255]($44) | 0;
     } else {
      $retval_0_i_i_i_i = HEAP32[$45 >> 2] | 0;
     }
     if (($retval_0_i_i_i_i | 0) == -1) {
      HEAP32[$__sbuf__i_i_i >> 2] = 0;
      $50 = 1;
      break;
     } else {
      $50 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
      break;
     }
    }
   } while (0);
   do {
    if (($15 | 0) == 0) {
     label = 58;
    } else {
     $51 = HEAP32[$15 + 12 >> 2] | 0;
     if (($51 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) {
      $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0;
     } else {
      $retval_0_i_i12_i_i = HEAP32[$51 >> 2] | 0;
     }
     if (($retval_0_i_i12_i_i | 0) == -1) {
      HEAP32[$14 >> 2] = 0;
      label = 58;
      break;
     } else {
      if ($50) {
       break;
      } else {
       label = 60;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 58) {
    if ($50) {
     label = 60;
    }
   }
   if ((label | 0) == 60) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i_i_i >> 2];
   $59 = $__locale_2_i_i26 + 4 | 0;
   if (((tempValue = HEAP32[$59 >> 2] | 0, HEAP32[$59 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i26 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i26);
   }
   $64 = HEAP32[$__first__i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i >> 2] = 0;
   if (($64 | 0) == 0) {
    $$etemp$3$0 = 400;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i >> 2] & 511]($64);
   $$etemp$3$0 = 400;
   $$etemp$3$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZL8diagonaliiiPKiPi($i, $j, $n, $verts, $indices) {
 $i = $i | 0;
 $j = $j | 0;
 $n = $n | 0;
 $verts = $verts | 0;
 $indices = $indices | 0;
 var $mul_i = 0, $mul4_i = 0, $add_i_i = 0, $mul8_i = 0, $mul13_i = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $mul_i_i57_i = 0, $8 = 0, $9 = 0, $cmp_i63_i = 0, $10 = 0, $sub_i_i42_i = 0, $mul_i_i46_i = 0, $11 = 0, $mul_i_i24_i = 0, $12 = 0, $arrayidx2_i37_i = 0, $cmp_i110_i_i = 0, $k_063_i = 0, $add_i_i14 = 0, $cmp_i_i15 = 0, $add__i_i16 = 0, $mul14_i = 0, $mul18_i = 0, $arrayidx19_i = 0, $15 = 0, $19 = 0, $21 = 0, $arrayidx15_idx_val_i = 0, $mul_i_i_i_i_i = 0, $sub10_i_i_i_i_i = 0, $mul11_i_i_i_i_i = 0, $23 = 0, $mul_i_i89_i_i_i = 0, $mul11_i_i93_i_i_i = 0, $sub_i_i75_i_i_i = 0, $mul_i_i79_i_i_i = 0, $sub10_i_i82_i_i_i = 0, $mul11_i_i83_i_i_i = 0, $mul_i_i69_i_i_i = 0, $mul11_i_i73_i_i_i = 0, $d_idx28_val_i_i = 0, $sub_i_i_i45_i_i = 0, $sub10_i_i_i49_i_i = 0, $cmp14_i_i_i = 0, $not_cmp11_i_i_i = 0, $cmp29_i_i_i = 0, $not_cmp25_i_i_i = 0, $24 = 0, label = 0;
 $mul_i = HEAP32[$indices + ($i << 2) >> 2] << 2 & 1073741820;
 $mul4_i = HEAP32[$indices + ($j << 2) >> 2] << 2 & 1073741820;
 $add_i_i = $i + 1 | 0;
 $mul8_i = HEAP32[$indices + ((($add_i_i | 0) < ($n | 0) ? $add_i_i : 0) << 2) >> 2] << 2 & 1073741820;
 $mul13_i = HEAP32[$indices + ((($i | 0) > 0 ? $i : $n) - 1 << 2) >> 2] << 2 & 1073741820;
 $4 = HEAP32[$verts + ($mul_i << 2) >> 2] | 0;
 $5 = HEAP32[$verts + ($mul13_i << 2) >> 2] | 0;
 $6 = HEAP32[$verts + (($mul8_i | 2) << 2) >> 2] | 0;
 $7 = HEAP32[$verts + (($mul13_i | 2) << 2) >> 2] | 0;
 $mul_i_i57_i = Math_imul($6 - $7 | 0, $4 - $5 | 0) | 0;
 $8 = HEAP32[$verts + ($mul8_i << 2) >> 2] | 0;
 $9 = HEAP32[$verts + (($mul_i | 2) << 2) >> 2] | 0;
 $cmp_i63_i = ($mul_i_i57_i - (Math_imul($9 - $7 | 0, $8 - $5 | 0) | 0) | 0) < 1;
 $10 = HEAP32[$verts + ($mul4_i << 2) >> 2] | 0;
 $sub_i_i42_i = $10 - $4 | 0;
 if ($cmp_i63_i) {
  $mul_i_i46_i = Math_imul($sub_i_i42_i, $7 - $9 | 0) | 0;
  $11 = HEAP32[$verts + (($mul4_i | 2) << 2) >> 2] | 0;
  if (($mul_i_i46_i - (Math_imul($11 - $9 | 0, $5 - $4 | 0) | 0) | 0) >= 0) {
   $24 = 0;
   return $24 | 0;
  }
  if (((Math_imul($6 - $11 | 0, $4 - $10 | 0) | 0) - (Math_imul($9 - $11 | 0, $8 - $10 | 0) | 0) | 0) >= 0) {
   $24 = 0;
   return $24 | 0;
  }
 } else {
  $mul_i_i24_i = Math_imul($sub_i_i42_i, $6 - $9 | 0) | 0;
  $12 = HEAP32[$verts + (($mul4_i | 2) << 2) >> 2] | 0;
  if (($mul_i_i24_i - (Math_imul($12 - $9 | 0, $8 - $4 | 0) | 0) | 0) < 1) {
   if (((Math_imul($7 - $12 | 0, $4 - $10 | 0) | 0) - (Math_imul($9 - $12 | 0, $5 - $10 | 0) | 0) | 0) <= 0) {
    $24 = 0;
    return $24 | 0;
   }
  }
 }
 if (($n | 0) <= 0) {
  $24 = 1;
  return $24 | 0;
 }
 $arrayidx2_i37_i = $verts + (($mul4_i | 2) << 2) | 0;
 $cmp_i110_i_i = ($4 | 0) == ($10 | 0);
 $k_063_i = 0;
 L14 : while (1) {
  $add_i_i14 = $k_063_i + 1 | 0;
  $cmp_i_i15 = ($add_i_i14 | 0) < ($n | 0);
  $add__i_i16 = $cmp_i_i15 ? $add_i_i14 : 0;
  do {
   if (!(($k_063_i | 0) == ($i | 0) | ($add__i_i16 | 0) == ($i | 0) | ($k_063_i | 0) == ($j | 0) | ($add__i_i16 | 0) == ($j | 0))) {
    $mul14_i = HEAP32[$indices + ($k_063_i << 2) >> 2] << 2 & 1073741820;
    $mul18_i = HEAP32[$indices + ($add__i_i16 << 2) >> 2] << 2 & 1073741820;
    $arrayidx19_i = $verts + ($mul18_i << 2) | 0;
    $15 = HEAP32[$verts + ($mul14_i << 2) >> 2] | 0;
    if (($4 | 0) == ($15 | 0)) {
     if (($9 | 0) == (HEAP32[$verts + (($mul14_i | 2) << 2) >> 2] | 0)) {
      break;
     }
    }
    if (($10 | 0) == ($15 | 0)) {
     if ((HEAP32[$arrayidx2_i37_i >> 2] | 0) == (HEAP32[$verts + (($mul14_i | 2) << 2) >> 2] | 0)) {
      break;
     }
    }
    $19 = HEAP32[$arrayidx19_i >> 2] | 0;
    if (($19 | 0) == ($4 | 0)) {
     if (($9 | 0) == (HEAP32[$verts + (($mul18_i | 2) << 2) >> 2] | 0)) {
      break;
     }
    }
    $21 = HEAP32[$arrayidx2_i37_i >> 2] | 0;
    if (($10 | 0) == ($19 | 0)) {
     if (($21 | 0) == (HEAP32[$verts + (($mul18_i | 2) << 2) >> 2] | 0)) {
      break;
     }
    }
    $arrayidx15_idx_val_i = HEAP32[$verts + (($mul14_i | 2) << 2) >> 2] | 0;
    $mul_i_i_i_i_i = Math_imul($arrayidx15_idx_val_i - $9 | 0, $sub_i_i42_i) | 0;
    $sub10_i_i_i_i_i = $21 - $9 | 0;
    $mul11_i_i_i_i_i = Math_imul($sub10_i_i_i_i_i, $15 - $4 | 0) | 0;
    do {
     if (($mul_i_i_i_i_i | 0) == ($mul11_i_i_i_i_i | 0)) {
      if ($cmp_i110_i_i) {
       if (!(($9 | 0) > ($arrayidx15_idx_val_i | 0) | ($21 | 0) < ($arrayidx15_idx_val_i | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($21 | 0) <= ($arrayidx15_idx_val_i | 0) & ($9 | 0) >= ($arrayidx15_idx_val_i | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      } else {
       if (!(($4 | 0) > ($15 | 0) | ($10 | 0) < ($15 | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($10 | 0) <= ($15 | 0) & ($4 | 0) >= ($15 | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      }
     } else {
      $23 = HEAP32[$verts + (($mul18_i | 2) << 2) >> 2] | 0;
      $mul_i_i89_i_i_i = Math_imul($23 - $9 | 0, $sub_i_i42_i) | 0;
      $mul11_i_i93_i_i_i = Math_imul($sub10_i_i_i_i_i, $19 - $4 | 0) | 0;
      if (($mul_i_i89_i_i_i | 0) != ($mul11_i_i93_i_i_i | 0)) {
       $sub_i_i75_i_i_i = $19 - $15 | 0;
       $mul_i_i79_i_i_i = Math_imul($9 - $arrayidx15_idx_val_i | 0, $sub_i_i75_i_i_i) | 0;
       $sub10_i_i82_i_i_i = $23 - $arrayidx15_idx_val_i | 0;
       $mul11_i_i83_i_i_i = Math_imul($sub10_i_i82_i_i_i, $4 - $15 | 0) | 0;
       if (($mul_i_i79_i_i_i | 0) != ($mul11_i_i83_i_i_i | 0)) {
        $mul_i_i69_i_i_i = Math_imul($21 - $arrayidx15_idx_val_i | 0, $sub_i_i75_i_i_i) | 0;
        $mul11_i_i73_i_i_i = Math_imul($sub10_i_i82_i_i_i, $10 - $15 | 0) | 0;
        if (($mul_i_i69_i_i_i | 0) != ($mul11_i_i73_i_i_i | 0)) {
         if (($mul_i_i_i_i_i - $mul11_i_i_i_i_i | 0) < 0 ^ ($mul_i_i89_i_i_i - $mul11_i_i93_i_i_i | 0) < 0) {
          if (($mul_i_i79_i_i_i - $mul11_i_i83_i_i_i | 0) < 0 ^ ($mul_i_i69_i_i_i - $mul11_i_i73_i_i_i | 0) < 0) {
           $24 = 0;
           label = 47;
           break L14;
          }
         }
        }
       }
      }
     }
    } while (0);
    $d_idx28_val_i_i = HEAP32[$verts + (($mul18_i | 2) << 2) >> 2] | 0;
    do {
     if ((Math_imul($d_idx28_val_i_i - $9 | 0, $sub_i_i42_i) | 0) == (Math_imul($sub10_i_i_i_i_i, $19 - $4 | 0) | 0)) {
      if ($cmp_i110_i_i) {
       if (!(($d_idx28_val_i_i | 0) < ($9 | 0) | ($d_idx28_val_i_i | 0) > ($21 | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($d_idx28_val_i_i | 0) >= ($21 | 0) & ($d_idx28_val_i_i | 0) <= ($9 | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      } else {
       if (!(($19 | 0) < ($4 | 0) | ($19 | 0) > ($10 | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($19 | 0) >= ($10 | 0) & ($19 | 0) <= ($4 | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      }
     }
    } while (0);
    $sub_i_i_i45_i_i = $19 - $15 | 0;
    $sub10_i_i_i49_i_i = $d_idx28_val_i_i - $arrayidx15_idx_val_i | 0;
    do {
     if ((Math_imul($9 - $arrayidx15_idx_val_i | 0, $sub_i_i_i45_i_i) | 0) == (Math_imul($sub10_i_i_i49_i_i, $4 - $15 | 0) | 0)) {
      if (($19 | 0) == ($15 | 0)) {
       if (!(($9 | 0) < ($arrayidx15_idx_val_i | 0) | ($d_idx28_val_i_i | 0) < ($9 | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($d_idx28_val_i_i | 0) <= ($9 | 0) & ($9 | 0) <= ($arrayidx15_idx_val_i | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      } else {
       if (!(($4 | 0) < ($15 | 0) | ($19 | 0) < ($4 | 0))) {
        $24 = 0;
        label = 47;
        break L14;
       }
       if (($19 | 0) <= ($4 | 0) & ($4 | 0) <= ($15 | 0)) {
        $24 = 0;
        label = 47;
        break L14;
       } else {
        break;
       }
      }
     }
    } while (0);
    if ((Math_imul($21 - $arrayidx15_idx_val_i | 0, $sub_i_i_i45_i_i) | 0) == (Math_imul($sub10_i_i_i49_i_i, $10 - $15 | 0) | 0)) {
     if (($19 | 0) == ($15 | 0)) {
      if (!(($21 | 0) < ($arrayidx15_idx_val_i | 0) | ($d_idx28_val_i_i | 0) < ($21 | 0))) {
       $24 = 0;
       label = 47;
       break L14;
      }
      $cmp29_i_i_i = ($d_idx28_val_i_i | 0) <= ($21 | 0);
      $not_cmp25_i_i_i = ($21 | 0) <= ($arrayidx15_idx_val_i | 0);
      if ($cmp29_i_i_i & $not_cmp25_i_i_i | $cmp_i_i15 ^ 1) {
       $24 = $cmp29_i_i_i & $not_cmp25_i_i_i ^ 1;
       label = 47;
       break L14;
      } else {
       $k_063_i = $add_i_i14;
       continue L14;
      }
     } else {
      if (!(($10 | 0) < ($15 | 0) | ($19 | 0) < ($10 | 0))) {
       $24 = 0;
       label = 47;
       break L14;
      }
      $cmp14_i_i_i = ($19 | 0) <= ($10 | 0);
      $not_cmp11_i_i_i = ($10 | 0) <= ($15 | 0);
      if ($cmp14_i_i_i & $not_cmp11_i_i_i | $cmp_i_i15 ^ 1) {
       $24 = $cmp14_i_i_i & $not_cmp11_i_i_i ^ 1;
       label = 47;
       break L14;
      } else {
       $k_063_i = $add_i_i14;
       continue L14;
      }
     }
    }
   }
  } while (0);
  if ($cmp_i_i15) {
   $k_063_i = $add_i_i14;
  } else {
   $24 = 1;
   label = 47;
   break;
  }
 }
 if ((label | 0) == 47) {
  return $24 | 0;
 }
 return 0;
}
function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $call3 = 0, $cond = 0, $0 = 0, $1 = 0, $and_i = 0, $add_ptr_sum = 0, $add_ptr_i = 0, $2 = 0, $3 = 0, $and2_i = 0, $add_ptr_sum2122_i = 0, $4 = 0, $5 = 0, $sub_i = 0, $add_i = 0, $sub40_i = 0, $add58_i = 0, $sub62_i = 0, $18 = 0, $20 = 0, $storemerge18_i = 0, $storemerge_i = 0, $add105_i = 0, $sub110_i = 0, $shr_i = 0, $23 = 0, $25 = 0, $26 = 0, $fd138_i = 0, $fd148_pre_phi_i = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $bk164_i = 0, $fd167_i = 0, $42 = 0, $43 = 0, $arrayidx182_i = 0, $44 = 0, $RP_0_i = 0, $R_0_i = 0, $arrayidx186_i = 0, $45 = 0, $arrayidx190_i = 0, $46 = 0, $R_1_i = 0, $49 = 0, $arrayidx206_i = 0, $arrayidx226_i = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $67 = 0, $call12 = 0, $69 = 0, $sub = 0, $mem_0 = 0;
 if (($oldmem | 0) == 0) {
  $mem_0 = _malloc($bytes) | 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 > 4294967231 >>> 0) {
  $call3 = ___errno_location() | 0;
  HEAP32[$call3 >> 2] = 12;
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 < 11 >>> 0) {
  $cond = 16;
 } else {
  $cond = $bytes + 11 & -8;
 }
 $0 = $oldmem - 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $and_i = $1 & -8;
 $add_ptr_sum = $and_i - 8 | 0;
 $add_ptr_i = $oldmem + $add_ptr_sum | 0;
 $2 = $add_ptr_i;
 $3 = HEAP32[4956] | 0;
 $and2_i = $1 & 3;
 if (!(($and2_i | 0) != 1 & ($oldmem - 8 | 0) >>> 0 >= $3 >>> 0 & ($add_ptr_sum | 0) > -8)) {
  _abort();
  return 0;
 }
 $add_ptr_sum2122_i = $and_i | 4;
 $4 = $oldmem + ($add_ptr_sum2122_i - 8) | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 & 1 | 0) == 0) {
  _abort();
  return 0;
 }
 do {
  if (($and2_i | 0) == 0) {
   if (!($cond >>> 0 < 256 >>> 0 | $and_i >>> 0 < ($cond | 4) >>> 0)) {
    if (!(($and_i - $cond | 0) >>> 0 > HEAP32[4894] << 1 >>> 0)) {
     $mem_0 = $oldmem;
     return $mem_0 | 0;
    }
   }
  } else {
   if (!($and_i >>> 0 < $cond >>> 0)) {
    $sub_i = $and_i - $cond | 0;
    if (!($sub_i >>> 0 > 15 >>> 0)) {
     $mem_0 = $oldmem;
     return $mem_0 | 0;
    }
    HEAP32[$0 >> 2] = $1 & 1 | $cond | 2;
    HEAP32[$oldmem + (($cond | 4) - 8) >> 2] = $sub_i | 3;
    HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 1;
    _dispose_chunk($oldmem + ($cond - 8) | 0, $sub_i);
    $mem_0 = $oldmem;
    return $mem_0 | 0;
   }
   if (($2 | 0) == (HEAP32[4958] | 0)) {
    $add_i = (HEAP32[4955] | 0) + $and_i | 0;
    if (!($add_i >>> 0 > $cond >>> 0)) {
     break;
    }
    $sub40_i = $add_i - $cond | 0;
    HEAP32[$0 >> 2] = $1 & 1 | $cond | 2;
    HEAP32[$oldmem + (($cond | 4) - 8) >> 2] = $sub40_i | 1;
    HEAP32[4958] = $oldmem + ($cond - 8);
    HEAP32[4955] = $sub40_i;
    $mem_0 = $oldmem;
    return $mem_0 | 0;
   }
   if (($2 | 0) == (HEAP32[4957] | 0)) {
    $add58_i = (HEAP32[4954] | 0) + $and_i | 0;
    if ($add58_i >>> 0 < $cond >>> 0) {
     break;
    }
    $sub62_i = $add58_i - $cond | 0;
    if ($sub62_i >>> 0 > 15 >>> 0) {
     HEAP32[$0 >> 2] = $1 & 1 | $cond | 2;
     HEAP32[$oldmem + (($cond | 4) - 8) >> 2] = $sub62_i | 1;
     HEAP32[$oldmem + ($add58_i - 8) >> 2] = $sub62_i;
     $18 = $oldmem + ($add58_i - 4) | 0;
     HEAP32[$18 >> 2] = HEAP32[$18 >> 2] & -2;
     $storemerge_i = $oldmem + ($cond - 8) | 0;
     $storemerge18_i = $sub62_i;
    } else {
     HEAP32[$0 >> 2] = $1 & 1 | $add58_i | 2;
     $20 = $oldmem + ($add58_i - 4) | 0;
     HEAP32[$20 >> 2] = HEAP32[$20 >> 2] | 1;
     $storemerge_i = 0;
     $storemerge18_i = 0;
    }
    HEAP32[4954] = $storemerge18_i;
    HEAP32[4957] = $storemerge_i;
    $mem_0 = $oldmem;
    return $mem_0 | 0;
   }
   if (($5 & 2 | 0) == 0) {
    $add105_i = ($5 & -8) + $and_i | 0;
    if (!($add105_i >>> 0 < $cond >>> 0)) {
     $sub110_i = $add105_i - $cond | 0;
     $shr_i = $5 >>> 3;
     do {
      if ($5 >>> 0 < 256 >>> 0) {
       $23 = HEAP32[$oldmem + $and_i >> 2] | 0;
       $25 = HEAP32[$oldmem + $add_ptr_sum2122_i >> 2] | 0;
       $26 = 19848 + ($shr_i << 1 << 2) | 0;
       if (($23 | 0) != ($26 | 0)) {
        if ($23 >>> 0 < $3 >>> 0) {
         _abort();
         return 0;
        }
        if ((HEAP32[$23 + 12 >> 2] | 0) != ($2 | 0)) {
         _abort();
         return 0;
        }
       }
       if (($25 | 0) == ($23 | 0)) {
        HEAP32[4952] = HEAP32[4952] & ~(1 << $shr_i);
        break;
       }
       if (($25 | 0) == ($26 | 0)) {
        $fd148_pre_phi_i = $25 + 8 | 0;
       } else {
        if ($25 >>> 0 < $3 >>> 0) {
         _abort();
         return 0;
        }
        $fd138_i = $25 + 8 | 0;
        if ((HEAP32[$fd138_i >> 2] | 0) == ($2 | 0)) {
         $fd148_pre_phi_i = $fd138_i;
        } else {
         _abort();
         return 0;
        }
       }
       HEAP32[$23 + 12 >> 2] = $25;
       HEAP32[$fd148_pre_phi_i >> 2] = $23;
      } else {
       $32 = $add_ptr_i;
       $34 = HEAP32[$oldmem + ($and_i + 16) >> 2] | 0;
       $36 = HEAP32[$oldmem + $add_ptr_sum2122_i >> 2] | 0;
       do {
        if (($36 | 0) == ($32 | 0)) {
         $42 = $oldmem + ($and_i + 12) | 0;
         $43 = HEAP32[$42 >> 2] | 0;
         if (($43 | 0) == 0) {
          $arrayidx182_i = $oldmem + ($and_i + 8) | 0;
          $44 = HEAP32[$arrayidx182_i >> 2] | 0;
          if (($44 | 0) == 0) {
           $R_1_i = 0;
           break;
          } else {
           $R_0_i = $44;
           $RP_0_i = $arrayidx182_i;
          }
         } else {
          $R_0_i = $43;
          $RP_0_i = $42;
         }
         while (1) {
          $arrayidx186_i = $R_0_i + 20 | 0;
          $45 = HEAP32[$arrayidx186_i >> 2] | 0;
          if (($45 | 0) != 0) {
           $R_0_i = $45;
           $RP_0_i = $arrayidx186_i;
           continue;
          }
          $arrayidx190_i = $R_0_i + 16 | 0;
          $46 = HEAP32[$arrayidx190_i >> 2] | 0;
          if (($46 | 0) == 0) {
           break;
          } else {
           $R_0_i = $46;
           $RP_0_i = $arrayidx190_i;
          }
         }
         if ($RP_0_i >>> 0 < $3 >>> 0) {
          _abort();
          return 0;
         } else {
          HEAP32[$RP_0_i >> 2] = 0;
          $R_1_i = $R_0_i;
          break;
         }
        } else {
         $38 = HEAP32[$oldmem + $and_i >> 2] | 0;
         if ($38 >>> 0 < $3 >>> 0) {
          _abort();
          return 0;
         }
         $bk164_i = $38 + 12 | 0;
         if ((HEAP32[$bk164_i >> 2] | 0) != ($32 | 0)) {
          _abort();
          return 0;
         }
         $fd167_i = $36 + 8 | 0;
         if ((HEAP32[$fd167_i >> 2] | 0) == ($32 | 0)) {
          HEAP32[$bk164_i >> 2] = $36;
          HEAP32[$fd167_i >> 2] = $38;
          $R_1_i = $36;
          break;
         } else {
          _abort();
          return 0;
         }
        }
       } while (0);
       if (($34 | 0) != 0) {
        $49 = HEAP32[$oldmem + ($and_i + 20) >> 2] | 0;
        $arrayidx206_i = 20112 + ($49 << 2) | 0;
        if (($32 | 0) == (HEAP32[$arrayidx206_i >> 2] | 0)) {
         HEAP32[$arrayidx206_i >> 2] = $R_1_i;
         if (($R_1_i | 0) == 0) {
          HEAP32[4953] = HEAP32[4953] & ~(1 << $49);
          break;
         }
        } else {
         if ($34 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
          _abort();
          return 0;
         }
         $arrayidx226_i = $34 + 16 | 0;
         if ((HEAP32[$arrayidx226_i >> 2] | 0) == ($32 | 0)) {
          HEAP32[$arrayidx226_i >> 2] = $R_1_i;
         } else {
          HEAP32[$34 + 20 >> 2] = $R_1_i;
         }
         if (($R_1_i | 0) == 0) {
          break;
         }
        }
        $56 = HEAP32[4956] | 0;
        if ($R_1_i >>> 0 < $56 >>> 0) {
         _abort();
         return 0;
        }
        HEAP32[$R_1_i + 24 >> 2] = $34;
        $57 = HEAP32[$oldmem + ($and_i + 8) >> 2] | 0;
        do {
         if (($57 | 0) != 0) {
          if ($57 >>> 0 < $56 >>> 0) {
           _abort();
           return 0;
          } else {
           HEAP32[$R_1_i + 16 >> 2] = $57;
           HEAP32[$57 + 24 >> 2] = $R_1_i;
           break;
          }
         }
        } while (0);
        $60 = HEAP32[$oldmem + ($and_i + 12) >> 2] | 0;
        if (($60 | 0) != 0) {
         if ($60 >>> 0 < (HEAP32[4956] | 0) >>> 0) {
          _abort();
          return 0;
         } else {
          HEAP32[$R_1_i + 20 >> 2] = $60;
          HEAP32[$60 + 24 >> 2] = $R_1_i;
          break;
         }
        }
       }
      }
     } while (0);
     if ($sub110_i >>> 0 < 16 >>> 0) {
      HEAP32[$0 >> 2] = $add105_i | $1 & 1 | 2;
      $63 = $oldmem + (($add105_i | 4) - 8) | 0;
      HEAP32[$63 >> 2] = HEAP32[$63 >> 2] | 1;
      $mem_0 = $oldmem;
      return $mem_0 | 0;
     } else {
      HEAP32[$0 >> 2] = $1 & 1 | $cond | 2;
      HEAP32[$oldmem + (($cond | 4) - 8) >> 2] = $sub110_i | 3;
      $67 = $oldmem + (($add105_i | 4) - 8) | 0;
      HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
      _dispose_chunk($oldmem + ($cond - 8) | 0, $sub110_i);
      $mem_0 = $oldmem;
      return $mem_0 | 0;
     }
    }
   }
  }
 } while (0);
 $call12 = _malloc($bytes) | 0;
 if (($call12 | 0) == 0) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $69 = HEAP32[$0 >> 2] | 0;
 $sub = ($69 & -8) - (($69 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($call12 | 0, $oldmem | 0, $sub >>> 0 < $bytes >>> 0 ? $sub : $bytes) | 0;
 _free($oldmem);
 $mem_0 = $call12;
 return $mem_0 | 0;
}
function __Z28duDebugDrawRegionConnectionsP11duDebugDrawRK12rcContourSetf($dd, $cset, $alpha) {
 $dd = $dd | 0;
 $cset = $cset | 0;
 $alpha = +$alpha;
 var $pos = 0, $arraydecay = 0, $0 = 0.0, $1 = 0.0, $2 = 0, $nconts = 0, $4 = 0, $conts = 0, $arraydecay3 = 0, $arrayidx1_i = 0, $arrayidx2_i = 0, $arrayidx29_i = 0, $mul30_i = 0.0, $arrayidx34_i = 0, $5 = 0, $i_0128 = 0, $6 = 0, $arrayidx = 0, $nverts_i = 0, $7 = 0, $cmp27_i = 0, $8 = 0, $9 = 0.0, $10 = 0.0, $11 = 0.0, $i_028_i = 0, $mul_i = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $div_i = 0.0, $mul17_i = 0.0, $verts = 0, $reg = 0, $21 = 0, $j_0126 = 0, $23 = 0, $conv = 0, $25 = 0, $26 = 0, $i_07_i = 0, $inc_i36 = 0, $arrayidx_i = 0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $i_028_i87 = 0, $mul_i88 = 0, $add_i91 = 0.0, $add10_i95 = 0.0, $add14_i99 = 0.0, $inc_i100 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $div_i105 = 0.0, $mul17_i106 = 0.0, $42 = 0.0, $43 = 0.0, $pos2_sroa_0_0_load120 = 0.0, $47 = 0, $48 = 0, $49 = 0, $conts44 = 0, $arraydecay51 = 0, $arrayidx1_i38 = 0, $arrayidx2_i39 = 0, $53 = 0, $arrayidx29_i71 = 0, $mul30_i72 = 0.0, $arrayidx34_i75 = 0, $shl3_i_i = 0, $i38_0123 = 0, $54 = 0, $conv47 = 0, $56 = 0, $or4_i_i = 0, $or_i = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $i_028_i46 = 0, $mul_i47 = 0, $68 = 0.0, $69 = 0.0, $70 = 0.0, $div_i64 = 0.0, $mul17_i65 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $pos = sp | 0;
 if (($dd | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $arraydecay = $cset + 8 | 0;
 $0 = +HEAPF32[$cset + 32 >> 2];
 $1 = +HEAPF32[$cset + 36 >> 2];
 $2 = $dd;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 1, 2.0);
 $nconts = $cset + 4 | 0;
 $4 = HEAP32[$nconts >> 2] | 0;
 if (($4 | 0) > 0) {
  $conts = $cset | 0;
  $arraydecay3 = $pos | 0;
  $arrayidx1_i = $pos + 4 | 0;
  $arrayidx2_i = $pos + 8 | 0;
  $arrayidx29_i = $cset + 12 | 0;
  $mul30_i = $1 * 4.0;
  $arrayidx34_i = $cset + 16 | 0;
  $i_0128 = 0;
  $5 = $4;
  while (1) {
   $6 = HEAP32[$conts >> 2] | 0;
   $arrayidx = $6 + ($i_0128 * 20 | 0) | 0;
   HEAPF32[$arraydecay3 >> 2] = 0.0;
   HEAPF32[$arrayidx1_i >> 2] = 0.0;
   HEAPF32[$arrayidx2_i >> 2] = 0.0;
   $nverts_i = $6 + ($i_0128 * 20 | 0) + 4 | 0;
   $7 = HEAP32[$nverts_i >> 2] | 0;
   if (($7 | 0) == 0) {
    $48 = $5;
   } else {
    $cmp27_i = ($7 | 0) > 0;
    if ($cmp27_i) {
     $8 = HEAP32[$arrayidx >> 2] | 0;
     $i_028_i = 0;
     $11 = 0.0;
     $10 = 0.0;
     $9 = 0.0;
     do {
      $mul_i = $i_028_i << 2;
      $11 = $11 + +(HEAP32[$8 + ($mul_i << 2) >> 2] | 0);
      $10 = $10 + +(HEAP32[$8 + (($mul_i | 1) << 2) >> 2] | 0);
      $9 = $9 + +(HEAP32[$8 + (($mul_i | 2) << 2) >> 2] | 0);
      $i_028_i = $i_028_i + 1 | 0;
     } while (($i_028_i | 0) < ($7 | 0));
     HEAPF32[$arraydecay3 >> 2] = $11;
     HEAPF32[$arrayidx1_i >> 2] = $10;
     HEAPF32[$arrayidx2_i >> 2] = $9;
     $17 = $11;
     $16 = $10;
     $15 = $9;
    } else {
     $17 = 0.0;
     $16 = 0.0;
     $15 = 0.0;
    }
    $div_i = 1.0 / +($7 | 0);
    $mul17_i = $0 * $div_i;
    HEAPF32[$arraydecay3 >> 2] = +HEAPF32[$arraydecay >> 2] + $17 * $mul17_i;
    HEAPF32[$arrayidx1_i >> 2] = $16 * $1 * $div_i + ($mul30_i + +HEAPF32[$arrayidx29_i >> 2]);
    HEAPF32[$arrayidx2_i >> 2] = $15 * $mul17_i + +HEAPF32[$arrayidx34_i >> 2];
    if ($cmp27_i) {
     $verts = $arrayidx | 0;
     $reg = $6 + ($i_0128 * 20 | 0) + 16 | 0;
     $j_0126 = 0;
     $21 = $7;
     while (1) {
      $23 = HEAP32[(HEAP32[$verts >> 2] | 0) + (($j_0126 << 2 | 3) << 2) >> 2] | 0;
      L19 : do {
       if (($23 | 0) == 0) {
        $47 = $21;
       } else {
        if (($23 & 65535) >>> 0 < (HEAPU16[$reg >> 1] | 0) >>> 0) {
         $47 = $21;
        } else {
         $conv = $23 & 65535;
         $25 = HEAP32[$nconts >> 2] | 0;
         if (($25 | 0) > 0) {
          $26 = HEAP32[$conts >> 2] | 0;
          $i_07_i = 0;
          while (1) {
           $inc_i36 = $i_07_i + 1 | 0;
           if ((HEAP16[$26 + ($i_07_i * 20 | 0) + 16 >> 1] | 0) == $conv << 16 >> 16) {
            break;
           }
           if (($inc_i36 | 0) < ($25 | 0)) {
            $i_07_i = $inc_i36;
           } else {
            $47 = $21;
            break L19;
           }
          }
          $arrayidx_i = $26 + ($i_07_i * 20 | 0) | 0;
          if (($arrayidx_i | 0) == 0) {
           $47 = $21;
          } else {
           $28 = HEAP32[$26 + ($i_07_i * 20 | 0) + 4 >> 2] | 0;
           if (($28 | 0) == 0) {
            $pos2_sroa_0_0_load120 = 0.0;
            $43 = 0.0;
            $42 = 0.0;
           } else {
            if (($28 | 0) > 0) {
             $29 = HEAP32[$arrayidx_i >> 2] | 0;
             $i_028_i87 = 0;
             $32 = 0.0;
             $31 = 0.0;
             $30 = 0.0;
             while (1) {
              $mul_i88 = $i_028_i87 << 2;
              $add_i91 = $32 + +(HEAP32[$29 + ($mul_i88 << 2) >> 2] | 0);
              $add10_i95 = $31 + +(HEAP32[$29 + (($mul_i88 | 1) << 2) >> 2] | 0);
              $add14_i99 = $30 + +(HEAP32[$29 + (($mul_i88 | 2) << 2) >> 2] | 0);
              $inc_i100 = $i_028_i87 + 1 | 0;
              if (($inc_i100 | 0) < ($28 | 0)) {
               $i_028_i87 = $inc_i100;
               $32 = $add_i91;
               $31 = $add10_i95;
               $30 = $add14_i99;
              } else {
               $38 = $add_i91;
               $37 = $add10_i95;
               $36 = $add14_i99;
               break;
              }
             }
            } else {
             $38 = 0.0;
             $37 = 0.0;
             $36 = 0.0;
            }
            $div_i105 = 1.0 / +($28 | 0);
            $mul17_i106 = $0 * $div_i105;
            $pos2_sroa_0_0_load120 = +HEAPF32[$arraydecay >> 2] + $38 * $mul17_i106;
            $43 = $37 * $1 * $div_i105 + ($mul30_i + +HEAPF32[$arrayidx29_i >> 2]);
            $42 = $36 * $mul17_i106 + +HEAPF32[$arrayidx34_i >> 2];
           }
           __Z11duAppendArcP11duDebugDrawfffffffffj($dd, +HEAPF32[$arraydecay3 >> 2], +HEAPF32[$arrayidx1_i >> 2], +HEAPF32[$arrayidx2_i >> 2], $pos2_sroa_0_0_load120, $43, $42, .6000000238418579, -1006632960);
           $47 = HEAP32[$nverts_i >> 2] | 0;
          }
         } else {
          $47 = $21;
         }
        }
       }
      } while (0);
      $j_0126 = $j_0126 + 1 | 0;
      if (($j_0126 | 0) >= ($47 | 0)) {
       break;
      } else {
       $21 = $47;
      }
     }
     $48 = HEAP32[$nconts >> 2] | 0;
    } else {
     $48 = $5;
    }
   }
   $i_0128 = $i_0128 + 1 | 0;
   if (($i_0128 | 0) >= ($48 | 0)) {
    break;
   } else {
    $5 = $48;
   }
  }
 }
 $49 = $dd;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] & 511]($dd);
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 0, 7.0);
 if ((HEAP32[$nconts >> 2] | 0) > 0) {
  $conts44 = $cset | 0;
  $arraydecay51 = $pos | 0;
  $arrayidx1_i38 = $pos + 4 | 0;
  $arrayidx2_i39 = $pos + 8 | 0;
  $53 = $dd;
  $arrayidx29_i71 = $cset + 12 | 0;
  $mul30_i72 = $1 * 4.0;
  $arrayidx34_i75 = $cset + 16 | 0;
  $shl3_i_i = (~~($alpha * 255.0) & 255) << 24;
  $i38_0123 = 0;
  do {
   $54 = HEAP32[$conts44 >> 2] | 0;
   $conv47 = HEAPU16[$54 + ($i38_0123 * 20 | 0) + 16 >> 1] | 0;
   $56 = $conv47 >>> 2;
   $or4_i_i = (($conv47 >>> 1 & 1 | $56 & 2) * 63 | 0) + 63 | $shl3_i_i | (($56 & 1 | $conv47 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv47 >>> 4 & 2 | $conv47 & 1, 4128768) | 0) + 4128768;
   $or_i = $or4_i_i >>> 1 & 8355711 | $or4_i_i & -16777216;
   HEAPF32[$arraydecay51 >> 2] = 0.0;
   HEAPF32[$arrayidx1_i38 >> 2] = 0.0;
   HEAPF32[$arrayidx2_i39 >> 2] = 0.0;
   $60 = HEAP32[$54 + ($i38_0123 * 20 | 0) + 4 >> 2] | 0;
   if (($60 | 0) != 0) {
    if (($60 | 0) > 0) {
     $61 = HEAP32[$54 + ($i38_0123 * 20 | 0) >> 2] | 0;
     $i_028_i46 = 0;
     $64 = 0.0;
     $63 = 0.0;
     $62 = 0.0;
     do {
      $mul_i47 = $i_028_i46 << 2;
      $64 = $64 + +(HEAP32[$61 + ($mul_i47 << 2) >> 2] | 0);
      $63 = $63 + +(HEAP32[$61 + (($mul_i47 | 1) << 2) >> 2] | 0);
      $62 = $62 + +(HEAP32[$61 + (($mul_i47 | 2) << 2) >> 2] | 0);
      $i_028_i46 = $i_028_i46 + 1 | 0;
     } while (($i_028_i46 | 0) < ($60 | 0));
     HEAPF32[$arraydecay51 >> 2] = $64;
     HEAPF32[$arrayidx1_i38 >> 2] = $63;
     HEAPF32[$arrayidx2_i39 >> 2] = $62;
     $70 = $64;
     $69 = $63;
     $68 = $62;
    } else {
     $70 = 0.0;
     $69 = 0.0;
     $68 = 0.0;
    }
    $div_i64 = 1.0 / +($60 | 0);
    $mul17_i65 = $0 * $div_i64;
    HEAPF32[$arraydecay51 >> 2] = +HEAPF32[$arraydecay >> 2] + $70 * $mul17_i65;
    HEAPF32[$arrayidx1_i38 >> 2] = $69 * $1 * $div_i64 + ($mul30_i72 + +HEAPF32[$arrayidx29_i71 >> 2]);
    HEAPF32[$arrayidx2_i39 >> 2] = $68 * $mul17_i65 + +HEAPF32[$arrayidx34_i75 >> 2];
   }
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$53 >> 2] | 0) + 20 >> 2] & 31]($dd, $arraydecay51, $or_i);
   $i38_0123 = $i38_0123 + 1 | 0;
  } while (($i38_0123 | 0) < (HEAP32[$nconts >> 2] | 0));
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] & 511]($dd);
 STACKTOP = sp;
 return;
}
function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $0 = 0, $1 = 0, $2 = 0, $wn_addr_4_ph = 0, $ws_addr_0_ph = 0, $s_5_ph = 0, $wn_addr_0 = 0, $s_0 = 0, $3 = 0, $6 = 0, $7 = 0, $s_180 = 0, $wn_addr_179 = 0, $add_ptr = 0, $sub13 = 0, $9 = 0, $11 = 0, $wn_addr_2 = 0, $s_2 = 0, $conv15 = 0, $sub22 = 0, $wn_addr_3 = 0, $s_3 = 0, $c_2 = 0, $shr73 = 0, $incdec_ptr41 = 0, $incdec_ptr52 = 0, $s_4 = 0, $s_585 = 0, $ws_addr_084 = 0, $wn_addr_483 = 0, $18 = 0, $wn_addr_5 = 0, $ws_addr_1 = 0, $s_6 = 0, $21 = 0, $26 = 0, $wn_addr_6 = 0, $ws_addr_2 = 0, $s_7 = 0, $conv105 = 0, $dec113 = 0, $sub116 = 0, $wn_addr_7 = 0, $ws_addr_3 = 0, $s_8 = 0, $c_4 = 0, $conv125 = 0, $shr12674 = 0, $incdec_ptr138 = 0, $or141 = 0, $conv145 = 0, $incdec_ptr153 = 0, $or156 = 0, $conv160 = 0, $s_9 = 0, $c_5 = 0, $wn_addr_8 = 0, $ws_addr_4 = 0, $s_10 = 0, $c_6 = 0, $33 = 0, $s_1096 = 0, $ws_addr_494 = 0, $wn_addr_892 = 0, $s_1095 = 0, $ws_addr_493 = 0, $call = 0, $retval_0 = 0, label = 0, $s_6$looptemp = 0, $ws_addr_1$looptemp = 0;
 $0 = HEAP32[$src >> 2] | 0;
 if (($st | 0) == 0) {
  label = 5;
 } else {
  $1 = $st | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  if (($2 | 0) == 0) {
   label = 5;
  } else {
   if (($ws | 0) == 0) {
    $c_2 = $2;
    $s_3 = $0;
    $wn_addr_3 = $wn;
    label = 15;
   } else {
    HEAP32[$1 >> 2] = 0;
    $c_4 = $2;
    $s_8 = $0;
    $ws_addr_3 = $ws;
    $wn_addr_7 = $wn;
    label = 34;
   }
  }
 }
 if ((label | 0) == 5) {
  if (($ws | 0) == 0) {
   $s_0 = $0;
   $wn_addr_0 = $wn;
   label = 7;
  } else {
   $s_5_ph = $0;
   $ws_addr_0_ph = $ws;
   $wn_addr_4_ph = $wn;
   label = 6;
  }
 }
 L7 : while (1) {
  if ((label | 0) == 6) {
   label = 0;
   if (($wn_addr_4_ph | 0) == 0) {
    $retval_0 = $wn;
    label = 52;
    break;
   } else {
    $wn_addr_483 = $wn_addr_4_ph;
    $ws_addr_084 = $ws_addr_0_ph;
    $s_585 = $s_5_ph;
   }
   while (1) {
    $18 = HEAP8[$s_585 >> 0] | 0;
    L31 : do {
     if ((($18 & 255) - 1 | 0) >>> 0 < 127 >>> 0) {
      if (($s_585 & 3 | 0) == 0 & $wn_addr_483 >>> 0 > 3 >>> 0) {
       $s_6 = $s_585;
       $ws_addr_1 = $ws_addr_084;
       $wn_addr_5 = $wn_addr_483;
       do {
        $21 = HEAP32[$s_6 >> 2] | 0;
        if ((($21 - 16843009 | $21) & -2139062144 | 0) != 0) {
         $s_7 = $s_6;
         $ws_addr_2 = $ws_addr_1;
         $wn_addr_6 = $wn_addr_5;
         $26 = $21 & 255;
         break L31;
        }
        HEAP32[$ws_addr_1 >> 2] = $21 & 255;
        HEAP32[$ws_addr_1 + 4 >> 2] = HEAPU8[$s_6 + 1 >> 0] | 0;
        HEAP32[$ws_addr_1 + 8 >> 2] = HEAPU8[$s_6 + 2 >> 0] | 0;
        $s_6$looptemp = $s_6;
        $s_6 = $s_6 + 4 | 0;
        $ws_addr_1$looptemp = $ws_addr_1;
        $ws_addr_1 = $ws_addr_1 + 16 | 0;
        HEAP32[$ws_addr_1$looptemp + 12 >> 2] = HEAPU8[$s_6$looptemp + 3 >> 0] | 0;
        $wn_addr_5 = $wn_addr_5 - 4 | 0;
       } while ($wn_addr_5 >>> 0 > 3 >>> 0);
       $s_7 = $s_6;
       $ws_addr_2 = $ws_addr_1;
       $wn_addr_6 = $wn_addr_5;
       $26 = HEAP8[$s_6 >> 0] | 0;
      } else {
       $s_7 = $s_585;
       $ws_addr_2 = $ws_addr_084;
       $wn_addr_6 = $wn_addr_483;
       $26 = $18;
      }
     } else {
      $s_7 = $s_585;
      $ws_addr_2 = $ws_addr_084;
      $wn_addr_6 = $wn_addr_483;
      $26 = $18;
     }
    } while (0);
    $conv105 = $26 & 255;
    if (!(($conv105 - 1 | 0) >>> 0 < 127 >>> 0)) {
     break;
    }
    HEAP32[$ws_addr_2 >> 2] = $conv105;
    $dec113 = $wn_addr_6 - 1 | 0;
    if (($dec113 | 0) == 0) {
     $retval_0 = $wn;
     label = 52;
     break L7;
    } else {
     $wn_addr_483 = $dec113;
     $ws_addr_084 = $ws_addr_2 + 4 | 0;
     $s_585 = $s_7 + 1 | 0;
    }
   }
   $sub116 = $conv105 - 194 | 0;
   if ($sub116 >>> 0 > 50 >>> 0) {
    $wn_addr_892 = $wn_addr_6;
    $ws_addr_494 = $ws_addr_2;
    $s_1096 = $s_7;
    $33 = $26;
    label = 46;
    break;
   }
   $c_4 = HEAP32[10656 + ($sub116 << 2) >> 2] | 0;
   $s_8 = $s_7 + 1 | 0;
   $ws_addr_3 = $ws_addr_2;
   $wn_addr_7 = $wn_addr_6;
   label = 34;
   continue;
  } else if ((label | 0) == 7) {
   label = 0;
   $3 = HEAP8[$s_0 >> 0] | 0;
   if ((($3 & 255) - 1 | 0) >>> 0 < 127 >>> 0) {
    if (($s_0 & 3 | 0) == 0) {
     $6 = HEAP32[$s_0 >> 2] | 0;
     $7 = $6 & 255;
     if ((($6 - 16843009 | $6) & -2139062144 | 0) == 0) {
      $wn_addr_179 = $wn_addr_0;
      $s_180 = $s_0;
      while (1) {
       $add_ptr = $s_180 + 4 | 0;
       $sub13 = $wn_addr_179 - 4 | 0;
       $9 = HEAP32[$add_ptr >> 2] | 0;
       if ((($9 - 16843009 | $9) & -2139062144 | 0) == 0) {
        $wn_addr_179 = $sub13;
        $s_180 = $add_ptr;
       } else {
        $s_2 = $add_ptr;
        $wn_addr_2 = $sub13;
        $11 = $9 & 255;
        break;
       }
      }
     } else {
      $s_2 = $s_0;
      $wn_addr_2 = $wn_addr_0;
      $11 = $7;
     }
    } else {
     $s_2 = $s_0;
     $wn_addr_2 = $wn_addr_0;
     $11 = $3;
    }
   } else {
    $s_2 = $s_0;
    $wn_addr_2 = $wn_addr_0;
    $11 = $3;
   }
   $conv15 = $11 & 255;
   if (($conv15 - 1 | 0) >>> 0 < 127 >>> 0) {
    $s_0 = $s_2 + 1 | 0;
    $wn_addr_0 = $wn_addr_2 - 1 | 0;
    label = 7;
    continue;
   }
   $sub22 = $conv15 - 194 | 0;
   if ($sub22 >>> 0 > 50 >>> 0) {
    $wn_addr_892 = $wn_addr_2;
    $ws_addr_494 = $ws;
    $s_1096 = $s_2;
    $33 = $11;
    label = 46;
    break;
   }
   $c_2 = HEAP32[10656 + ($sub22 << 2) >> 2] | 0;
   $s_3 = $s_2 + 1 | 0;
   $wn_addr_3 = $wn_addr_2;
   label = 15;
   continue;
  } else if ((label | 0) == 15) {
   label = 0;
   $shr73 = (HEAPU8[$s_3 >> 0] | 0) >>> 3;
   if (($shr73 - 16 | $shr73 + ($c_2 >> 26)) >>> 0 > 7 >>> 0) {
    label = 16;
    break;
   }
   $incdec_ptr41 = $s_3 + 1 | 0;
   if (($c_2 & 33554432 | 0) == 0) {
    $s_4 = $incdec_ptr41;
   } else {
    if (!((HEAP8[$incdec_ptr41 >> 0] & -64) << 24 >> 24 == -128)) {
     label = 19;
     break;
    }
    $incdec_ptr52 = $s_3 + 2 | 0;
    if (($c_2 & 524288 | 0) == 0) {
     $s_4 = $incdec_ptr52;
    } else {
     if (!((HEAP8[$incdec_ptr52 >> 0] & -64) << 24 >> 24 == -128)) {
      label = 22;
      break;
     }
     $s_4 = $s_3 + 3 | 0;
    }
   }
   $s_0 = $s_4;
   $wn_addr_0 = $wn_addr_3 - 1 | 0;
   label = 7;
   continue;
  } else if ((label | 0) == 34) {
   label = 0;
   $conv125 = HEAPU8[$s_8 >> 0] | 0;
   $shr12674 = $conv125 >>> 3;
   if (($shr12674 - 16 | $shr12674 + ($c_4 >> 26)) >>> 0 > 7 >>> 0) {
    label = 35;
    break;
   }
   $incdec_ptr138 = $s_8 + 1 | 0;
   $or141 = $conv125 - 128 | $c_4 << 6;
   if (($or141 | 0) < 0) {
    $conv145 = HEAPU8[$incdec_ptr138 >> 0] | 0;
    if (($conv145 & 192 | 0) != 128) {
     label = 38;
     break;
    }
    $incdec_ptr153 = $s_8 + 2 | 0;
    $or156 = $conv145 - 128 | $or141 << 6;
    if (($or156 | 0) < 0) {
     $conv160 = HEAPU8[$incdec_ptr153 >> 0] | 0;
     if (($conv160 & 192 | 0) != 128) {
      label = 41;
      break;
     }
     $c_5 = $conv160 - 128 | $or156 << 6;
     $s_9 = $s_8 + 3 | 0;
    } else {
     $c_5 = $or156;
     $s_9 = $incdec_ptr153;
    }
   } else {
    $c_5 = $or141;
    $s_9 = $incdec_ptr138;
   }
   HEAP32[$ws_addr_3 >> 2] = $c_5;
   $s_5_ph = $s_9;
   $ws_addr_0_ph = $ws_addr_3 + 4 | 0;
   $wn_addr_4_ph = $wn_addr_7 - 1 | 0;
   label = 6;
   continue;
  }
 }
 if ((label | 0) == 16) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 44;
 } else if ((label | 0) == 19) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 44;
 } else if ((label | 0) == 22) {
  $c_6 = $c_2;
  $s_10 = $s_3 - 1 | 0;
  $ws_addr_4 = $ws;
  $wn_addr_8 = $wn_addr_3;
  label = 44;
 } else if ((label | 0) == 35) {
  $c_6 = $c_4;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 44;
 } else if ((label | 0) == 38) {
  $c_6 = $or141;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 44;
 } else if ((label | 0) == 41) {
  $c_6 = $or156;
  $s_10 = $s_8 - 1 | 0;
  $ws_addr_4 = $ws_addr_3;
  $wn_addr_8 = $wn_addr_7;
  label = 44;
 } else if ((label | 0) == 52) {
  return $retval_0 | 0;
 }
 if ((label | 0) == 44) {
  if (($c_6 | 0) == 0) {
   $wn_addr_892 = $wn_addr_8;
   $ws_addr_494 = $ws_addr_4;
   $s_1096 = $s_10;
   $33 = HEAP8[$s_10 >> 0] | 0;
   label = 46;
  } else {
   $ws_addr_493 = $ws_addr_4;
   $s_1095 = $s_10;
  }
 }
 if ((label | 0) == 46) {
  if ($33 << 24 >> 24 == 0) {
   if (($ws_addr_494 | 0) != 0) {
    HEAP32[$ws_addr_494 >> 2] = 0;
    HEAP32[$src >> 2] = 0;
   }
   $retval_0 = $wn - $wn_addr_892 | 0;
   return $retval_0 | 0;
  } else {
   $ws_addr_493 = $ws_addr_494;
   $s_1095 = $s_1096;
  }
 }
 $call = ___errno_location() | 0;
 HEAP32[$call >> 2] = 84;
 if (($ws_addr_493 | 0) == 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 HEAP32[$src >> 2] = $s_1095;
 $retval_0 = -1;
 return $retval_0 | 0;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__neg = 0, $__first__i_i_i = 0, $__second__i_i_i = 0, $add_ptr = 0, $__locale_2_i_i20 = 0, $1 = 0, $2 = 0, $sub_i_i_i = 0, $10 = 0, $11 = 0, $exception_i_i_i = 0, $13 = 0, $14 = 0, $15 = 0, $__size__i2_i = 0, $_pre36 = 0, $call_i1516 = 0, $22 = 0, $23 = 0, $add_ptr1731 = 0, $__w_033 = 0, $incdec_ptr = 0, $__w_0_lcssa = 0, $sub_ptr_rhs_cast_i_i_i = 0, $25 = 0, $27 = 0, $29 = 0, $cond_i38_i = 0, $cond_i31_i = 0, $sub_ptr_sub_i_i_i = 0, $add_i = 0, $cond_i_i_i = 0, $mul_i_i = 0, $_sroa_speculated_i_i = 0, $cond_i_i = 0, $call_i_i_i_i9 = 0, $or_i_i_i = 0, $31 = 0, $cond_i26_i = 0, $scevgep35_i = 0, $__p_034_i = 0, $__first_addr_033_i = 0, $add9_i = 0, $__sbuf__i_i_i = 0, $36 = 0, $41 = 0, $cmp_i_i_i = 0, $49 = 0, $54 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__wbuf = sp + 16 | 0;
 $__wb = sp + 120 | 0;
 $__wn = sp + 128 | 0;
 $__neg = sp + 136 | 0;
 $__first__i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i >> 2] = $__wbuf;
 $__second__i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i >> 2] = 182;
 $add_ptr = $__wbuf + 100 | 0;
 $__locale_2_i_i20 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i20;
 $2 = $__locale_2_i_i20 + 4 | 0;
 tempValue = HEAP32[$2 >> 2] | 0, HEAP32[$2 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $10 = HEAP32[$__locale_2_i_i20 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i20 + 12 >> 2] | 0) - $10 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $11 = HEAP32[$10 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($11 | 0) != 0) {
   $13 = $11;
   HEAP8[$__neg >> 0] = 0;
   $14 = $__e | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   do {
    if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $15, $__intl, $1, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $13, $__wb, $__wn, $add_ptr) | 0) {
     $__size__i2_i = $__v;
     if ((HEAP8[$__size__i2_i >> 0] & 1) == 0) {
      HEAP8[$__v + 1 >> 0] = 0;
      HEAP8[$__size__i2_i >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     $_pre36 = $11;
     if ((HEAP8[$__neg >> 0] | 0) != 0) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre36 >> 2] | 0) + 28 >> 2] & 63]($13, 45) | 0);
     }
     $call_i1516 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$_pre36 >> 2] | 0) + 28 >> 2] & 63]($13, 48) | 0;
     $22 = HEAP32[$__first__i_i_i >> 2] | 0;
     $23 = HEAP32[$__wn >> 2] | 0;
     $add_ptr1731 = $23 - 1 | 0;
     L19 : do {
      if ($22 >>> 0 < $add_ptr1731 >>> 0) {
       $__w_033 = $22;
       while (1) {
        $incdec_ptr = $__w_033 + 1 | 0;
        if (!((HEAP8[$__w_033 >> 0] | 0) == $call_i1516 << 24 >> 24)) {
         $__w_0_lcssa = $__w_033;
         break L19;
        }
        if ($incdec_ptr >>> 0 < $add_ptr1731 >>> 0) {
         $__w_033 = $incdec_ptr;
        } else {
         $__w_0_lcssa = $incdec_ptr;
         break;
        }
       }
      } else {
       $__w_0_lcssa = $22;
      }
     } while (0);
     $sub_ptr_rhs_cast_i_i_i = $__w_0_lcssa;
     $25 = HEAP8[$__size__i2_i >> 0] | 0;
     if (($25 & 1) == 0) {
      $cond_i31_i = 10;
      $cond_i38_i = ($25 & 255) >>> 1;
      $29 = $25;
     } else {
      $27 = HEAP32[$__v >> 2] | 0;
      $cond_i31_i = ($27 & -2) - 1 | 0;
      $cond_i38_i = HEAP32[$__v + 4 >> 2] | 0;
      $29 = $27 & 255;
     }
     $sub_ptr_sub_i_i_i = $23 - $sub_ptr_rhs_cast_i_i_i | 0;
     if (($23 | 0) != ($__w_0_lcssa | 0)) {
      if (($cond_i31_i - $cond_i38_i | 0) >>> 0 < $sub_ptr_sub_i_i_i >>> 0) {
       $add_i = $cond_i38_i + $sub_ptr_sub_i_i_i | 0;
       if ((-17 - $cond_i31_i | 0) >>> 0 < ($add_i - $cond_i31_i | 0) >>> 0) {
        __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
       }
       if (($29 & 1) == 0) {
        $cond_i_i_i = $__v + 1 | 0;
       } else {
        $cond_i_i_i = HEAP32[$__v + 8 >> 2] | 0;
       }
       if ($cond_i31_i >>> 0 < 2147483623 >>> 0) {
        $mul_i_i = $cond_i31_i << 1;
        $_sroa_speculated_i_i = $add_i >>> 0 < $mul_i_i >>> 0 ? $mul_i_i : $add_i;
        if ($_sroa_speculated_i_i >>> 0 < 11 >>> 0) {
         $cond_i_i = 11;
        } else {
         $cond_i_i = $_sroa_speculated_i_i + 16 & -16;
        }
       } else {
        $cond_i_i = -17;
       }
       $call_i_i_i_i9 = __Znwj($cond_i_i) | 0;
       if (($cond_i38_i | 0) != 0) {
        _memcpy($call_i_i_i_i9 | 0, $cond_i_i_i | 0, $cond_i38_i) | 0;
       }
       if (!(($cond_i31_i | 0) == 10 | ($cond_i_i_i | 0) == 0)) {
        _free($cond_i_i_i);
       }
       HEAP32[$__v + 8 >> 2] = $call_i_i_i_i9;
       $or_i_i_i = $cond_i_i | 1;
       HEAP32[$__v >> 2] = $or_i_i_i;
       $31 = $or_i_i_i & 255;
      } else {
       $31 = $29;
      }
      if (($31 & 1) == 0) {
       $cond_i26_i = $__v + 1 | 0;
      } else {
       $cond_i26_i = HEAP32[$__v + 8 >> 2] | 0;
      }
      $scevgep35_i = $23 + ($cond_i38_i - $sub_ptr_rhs_cast_i_i_i) | 0;
      $__first_addr_033_i = $__w_0_lcssa;
      $__p_034_i = $cond_i26_i + $cond_i38_i | 0;
      while (1) {
       HEAP8[$__p_034_i >> 0] = HEAP8[$__first_addr_033_i >> 0] | 0;
       $__first_addr_033_i = $__first_addr_033_i + 1 | 0;
       if (($__first_addr_033_i | 0) == ($23 | 0)) {
        break;
       } else {
        $__p_034_i = $__p_034_i + 1 | 0;
       }
      }
      HEAP8[$cond_i26_i + $scevgep35_i >> 0] = 0;
      $add9_i = $cond_i38_i + $sub_ptr_sub_i_i_i | 0;
      if ((HEAP8[$__size__i2_i >> 0] & 1) == 0) {
       HEAP8[$__size__i2_i >> 0] = $add9_i << 1;
       break;
      } else {
       HEAP32[$__v + 4 >> 2] = $add9_i;
       break;
      }
     }
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $36 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($36 | 0) == 0) {
     $41 = 0;
    } else {
     if ((HEAP32[$36 + 12 >> 2] | 0) == (HEAP32[$36 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 255]($36) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i >> 2] = 0;
       $41 = 0;
       break;
      } else {
       $41 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
       break;
      }
     } else {
      $41 = $36;
     }
    }
   } while (0);
   $cmp_i_i_i = ($41 | 0) == 0;
   do {
    if (($15 | 0) == 0) {
     label = 59;
    } else {
     if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 61;
       break;
      }
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 255]($15) | 0) == -1) {
      HEAP32[$14 >> 2] = 0;
      label = 59;
      break;
     } else {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 61;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 59) {
    if ($cmp_i_i_i) {
     label = 61;
    }
   }
   if ((label | 0) == 61) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i_i_i >> 2];
   $49 = $__locale_2_i_i20 + 4 | 0;
   if (((tempValue = HEAP32[$49 >> 2] | 0, HEAP32[$49 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i20 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i20);
   }
   $54 = HEAP32[$__first__i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i >> 2] = 0;
   if (($54 | 0) == 0) {
    $$etemp$3$0 = 100;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i >> 2] & 511]($54);
   $$etemp$3$0 = 100;
   $$etemp$3$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZL18drawPolyBoundariesP11duDebugDrawPK10dtMeshTilejfb($dd, $tile, $col, $linew, $inner) {
 $dd = $dd | 0;
 $tile = $tile | 0;
 $col = $col | 0;
 $linew = +$linew;
 $inner = $inner | 0;
 var $tv = 0, $header = 0, $2 = 0, $polys = 0, $detailMeshes = 0, $links = 0, $verts46 = 0, $detailTris = 0, $detailVerts = 0, $4 = 0, $arrayidx78 = 0, $arrayidx78_1 = 0, $arrayidx78_2 = 0, $5 = 0, $i_0101 = 0, $6 = 0, $8 = 0, $vertCount = 0, $9 = 0, $conv3 = 0, $firstLink = 0, $triCount = 0, $triBase = 0, $vertBase = 0, $j_097 = 0, $10 = 0, $cmp10 = 0, $k_087 = 0, $11 = 0, $k_089 = 0, $k_0 = 0, $c_0 = 0, $mul = 0, $14 = 0, $arrayidx47 = 0, $mul51 = 0, $arrayidx53 = 0, $arrayidx47_idx60 = 0, $arrayidx53_idx62 = 0, $k54_095 = 0, $mul60 = 0, $18 = 0, $19 = 0, $conv68 = 0, $20 = 0, $conv66 = 0, $storemerge = 0, $25 = 0, $conv66_1 = 0, $n_092 = 0, $m91_091 = 0, $28 = 0, $_val57 = 0.0, $_idx58_val = 0.0, $arrayidx47_val59 = 0.0, $arrayidx47_idx60_val = 0.0, $sub_i63 = 0.0, $sub4_i64 = 0.0, $add_i69 = 0.0, $add14_i72 = 0.0, $cmp_i73 = 0, $t_0_i76 = 0.0, $sub19_i79 = 0.0, $sub24_i82 = 0.0, $29 = 0, $_val = 0.0, $_idx_val = 0.0, $add14_i = 0.0, $t_0_i = 0.0, $sub19_i = 0.0, $sub24_i = 0.0, $inc117 = 0, $33 = 0, $35 = 0, $vtable128 = 0, $vfn129 = 0, $36 = 0, $storemerge1 = 0, $41 = 0, $conv66_2 = 0, $storemerge2 = 0, $arrayidx95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tv = sp | 0;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$dd >> 2] | 0) + 16 >> 2] & 31]($dd, 1, $linew);
 $header = $tile + 8 | 0;
 $2 = HEAP32[$header >> 2] | 0;
 if ((HEAP32[$2 + 24 >> 2] | 0) <= 0) {
  $35 = $dd;
  $vtable128 = HEAP32[$35 >> 2] | 0;
  $vfn129 = $vtable128 + 36 | 0;
  $36 = HEAP32[$vfn129 >> 2] | 0;
  FUNCTION_TABLE_vi[$36 & 511]($dd);
  STACKTOP = sp;
  return;
 }
 $polys = $tile + 12 | 0;
 $detailMeshes = $tile + 24 | 0;
 $links = $tile + 20 | 0;
 $verts46 = $tile + 16 | 0;
 $detailTris = $tile + 32 | 0;
 $detailVerts = $tile + 28 | 0;
 $4 = $dd;
 $arrayidx78 = $tv | 0;
 $arrayidx78_1 = $tv + 4 | 0;
 $arrayidx78_2 = $tv + 8 | 0;
 $i_0101 = 0;
 $5 = $2;
 while (1) {
  $6 = HEAP32[$polys >> 2] | 0;
  if ((HEAP8[$6 + ($i_0101 << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
   $33 = $5;
  } else {
   $8 = HEAP32[$detailMeshes >> 2] | 0;
   $vertCount = $6 + ($i_0101 << 5) + 30 | 0;
   $9 = HEAP8[$vertCount >> 0] | 0;
   $conv3 = $9 & 255;
   if ($9 << 24 >> 24 == 0) {
    $33 = $5;
   } else {
    $firstLink = $6 + ($i_0101 << 5) | 0;
    $triCount = $8 + ($i_0101 * 12 | 0) + 9 | 0;
    $triBase = $8 + ($i_0101 * 12 | 0) + 4 | 0;
    $vertBase = $8 + ($i_0101 * 12 | 0) | 0;
    $j_097 = 0;
    do {
     $10 = HEAP16[$6 + ($i_0101 << 5) + 16 + ($j_097 << 1) >> 1] | 0;
     $cmp10 = $10 << 16 >> 16 == 0;
     L11 : do {
      if ($inner) {
       if (!$cmp10) {
        if ($10 << 16 >> 16 < 0) {
         $k_087 = HEAP32[$firstLink >> 2] | 0;
         if (($k_087 | 0) == -1) {
          $c_0 = 805306368;
          label = 14;
         } else {
          $11 = HEAP32[$links >> 2] | 0;
          $k_089 = $k_087;
          while (1) {
           if ((HEAPU8[$11 + ($k_089 * 12 | 0) + 8 >> 0] | 0) == ($j_097 | 0)) {
            $c_0 = 822083583;
            label = 14;
            break L11;
           }
           $k_0 = HEAP32[$11 + ($k_089 * 12 | 0) + 4 >> 2] | 0;
           if (($k_0 | 0) == -1) {
            $c_0 = 805306368;
            label = 14;
            break;
           } else {
            $k_089 = $k_0;
           }
          }
         }
        } else {
         $c_0 = 541077504;
         label = 14;
        }
       }
      } else {
       if ($cmp10) {
        $c_0 = $col;
        label = 14;
       }
      }
     } while (0);
     if ((label | 0) == 14) {
      label = 0;
      $mul = (HEAPU16[$6 + ($i_0101 << 5) + 4 + ($j_097 << 1) >> 1] | 0) * 3 | 0;
      $14 = HEAP32[$verts46 >> 2] | 0;
      $arrayidx47 = $14 + ($mul << 2) | 0;
      $mul51 = (HEAPU16[$6 + ($i_0101 << 5) + 4 + ((($j_097 + 1 | 0) % ($conv3 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
      $arrayidx53 = $14 + ($mul51 << 2) | 0;
      if ((HEAP8[$triCount >> 0] | 0) != 0) {
       $arrayidx47_idx60 = $14 + ($mul + 2 << 2) | 0;
       $arrayidx53_idx62 = $14 + ($mul51 + 2 << 2) | 0;
       $k54_095 = 0;
       do {
        $mul60 = (HEAP32[$triBase >> 2] | 0) + $k54_095 << 2;
        $18 = HEAP32[$detailTris >> 2] | 0;
        $19 = HEAP8[$vertCount >> 0] | 0;
        $conv68 = $19 & 255;
        $20 = HEAP8[$18 + $mul60 >> 0] | 0;
        $conv66 = $20 & 255;
        if (($20 & 255) >>> 0 < ($19 & 255) >>> 0) {
         $storemerge = (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$6 + ($i_0101 << 5) + 4 + ($conv66 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
        } else {
         $storemerge = (HEAP32[$detailVerts >> 2] | 0) + ((($conv66 - $conv68 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
        }
        HEAP32[$arrayidx78 >> 2] = $storemerge;
        $25 = HEAP8[$18 + ($mul60 | 1) >> 0] | 0;
        $conv66_1 = $25 & 255;
        if (($25 & 255) >>> 0 < ($19 & 255) >>> 0) {
         $storemerge1 = (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$6 + ($i_0101 << 5) + 4 + ($conv66_1 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
        } else {
         $storemerge1 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv66_1 - $conv68 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
        }
        HEAP32[$arrayidx78_1 >> 2] = $storemerge1;
        $41 = HEAP8[$18 + ($mul60 | 2) >> 0] | 0;
        $conv66_2 = $41 & 255;
        if (($41 & 255) >>> 0 < ($19 & 255) >>> 0) {
         $storemerge2 = (HEAP32[$verts46 >> 2] | 0) + (((HEAPU16[$6 + ($i_0101 << 5) + 4 + ($conv66_2 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
        } else {
         $storemerge2 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv66_2 - $conv68 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
        }
        HEAP32[$arrayidx78_2 >> 2] = $storemerge2;
        $arrayidx95 = $18 + ($mul60 | 3) | 0;
        $m91_091 = 0;
        $n_092 = 2;
        while (1) {
         if ((HEAPU8[$arrayidx95 >> 0] & 3 << ($n_092 << 1) | 0) != 0) {
          $28 = HEAP32[$tv + ($n_092 << 2) >> 2] | 0;
          $_val57 = +HEAPF32[$28 >> 2];
          $_idx58_val = +HEAPF32[$28 + 8 >> 2];
          $arrayidx47_val59 = +HEAPF32[$arrayidx47 >> 2];
          $arrayidx47_idx60_val = +HEAPF32[$arrayidx47_idx60 >> 2];
          $sub_i63 = +HEAPF32[$arrayidx53 >> 2] - $arrayidx47_val59;
          $sub4_i64 = +HEAPF32[$arrayidx53_idx62 >> 2] - $arrayidx47_idx60_val;
          $add_i69 = $sub_i63 * $sub_i63 + $sub4_i64 * $sub4_i64;
          $add14_i72 = ($_val57 - $arrayidx47_val59) * $sub_i63 + ($_idx58_val - $arrayidx47_idx60_val) * $sub4_i64;
          $cmp_i73 = $add_i69 != 0.0;
          if ($cmp_i73) {
           $t_0_i76 = $add14_i72 / $add_i69;
          } else {
           $t_0_i76 = $add14_i72;
          }
          $sub19_i79 = $arrayidx47_val59 + $sub_i63 * $t_0_i76 - $_val57;
          $sub24_i82 = $arrayidx47_idx60_val + $sub4_i64 * $t_0_i76 - $_idx58_val;
          if ($sub19_i79 * $sub19_i79 + $sub24_i82 * $sub24_i82 < 9999999747378752.0e-20) {
           $29 = HEAP32[$tv + ($m91_091 << 2) >> 2] | 0;
           $_val = +HEAPF32[$29 >> 2];
           $_idx_val = +HEAPF32[$29 + 8 >> 2];
           $add14_i = ($_val - $arrayidx47_val59) * $sub_i63 + ($_idx_val - $arrayidx47_idx60_val) * $sub4_i64;
           if ($cmp_i73) {
            $t_0_i = $add14_i / $add_i69;
           } else {
            $t_0_i = $add14_i;
           }
           $sub19_i = $arrayidx47_val59 + $sub_i63 * $t_0_i - $_val;
           $sub24_i = $arrayidx47_idx60_val + $sub4_i64 * $t_0_i - $_idx_val;
           if ($sub19_i * $sub19_i + $sub24_i * $sub24_i < 9999999747378752.0e-20) {
            FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($dd, $28, $c_0);
            FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($dd, $29, $c_0);
           }
          }
         }
         $inc117 = $m91_091 + 1 | 0;
         if (($inc117 | 0) < 3) {
          $n_092 = $m91_091;
          $m91_091 = $inc117;
         } else {
          break;
         }
        }
        $k54_095 = $k54_095 + 1 | 0;
       } while (($k54_095 | 0) < (HEAPU8[$triCount >> 0] | 0));
      }
     }
     $j_097 = $j_097 + 1 | 0;
    } while (($j_097 | 0) < ($conv3 | 0));
    $33 = HEAP32[$header >> 2] | 0;
   }
  }
  $i_0101 = $i_0101 + 1 | 0;
  if (($i_0101 | 0) >= (HEAP32[$33 + 24 >> 2] | 0)) {
   break;
  } else {
   $5 = $33;
  }
 }
 $35 = $dd;
 $vtable128 = HEAP32[$35 >> 2] | 0;
 $vfn129 = $vtable128 + 36 | 0;
 $36 = HEAP32[$vfn129 >> 2] | 0;
 FUNCTION_TABLE_vi[$36 & 511]($dd);
 STACKTOP = sp;
 return;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (($n_sroa_1_4_extract_trunc | 0) == 0) {
  $4 = ($rem | 0) != 0;
  if (($d_sroa_1_4_extract_trunc | 0) == 0) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do {
  if (($d_sroa_0_0_extract_trunc | 0) == 0) {
   if ($17) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
     HEAP32[$rem + 4 >> 2] = 0;
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   if (($n_sroa_0_0_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = 0;
     HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
   if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = $a$0 | 0;
     HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
    }
    $_0$1 = 0;
    $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $51 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($51 >>> 0 <= 30) {
    $57 = $51 + 1 | 0;
    $58 = 31 - $51 | 0;
    $sr_1_ph = $57;
    $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
    break;
   }
   if (($rem | 0) == 0) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$17) {
    $119 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    if ($119 >>> 0 <= 31) {
     $125 = $119 + 1 | 0;
     $126 = 31 - $119 | 0;
     $130 = $119 - 31 >> 31;
     $sr_1_ph = $125;
     $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
     $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
     $q_sroa_0_1_ph = 0;
     $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
     break;
    }
    if (($rem | 0) == 0) {
     $_0$1 = 0;
     $_0$0 = 0;
     return (tempRet0 = $_0$1, $_0$0) | 0;
    }
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
   if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
    $88 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    $89 = 64 - $88 | 0;
    $91 = 32 - $88 | 0;
    $92 = $91 >> 31;
    $95 = $88 - 32 | 0;
    $105 = $95 >> 31;
    $sr_1_ph = $88;
    $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
    $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
    $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
    $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
    break;
   }
   if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
    HEAP32[$rem + 4 >> 2] = 0;
   }
   if (($d_sroa_0_0_extract_trunc | 0) == 1) {
    $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$0 = $a$0 | 0 | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   } else {
    $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
    $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
    $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
  }
 } while (0);
 if (($sr_1_ph | 0) == 0) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if (($rem | 0) != 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i_i47 = 0, $__p_i_i_i_i = 0, $__grouping = 0, $__locale__i_i = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $6 = 0, $exception_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i_i54 = 0, $14 = 0, $15 = 0, $exception_i_i_i66 = 0, $16 = 0, $17 = 0, $__size__i_i_i = 0, $20 = 0, $cond_i_i = 0, $add_ptr = 0, $26 = 0, $call_i73 = 0, $29 = 0, $__nf_0 = 0, $arrayidx17 = 0, $31 = 0, $32 = 0, $call_i76 = 0, $34 = 0, $call_i80 = 0, $37 = 0, $__nf_1 = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $38 = 0, $call_i84 = 0, $arrayidx_i_i_i = 0, $42 = 0, $__size__i2_i = 0, $__data__i_i_i94 = 0, $__p_0121 = 0, $__dg_0120 = 0, $__dc_0119 = 0, $45 = 0, $46 = 0, $47 = 0, $cond_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i104 = 0, $51 = 0, $incdec_ptr56 = 0, $incdec_ptr58 = 0, $52 = 0, $add_ptr62 = 0, $incdec_ptr6_i_i107 = 0, $incdec_ptr9_i_i110 = 0, $__first_addr_08_i_i111 = 0, $53 = 0, $incdec_ptr2_i_i112 = 0, $incdec_ptr_i_i113 = 0, $55 = 0, $storemerge = 0, $57 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i_i47 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__grouping = sp + 32 | 0;
 $__locale__i_i = $__loc | 0;
 $0 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if (!((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $6 = HEAP32[$5 + ($sub_i_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5814] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i47 >> 2] = 23256;
  HEAP32[$__p_i_i_i_i47 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i47 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i47);
 }
 $sub_i_i_i54 = (HEAP32[5815] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if (!((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i54 >>> 0)) {
  $exception_i_i_i66 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i66;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i66 | 0, 17848, 212);
 }
 $15 = HEAP32[$14 + ($sub_i_i_i54 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i_i66 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i66;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i66 | 0, 17848, 212);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 $__size__i_i_i = $__grouping;
 $20 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($20 & 1) == 0) {
  $cond_i_i = ($20 & 255) >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i_i | 0) == 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($8, $__nb, $__ne, $__ob) | 0;
  $add_ptr = $__ob + ($__ne - $__nb << 2) | 0;
  HEAP32[$__oe >> 2] = $add_ptr;
  $55 = $add_ptr;
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $26 = HEAP8[$__nb >> 0] | 0;
  if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
   $call_i73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($8, $26) | 0;
   $29 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $call_i73;
   $__nf_0 = $__nb + 1 | 0;
  } else {
   $__nf_0 = $__nb;
  }
  if (($__ne - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0 >> 0] | 0) == 48) {
    $arrayidx17 = $__nf_0 + 1 | 0;
    $31 = HEAP8[$arrayidx17 >> 0] | 0;
    if (($31 << 24 >> 24 | 0) == 120 | ($31 << 24 >> 24 | 0) == 88) {
     $32 = $6;
     $call_i76 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
     $34 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $34 + 4;
     HEAP32[$34 >> 2] = $call_i76;
     $call_i80 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$arrayidx17 >> 0] | 0) | 0;
     $37 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $37 + 4;
     HEAP32[$37 >> 2] = $call_i80;
     $__nf_1 = $__nf_0 + 2 | 0;
    } else {
     $__nf_1 = $__nf_0;
    }
   } else {
    $__nf_1 = $__nf_0;
   }
  } else {
   $__nf_1 = $__nf_0;
  }
  if (($__nf_1 | 0) != ($__ne | 0)) {
   $incdec_ptr6_i_i = $__ne - 1 | 0;
   if ($incdec_ptr6_i_i >>> 0 > $__nf_1 >>> 0) {
    $__first_addr_08_i_i = $__nf_1;
    $incdec_ptr9_i_i = $incdec_ptr6_i_i;
    do {
     $38 = HEAP8[$__first_addr_08_i_i >> 0] | 0;
     HEAP8[$__first_addr_08_i_i >> 0] = HEAP8[$incdec_ptr9_i_i >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i >> 0] = $38;
     $__first_addr_08_i_i = $__first_addr_08_i_i + 1 | 0;
     $incdec_ptr9_i_i = $incdec_ptr9_i_i - 1 | 0;
    } while ($__first_addr_08_i_i >>> 0 < $incdec_ptr9_i_i >>> 0);
   }
  }
  $call_i84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
  if ($__nf_1 >>> 0 < $__ne >>> 0) {
   $arrayidx_i_i_i = $__grouping + 1 | 0;
   $42 = $6;
   $__size__i2_i = $__grouping + 4 | 0;
   $__data__i_i_i94 = $__grouping + 8 | 0;
   $__dc_0119 = 0;
   $__dg_0120 = 0;
   $__p_0121 = $__nf_1;
   while (1) {
    $45 = HEAP8[((HEAP8[$__size__i_i_i >> 0] & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i94 >> 2] | 0) + $__dg_0120 >> 0] | 0;
    if ($45 << 24 >> 24 != 0 & ($__dc_0119 | 0) == ($45 << 24 >> 24 | 0)) {
     $46 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $46 + 4;
     HEAP32[$46 >> 2] = $call_i84;
     $47 = HEAP8[$__size__i_i_i >> 0] | 0;
     if (($47 & 1) == 0) {
      $cond_i = ($47 & 255) >>> 1;
     } else {
      $cond_i = HEAP32[$__size__i2_i >> 2] | 0;
     }
     $__dg_1 = ($__dg_0120 >>> 0 < ($cond_i - 1 | 0) >>> 0) + $__dg_0120 | 0;
     $__dc_1 = 0;
    } else {
     $__dg_1 = $__dg_0120;
     $__dc_1 = $__dc_0119;
    }
    $call_i104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$__p_0121 >> 0] | 0) | 0;
    $51 = HEAP32[$__oe >> 2] | 0;
    $incdec_ptr56 = $51 + 4 | 0;
    HEAP32[$__oe >> 2] = $incdec_ptr56;
    HEAP32[$51 >> 2] = $call_i104;
    $incdec_ptr58 = $__p_0121 + 1 | 0;
    if ($incdec_ptr58 >>> 0 < $__ne >>> 0) {
     $__dc_0119 = $__dc_1 + 1 | 0;
     $__dg_0120 = $__dg_1;
     $__p_0121 = $incdec_ptr58;
    } else {
     $52 = $incdec_ptr56;
     break;
    }
   }
  } else {
   $52 = HEAP32[$__oe >> 2] | 0;
  }
  $add_ptr62 = $__ob + ($__nf_1 - $__nb << 2) | 0;
  if (($add_ptr62 | 0) == ($52 | 0)) {
   $55 = $52;
  } else {
   $incdec_ptr6_i_i107 = $52 - 4 | 0;
   if ($incdec_ptr6_i_i107 >>> 0 > $add_ptr62 >>> 0) {
    $__first_addr_08_i_i111 = $add_ptr62;
    $incdec_ptr9_i_i110 = $incdec_ptr6_i_i107;
    while (1) {
     $53 = HEAP32[$__first_addr_08_i_i111 >> 2] | 0;
     HEAP32[$__first_addr_08_i_i111 >> 2] = HEAP32[$incdec_ptr9_i_i110 >> 2];
     HEAP32[$incdec_ptr9_i_i110 >> 2] = $53;
     $incdec_ptr2_i_i112 = $__first_addr_08_i_i111 + 4 | 0;
     $incdec_ptr_i_i113 = $incdec_ptr9_i_i110 - 4 | 0;
     if ($incdec_ptr2_i_i112 >>> 0 < $incdec_ptr_i_i113 >>> 0) {
      $__first_addr_08_i_i111 = $incdec_ptr2_i_i112;
      $incdec_ptr9_i_i110 = $incdec_ptr_i_i113;
     } else {
      $55 = $52;
      break;
     }
    }
   } else {
    $55 = $52;
   }
  }
 }
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $55;
 } else {
  $storemerge = $__ob + ($__np - $__nb << 2) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $57 = HEAP32[$__grouping + 8 >> 2] | 0;
 if (($57 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($57);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $__p_i_i_i_i = 0, $__bb = 0, $__pat = 0, $tmpcast = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__sym = 0, $__sn = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $0 = 0, $arraydecay2 = 0, $call = 0, $call_i = 0, $call6 = 0, $6 = 0, $exception_i = 0, $call11 = 0, $13 = 0, $exception_i1 = 0, $15 = 0, $16 = 0, $__n_0 = 0, $__db_0 = 0, $__locale_2_i_i62 = 0, $17 = 0, $18 = 0, $sub_i_i_i = 0, $26 = 0, $27 = 0, $exception_i_i_i = 0, $29 = 0, $30 = 0, $35 = 0, $this4_i_i_i = 0, $this4_i_i_i32 = 0, $this4_i_i_i33 = 0, $arraydecay30 = 0, $37 = 0, $38 = 0, $cond_i = 0, $40 = 0, $cond_i46 = 0, $42 = 0, $cond_i56 = 0, $44 = 0, $cond_i71 = 0, $add37_pn = 0, $cond = 0, $call49 = 0, $46 = 0, $exception_i5 = 0, $61 = 0, $__mb_0 = 0, $71 = 0, $74 = 0, $77 = 0, $78 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 536 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__bb = sp + 120 | 0;
 $__pat = sp + 528 | 0;
 $tmpcast = $__pat;
 $__dp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__ts = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__grp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $0;
 $arraydecay2 = sp + 128 | 0;
 $call = _snprintf($0 | 0, 100, 1912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__units, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if ($call >>> 0 > 99 >>> 0) {
  if ((HEAP8[24208] | 0) == 0) {
   if ((___cxa_guard_acquire(24208) | 0) != 0) {
    $call_i = _newlocale(2147483647, 896, 0) | 0;
    HEAP32[5446] = $call_i;
   }
  }
  $call6 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb, HEAP32[5446] | 0, 1912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__units, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $6 = HEAP32[$__bb >> 2] | 0;
  if (($6 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  }
  $call11 = _malloc($call6 << 2) | 0;
  $13 = $call11;
  if (($call11 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__db_0 = $13;
   $__n_0 = $call6;
   $16 = $13;
   $15 = $6;
  }
 } else {
  $__db_0 = $arraydecay2;
  $__n_0 = $call;
  $16 = 0;
  $15 = 0;
 }
 $__locale_2_i_i62 = HEAP32[$__iob + 28 >> 2] | 0;
 $17 = $__locale_2_i_i62;
 $18 = $__locale_2_i_i62 + 4 | 0;
 tempValue = HEAP32[$18 >> 2] | 0, HEAP32[$18 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $26 = HEAP32[$__locale_2_i_i62 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i62 + 12 >> 2] | 0) - $26 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $27 = HEAP32[$26 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($27 | 0) != 0) {
   $29 = $27;
   $30 = HEAP32[$__bb >> 2] | 0;
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 48 >> 2] & 31]($29, $30, $30 + $__n_0 | 0, $__db_0) | 0;
   if (($__n_0 | 0) == 0) {
    $35 = 0;
   } else {
    $35 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
   }
   HEAP32[$__pat >> 2] = 0;
   $this4_i_i_i = $__grp;
   _memset($this4_i_i_i | 0, 0, 12) | 0;
   $this4_i_i_i32 = $__sym;
   _memset($this4_i_i_i32 | 0, 0, 12) | 0;
   $this4_i_i_i33 = $__sn;
   _memset($this4_i_i_i33 | 0, 0, 12) | 0;
   __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $35, $17, $tmpcast, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay30 = $__mbuf | 0;
   $37 = HEAP32[$__fd >> 2] | 0;
   if (($__n_0 | 0) > ($37 | 0)) {
    $38 = HEAP8[$this4_i_i_i33 >> 0] | 0;
    if (($38 & 1) == 0) {
     $cond_i = ($38 & 255) >>> 1;
    } else {
     $cond_i = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $40 = HEAP8[$this4_i_i_i32 >> 0] | 0;
    if (($40 & 1) == 0) {
     $cond_i46 = ($40 & 255) >>> 1;
    } else {
     $cond_i46 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add37_pn = $cond_i + ($__n_0 - $37 << 1 | 1) + $cond_i46 | 0;
   } else {
    $42 = HEAP8[$this4_i_i_i33 >> 0] | 0;
    if (($42 & 1) == 0) {
     $cond_i56 = ($42 & 255) >>> 1;
    } else {
     $cond_i56 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $44 = HEAP8[$this4_i_i_i32 >> 0] | 0;
    if (($44 & 1) == 0) {
     $cond_i71 = ($44 & 255) >>> 1;
    } else {
     $cond_i71 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add37_pn = $cond_i56 + 2 + $cond_i71 | 0;
   }
   $cond = $add37_pn + $37 | 0;
   if ($cond >>> 0 > 100 >>> 0) {
    $call49 = _malloc($cond << 2) | 0;
    $46 = $call49;
    if (($call49 | 0) == 0) {
     $exception_i5 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i5 >> 2] = 11576;
     ___cxa_throw($exception_i5 | 0, 17832, 52);
    } else {
     $__mb_0 = $46;
     $61 = $46;
    }
   } else {
    $__mb_0 = $arraydecay30;
    $61 = 0;
   }
   __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db_0, $__db_0 + ($__n_0 << 2) | 0, $29, $35, $tmpcast, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $37);
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, HEAP32[$__s >> 2] | 0, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($61 | 0) != 0) {
    _free($61);
   }
   if (!((HEAP8[$this4_i_i_i33 >> 0] & 1) == 0)) {
    $71 = HEAP32[$__sn + 8 >> 2] | 0;
    if (($71 | 0) != 0) {
     _free($71);
    }
   }
   if (!((HEAP8[$this4_i_i_i32 >> 0] & 1) == 0)) {
    $74 = HEAP32[$__sym + 8 >> 2] | 0;
    if (($74 | 0) != 0) {
     _free($74);
    }
   }
   if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
    $77 = HEAP32[$__grp + 8 >> 2] | 0;
    if (($77 | 0) != 0) {
     _free($77);
    }
   }
   $78 = $__locale_2_i_i62 + 4 | 0;
   if (((tempValue = HEAP32[$78 >> 2] | 0, HEAP32[$78 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i62 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i62);
   }
   if (($16 | 0) != 0) {
    _free($16);
   }
   if (($15 | 0) == 0) {
    $$etemp$6$0 = 400;
    $$etemp$6$1 = 0;
    $$etemp$7$0 = 100;
    $$etemp$7$1 = 0;
    STACKTOP = sp;
    return;
   }
   _free($15);
   $$etemp$6$0 = 400;
   $$etemp$6$1 = 0;
   $$etemp$7$0 = 100;
   $$etemp$7$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp49 = 0, $ref_tmp53 = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $scevgep = 0, $scevgep91 = 0, $specify_precision_0_off0_ph_i92 = 0, $arraydecay3 = 0, $call_i = 0, $8 = 0, $call7 = 0, $call10 = 0, $__nc_0 = 0, $guard_uninitialized_i18 = 0, $call_i21 = 0, $call19 = 0, $call_i30 = 0, $call25 = 0, $__nc_1 = 0, $21 = 0, $exception_i = 0, $23 = 0, $__nbh_sroa_0_0_load84 = 0, $__nc_2 = 0, $add_ptr32 = 0, $and_i42 = 0, $25 = 0, $26 = 0, $retval_0_i = 0, $call43 = 0, $28 = 0, $exception_i1 = 0, $34 = 0, $35 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i_i11 = 0, $37 = 0, $39 = 0, $__shared_owners__i = 0, $44 = 0, $49 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 48 | 0;
 $__op = sp + 280 | 0;
 $__oe = sp + 288 | 0;
 $ref_tmp49 = sp + 296 | 0;
 $ref_tmp53 = sp + 304 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   HEAP8[$__fmtp_addr_1_i >> 0] = 76;
   $scevgep91 = $__fmtp_addr_1_i + 1 | 0;
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$scevgep91 >> 0] = 97;
    $specify_precision_0_off0_ph_i92 = 0;
    break;
   } else {
    HEAP8[$scevgep91 >> 0] = 65;
    $specify_precision_0_off0_ph_i92 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i >> 0] = 46;
   HEAP8[$__fmtp_addr_1_i + 1 >> 0] = 42;
   HEAP8[$__fmtp_addr_1_i + 2 >> 0] = 76;
   $scevgep = $__fmtp_addr_1_i + 3 | 0;
   if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 102;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 70;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    }
   } else if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 101;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 69;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 103;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 71;
     $specify_precision_0_off0_ph_i92 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $8 = HEAP32[5446] | 0;
 if ($specify_precision_0_off0_ph_i92) {
  $call7 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call7;
 } else {
  $call10 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call10;
 }
 if (($__nc_0 | 0) > 29) {
  $guard_uninitialized_i18 = (HEAP8[24208] | 0) == 0;
  if ($specify_precision_0_off0_ph_i92) {
   if ($guard_uninitialized_i18) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i21 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i21;
    }
   }
   $call19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call19;
  } else {
   if ($guard_uninitialized_i18) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i30 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i30;
    }
   }
   $call25 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call25;
  }
  $21 = HEAP32[$__nb >> 2] | 0;
  if (($21 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  } else {
   $__nc_2 = $__nc_1;
   $__nbh_sroa_0_0_load84 = $21;
   $23 = $21;
  }
 } else {
  $__nc_2 = $__nc_0;
  $__nbh_sroa_0_0_load84 = 0;
  $23 = HEAP32[$__nb >> 2] | 0;
 }
 $add_ptr32 = $23 + $__nc_2 | 0;
 $and_i42 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i42 | 0) == 16) {
   $25 = HEAP8[$23 >> 0] | 0;
   if (($25 << 24 >> 24 | 0) == 45 | ($25 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $23 + 1 | 0;
    break;
   }
   if (($__nc_2 | 0) > 1 & $25 << 24 >> 24 == 48) {
    $26 = HEAP8[$23 + 1 >> 0] | 0;
    if (($26 << 24 >> 24 | 0) == 120 | ($26 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $23 + 2 | 0;
    } else {
     label = 53;
    }
   } else {
    label = 53;
   }
  } else if (($and_i42 | 0) == 32) {
   $retval_0_i = $add_ptr32;
  } else {
   label = 53;
  }
 } while (0);
 if ((label | 0) == 53) {
  $retval_0_i = $23;
 }
 if (($23 | 0) == ($arraydecay3 | 0)) {
  $__ob_0 = $__o | 0;
  $35 = 0;
  $34 = $arraydecay3;
 } else {
  $call43 = _malloc($__nc_2 << 3) | 0;
  $28 = $call43;
  if (($call43 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__ob_0 = $28;
   $35 = $28;
   $34 = $23;
  }
 }
 $__locale__i_i = $ref_tmp49 | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i11;
 $37 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$37 >> 2] | 0, HEAP32[$37 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $retval_0_i, $add_ptr32, $__ob_0, $__op, $__oe, $ref_tmp49);
 $39 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i = $39 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$39 >> 2] | 0) + 8 >> 2] & 511]($39 | 0);
 }
 $44 = $__s | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp53, HEAP32[$44 >> 2] | 0, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $49 = HEAP32[$ref_tmp53 >> 2] | 0;
 HEAP32[$44 >> 2] = $49;
 HEAP32[$agg_result >> 2] = $49;
 if (($35 | 0) != 0) {
  _free($35);
 }
 if (($__nbh_sroa_0_0_load84 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($__nbh_sroa_0_0_load84);
 STACKTOP = sp;
 return;
}
function __Z25duDebugDrawNavMeshPortalsP11duDebugDrawRK9dtNavMesh($dd, $mesh) {
 $dd = $dd | 0;
 $mesh = $mesh | 0;
 var $m_maxTiles_i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $m_tiles_i = 0, $4 = 0, $i_09 = 0, $5 = 0, $header = 0, $6 = 0, $7 = 0.0, $polys_i = 0, $verts17_i = 0, $9 = 0, $side_0130_i = 0, $conv13_i = 0, $cmp25_i = 0, $11 = 0, $12 = 0, $__i = 0, $cond32_i = 0.0, $cmp73_i = 0, $13 = 0, $_122_i = 0, $cond87_i = 0.0, $14 = 0, $i_0127_i = 0, $15 = 0, $16 = 0, $conv7_i = 0, $j_0124_us_i = 0, $mul_us_i = 0, $19 = 0, $add_us_i = 0, $mul22_us_i = 0, $add33_us_i = 0.0, $arrayidx36_us_i = 0, $arrayidx37_us_i = 0, $arrayidx50_us_i = 0, $arrayidx52_us_i = 0, $inc_us_pre_phi_i = 0, $j_0124_i = 0, $mul_i = 0, $48 = 0, $arrayidx18_i = 0, $add_i = 0, $mul22_i = 0, $arrayidx24_i = 0, $add88_i = 0.0, $arrayidx92_i = 0, $arrayidx107_i = 0, $inc_pre_phi_i = 0, $75 = 0, $inc132_i = 0, $77 = 0, $79 = 0;
 if (($dd | 0) == 0) {
  return;
 }
 $m_maxTiles_i = $mesh + 48 | 0;
 $0 = HEAP32[$m_maxTiles_i >> 2] | 0;
 if (($0 | 0) <= 0) {
  return;
 }
 $1 = $dd;
 $2 = $dd;
 $3 = $dd;
 $m_tiles_i = $mesh + 68 | 0;
 $i_09 = 0;
 $4 = $0;
 while (1) {
  $5 = HEAP32[$m_tiles_i >> 2] | 0;
  $header = $5 + ($i_09 * 60 | 0) + 8 | 0;
  $6 = HEAP32[$header >> 2] | 0;
  if (($6 | 0) == 0) {
   $79 = $4;
  } else {
   $7 = +HEAPF32[$6 + 68 >> 2];
   FUNCTION_TABLE_viif[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 31]($dd, 1, 2.0);
   $polys_i = $5 + ($i_09 * 60 | 0) + 12 | 0;
   $verts17_i = $5 + ($i_09 * 60 | 0) + 16 | 0;
   $side_0130_i = 0;
   $9 = HEAP32[$header >> 2] | 0;
   while (1) {
    if ((HEAP32[$9 + 24 >> 2] | 0) > 0) {
     $conv13_i = $side_0130_i | 32768;
     $cmp25_i = ($side_0130_i | 0) == 0;
     $11 = $side_0130_i & -5;
     $12 = ($11 | 0) == 0;
     $__i = $cmp25_i ? -2147483520 : -2139094912;
     $cond32_i = $cmp25_i ? -.03999999910593033 : .03999999910593033;
     $cmp73_i = ($side_0130_i | 0) == 2;
     $13 = ($11 | 0) == 2;
     $_122_i = $cmp73_i ? -2147450880 : -2139062272;
     $cond87_i = $cmp73_i ? -.03999999910593033 : .03999999910593033;
     $i_0127_i = 0;
     $14 = $9;
     while (1) {
      $15 = HEAP32[$polys_i >> 2] | 0;
      $16 = HEAP8[$15 + ($i_0127_i << 5) + 30 >> 0] | 0;
      $conv7_i = $16 & 255;
      if ($16 << 24 >> 24 == 0) {
       $75 = $14;
      } else {
       if ($12) {
        $j_0124_us_i = 0;
        while (1) {
         if ((HEAPU16[$15 + ($i_0127_i << 5) + 16 + ($j_0124_us_i << 1) >> 1] | 0 | 0) == ($conv13_i | 0)) {
          $mul_us_i = (HEAPU16[$15 + ($i_0127_i << 5) + 4 + ($j_0124_us_i << 1) >> 1] | 0) * 3 | 0;
          $19 = HEAP32[$verts17_i >> 2] | 0;
          $add_us_i = $j_0124_us_i + 1 | 0;
          $mul22_us_i = (HEAPU16[$15 + ($i_0127_i << 5) + 4 + ((($add_us_i | 0) % ($conv7_i | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
          $add33_us_i = $cond32_i + +HEAPF32[$19 + ($mul_us_i << 2) >> 2];
          $arrayidx36_us_i = $19 + ($mul_us_i + 1 << 2) | 0;
          $arrayidx37_us_i = $19 + ($mul_us_i + 2 << 2) | 0;
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, +HEAPF32[$arrayidx36_us_i >> 2] - $7, +HEAPF32[$arrayidx37_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, $7 + +HEAPF32[$arrayidx36_us_i >> 2], +HEAPF32[$arrayidx37_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, $7 + +HEAPF32[$arrayidx36_us_i >> 2], +HEAPF32[$arrayidx37_us_i >> 2], $__i);
          $arrayidx50_us_i = $19 + ($mul22_us_i + 1 << 2) | 0;
          $arrayidx52_us_i = $19 + ($mul22_us_i + 2 << 2) | 0;
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, $7 + +HEAPF32[$arrayidx50_us_i >> 2], +HEAPF32[$arrayidx52_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, $7 + +HEAPF32[$arrayidx50_us_i >> 2], +HEAPF32[$arrayidx52_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, +HEAPF32[$arrayidx50_us_i >> 2] - $7, +HEAPF32[$arrayidx52_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, +HEAPF32[$arrayidx50_us_i >> 2] - $7, +HEAPF32[$arrayidx52_us_i >> 2], $__i);
          FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, $add33_us_i, +HEAPF32[$arrayidx36_us_i >> 2] - $7, +HEAPF32[$arrayidx37_us_i >> 2], $__i);
          $inc_us_pre_phi_i = $add_us_i;
         } else {
          $inc_us_pre_phi_i = $j_0124_us_i + 1 | 0;
         }
         if (($inc_us_pre_phi_i | 0) < ($conv7_i | 0)) {
          $j_0124_us_i = $inc_us_pre_phi_i;
         } else {
          break;
         }
        }
       } else {
        $j_0124_i = 0;
        while (1) {
         if ((HEAPU16[$15 + ($i_0127_i << 5) + 16 + ($j_0124_i << 1) >> 1] | 0 | 0) == ($conv13_i | 0)) {
          $mul_i = (HEAPU16[$15 + ($i_0127_i << 5) + 4 + ($j_0124_i << 1) >> 1] | 0) * 3 | 0;
          $48 = HEAP32[$verts17_i >> 2] | 0;
          $arrayidx18_i = $48 + ($mul_i << 2) | 0;
          $add_i = $j_0124_i + 1 | 0;
          $mul22_i = (HEAPU16[$15 + ($i_0127_i << 5) + 4 + ((($add_i | 0) % ($conv7_i | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
          $arrayidx24_i = $48 + ($mul22_i << 2) | 0;
          if ($13) {
           $add88_i = $cond87_i + +HEAPF32[$48 + ($mul_i + 2 << 2) >> 2];
           $arrayidx92_i = $48 + ($mul_i + 1 << 2) | 0;
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx18_i >> 2], +HEAPF32[$arrayidx92_i >> 2] - $7, $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx18_i >> 2], $7 + +HEAPF32[$arrayidx92_i >> 2], $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx18_i >> 2], $7 + +HEAPF32[$arrayidx92_i >> 2], $add88_i, $_122_i);
           $arrayidx107_i = $48 + ($mul22_i + 1 << 2) | 0;
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx24_i >> 2], $7 + +HEAPF32[$arrayidx107_i >> 2], $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx24_i >> 2], $7 + +HEAPF32[$arrayidx107_i >> 2], $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx24_i >> 2], +HEAPF32[$arrayidx107_i >> 2] - $7, $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx24_i >> 2], +HEAPF32[$arrayidx107_i >> 2] - $7, $add88_i, $_122_i);
           FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arrayidx18_i >> 2], +HEAPF32[$arrayidx92_i >> 2] - $7, $add88_i, $_122_i);
           $inc_pre_phi_i = $add_i;
          } else {
           $inc_pre_phi_i = $add_i;
          }
         } else {
          $inc_pre_phi_i = $j_0124_i + 1 | 0;
         }
         if (($inc_pre_phi_i | 0) < ($conv7_i | 0)) {
          $j_0124_i = $inc_pre_phi_i;
         } else {
          break;
         }
        }
       }
       $75 = HEAP32[$header >> 2] | 0;
      }
      $inc132_i = $i_0127_i + 1 | 0;
      if (($inc132_i | 0) < (HEAP32[$75 + 24 >> 2] | 0)) {
       $i_0127_i = $inc132_i;
       $14 = $75;
      } else {
       $77 = $75;
       break;
      }
     }
    } else {
     $77 = $9;
    }
    $side_0130_i = $side_0130_i + 1 | 0;
    if (($side_0130_i | 0) >= 8) {
     break;
    } else {
     $9 = $77;
    }
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 511]($dd);
   $79 = HEAP32[$m_maxTiles_i >> 2] | 0;
  }
  $i_09 = $i_09 + 1 | 0;
  if (($i_09 | 0) >= ($79 | 0)) {
   break;
  } else {
   $4 = $79;
  }
 }
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp51 = 0, $ref_tmp55 = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $incdec_ptr11_i = 0, $specify_precision_0_off0_ph_i88 = 0, $arraydecay3 = 0, $call_i = 0, $8 = 0, $call7 = 0, $call10 = 0, $__nc_0 = 0, $guard_uninitialized_i19 = 0, $call_i22 = 0, $call19 = 0, $call_i31 = 0, $call27 = 0, $__nc_1 = 0, $22 = 0, $exception_i = 0, $24 = 0, $__nbh_sroa_0_0_load86 = 0, $__nc_2 = 0, $add_ptr34 = 0, $and_i44 = 0, $26 = 0, $27 = 0, $retval_0_i = 0, $call45 = 0, $29 = 0, $exception_i1 = 0, $35 = 0, $36 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i_i11 = 0, $38 = 0, $40 = 0, $__shared_owners__i = 0, $45 = 0, $50 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 48 | 0;
 $__op = sp + 280 | 0;
 $__oe = sp + 288 | 0;
 $ref_tmp51 = sp + 296 | 0;
 $ref_tmp55 = sp + 304 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$__fmtp_addr_1_i >> 0] = 97;
    $specify_precision_0_off0_ph_i88 = 0;
    break;
   } else {
    HEAP8[$__fmtp_addr_1_i >> 0] = 65;
    $specify_precision_0_off0_ph_i88 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i >> 0] = 46;
   $incdec_ptr11_i = $__fmtp_addr_1_i + 2 | 0;
   HEAP8[$__fmtp_addr_1_i + 1 >> 0] = 42;
   if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 102;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 70;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    }
   } else if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 101;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 69;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 103;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 71;
     $specify_precision_0_off0_ph_i88 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $8 = HEAP32[5446] | 0;
 if ($specify_precision_0_off0_ph_i88) {
  $call7 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call7;
 } else {
  $call10 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call10;
 }
 if (($__nc_0 | 0) > 29) {
  $guard_uninitialized_i19 = (HEAP8[24208] | 0) == 0;
  if ($specify_precision_0_off0_ph_i88) {
   if ($guard_uninitialized_i19) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i22 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i22;
    }
   }
   $call19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call19;
  } else {
   if ($guard_uninitialized_i19) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i31 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i31;
    }
   }
   $call27 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call27;
  }
  $22 = HEAP32[$__nb >> 2] | 0;
  if (($22 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  } else {
   $__nc_2 = $__nc_1;
   $__nbh_sroa_0_0_load86 = $22;
   $24 = $22;
  }
 } else {
  $__nc_2 = $__nc_0;
  $__nbh_sroa_0_0_load86 = 0;
  $24 = HEAP32[$__nb >> 2] | 0;
 }
 $add_ptr34 = $24 + $__nc_2 | 0;
 $and_i44 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i44 | 0) == 16) {
   $26 = HEAP8[$24 >> 0] | 0;
   if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $24 + 1 | 0;
    break;
   }
   if (($__nc_2 | 0) > 1 & $26 << 24 >> 24 == 48) {
    $27 = HEAP8[$24 + 1 >> 0] | 0;
    if (($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $24 + 2 | 0;
    } else {
     label = 53;
    }
   } else {
    label = 53;
   }
  } else if (($and_i44 | 0) == 32) {
   $retval_0_i = $add_ptr34;
  } else {
   label = 53;
  }
 } while (0);
 if ((label | 0) == 53) {
  $retval_0_i = $24;
 }
 if (($24 | 0) == ($arraydecay3 | 0)) {
  $__ob_0 = $__o | 0;
  $36 = 0;
  $35 = $arraydecay3;
 } else {
  $call45 = _malloc($__nc_2 << 3) | 0;
  $29 = $call45;
  if (($call45 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__ob_0 = $29;
   $36 = $29;
   $35 = $24;
  }
 }
 $__locale__i_i = $ref_tmp51 | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i11;
 $38 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$38 >> 2] | 0, HEAP32[$38 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($35, $retval_0_i, $add_ptr34, $__ob_0, $__op, $__oe, $ref_tmp51);
 $40 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i = $40 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 8 >> 2] & 511]($40 | 0);
 }
 $45 = $__s | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp55, HEAP32[$45 >> 2] | 0, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $50 = HEAP32[$ref_tmp55 >> 2] | 0;
 HEAP32[$45 >> 2] = $50;
 HEAP32[$agg_result >> 2] = $50;
 if (($36 | 0) != 0) {
  _free($36);
 }
 if (($__nbh_sroa_0_0_load86 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($__nbh_sroa_0_0_load86);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp49 = 0, $ref_tmp53 = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $scevgep = 0, $scevgep93 = 0, $specify_precision_0_off0_ph_i94 = 0, $arraydecay3 = 0, $call_i = 0, $8 = 0, $call7 = 0, $call10 = 0, $__nc_0 = 0, $guard_uninitialized_i18 = 0, $call_i21 = 0, $call19 = 0, $call_i30 = 0, $call25 = 0, $__nc_1 = 0, $21 = 0, $exception_i = 0, $23 = 0, $__nbh_sroa_0_0_load86 = 0, $__nc_2 = 0, $add_ptr32 = 0, $and_i42 = 0, $25 = 0, $26 = 0, $retval_0_i = 0, $call43 = 0, $exception_i1 = 0, $33 = 0, $34 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i_i11 = 0, $36 = 0, $38 = 0, $__shared_owners__i = 0, $43 = 0, $48 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 48 | 0;
 $__op = sp + 112 | 0;
 $__oe = sp + 120 | 0;
 $ref_tmp49 = sp + 128 | 0;
 $ref_tmp53 = sp + 136 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   HEAP8[$__fmtp_addr_1_i >> 0] = 76;
   $scevgep93 = $__fmtp_addr_1_i + 1 | 0;
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$scevgep93 >> 0] = 97;
    $specify_precision_0_off0_ph_i94 = 0;
    break;
   } else {
    HEAP8[$scevgep93 >> 0] = 65;
    $specify_precision_0_off0_ph_i94 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i >> 0] = 46;
   HEAP8[$__fmtp_addr_1_i + 1 >> 0] = 42;
   HEAP8[$__fmtp_addr_1_i + 2 >> 0] = 76;
   $scevgep = $__fmtp_addr_1_i + 3 | 0;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 101;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 69;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 102;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 70;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$scevgep >> 0] = 103;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    } else {
     HEAP8[$scevgep >> 0] = 71;
     $specify_precision_0_off0_ph_i94 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $8 = HEAP32[5446] | 0;
 if ($specify_precision_0_off0_ph_i94) {
  $call7 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call7;
 } else {
  $call10 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call10;
 }
 if (($__nc_0 | 0) > 29) {
  $guard_uninitialized_i18 = (HEAP8[24208] | 0) == 0;
  if ($specify_precision_0_off0_ph_i94) {
   if ($guard_uninitialized_i18) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i21 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i21;
    }
   }
   $call19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call19;
  } else {
   if ($guard_uninitialized_i18) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i30 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i30;
    }
   }
   $call25 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call25;
  }
  $21 = HEAP32[$__nb >> 2] | 0;
  if (($21 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  } else {
   $__nc_2 = $__nc_1;
   $__nbh_sroa_0_0_load86 = $21;
   $23 = $21;
  }
 } else {
  $__nc_2 = $__nc_0;
  $__nbh_sroa_0_0_load86 = 0;
  $23 = HEAP32[$__nb >> 2] | 0;
 }
 $add_ptr32 = $23 + $__nc_2 | 0;
 $and_i42 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i42 | 0) == 16) {
   $25 = HEAP8[$23 >> 0] | 0;
   if (($25 << 24 >> 24 | 0) == 45 | ($25 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $23 + 1 | 0;
    break;
   }
   if (($__nc_2 | 0) > 1 & $25 << 24 >> 24 == 48) {
    $26 = HEAP8[$23 + 1 >> 0] | 0;
    if (($26 << 24 >> 24 | 0) == 120 | ($26 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $23 + 2 | 0;
    } else {
     label = 53;
    }
   } else {
    label = 53;
   }
  } else if (($and_i42 | 0) == 32) {
   $retval_0_i = $add_ptr32;
  } else {
   label = 53;
  }
 } while (0);
 if ((label | 0) == 53) {
  $retval_0_i = $23;
 }
 if (($23 | 0) == ($arraydecay3 | 0)) {
  $__ob_0 = $__o | 0;
  $34 = 0;
  $33 = $arraydecay3;
 } else {
  $call43 = _malloc($__nc_2 << 1) | 0;
  if (($call43 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__ob_0 = $call43;
   $34 = $call43;
   $33 = $23;
  }
 }
 $__locale__i_i = $ref_tmp49 | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i11;
 $36 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$36 >> 2] | 0, HEAP32[$36 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($33, $retval_0_i, $add_ptr32, $__ob_0, $__op, $__oe, $ref_tmp49);
 $38 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i = $38 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$38 >> 2] | 0) + 8 >> 2] & 511]($38 | 0);
 }
 $43 = $__s | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp53, HEAP32[$43 >> 2] | 0, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $48 = HEAP32[$ref_tmp53 >> 2] | 0;
 HEAP32[$43 >> 2] = $48;
 HEAP32[$agg_result >> 2] = $48;
 if (($34 | 0) != 0) {
  _free($34);
 }
 if (($__nbh_sroa_0_0_load86 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($__nbh_sroa_0_0_load86);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp51 = 0, $ref_tmp55 = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_1_i = 0, $and6_i = 0, $and7_i = 0, $incdec_ptr11_i = 0, $specify_precision_0_off0_ph_i90 = 0, $arraydecay3 = 0, $call_i = 0, $8 = 0, $call7 = 0, $call10 = 0, $__nc_0 = 0, $guard_uninitialized_i19 = 0, $call_i22 = 0, $call19 = 0, $call_i31 = 0, $call27 = 0, $__nc_1 = 0, $22 = 0, $exception_i = 0, $24 = 0, $__nbh_sroa_0_0_load88 = 0, $__nc_2 = 0, $add_ptr34 = 0, $and_i44 = 0, $26 = 0, $27 = 0, $retval_0_i = 0, $call45 = 0, $exception_i1 = 0, $34 = 0, $35 = 0, $__ob_0 = 0, $__locale__i_i = 0, $__locale_2_i_i11 = 0, $37 = 0, $39 = 0, $__shared_owners__i = 0, $44 = 0, $49 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 48 | 0;
 $__op = sp + 112 | 0;
 $__oe = sp + 120 | 0;
 $ref_tmp51 = sp + 128 | 0;
 $ref_tmp55 = sp + 136 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 1024 | 0) == 0) {
  $__fmtp_addr_1_i = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_1_i = $__fmtp_addr_0_i + 1 | 0;
 }
 $and6_i = $0 & 260;
 $and7_i = $0 >>> 14;
 do {
  if (($and6_i | 0) == 260) {
   if (($and7_i & 1 | 0) == 0) {
    HEAP8[$__fmtp_addr_1_i >> 0] = 97;
    $specify_precision_0_off0_ph_i90 = 0;
    break;
   } else {
    HEAP8[$__fmtp_addr_1_i >> 0] = 65;
    $specify_precision_0_off0_ph_i90 = 0;
    break;
   }
  } else {
   HEAP8[$__fmtp_addr_1_i >> 0] = 46;
   $incdec_ptr11_i = $__fmtp_addr_1_i + 2 | 0;
   HEAP8[$__fmtp_addr_1_i + 1 >> 0] = 42;
   if (($and6_i | 0) == 256) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 101;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 69;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    }
   } else if (($and6_i | 0) == 4) {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 102;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 70;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    }
   } else {
    if (($and7_i & 1 | 0) == 0) {
     HEAP8[$incdec_ptr11_i >> 0] = 103;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    } else {
     HEAP8[$incdec_ptr11_i >> 0] = 71;
     $specify_precision_0_off0_ph_i90 = 1;
     break;
    }
   }
  }
 } while (0);
 $arraydecay3 = $__nar | 0;
 HEAP32[$__nb >> 2] = $arraydecay3;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $8 = HEAP32[5446] | 0;
 if ($specify_precision_0_off0_ph_i90) {
  $call7 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call7;
 } else {
  $call10 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3, 30, $8, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__v, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $__nc_0 = $call10;
 }
 if (($__nc_0 | 0) > 29) {
  $guard_uninitialized_i19 = (HEAP8[24208] | 0) == 0;
  if ($specify_precision_0_off0_ph_i90) {
   if ($guard_uninitialized_i19) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i22 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i22;
    }
   }
   $call19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call19;
  } else {
   if ($guard_uninitialized_i19) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i31 = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i31;
    }
   }
   $call27 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$__iob + 8 >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $__v, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $__nc_1 = $call27;
  }
  $22 = HEAP32[$__nb >> 2] | 0;
  if (($22 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  } else {
   $__nc_2 = $__nc_1;
   $__nbh_sroa_0_0_load88 = $22;
   $24 = $22;
  }
 } else {
  $__nc_2 = $__nc_0;
  $__nbh_sroa_0_0_load88 = 0;
  $24 = HEAP32[$__nb >> 2] | 0;
 }
 $add_ptr34 = $24 + $__nc_2 | 0;
 $and_i44 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i44 | 0) == 32) {
   $retval_0_i = $add_ptr34;
  } else if (($and_i44 | 0) == 16) {
   $26 = HEAP8[$24 >> 0] | 0;
   if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $24 + 1 | 0;
    break;
   }
   if (($__nc_2 | 0) > 1 & $26 << 24 >> 24 == 48) {
    $27 = HEAP8[$24 + 1 >> 0] | 0;
    if (($27 << 24 >> 24 | 0) == 120 | ($27 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $24 + 2 | 0;
    } else {
     label = 53;
    }
   } else {
    label = 53;
   }
  } else {
   label = 53;
  }
 } while (0);
 if ((label | 0) == 53) {
  $retval_0_i = $24;
 }
 if (($24 | 0) == ($arraydecay3 | 0)) {
  $__ob_0 = $__o | 0;
  $35 = 0;
  $34 = $arraydecay3;
 } else {
  $call45 = _malloc($__nc_2 << 1) | 0;
  if (($call45 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__ob_0 = $call45;
   $35 = $call45;
   $34 = $24;
  }
 }
 $__locale__i_i = $ref_tmp51 | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i11;
 $37 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$37 >> 2] | 0, HEAP32[$37 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $retval_0_i, $add_ptr34, $__ob_0, $__op, $__oe, $ref_tmp51);
 $39 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i = $39 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$39 >> 2] | 0) + 8 >> 2] & 511]($39 | 0);
 }
 $44 = $__s | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp55, HEAP32[$44 >> 2] | 0, $__ob_0, HEAP32[$__op >> 2] | 0, HEAP32[$__oe >> 2] | 0, $__iob, $__fl);
 $49 = HEAP32[$ref_tmp55 >> 2] | 0;
 HEAP32[$44 >> 2] = $49;
 HEAP32[$agg_result >> 2] = $49;
 if (($35 | 0) != 0) {
  _free($35);
 }
 if (($__nbh_sroa_0_0_load88 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($__nbh_sroa_0_0_load88);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $__p_i_i_i_i = 0, $__bb = 0, $__pat = 0, $tmpcast = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__sym = 0, $__sn = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $0 = 0, $1 = 0, $call = 0, $call_i = 0, $call6 = 0, $6 = 0, $exception_i = 0, $call11 = 0, $exception_i1 = 0, $14 = 0, $15 = 0, $__n_0 = 0, $__db_0 = 0, $__locale_2_i_i63 = 0, $16 = 0, $17 = 0, $sub_i_i_i = 0, $25 = 0, $26 = 0, $exception_i_i_i = 0, $28 = 0, $29 = 0, $34 = 0, $this4_i_i_i = 0, $this4_i_i_i33 = 0, $this4_i_i_i34 = 0, $35 = 0, $36 = 0, $37 = 0, $cond_i = 0, $39 = 0, $cond_i47 = 0, $41 = 0, $cond_i57 = 0, $43 = 0, $cond_i73 = 0, $add37_pn = 0, $cond = 0, $call49 = 0, $exception_i5 = 0, $58 = 0, $__mb_0 = 0, $67 = 0, $69 = 0, $71 = 0, $72 = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__bb = sp + 120 | 0;
 $__pat = sp + 232 | 0;
 $tmpcast = $__pat;
 $__dp = STACKTOP;
 STACKTOP = STACKTOP + 1 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__ts = STACKTOP;
 STACKTOP = STACKTOP + 1 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__grp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 100 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $0;
 $1 = sp + 128 | 0;
 $call = _snprintf($0 | 0, 100, 1912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__units, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if ($call >>> 0 > 99 >>> 0) {
  if ((HEAP8[24208] | 0) == 0) {
   if ((___cxa_guard_acquire(24208) | 0) != 0) {
    $call_i = _newlocale(2147483647, 896, 0) | 0;
    HEAP32[5446] = $call_i;
   }
  }
  $call6 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb, HEAP32[5446] | 0, 1912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = $__units, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $6 = HEAP32[$__bb >> 2] | 0;
  if (($6 | 0) == 0) {
   $exception_i = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i >> 2] = 11576;
   ___cxa_throw($exception_i | 0, 17832, 52);
  }
  $call11 = _malloc($call6) | 0;
  if (($call11 | 0) == 0) {
   $exception_i1 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i1 >> 2] = 11576;
   ___cxa_throw($exception_i1 | 0, 17832, 52);
  } else {
   $__db_0 = $call11;
   $__n_0 = $call6;
   $15 = $call11;
   $14 = $6;
  }
 } else {
  $__db_0 = $1;
  $__n_0 = $call;
  $15 = 0;
  $14 = 0;
 }
 $__locale_2_i_i63 = HEAP32[$__iob + 28 >> 2] | 0;
 $16 = $__locale_2_i_i63;
 $17 = $__locale_2_i_i63 + 4 | 0;
 tempValue = HEAP32[$17 >> 2] | 0, HEAP32[$17 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $25 = HEAP32[$__locale_2_i_i63 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i63 + 12 >> 2] | 0) - $25 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $26 = HEAP32[$25 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($26 | 0) != 0) {
   $28 = $26;
   $29 = HEAP32[$__bb >> 2] | 0;
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 32 >> 2] & 31]($28, $29, $29 + $__n_0 | 0, $__db_0) | 0;
   if (($__n_0 | 0) == 0) {
    $34 = 0;
   } else {
    $34 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
   }
   HEAP32[$__pat >> 2] = 0;
   $this4_i_i_i = $__grp;
   _memset($this4_i_i_i | 0, 0, 12) | 0;
   $this4_i_i_i33 = $__sym;
   _memset($this4_i_i_i33 | 0, 0, 12) | 0;
   $this4_i_i_i34 = $__sn;
   _memset($this4_i_i_i34 | 0, 0, 12) | 0;
   __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $34, $16, $tmpcast, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $35 = $__mbuf | 0;
   $36 = HEAP32[$__fd >> 2] | 0;
   if (($__n_0 | 0) > ($36 | 0)) {
    $37 = HEAP8[$this4_i_i_i34 >> 0] | 0;
    if (($37 & 1) == 0) {
     $cond_i = ($37 & 255) >>> 1;
    } else {
     $cond_i = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $39 = HEAP8[$this4_i_i_i33 >> 0] | 0;
    if (($39 & 1) == 0) {
     $cond_i47 = ($39 & 255) >>> 1;
    } else {
     $cond_i47 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add37_pn = $cond_i + ($__n_0 - $36 << 1 | 1) + $cond_i47 | 0;
   } else {
    $41 = HEAP8[$this4_i_i_i34 >> 0] | 0;
    if (($41 & 1) == 0) {
     $cond_i57 = ($41 & 255) >>> 1;
    } else {
     $cond_i57 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $43 = HEAP8[$this4_i_i_i33 >> 0] | 0;
    if (($43 & 1) == 0) {
     $cond_i73 = ($43 & 255) >>> 1;
    } else {
     $cond_i73 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add37_pn = $cond_i57 + 2 + $cond_i73 | 0;
   }
   $cond = $add37_pn + $36 | 0;
   if ($cond >>> 0 > 100 >>> 0) {
    $call49 = _malloc($cond) | 0;
    if (($call49 | 0) == 0) {
     $exception_i5 = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i5 >> 2] = 11576;
     ___cxa_throw($exception_i5 | 0, 17832, 52);
    } else {
     $__mb_0 = $call49;
     $58 = $call49;
    }
   } else {
    $__mb_0 = $35;
    $58 = 0;
   }
   __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db_0, $__db_0 + $__n_0 | 0, $28, $34, $tmpcast, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp, $__sym, $__sn, $36);
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, HEAP32[$__s >> 2] | 0, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($58 | 0) != 0) {
    _free($58);
   }
   if (!((HEAP8[$this4_i_i_i34 >> 0] & 1) == 0)) {
    $67 = HEAP32[$__sn + 8 >> 2] | 0;
    if (($67 | 0) != 0) {
     _free($67);
    }
   }
   if (!((HEAP8[$this4_i_i_i33 >> 0] & 1) == 0)) {
    $69 = HEAP32[$__sym + 8 >> 2] | 0;
    if (($69 | 0) != 0) {
     _free($69);
    }
   }
   if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
    $71 = HEAP32[$__grp + 8 >> 2] | 0;
    if (($71 | 0) != 0) {
     _free($71);
    }
   }
   $72 = $__locale_2_i_i63 + 4 | 0;
   if (((tempValue = HEAP32[$72 >> 2] | 0, HEAP32[$72 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i63 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i63);
   }
   if (($15 | 0) != 0) {
    _free($15);
   }
   if (($14 | 0) == 0) {
    $$etemp$6$0 = 100;
    $$etemp$6$1 = 0;
    $$etemp$7$0 = 100;
    $$etemp$7$1 = 0;
    STACKTOP = sp;
    return;
   }
   _free($14);
   $$etemp$6$0 = 100;
   $$etemp$6$1 = 0;
   $$etemp$7$0 = 100;
   $$etemp$7$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__neg = 0, $__atoms = 0, $__nbuf = 0, $__first__i_i_i = 0, $__second__i_i_i = 0, $add_ptr = 0, $__locale_2_i_i14 = 0, $1 = 0, $2 = 0, $sub_i_i_i = 0, $10 = 0, $11 = 0, $exception_i_i_i = 0, $13 = 0, $14 = 0, $arraydecay9 = 0, $20 = 0, $21 = 0, $22 = 0, $sub_ptr_sub = 0, $call23 = 0, $exception_i2 = 0, $32 = 0, $__nc_0 = 0, $__nc_1 = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast42 = 0, $__w_053 = 0, $__nc_252 = 0, $34 = 0, $__first_addr_05_i = 0, $incdec_ptr_i = 0, $__first_addr_0_lcssa_i = 0, $incdec_ptr45 = 0, $incdec_ptr46 = 0, $__nc_2_lcssa = 0, $call49 = 0, $exception_i = 0, $call_i1_i = 0, $add_ptr_i_i = 0, $__sbuf__i_i_i = 0, $48 = 0, $49 = 0, $retval_0_i_i_i_i = 0, $54 = 0, $55 = 0, $56 = 0, $retval_0_i_i12_i_i = 0, $64 = 0, $69 = 0, $$etemp$5$0 = 0, $$etemp$5$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 584 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__wbuf = sp + 16 | 0;
 $__wb = sp + 416 | 0;
 $__wn = sp + 424 | 0;
 $__neg = sp + 432 | 0;
 $__atoms = sp + 440 | 0;
 $__nbuf = sp + 480 | 0;
 $__first__i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i >> 2] = $__wbuf;
 $__second__i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i >> 2] = 182;
 $add_ptr = $__wbuf + 400 | 0;
 $__locale_2_i_i14 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i14;
 $2 = $__locale_2_i_i14 + 4 | 0;
 tempValue = HEAP32[$2 >> 2] | 0, HEAP32[$2 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $10 = HEAP32[$__locale_2_i_i14 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i14 + 12 >> 2] | 0) - $10 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $11 = HEAP32[$10 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($11 | 0) != 0) {
   $13 = $11;
   HEAP8[$__neg >> 0] = 0;
   $14 = $__e | 0;
   do {
    if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, HEAP32[$14 >> 2] | 0, $__intl, $1, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $13, $__wb, $__wn, $add_ptr) | 0) {
     $arraydecay9 = $__atoms | 0;
     FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 48 >> 2] & 31]($13, 10864, 10874, $arraydecay9) | 0;
     $20 = $__nbuf | 0;
     $21 = HEAP32[$__wn >> 2] | 0;
     $22 = HEAP32[$__first__i_i_i >> 2] | 0;
     $sub_ptr_sub = $21 - $22 | 0;
     if (($sub_ptr_sub | 0) > 392) {
      $call23 = _malloc(($sub_ptr_sub >> 2) + 2 | 0) | 0;
      if (($call23 | 0) == 0) {
       $exception_i2 = ___cxa_allocate_exception(4) | 0;
       HEAP32[$exception_i2 >> 2] = 11576;
       ___cxa_throw($exception_i2 | 0, 17832, 52);
      } else {
       $__nc_0 = $call23;
       $32 = $call23;
      }
     } else {
      $__nc_0 = $20;
      $32 = 0;
     }
     if ((HEAP8[$__neg >> 0] | 0) == 0) {
      $__nc_1 = $__nc_0;
     } else {
      HEAP8[$__nc_0 >> 0] = 45;
      $__nc_1 = $__nc_0 + 1 | 0;
     }
     if ($22 >>> 0 < $21 >>> 0) {
      $add_ptr_i = $__atoms + 40 | 0;
      $sub_ptr_rhs_cast42 = $__atoms;
      $__nc_252 = $__nc_1;
      $__w_053 = $22;
      while (1) {
       $34 = HEAP32[$__w_053 >> 2] | 0;
       $__first_addr_05_i = $arraydecay9;
       while (1) {
        $incdec_ptr_i = $__first_addr_05_i + 4 | 0;
        if ((HEAP32[$__first_addr_05_i >> 2] | 0) == ($34 | 0)) {
         $__first_addr_0_lcssa_i = $__first_addr_05_i;
         break;
        }
        if (($incdec_ptr_i | 0) == ($add_ptr_i | 0)) {
         $__first_addr_0_lcssa_i = $add_ptr_i;
         break;
        } else {
         $__first_addr_05_i = $incdec_ptr_i;
        }
       }
       HEAP8[$__nc_252 >> 0] = HEAP8[10864 + ($__first_addr_0_lcssa_i - $sub_ptr_rhs_cast42 >> 2) >> 0] | 0;
       $incdec_ptr45 = $__w_053 + 4 | 0;
       $incdec_ptr46 = $__nc_252 + 1 | 0;
       if ($incdec_ptr45 >>> 0 < (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc_252 = $incdec_ptr46;
        $__w_053 = $incdec_ptr45;
       } else {
        $__nc_2_lcssa = $incdec_ptr46;
        break;
       }
      }
     } else {
      $__nc_2_lcssa = $__nc_1;
     }
     HEAP8[$__nc_2_lcssa >> 0] = 0;
     $call49 = _sscanf($20 | 0, 3792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($call49 | 0) == 1) {
      if (($32 | 0) == 0) {
       break;
      }
      _free($32);
      break;
     }
     $exception_i = ___cxa_allocate_exception(8) | 0;
     HEAP32[$exception_i >> 2] = 11640;
     $call_i1_i = __Znwj(28) | 0;
     HEAP32[$call_i1_i + 4 >> 2] = 15;
     HEAP32[$call_i1_i >> 2] = 15;
     $add_ptr_i_i = $call_i1_i + 12 | 0;
     HEAP32[$exception_i + 4 >> 2] = $add_ptr_i_i;
     HEAP32[$call_i1_i + 8 >> 2] = 0;
     _memcpy($add_ptr_i_i | 0, 2936, 16) | 0;
     ___cxa_throw($exception_i | 0, 17864, 90);
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $48 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($48 | 0) == 0) {
     $54 = 1;
    } else {
     $49 = HEAP32[$48 + 12 >> 2] | 0;
     if (($49 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
      $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] & 255]($48) | 0;
     } else {
      $retval_0_i_i_i_i = HEAP32[$49 >> 2] | 0;
     }
     if (($retval_0_i_i_i_i | 0) == -1) {
      HEAP32[$__sbuf__i_i_i >> 2] = 0;
      $54 = 1;
      break;
     } else {
      $54 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
      break;
     }
    }
   } while (0);
   $55 = HEAP32[$14 >> 2] | 0;
   do {
    if (($55 | 0) == 0) {
     label = 50;
    } else {
     $56 = HEAP32[$55 + 12 >> 2] | 0;
     if (($56 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
      $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 255]($55) | 0;
     } else {
      $retval_0_i_i12_i_i = HEAP32[$56 >> 2] | 0;
     }
     if (($retval_0_i_i12_i_i | 0) == -1) {
      HEAP32[$14 >> 2] = 0;
      label = 50;
      break;
     } else {
      if ($54) {
       break;
      } else {
       label = 52;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 50) {
    if ($54) {
     label = 52;
    }
   }
   if ((label | 0) == 52) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i_i_i >> 2];
   $64 = $__locale_2_i_i14 + 4 | 0;
   if (((tempValue = HEAP32[$64 >> 2] | 0, HEAP32[$64 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i14 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i14);
   }
   $69 = HEAP32[$__first__i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i >> 2] = 0;
   if (($69 | 0) == 0) {
    $$etemp$5$0 = 400;
    $$etemp$5$1 = 0;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i >> 2] & 511]($69);
   $$etemp$5$0 = 400;
   $$etemp$5$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__wbuf = 0, $__wb = 0, $__wn = 0, $__neg = 0, $__atoms = 0, $__nbuf = 0, $__first__i_i_i = 0, $__second__i_i_i = 0, $add_ptr = 0, $__locale_2_i_i14 = 0, $1 = 0, $2 = 0, $sub_i_i_i = 0, $10 = 0, $11 = 0, $exception_i_i_i = 0, $13 = 0, $14 = 0, $arraydecay9 = 0, $19 = 0, $20 = 0, $21 = 0, $sub_ptr_sub = 0, $call22 = 0, $exception_i2 = 0, $31 = 0, $__nc_0 = 0, $__nc_1 = 0, $add_ptr_i = 0, $sub_ptr_rhs_cast41 = 0, $__w_053 = 0, $__nc_252 = 0, $33 = 0, $__first_addr_05_i = 0, $incdec_ptr_i = 0, $__first_addr_0_lcssa_i = 0, $incdec_ptr43 = 0, $incdec_ptr44 = 0, $__nc_2_lcssa = 0, $call47 = 0, $exception_i = 0, $call_i1_i = 0, $add_ptr_i_i = 0, $__sbuf__i_i_i = 0, $47 = 0, $52 = 0, $cmp_i_i_i = 0, $53 = 0, $61 = 0, $66 = 0, $$etemp$4$0 = 0, $$etemp$4$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 264 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__wbuf = sp + 16 | 0;
 $__wb = sp + 120 | 0;
 $__wn = sp + 128 | 0;
 $__neg = sp + 136 | 0;
 $__atoms = sp + 144 | 0;
 $__nbuf = sp + 160 | 0;
 $__first__i_i_i = $__wb | 0;
 HEAP32[$__first__i_i_i >> 2] = $__wbuf;
 $__second__i_i_i = $__wb + 4 | 0;
 HEAP32[$__second__i_i_i >> 2] = 182;
 $add_ptr = $__wbuf + 100 | 0;
 $__locale_2_i_i14 = HEAP32[$__iob + 28 >> 2] | 0;
 $1 = $__locale_2_i_i14;
 $2 = $__locale_2_i_i14 + 4 | 0;
 tempValue = HEAP32[$2 >> 2] | 0, HEAP32[$2 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $10 = HEAP32[$__locale_2_i_i14 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i14 + 12 >> 2] | 0) - $10 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $11 = HEAP32[$10 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($11 | 0) != 0) {
   $13 = $11;
   HEAP8[$__neg >> 0] = 0;
   $14 = $__e | 0;
   do {
    if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, HEAP32[$14 >> 2] | 0, $__intl, $1, HEAP32[$__iob + 4 >> 2] | 0, $__err, $__neg, $13, $__wb, $__wn, $add_ptr) | 0) {
     $arraydecay9 = $__atoms | 0;
     FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] & 31]($13, 10880, 10890, $arraydecay9) | 0;
     $19 = $__nbuf | 0;
     $20 = HEAP32[$__wn >> 2] | 0;
     $21 = HEAP32[$__first__i_i_i >> 2] | 0;
     $sub_ptr_sub = $20 - $21 | 0;
     if (($sub_ptr_sub | 0) > 98) {
      $call22 = _malloc($sub_ptr_sub + 2 | 0) | 0;
      if (($call22 | 0) == 0) {
       $exception_i2 = ___cxa_allocate_exception(4) | 0;
       HEAP32[$exception_i2 >> 2] = 11576;
       ___cxa_throw($exception_i2 | 0, 17832, 52);
      } else {
       $__nc_0 = $call22;
       $31 = $call22;
      }
     } else {
      $__nc_0 = $19;
      $31 = 0;
     }
     if ((HEAP8[$__neg >> 0] | 0) == 0) {
      $__nc_1 = $__nc_0;
     } else {
      HEAP8[$__nc_0 >> 0] = 45;
      $__nc_1 = $__nc_0 + 1 | 0;
     }
     if ($21 >>> 0 < $20 >>> 0) {
      $add_ptr_i = $__atoms + 10 | 0;
      $sub_ptr_rhs_cast41 = $__atoms;
      $__nc_252 = $__nc_1;
      $__w_053 = $21;
      while (1) {
       $33 = HEAP8[$__w_053 >> 0] | 0;
       $__first_addr_05_i = $arraydecay9;
       while (1) {
        $incdec_ptr_i = $__first_addr_05_i + 1 | 0;
        if ((HEAP8[$__first_addr_05_i >> 0] | 0) == $33 << 24 >> 24) {
         $__first_addr_0_lcssa_i = $__first_addr_05_i;
         break;
        }
        if (($incdec_ptr_i | 0) == ($add_ptr_i | 0)) {
         $__first_addr_0_lcssa_i = $add_ptr_i;
         break;
        } else {
         $__first_addr_05_i = $incdec_ptr_i;
        }
       }
       HEAP8[$__nc_252 >> 0] = HEAP8[10880 + ($__first_addr_0_lcssa_i - $sub_ptr_rhs_cast41) >> 0] | 0;
       $incdec_ptr43 = $__w_053 + 1 | 0;
       $incdec_ptr44 = $__nc_252 + 1 | 0;
       if ($incdec_ptr43 >>> 0 < (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc_252 = $incdec_ptr44;
        $__w_053 = $incdec_ptr43;
       } else {
        $__nc_2_lcssa = $incdec_ptr44;
        break;
       }
      }
     } else {
      $__nc_2_lcssa = $__nc_1;
     }
     HEAP8[$__nc_2_lcssa >> 0] = 0;
     $call47 = _sscanf($19 | 0, 3792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($call47 | 0) == 1) {
      if (($31 | 0) == 0) {
       break;
      }
      _free($31);
      break;
     }
     $exception_i = ___cxa_allocate_exception(8) | 0;
     HEAP32[$exception_i >> 2] = 11640;
     $call_i1_i = __Znwj(28) | 0;
     HEAP32[$call_i1_i + 4 >> 2] = 15;
     HEAP32[$call_i1_i >> 2] = 15;
     $add_ptr_i_i = $call_i1_i + 12 | 0;
     HEAP32[$exception_i + 4 >> 2] = $add_ptr_i_i;
     HEAP32[$call_i1_i + 8 >> 2] = 0;
     _memcpy($add_ptr_i_i | 0, 2936, 16) | 0;
     ___cxa_throw($exception_i | 0, 17864, 90);
    }
   } while (0);
   $__sbuf__i_i_i = $__b | 0;
   $47 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   do {
    if (($47 | 0) == 0) {
     $52 = 0;
    } else {
     if ((HEAP32[$47 + 12 >> 2] | 0) == (HEAP32[$47 + 16 >> 2] | 0)) {
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 255]($47) | 0) == -1) {
       HEAP32[$__sbuf__i_i_i >> 2] = 0;
       $52 = 0;
       break;
      } else {
       $52 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
       break;
      }
     } else {
      $52 = $47;
     }
    }
   } while (0);
   $cmp_i_i_i = ($52 | 0) == 0;
   $53 = HEAP32[$14 >> 2] | 0;
   do {
    if (($53 | 0) == 0) {
     label = 49;
    } else {
     if ((HEAP32[$53 + 12 >> 2] | 0) != (HEAP32[$53 + 16 >> 2] | 0)) {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 51;
       break;
      }
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($53) | 0) == -1) {
      HEAP32[$14 >> 2] = 0;
      label = 49;
      break;
     } else {
      if ($cmp_i_i_i) {
       break;
      } else {
       label = 51;
       break;
      }
     }
    }
   } while (0);
   if ((label | 0) == 49) {
    if ($cmp_i_i_i) {
     label = 51;
    }
   }
   if ((label | 0) == 51) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i_i_i >> 2];
   $61 = $__locale_2_i_i14 + 4 | 0;
   if (((tempValue = HEAP32[$61 >> 2] | 0, HEAP32[$61 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i14 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i14);
   }
   $66 = HEAP32[$__first__i_i_i >> 2] | 0;
   HEAP32[$__first__i_i_i >> 2] = 0;
   if (($66 | 0) == 0) {
    $$etemp$4$0 = 100;
    $$etemp$4$1 = 0;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[$__second__i_i_i >> 2] & 511]($66);
   $$etemp$4$0 = 100;
   $$etemp$4$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $__p_i_i_i_i47 = 0, $__p_i_i_i_i = 0, $__grouping = 0, $__locale__i_i = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $6 = 0, $exception_i_i_i = 0, $7 = 0, $8 = 0, $9 = 0, $sub_i_i_i54 = 0, $14 = 0, $15 = 0, $exception_i_i_i66 = 0, $16 = 0, $17 = 0, $__size__i_i_i = 0, $20 = 0, $cond_i_i = 0, $26 = 0, $call_i73 = 0, $29 = 0, $__nf_0 = 0, $arrayidx17 = 0, $31 = 0, $32 = 0, $call_i76 = 0, $34 = 0, $call_i80 = 0, $37 = 0, $__nf_1 = 0, $incdec_ptr6_i_i = 0, $incdec_ptr9_i_i = 0, $__first_addr_08_i_i = 0, $38 = 0, $call_i84 = 0, $arrayidx_i_i_i = 0, $42 = 0, $__size__i2_i = 0, $__data__i_i_i94 = 0, $__p_0122 = 0, $__dg_0121 = 0, $__dc_0120 = 0, $45 = 0, $46 = 0, $47 = 0, $cond_i = 0, $__dc_1 = 0, $__dg_1 = 0, $call_i104 = 0, $51 = 0, $add_ptr62 = 0, $52 = 0, $incdec_ptr6_i_i107 = 0, $incdec_ptr9_i_i110 = 0, $__first_addr_08_i_i111 = 0, $53 = 0, $storemerge = 0, $57 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__p_i_i_i_i47 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__grouping = sp + 32 | 0;
 $__locale__i_i = $__loc | 0;
 $0 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 if (!((HEAP32[$0 + 12 >> 2] | 0) - $5 >> 2 >>> 0 > $sub_i_i_i >>> 0)) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $6 = HEAP32[$5 + ($sub_i_i_i << 2) >> 2] | 0;
 if (($6 | 0) == 0) {
  $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
  $7 = $exception_i_i_i;
  HEAP32[$7 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i | 0, 17848, 212);
 }
 $8 = $6;
 $9 = HEAP32[$__locale__i_i >> 2] | 0;
 if (!((HEAP32[5816] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i47 >> 2] = 23264;
  HEAP32[$__p_i_i_i_i47 + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i47 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i47);
 }
 $sub_i_i_i54 = (HEAP32[5817] | 0) - 1 | 0;
 $14 = HEAP32[$9 + 8 >> 2] | 0;
 if (!((HEAP32[$9 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i54 >>> 0)) {
  $exception_i_i_i66 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i66;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i66 | 0, 17848, 212);
 }
 $15 = HEAP32[$14 + ($sub_i_i_i54 << 2) >> 2] | 0;
 if (($15 | 0) == 0) {
  $exception_i_i_i66 = ___cxa_allocate_exception(4) | 0;
  $16 = $exception_i_i_i66;
  HEAP32[$16 >> 2] = 11608;
  ___cxa_throw($exception_i_i_i66 | 0, 17848, 212);
 }
 $17 = $15;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $17);
 $__size__i_i_i = $__grouping;
 $20 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($20 & 1) == 0) {
  $cond_i_i = ($20 & 255) >>> 1;
 } else {
  $cond_i_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i_i | 0) == 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($8, $__nb, $__ne, $__ob) | 0;
  HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb);
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $26 = HEAP8[$__nb >> 0] | 0;
  if (($26 << 24 >> 24 | 0) == 45 | ($26 << 24 >> 24 | 0) == 43) {
   $call_i73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($8, $26) | 0;
   $29 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $29 + 1;
   HEAP8[$29 >> 0] = $call_i73;
   $__nf_0 = $__nb + 1 | 0;
  } else {
   $__nf_0 = $__nb;
  }
  if (($__ne - $__nf_0 | 0) > 1) {
   if ((HEAP8[$__nf_0 >> 0] | 0) == 48) {
    $arrayidx17 = $__nf_0 + 1 | 0;
    $31 = HEAP8[$arrayidx17 >> 0] | 0;
    if (($31 << 24 >> 24 | 0) == 120 | ($31 << 24 >> 24 | 0) == 88) {
     $32 = $6;
     $call_i76 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
     $34 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $34 + 1;
     HEAP8[$34 >> 0] = $call_i76;
     $call_i80 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$arrayidx17 >> 0] | 0) | 0;
     $37 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $37 + 1;
     HEAP8[$37 >> 0] = $call_i80;
     $__nf_1 = $__nf_0 + 2 | 0;
    } else {
     $__nf_1 = $__nf_0;
    }
   } else {
    $__nf_1 = $__nf_0;
   }
  } else {
   $__nf_1 = $__nf_0;
  }
  if (($__nf_1 | 0) != ($__ne | 0)) {
   $incdec_ptr6_i_i = $__ne - 1 | 0;
   if ($incdec_ptr6_i_i >>> 0 > $__nf_1 >>> 0) {
    $__first_addr_08_i_i = $__nf_1;
    $incdec_ptr9_i_i = $incdec_ptr6_i_i;
    do {
     $38 = HEAP8[$__first_addr_08_i_i >> 0] | 0;
     HEAP8[$__first_addr_08_i_i >> 0] = HEAP8[$incdec_ptr9_i_i >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i >> 0] = $38;
     $__first_addr_08_i_i = $__first_addr_08_i_i + 1 | 0;
     $incdec_ptr9_i_i = $incdec_ptr9_i_i - 1 | 0;
    } while ($__first_addr_08_i_i >>> 0 < $incdec_ptr9_i_i >>> 0);
   }
  }
  $call_i84 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($17) | 0;
  if ($__nf_1 >>> 0 < $__ne >>> 0) {
   $arrayidx_i_i_i = $__grouping + 1 | 0;
   $42 = $6;
   $__size__i2_i = $__grouping + 4 | 0;
   $__data__i_i_i94 = $__grouping + 8 | 0;
   $__dc_0120 = 0;
   $__dg_0121 = 0;
   $__p_0122 = $__nf_1;
   while (1) {
    $45 = HEAP8[((HEAP8[$__size__i_i_i >> 0] & 1) == 0 ? $arrayidx_i_i_i : HEAP32[$__data__i_i_i94 >> 2] | 0) + $__dg_0121 >> 0] | 0;
    if ($45 << 24 >> 24 != 0 & ($__dc_0120 | 0) == ($45 << 24 >> 24 | 0)) {
     $46 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $call_i84;
     $47 = HEAP8[$__size__i_i_i >> 0] | 0;
     if (($47 & 1) == 0) {
      $cond_i = ($47 & 255) >>> 1;
     } else {
      $cond_i = HEAP32[$__size__i2_i >> 2] | 0;
     }
     $__dg_1 = ($__dg_0121 >>> 0 < ($cond_i - 1 | 0) >>> 0) + $__dg_0121 | 0;
     $__dc_1 = 0;
    } else {
     $__dg_1 = $__dg_0121;
     $__dc_1 = $__dc_0120;
    }
    $call_i104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$42 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$__p_0122 >> 0] | 0) | 0;
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $call_i104;
    $__p_0122 = $__p_0122 + 1 | 0;
    if (!($__p_0122 >>> 0 < $__ne >>> 0)) {
     break;
    } else {
     $__dc_0120 = $__dc_1 + 1 | 0;
     $__dg_0121 = $__dg_1;
    }
   }
  }
  $add_ptr62 = $__ob + ($__nf_1 - $__nb) | 0;
  $52 = HEAP32[$__oe >> 2] | 0;
  if (($add_ptr62 | 0) != ($52 | 0)) {
   $incdec_ptr6_i_i107 = $52 - 1 | 0;
   if ($incdec_ptr6_i_i107 >>> 0 > $add_ptr62 >>> 0) {
    $__first_addr_08_i_i111 = $add_ptr62;
    $incdec_ptr9_i_i110 = $incdec_ptr6_i_i107;
    do {
     $53 = HEAP8[$__first_addr_08_i_i111 >> 0] | 0;
     HEAP8[$__first_addr_08_i_i111 >> 0] = HEAP8[$incdec_ptr9_i_i110 >> 0] | 0;
     HEAP8[$incdec_ptr9_i_i110 >> 0] = $53;
     $__first_addr_08_i_i111 = $__first_addr_08_i_i111 + 1 | 0;
     $incdec_ptr9_i_i110 = $incdec_ptr9_i_i110 - 1 | 0;
    } while ($__first_addr_08_i_i111 >>> 0 < $incdec_ptr9_i_i110 >>> 0);
   }
  }
 }
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = HEAP32[$__oe >> 2] | 0;
 } else {
  $storemerge = $__ob + ($__np - $__nb) | 0;
 }
 HEAP32[$__op >> 2] = $storemerge;
 if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $57 = HEAP32[$__grouping + 8 >> 2] | 0;
 if (($57 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($57);
 STACKTOP = sp;
 return;
}
function __ZNSt3__18ios_base4InitC2Ev() {
 var $__p_i_i_i_i1 = 0, $__p_i_i_i_i = 0, $0 = 0, $1 = 0, $__shared_owners__i_i_i = 0, $sub_i_i_i = 0, $7 = 0, $8 = 0, $exception_i_i_i = 0, $10 = 0, $call_i_i = 0, $13 = 0, $frombool_i_i = 0, $31 = 0, $32 = 0, $35 = 0, $39 = 0, $43 = 0, $__shared_owners__i_i_i4 = 0, $sub_i_i_i12 = 0, $49 = 0, $50 = 0, $exception_i_i_i24 = 0, $52 = 0, $call_i_i30 = 0, $55 = 0, $frombool_i_i34 = 0, $75 = 0, $79 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i_i1 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $0 = HEAP32[_stdin >> 2] | 0;
 HEAP32[5754] = 13400;
 __ZNSt3__16localeC2Ev(23020);
 _memset(23024, 0, 24) | 0;
 HEAP32[5754] = 14168;
 HEAP32[5762] = $0;
 HEAP32[5764] = 23144;
 HEAP32[5766] = -1;
 HEAP8[23068] = 0;
 $1 = HEAP32[5755] | 0;
 $__shared_owners__i_i_i = $1 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5836] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23344;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23344, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5837] | 0) - 1 | 0;
 $7 = HEAP32[$1 + 8 >> 2] | 0;
 if ((HEAP32[$1 + 12 >> 2] | 0) - $7 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $8 = HEAP32[$7 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($8 | 0) != 0) {
   $10 = $8;
   HEAP32[5763] = $10;
   $call_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 255]($10) | 0;
   HEAP32[5765] = $call_i_i;
   $13 = HEAP32[5763] | 0;
   $frombool_i_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 28 >> 2] & 255]($13) | 0) & 1;
   HEAP8[23069] = $frombool_i_i;
   if ((HEAP32[5765] | 0) > 8) {
    __ZNSt3__121__throw_runtime_errorEPKc(736);
   }
   if (((tempValue = HEAP32[$__shared_owners__i_i_i >> 2] | 0, HEAP32[$__shared_owners__i_i_i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
   }
   HEAP32[6002] = 13620;
   HEAP32[6004] = 13640;
   HEAP32[6003] = 0;
   HEAP32[6010] = 23016;
   HEAP32[6008] = 0;
   HEAP32[6009] = 0;
   HEAP32[6005] = 4098;
   HEAP32[6007] = 0;
   HEAP32[6006] = 6;
   _memset(24048, 0, 40) | 0;
   __ZNSt3__16localeC2Ev(24044);
   HEAP32[6022] = 0;
   HEAP32[6023] = -1;
   $31 = HEAP32[_stdout >> 2] | 0;
   __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(22920, $31, 23152);
   HEAP32[5936] = 13524;
   HEAP32[5937] = 13544;
   HEAP32[5943] = 22920;
   HEAP32[5941] = 0;
   HEAP32[5942] = 0;
   HEAP32[5938] = 4098;
   HEAP32[5940] = 0;
   HEAP32[5939] = 6;
   _memset(23780, 0, 40) | 0;
   __ZNSt3__16localeC2Ev(23776);
   HEAP32[5955] = 0;
   HEAP32[5956] = -1;
   $32 = HEAP32[_stderr >> 2] | 0;
   __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(22968, $32, 23160);
   HEAP32[5980] = 13524;
   HEAP32[5981] = 13544;
   HEAP32[5987] = 22968;
   HEAP32[5985] = 0;
   HEAP32[5986] = 0;
   HEAP32[5982] = 4098;
   HEAP32[5984] = 0;
   HEAP32[5983] = 6;
   _memset(23956, 0, 40) | 0;
   __ZNSt3__16localeC2Ev(23952);
   HEAP32[5999] = 0;
   HEAP32[6e3] = -1;
   $35 = HEAP32[(HEAP32[(HEAP32[5980] | 0) - 12 >> 2] | 0) + 23944 >> 2] | 0;
   HEAP32[5958] = 13524;
   HEAP32[5959] = 13544;
   HEAP32[5965] = $35;
   HEAP32[5963] = ($35 | 0) == 0;
   HEAP32[5964] = 0;
   HEAP32[5960] = 4098;
   HEAP32[5962] = 0;
   HEAP32[5961] = 6;
   _memset(23868, 0, 40) | 0;
   __ZNSt3__16localeC2Ev(23864);
   HEAP32[5977] = 0;
   HEAP32[5978] = -1;
   HEAP32[(HEAP32[(HEAP32[6002] | 0) - 12 >> 2] | 0) + 24080 >> 2] = 23744;
   $39 = (HEAP32[(HEAP32[5980] | 0) - 12 >> 2] | 0) + 23924 | 0;
   HEAP32[$39 >> 2] = HEAP32[$39 >> 2] | 8192;
   HEAP32[(HEAP32[(HEAP32[5980] | 0) - 12 >> 2] | 0) + 23992 >> 2] = 23744;
   HEAP32[5716] = 13328;
   __ZNSt3__16localeC2Ev(22868);
   _memset(22872, 0, 24) | 0;
   HEAP32[5716] = 14096;
   HEAP32[5724] = $0;
   HEAP32[5726] = 23168;
   HEAP32[5728] = -1;
   HEAP8[22916] = 0;
   $43 = HEAP32[5717] | 0;
   $__shared_owners__i_i_i4 = $43 + 4 | 0;
   tempValue = HEAP32[$__shared_owners__i_i_i4 >> 2] | 0, HEAP32[$__shared_owners__i_i_i4 >> 2] = tempValue + 1, tempValue;
   if (!((HEAP32[5834] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i1 >> 2] = 23336;
    HEAP32[$__p_i_i_i_i1 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i1 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23336, $__p_i_i_i_i1);
   }
   $sub_i_i_i12 = (HEAP32[5835] | 0) - 1 | 0;
   $49 = HEAP32[$43 + 8 >> 2] | 0;
   if ((HEAP32[$43 + 12 >> 2] | 0) - $49 >> 2 >>> 0 > $sub_i_i_i12 >>> 0) {
    $50 = HEAP32[$49 + ($sub_i_i_i12 << 2) >> 2] | 0;
    if (($50 | 0) != 0) {
     $52 = $50;
     HEAP32[5725] = $52;
     $call_i_i30 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 24 >> 2] & 255]($52) | 0;
     HEAP32[5727] = $call_i_i30;
     $55 = HEAP32[5725] | 0;
     $frombool_i_i34 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 28 >> 2] & 255]($55) | 0) & 1;
     HEAP8[22917] = $frombool_i_i34;
     if ((HEAP32[5727] | 0) > 8) {
      __ZNSt3__121__throw_runtime_errorEPKc(736);
     }
     if (((tempValue = HEAP32[$__shared_owners__i_i_i4 >> 2] | 0, HEAP32[$__shared_owners__i_i_i4 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 8 >> 2] & 511]($43 | 0);
     }
     HEAP32[5914] = 13572;
     HEAP32[5916] = 13592;
     HEAP32[5915] = 0;
     HEAP32[5922] = 22864;
     HEAP32[5920] = 0;
     HEAP32[5921] = 0;
     HEAP32[5917] = 4098;
     HEAP32[5919] = 0;
     HEAP32[5918] = 6;
     _memset(23696, 0, 40) | 0;
     __ZNSt3__16localeC2Ev(23692);
     HEAP32[5934] = 0;
     HEAP32[5935] = -1;
     __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(22768, $31, 23176);
     HEAP32[5844] = 13476;
     HEAP32[5845] = 13496;
     HEAP32[5851] = 22768;
     HEAP32[5849] = 0;
     HEAP32[5850] = 0;
     HEAP32[5846] = 4098;
     HEAP32[5848] = 0;
     HEAP32[5847] = 6;
     _memset(23412, 0, 40) | 0;
     __ZNSt3__16localeC2Ev(23408);
     HEAP32[5863] = 0;
     HEAP32[5864] = -1;
     __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(22816, $32, 23184);
     HEAP32[5888] = 13476;
     HEAP32[5889] = 13496;
     HEAP32[5895] = 22816;
     HEAP32[5893] = 0;
     HEAP32[5894] = 0;
     HEAP32[5890] = 4098;
     HEAP32[5892] = 0;
     HEAP32[5891] = 6;
     _memset(23588, 0, 40) | 0;
     __ZNSt3__16localeC2Ev(23584);
     HEAP32[5907] = 0;
     HEAP32[5908] = -1;
     $75 = HEAP32[(HEAP32[(HEAP32[5888] | 0) - 12 >> 2] | 0) + 23576 >> 2] | 0;
     HEAP32[5866] = 13476;
     HEAP32[5867] = 13496;
     HEAP32[5873] = $75;
     HEAP32[5871] = ($75 | 0) == 0;
     HEAP32[5872] = 0;
     HEAP32[5868] = 4098;
     HEAP32[5870] = 0;
     HEAP32[5869] = 6;
     _memset(23500, 0, 40) | 0;
     __ZNSt3__16localeC2Ev(23496);
     HEAP32[5885] = 0;
     HEAP32[5886] = -1;
     HEAP32[(HEAP32[(HEAP32[5914] | 0) - 12 >> 2] | 0) + 23728 >> 2] = 23376;
     $79 = (HEAP32[(HEAP32[5888] | 0) - 12 >> 2] | 0) + 23556 | 0;
     HEAP32[$79 >> 2] = HEAP32[$79 >> 2] | 8192;
     HEAP32[(HEAP32[(HEAP32[5888] | 0) - 12 >> 2] | 0) + 23624 >> 2] = 23376;
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i24 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i24 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i24 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $__p_i_i_i_i = 0, $__pat = 0, $tmpcast = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__sym = 0, $__sn = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $__locale_2_i_i56 = 0, $0 = 0, $1 = 0, $sub_i_i_i = 0, $9 = 0, $10 = 0, $exception_i_i_i = 0, $12 = 0, $__size__i_i = 0, $13 = 0, $tobool_i_i = 0, $cond_i = 0, $cond_i_i_i = 0, $16 = 0, $19 = 0, $this4_i_i_i = 0, $this4_i_i_i17 = 0, $this4_i_i_i18 = 0, $arraydecay = 0, $21 = 0, $tobool_i_i24 = 0, $cond_i30 = 0, $23 = 0, $cond_i40 = 0, $25 = 0, $cond_i50 = 0, $27 = 0, $cond_i60 = 0, $29 = 0, $cond_i95 = 0, $31 = 0, $cond_i105 = 0, $add18_pn = 0, $cond = 0, $call29 = 0, $33 = 0, $exception_i = 0, $48 = 0, $__mb_0 = 0, $cond_i_i121 = 0, $cond_i70 = 0, $60 = 0, $63 = 0, $66 = 0, $67 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__pat = sp + 16 | 0;
 $tmpcast = $__pat;
 $__dp = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__ts = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__grp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__locale_2_i_i56 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i56;
 $1 = $__locale_2_i_i56 + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i_i56 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i56 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $10 = HEAP32[$9 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($10 | 0) != 0) {
   $12 = $10;
   $__size__i_i = $__digits;
   $13 = HEAP8[$__size__i_i >> 0] | 0;
   $tobool_i_i = ($13 & 1) == 0;
   if ($tobool_i_i) {
    $cond_i = ($13 & 255) >>> 1;
   } else {
    $cond_i = HEAP32[$__digits + 4 >> 2] | 0;
   }
   if (($cond_i | 0) == 0) {
    $19 = 0;
   } else {
    if ($tobool_i_i) {
     $cond_i_i_i = $__digits + 4 | 0;
    } else {
     $cond_i_i_i = HEAP32[$__digits + 8 >> 2] | 0;
    }
    $16 = HEAP32[$cond_i_i_i >> 2] | 0;
    $19 = ($16 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 63]($12, 45) | 0);
   }
   HEAP32[$__pat >> 2] = 0;
   $this4_i_i_i = $__grp;
   _memset($this4_i_i_i | 0, 0, 12) | 0;
   $this4_i_i_i17 = $__sym;
   _memset($this4_i_i_i17 | 0, 0, 12) | 0;
   $this4_i_i_i18 = $__sn;
   _memset($this4_i_i_i18 | 0, 0, 12) | 0;
   __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $19, $0, $tmpcast, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $arraydecay = $__mbuf | 0;
   $21 = HEAP8[$__size__i_i >> 0] | 0;
   $tobool_i_i24 = ($21 & 1) == 0;
   if ($tobool_i_i24) {
    $cond_i30 = ($21 & 255) >>> 1;
   } else {
    $cond_i30 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   $23 = HEAP32[$__fd >> 2] | 0;
   if (($cond_i30 | 0) > ($23 | 0)) {
    if ($tobool_i_i24) {
     $cond_i40 = ($21 & 255) >>> 1;
    } else {
     $cond_i40 = HEAP32[$__digits + 4 >> 2] | 0;
    }
    $25 = HEAP8[$this4_i_i_i18 >> 0] | 0;
    if (($25 & 1) == 0) {
     $cond_i50 = ($25 & 255) >>> 1;
    } else {
     $cond_i50 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $27 = HEAP8[$this4_i_i_i17 >> 0] | 0;
    if (($27 & 1) == 0) {
     $cond_i60 = ($27 & 255) >>> 1;
    } else {
     $cond_i60 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add18_pn = $cond_i50 + ($cond_i40 - $23 << 1 | 1) + $cond_i60 | 0;
   } else {
    $29 = HEAP8[$this4_i_i_i18 >> 0] | 0;
    if (($29 & 1) == 0) {
     $cond_i95 = ($29 & 255) >>> 1;
    } else {
     $cond_i95 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $31 = HEAP8[$this4_i_i_i17 >> 0] | 0;
    if (($31 & 1) == 0) {
     $cond_i105 = ($31 & 255) >>> 1;
    } else {
     $cond_i105 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add18_pn = $cond_i95 + 2 + $cond_i105 | 0;
   }
   $cond = $add18_pn + $23 | 0;
   if ($cond >>> 0 > 100 >>> 0) {
    $call29 = _malloc($cond << 2) | 0;
    $33 = $call29;
    if (($call29 | 0) == 0) {
     $exception_i = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i >> 2] = 11576;
     ___cxa_throw($exception_i | 0, 17832, 52);
    } else {
     $__mb_0 = $33;
     $48 = $33;
    }
   } else {
    $__mb_0 = $arraydecay;
    $48 = 0;
   }
   if ($tobool_i_i24) {
    $cond_i70 = ($21 & 255) >>> 1;
    $cond_i_i121 = $__digits + 4 | 0;
   } else {
    $cond_i70 = HEAP32[$__digits + 4 >> 2] | 0;
    $cond_i_i121 = HEAP32[$__digits + 8 >> 2] | 0;
   }
   __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $cond_i_i121, $cond_i_i121 + ($cond_i70 << 2) | 0, $12, $19, $tmpcast, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $23);
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, HEAP32[$__s >> 2] | 0, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($48 | 0) != 0) {
    _free($48);
   }
   if (!((HEAP8[$this4_i_i_i18 >> 0] & 1) == 0)) {
    $60 = HEAP32[$__sn + 8 >> 2] | 0;
    if (($60 | 0) != 0) {
     _free($60);
    }
   }
   if (!((HEAP8[$this4_i_i_i17 >> 0] & 1) == 0)) {
    $63 = HEAP32[$__sym + 8 >> 2] | 0;
    if (($63 | 0) != 0) {
     _free($63);
    }
   }
   if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
    $66 = HEAP32[$__grp + 8 >> 2] | 0;
    if (($66 | 0) != 0) {
     _free($66);
    }
   }
   $67 = $__locale_2_i_i56 + 4 | 0;
   if (((tempValue = HEAP32[$67 >> 2] | 0, HEAP32[$67 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i56 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i56);
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNK14dtNavMeshQuery24closestPointOnPolyInTileEPK10dtMeshTilePK6dtPolyPKfPf($tile, $poly, $pos, $closest) {
 $tile = $tile | 0;
 $poly = $poly | 0;
 $pos = $pos | 0;
 $closest = $closest | 0;
 var $verts14 = 0, $edged = 0, $edget = 0, $h = 0, $mul = 0, $2 = 0, $arrayidx4 = 0, $mul8 = 0, $arrayidx10 = 0, $sub_i78 = 0.0, $arrayidx2_i79 = 0, $arrayidx3_i80 = 0, $sub4_i81 = 0.0, $arrayidx5_i82 = 0, $arrayidx6_i83 = 0, $sub7_i84 = 0.0, $call_i1 = 0.0, $sub_i70 = 0.0, $arrayidx2_i71 = 0, $sub4_i = 0.0, $arrayidx5_i73 = 0, $sub7_i74 = 0.0, $div = 0.0, $16 = 0.0, $18 = 0.0, $20 = 0.0, $sub_ptr_div = 0, $23 = 0, $vertCount = 0, $25 = 0, $conv15 = 0, $cmp16105 = 0, $26 = 0, $i_0106 = 0, $mul17 = 0, $mul22 = 0, $arrayidx3_i = 0, $arrayidx4_i49 = 0, $arrayidx5_i50 = 0, $dmin_0104 = 0.0, $imin_0103 = 0, $i29_0102 = 0, $34 = 0.0, $cmp34 = 0, $imin_1 = 0, $inc39 = 0, $imin_0_lcssa = 0, $mul41 = 0, $mul44 = 0, $35 = 0.0, $36 = 0.0, $38 = 0.0, $40 = 0.0, $triCount = 0, $triBase = 0, $detailTris = 0, $verts69 = 0, $vertBase = 0, $detailVerts = 0, $j_0100 = 0, $mul53 = 0, $45 = 0, $46 = 0, $conv61 = 0, $47 = 0, $conv59 = 0, $52 = 0, $53 = 0, $conv59_1 = 0, $59 = 0, $60 = 0, $conv59_2 = 0, $65 = 0, $inc92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $verts14 = sp | 0;
 $edged = sp + 72 | 0;
 $edget = sp + 96 | 0;
 $h = sp + 120 | 0;
 if ((HEAP8[$poly + 31 >> 0] & -64) << 24 >> 24 == 64) {
  $mul = (HEAPU16[$poly + 4 >> 1] | 0) * 3 | 0;
  $2 = HEAP32[$tile + 16 >> 2] | 0;
  $arrayidx4 = $2 + ($mul << 2) | 0;
  $mul8 = (HEAPU16[$poly + 6 >> 1] | 0) * 3 | 0;
  $arrayidx10 = $2 + ($mul8 << 2) | 0;
  $sub_i78 = +HEAPF32[$arrayidx4 >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i79 = $2 + ($mul + 1 << 2) | 0;
  $arrayidx3_i80 = $pos + 4 | 0;
  $sub4_i81 = +HEAPF32[$arrayidx2_i79 >> 2] - +HEAPF32[$arrayidx3_i80 >> 2];
  $arrayidx5_i82 = $2 + ($mul + 2 << 2) | 0;
  $arrayidx6_i83 = $pos + 8 | 0;
  $sub7_i84 = +HEAPF32[$arrayidx5_i82 >> 2] - +HEAPF32[$arrayidx6_i83 >> 2];
  $call_i1 = +Math_sqrt($sub_i78 * $sub_i78 + $sub4_i81 * $sub4_i81 + $sub7_i84 * $sub7_i84);
  $sub_i70 = +HEAPF32[$arrayidx10 >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i71 = $2 + ($mul8 + 1 << 2) | 0;
  $sub4_i = +HEAPF32[$arrayidx2_i71 >> 2] - +HEAPF32[$arrayidx3_i80 >> 2];
  $arrayidx5_i73 = $2 + ($mul8 + 2 << 2) | 0;
  $sub7_i74 = +HEAPF32[$arrayidx5_i73 >> 2] - +HEAPF32[$arrayidx6_i83 >> 2];
  $div = $call_i1 / ($call_i1 + +Math_sqrt($sub_i70 * $sub_i70 + $sub4_i * $sub4_i + $sub7_i74 * $sub7_i74));
  $16 = +HEAPF32[$arrayidx4 >> 2];
  HEAPF32[$closest >> 2] = $16 + $div * (+HEAPF32[$arrayidx10 >> 2] - $16);
  $18 = +HEAPF32[$arrayidx2_i79 >> 2];
  HEAPF32[$closest + 4 >> 2] = $18 + $div * (+HEAPF32[$arrayidx2_i71 >> 2] - $18);
  $20 = +HEAPF32[$arrayidx5_i82 >> 2];
  HEAPF32[$closest + 8 >> 2] = $20 + $div * (+HEAPF32[$arrayidx5_i73 >> 2] - $20);
  STACKTOP = sp;
  return;
 }
 $sub_ptr_div = $poly - (HEAP32[$tile + 12 >> 2] | 0) >> 5;
 $23 = HEAP32[$tile + 24 >> 2] | 0;
 $vertCount = $poly + 30 | 0;
 $25 = HEAP8[$vertCount >> 0] | 0;
 $conv15 = $25 & 255;
 $cmp16105 = $25 << 24 >> 24 == 0;
 if (!$cmp16105) {
  $26 = HEAP32[$tile + 16 >> 2] | 0;
  $i_0106 = 0;
  do {
   $mul17 = $i_0106 * 3 | 0;
   $mul22 = (HEAPU16[$poly + 4 + ($i_0106 << 1) >> 1] | 0) * 3 | 0;
   HEAPF32[$verts14 + ($mul17 << 2) >> 2] = +HEAPF32[$26 + ($mul22 << 2) >> 2];
   HEAPF32[$verts14 + ($mul17 + 1 << 2) >> 2] = +HEAPF32[$26 + ($mul22 + 1 << 2) >> 2];
   HEAPF32[$verts14 + ($mul17 + 2 << 2) >> 2] = +HEAPF32[$26 + ($mul22 + 2 << 2) >> 2];
   $i_0106 = $i_0106 + 1 | 0;
  } while (($i_0106 | 0) < ($conv15 | 0));
 }
 HEAPF32[$closest >> 2] = +HEAPF32[$pos >> 2];
 $arrayidx3_i = $closest + 4 | 0;
 HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$pos + 4 >> 2];
 $arrayidx4_i49 = $pos + 8 | 0;
 $arrayidx5_i50 = $closest + 8 | 0;
 HEAPF32[$arrayidx5_i50 >> 2] = +HEAPF32[$arrayidx4_i49 >> 2];
 if (!(__Z24dtDistancePtPolyEdgesSqrPKfS0_iPfS1_($pos, $verts14 | 0, $conv15, $edged | 0, $edget | 0) | 0)) {
  if ($cmp16105) {
   $imin_0_lcssa = -1;
  } else {
   $i29_0102 = 0;
   $imin_0103 = -1;
   $dmin_0104 = 3.4028234663852886e+38;
   while (1) {
    $34 = +HEAPF32[$edged + ($i29_0102 << 2) >> 2];
    $cmp34 = $34 < $dmin_0104;
    $imin_1 = $cmp34 ? $i29_0102 : $imin_0103;
    $inc39 = $i29_0102 + 1 | 0;
    if (($inc39 | 0) < ($conv15 | 0)) {
     $i29_0102 = $inc39;
     $imin_0103 = $imin_1;
     $dmin_0104 = $cmp34 ? $34 : $dmin_0104;
    } else {
     $imin_0_lcssa = $imin_1;
     break;
    }
   }
  }
  $mul41 = $imin_0_lcssa * 3 | 0;
  $mul44 = (($imin_0_lcssa + 1 | 0) % ($conv15 | 0) | 0) * 3 | 0;
  $35 = +HEAPF32[$edget + ($imin_0_lcssa << 2) >> 2];
  $36 = +HEAPF32[$verts14 + ($mul41 << 2) >> 2];
  HEAPF32[$closest >> 2] = $36 + $35 * (+HEAPF32[$verts14 + ($mul44 << 2) >> 2] - $36);
  $38 = +HEAPF32[$verts14 + ($mul41 + 1 << 2) >> 2];
  HEAPF32[$arrayidx3_i >> 2] = $38 + $35 * (+HEAPF32[$verts14 + ($mul44 + 1 << 2) >> 2] - $38);
  $40 = +HEAPF32[$verts14 + ($mul41 + 2 << 2) >> 2];
  HEAPF32[$arrayidx5_i50 >> 2] = $40 + $35 * (+HEAPF32[$verts14 + ($mul44 + 2 << 2) >> 2] - $40);
 }
 $triCount = $23 + ($sub_ptr_div * 12 | 0) + 9 | 0;
 if ((HEAP8[$triCount >> 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $triBase = $23 + ($sub_ptr_div * 12 | 0) + 4 | 0;
 $detailTris = $tile + 32 | 0;
 $verts69 = $tile + 16 | 0;
 $vertBase = $23 + ($sub_ptr_div * 12 | 0) | 0;
 $detailVerts = $tile + 28 | 0;
 $j_0100 = 0;
 while (1) {
  $mul53 = (HEAP32[$triBase >> 2] | 0) + $j_0100 << 2;
  $45 = HEAP32[$detailTris >> 2] | 0;
  $46 = HEAP8[$vertCount >> 0] | 0;
  $conv61 = $46 & 255;
  $47 = HEAP8[$45 + $mul53 >> 0] | 0;
  $conv59 = $47 & 255;
  if (($47 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $52 = (HEAP32[$verts69 >> 2] | 0) + (((HEAPU16[$poly + 4 + ($conv59 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $52 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv59 - $conv61 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $53 = HEAP8[$45 + ($mul53 | 1) >> 0] | 0;
  $conv59_1 = $53 & 255;
  if (($53 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $59 = (HEAP32[$verts69 >> 2] | 0) + (((HEAPU16[$poly + 4 + ($conv59_1 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $59 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv59_1 - $conv61 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $60 = HEAP8[$45 + ($mul53 | 2) >> 0] | 0;
  $conv59_2 = $60 & 255;
  if (($60 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $65 = (HEAP32[$verts69 >> 2] | 0) + (((HEAPU16[$poly + 4 + ($conv59_2 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $65 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv59_2 - $conv61 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $inc92 = $j_0100 + 1 | 0;
  if (__Z28dtClosestHeightPointTrianglePKfS0_S0_S0_Rf(+HEAPF32[$pos >> 2], +HEAPF32[$arrayidx4_i49 >> 2], +HEAPF32[$52 >> 2], +HEAPF32[$52 + 4 >> 2], +HEAPF32[$52 + 8 >> 2], $59, $65, $h) | 0) {
   break;
  }
  if (($inc92 | 0) < (HEAPU8[$triCount >> 0] | 0)) {
   $j_0100 = $inc92;
  } else {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 18) {
  STACKTOP = sp;
  return;
 }
 HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$h >> 2];
 STACKTOP = sp;
 return;
}
function __ZNK9dtNavMesh24closestPointOnPolyInTileEPK10dtMeshTilejPKfPf($tile, $ip, $pos, $closest) {
 $tile = $tile | 0;
 $ip = $ip | 0;
 $pos = $pos | 0;
 $closest = $closest | 0;
 var $verts15 = 0, $edged = 0, $edget = 0, $h = 0, $0 = 0, $mul = 0, $3 = 0, $arrayidx5 = 0, $mul9 = 0, $arrayidx11 = 0, $sub_i79 = 0.0, $arrayidx2_i80 = 0, $arrayidx3_i81 = 0, $sub4_i82 = 0.0, $arrayidx5_i83 = 0, $arrayidx6_i84 = 0, $sub7_i85 = 0.0, $call_i1 = 0.0, $sub_i71 = 0.0, $arrayidx2_i72 = 0, $sub4_i = 0.0, $arrayidx5_i74 = 0, $sub7_i75 = 0.0, $div = 0.0, $17 = 0.0, $19 = 0.0, $21 = 0.0, $23 = 0, $vertCount = 0, $25 = 0, $conv16 = 0, $cmp17106 = 0, $26 = 0, $i_0107 = 0, $mul18 = 0, $mul23 = 0, $arrayidx3_i = 0, $arrayidx4_i50 = 0, $arrayidx5_i51 = 0, $dmin_0105 = 0.0, $imin_0104 = 0, $i30_0103 = 0, $34 = 0.0, $cmp35 = 0, $imin_1 = 0, $inc40 = 0, $imin_0_lcssa = 0, $mul42 = 0, $mul45 = 0, $35 = 0.0, $36 = 0.0, $38 = 0.0, $40 = 0.0, $triCount = 0, $triBase = 0, $detailTris = 0, $verts70 = 0, $vertBase = 0, $detailVerts = 0, $j_0101 = 0, $mul54 = 0, $45 = 0, $46 = 0, $conv62 = 0, $47 = 0, $conv60 = 0, $52 = 0, $53 = 0, $conv60_1 = 0, $59 = 0, $60 = 0, $conv60_2 = 0, $65 = 0, $inc93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $verts15 = sp | 0;
 $edged = sp + 72 | 0;
 $edget = sp + 96 | 0;
 $h = sp + 120 | 0;
 $0 = HEAP32[$tile + 12 >> 2] | 0;
 if ((HEAP8[$0 + ($ip << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
  $mul = (HEAPU16[$0 + ($ip << 5) + 4 >> 1] | 0) * 3 | 0;
  $3 = HEAP32[$tile + 16 >> 2] | 0;
  $arrayidx5 = $3 + ($mul << 2) | 0;
  $mul9 = (HEAPU16[$0 + ($ip << 5) + 6 >> 1] | 0) * 3 | 0;
  $arrayidx11 = $3 + ($mul9 << 2) | 0;
  $sub_i79 = +HEAPF32[$arrayidx5 >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i80 = $3 + ($mul + 1 << 2) | 0;
  $arrayidx3_i81 = $pos + 4 | 0;
  $sub4_i82 = +HEAPF32[$arrayidx2_i80 >> 2] - +HEAPF32[$arrayidx3_i81 >> 2];
  $arrayidx5_i83 = $3 + ($mul + 2 << 2) | 0;
  $arrayidx6_i84 = $pos + 8 | 0;
  $sub7_i85 = +HEAPF32[$arrayidx5_i83 >> 2] - +HEAPF32[$arrayidx6_i84 >> 2];
  $call_i1 = +Math_sqrt($sub_i79 * $sub_i79 + $sub4_i82 * $sub4_i82 + $sub7_i85 * $sub7_i85);
  $sub_i71 = +HEAPF32[$arrayidx11 >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i72 = $3 + ($mul9 + 1 << 2) | 0;
  $sub4_i = +HEAPF32[$arrayidx2_i72 >> 2] - +HEAPF32[$arrayidx3_i81 >> 2];
  $arrayidx5_i74 = $3 + ($mul9 + 2 << 2) | 0;
  $sub7_i75 = +HEAPF32[$arrayidx5_i74 >> 2] - +HEAPF32[$arrayidx6_i84 >> 2];
  $div = $call_i1 / ($call_i1 + +Math_sqrt($sub_i71 * $sub_i71 + $sub4_i * $sub4_i + $sub7_i75 * $sub7_i75));
  $17 = +HEAPF32[$arrayidx5 >> 2];
  HEAPF32[$closest >> 2] = $17 + $div * (+HEAPF32[$arrayidx11 >> 2] - $17);
  $19 = +HEAPF32[$arrayidx2_i80 >> 2];
  HEAPF32[$closest + 4 >> 2] = $19 + $div * (+HEAPF32[$arrayidx2_i72 >> 2] - $19);
  $21 = +HEAPF32[$arrayidx5_i83 >> 2];
  HEAPF32[$closest + 8 >> 2] = $21 + $div * (+HEAPF32[$arrayidx5_i74 >> 2] - $21);
  STACKTOP = sp;
  return;
 }
 $23 = HEAP32[$tile + 24 >> 2] | 0;
 $vertCount = $0 + ($ip << 5) + 30 | 0;
 $25 = HEAP8[$vertCount >> 0] | 0;
 $conv16 = $25 & 255;
 $cmp17106 = $25 << 24 >> 24 == 0;
 if (!$cmp17106) {
  $26 = HEAP32[$tile + 16 >> 2] | 0;
  $i_0107 = 0;
  do {
   $mul18 = $i_0107 * 3 | 0;
   $mul23 = (HEAPU16[$0 + ($ip << 5) + 4 + ($i_0107 << 1) >> 1] | 0) * 3 | 0;
   HEAPF32[$verts15 + ($mul18 << 2) >> 2] = +HEAPF32[$26 + ($mul23 << 2) >> 2];
   HEAPF32[$verts15 + ($mul18 + 1 << 2) >> 2] = +HEAPF32[$26 + ($mul23 + 1 << 2) >> 2];
   HEAPF32[$verts15 + ($mul18 + 2 << 2) >> 2] = +HEAPF32[$26 + ($mul23 + 2 << 2) >> 2];
   $i_0107 = $i_0107 + 1 | 0;
  } while (($i_0107 | 0) < ($conv16 | 0));
 }
 HEAPF32[$closest >> 2] = +HEAPF32[$pos >> 2];
 $arrayidx3_i = $closest + 4 | 0;
 HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$pos + 4 >> 2];
 $arrayidx4_i50 = $pos + 8 | 0;
 $arrayidx5_i51 = $closest + 8 | 0;
 HEAPF32[$arrayidx5_i51 >> 2] = +HEAPF32[$arrayidx4_i50 >> 2];
 if (!(__Z24dtDistancePtPolyEdgesSqrPKfS0_iPfS1_($pos, $verts15 | 0, $conv16, $edged | 0, $edget | 0) | 0)) {
  if ($cmp17106) {
   $imin_0_lcssa = -1;
  } else {
   $i30_0103 = 0;
   $imin_0104 = -1;
   $dmin_0105 = 3.4028234663852886e+38;
   while (1) {
    $34 = +HEAPF32[$edged + ($i30_0103 << 2) >> 2];
    $cmp35 = $34 < $dmin_0105;
    $imin_1 = $cmp35 ? $i30_0103 : $imin_0104;
    $inc40 = $i30_0103 + 1 | 0;
    if (($inc40 | 0) < ($conv16 | 0)) {
     $i30_0103 = $inc40;
     $imin_0104 = $imin_1;
     $dmin_0105 = $cmp35 ? $34 : $dmin_0105;
    } else {
     $imin_0_lcssa = $imin_1;
     break;
    }
   }
  }
  $mul42 = $imin_0_lcssa * 3 | 0;
  $mul45 = (($imin_0_lcssa + 1 | 0) % ($conv16 | 0) | 0) * 3 | 0;
  $35 = +HEAPF32[$edget + ($imin_0_lcssa << 2) >> 2];
  $36 = +HEAPF32[$verts15 + ($mul42 << 2) >> 2];
  HEAPF32[$closest >> 2] = $36 + $35 * (+HEAPF32[$verts15 + ($mul45 << 2) >> 2] - $36);
  $38 = +HEAPF32[$verts15 + ($mul42 + 1 << 2) >> 2];
  HEAPF32[$arrayidx3_i >> 2] = $38 + $35 * (+HEAPF32[$verts15 + ($mul45 + 1 << 2) >> 2] - $38);
  $40 = +HEAPF32[$verts15 + ($mul42 + 2 << 2) >> 2];
  HEAPF32[$arrayidx5_i51 >> 2] = $40 + $35 * (+HEAPF32[$verts15 + ($mul45 + 2 << 2) >> 2] - $40);
 }
 $triCount = $23 + ($ip * 12 | 0) + 9 | 0;
 if ((HEAP8[$triCount >> 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $triBase = $23 + ($ip * 12 | 0) + 4 | 0;
 $detailTris = $tile + 32 | 0;
 $verts70 = $tile + 16 | 0;
 $vertBase = $23 + ($ip * 12 | 0) | 0;
 $detailVerts = $tile + 28 | 0;
 $j_0101 = 0;
 while (1) {
  $mul54 = (HEAP32[$triBase >> 2] | 0) + $j_0101 << 2;
  $45 = HEAP32[$detailTris >> 2] | 0;
  $46 = HEAP8[$vertCount >> 0] | 0;
  $conv62 = $46 & 255;
  $47 = HEAP8[$45 + $mul54 >> 0] | 0;
  $conv60 = $47 & 255;
  if (($47 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $52 = (HEAP32[$verts70 >> 2] | 0) + (((HEAPU16[$0 + ($ip << 5) + 4 + ($conv60 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $52 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv60 - $conv62 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $53 = HEAP8[$45 + ($mul54 | 1) >> 0] | 0;
  $conv60_1 = $53 & 255;
  if (($53 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $59 = (HEAP32[$verts70 >> 2] | 0) + (((HEAPU16[$0 + ($ip << 5) + 4 + ($conv60_1 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $59 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv60_1 - $conv62 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $60 = HEAP8[$45 + ($mul54 | 2) >> 0] | 0;
  $conv60_2 = $60 & 255;
  if (($60 & 255) >>> 0 < ($46 & 255) >>> 0) {
   $65 = (HEAP32[$verts70 >> 2] | 0) + (((HEAPU16[$0 + ($ip << 5) + 4 + ($conv60_2 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $65 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv60_2 - $conv62 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $inc93 = $j_0101 + 1 | 0;
  if (__Z28dtClosestHeightPointTrianglePKfS0_S0_S0_Rf(+HEAPF32[$pos >> 2], +HEAPF32[$arrayidx4_i50 >> 2], +HEAPF32[$52 >> 2], +HEAPF32[$52 + 4 >> 2], +HEAPF32[$52 + 8 >> 2], $59, $65, $h) | 0) {
   break;
  }
  if (($inc93 | 0) < (HEAPU8[$triCount >> 0] | 0)) {
   $j_0101 = $inc93;
  } else {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 18) {
  STACKTOP = sp;
  return;
 }
 HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$h >> 2];
 STACKTOP = sp;
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $__p_i_i_i_i = 0, $__pat = 0, $tmpcast = 0, $__dp = 0, $__ts = 0, $__grp = 0, $__sym = 0, $__sn = 0, $__fd = 0, $__mbuf = 0, $__mi = 0, $__me = 0, $__locale_2_i_i57 = 0, $0 = 0, $1 = 0, $sub_i_i_i = 0, $9 = 0, $10 = 0, $exception_i_i_i = 0, $12 = 0, $__size__i_i = 0, $13 = 0, $tobool_i_i = 0, $cond_i = 0, $cond_i_i_i = 0, $16 = 0, $19 = 0, $this4_i_i_i = 0, $this4_i_i_i17 = 0, $this4_i_i_i18 = 0, $20 = 0, $21 = 0, $tobool_i_i24 = 0, $cond_i30 = 0, $23 = 0, $cond_i40 = 0, $25 = 0, $cond_i50 = 0, $27 = 0, $cond_i60 = 0, $29 = 0, $cond_i96 = 0, $31 = 0, $cond_i106 = 0, $add19_pn = 0, $cond = 0, $call30 = 0, $exception_i = 0, $46 = 0, $__mb_0 = 0, $cond_i_i122 = 0, $cond_i70 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__pat = sp + 16 | 0;
 $tmpcast = $__pat;
 $__dp = STACKTOP;
 STACKTOP = STACKTOP + 1 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__ts = STACKTOP;
 STACKTOP = STACKTOP + 1 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__grp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sym = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__sn = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__fd = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mbuf = STACKTOP;
 STACKTOP = STACKTOP + 100 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__mi = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__me = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $__locale_2_i_i57 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i57;
 $1 = $__locale_2_i_i57 + 4 | 0;
 tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $9 = HEAP32[$__locale_2_i_i57 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i57 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $10 = HEAP32[$9 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($10 | 0) != 0) {
   $12 = $10;
   $__size__i_i = $__digits;
   $13 = HEAP8[$__size__i_i >> 0] | 0;
   $tobool_i_i = ($13 & 1) == 0;
   if ($tobool_i_i) {
    $cond_i = ($13 & 255) >>> 1;
   } else {
    $cond_i = HEAP32[$__digits + 4 >> 2] | 0;
   }
   if (($cond_i | 0) == 0) {
    $19 = 0;
   } else {
    if ($tobool_i_i) {
     $cond_i_i_i = $__digits + 1 | 0;
    } else {
     $cond_i_i_i = HEAP32[$__digits + 8 >> 2] | 0;
    }
    $16 = HEAP8[$cond_i_i_i >> 0] | 0;
    $19 = $16 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($12, 45) | 0) << 24 >> 24;
   }
   HEAP32[$__pat >> 2] = 0;
   $this4_i_i_i = $__grp;
   _memset($this4_i_i_i | 0, 0, 12) | 0;
   $this4_i_i_i17 = $__sym;
   _memset($this4_i_i_i17 | 0, 0, 12) | 0;
   $this4_i_i_i18 = $__sn;
   _memset($this4_i_i_i18 | 0, 0, 12) | 0;
   __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $19, $0, $tmpcast, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
   $20 = $__mbuf | 0;
   $21 = HEAP8[$__size__i_i >> 0] | 0;
   $tobool_i_i24 = ($21 & 1) == 0;
   if ($tobool_i_i24) {
    $cond_i30 = ($21 & 255) >>> 1;
   } else {
    $cond_i30 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   $23 = HEAP32[$__fd >> 2] | 0;
   if (($cond_i30 | 0) > ($23 | 0)) {
    if ($tobool_i_i24) {
     $cond_i40 = ($21 & 255) >>> 1;
    } else {
     $cond_i40 = HEAP32[$__digits + 4 >> 2] | 0;
    }
    $25 = HEAP8[$this4_i_i_i18 >> 0] | 0;
    if (($25 & 1) == 0) {
     $cond_i50 = ($25 & 255) >>> 1;
    } else {
     $cond_i50 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $27 = HEAP8[$this4_i_i_i17 >> 0] | 0;
    if (($27 & 1) == 0) {
     $cond_i60 = ($27 & 255) >>> 1;
    } else {
     $cond_i60 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add19_pn = $cond_i50 + ($cond_i40 - $23 << 1 | 1) + $cond_i60 | 0;
   } else {
    $29 = HEAP8[$this4_i_i_i18 >> 0] | 0;
    if (($29 & 1) == 0) {
     $cond_i96 = ($29 & 255) >>> 1;
    } else {
     $cond_i96 = HEAP32[$__sn + 4 >> 2] | 0;
    }
    $31 = HEAP8[$this4_i_i_i17 >> 0] | 0;
    if (($31 & 1) == 0) {
     $cond_i106 = ($31 & 255) >>> 1;
    } else {
     $cond_i106 = HEAP32[$__sym + 4 >> 2] | 0;
    }
    $add19_pn = $cond_i96 + 2 + $cond_i106 | 0;
   }
   $cond = $add19_pn + $23 | 0;
   if ($cond >>> 0 > 100 >>> 0) {
    $call30 = _malloc($cond) | 0;
    if (($call30 | 0) == 0) {
     $exception_i = ___cxa_allocate_exception(4) | 0;
     HEAP32[$exception_i >> 2] = 11576;
     ___cxa_throw($exception_i | 0, 17832, 52);
    } else {
     $__mb_0 = $call30;
     $46 = $call30;
    }
   } else {
    $__mb_0 = $20;
    $46 = 0;
   }
   if ($tobool_i_i24) {
    $cond_i70 = ($21 & 255) >>> 1;
    $cond_i_i122 = $__digits + 1 | 0;
   } else {
    $cond_i70 = HEAP32[$__digits + 4 >> 2] | 0;
    $cond_i_i122 = HEAP32[$__digits + 8 >> 2] | 0;
   }
   __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $cond_i_i122, $cond_i_i122 + $cond_i70 | 0, $12, $19, $tmpcast, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp, $__sym, $__sn, $23);
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, HEAP32[$__s >> 2] | 0, $__mb_0, HEAP32[$__mi >> 2] | 0, HEAP32[$__me >> 2] | 0, $__iob, $__fl);
   if (($46 | 0) != 0) {
    _free($46);
   }
   if (!((HEAP8[$this4_i_i_i18 >> 0] & 1) == 0)) {
    $57 = HEAP32[$__sn + 8 >> 2] | 0;
    if (($57 | 0) != 0) {
     _free($57);
    }
   }
   if (!((HEAP8[$this4_i_i_i17 >> 0] & 1) == 0)) {
    $59 = HEAP32[$__sym + 8 >> 2] | 0;
    if (($59 | 0) != 0) {
     _free($59);
    }
   }
   if (!((HEAP8[$this4_i_i_i >> 0] & 1) == 0)) {
    $61 = HEAP32[$__grp + 8 >> 2] | 0;
    if (($61 | 0) != 0) {
     _free($61);
    }
   }
   $62 = $__locale_2_i_i57 + 4 | 0;
   if (((tempValue = HEAP32[$62 >> 2] | 0, HEAP32[$62 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i57 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i57);
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e_0, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $1 = 0, $retval_0_i_i_i_i = 0, $6 = 0, $7 = 0, $retval_0_i_i12_i_i = 0, $13 = 0, $14 = 0, $15 = 0, $retval_0_i_i = 0, $20 = 0, $23 = 0, $conv = 0, $25 = 0, $__ninp__i_i22 = 0, $26 = 0, $_pre_i15_i_i63 = 0, $30 = 0, $__n_addr_0_in = 0, $__r_0_in = 0, $__r_0 = 0, $__n_addr_0 = 0, $31 = 0, $32 = 0, $retval_0_i_i_i_i41 = 0, $37 = 0, $38 = 0, $retval_0_i_i12_i_i60 = 0, $cmp_i1_i13_i_i61 = 0, $_pre_i15_i_i129 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $retval_0_i_i77 = 0, $add = 0, $53 = 0, $__ninp__i_i86 = 0, $54 = 0, $58 = 0, $retval_0_i_i_i_i107 = 0, $63 = 0, $64 = 0, $retval_0_i_i12_i_i126 = 0, $retval_0 = 0, label = 0;
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $6 = 1;
  } else {
   $1 = HEAP32[$0 + 12 >> 2] | 0;
   if (($1 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0;
   } else {
    $retval_0_i_i_i_i = HEAP32[$1 >> 2] | 0;
   }
   if (($retval_0_i_i_i_i | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $6 = 1;
    break;
   } else {
    $6 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 if (($__e_0 | 0) == 0) {
  label = 13;
 } else {
  $7 = HEAP32[$__e_0 + 12 >> 2] | 0;
  if (($7 | 0) == (HEAP32[$__e_0 + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_0 >> 2] | 0) + 36 >> 2] & 255]($__e_0) | 0;
  } else {
   $retval_0_i_i12_i_i = HEAP32[$7 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i | 0) == -1) {
   label = 13;
  } else {
   if ($6) {
    $13 = $__e_0;
   } else {
    label = 15;
   }
  }
 }
 if ((label | 0) == 13) {
  if ($6) {
   label = 15;
  } else {
   $13 = 0;
  }
 }
 if ((label | 0) == 15) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $14 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $15 = HEAP32[$14 + 12 >> 2] | 0;
 if (($15 | 0) == (HEAP32[$14 + 16 >> 2] | 0)) {
  $retval_0_i_i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 255]($14) | 0;
 } else {
  $retval_0_i_i = HEAP32[$15 >> 2] | 0;
 }
 $20 = $__ct;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 127]($__ct, 2048, $retval_0_i_i) | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $23 = $__ct;
 $conv = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 52 >> 2] & 127]($__ct, $retval_0_i_i, 0) | 0) << 24 >> 24;
 $25 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $__ninp__i_i22 = $25 + 12 | 0;
 $26 = HEAP32[$__ninp__i_i22 >> 2] | 0;
 if (($26 | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
  FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] & 255]($25) | 0;
  $__r_0_in = $conv;
  $__n_addr_0_in = $__n;
  $30 = $13;
  $_pre_i15_i_i63 = $13;
 } else {
  HEAP32[$__ninp__i_i22 >> 2] = $26 + 4;
  $__r_0_in = $conv;
  $__n_addr_0_in = $__n;
  $30 = $13;
  $_pre_i15_i_i63 = $13;
 }
 while (1) {
  $__r_0 = $__r_0_in - 48 | 0;
  $__n_addr_0 = $__n_addr_0_in - 1 | 0;
  $31 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  do {
   if (($31 | 0) == 0) {
    $37 = 1;
   } else {
    $32 = HEAP32[$31 + 12 >> 2] | 0;
    if (($32 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) {
     $retval_0_i_i_i_i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 255]($31) | 0;
    } else {
     $retval_0_i_i_i_i41 = HEAP32[$32 >> 2] | 0;
    }
    if (($retval_0_i_i_i_i41 | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $37 = 1;
     break;
    } else {
     $37 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
     break;
    }
   }
  } while (0);
  if (($30 | 0) == 0) {
   $44 = 1;
   $43 = 0;
   $_pre_i15_i_i129 = $_pre_i15_i_i63;
  } else {
   $38 = HEAP32[$30 + 12 >> 2] | 0;
   if (($38 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) {
    $retval_0_i_i12_i_i60 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 255]($30) | 0;
   } else {
    $retval_0_i_i12_i_i60 = HEAP32[$38 >> 2] | 0;
   }
   $cmp_i1_i13_i_i61 = ($retval_0_i_i12_i_i60 | 0) == -1;
   $44 = $cmp_i1_i13_i_i61 ? 1 : ($_pre_i15_i_i63 | 0) == 0;
   $43 = $cmp_i1_i13_i_i61 ? 0 : $_pre_i15_i_i63;
   $_pre_i15_i_i129 = $cmp_i1_i13_i_i61 ? 0 : $_pre_i15_i_i63;
  }
  $45 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  if (!(($37 ^ $44) & ($__n_addr_0 | 0) > 0)) {
   break;
  }
  $46 = HEAP32[$45 + 12 >> 2] | 0;
  if (($46 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) {
   $retval_0_i_i77 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45) | 0;
  } else {
   $retval_0_i_i77 = HEAP32[$46 >> 2] | 0;
  }
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 127]($__ct, 2048, $retval_0_i_i77) | 0)) {
   $retval_0 = $__r_0;
   label = 59;
   break;
  }
  $add = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 52 >> 2] & 127]($__ct, $retval_0_i_i77, 0) | 0) << 24 >> 24) + ($__r_0 * 10 | 0) | 0;
  $53 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
  $__ninp__i_i86 = $53 + 12 | 0;
  $54 = HEAP32[$__ninp__i_i86 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$53 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 40 >> 2] & 255]($53) | 0;
   $__r_0_in = $add;
   $__n_addr_0_in = $__n_addr_0;
   $30 = $43;
   $_pre_i15_i_i63 = $_pre_i15_i_i129;
   continue;
  } else {
   HEAP32[$__ninp__i_i86 >> 2] = $54 + 4;
   $__r_0_in = $add;
   $__n_addr_0_in = $__n_addr_0;
   $30 = $43;
   $_pre_i15_i_i63 = $_pre_i15_i_i129;
   continue;
  }
 }
 if ((label | 0) == 59) {
  return $retval_0 | 0;
 }
 do {
  if (($45 | 0) == 0) {
   $63 = 1;
  } else {
   $58 = HEAP32[$45 + 12 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) {
    $retval_0_i_i_i_i107 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45) | 0;
   } else {
    $retval_0_i_i_i_i107 = HEAP32[$58 >> 2] | 0;
   }
   if (($retval_0_i_i_i_i107 | 0) == -1) {
    HEAP32[$__sbuf__i_i_i >> 2] = 0;
    $63 = 1;
    break;
   } else {
    $63 = (HEAP32[$__sbuf__i_i_i >> 2] | 0) == 0;
    break;
   }
  }
 } while (0);
 if (($_pre_i15_i_i129 | 0) == 0) {
  label = 56;
 } else {
  $64 = HEAP32[$_pre_i15_i_i129 + 12 >> 2] | 0;
  if (($64 | 0) == (HEAP32[$_pre_i15_i_i129 + 16 >> 2] | 0)) {
   $retval_0_i_i12_i_i126 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i15_i_i129 >> 2] | 0) + 36 >> 2] & 255]($_pre_i15_i_i129) | 0;
  } else {
   $retval_0_i_i12_i_i126 = HEAP32[$64 >> 2] | 0;
  }
  if (($retval_0_i_i12_i_i126 | 0) == -1) {
   label = 56;
  } else {
   if ($63) {
    $retval_0 = $__r_0;
    return $retval_0 | 0;
   }
  }
 }
 if ((label | 0) == 56) {
  if (!$63) {
   $retval_0 = $__r_0;
   return $retval_0 | 0;
  }
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $retval_0 = $__r_0;
 return $retval_0 | 0;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e_0, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e_0 = $__e_0 | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $__sbuf__i_i_i = 0, $0 = 0, $5 = 0, $cmp_i_i_i = 0, $11 = 0, $12 = 0, $13 = 0, $retval_0_i_off0_i = 0, $__tab__i = 0, $21 = 0, $conv = 0, $23 = 0, $__ninp__i_i19 = 0, $24 = 0, $_pre_i12_i_i54 = 0, $28 = 0, $__n_addr_0_in = 0, $__r_0_in = 0, $__r_0 = 0, $__n_addr_0 = 0, $29 = 0, $34 = 0, $cmp_i_i_i41 = 0, $cmp_i1_i10_i_i52 = 0, $_pre_i12_i_i121 = 0, $39 = 0, $40 = 0, $41 = 0, $retval_0_i_off0_i69 = 0, $add = 0, $49 = 0, $__ninp__i_i84 = 0, $50 = 0, $58 = 0, $cmp_i_i_i108 = 0, $retval_0 = 0, label = 0;
 $__sbuf__i_i_i = $__b | 0;
 $0 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   $5 = 0;
  } else {
   if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) {
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 255]($0) | 0) == -1) {
     HEAP32[$__sbuf__i_i_i >> 2] = 0;
     $5 = 0;
     break;
    } else {
     $5 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
     break;
    }
   } else {
    $5 = $0;
   }
  }
 } while (0);
 $cmp_i_i_i = ($5 | 0) == 0;
 do {
  if (($__e_0 | 0) == 0) {
   label = 10;
  } else {
   if ((HEAP32[$__e_0 + 12 >> 2] | 0) == (HEAP32[$__e_0 + 16 >> 2] | 0)) {
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$__e_0 >> 2] | 0) + 36 >> 2] & 255]($__e_0) | 0) == -1) {
     label = 10;
     break;
    }
   }
   if ($cmp_i_i_i) {
    $11 = $__e_0;
   } else {
    label = 11;
   }
  }
 } while (0);
 if ((label | 0) == 10) {
  if ($cmp_i_i_i) {
   label = 11;
  } else {
   $11 = 0;
  }
 }
 if ((label | 0) == 11) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $12 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
 $13 = HEAP32[$12 + 12 >> 2] | 0;
 if (($13 | 0) == (HEAP32[$12 + 16 >> 2] | 0)) {
  $retval_0_i_off0_i = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 255]($12) | 0) & 255;
 } else {
  $retval_0_i_off0_i = HEAP8[$13 >> 0] | 0;
 }
 if ($retval_0_i_off0_i << 24 >> 24 > -1) {
  $__tab__i = $__ct + 8 | 0;
  if (!((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i << 24 >> 24 << 1) >> 1] & 2048) == 0)) {
   $21 = $__ct;
   $conv = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($__ct, $retval_0_i_off0_i, 0) | 0) << 24 >> 24;
   $23 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
   $__ninp__i_i19 = $23 + 12 | 0;
   $24 = HEAP32[$__ninp__i_i19 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$23 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$23 >> 2] | 0) + 40 >> 2] & 255]($23) | 0;
    $__r_0_in = $conv;
    $__n_addr_0_in = $__n;
    $28 = $11;
    $_pre_i12_i_i54 = $11;
   } else {
    HEAP32[$__ninp__i_i19 >> 2] = $24 + 1;
    $__r_0_in = $conv;
    $__n_addr_0_in = $__n;
    $28 = $11;
    $_pre_i12_i_i54 = $11;
   }
   while (1) {
    $__r_0 = $__r_0_in - 48 | 0;
    $__n_addr_0 = $__n_addr_0_in - 1 | 0;
    $29 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    do {
     if (($29 | 0) == 0) {
      $34 = 0;
     } else {
      if ((HEAP32[$29 + 12 >> 2] | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 255]($29) | 0) == -1) {
        HEAP32[$__sbuf__i_i_i >> 2] = 0;
        $34 = 0;
        break;
       } else {
        $34 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
        break;
       }
      } else {
       $34 = $29;
      }
     }
    } while (0);
    $cmp_i_i_i41 = ($34 | 0) == 0;
    if (($28 | 0) == 0) {
     $39 = 0;
     $_pre_i12_i_i121 = $_pre_i12_i_i54;
    } else {
     if ((HEAP32[$28 + 12 >> 2] | 0) == (HEAP32[$28 + 16 >> 2] | 0)) {
      $cmp_i1_i10_i_i52 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 255]($28) | 0) == -1;
      $39 = $cmp_i1_i10_i_i52 ? 0 : $_pre_i12_i_i54;
      $_pre_i12_i_i121 = $cmp_i1_i10_i_i52 ? 0 : $_pre_i12_i_i54;
     } else {
      $39 = $28;
      $_pre_i12_i_i121 = $_pre_i12_i_i54;
     }
    }
    $40 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    if (!(($cmp_i_i_i41 ^ ($39 | 0) == 0) & ($__n_addr_0 | 0) > 0)) {
     label = 38;
     break;
    }
    $41 = HEAP32[$40 + 12 >> 2] | 0;
    if (($41 | 0) == (HEAP32[$40 + 16 >> 2] | 0)) {
     $retval_0_i_off0_i69 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 36 >> 2] & 255]($40) | 0) & 255;
    } else {
     $retval_0_i_off0_i69 = HEAP8[$41 >> 0] | 0;
    }
    if (!($retval_0_i_off0_i69 << 24 >> 24 > -1)) {
     $retval_0 = $__r_0;
     label = 49;
     break;
    }
    if ((HEAP16[(HEAP32[$__tab__i >> 2] | 0) + ($retval_0_i_off0_i69 << 24 >> 24 << 1) >> 1] & 2048) == 0) {
     $retval_0 = $__r_0;
     label = 49;
     break;
    }
    $add = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($__ct, $retval_0_i_off0_i69, 0) | 0) << 24 >> 24) + ($__r_0 * 10 | 0) | 0;
    $49 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
    $__ninp__i_i84 = $49 + 12 | 0;
    $50 = HEAP32[$__ninp__i_i84 >> 2] | 0;
    if (($50 | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$49 >> 2] | 0) + 40 >> 2] & 255]($49) | 0;
     $__r_0_in = $add;
     $__n_addr_0_in = $__n_addr_0;
     $28 = $39;
     $_pre_i12_i_i54 = $_pre_i12_i_i121;
     continue;
    } else {
     HEAP32[$__ninp__i_i84 >> 2] = $50 + 1;
     $__r_0_in = $add;
     $__n_addr_0_in = $__n_addr_0;
     $28 = $39;
     $_pre_i12_i_i54 = $_pre_i12_i_i121;
     continue;
    }
   }
   if ((label | 0) == 38) {
    do {
     if (($40 | 0) == 0) {
      $58 = 0;
     } else {
      if ((HEAP32[$40 + 12 >> 2] | 0) == (HEAP32[$40 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 36 >> 2] & 255]($40) | 0) == -1) {
        HEAP32[$__sbuf__i_i_i >> 2] = 0;
        $58 = 0;
        break;
       } else {
        $58 = HEAP32[$__sbuf__i_i_i >> 2] | 0;
        break;
       }
      } else {
       $58 = $40;
      }
     }
    } while (0);
    $cmp_i_i_i108 = ($58 | 0) == 0;
    do {
     if (($_pre_i12_i_i121 | 0) == 0) {
      label = 47;
     } else {
      if ((HEAP32[$_pre_i12_i_i121 + 12 >> 2] | 0) == (HEAP32[$_pre_i12_i_i121 + 16 >> 2] | 0)) {
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$_pre_i12_i_i121 >> 2] | 0) + 36 >> 2] & 255]($_pre_i12_i_i121) | 0) == -1) {
        label = 47;
        break;
       }
      }
      if ($cmp_i_i_i108) {
       $retval_0 = $__r_0;
       return $retval_0 | 0;
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     if (!$cmp_i_i_i108) {
      $retval_0 = $__r_0;
      return $retval_0 | 0;
     }
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $retval_0 = $__r_0;
    return $retval_0 | 0;
   } else if ((label | 0) == 49) {
    return $retval_0 | 0;
   }
  }
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg_result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $__mb_i29 = 0, $__buf_i31 = 0, $__bn_i32 = 0, $__wn_i = 0, $__mb_i = 0, $__buf_i = 0, $__bn_i = 0, $__nn_i = 0, $__ndflt = 0, $temp_lvalue = 0, $temp_lvalue12 = 0, $this4_i_i_i = 0, $1 = 0, $cond_i_i_i2079 = 0, $cond_i22 = 0, $add_ptr = 0, $5 = 0, $tmpcast_i30 = 0, $8 = 0, $9 = 0, $add_ptr_i35 = 0, $vtable_i38 = 0, $__wb_addr_012_i = 0, $cmp4_i = 0, $11 = 0, $__p_010_i = 0, $15 = 0, $16 = 0, $cond_i_i_i60 = 0, $call11 = 0, $this4_i_i_i25 = 0, $call19 = 0, $add_ptr20 = 0, $tmpcast_i = 0, $30 = 0, $31 = 0, $sub_ptr_lhs_cast_i = 0, $arraydecay_i = 0, $add_ptr5_i = 0, $__cap__i_i = 0, $__size__i19_i = 0, $__data__i_i = 0, $vtable_i = 0, $__nb_addr_015_i = 0, $cmp6_i = 0, $33 = 0, $__p_013_i = 0, $35 = 0, $36 = 0, $tobool_i_i = 0, $__cap_0_i = 0, $__sz_0_i = 0, $40 = 0, $add16_i = 0, $__p_0_sum_pre_phi_i = 0, $call12_pn_i = 0, $42 = 0, $44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__mb_i29 = sp | 0;
 $__buf_i31 = sp + 8 | 0;
 $__bn_i32 = sp + 40 | 0;
 $__wn_i = sp + 48 | 0;
 $__mb_i = sp + 56 | 0;
 $__buf_i = sp + 64 | 0;
 $__bn_i = sp + 192 | 0;
 $__nn_i = sp + 200 | 0;
 $__ndflt = sp + 208 | 0;
 $temp_lvalue = sp + 224 | 0;
 $temp_lvalue12 = sp + 232 | 0;
 $this4_i_i_i = $__ndflt;
 _memset($this4_i_i_i | 0, 0, 12) | 0;
 HEAP32[$temp_lvalue + 4 >> 2] = 0;
 HEAP32[$temp_lvalue >> 2] = 13272;
 $1 = HEAP8[$__dflt >> 0] | 0;
 if (($1 & 1) == 0) {
  $cond_i22 = ($1 & 255) >>> 1;
  $cond_i_i_i2079 = $__dflt + 4 | 0;
 } else {
  $cond_i22 = HEAP32[$__dflt + 4 >> 2] | 0;
  $cond_i_i_i2079 = HEAP32[$__dflt + 8 >> 2] | 0;
 }
 $add_ptr = $cond_i_i_i2079 + ($cond_i22 << 2) | 0;
 $5 = $__buf_i31 | 0;
 $tmpcast_i30 = $__mb_i29;
 HEAP32[$__mb_i29 >> 2] = 0;
 HEAP32[$__mb_i29 + 4 >> 2] = 0;
 do {
  if ($cond_i_i_i2079 >>> 0 < $add_ptr >>> 0) {
   $8 = $temp_lvalue | 0;
   $9 = $temp_lvalue;
   $add_ptr_i35 = $__buf_i31 + 32 | 0;
   $__wb_addr_012_i = $cond_i_i_i2079;
   $vtable_i38 = 13272;
   while (1) {
    HEAP32[$__wn_i >> 2] = $__wb_addr_012_i;
    $cmp4_i = (FUNCTION_TABLE_iiiiiiiii[HEAP32[$vtable_i38 + 12 >> 2] & 63]($8, $tmpcast_i30, $__wb_addr_012_i, $add_ptr, $__wn_i, $5, $add_ptr_i35, $__bn_i32) | 0) == 2;
    $11 = HEAP32[$__wn_i >> 2] | 0;
    if ($cmp4_i | ($11 | 0) == ($__wb_addr_012_i | 0)) {
     break;
    }
    if ($5 >>> 0 < (HEAP32[$__bn_i32 >> 2] | 0) >>> 0) {
     $__p_010_i = $5;
     do {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt, HEAP8[$__p_010_i >> 0] | 0);
      $__p_010_i = $__p_010_i + 1 | 0;
     } while ($__p_010_i >>> 0 < (HEAP32[$__bn_i32 >> 2] | 0) >>> 0);
     $15 = HEAP32[$__wn_i >> 2] | 0;
    } else {
     $15 = $11;
    }
    if (!($15 >>> 0 < $add_ptr >>> 0)) {
     label = 16;
     break;
    }
    $__wb_addr_012_i = $15;
    $vtable_i38 = HEAP32[$9 >> 2] | 0;
   }
   if ((label | 0) == 16) {
    $16 = (HEAP8[$this4_i_i_i >> 0] & 1) == 0;
    break;
   }
   __ZNSt3__121__throw_runtime_errorEPKc(5976);
  } else {
   $16 = 1;
  }
 } while (0);
 if ($16) {
  $cond_i_i_i60 = $__ndflt + 1 | 0;
 } else {
  $cond_i_i_i60 = HEAP32[$__ndflt + 8 >> 2] | 0;
 }
 $call11 = _catgets((($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $cond_i_i_i60 | 0) | 0;
 $this4_i_i_i25 = $agg_result;
 _memset($this4_i_i_i25 | 0, 0, 12) | 0;
 HEAP32[$temp_lvalue12 + 4 >> 2] = 0;
 HEAP32[$temp_lvalue12 >> 2] = 13216;
 $call19 = _strlen($call11 | 0) | 0;
 $add_ptr20 = $call11 + $call19 | 0;
 $tmpcast_i = $__mb_i;
 HEAP32[$__mb_i >> 2] = 0;
 HEAP32[$__mb_i + 4 >> 2] = 0;
 L28 : do {
  if (($call19 | 0) > 0) {
   $30 = $temp_lvalue12 | 0;
   $31 = $temp_lvalue12;
   $sub_ptr_lhs_cast_i = $add_ptr20;
   $arraydecay_i = $__buf_i | 0;
   $add_ptr5_i = $__buf_i + 128 | 0;
   $__cap__i_i = $agg_result | 0;
   $__size__i19_i = $agg_result + 4 | 0;
   $__data__i_i = $agg_result + 8 | 0;
   $__nb_addr_015_i = $call11;
   $vtable_i = 13216;
   while (1) {
    HEAP32[$__nn_i >> 2] = $__nb_addr_015_i;
    $cmp6_i = (FUNCTION_TABLE_iiiiiiiii[HEAP32[$vtable_i + 16 >> 2] & 63]($30, $tmpcast_i, $__nb_addr_015_i, ($sub_ptr_lhs_cast_i - $__nb_addr_015_i | 0) > 32 ? $__nb_addr_015_i + 32 | 0 : $add_ptr20, $__nn_i, $arraydecay_i, $add_ptr5_i, $__bn_i) | 0) == 2;
    $33 = HEAP32[$__nn_i >> 2] | 0;
    if ($cmp6_i | ($33 | 0) == ($__nb_addr_015_i | 0)) {
     break;
    }
    if ($arraydecay_i >>> 0 < (HEAP32[$__bn_i >> 2] | 0) >>> 0) {
     $__p_013_i = $arraydecay_i;
     do {
      $35 = HEAP32[$__p_013_i >> 2] | 0;
      $36 = HEAP8[$this4_i_i_i25 >> 0] | 0;
      $tobool_i_i = ($36 & 1) != 0;
      if ($tobool_i_i) {
       $__sz_0_i = HEAP32[$__size__i19_i >> 2] | 0;
       $__cap_0_i = (HEAP32[$__cap__i_i >> 2] & -2) - 1 | 0;
      } else {
       $__sz_0_i = ($36 & 255) >>> 1;
       $__cap_0_i = 1;
      }
      if (($__sz_0_i | 0) == ($__cap_0_i | 0)) {
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($agg_result, $__cap_0_i, 1, $__cap_0_i, $__cap_0_i, 0, 0);
       if ((HEAP8[$this4_i_i_i25 >> 0] & 1) == 0) {
        label = 40;
       } else {
        label = 41;
       }
      } else {
       if ($tobool_i_i) {
        label = 41;
       } else {
        label = 40;
       }
      }
      if ((label | 0) == 40) {
       label = 0;
       HEAP8[$this4_i_i_i25 >> 0] = ($__sz_0_i << 1) + 2;
       $call12_pn_i = $__size__i19_i;
       $__p_0_sum_pre_phi_i = $__sz_0_i + 1 | 0;
      } else if ((label | 0) == 41) {
       label = 0;
       $40 = HEAP32[$__data__i_i >> 2] | 0;
       $add16_i = $__sz_0_i + 1 | 0;
       HEAP32[$__size__i19_i >> 2] = $add16_i;
       $call12_pn_i = $40;
       $__p_0_sum_pre_phi_i = $add16_i;
      }
      HEAP32[$call12_pn_i + ($__sz_0_i << 2) >> 2] = $35;
      HEAP32[$call12_pn_i + ($__p_0_sum_pre_phi_i << 2) >> 2] = 0;
      $__p_013_i = $__p_013_i + 4 | 0;
     } while ($__p_013_i >>> 0 < (HEAP32[$__bn_i >> 2] | 0) >>> 0);
     $42 = HEAP32[$__nn_i >> 2] | 0;
    } else {
     $42 = $33;
    }
    if (!($42 >>> 0 < $add_ptr20 >>> 0)) {
     break L28;
    }
    $__nb_addr_015_i = $42;
    $vtable_i = HEAP32[$31 >> 2] | 0;
   }
   __ZNSt3__121__throw_runtime_errorEPKc(5976);
  }
 } while (0);
 if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $44 = HEAP32[$__ndflt + 8 >> 2] | 0;
 if (($44 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($44);
 STACKTOP = sp;
 return;
}
function __ZNK14dtNavMeshQuery15getPortalPointsEjPK6dtPolyPK10dtMeshTilejS2_S5_PfS6_($from, $fromPoly, $fromTile, $to, $toPoly, $toTile, $left, $right) {
 $from = $from | 0;
 $fromPoly = $fromPoly | 0;
 $fromTile = $fromTile | 0;
 $to = $to | 0;
 $toPoly = $toPoly | 0;
 $toTile = $toTile | 0;
 $left = $left | 0;
 $right = $right | 0;
 var $i_0114 = 0, $0 = 0, $i_0116 = 0, $arrayidx = 0, $i_0 = 0, $i11_0104 = 0, $mul = 0, $6 = 0, $arrayidx27 = 0, $arrayidx2_i86 = 0, $arrayidx4_i88 = 0, $i11_0 = 0, $i45_0108 = 0, $14 = 0, $i45_0110 = 0, $mul63 = 0, $18 = 0, $arrayidx65 = 0, $arrayidx2_i76 = 0, $arrayidx4_i78 = 0, $i45_0 = 0, $idxprom = 0, $conv88 = 0, $mul89 = 0, $29 = 0, $arrayidx91 = 0, $arrayidx2_i68 = 0, $arrayidx3_i69 = 0, $arrayidx4_i70 = 0, $arrayidx5_i71 = 0, $mul92 = 0, $arrayidx94 = 0, $arrayidx2_i = 0, $arrayidx3_i = 0, $arrayidx4_i66 = 0, $arrayidx5_i67 = 0, $37 = 0, $38 = 0, $mul106 = 0.0, $mul110 = 0.0, $39 = 0.0, $41 = 0.0, $43 = 0.0, $45 = 0.0, $47 = 0.0, $49 = 0.0, $retval_0 = 0, label = 0;
 $i_0114 = HEAP32[$fromPoly >> 2] | 0;
 if (($i_0114 | 0) == -1) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $0 = HEAP32[$fromTile + 20 >> 2] | 0;
 $i_0116 = $i_0114;
 while (1) {
  $arrayidx = $0 + ($i_0116 * 12 | 0) | 0;
  if ((HEAP32[$arrayidx >> 2] | 0) == ($to | 0)) {
   break;
  }
  $i_0 = HEAP32[$0 + ($i_0116 * 12 | 0) + 4 >> 2] | 0;
  if (($i_0 | 0) == -1) {
   $retval_0 = -2147483640;
   label = 19;
   break;
  } else {
   $i_0116 = $i_0;
  }
 }
 if ((label | 0) == 19) {
  return $retval_0 | 0;
 }
 if (($arrayidx | 0) == 0) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 if ((HEAP8[$fromPoly + 31 >> 0] & -64) << 24 >> 24 == 64) {
  $i11_0104 = $i_0114;
  while (1) {
   if ((HEAP32[$0 + ($i11_0104 * 12 | 0) >> 2] | 0) == ($to | 0)) {
    break;
   }
   $i11_0 = HEAP32[$0 + ($i11_0104 * 12 | 0) + 4 >> 2] | 0;
   if (($i11_0 | 0) == -1) {
    $retval_0 = -2147483640;
    label = 19;
    break;
   } else {
    $i11_0104 = $i11_0;
   }
  }
  if ((label | 0) == 19) {
   return $retval_0 | 0;
  }
  $mul = (HEAPU16[$fromPoly + 4 + (HEAPU8[$0 + ($i11_0104 * 12 | 0) + 8 >> 0] << 1) >> 1] | 0) * 3 | 0;
  $6 = HEAP32[$fromTile + 16 >> 2] | 0;
  $arrayidx27 = $6 + ($mul << 2) | 0;
  HEAPF32[$left >> 2] = +HEAPF32[$arrayidx27 >> 2];
  $arrayidx2_i86 = $6 + ($mul + 1 << 2) | 0;
  HEAPF32[$left + 4 >> 2] = +HEAPF32[$arrayidx2_i86 >> 2];
  $arrayidx4_i88 = $6 + ($mul + 2 << 2) | 0;
  HEAPF32[$left + 8 >> 2] = +HEAPF32[$arrayidx4_i88 >> 2];
  HEAPF32[$right >> 2] = +HEAPF32[$arrayidx27 >> 2];
  HEAPF32[$right + 4 >> 2] = +HEAPF32[$arrayidx2_i86 >> 2];
  HEAPF32[$right + 8 >> 2] = +HEAPF32[$arrayidx4_i88 >> 2];
  $retval_0 = 1073741824;
  return $retval_0 | 0;
 }
 if (!((HEAP8[$toPoly + 31 >> 0] & -64) << 24 >> 24 == 64)) {
  $idxprom = HEAPU8[$0 + ($i_0116 * 12 | 0) + 8 >> 0] | 0;
  $conv88 = HEAPU16[$fromPoly + 4 + (((($idxprom + 1 | 0) >>> 0) % ((HEAPU8[$fromPoly + 30 >> 0] | 0) >>> 0) | 0) << 1) >> 1] | 0;
  $mul89 = (HEAPU16[$fromPoly + 4 + ($idxprom << 1) >> 1] | 0) * 3 | 0;
  $29 = HEAP32[$fromTile + 16 >> 2] | 0;
  $arrayidx91 = $29 + ($mul89 << 2) | 0;
  HEAPF32[$left >> 2] = +HEAPF32[$arrayidx91 >> 2];
  $arrayidx2_i68 = $29 + ($mul89 + 1 << 2) | 0;
  $arrayidx3_i69 = $left + 4 | 0;
  HEAPF32[$arrayidx3_i69 >> 2] = +HEAPF32[$arrayidx2_i68 >> 2];
  $arrayidx4_i70 = $29 + ($mul89 + 2 << 2) | 0;
  $arrayidx5_i71 = $left + 8 | 0;
  HEAPF32[$arrayidx5_i71 >> 2] = +HEAPF32[$arrayidx4_i70 >> 2];
  $mul92 = $conv88 * 3 | 0;
  $arrayidx94 = $29 + ($mul92 << 2) | 0;
  HEAPF32[$right >> 2] = +HEAPF32[$arrayidx94 >> 2];
  $arrayidx2_i = $29 + ($mul92 + 1 << 2) | 0;
  $arrayidx3_i = $right + 4 | 0;
  HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$arrayidx2_i >> 2];
  $arrayidx4_i66 = $29 + ($mul92 + 2 << 2) | 0;
  $arrayidx5_i67 = $right + 8 | 0;
  HEAPF32[$arrayidx5_i67 >> 2] = +HEAPF32[$arrayidx4_i66 >> 2];
  if ((HEAP8[$0 + ($i_0116 * 12 | 0) + 9 >> 0] | 0) == -1) {
   $retval_0 = 1073741824;
   return $retval_0 | 0;
  }
  $37 = HEAP8[$0 + ($i_0116 * 12 | 0) + 10 >> 0] | 0;
  $38 = HEAP8[$0 + ($i_0116 * 12 | 0) + 11 >> 0] | 0;
  if ($37 << 24 >> 24 == 0 & $38 << 24 >> 24 == -1) {
   $retval_0 = 1073741824;
   return $retval_0 | 0;
  }
  $mul106 = +($37 & 255 | 0) * .003921568859368563;
  $mul110 = +($38 & 255 | 0) * .003921568859368563;
  $39 = +HEAPF32[$arrayidx91 >> 2];
  HEAPF32[$left >> 2] = $39 + $mul106 * (+HEAPF32[$arrayidx94 >> 2] - $39);
  $41 = +HEAPF32[$arrayidx2_i68 >> 2];
  HEAPF32[$arrayidx3_i69 >> 2] = $41 + $mul106 * (+HEAPF32[$arrayidx2_i >> 2] - $41);
  $43 = +HEAPF32[$arrayidx4_i70 >> 2];
  HEAPF32[$arrayidx5_i71 >> 2] = $43 + $mul106 * (+HEAPF32[$arrayidx4_i66 >> 2] - $43);
  $45 = +HEAPF32[$arrayidx91 >> 2];
  HEAPF32[$right >> 2] = $45 + $mul110 * (+HEAPF32[$arrayidx94 >> 2] - $45);
  $47 = +HEAPF32[$arrayidx2_i68 >> 2];
  HEAPF32[$arrayidx3_i >> 2] = $47 + $mul110 * (+HEAPF32[$arrayidx2_i >> 2] - $47);
  $49 = +HEAPF32[$arrayidx4_i70 >> 2];
  HEAPF32[$arrayidx5_i67 >> 2] = $49 + $mul110 * (+HEAPF32[$arrayidx4_i66 >> 2] - $49);
  $retval_0 = 1073741824;
  return $retval_0 | 0;
 }
 $i45_0108 = HEAP32[$toPoly >> 2] | 0;
 if (($i45_0108 | 0) == -1) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $14 = HEAP32[$toTile + 20 >> 2] | 0;
 $i45_0110 = $i45_0108;
 while (1) {
  if ((HEAP32[$14 + ($i45_0110 * 12 | 0) >> 2] | 0) == ($from | 0)) {
   break;
  }
  $i45_0 = HEAP32[$14 + ($i45_0110 * 12 | 0) + 4 >> 2] | 0;
  if (($i45_0 | 0) == -1) {
   $retval_0 = -2147483640;
   label = 19;
   break;
  } else {
   $i45_0110 = $i45_0;
  }
 }
 if ((label | 0) == 19) {
  return $retval_0 | 0;
 }
 $mul63 = (HEAPU16[$toPoly + 4 + (HEAPU8[$14 + ($i45_0110 * 12 | 0) + 8 >> 0] << 1) >> 1] | 0) * 3 | 0;
 $18 = HEAP32[$toTile + 16 >> 2] | 0;
 $arrayidx65 = $18 + ($mul63 << 2) | 0;
 HEAPF32[$left >> 2] = +HEAPF32[$arrayidx65 >> 2];
 $arrayidx2_i76 = $18 + ($mul63 + 1 << 2) | 0;
 HEAPF32[$left + 4 >> 2] = +HEAPF32[$arrayidx2_i76 >> 2];
 $arrayidx4_i78 = $18 + ($mul63 + 2 << 2) | 0;
 HEAPF32[$left + 8 >> 2] = +HEAPF32[$arrayidx4_i78 >> 2];
 HEAPF32[$right >> 2] = +HEAPF32[$arrayidx65 >> 2];
 HEAPF32[$right + 4 >> 2] = +HEAPF32[$arrayidx2_i76 >> 2];
 HEAPF32[$right + 8 >> 2] = +HEAPF32[$arrayidx4_i78 >> 2];
 $retval_0 = 1073741824;
 return $retval_0 | 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $sub_ptr_lhs_cast30_i = 0, $sub_ptr_lhs_cast149_i = 0, $_frm_nxt_0 = 0, $_to_nxt_0 = 0, $1 = 0, $conv15_i = 0, $conv37_i = 0, $3 = 0, $4 = 0, $conv82_i = 0, $5 = 0, $6 = 0, $7 = 0, $conv141_i = 0, $conv144_i = 0, $and156_i = 0, $conv158_i = 0, $incdec_ptr196_i = 0, $_frm_nxt_1 = 0, $_to_nxt_1 = 0, $incdec_ptr204_i = 0, $_frm_nxt_2 = 0, $_to_nxt_2 = 0, $_frm_nxt_3 = 0, $_to_nxt_3 = 0, $retval_0_i = 0, label = 0;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast30_i = $frm_end;
   $sub_ptr_lhs_cast149_i = $to_end;
   $_to_nxt_0 = $to;
   $_frm_nxt_0 = $frm;
   while (1) {
    if (!($_to_nxt_0 >>> 0 < $to_end >>> 0)) {
     $_to_nxt_2 = $_to_nxt_0;
     $_frm_nxt_2 = $_frm_nxt_0;
     label = 31;
     break L1;
    }
    $1 = HEAP8[$_frm_nxt_0 >> 0] | 0;
    $conv15_i = $1 & 255;
    do {
     if ($1 << 24 >> 24 > -1) {
      HEAP16[$_to_nxt_0 >> 1] = $1 & 255;
      $_to_nxt_1 = $_to_nxt_0;
      $_frm_nxt_1 = $_frm_nxt_0 + 1 | 0;
     } else {
      if (($1 & 255) >>> 0 < 194 >>> 0) {
       $retval_0_i = 2;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      if (($1 & 255) >>> 0 < 224 >>> 0) {
       if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 2) {
        $retval_0_i = 1;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       $conv37_i = HEAPU8[$_frm_nxt_0 + 1 >> 0] | 0;
       if (($conv37_i & 192 | 0) != 128) {
        $retval_0_i = 2;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       HEAP16[$_to_nxt_0 >> 1] = $conv37_i & 63 | $conv15_i << 6 & 1984;
       $_to_nxt_1 = $_to_nxt_0;
       $_frm_nxt_1 = $_frm_nxt_0 + 2 | 0;
       break;
      }
      if (($1 & 255) >>> 0 < 240 >>> 0) {
       if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 3) {
        $retval_0_i = 1;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       $3 = HEAP8[$_frm_nxt_0 + 1 >> 0] | 0;
       $4 = HEAP8[$_frm_nxt_0 + 2 >> 0] | 0;
       if (($conv15_i | 0) == 224) {
        if (!(($3 & -32) << 24 >> 24 == -96)) {
         $retval_0_i = 2;
         $_to_nxt_3 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       } else if (($conv15_i | 0) == 237) {
        if (!(($3 & -32) << 24 >> 24 == -128)) {
         $retval_0_i = 2;
         $_to_nxt_3 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       } else {
        if (!(($3 & -64) << 24 >> 24 == -128)) {
         $retval_0_i = 2;
         $_to_nxt_3 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       }
       $conv82_i = $4 & 255;
       if (($conv82_i & 192 | 0) != 128) {
        $retval_0_i = 2;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       HEAP16[$_to_nxt_0 >> 1] = ($3 & 255) << 6 & 4032 | $conv15_i << 12 | $conv82_i & 63;
       $_to_nxt_1 = $_to_nxt_0;
       $_frm_nxt_1 = $_frm_nxt_0 + 3 | 0;
       break;
      }
      if (!(($1 & 255) >>> 0 < 245 >>> 0)) {
       $retval_0_i = 2;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 4) {
       $retval_0_i = 1;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $5 = HEAP8[$_frm_nxt_0 + 1 >> 0] | 0;
      $6 = HEAP8[$_frm_nxt_0 + 2 >> 0] | 0;
      $7 = HEAP8[$_frm_nxt_0 + 3 >> 0] | 0;
      if (($conv15_i | 0) == 240) {
       if (!(($5 + 112 & 255) >>> 0 < 48 >>> 0)) {
        $retval_0_i = 2;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      } else if (($conv15_i | 0) == 244) {
       if (!(($5 & -16) << 24 >> 24 == -128)) {
        $retval_0_i = 2;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      } else {
       if (!(($5 & -64) << 24 >> 24 == -128)) {
        $retval_0_i = 2;
        $_to_nxt_3 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      }
      $conv141_i = $6 & 255;
      if (($conv141_i & 192 | 0) != 128) {
       $retval_0_i = 2;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $conv144_i = $7 & 255;
      if (($conv144_i & 192 | 0) != 128) {
       $retval_0_i = 2;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      if (($sub_ptr_lhs_cast149_i - $_to_nxt_0 | 0) < 4) {
       $retval_0_i = 1;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $and156_i = $conv15_i & 7;
      $conv158_i = $5 & 255;
      if (($conv158_i << 12 & 196608 | $and156_i << 18) >>> 0 > 1114111 >>> 0) {
       $retval_0_i = 2;
       $_to_nxt_3 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      HEAP16[$_to_nxt_0 >> 1] = $conv158_i << 2 & 60 | $conv141_i >>> 4 & 3 | (($conv158_i >>> 4 & 3 | $and156_i << 2) << 6) + 16320 | 55296;
      $incdec_ptr196_i = $_to_nxt_0 + 2 | 0;
      HEAP16[$incdec_ptr196_i >> 1] = $conv144_i & 63 | $conv141_i << 6 & 960 | 56320;
      $_to_nxt_1 = $incdec_ptr196_i;
      $_frm_nxt_1 = $_frm_nxt_0 + 4 | 0;
     }
    } while (0);
    $incdec_ptr204_i = $_to_nxt_1 + 2 | 0;
    if ($_frm_nxt_1 >>> 0 < $frm_end >>> 0) {
     $_to_nxt_0 = $incdec_ptr204_i;
     $_frm_nxt_0 = $_frm_nxt_1;
    } else {
     $_to_nxt_2 = $incdec_ptr204_i;
     $_frm_nxt_2 = $_frm_nxt_1;
     label = 31;
     break;
    }
   }
  } else {
   $_to_nxt_2 = $to;
   $_frm_nxt_2 = $frm;
   label = 31;
  }
 } while (0);
 if ((label | 0) == 31) {
  $retval_0_i = $_frm_nxt_2 >>> 0 < $frm_end >>> 0 | 0;
  $_to_nxt_3 = $_to_nxt_2;
  $_frm_nxt_3 = $_frm_nxt_2;
 }
 HEAP32[$frm_nxt >> 2] = $frm + ($_frm_nxt_3 - $frm);
 HEAP32[$to_nxt >> 2] = $to + ($_to_nxt_3 - $to >> 1 << 1);
 return $retval_0_i | 0;
}
function __Z13addCrowdAgentfffffffhf($posX, $posY, $posZ, $radius, $height, $maxAcceleration, $maxSpeed, $updateFlags, $separationWeight) {
 $posX = +$posX;
 $posY = +$posY;
 $posZ = +$posZ;
 $radius = +$radius;
 $height = +$height;
 $maxAcceleration = +$maxAcceleration;
 $maxSpeed = +$maxSpeed;
 $updateFlags = $updateFlags | 0;
 $separationWeight = +$separationWeight;
 var $nearest_i = 0, $ref_i = 0, $ap_i_sroa_13 = 0, $ap_sroa_13 = 0, $pos = 0, $mul = 0.0, $mul7 = 0.0, $arrayinit_begin = 0, $0 = 0, $m_maxAgents_i = 0, $3 = 0, $m_agents_i = 0, $4 = 0, $i_027_i = 0, $active_i = 0, $inc_i = 0, $arraydecay7_i = 0, $8 = 0, $9 = 0, $arrayidx2_i_i_i = 0, $arrayidx4_i_i_i = 0, $17 = 0, $params3_i_i = 0, $25 = 0, $retval_0_i = 0, $28 = 0, $params3_i = 0, $$etemp$6$0 = 0, $$etemp$6$1 = 0, $$etemp$7$0 = 0, $$etemp$7$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $nearest_i = sp | 0;
 $ref_i = sp + 16 | 0;
 $ap_i_sroa_13 = sp + 24 | 0;
 $ap_sroa_13 = sp + 32 | 0;
 $pos = sp + 40 | 0;
 HEAP16[$ap_sroa_13 >> 1] = 0;
 $mul = $radius * 12.0;
 $mul7 = $radius * 300.0;
 $arrayinit_begin = $pos | 0;
 HEAPF32[$arrayinit_begin >> 2] = $posX;
 HEAPF32[$pos + 4 >> 2] = $posY;
 HEAPF32[$pos + 8 >> 2] = $posZ;
 $0 = HEAP32[4920] | 0;
 $m_maxAgents_i = $0 | 0;
 $3 = HEAP32[$m_maxAgents_i >> 2] | 0;
 L1 : do {
  if (($3 | 0) > 0) {
   $m_agents_i = $0 + 4 | 0;
   $4 = HEAP32[$m_agents_i >> 2] | 0;
   $i_027_i = 0;
   while (1) {
    $active_i = $4 + ($i_027_i * 608 | 0) | 0;
    $inc_i = $i_027_i + 1 | 0;
    if ((HEAP8[$active_i >> 0] | 0) == 0) {
     break;
    }
    if (($inc_i | 0) < ($3 | 0)) {
     $i_027_i = $inc_i;
    } else {
     $retval_0_i = -1;
     $25 = $0;
     break L1;
    }
   }
   if (($i_027_i | 0) == -1) {
    $retval_0_i = -1;
    $25 = $0;
   } else {
    $arraydecay7_i = $nearest_i | 0;
    __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[$0 + 1e3 >> 2] | 0, $arrayinit_begin, +HEAPF32[$0 + 720 >> 2], +HEAPF32[$0 + 724 >> 2], +HEAPF32[$0 + 728 >> 2], $0 + 732 | 0, $ref_i, $arraydecay7_i) | 0;
    $8 = HEAP32[$4 + ($i_027_i * 608 | 0) + 28 >> 2] | 0;
    if (($8 | 0) == 0) {
     ___assert_fail(5032, 7256, 232, 10424);
     return 0;
    }
    $9 = HEAP32[$ref_i >> 2] | 0;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 4 >> 2] = +HEAPF32[$arraydecay7_i >> 2];
    $arrayidx2_i_i_i = $nearest_i + 4 | 0;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 8 >> 2] = +HEAPF32[$arrayidx2_i_i_i >> 2];
    $arrayidx4_i_i_i = $nearest_i + 8 | 0;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 12 >> 2] = +HEAPF32[$arrayidx4_i_i_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 16 >> 2] = +HEAPF32[$arraydecay7_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 20 >> 2] = +HEAPF32[$arrayidx2_i_i_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 24 >> 2] = +HEAPF32[$arrayidx4_i_i_i >> 2];
    HEAP32[$8 >> 2] = $9;
    HEAP32[$4 + ($i_027_i * 608 | 0) + 32 >> 2] = 1;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 40 >> 2] = 3.4028234663852886e+38;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 44 >> 2] = 3.4028234663852886e+38;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 48 >> 2] = 3.4028234663852886e+38;
    HEAP32[$4 + ($i_027_i * 608 | 0) + 344 >> 2] = 0;
    HEAP32[$4 + ($i_027_i * 608 | 0) + 276 >> 2] = 0;
    if (($i_027_i | 0) >= 0) {
     if ((HEAP32[$m_maxAgents_i >> 2] | 0) >= ($i_027_i | 0)) {
      $17 = HEAP32[$m_agents_i >> 2] | 0;
      $params3_i_i = $17 + ($i_027_i * 608 | 0) + 468 | 0;
      HEAPF32[$params3_i_i >> 2] = $radius;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 472 >> 2] = $height;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 476 >> 2] = $maxAcceleration;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 480 >> 2] = $maxSpeed;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 484 >> 2] = $mul;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 488 >> 2] = $mul7;
      HEAPF32[$17 + ($i_027_i * 608 | 0) + 492 >> 2] = $separationWeight;
      HEAP8[$17 + ($i_027_i * 608 | 0) + 496 >> 0] = 0;
      HEAP8[$17 + ($i_027_i * 608 | 0) + 497 >> 0] = 3;
      HEAP16[$params3_i_i + 30 >> 1] = HEAP16[$ap_sroa_13 >> 1] | 0;
      HEAP32[$17 + ($i_027_i * 608 | 0) + 500 >> 2] = 0;
     }
    }
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 348 >> 2] = 0.0;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 604 >> 2] = 0.0;
    HEAP32[$4 + ($i_027_i * 608 | 0) + 400 >> 2] = 0;
    _memset($4 + ($i_027_i * 608 | 0) + 432 | 0, 0, 36) | 0;
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 408 >> 2] = +HEAPF32[$arraydecay7_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 412 >> 2] = +HEAPF32[$arrayidx2_i_i_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 416 >> 2] = +HEAPF32[$arrayidx4_i_i_i >> 2];
    HEAPF32[$4 + ($i_027_i * 608 | 0) + 404 >> 2] = 0.0;
    HEAP8[$4 + ($i_027_i * 608 | 0) + 1 >> 0] = (HEAP32[$ref_i >> 2] | 0) != 0 | 0;
    HEAP8[$4 + ($i_027_i * 608 | 0) + 576 >> 0] = 0;
    HEAP8[$active_i >> 0] = 1;
    $retval_0_i = $i_027_i;
    $25 = HEAP32[4920] | 0;
   }
  } else {
   $retval_0_i = -1;
   $25 = $0;
  }
 } while (0);
 HEAP16[$ap_i_sroa_13 >> 1] = 0;
 if (($retval_0_i | 0) < 0) {
  $$etemp$6$0 = 2;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 2;
  $$etemp$7$1 = 0;
  STACKTOP = sp;
  return $retval_0_i | 0;
 }
 if ((HEAP32[$25 >> 2] | 0) < ($retval_0_i | 0)) {
  $$etemp$6$0 = 2;
  $$etemp$6$1 = 0;
  $$etemp$7$0 = 2;
  $$etemp$7$1 = 0;
  STACKTOP = sp;
  return $retval_0_i | 0;
 }
 $28 = HEAP32[$25 + 4 >> 2] | 0;
 $params3_i = $28 + ($retval_0_i * 608 | 0) + 468 | 0;
 HEAPF32[$params3_i >> 2] = $radius;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 472 >> 2] = $height;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 476 >> 2] = $maxAcceleration;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 480 >> 2] = $maxSpeed;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 484 >> 2] = $mul;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 488 >> 2] = $mul7;
 HEAPF32[$28 + ($retval_0_i * 608 | 0) + 492 >> 2] = $separationWeight;
 HEAP8[$28 + ($retval_0_i * 608 | 0) + 496 >> 0] = 0;
 HEAP8[$28 + ($retval_0_i * 608 | 0) + 497 >> 0] = 3;
 HEAP16[$params3_i + 30 >> 1] = HEAP16[$ap_i_sroa_13 >> 1] | 0;
 HEAP32[$28 + ($retval_0_i * 608 | 0) + 500 >> 2] = $retval_0_i;
 $$etemp$6$0 = 2;
 $$etemp$6$1 = 0;
 $$etemp$7$0 = 2;
 $$etemp$7$1 = 0;
 STACKTOP = sp;
 return $retval_0_i | 0;
}
function __Z20rcMarkConvexPolyAreaP9rcContextPKfiffhR20rcCompactHeightfield($ctx, $verts, $nverts, $hmin, $hmax, $areaId, $chf) {
 $ctx = $ctx | 0;
 $verts = $verts | 0;
 $nverts = $nverts | 0;
 $hmin = +$hmin;
 $hmax = +$hmax;
 $areaId = $areaId | 0;
 $chf = $chf | 0;
 var $m_timerEnabled_i = 0, $3 = 0.0, $4 = 0.0, $i_0104 = 0, $bmax_sroa_0_0_load88103 = 0.0, $5 = 0.0, $bmin_sroa_0_0_load89102 = 0.0, $6 = 0.0, $mul = 0, $7 = 0.0, $cond_i_i74 = 0.0, $8 = 0.0, $cond_i9_i82 = 0.0, $cond_i_i = 0.0, $cond_i9_i = 0.0, $inc = 0, $bmax_sroa_0_0_load88_lcssa = 0.0, $_lcssa100 = 0.0, $bmin_sroa_0_0_load89_lcssa = 0.0, $_lcssa = 0.0, $arrayidx10 = 0, $9 = 0.0, $cs = 0, $10 = 0.0, $conv = 0, $11 = 0.0, $12 = 0.0, $conv16 = 0, $arrayidx19 = 0, $13 = 0.0, $conv23 = 0, $conv30 = 0, $conv37 = 0, $conv44 = 0, $width = 0, $14 = 0, $15 = 0, $_conv = 0, $maxx_0 = 0, $_conv23 = 0, $maxz_0 = 0, $cmp7795 = 0, $cells = 0, $areas = 0, $spans = 0, $cmp15_i = 0, $sub_i = 0, $z_098 = 0, $add114 = 0.0, $x_096 = 0, $add = 0, $bf_load = 0, $bf_clear = 0, $bf_lshr = 0, $add86 = 0, $add105 = 0.0, $i82_093 = 0, $arrayidx91 = 0, $conv96 = 0, $24 = 0.0, $add108 = 0.0, $add117 = 0.0, $i_018_i = 0, $j_017_i = 0, $c_016_i = 0, $mul_i = 0, $mul1_i = 0, $26 = 0.0, $27 = 0.0, $29 = 0.0, $c_1_i = 0, $inc_i = 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 16);
 }
 $3 = +HEAPF32[$verts >> 2];
 $4 = +HEAPF32[$verts + 8 >> 2];
 if (($nverts | 0) > 1) {
  $6 = $4;
  $bmin_sroa_0_0_load89102 = $3;
  $5 = $4;
  $bmax_sroa_0_0_load88103 = $3;
  $i_0104 = 1;
  while (1) {
   $mul = $i_0104 * 3 | 0;
   $7 = +HEAPF32[$verts + ($mul << 2) >> 2];
   $cond_i_i74 = $bmin_sroa_0_0_load89102 < $7 ? $bmin_sroa_0_0_load89102 : $7;
   $8 = +HEAPF32[$verts + ($mul + 2 << 2) >> 2];
   $cond_i9_i82 = $6 < $8 ? $6 : $8;
   $cond_i_i = $bmax_sroa_0_0_load88103 > $7 ? $bmax_sroa_0_0_load88103 : $7;
   $cond_i9_i = $5 > $8 ? $5 : $8;
   $inc = $i_0104 + 1 | 0;
   if (($inc | 0) < ($nverts | 0)) {
    $6 = $cond_i9_i82;
    $bmin_sroa_0_0_load89102 = $cond_i_i74;
    $5 = $cond_i9_i;
    $bmax_sroa_0_0_load88103 = $cond_i_i;
    $i_0104 = $inc;
   } else {
    $_lcssa = $cond_i9_i82;
    $bmin_sroa_0_0_load89_lcssa = $cond_i_i74;
    $_lcssa100 = $cond_i9_i;
    $bmax_sroa_0_0_load88_lcssa = $cond_i_i;
    break;
   }
  }
 } else {
  $_lcssa = $4;
  $bmin_sroa_0_0_load89_lcssa = $3;
  $_lcssa100 = $4;
  $bmax_sroa_0_0_load88_lcssa = $3;
 }
 $arrayidx10 = $chf + 28 | 0;
 $9 = +HEAPF32[$arrayidx10 >> 2];
 $cs = $chf + 52 | 0;
 $10 = +HEAPF32[$cs >> 2];
 $conv = ~~(($bmin_sroa_0_0_load89_lcssa - $9) / $10);
 $11 = +HEAPF32[$chf + 32 >> 2];
 $12 = +HEAPF32[$chf + 56 >> 2];
 $conv16 = ~~(($hmin - $11) / $12);
 $arrayidx19 = $chf + 36 | 0;
 $13 = +HEAPF32[$arrayidx19 >> 2];
 $conv23 = ~~(($_lcssa - $13) / $10);
 $conv30 = ~~(($bmax_sroa_0_0_load88_lcssa - $9) / $10);
 $conv37 = ~~(($hmax - $11) / $12);
 $conv44 = ~~(($_lcssa100 - $13) / $10);
 if (($conv30 | 0) < 0) {
  return;
 }
 $width = $chf | 0;
 $14 = HEAP32[$width >> 2] | 0;
 if (($conv | 0) >= ($14 | 0) | ($conv44 | 0) < 0) {
  return;
 }
 $15 = HEAP32[$chf + 4 >> 2] | 0;
 if (($conv23 | 0) >= ($15 | 0)) {
  return;
 }
 $_conv = ($conv | 0) < 0 ? 0 : $conv;
 $maxx_0 = ($conv30 | 0) < ($14 | 0) ? $conv30 : $14 - 1 | 0;
 $_conv23 = ($conv23 | 0) < 0 ? 0 : $conv23;
 $maxz_0 = ($conv44 | 0) < ($15 | 0) ? $conv44 : $15 - 1 | 0;
 if (($_conv23 | 0) <= ($maxz_0 | 0)) {
  $cmp7795 = ($_conv | 0) > ($maxx_0 | 0);
  $cells = $chf + 60 | 0;
  $areas = $chf + 72 | 0;
  $spans = $chf + 64 | 0;
  $cmp15_i = ($nverts | 0) > 0;
  $sub_i = $nverts - 1 | 0;
  $z_098 = $_conv23;
  while (1) {
   if (!$cmp7795) {
    $add114 = +($z_098 | 0) + .5;
    $x_096 = $_conv;
    while (1) {
     $add = (Math_imul(HEAP32[$width >> 2] | 0, $z_098) | 0) + $x_096 | 0;
     $bf_load = HEAP32[(HEAP32[$cells >> 2] | 0) + ($add << 2) >> 2] | 0;
     $bf_clear = $bf_load & 16777215;
     $bf_lshr = $bf_load >>> 24;
     $add86 = $bf_clear + $bf_lshr | 0;
     if (($bf_lshr | 0) != 0) {
      $add105 = +($x_096 | 0) + .5;
      $i82_093 = $bf_clear;
      do {
       $arrayidx91 = (HEAP32[$areas >> 2] | 0) + $i82_093 | 0;
       if ((HEAP8[$arrayidx91 >> 0] | 0) != 0) {
        $conv96 = HEAPU16[(HEAP32[$spans >> 2] | 0) + ($i82_093 << 3) >> 1] | 0;
        if (!(($conv96 | 0) < ($conv16 | 0) | ($conv96 | 0) > ($conv37 | 0))) {
         $24 = +HEAPF32[$cs >> 2];
         $add108 = +HEAPF32[$arrayidx10 >> 2] + $add105 * $24;
         $add117 = +HEAPF32[$arrayidx19 >> 2] + $add114 * $24;
         if ($cmp15_i) {
          $c_016_i = 0;
          $j_017_i = $sub_i;
          $i_018_i = 0;
          while (1) {
           $mul_i = $i_018_i * 3 | 0;
           $mul1_i = $j_017_i * 3 | 0;
           $26 = +HEAPF32[$verts + ($mul_i + 2 << 2) >> 2];
           $27 = +HEAPF32[$verts + ($mul1_i + 2 << 2) >> 2];
           if ($26 > $add117 ^ $27 > $add117) {
            $29 = +HEAPF32[$verts + ($mul_i << 2) >> 2];
            if ($add108 < $29 + ($add117 - $26) * (+HEAPF32[$verts + ($mul1_i << 2) >> 2] - $29) / ($27 - $26)) {
             $c_1_i = ($c_016_i | 0) == 0 | 0;
            } else {
             $c_1_i = $c_016_i;
            }
           } else {
            $c_1_i = $c_016_i;
           }
           $inc_i = $i_018_i + 1 | 0;
           if (($inc_i | 0) < ($nverts | 0)) {
            $c_016_i = $c_1_i;
            $j_017_i = $i_018_i;
            $i_018_i = $inc_i;
           } else {
            break;
           }
          }
          if (($c_1_i | 0) != 0) {
           HEAP8[$arrayidx91 >> 0] = $areaId;
          }
         }
        }
       }
       $i82_093 = $i82_093 + 1 | 0;
      } while (($i82_093 | 0) < ($add86 | 0));
     }
     if (($x_096 | 0) < ($maxx_0 | 0)) {
      $x_096 = $x_096 + 1 | 0;
     } else {
      break;
     }
    }
   }
   if (($z_098 | 0) < ($maxz_0 | 0)) {
    $z_098 = $z_098 + 1 | 0;
   } else {
    break;
   }
  }
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 16);
 return;
}
function __ZNK14dtNavMeshQuery13getPolyHeightEjPKfPf($this_0_0_val, $ref, $pos, $height) {
 $this_0_0_val = $this_0_0_val | 0;
 $ref = $ref | 0;
 $pos = $pos | 0;
 $height = $height | 0;
 var $h = 0, $0 = 0, $1 = 0, $and10_i_i = 0, $and11_i_i = 0, $4 = 0, $6 = 0, $8 = 0, $mul = 0, $11 = 0, $mul11 = 0, $sub_i22 = 0.0, $arrayidx2_i23 = 0, $arrayidx3_i24 = 0, $sub4_i25 = 0.0, $arrayidx6_i27 = 0, $sub7_i28 = 0.0, $call_i2 = 0.0, $sub_i = 0.0, $arrayidx2_i = 0, $sub4_i = 0.0, $sub7_i = 0.0, $call_i3 = 0.0, $25 = 0.0, $sub_ptr_div = 0, $27 = 0, $triCount = 0, $triBase = 0, $vertBase = 0, $detailTris = 0, $vertCount = 0, $verts42 = 0, $detailVerts = 0, $pos_idx = 0, $j_042 = 0, $mul27 = 0, $31 = 0, $32 = 0, $conv34 = 0, $33 = 0, $conv33 = 0, $38 = 0, $39 = 0, $conv33_1 = 0, $retval_0 = 0, $45 = 0, $46 = 0, $conv33_2 = 0, $51 = 0, $inc66 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $h = sp | 0;
 if (($ref | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $0 = HEAP32[$this_0_0_val + 76 >> 2] | 0;
 $1 = HEAP32[$this_0_0_val + 80 >> 2] | 0;
 $and10_i_i = $ref >>> ($1 >>> 0) & (1 << $0) - 1;
 $and11_i_i = (1 << $1) - 1 & $ref;
 if (!($and10_i_i >>> 0 < (HEAP32[$this_0_0_val + 48 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $4 = HEAP32[$this_0_0_val + 68 >> 2] | 0;
 if ((HEAP32[$4 + ($and10_i_i * 60 | 0) >> 2] | 0) != ((1 << HEAP32[$this_0_0_val + 72 >> 2]) - 1 & $ref >>> (($1 + $0 | 0) >>> 0) | 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $6 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
 if (($6 | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if (!($and11_i_i >>> 0 < (HEAP32[$6 + 24 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $8 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 12 >> 2] | 0;
 if ((HEAP8[$8 + ($and11_i_i << 5) + 31 >> 0] & -64) << 24 >> 24 == 64) {
  $mul = (HEAPU16[$8 + ($and11_i_i << 5) + 4 >> 1] | 0) * 3 | 0;
  $11 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 16 >> 2] | 0;
  $mul11 = (HEAPU16[$8 + ($and11_i_i << 5) + 6 >> 1] | 0) * 3 | 0;
  $sub_i22 = +HEAPF32[$11 + ($mul << 2) >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i23 = $11 + ($mul + 1 << 2) | 0;
  $arrayidx3_i24 = $pos + 4 | 0;
  $sub4_i25 = +HEAPF32[$arrayidx2_i23 >> 2] - +HEAPF32[$arrayidx3_i24 >> 2];
  $arrayidx6_i27 = $pos + 8 | 0;
  $sub7_i28 = +HEAPF32[$11 + ($mul + 2 << 2) >> 2] - +HEAPF32[$arrayidx6_i27 >> 2];
  $call_i2 = +Math_sqrt($sub_i22 * $sub_i22 + $sub4_i25 * $sub4_i25 + $sub7_i28 * $sub7_i28);
  $sub_i = +HEAPF32[$11 + ($mul11 << 2) >> 2] - +HEAPF32[$pos >> 2];
  $arrayidx2_i = $11 + ($mul11 + 1 << 2) | 0;
  $sub4_i = +HEAPF32[$arrayidx2_i >> 2] - +HEAPF32[$arrayidx3_i24 >> 2];
  $sub7_i = +HEAPF32[$11 + ($mul11 + 2 << 2) >> 2] - +HEAPF32[$arrayidx6_i27 >> 2];
  $call_i3 = +Math_sqrt($sub_i * $sub_i + $sub4_i * $sub4_i + $sub7_i * $sub7_i);
  if (($height | 0) == 0) {
   $retval_0 = 1073741824;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  $25 = +HEAPF32[$arrayidx2_i23 >> 2];
  HEAPF32[$height >> 2] = $25 + $call_i2 / ($call_i2 + $call_i3) * (+HEAPF32[$arrayidx2_i >> 2] - $25);
  $retval_0 = 1073741824;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $sub_ptr_div = $and11_i_i << 5 >> 5;
 $27 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 24 >> 2] | 0;
 $triCount = $27 + ($sub_ptr_div * 12 | 0) + 9 | 0;
 if ((HEAP8[$triCount >> 0] | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $triBase = $27 + ($sub_ptr_div * 12 | 0) + 4 | 0;
 $vertBase = $27 + ($sub_ptr_div * 12 | 0) | 0;
 $detailTris = $4 + ($and10_i_i * 60 | 0) + 32 | 0;
 $vertCount = $8 + ($and11_i_i << 5) + 30 | 0;
 $verts42 = $4 + ($and10_i_i * 60 | 0) + 16 | 0;
 $detailVerts = $4 + ($and10_i_i * 60 | 0) + 28 | 0;
 $pos_idx = $pos + 8 | 0;
 $j_042 = 0;
 while (1) {
  $mul27 = (HEAP32[$triBase >> 2] | 0) + $j_042 << 2;
  $31 = HEAP32[$detailTris >> 2] | 0;
  $32 = HEAP8[$vertCount >> 0] | 0;
  $conv34 = $32 & 255;
  $33 = HEAP8[$31 + $mul27 >> 0] | 0;
  $conv33 = $33 & 255;
  if (($33 & 255) >>> 0 < ($32 & 255) >>> 0) {
   $38 = (HEAP32[$verts42 >> 2] | 0) + (((HEAPU16[$8 + ($and11_i_i << 5) + 4 + ($conv33 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $38 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv33 - $conv34 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $39 = HEAP8[$31 + ($mul27 | 1) >> 0] | 0;
  $conv33_1 = $39 & 255;
  if (($39 & 255) >>> 0 < ($32 & 255) >>> 0) {
   $45 = (HEAP32[$verts42 >> 2] | 0) + (((HEAPU16[$8 + ($and11_i_i << 5) + 4 + ($conv33_1 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $45 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv33_1 - $conv34 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $46 = HEAP8[$31 + ($mul27 | 2) >> 0] | 0;
  $conv33_2 = $46 & 255;
  if (($46 & 255) >>> 0 < ($32 & 255) >>> 0) {
   $51 = (HEAP32[$verts42 >> 2] | 0) + (((HEAPU16[$8 + ($and11_i_i << 5) + 4 + ($conv33_2 << 1) >> 1] | 0) * 3 | 0) << 2) | 0;
  } else {
   $51 = (HEAP32[$detailVerts >> 2] | 0) + ((($conv33_2 - $conv34 + (HEAP32[$vertBase >> 2] | 0) | 0) * 3 | 0) << 2) | 0;
  }
  $inc66 = $j_042 + 1 | 0;
  if (__Z28dtClosestHeightPointTrianglePKfS0_S0_S0_Rf(+HEAPF32[$pos >> 2], +HEAPF32[$pos_idx >> 2], +HEAPF32[$38 >> 2], +HEAPF32[$38 + 4 >> 2], +HEAPF32[$38 + 8 >> 2], $45, $51, $h) | 0) {
   break;
  }
  if (($inc66 | 0) < (HEAPU8[$triCount >> 0] | 0)) {
   $j_042 = $inc66;
  } else {
   $retval_0 = -2147483640;
   label = 18;
   break;
  }
 }
 if ((label | 0) == 18) {
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if (($height | 0) == 0) {
  $retval_0 = 1073741824;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 HEAPF32[$height >> 2] = +HEAPF32[$h >> 2];
 $retval_0 = 1073741824;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z18rcFilterLedgeSpansP9rcContextiiR13rcHeightfield($ctx, $walkableHeight, $walkableClimb, $solid) {
 $ctx = $ctx | 0;
 $walkableHeight = $walkableHeight | 0;
 $walkableClimb = $walkableClimb | 0;
 $solid = $solid | 0;
 var $m_timerEnabled_i = 0, $3 = 0, $4 = 0, $cmp296 = 0, $spans = 0, $sub39 = 0, $y_0100 = 0, $mul = 0, $x_097 = 0, $s_093 = 0, $s_095 = 0, $6 = 0, $bf_load = 0, $bf_clear = 0, $7 = 0, $cond = 0, $cond_i83 = 0, $sub52 = 0, $sub32 = 0, $dir_092 = 0, $asmax_091 = 0, $asmin_090 = 0, $minh_089 = 0, $add22 = 0, $add24 = 0, $add36 = 0, $14 = 0, $cond46 = 0, $ns_0106 = 0, $minh_2_ph_ph = 0, $asmin_1_ph_ph = 0, $asmax_1_ph_ph = 0, $ns_0105 = 0, $minh_2_ph = 0, $ns_0 = 0, $bf_clear64 = 0, $cond73 = 0, $sub79 = 0, $minh_4 = 0, $asmin_4 = 0, $asmax_3 = 0, $bf_clear100 = 0, $bf_load105 = 0, $s_0 = 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 7);
 }
 $3 = HEAP32[$solid >> 2] | 0;
 $4 = HEAP32[$solid + 4 >> 2] | 0;
 if (($4 | 0) > 0) {
  $cmp296 = ($3 | 0) > 0;
  $spans = $solid + 40 | 0;
  $sub39 = -$walkableClimb | 0;
  $y_0100 = 0;
  do {
   if ($cmp296) {
    $mul = Math_imul($y_0100, $3) | 0;
    $x_097 = 0;
    do {
     $s_093 = HEAP32[(HEAP32[$spans >> 2] | 0) + ($x_097 + $mul << 2) >> 2] | 0;
     if (($s_093 | 0) != 0) {
      $s_095 = $s_093;
      while (1) {
       $6 = $s_095;
       $bf_load = HEAP32[$6 >> 2] | 0;
       if ($bf_load >>> 0 < 67108864 >>> 0) {
        $s_0 = HEAP32[$s_095 + 4 >> 2] | 0;
       } else {
        $bf_clear = $bf_load >>> 13 & 8191;
        $7 = HEAP32[$s_095 + 4 >> 2] | 0;
        if (($7 | 0) == 0) {
         $cond = 65535;
        } else {
         $cond = HEAP32[$7 >> 2] & 8191;
        }
        $cond_i83 = ($bf_clear | 0) > ($sub39 | 0) ? $bf_clear : $sub39;
        $sub52 = $sub39 - $bf_clear | 0;
        $sub32 = -($bf_clear + $walkableClimb | 0) | 0;
        $minh_089 = 65535;
        $asmin_090 = $bf_clear;
        $asmax_091 = $bf_clear;
        $dir_092 = 0;
        while (1) {
         $add22 = (HEAP32[11520 + ($dir_092 << 2) >> 2] | 0) + $x_097 | 0;
         $add24 = (HEAP32[11504 + ($dir_092 << 2) >> 2] | 0) + $y_0100 | 0;
         L23 : do {
          if (($add24 | $add22 | 0) > -1 & ($add22 | 0) < ($3 | 0) & ($add24 | 0) < ($4 | 0)) {
           $add36 = (Math_imul($add24, $3) | 0) + $add22 | 0;
           $14 = HEAP32[(HEAP32[$spans >> 2] | 0) + ($add36 << 2) >> 2] | 0;
           if (($14 | 0) == 0) {
            $cond46 = 65535;
           } else {
            $cond46 = HEAP32[$14 >> 2] & 8191;
           }
           if ((($cond >>> 0 < $cond46 >>> 0 ? $cond : $cond46) - $cond_i83 | 0) > ($walkableHeight | 0)) {
            $asmax_1_ph_ph = $asmax_091;
            $asmin_1_ph_ph = $asmin_090;
            $minh_2_ph_ph = ($minh_089 | 0) < ($sub52 | 0) ? $minh_089 : $sub52;
            $ns_0106 = $14;
           } else {
            $asmax_1_ph_ph = $asmax_091;
            $asmin_1_ph_ph = $asmin_090;
            $minh_2_ph_ph = $minh_089;
            $ns_0106 = $14;
           }
           while (1) {
            $minh_2_ph = $minh_2_ph_ph;
            $ns_0105 = $ns_0106;
            while (1) {
             $ns_0 = $ns_0105;
             do {
              if (($ns_0 | 0) == 0) {
               $asmax_3 = $asmax_1_ph_ph;
               $asmin_4 = $asmin_1_ph_ph;
               $minh_4 = $minh_2_ph;
               break L23;
              }
              $bf_clear64 = (HEAP32[$ns_0 >> 2] | 0) >>> 13 & 8191;
              $ns_0 = HEAP32[$ns_0 + 4 >> 2] | 0;
              if (($ns_0 | 0) == 0) {
               $cond73 = 65535;
              } else {
               $cond73 = HEAP32[$ns_0 >> 2] & 8191;
              }
             } while ((($cond >>> 0 < $cond73 >>> 0 ? $cond : $cond73) - ($bf_clear64 >>> 0 < $bf_clear >>> 0 ? $bf_clear : $bf_clear64) | 0) <= ($walkableHeight | 0));
             $sub79 = $bf_clear64 - $bf_clear | 0;
             $minh_2_ph = ($minh_2_ph | 0) < ($sub79 | 0) ? $minh_2_ph : $sub79;
             if (((($sub79 | 0) < 0 ? -$sub79 | 0 : $sub79) | 0) <= ($walkableClimb | 0)) {
              break;
             } else {
              $ns_0105 = $ns_0;
             }
            }
            $asmax_1_ph_ph = ($bf_clear64 | 0) > ($asmax_1_ph_ph | 0) ? $bf_clear64 : $asmax_1_ph_ph;
            $asmin_1_ph_ph = ($bf_clear64 | 0) < ($asmin_1_ph_ph | 0) ? $bf_clear64 : $asmin_1_ph_ph;
            $minh_2_ph_ph = $minh_2_ph;
            $ns_0106 = $ns_0;
           }
          } else {
           $asmax_3 = $asmax_091;
           $asmin_4 = $asmin_090;
           $minh_4 = ($minh_089 | 0) < ($sub32 | 0) ? $minh_089 : $sub32;
          }
         } while (0);
         $dir_092 = $dir_092 + 1 | 0;
         if (($dir_092 | 0) >= 4) {
          break;
         } else {
          $minh_089 = $minh_4;
          $asmin_090 = $asmin_4;
          $asmax_091 = $asmax_3;
         }
        }
        if (($minh_4 | 0) < ($sub39 | 0)) {
         $bf_clear100 = $bf_load & 67108863;
         HEAP32[$6 >> 2] = $bf_clear100;
         $bf_load105 = $bf_clear100;
        } else {
         $bf_load105 = $bf_load;
        }
        if (($asmax_3 - $asmin_4 | 0) > ($walkableClimb | 0)) {
         HEAP32[$6 >> 2] = $bf_load105 & 67108863;
         $s_0 = $7;
        } else {
         $s_0 = $7;
        }
       }
       if (($s_0 | 0) == 0) {
        break;
       } else {
        $s_095 = $s_0;
       }
      }
     }
     $x_097 = $x_097 + 1 | 0;
    } while (($x_097 | 0) < ($3 | 0));
   }
   $y_0100 = $y_0100 + 1 | 0;
  } while (($y_0100 | 0) < ($4 | 0));
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 7);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $sub_ptr_lhs_cast30_i = 0, $_frm_nxt_0 = 0, $_to_nxt_0 = 0, $1 = 0, $conv15_i = 0, $conv37_i = 0, $3 = 0, $4 = 0, $conv80_i = 0, $5 = 0, $6 = 0, $7 = 0, $conv137_i = 0, $conv140_i = 0, $or159_i = 0, $_frm_nxt_1 = 0, $incdec_ptr170_i = 0, $_frm_nxt_2 = 0, $_to_nxt_1 = 0, $_frm_nxt_3 = 0, $_to_nxt_2 = 0, $retval_0_i = 0, label = 0;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast30_i = $frm_end;
   $_to_nxt_0 = $to;
   $_frm_nxt_0 = $frm;
   while (1) {
    if (!($_to_nxt_0 >>> 0 < $to_end >>> 0)) {
     $_to_nxt_1 = $_to_nxt_0;
     $_frm_nxt_2 = $_frm_nxt_0;
     label = 30;
     break L1;
    }
    $1 = HEAP8[$_frm_nxt_0 >> 0] | 0;
    $conv15_i = $1 & 255;
    do {
     if ($1 << 24 >> 24 > -1) {
      HEAP32[$_to_nxt_0 >> 2] = $conv15_i;
      $_frm_nxt_1 = $_frm_nxt_0 + 1 | 0;
     } else {
      if (($1 & 255) >>> 0 < 194 >>> 0) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      if (($1 & 255) >>> 0 < 224 >>> 0) {
       if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 2) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       $conv37_i = HEAPU8[$_frm_nxt_0 + 1 >> 0] | 0;
       if (($conv37_i & 192 | 0) != 128) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       HEAP32[$_to_nxt_0 >> 2] = $conv37_i & 63 | $conv15_i << 6 & 1984;
       $_frm_nxt_1 = $_frm_nxt_0 + 2 | 0;
       break;
      }
      if (($1 & 255) >>> 0 < 240 >>> 0) {
       if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 3) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       $3 = HEAP8[$_frm_nxt_0 + 1 >> 0] | 0;
       $4 = HEAP8[$_frm_nxt_0 + 2 >> 0] | 0;
       if (($conv15_i | 0) == 224) {
        if (!(($3 & -32) << 24 >> 24 == -96)) {
         $retval_0_i = 2;
         $_to_nxt_2 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       } else if (($conv15_i | 0) == 237) {
        if (!(($3 & -32) << 24 >> 24 == -128)) {
         $retval_0_i = 2;
         $_to_nxt_2 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       } else {
        if (!(($3 & -64) << 24 >> 24 == -128)) {
         $retval_0_i = 2;
         $_to_nxt_2 = $_to_nxt_0;
         $_frm_nxt_3 = $_frm_nxt_0;
         break L1;
        }
       }
       $conv80_i = $4 & 255;
       if (($conv80_i & 192 | 0) != 128) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
       HEAP32[$_to_nxt_0 >> 2] = ($3 & 255) << 6 & 4032 | $conv15_i << 12 & 61440 | $conv80_i & 63;
       $_frm_nxt_1 = $_frm_nxt_0 + 3 | 0;
       break;
      }
      if (!(($1 & 255) >>> 0 < 245 >>> 0)) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      if (($sub_ptr_lhs_cast30_i - $_frm_nxt_0 | 0) < 4) {
       $retval_0_i = 1;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $5 = HEAP8[$_frm_nxt_0 + 1 >> 0] | 0;
      $6 = HEAP8[$_frm_nxt_0 + 2 >> 0] | 0;
      $7 = HEAP8[$_frm_nxt_0 + 3 >> 0] | 0;
      if (($conv15_i | 0) == 244) {
       if (!(($5 & -16) << 24 >> 24 == -128)) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      } else if (($conv15_i | 0) == 240) {
       if (!(($5 + 112 & 255) >>> 0 < 48 >>> 0)) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      } else {
       if (!(($5 & -64) << 24 >> 24 == -128)) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_3 = $_frm_nxt_0;
        break L1;
       }
      }
      $conv137_i = $6 & 255;
      if (($conv137_i & 192 | 0) != 128) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $conv140_i = $7 & 255;
      if (($conv140_i & 192 | 0) != 128) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      $or159_i = ($5 & 255) << 12 & 258048 | $conv15_i << 18 & 1835008 | $conv137_i << 6 & 4032 | $conv140_i & 63;
      if ($or159_i >>> 0 > 1114111 >>> 0) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_3 = $_frm_nxt_0;
       break L1;
      }
      HEAP32[$_to_nxt_0 >> 2] = $or159_i;
      $_frm_nxt_1 = $_frm_nxt_0 + 4 | 0;
     }
    } while (0);
    $incdec_ptr170_i = $_to_nxt_0 + 4 | 0;
    if ($_frm_nxt_1 >>> 0 < $frm_end >>> 0) {
     $_to_nxt_0 = $incdec_ptr170_i;
     $_frm_nxt_0 = $_frm_nxt_1;
    } else {
     $_to_nxt_1 = $incdec_ptr170_i;
     $_frm_nxt_2 = $_frm_nxt_1;
     label = 30;
     break;
    }
   }
  } else {
   $_to_nxt_1 = $to;
   $_frm_nxt_2 = $frm;
   label = 30;
  }
 } while (0);
 if ((label | 0) == 30) {
  $retval_0_i = $_frm_nxt_2 >>> 0 < $frm_end >>> 0 | 0;
  $_to_nxt_2 = $_to_nxt_1;
  $_frm_nxt_3 = $_frm_nxt_2;
 }
 HEAP32[$frm_nxt >> 2] = $frm + ($_frm_nxt_3 - $frm);
 HEAP32[$to_nxt >> 2] = $to + ($_to_nxt_2 - $to >> 2 << 2);
 return $retval_0_i | 0;
}
function __Z19duDebugDrawContoursP11duDebugDrawRK12rcContourSetf($dd, $cset, $alpha) {
 $dd = $dd | 0;
 $cset = $cset | 0;
 $alpha = +$alpha;
 var $arraydecay = 0, $0 = 0.0, $1 = 0.0, $conv = 0, $2 = 0, $nconts = 0, $4 = 0, $conts = 0, $conv7 = 0, $mul26_i = 0, $arrayidx27 = 0, $arrayidx35 = 0, $5 = 0, $shl3_i_i6 = 0, $6 = 0, $i_085 = 0, $7 = 0, $nverts = 0, $8 = 0, $conv6 = 0, $10 = 0, $mul13_i = 0, $or2_i_i8 = 0, $or4_i_i9 = 0, $or4_i_i = 0, $verts = 0, $add29 = 0, $j_083 = 0, $k_082 = 0, $mul16 = 0, $14 = 0, $mul18 = 0, $cond = 0, $inc = 0, $31 = 0, $32 = 0, $35 = 0, $conts75 = 0, $arrayidx106 = 0, $arrayidx116 = 0, $36 = 0, $shl3_i75 = 0, $or4_i76 = 0, $mul97 = 0.0, $37 = 0, $i69_080 = 0, $38 = 0, $conv79 = 0, $40 = 0, $or4_i_i28 = 0, $or_i = 0, $nverts85 = 0, $verts89 = 0, $add108 = 0, $j83_078 = 0, $mul88 = 0, $45 = 0, $tobool93 = 0, $55 = 0;
 if (($dd | 0) == 0) {
  return;
 }
 $arraydecay = $cset + 8 | 0;
 $0 = +HEAPF32[$cset + 32 >> 2];
 $1 = +HEAPF32[$cset + 36 >> 2];
 $conv = ~~($alpha * 255.0);
 $2 = $dd;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 1, 2.5);
 $nconts = $cset + 4 | 0;
 $4 = HEAP32[$nconts >> 2] | 0;
 if (($4 | 0) > 0) {
  $conts = $cset | 0;
  $conv7 = $conv & 255;
  $mul26_i = $conv7 << 7;
  $arrayidx27 = $cset + 12 | 0;
  $arrayidx35 = $cset + 16 | 0;
  $5 = $dd;
  $shl3_i_i6 = $conv7 << 24;
  $i_085 = 0;
  $6 = $4;
  while (1) {
   $7 = HEAP32[$conts >> 2] | 0;
   $nverts = $7 + ($i_085 * 20 | 0) + 4 | 0;
   $8 = HEAP32[$nverts >> 2] | 0;
   if (($8 | 0) == 0) {
    $31 = $6;
   } else {
    $conv6 = HEAPU16[$7 + ($i_085 * 20 | 0) + 16 >> 1] | 0;
    $10 = $conv6 >>> 2;
    $mul13_i = (($conv6 >>> 1 & 1 | $10 & 2) * 63 | 0) + 63 | 0;
    $or2_i_i8 = $mul13_i | $shl3_i_i6 | (($10 & 1 | $conv6 >>> 3 & 2) * 16128 | 0) + 16128;
    $or4_i_i9 = $or2_i_i8 | (Math_imul($conv6 >>> 4 & 2 | $conv6 & 1, 4128768) | 0) + 4128768;
    $or4_i_i = ((((($or2_i_i8 >>> 8 & 255) * 127 | 0) + 32640 | 0) >>> 0) / 255 | 0) << 8 | ((((($mul13_i & 255) * 127 | 0) + 32640 | 0) >>> 0) / 255 | 0) | ((((($or4_i_i9 >>> 16 & 255) * 127 | 0) + 32640 | 0) >>> 0) / 255 | 0) << 16 | ((((($or4_i_i9 >>> 24) * 127 | 0) + $mul26_i | 0) >>> 0) / 255 | 0) << 24;
    if (($8 | 0) > 0) {
     $verts = $7 + ($i_085 * 20 | 0) | 0;
     $add29 = ($i_085 & 1) + 1 | 0;
     $k_082 = $8 - 1 | 0;
     $j_083 = 0;
     while (1) {
      $mul16 = $k_082 << 2;
      $14 = HEAP32[$verts >> 2] | 0;
      $mul18 = $j_083 << 2;
      $cond = (HEAP32[$14 + (($mul16 | 3) << 2) >> 2] & 131072 | 0) != 0 ? $or4_i_i : $or4_i_i9;
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$14 + ($mul16 << 2) >> 2] | 0), +HEAPF32[$arrayidx27 >> 2] + $1 * +($add29 + (HEAP32[$14 + (($mul16 | 1) << 2) >> 2] | 0) | 0), +HEAPF32[$arrayidx35 >> 2] + $0 * +(HEAP32[$14 + (($mul16 | 2) << 2) >> 2] | 0), $cond);
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$14 + ($mul18 << 2) >> 2] | 0), +HEAPF32[$arrayidx27 >> 2] + $1 * +($add29 + (HEAP32[$14 + (($mul18 | 1) << 2) >> 2] | 0) | 0), +HEAPF32[$arrayidx35 >> 2] + $0 * +(HEAP32[$14 + (($mul18 | 2) << 2) >> 2] | 0), $cond);
      $inc = $j_083 + 1 | 0;
      if (($inc | 0) < (HEAP32[$nverts >> 2] | 0)) {
       $k_082 = $j_083;
       $j_083 = $inc;
      } else {
       break;
      }
     }
     $31 = HEAP32[$nconts >> 2] | 0;
    } else {
     $31 = $6;
    }
   }
   $i_085 = $i_085 + 1 | 0;
   if (($i_085 | 0) >= ($31 | 0)) {
    break;
   } else {
    $6 = $31;
   }
  }
 }
 $32 = $dd;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 511]($dd);
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 0, 3.0);
 $35 = HEAP32[$nconts >> 2] | 0;
 if (($35 | 0) > 0) {
  $conts75 = $cset | 0;
  $arrayidx106 = $cset + 12 | 0;
  $arrayidx116 = $cset + 16 | 0;
  $36 = $dd;
  $shl3_i75 = ($conv & 255) << 24;
  $or4_i76 = $shl3_i75 | 16777215;
  $mul97 = $1 * 2.0;
  $i69_080 = 0;
  $37 = $35;
  while (1) {
   $38 = HEAP32[$conts75 >> 2] | 0;
   $conv79 = HEAPU16[$38 + ($i69_080 * 20 | 0) + 16 >> 1] | 0;
   $40 = $conv79 >>> 2;
   $or4_i_i28 = (($conv79 >>> 1 & 1 | $40 & 2) * 63 | 0) + 63 | $shl3_i75 | (($40 & 1 | $conv79 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv79 >>> 4 & 2 | $conv79 & 1, 4128768) | 0) + 4128768;
   $or_i = $or4_i_i28 >>> 1 & 8355711 | $or4_i_i28 & -16777216;
   $nverts85 = $38 + ($i69_080 * 20 | 0) + 4 | 0;
   if ((HEAP32[$nverts85 >> 2] | 0) > 0) {
    $verts89 = $38 + ($i69_080 * 20 | 0) | 0;
    $add108 = ($i69_080 & 1) + 1 | 0;
    $j83_078 = 0;
    do {
     $mul88 = $j83_078 << 2;
     $45 = HEAP32[$verts89 >> 2] | 0;
     $tobool93 = (HEAP32[$45 + (($mul88 | 3) << 2) >> 2] & 65536 | 0) == 0;
     FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$36 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$45 + ($mul88 << 2) >> 2] | 0), ($tobool93 ? 0.0 : $mul97) + (+HEAPF32[$arrayidx106 >> 2] + $1 * +($add108 + (HEAP32[$45 + (($mul88 | 1) << 2) >> 2] | 0) | 0)), +HEAPF32[$arrayidx116 >> 2] + $0 * +(HEAP32[$45 + (($mul88 | 2) << 2) >> 2] | 0), $tobool93 ? $or_i : $or4_i76);
     $j83_078 = $j83_078 + 1 | 0;
    } while (($j83_078 | 0) < (HEAP32[$nverts85 >> 2] | 0));
    $55 = HEAP32[$nconts >> 2] | 0;
   } else {
    $55 = $37;
   }
   $i69_080 = $i69_080 + 1 | 0;
   if (($i69_080 | 0) >= ($55 | 0)) {
    break;
   } else {
    $37 = $55;
   }
  }
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 511]($dd);
 return;
}
function __Z18getNavMeshVerticesNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($callback) {
 $callback = $callback | 0;
 var $0 = 0, $1 = 0, $2 = 0.0, $3 = 0.0, $arraydecay = 0, $4 = 0, $conv6 = 0.0, $arrayidx7 = 0, $conv8 = 0.0, $arrayidx9 = 0, $conv10 = 0.0, $8 = 0, $9 = 0, $10 = 0, $mul = 0, $11 = 0, $i_033_us = 0, $j_029_us = 0, $14 = 0, $16 = 0, $mul35_us = 0, $18 = 0, $conv57_us = 0.0, $conv58_us = 0.0, $mul35_us_1 = 0, $26 = 0, $conv57_us_1 = 0.0, $conv58_us_1 = 0.0, $mul35_us_2 = 0, $34 = 0, $conv57_us_2 = 0.0, $conv58_us_2 = 0.0, $41 = 0, $mul15_us = 0, $43 = 0, $arrayidx16_us = 0, $sub_us = 0, $i_033 = 0, $cond_i_i_i = 0, $call70 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1536 | 0;
 $0 = HEAP32[4908] | 0;
 $1 = HEAP32[$0 + 32 >> 2] | 0;
 $2 = +HEAPF32[$0 + 60 >> 2];
 $3 = +HEAPF32[$0 + 64 >> 2];
 $arraydecay = $0 + 36 | 0;
 $4 = sp + 1024 | 0;
 $conv6 = +HEAPF32[$arraydecay >> 2];
 $arrayidx7 = $0 + 40 | 0;
 $conv8 = +HEAPF32[$arrayidx7 >> 2];
 $arrayidx9 = $0 + 44 | 0;
 $conv10 = +HEAPF32[$arrayidx9 >> 2];
 _sprintf($4 | 0, 7144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempVarArgs >> 2] = $1, HEAPF64[tempVarArgs + 8 >> 3] = $2, HEAPF64[tempVarArgs + 16 >> 3] = $3, HEAPF64[tempVarArgs + 24 >> 3] = $conv6, HEAPF64[tempVarArgs + 32 >> 3] = $conv8, HEAPF64[tempVarArgs + 40 >> 3] = $conv10, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $8 = sp | 0;
 _sprintf($8 | 0, 7600, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $4, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($8 | 0);
 _emscripten_run_script(7064);
 $9 = HEAP32[4908] | 0;
 $10 = HEAP32[$9 + 24 >> 2] | 0;
 L1 : do {
  if (($10 | 0) > 0) {
   $mul = $1 << 1;
   if (($1 | 0) > 2) {
    $i_033_us = 0;
    $11 = $9;
   } else {
    $i_033 = 0;
    while (1) {
     $i_033 = $i_033 + 1 | 0;
     if (($i_033 | 0) >= ($10 | 0)) {
      break L1;
     }
    }
   }
   while (1) {
    if ((HEAP8[(HEAP32[$11 + 16 >> 2] | 0) + $i_033_us >> 0] | 0) == 0) {
     $mul15_us = Math_imul($mul, $i_033_us) | 0;
     $43 = HEAP32[$11 + 4 >> 2] | 0;
     $arrayidx16_us = $43 + ($mul15_us << 1) | 0;
     $sub_us = $mul15_us - 1 | 0;
     $j_029_us = 2;
     do {
      $14 = HEAP16[$43 + ($j_029_us + $mul15_us << 1) >> 1] | 0;
      if ($14 << 16 >> 16 == -1) {
       break;
      }
      $16 = HEAP16[$43 + ($sub_us + $j_029_us << 1) >> 1] | 0;
      $mul35_us = (HEAPU16[$arrayidx16_us >> 1] | 0) * 3 | 0;
      $18 = HEAP32[HEAP32[4908] >> 2] | 0;
      $conv57_us = +HEAPF32[$arrayidx7 >> 2] + $3 * +((HEAPU16[$18 + ($mul35_us + 1 << 1) >> 1] | 0) + 1 | 0);
      $conv58_us = +HEAPF32[$arrayidx9 >> 2] + $2 * +(HEAPU16[$18 + ($mul35_us + 2 << 1) >> 1] | 0);
      _sprintf($4 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[$arraydecay >> 2] + $2 * +(HEAPU16[$18 + ($mul35_us << 1) >> 1] | 0), HEAPF64[tempVarArgs + 8 >> 3] = $conv57_us, HEAPF64[tempVarArgs + 16 >> 3] = $conv58_us, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _emscripten_run_script($4 | 0);
      $mul35_us_1 = ($16 & 65535) * 3 | 0;
      $26 = HEAP32[HEAP32[4908] >> 2] | 0;
      $conv57_us_1 = +HEAPF32[$arrayidx7 >> 2] + $3 * +((HEAPU16[$26 + ($mul35_us_1 + 1 << 1) >> 1] | 0) + 1 | 0);
      $conv58_us_1 = +HEAPF32[$arrayidx9 >> 2] + $2 * +(HEAPU16[$26 + ($mul35_us_1 + 2 << 1) >> 1] | 0);
      _sprintf($4 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[$arraydecay >> 2] + $2 * +(HEAPU16[$26 + ($mul35_us_1 << 1) >> 1] | 0), HEAPF64[tempVarArgs + 8 >> 3] = $conv57_us_1, HEAPF64[tempVarArgs + 16 >> 3] = $conv58_us_1, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _emscripten_run_script($4 | 0);
      $mul35_us_2 = ($14 & 65535) * 3 | 0;
      $34 = HEAP32[HEAP32[4908] >> 2] | 0;
      $conv57_us_2 = +HEAPF32[$arrayidx7 >> 2] + $3 * +((HEAPU16[$34 + ($mul35_us_2 + 1 << 1) >> 1] | 0) + 1 | 0);
      $conv58_us_2 = +HEAPF32[$arrayidx9 >> 2] + $2 * +(HEAPU16[$34 + ($mul35_us_2 + 2 << 1) >> 1] | 0);
      _sprintf($4 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[$arraydecay >> 2] + $2 * +(HEAPU16[$34 + ($mul35_us_2 << 1) >> 1] | 0), HEAPF64[tempVarArgs + 8 >> 3] = $conv57_us_2, HEAPF64[tempVarArgs + 16 >> 3] = $conv58_us_2, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _emscripten_run_script($4 | 0);
      $j_029_us = $j_029_us + 1 | 0;
     } while (($j_029_us | 0) < ($1 | 0));
     $41 = HEAP32[4908] | 0;
    } else {
     $41 = $11;
    }
    $i_033_us = $i_033_us + 1 | 0;
    if (($i_033_us | 0) >= (HEAP32[$41 + 24 >> 2] | 0)) {
     break;
    } else {
     $11 = $41;
    }
   }
  }
 } while (0);
 if ((HEAP8[$callback >> 0] & 1) == 0) {
  $cond_i_i_i = $callback + 1 | 0;
  $call70 = _sprintf($4 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($4 | 0);
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
  $call70 = _sprintf($4 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($4 | 0);
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 }
}
function __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $imin, $imax, $curNode, $nodes) {
 $items = $items | 0;
 $imin = $imin | 0;
 $imax = $imax | 0;
 $curNode = $curNode | 0;
 $nodes = $nodes | 0;
 var $sub = 0, $0 = 0, $arrayidx = 0, $arraydecay = 0, $arraydecay33 = 0, $8 = 0, $9 = 0, $arrayidx7_i = 0, $10 = 0, $arrayidx11_i = 0, $11 = 0, $12 = 0, $arrayidx19_i = 0, $13 = 0, $arrayidx23_i = 0, $i_01_i = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $i_03_i = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $i_0_i = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $sub39 = 0, $sub47 = 0, $cmp_i2 = 0, $axis_1_i = 0, $39 = 0, $div = 0, $add = 0, $40 = 0, $sub661 = 0, $i68 = 0;
 $sub = $imax - $imin | 0;
 $0 = HEAP32[$curNode >> 2] | 0;
 HEAP32[$curNode >> 2] = $0 + 1;
 $arrayidx = $nodes + ($0 << 4) | 0;
 if (($sub | 0) == 1) {
  HEAP16[$arrayidx >> 1] = HEAP16[$items + ($imin << 4) >> 1] | 0;
  HEAP16[$nodes + ($0 << 4) + 2 >> 1] = HEAP16[$items + ($imin << 4) + 2 >> 1] | 0;
  HEAP16[$nodes + ($0 << 4) + 4 >> 1] = HEAP16[$items + ($imin << 4) + 4 >> 1] | 0;
  HEAP16[$nodes + ($0 << 4) + 6 >> 1] = HEAP16[$items + ($imin << 4) + 6 >> 1] | 0;
  HEAP16[$nodes + ($0 << 4) + 8 >> 1] = HEAP16[$items + ($imin << 4) + 8 >> 1] | 0;
  HEAP16[$nodes + ($0 << 4) + 10 >> 1] = HEAP16[$items + ($imin << 4) + 10 >> 1] | 0;
  HEAP32[$nodes + ($0 << 4) + 12 >> 2] = HEAP32[$items + ($imin << 4) + 12 >> 2];
  return;
 }
 $arraydecay = $arrayidx | 0;
 $arraydecay33 = $nodes + ($0 << 4) + 6 | 0;
 $8 = HEAP16[$items + ($imin << 4) >> 1] | 0;
 HEAP16[$arraydecay >> 1] = $8;
 $9 = HEAP16[$items + ($imin << 4) + 2 >> 1] | 0;
 $arrayidx7_i = $nodes + ($0 << 4) + 2 | 0;
 HEAP16[$arrayidx7_i >> 1] = $9;
 $10 = HEAP16[$items + ($imin << 4) + 4 >> 1] | 0;
 $arrayidx11_i = $nodes + ($0 << 4) + 4 | 0;
 HEAP16[$arrayidx11_i >> 1] = $10;
 $11 = HEAP16[$items + ($imin << 4) + 6 >> 1] | 0;
 HEAP16[$arraydecay33 >> 1] = $11;
 $12 = HEAP16[$items + ($imin << 4) + 8 >> 1] | 0;
 $arrayidx19_i = $nodes + ($0 << 4) + 8 | 0;
 HEAP16[$arrayidx19_i >> 1] = $12;
 $13 = HEAP16[$items + ($imin << 4) + 10 >> 1] | 0;
 $arrayidx23_i = $nodes + ($0 << 4) + 10 | 0;
 HEAP16[$arrayidx23_i >> 1] = $13;
 $i_01_i = $imin + 1 | 0;
 if (($i_01_i | 0) < ($imax | 0)) {
  $i_03_i = $i_01_i;
  $19 = $8;
  $18 = $9;
  $17 = $10;
  $16 = $11;
  $15 = $12;
  $14 = $13;
  while (1) {
   $20 = HEAP16[$items + ($i_03_i << 4) >> 1] | 0;
   if (($20 & 65535) >>> 0 < ($19 & 65535) >>> 0) {
    HEAP16[$arraydecay >> 1] = $20;
    $21 = $20;
   } else {
    $21 = $19;
   }
   $22 = HEAP16[$items + ($i_03_i << 4) + 2 >> 1] | 0;
   if (($22 & 65535) >>> 0 < ($18 & 65535) >>> 0) {
    HEAP16[$arrayidx7_i >> 1] = $22;
    $23 = $22;
   } else {
    $23 = $18;
   }
   $24 = HEAP16[$items + ($i_03_i << 4) + 4 >> 1] | 0;
   if (($24 & 65535) >>> 0 < ($17 & 65535) >>> 0) {
    HEAP16[$arrayidx11_i >> 1] = $24;
    $25 = $24;
   } else {
    $25 = $17;
   }
   $26 = HEAP16[$items + ($i_03_i << 4) + 6 >> 1] | 0;
   if (($26 & 65535) >>> 0 > ($16 & 65535) >>> 0) {
    HEAP16[$arraydecay33 >> 1] = $26;
    $27 = $26;
   } else {
    $27 = $16;
   }
   $28 = HEAP16[$items + ($i_03_i << 4) + 8 >> 1] | 0;
   if (($28 & 65535) >>> 0 > ($15 & 65535) >>> 0) {
    HEAP16[$arrayidx19_i >> 1] = $28;
    $29 = $28;
   } else {
    $29 = $15;
   }
   $30 = HEAP16[$items + ($i_03_i << 4) + 10 >> 1] | 0;
   if (($30 & 65535) >>> 0 > ($14 & 65535) >>> 0) {
    HEAP16[$arrayidx23_i >> 1] = $30;
    $31 = $30;
   } else {
    $31 = $14;
   }
   $i_0_i = $i_03_i + 1 | 0;
   if (($i_0_i | 0) < ($imax | 0)) {
    $i_03_i = $i_0_i;
    $19 = $21;
    $18 = $23;
    $17 = $25;
    $16 = $27;
    $15 = $29;
    $14 = $31;
   } else {
    $37 = $27;
    $36 = $21;
    $35 = $29;
    $34 = $23;
    $33 = $31;
    $32 = $25;
    break;
   }
  }
 } else {
  $37 = $11;
  $36 = $8;
  $35 = $12;
  $34 = $9;
  $33 = $13;
  $32 = $10;
 }
 $sub39 = $37 - $36 & 65535;
 $sub47 = $35 - $34 & 65535;
 $cmp_i2 = ($sub47 & 65535) >>> 0 > ($sub39 & 65535) >>> 0;
 $axis_1_i = (($cmp_i2 ? $sub47 : $sub39) & 65535) >>> 0 < ($33 - $32 & 65535) >>> 0 ? 2 : $cmp_i2 & 1;
 if (($axis_1_i | 0) == 0) {
  _qsort($items + ($imin << 4) | 0, $sub, 16, 42);
  $div = ($sub | 0) / 2 | 0;
  $add = $div + $imin | 0;
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $imin, $add, $curNode, $nodes);
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $add, $imax, $curNode, $nodes);
  $40 = HEAP32[$curNode >> 2] | 0;
  $sub661 = $0 - $40 | 0;
  $i68 = $nodes + ($0 << 4) + 12 | 0;
  HEAP32[$i68 >> 2] = $sub661;
  return;
 }
 $39 = $items + ($imin << 4) | 0;
 if (($axis_1_i | 0) == 1) {
  _qsort($39, $sub, 16, 46);
  $div = ($sub | 0) / 2 | 0;
  $add = $div + $imin | 0;
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $imin, $add, $curNode, $nodes);
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $add, $imax, $curNode, $nodes);
  $40 = HEAP32[$curNode >> 2] | 0;
  $sub661 = $0 - $40 | 0;
  $i68 = $nodes + ($0 << 4) + 12 | 0;
  HEAP32[$i68 >> 2] = $sub661;
  return;
 } else {
  _qsort($39, $sub, 16, 34);
  $div = ($sub | 0) / 2 | 0;
  $add = $div + $imin | 0;
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $imin, $add, $curNode, $nodes);
  __ZL9subdivideP6BVItemiiiRiP8dtBVNode($items, $add, $imax, $curNode, $nodes);
  $40 = HEAP32[$curNode >> 2] | 0;
  $sub661 = $0 - $40 | 0;
  $i68 = $nodes + ($0 << 4) + 12 | 0;
  HEAP32[$i68 >> 2] = $sub661;
  return;
 }
}
function __ZN14dtNavMeshQuery18initSlicedFindPathEjjPKfS1_PK13dtQueryFilter($this, $startRef, $endRef, $startPos, $endPos, $filter) {
 $this = $this | 0;
 $startRef = $startRef | 0;
 $endRef = $endRef | 0;
 $startPos = $startPos | 0;
 $endPos = $endPos | 0;
 $filter = $filter | 0;
 var $m_query = 0, $status = 0, $arrayidx2_i = 0, $arrayidx4_i = 0, $arrayidx2_i20 = 0, $arrayidx4_i22 = 0, $7 = 0, $8 = 0, $sub3_i_i = 0, $9 = 0, $sub5_i_i = 0, $and10_i_i = 0, $10 = 0, $add_i_i = 0, $sub_i_i = 0, $12 = 0, $14 = 0, $and10_i_i11 = 0, $17 = 0, $m_nodePool = 0, $19 = 0, $m_openList = 0, $call25 = 0, $28 = 0, $sub_i = 0.0, $sub4_i = 0.0, $sub7_i = 0.0, $mul = 0.0, $35 = 0, $m_size_i = 0, $36 = 0, $m_heap_i = 0, $parent_012_in_in_i = 0, $parent_012_in_i = 0, $parent_012_i = 0, $37 = 0, $38 = 0, $i_addr_0_lcssa_i = 0, $retval_0 = 0;
 $m_query = $this + 4 | 0;
 _memset($m_query | 0, 0, 44) | 0;
 $status = $m_query | 0;
 HEAP32[$status >> 2] = -2147483648;
 HEAP32[$this + 16 >> 2] = $startRef;
 HEAP32[$this + 20 >> 2] = $endRef;
 HEAPF32[$this + 24 >> 2] = +HEAPF32[$startPos >> 2];
 $arrayidx2_i = $startPos + 4 | 0;
 HEAPF32[$this + 28 >> 2] = +HEAPF32[$arrayidx2_i >> 2];
 $arrayidx4_i = $startPos + 8 | 0;
 HEAPF32[$this + 32 >> 2] = +HEAPF32[$arrayidx4_i >> 2];
 HEAPF32[$this + 36 >> 2] = +HEAPF32[$endPos >> 2];
 $arrayidx2_i20 = $endPos + 4 | 0;
 HEAPF32[$this + 40 >> 2] = +HEAPF32[$arrayidx2_i20 >> 2];
 $arrayidx4_i22 = $endPos + 8 | 0;
 HEAPF32[$this + 44 >> 2] = +HEAPF32[$arrayidx4_i22 >> 2];
 HEAP32[$this + 48 >> 2] = $filter;
 if (!(($startRef | 0) != 0 & ($endRef | 0) != 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $7 = HEAP32[$this >> 2] | 0;
 $8 = HEAP32[$7 + 76 >> 2] | 0;
 $sub3_i_i = (1 << $8) - 1 | 0;
 $9 = HEAP32[$7 + 80 >> 2] | 0;
 $sub5_i_i = (1 << $9) - 1 | 0;
 $and10_i_i = $startRef >>> ($9 >>> 0) & $sub3_i_i;
 $10 = HEAP32[$7 + 48 >> 2] | 0;
 if (!($and10_i_i >>> 0 < $10 >>> 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $add_i_i = $9 + $8 | 0;
 $sub_i_i = (1 << HEAP32[$7 + 72 >> 2]) - 1 | 0;
 $12 = HEAP32[$7 + 68 >> 2] | 0;
 if ((HEAP32[$12 + ($and10_i_i * 60 | 0) >> 2] | 0) != ($sub_i_i & $startRef >>> ($add_i_i >>> 0) | 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $14 = HEAP32[$12 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
 if (($14 | 0) == 0) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 if (!(($sub5_i_i & $startRef) >>> 0 < (HEAP32[$14 + 24 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $and10_i_i11 = $endRef >>> ($9 >>> 0) & $sub3_i_i;
 if (!($and10_i_i11 >>> 0 < $10 >>> 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 if ((HEAP32[$12 + ($and10_i_i11 * 60 | 0) >> 2] | 0) != ($sub_i_i & $endRef >>> ($add_i_i >>> 0) | 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 $17 = HEAP32[$12 + ($and10_i_i11 * 60 | 0) + 8 >> 2] | 0;
 if (($17 | 0) == 0) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 if (!(($sub5_i_i & $endRef) >>> 0 < (HEAP32[$17 + 24 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  return $retval_0 | 0;
 }
 if (($startRef | 0) == ($endRef | 0)) {
  HEAP32[$status >> 2] = 1073741824;
  $retval_0 = 1073741824;
  return $retval_0 | 0;
 }
 $m_nodePool = $this + 56 | 0;
 $19 = HEAP32[$m_nodePool >> 2] | 0;
 _memset(HEAP32[$19 + 4 >> 2] | 0, -1 | 0, HEAP32[$19 + 16 >> 2] << 1 | 0) | 0;
 HEAP32[$19 + 20 >> 2] = 0;
 $m_openList = $this + 60 | 0;
 HEAP32[(HEAP32[$m_openList >> 2] | 0) + 8 >> 2] = 0;
 $call25 = __ZN10dtNodePool7getNodeEj(HEAP32[$m_nodePool >> 2] | 0, $startRef) | 0;
 HEAPF32[$call25 >> 2] = +HEAPF32[$startPos >> 2];
 HEAPF32[$call25 + 4 >> 2] = +HEAPF32[$arrayidx2_i >> 2];
 HEAPF32[$call25 + 8 >> 2] = +HEAPF32[$arrayidx4_i >> 2];
 $28 = $call25 + 20 | 0;
 HEAP32[$28 >> 2] = HEAP32[$28 >> 2] & -1073741824;
 HEAPF32[$call25 + 12 >> 2] = 0.0;
 $sub_i = +HEAPF32[$endPos >> 2] - +HEAPF32[$startPos >> 2];
 $sub4_i = +HEAPF32[$arrayidx2_i20 >> 2] - +HEAPF32[$arrayidx2_i >> 2];
 $sub7_i = +HEAPF32[$arrayidx4_i22 >> 2] - +HEAPF32[$arrayidx4_i >> 2];
 $mul = +Math_sqrt($sub_i * $sub_i + $sub4_i * $sub4_i + $sub7_i * $sub7_i) * .9990000128746033;
 HEAPF32[$call25 + 16 >> 2] = $mul;
 HEAP32[$call25 + 24 >> 2] = $startRef;
 HEAP32[$28 >> 2] = HEAP32[$28 >> 2] & 1073741823 | 1073741824;
 $35 = HEAP32[$m_openList >> 2] | 0;
 $m_size_i = $35 + 8 | 0;
 $36 = HEAP32[$m_size_i >> 2] | 0;
 HEAP32[$m_size_i >> 2] = $36 + 1;
 $m_heap_i = $35 | 0;
 L32 : do {
  if (($36 | 0) > 0) {
   $parent_012_in_in_i = $36;
   while (1) {
    $parent_012_in_i = $parent_012_in_in_i - 1 | 0;
    $parent_012_i = ($parent_012_in_i | 0) / 2 | 0;
    $37 = HEAP32[$m_heap_i >> 2] | 0;
    $38 = HEAP32[$37 + ($parent_012_i << 2) >> 2] | 0;
    if (!(+HEAPF32[$38 + 16 >> 2] > $mul)) {
     $i_addr_0_lcssa_i = $parent_012_in_in_i;
     break L32;
    }
    HEAP32[$37 + ($parent_012_in_in_i << 2) >> 2] = $38;
    if (($parent_012_in_i | 0) > 1) {
     $parent_012_in_in_i = $parent_012_i;
    } else {
     $i_addr_0_lcssa_i = $parent_012_i;
     break;
    }
   }
  } else {
   $i_addr_0_lcssa_i = $36;
  }
 } while (0);
 HEAP32[(HEAP32[$m_heap_i >> 2] | 0) + ($i_addr_0_lcssa_i << 2) >> 2] = $call25;
 HEAP32[$status >> 2] = 536870912;
 HEAP32[$this + 8 >> 2] = $call25;
 HEAPF32[$this + 12 >> 2] = $mul;
 $retval_0 = 536870912;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i13 = 0, $__p_i_i_i_i = 0, $__lv = 0, $ref_tmp = 0, $agg_tmp = 0, $agg_tmp2 = 0, $__names = 0, $2 = 0, $3 = 0, $10 = 0, $11 = 0, $__loc__i = 0, $__locale_2_i_i63 = 0, $13 = 0, $sub_i_i_i = 0, $21 = 0, $22 = 0, $exception_i_i_i = 0, $24 = 0, $25 = 0, $__locale_2_i_i1664 = 0, $30 = 0, $sub_i_i_i20 = 0, $38 = 0, $39 = 0, $exception_i_i_i32 = 0, $41 = 0, $42 = 0, $arrayinit_begin = 0, $47 = 0, $arrayinit_element = 0, $frombool = 0, $56 = 0, $59 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i13 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__lv = sp + 32 | 0;
 $ref_tmp = sp + 40 | 0;
 $agg_tmp = sp + 48 | 0;
 $agg_tmp2 = sp + 56 | 0;
 $__names = sp + 64 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  HEAP32[$__lv >> 2] = -1;
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  $3 = $__b | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
  FUNCTION_TABLE_viiiiiii[$2 & 127]($ref_tmp, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__lv);
  $10 = HEAP32[$ref_tmp >> 2] | 0;
  HEAP32[$3 >> 2] = $10;
  $11 = HEAP32[$__lv >> 2] | 0;
  if (($11 | 0) == 0) {
   HEAP8[$__v >> 0] = 0;
  } else if (($11 | 0) == 1) {
   HEAP8[$__v >> 0] = 1;
  } else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg_result >> 2] = $10;
  STACKTOP = sp;
  return;
 }
 $__loc__i = $__iob + 28 | 0;
 $__locale_2_i_i63 = HEAP32[$__loc__i >> 2] | 0;
 $13 = $__locale_2_i_i63 + 4 | 0;
 tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $21 = HEAP32[$__locale_2_i_i63 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i63 + 12 >> 2] | 0) - $21 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $22 = HEAP32[$21 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($22 | 0) != 0) {
   $24 = $22;
   $25 = $__locale_2_i_i63 + 4 | 0;
   if (((tempValue = HEAP32[$25 >> 2] | 0, HEAP32[$25 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i63 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i63);
   }
   $__locale_2_i_i1664 = HEAP32[$__loc__i >> 2] | 0;
   $30 = $__locale_2_i_i1664 + 4 | 0;
   tempValue = HEAP32[$30 >> 2] | 0, HEAP32[$30 >> 2] = tempValue + 1, tempValue;
   if (!((HEAP32[5814] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i13 >> 2] = 23256;
    HEAP32[$__p_i_i_i_i13 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i13 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i13);
   }
   $sub_i_i_i20 = (HEAP32[5815] | 0) - 1 | 0;
   $38 = HEAP32[$__locale_2_i_i1664 + 8 >> 2] | 0;
   if ((HEAP32[$__locale_2_i_i1664 + 12 >> 2] | 0) - $38 >> 2 >>> 0 > $sub_i_i_i20 >>> 0) {
    $39 = HEAP32[$38 + ($sub_i_i_i20 << 2) >> 2] | 0;
    if (($39 | 0) != 0) {
     $41 = $39;
     $42 = $__locale_2_i_i1664 + 4 | 0;
     if (((tempValue = HEAP32[$42 >> 2] | 0, HEAP32[$42 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i1664 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i1664);
     }
     $arrayinit_begin = $__names | 0;
     $47 = $39;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$47 >> 2] | 0) + 24 >> 2] & 127]($arrayinit_begin, $41);
     $arrayinit_element = $__names + 12 | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$47 >> 2] | 0) + 28 >> 2] & 127]($arrayinit_element, $41);
     $frombool = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, HEAP32[$__e >> 2] | 0, $arrayinit_begin, $__names + 24 | 0, $24, $__err, 1) | 0) == ($arrayinit_begin | 0) | 0;
     HEAP8[$__v >> 0] = $frombool;
     HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
     if (!((HEAP8[$arrayinit_element >> 0] & 1) == 0)) {
      $56 = HEAP32[$__names + 20 >> 2] | 0;
      if (($56 | 0) != 0) {
       _free($56);
      }
     }
     if ((HEAP8[$__names >> 0] & 1) == 0) {
      STACKTOP = sp;
      return;
     }
     $59 = HEAP32[$__names + 8 >> 2] | 0;
     if (($59 | 0) == 0) {
      STACKTOP = sp;
      return;
     }
     _free($59);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i32 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i32 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i32 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i13 = 0, $__p_i_i_i_i = 0, $__lv = 0, $ref_tmp = 0, $agg_tmp = 0, $agg_tmp2 = 0, $__names = 0, $2 = 0, $3 = 0, $10 = 0, $11 = 0, $__loc__i = 0, $__locale_2_i_i63 = 0, $13 = 0, $sub_i_i_i = 0, $21 = 0, $22 = 0, $exception_i_i_i = 0, $24 = 0, $25 = 0, $__locale_2_i_i1664 = 0, $30 = 0, $sub_i_i_i20 = 0, $38 = 0, $39 = 0, $exception_i_i_i32 = 0, $41 = 0, $42 = 0, $arrayinit_begin = 0, $47 = 0, $arrayinit_element = 0, $frombool = 0, $56 = 0, $58 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i13 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__lv = sp + 32 | 0;
 $ref_tmp = sp + 40 | 0;
 $agg_tmp = sp + 48 | 0;
 $agg_tmp2 = sp + 56 | 0;
 $__names = sp + 64 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  HEAP32[$__lv >> 2] = -1;
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  $3 = $__b | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$agg_tmp2 >> 2] = HEAP32[$__e >> 2];
  FUNCTION_TABLE_viiiiiii[$2 & 127]($ref_tmp, $this, $agg_tmp, $agg_tmp2, $__iob, $__err, $__lv);
  $10 = HEAP32[$ref_tmp >> 2] | 0;
  HEAP32[$3 >> 2] = $10;
  $11 = HEAP32[$__lv >> 2] | 0;
  if (($11 | 0) == 1) {
   HEAP8[$__v >> 0] = 1;
  } else if (($11 | 0) == 0) {
   HEAP8[$__v >> 0] = 0;
  } else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg_result >> 2] = $10;
  STACKTOP = sp;
  return;
 }
 $__loc__i = $__iob + 28 | 0;
 $__locale_2_i_i63 = HEAP32[$__loc__i >> 2] | 0;
 $13 = $__locale_2_i_i63 + 4 | 0;
 tempValue = HEAP32[$13 >> 2] | 0, HEAP32[$13 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $21 = HEAP32[$__locale_2_i_i63 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i63 + 12 >> 2] | 0) - $21 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $22 = HEAP32[$21 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($22 | 0) != 0) {
   $24 = $22;
   $25 = $__locale_2_i_i63 + 4 | 0;
   if (((tempValue = HEAP32[$25 >> 2] | 0, HEAP32[$25 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i63 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i63);
   }
   $__locale_2_i_i1664 = HEAP32[$__loc__i >> 2] | 0;
   $30 = $__locale_2_i_i1664 + 4 | 0;
   tempValue = HEAP32[$30 >> 2] | 0, HEAP32[$30 >> 2] = tempValue + 1, tempValue;
   if (!((HEAP32[5816] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i13 >> 2] = 23264;
    HEAP32[$__p_i_i_i_i13 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i13 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i13);
   }
   $sub_i_i_i20 = (HEAP32[5817] | 0) - 1 | 0;
   $38 = HEAP32[$__locale_2_i_i1664 + 8 >> 2] | 0;
   if ((HEAP32[$__locale_2_i_i1664 + 12 >> 2] | 0) - $38 >> 2 >>> 0 > $sub_i_i_i20 >>> 0) {
    $39 = HEAP32[$38 + ($sub_i_i_i20 << 2) >> 2] | 0;
    if (($39 | 0) != 0) {
     $41 = $39;
     $42 = $__locale_2_i_i1664 + 4 | 0;
     if (((tempValue = HEAP32[$42 >> 2] | 0, HEAP32[$42 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i1664 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i1664);
     }
     $arrayinit_begin = $__names | 0;
     $47 = $39;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$47 >> 2] | 0) + 24 >> 2] & 127]($arrayinit_begin, $41);
     $arrayinit_element = $__names + 12 | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$47 >> 2] | 0) + 28 >> 2] & 127]($arrayinit_element, $41);
     $frombool = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, HEAP32[$__e >> 2] | 0, $arrayinit_begin, $__names + 24 | 0, $24, $__err, 1) | 0) == ($arrayinit_begin | 0) | 0;
     HEAP8[$__v >> 0] = $frombool;
     HEAP32[$agg_result >> 2] = HEAP32[$__b >> 2];
     if (!((HEAP8[$arrayinit_element >> 0] & 1) == 0)) {
      $56 = HEAP32[$__names + 20 >> 2] | 0;
      if (($56 | 0) != 0) {
       _free($56);
      }
     }
     if ((HEAP8[$__names >> 0] & 1) == 0) {
      STACKTOP = sp;
      return;
     }
     $58 = HEAP32[$__names + 8 >> 2] | 0;
     if (($58 | 0) == 0) {
      STACKTOP = sp;
      return;
     }
     _free($58);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i32 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i32 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i32 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZL11triangulateiPKiPiS1_($n, $verts, $indices, $tris) {
 $n = $n | 0;
 $verts = $verts | 0;
 $indices = $indices | 0;
 $tris = $tris | 0;
 var $i_0111 = 0, $cmp_i = 0, $add__i = 0, $add_i78 = 0, $arrayidx = 0, $n_addr_0108 = 0, $ntris_0107 = 0, $dst_0106 = 0, $i4_0_ph = 0, $mini_0_ph = 0, $minLen_0_ph = 0, $i4_0 = 0, $add_i84 = 0, $add__i86 = 0, $mul = 0, $add_i97 = 0, $mul18 = 0, $sub = 0, $sub24 = 0, $add = 0, $or_cond = 0, $add_i94 = 0, $add__i96 = 0, $add_i91 = 0, $incdec_ptr51 = 0, $inc52 = 0, $dec = 0, $cmp54101 = 0, $k_0102 = 0, $call41_ = 0, $sub1_i90 = 0, $call67 = 0, $arrayidx69 = 0, $12 = 0, $add_i81 = 0, $call75 = 0, $arrayidx77 = 0, $13 = 0, $ntris_0_lcssa = 0, $dst_0_lcssa = 0, $retval_0 = 0, label = 0, $i_0111$looptemp = 0, $k_0102$looptemp = 0;
 do {
  if (($n | 0) > 0) {
   $i_0111 = 0;
   do {
    $i_0111$looptemp = $i_0111;
    $i_0111 = $i_0111 + 1 | 0;
    $cmp_i = ($i_0111 | 0) < ($n | 0);
    $add__i = $cmp_i ? $i_0111 : 0;
    $add_i78 = $add__i + 1 | 0;
    if (__ZL8diagonaliiiPKiPi($i_0111$looptemp, ($add_i78 | 0) < ($n | 0) ? $add_i78 : 0, $n, $verts, $indices) | 0) {
     $arrayidx = $indices + ($add__i << 2) | 0;
     HEAP32[$arrayidx >> 2] = HEAP32[$arrayidx >> 2] | -2147483648;
    }
   } while ($cmp_i);
   if (($n | 0) > 3) {
    $dst_0106 = $tris;
    $ntris_0107 = 0;
    $n_addr_0108 = $n;
    while (1) {
     $minLen_0_ph = -1;
     $mini_0_ph = -1;
     $i4_0_ph = 0;
     L10 : while (1) {
      $i4_0 = $i4_0_ph;
      while (1) {
       if (($i4_0 | 0) >= ($n_addr_0108 | 0)) {
        break L10;
       }
       $add_i84 = $i4_0 + 1 | 0;
       $add__i86 = ($add_i84 | 0) < ($n_addr_0108 | 0) ? $add_i84 : 0;
       if ((HEAP32[$indices + ($add__i86 << 2) >> 2] | 0) < 0) {
        break;
       } else {
        $i4_0 = $add_i84;
       }
      }
      $mul = HEAP32[$indices + ($i4_0 << 2) >> 2] << 2 & 1073741820;
      $add_i97 = $add__i86 + 1 | 0;
      $mul18 = HEAP32[$indices + ((($add_i97 | 0) < ($n_addr_0108 | 0) ? $add_i97 : 0) << 2) >> 2] << 2 & 1073741820;
      $sub = (HEAP32[$verts + ($mul18 << 2) >> 2] | 0) - (HEAP32[$verts + ($mul << 2) >> 2] | 0) | 0;
      $sub24 = (HEAP32[$verts + (($mul18 | 2) << 2) >> 2] | 0) - (HEAP32[$verts + (($mul | 2) << 2) >> 2] | 0) | 0;
      $add = (Math_imul($sub24, $sub24) | 0) + (Math_imul($sub, $sub) | 0) | 0;
      $or_cond = ($minLen_0_ph | 0) < 0 | ($add | 0) < ($minLen_0_ph | 0);
      $minLen_0_ph = $or_cond ? $add : $minLen_0_ph;
      $mini_0_ph = $or_cond ? $i4_0 : $mini_0_ph;
      $i4_0_ph = $add_i84;
     }
     if (($mini_0_ph | 0) == -1) {
      break;
     }
     $add_i94 = $mini_0_ph + 1 | 0;
     $add__i96 = ($add_i94 | 0) < ($n_addr_0108 | 0) ? $add_i94 : 0;
     $add_i91 = $add__i96 + 1 | 0;
     HEAP32[$dst_0106 >> 2] = HEAP32[$indices + ($mini_0_ph << 2) >> 2] & 268435455;
     HEAP32[$dst_0106 + 4 >> 2] = HEAP32[$indices + ($add__i96 << 2) >> 2] & 268435455;
     $incdec_ptr51 = $dst_0106 + 12 | 0;
     HEAP32[$dst_0106 + 8 >> 2] = HEAP32[$indices + ((($add_i91 | 0) < ($n_addr_0108 | 0) ? $add_i91 : 0) << 2) >> 2] & 268435455;
     $inc52 = $ntris_0107 + 1 | 0;
     $dec = $n_addr_0108 - 1 | 0;
     $cmp54101 = ($add__i96 | 0) < ($dec | 0);
     if ($cmp54101) {
      $k_0102 = $add__i96;
      do {
       $k_0102$looptemp = $k_0102;
       $k_0102 = $k_0102 + 1 | 0;
       HEAP32[$indices + ($k_0102$looptemp << 2) >> 2] = HEAP32[$indices + ($k_0102 << 2) >> 2];
      } while (($k_0102 | 0) < ($dec | 0));
     }
     $call41_ = $cmp54101 ? $add__i96 : 0;
     $sub1_i90 = (($call41_ | 0) > 0 ? $call41_ : $dec) - 1 | 0;
     $call67 = __ZL8diagonaliiiPKiPi((($sub1_i90 | 0) > 0 ? $sub1_i90 : $dec) - 1 | 0, $call41_, $dec, $verts, $indices) | 0;
     $arrayidx69 = $indices + ($sub1_i90 << 2) | 0;
     $12 = HEAP32[$arrayidx69 >> 2] | 0;
     HEAP32[$arrayidx69 >> 2] = $call67 ? $12 | -2147483648 : $12 & 268435455;
     $add_i81 = $call41_ + 1 | 0;
     $call75 = __ZL8diagonaliiiPKiPi($sub1_i90, ($add_i81 | 0) < ($dec | 0) ? $add_i81 : 0, $dec, $verts, $indices) | 0;
     $arrayidx77 = $indices + ($call41_ << 2) | 0;
     $13 = HEAP32[$arrayidx77 >> 2] | 0;
     HEAP32[$arrayidx77 >> 2] = $call75 ? $13 | -2147483648 : $13 & 268435455;
     if (($dec | 0) > 3) {
      $dst_0106 = $incdec_ptr51;
      $ntris_0107 = $inc52;
      $n_addr_0108 = $dec;
     } else {
      label = 16;
      break;
     }
    }
    if ((label | 0) == 16) {
     $dst_0_lcssa = $incdec_ptr51;
     $ntris_0_lcssa = $ntris_0107 + 2 | 0;
     break;
    }
    $retval_0 = -$ntris_0107 | 0;
    return $retval_0 | 0;
   } else {
    $dst_0_lcssa = $tris;
    $ntris_0_lcssa = 1;
   }
  } else {
   $dst_0_lcssa = $tris;
   $ntris_0_lcssa = 1;
  }
 } while (0);
 HEAP32[$dst_0_lcssa >> 2] = HEAP32[$indices >> 2] & 268435455;
 HEAP32[$dst_0_lcssa + 4 >> 2] = HEAP32[$indices + 4 >> 2] & 268435455;
 HEAP32[$dst_0_lcssa + 8 >> 2] = HEAP32[$indices + 8 >> 2] & 268435455;
 $retval_0 = $ntris_0_lcssa;
 return $retval_0 | 0;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result, $ec, $what_arg) {
 $agg_result = $agg_result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $ref_tmp = 0, $__val__i = 0, $0 = 0, $_pre11 = 0, $1 = 0, $tobool_i_i_i = 0, $cond_i_i = 0, $3 = 0, $5 = 0, $cond_i_i_i2 = 0, $tobool_i_i19_i_i = 0, $cond_i21_i_i = 0, $cond_i32_i_i = 0, $8 = 0, $add_i_i = 0, $10 = 0, $11 = 0, $__size__i_i_i_i_i = 0, $14 = 0, $cond_i_i11_i_i = 0, $cond_i_i_i = 0, $17 = 0, $18 = 0, $20 = 0, $cond_i_i6_i_i = 0, $tobool_i_i19_i_i_i = 0, $cond_i21_i_i_i = 0, $cond_i32_i_i_i = 0, $add_i_i_i = 0, $25 = 0, $29 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ref_tmp = sp | 0;
 $__val__i = $ec | 0;
 $0 = HEAP32[$__val__i >> 2] | 0;
 $_pre11 = $what_arg;
 if (($0 | 0) == 0) {
  $29 = $agg_result;
  HEAP32[$29 >> 2] = HEAP32[$_pre11 >> 2];
  HEAP32[$29 + 4 >> 2] = HEAP32[$_pre11 + 4 >> 2];
  HEAP32[$29 + 8 >> 2] = HEAP32[$_pre11 + 8 >> 2];
  _memset($_pre11 | 0, 0, 12) | 0;
  STACKTOP = sp;
  return;
 }
 $1 = HEAP8[$_pre11 >> 0] | 0;
 $tobool_i_i_i = ($1 & 1) == 0;
 if ($tobool_i_i_i) {
  $cond_i_i = ($1 & 255) >>> 1;
 } else {
  $cond_i_i = HEAP32[$what_arg + 4 >> 2] | 0;
 }
 if (($cond_i_i | 0) == 0) {
  $10 = $0;
 } else {
  if ($tobool_i_i_i) {
   $cond_i_i_i2 = 10;
   $5 = $1;
  } else {
   $3 = HEAP32[$what_arg >> 2] | 0;
   $cond_i_i_i2 = ($3 & -2) - 1 | 0;
   $5 = $3 & 255;
  }
  $tobool_i_i19_i_i = ($5 & 1) == 0;
  if ($tobool_i_i19_i_i) {
   $cond_i21_i_i = ($5 & 255) >>> 1;
  } else {
   $cond_i21_i_i = HEAP32[$what_arg + 4 >> 2] | 0;
  }
  if (($cond_i_i_i2 - $cond_i21_i_i | 0) >>> 0 < 2 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($what_arg, $cond_i_i_i2, 2 - $cond_i_i_i2 + $cond_i21_i_i | 0, $cond_i21_i_i, $cond_i21_i_i, 2, 6672);
  } else {
   if ($tobool_i_i19_i_i) {
    $cond_i32_i_i = $what_arg + 1 | 0;
   } else {
    $cond_i32_i_i = HEAP32[$what_arg + 8 >> 2] | 0;
   }
   $8 = $cond_i32_i_i + $cond_i21_i_i | 0;
   tempBigInt = 8250;
   HEAP8[$8 >> 0] = tempBigInt;
   tempBigInt = tempBigInt >> 8;
   HEAP8[$8 + 1 >> 0] = tempBigInt;
   $add_i_i = $cond_i21_i_i + 2 | 0;
   if ((HEAP8[$_pre11 >> 0] & 1) == 0) {
    HEAP8[$_pre11 >> 0] = $add_i_i << 1;
   } else {
    HEAP32[$what_arg + 4 >> 2] = $add_i_i;
   }
   HEAP8[$cond_i32_i_i + $add_i_i >> 0] = 0;
  }
  $10 = HEAP32[$__val__i >> 2] | 0;
 }
 $11 = HEAP32[$ec + 4 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 31]($ref_tmp, $11, $10);
 $__size__i_i_i_i_i = $ref_tmp;
 $14 = HEAP8[$__size__i_i_i_i_i >> 0] | 0;
 if (($14 & 1) == 0) {
  $cond_i_i_i = ($14 & 255) >>> 1;
  $cond_i_i11_i_i = $ref_tmp + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$ref_tmp + 4 >> 2] | 0;
  $cond_i_i11_i_i = HEAP32[$ref_tmp + 8 >> 2] | 0;
 }
 $17 = HEAP8[$_pre11 >> 0] | 0;
 if (($17 & 1) == 0) {
  $cond_i_i6_i_i = 10;
  $20 = $17;
 } else {
  $18 = HEAP32[$what_arg >> 2] | 0;
  $cond_i_i6_i_i = ($18 & -2) - 1 | 0;
  $20 = $18 & 255;
 }
 $tobool_i_i19_i_i_i = ($20 & 1) == 0;
 if ($tobool_i_i19_i_i_i) {
  $cond_i21_i_i_i = ($20 & 255) >>> 1;
 } else {
  $cond_i21_i_i_i = HEAP32[$what_arg + 4 >> 2] | 0;
 }
 if (($cond_i_i6_i_i - $cond_i21_i_i_i | 0) >>> 0 < $cond_i_i_i >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($what_arg, $cond_i_i6_i_i, $cond_i_i_i - $cond_i_i6_i_i + $cond_i21_i_i_i | 0, $cond_i21_i_i_i, $cond_i21_i_i_i, $cond_i_i_i, $cond_i_i11_i_i);
 } else {
  if (($cond_i_i_i | 0) != 0) {
   if ($tobool_i_i19_i_i_i) {
    $cond_i32_i_i_i = $what_arg + 1 | 0;
   } else {
    $cond_i32_i_i_i = HEAP32[$what_arg + 8 >> 2] | 0;
   }
   _memcpy($cond_i32_i_i_i + $cond_i21_i_i_i | 0, $cond_i_i11_i_i | 0, $cond_i_i_i) | 0;
   $add_i_i_i = $cond_i21_i_i_i + $cond_i_i_i | 0;
   if ((HEAP8[$_pre11 >> 0] & 1) == 0) {
    HEAP8[$_pre11 >> 0] = $add_i_i_i << 1;
   } else {
    HEAP32[$what_arg + 4 >> 2] = $add_i_i_i;
   }
   HEAP8[$cond_i32_i_i_i + $add_i_i_i >> 0] = 0;
  }
 }
 if ((HEAP8[$__size__i_i_i_i_i >> 0] & 1) == 0) {
  $29 = $agg_result;
  HEAP32[$29 >> 2] = HEAP32[$_pre11 >> 2];
  HEAP32[$29 + 4 >> 2] = HEAP32[$_pre11 + 4 >> 2];
  HEAP32[$29 + 8 >> 2] = HEAP32[$_pre11 + 8 >> 2];
  _memset($_pre11 | 0, 0, 12) | 0;
  STACKTOP = sp;
  return;
 }
 $25 = HEAP32[$ref_tmp + 8 >> 2] | 0;
 if (($25 | 0) == 0) {
  $29 = $agg_result;
  HEAP32[$29 >> 2] = HEAP32[$_pre11 >> 2];
  HEAP32[$29 + 4 >> 2] = HEAP32[$_pre11 + 4 >> 2];
  HEAP32[$29 + 8 >> 2] = HEAP32[$_pre11 + 8 >> 2];
  _memset($_pre11 | 0, 0, 12) | 0;
  STACKTOP = sp;
  return;
 }
 _free($25);
 $29 = $agg_result;
 HEAP32[$29 >> 2] = HEAP32[$_pre11 >> 2];
 HEAP32[$29 + 4 >> 2] = HEAP32[$_pre11 + 4 >> 2];
 HEAP32[$29 + 8 >> 2] = HEAP32[$_pre11 + 8 >> 2];
 _memset($_pre11 | 0, 0, 12) | 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $__shared_owners__i = 0, $__end__i = 0, $2 = 0, $__begin__i = 0, $3 = 0, $sub_ptr_lhs_cast_i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_div_i = 0, $add = 0, $sub_i = 0, $__first__i_i_i_i = 0, $sub_ptr_lhs_cast_i5 = 0, $5 = 0, $__n_addr_0_i_i = 0, $6 = 0, $__second__i_i_i_i = 0, $sub_ptr_sub_i_i_i_i = 0, $mul_i_i = 0, $_sroa_speculated_i_i = 0, $__allocated__i_i_i19_i = 0, $retval_0_i4248_i = 0, $retval_0_i43_i = 0, $cond_i_i = 0, $10 = 0, $__n_addr_0_i8_i = 0, $11 = 0, $12 = 0, $sub_ptr_sub_i_i_i = 0, $add_ptr_i_i_i = 0, $15 = 0, $add_ptr_i = 0, $25 = 0, $26 = 0, $__shared_owners__i1 = 0, $31 = 0, $arrayidx_i = 0, label = 0;
 $__shared_owners__i = $f + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + 1, tempValue;
 $__end__i = $this + 12 | 0;
 $2 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $this + 8 | 0;
 $3 = HEAP32[$__begin__i >> 2] | 0;
 $sub_ptr_lhs_cast_i = $2;
 $sub_ptr_rhs_cast_i = $3;
 $sub_ptr_div_i = $sub_ptr_lhs_cast_i - $sub_ptr_rhs_cast_i >> 2;
 do {
  if ($sub_ptr_div_i >>> 0 > $id >>> 0) {
   $25 = $3;
  } else {
   $add = $id + 1 | 0;
   if (!($add >>> 0 > $sub_ptr_div_i >>> 0)) {
    if (!($add >>> 0 < $sub_ptr_div_i >>> 0)) {
     $25 = $3;
     break;
    }
    $add_ptr_i = $3 + ($add << 2) | 0;
    if (($2 | 0) == ($add_ptr_i | 0)) {
     $25 = $3;
     break;
    }
    HEAP32[$__end__i >> 2] = $2 + (~(($2 - 4 - $add_ptr_i | 0) >>> 2) << 2);
    $25 = $3;
    break;
   }
   $sub_i = $add - $sub_ptr_div_i | 0;
   $__first__i_i_i_i = $this + 16 | 0;
   $sub_ptr_lhs_cast_i5 = HEAP32[$__first__i_i_i_i >> 2] | 0;
   do {
    if ($sub_ptr_lhs_cast_i5 - $sub_ptr_lhs_cast_i >> 2 >>> 0 < $sub_i >>> 0) {
     $__second__i_i_i_i = $this + 24 | 0;
     if ($add >>> 0 > 1073741823 >>> 0) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     }
     $sub_ptr_sub_i_i_i_i = $sub_ptr_lhs_cast_i5 - $sub_ptr_rhs_cast_i | 0;
     if ($sub_ptr_sub_i_i_i_i >> 2 >>> 0 < 536870911 >>> 0) {
      $mul_i_i = $sub_ptr_sub_i_i_i_i >> 1;
      $_sroa_speculated_i_i = $mul_i_i >>> 0 < $add >>> 0 ? $add : $mul_i_i;
      if (($_sroa_speculated_i_i | 0) == 0) {
       $cond_i_i = 0;
       $retval_0_i43_i = 0;
      } else {
       $__allocated__i_i_i19_i = $this + 136 | 0;
       if ((HEAP8[$__allocated__i_i_i19_i >> 0] | 0) == 0 & $_sroa_speculated_i_i >>> 0 < 29 >>> 0) {
        HEAP8[$__allocated__i_i_i19_i >> 0] = 1;
        $cond_i_i = $__second__i_i_i_i;
        $retval_0_i43_i = $_sroa_speculated_i_i;
       } else {
        $retval_0_i4248_i = $_sroa_speculated_i_i;
        label = 14;
       }
      }
     } else {
      $retval_0_i4248_i = 1073741823;
      label = 14;
     }
     if ((label | 0) == 14) {
      $cond_i_i = __Znwj($retval_0_i4248_i << 2) | 0;
      $retval_0_i43_i = $retval_0_i4248_i;
     }
     $__n_addr_0_i8_i = $sub_i;
     $10 = $cond_i_i + ($sub_ptr_div_i << 2) | 0;
     do {
      if (($10 | 0) == 0) {
       $11 = 0;
      } else {
       HEAP32[$10 >> 2] = 0;
       $11 = $10;
      }
      $10 = $11 + 4 | 0;
      $__n_addr_0_i8_i = $__n_addr_0_i8_i - 1 | 0;
     } while (($__n_addr_0_i8_i | 0) != 0);
     $12 = HEAP32[$__begin__i >> 2] | 0;
     $sub_ptr_sub_i_i_i = (HEAP32[$__end__i >> 2] | 0) - $12 | 0;
     $add_ptr_i_i_i = $cond_i_i + ($sub_ptr_div_i - ($sub_ptr_sub_i_i_i >> 2) << 2) | 0;
     $15 = $12;
     _memcpy($add_ptr_i_i_i | 0, $15 | 0, $sub_ptr_sub_i_i_i) | 0;
     HEAP32[$__begin__i >> 2] = $add_ptr_i_i_i;
     HEAP32[$__end__i >> 2] = $10;
     HEAP32[$__first__i_i_i_i >> 2] = $cond_i_i + ($retval_0_i43_i << 2);
     if (($12 | 0) != 0) {
      if (($__second__i_i_i_i | 0) == ($12 | 0)) {
       HEAP8[$this + 136 >> 0] = 0;
       break;
      } else {
       _free($15);
       break;
      }
     }
    } else {
     $__n_addr_0_i_i = $sub_i;
     $5 = $2;
     do {
      if (($5 | 0) == 0) {
       $6 = 0;
      } else {
       HEAP32[$5 >> 2] = 0;
       $6 = HEAP32[$__end__i >> 2] | 0;
      }
      $5 = $6 + 4 | 0;
      HEAP32[$__end__i >> 2] = $5;
      $__n_addr_0_i_i = $__n_addr_0_i_i - 1 | 0;
     } while (($__n_addr_0_i_i | 0) != 0);
    }
   } while (0);
   $25 = HEAP32[$__begin__i >> 2] | 0;
  }
 } while (0);
 $26 = HEAP32[$25 + ($id << 2) >> 2] | 0;
 if (($26 | 0) == 0) {
  $31 = $25;
  $arrayidx_i = $31 + ($id << 2) | 0;
  HEAP32[$arrayidx_i >> 2] = $f;
  return;
 }
 $__shared_owners__i1 = $26 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i1 >> 2] | 0, HEAP32[$__shared_owners__i1 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 8 >> 2] & 511]($26 | 0);
 }
 $31 = HEAP32[$__begin__i >> 2] | 0;
 $arrayidx_i = $31 + ($id << 2) | 0;
 HEAP32[$arrayidx_i >> 2] = $f;
 return;
}
function __ZN9dtNavMesh22connectExtOffMeshLinksEP10dtMeshTileS1_i($this, $tile, $target, $side) {
 $this = $this | 0;
 $tile = $tile | 0;
 $target = $target | 0;
 $side = $side | 0;
 var $nearestPt = 0, $cond_off0 = 0, $header = 0, $0 = 0, $offMeshCons = 0, $polys = 0, $arraydecay19 = 0, $arrayidx27 = 0, $verts38 = 0, $arrayidx2_i = 0, $linksFreeList_i50 = 0, $linksFreeList_i = 0, $links_i = 0, $m_polyBits_i = 0, $polys59 = 0, $tobool_i = 0, $2 = 0, $m_tiles_i = 0, $sub_ptr_lhs_cast_i = 0, $salt_i = 0, $m_tileBits_i_i = 0, $links_i52 = 0, $3 = 0, $i_064 = 0, $4 = 0, $poly = 0, $idxprom = 0, $7 = 0, $firstLink = 0, $rad = 0, $9 = 0.0, $arrayidx18 = 0, $call20 = 0, $11 = 0.0, $sub = 0.0, $sub29 = 0.0, $15 = 0.0, $mul = 0, $17 = 0, $20 = 0, $21 = 0, $next_i53 = 0, $25 = 0, $26 = 0, $next_i = 0, $28 = 0, $29 = 0, $retval_0_i = 0, $firstLink78 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $nearestPt = sp | 0;
 if (($tile | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 if (($side | 0) == -1) {
  $cond_off0 = -1;
 } else {
  $cond_off0 = $side + 4 & 7;
 }
 $header = $target + 8 | 0;
 $0 = HEAP32[$header >> 2] | 0;
 if ((HEAP32[$0 + 52 >> 2] | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $offMeshCons = $target + 40 | 0;
 $polys = $target + 12 | 0;
 $arraydecay19 = $nearestPt | 0;
 $arrayidx27 = $nearestPt + 8 | 0;
 $verts38 = $target + 16 | 0;
 $arrayidx2_i = $nearestPt + 4 | 0;
 $linksFreeList_i50 = $target + 4 | 0;
 $linksFreeList_i = $tile + 4 | 0;
 $links_i = $tile + 20 | 0;
 $m_polyBits_i = $this + 80 | 0;
 $polys59 = $tile + 12 | 0;
 $tobool_i = ($target | 0) == 0;
 $2 = $side & 255;
 $m_tiles_i = $this + 68 | 0;
 $sub_ptr_lhs_cast_i = $target;
 $salt_i = $target | 0;
 $m_tileBits_i_i = $this + 76 | 0;
 $links_i52 = $target + 20 | 0;
 $i_064 = 0;
 $3 = $0;
 do {
  $4 = HEAP32[$offMeshCons >> 2] | 0;
  if ((HEAP8[$4 + ($i_064 * 36 | 0) + 31 >> 0] | 0) == $cond_off0 << 24 >> 24) {
   $poly = $4 + ($i_064 * 36 | 0) + 28 | 0;
   $idxprom = HEAPU16[$poly >> 1] | 0;
   $7 = HEAP32[$polys >> 2] | 0;
   $firstLink = $7 + ($idxprom << 5) | 0;
   if (!((HEAP32[$firstLink >> 2] | 0) == -1)) {
    $rad = $4 + ($i_064 * 36 | 0) + 24 | 0;
    $9 = +HEAPF32[$rad >> 2];
    $arrayidx18 = $4 + ($i_064 * 36 | 0) + 12 | 0;
    $call20 = __ZNK9dtNavMesh21findNearestPolyInTileEPK10dtMeshTilePKfS4_Pf($this, $tile, $arrayidx18, $9, +HEAPF32[$3 + 68 >> 2], $9, $arraydecay19) | 0;
    if (($call20 | 0) != 0) {
     $11 = +HEAPF32[$arraydecay19 >> 2];
     $sub = $11 - +HEAPF32[$arrayidx18 >> 2];
     $sub29 = +HEAPF32[$arrayidx27 >> 2] - +HEAPF32[$4 + ($i_064 * 36 | 0) + 20 >> 2];
     $15 = +HEAPF32[$rad >> 2];
     if (!($sub * $sub + $sub29 * $sub29 > $15 * $15)) {
      $mul = (HEAPU16[$7 + ($idxprom << 5) + 6 >> 1] | 0) * 3 | 0;
      $17 = HEAP32[$verts38 >> 2] | 0;
      HEAPF32[$17 + ($mul << 2) >> 2] = $11;
      HEAPF32[$17 + ($mul + 1 << 2) >> 2] = +HEAPF32[$arrayidx2_i >> 2];
      HEAPF32[$17 + ($mul + 2 << 2) >> 2] = +HEAPF32[$arrayidx27 >> 2];
      $20 = HEAP32[$linksFreeList_i50 >> 2] | 0;
      if (!(($20 | 0) == -1)) {
       $21 = HEAP32[$links_i52 >> 2] | 0;
       $next_i53 = $21 + ($20 * 12 | 0) + 4 | 0;
       HEAP32[$linksFreeList_i50 >> 2] = HEAP32[$next_i53 >> 2];
       HEAP32[$21 + ($20 * 12 | 0) >> 2] = $call20;
       HEAP8[$21 + ($20 * 12 | 0) + 8 >> 0] = 1;
       HEAP8[$21 + ($20 * 12 | 0) + 9 >> 0] = $cond_off0;
       HEAP8[$21 + ($20 * 12 | 0) + 11 >> 0] = 0;
       HEAP8[$21 + ($20 * 12 | 0) + 10 >> 0] = 0;
       HEAP32[$next_i53 >> 2] = HEAP32[$firstLink >> 2];
       HEAP32[$firstLink >> 2] = $20;
      }
      if (!((HEAP8[$4 + ($i_064 * 36 | 0) + 30 >> 0] & 1) == 0)) {
       $25 = HEAP32[$linksFreeList_i >> 2] | 0;
       if (!(($25 | 0) == -1)) {
        $26 = HEAP32[$links_i >> 2] | 0;
        $next_i = $26 + ($25 * 12 | 0) + 4 | 0;
        HEAP32[$linksFreeList_i >> 2] = HEAP32[$next_i >> 2];
        $28 = HEAP32[$m_polyBits_i >> 2] | 0;
        $29 = HEAP32[$polys59 >> 2] | 0;
        if ($tobool_i) {
         $retval_0_i = 0;
        } else {
         $retval_0_i = HEAP32[$salt_i >> 2] << (HEAP32[$m_tileBits_i_i >> 2] | 0) + $28 | (($sub_ptr_lhs_cast_i - (HEAP32[$m_tiles_i >> 2] | 0) | 0) / 60 | 0) << $28;
        }
        HEAP32[$26 + ($25 * 12 | 0) >> 2] = HEAPU16[$poly >> 1] | $retval_0_i;
        HEAP8[$26 + ($25 * 12 | 0) + 8 >> 0] = -1;
        HEAP8[$26 + ($25 * 12 | 0) + 9 >> 0] = $2;
        HEAP8[$26 + ($25 * 12 | 0) + 11 >> 0] = 0;
        HEAP8[$26 + ($25 * 12 | 0) + 10 >> 0] = 0;
        $firstLink78 = $29 + (($call20 & 65535 & (1 << $28) + 65535) << 5) | 0;
        HEAP32[$next_i >> 2] = HEAP32[$firstLink78 >> 2];
        HEAP32[$firstLink78 >> 2] = $25;
       }
      }
     }
    }
   }
  }
  $i_064 = $i_064 + 1 | 0;
  $3 = HEAP32[$header >> 2] | 0;
 } while (($i_064 | 0) < (HEAP32[$3 + 52 >> 2] | 0));
 STACKTOP = sp;
 return;
}
function __Z22duDebugDrawRawContoursP11duDebugDrawRK12rcContourSetf($dd, $cset, $alpha) {
 $dd = $dd | 0;
 $cset = $cset | 0;
 $alpha = +$alpha;
 var $arraydecay = 0, $0 = 0.0, $1 = 0.0, $conv = 0, $2 = 0, $nconts = 0, $conts = 0, $arrayidx43 = 0, $arrayidx52 = 0, $5 = 0, $shl3_i_i = 0, $i_074 = 0, $6 = 0, $conv3 = 0, $8 = 0, $or4_i_i = 0, $nrverts = 0, $rverts = 0, $add16 = 0, $j_072 = 0, $mul8 = 0, $13 = 0, $add = 0.0, $add20 = 0.0, $add25 = 0.0, $23 = 0, $32 = 0, $35 = 0, $conts72 = 0, $arrayidx104 = 0, $arrayidx114 = 0, $36 = 0, $shl3_i = 0, $or4_i = 0, $mul95 = 0.0, $37 = 0, $i66_070 = 0, $38 = 0, $conv76 = 0, $40 = 0, $or4_i_i19 = 0, $or_i = 0, $nrverts82 = 0, $rverts87 = 0, $add106 = 0, $j80_068 = 0, $mul86 = 0, $45 = 0, $tobool91 = 0, $55 = 0;
 if (($dd | 0) == 0) {
  return;
 }
 $arraydecay = $cset + 8 | 0;
 $0 = +HEAPF32[$cset + 32 >> 2];
 $1 = +HEAPF32[$cset + 36 >> 2];
 $conv = ~~($alpha * 255.0);
 $2 = $dd;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 1, 2.0);
 $nconts = $cset + 4 | 0;
 if ((HEAP32[$nconts >> 2] | 0) > 0) {
  $conts = $cset | 0;
  $arrayidx43 = $cset + 12 | 0;
  $arrayidx52 = $cset + 16 | 0;
  $5 = $dd;
  $shl3_i_i = ($conv & 255) << 24;
  $i_074 = 0;
  do {
   $6 = HEAP32[$conts >> 2] | 0;
   $conv3 = HEAPU16[$6 + ($i_074 * 20 | 0) + 16 >> 1] | 0;
   $8 = $conv3 >>> 2;
   $or4_i_i = (($conv3 >>> 1 & 1 | $8 & 2) * 63 | 0) + 63 | $shl3_i_i | (($8 & 1 | $conv3 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv3 >>> 4 & 2 | $conv3 & 1, 4128768) | 0) + 4128768;
   $nrverts = $6 + ($i_074 * 20 | 0) + 12 | 0;
   $rverts = $6 + ($i_074 * 20 | 0) + 8 | 0;
   $add16 = ($i_074 & 1) + 1 | 0;
   if ((HEAP32[$nrverts >> 2] | 0) > 0) {
    $j_072 = 0;
    do {
     $mul8 = $j_072 << 2;
     $13 = HEAP32[$rverts >> 2] | 0;
     $add = +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$13 + ($mul8 << 2) >> 2] | 0);
     $add20 = +HEAPF32[$arrayidx43 >> 2] + $1 * +($add16 + (HEAP32[$13 + (($mul8 | 1) << 2) >> 2] | 0) | 0);
     $add25 = +HEAPF32[$arrayidx52 >> 2] + $0 * +(HEAP32[$13 + (($mul8 | 2) << 2) >> 2] | 0);
     FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 31]($dd, $add, $add20, $add25, $or4_i_i);
     if (($j_072 | 0) > 0) {
      FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 31]($dd, $add, $add20, $add25, $or4_i_i);
     }
     $j_072 = $j_072 + 1 | 0;
    } while (($j_072 | 0) < (HEAP32[$nrverts >> 2] | 0));
   }
   $23 = HEAP32[$rverts >> 2] | 0;
   FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$23 >> 2] | 0), +HEAPF32[$arrayidx43 >> 2] + $1 * +($add16 + (HEAP32[$23 + 4 >> 2] | 0) | 0), +HEAPF32[$arrayidx52 >> 2] + $0 * +(HEAP32[$23 + 8 >> 2] | 0), $or4_i_i);
   $i_074 = $i_074 + 1 | 0;
  } while (($i_074 | 0) < (HEAP32[$nconts >> 2] | 0));
 }
 $32 = $dd;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 511]($dd);
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 31]($dd, 0, 2.0);
 $35 = HEAP32[$nconts >> 2] | 0;
 if (($35 | 0) > 0) {
  $conts72 = $cset | 0;
  $arrayidx104 = $cset + 12 | 0;
  $arrayidx114 = $cset + 16 | 0;
  $36 = $dd;
  $shl3_i = ($conv & 255) << 24;
  $or4_i = $shl3_i | 16777215;
  $mul95 = $1 * 2.0;
  $i66_070 = 0;
  $37 = $35;
  while (1) {
   $38 = HEAP32[$conts72 >> 2] | 0;
   $conv76 = HEAPU16[$38 + ($i66_070 * 20 | 0) + 16 >> 1] | 0;
   $40 = $conv76 >>> 2;
   $or4_i_i19 = (($conv76 >>> 1 & 1 | $40 & 2) * 63 | 0) + 63 | $shl3_i | (($40 & 1 | $conv76 >>> 3 & 2) * 16128 | 0) + 16128 | (Math_imul($conv76 >>> 4 & 2 | $conv76 & 1, 4128768) | 0) + 4128768;
   $or_i = $or4_i_i19 >>> 1 & 8355711 | $or4_i_i19 & -16777216;
   $nrverts82 = $38 + ($i66_070 * 20 | 0) + 12 | 0;
   if ((HEAP32[$nrverts82 >> 2] | 0) > 0) {
    $rverts87 = $38 + ($i66_070 * 20 | 0) + 8 | 0;
    $add106 = ($i66_070 & 1) + 1 | 0;
    $j80_068 = 0;
    do {
     $mul86 = $j80_068 << 2;
     $45 = HEAP32[$rverts87 >> 2] | 0;
     $tobool91 = (HEAP32[$45 + (($mul86 | 3) << 2) >> 2] & 65536 | 0) == 0;
     FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$36 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[$arraydecay >> 2] + $0 * +(HEAP32[$45 + ($mul86 << 2) >> 2] | 0), ($tobool91 ? 0.0 : $mul95) + (+HEAPF32[$arrayidx104 >> 2] + $1 * +($add106 + (HEAP32[$45 + (($mul86 | 1) << 2) >> 2] | 0) | 0)), +HEAPF32[$arrayidx114 >> 2] + $0 * +(HEAP32[$45 + (($mul86 | 2) << 2) >> 2] | 0), $tobool91 ? $or_i : $or4_i);
     $j80_068 = $j80_068 + 1 | 0;
    } while (($j80_068 | 0) < (HEAP32[$nrverts82 >> 2] | 0));
    $55 = HEAP32[$nconts >> 2] | 0;
   } else {
    $55 = $37;
   }
   $i66_070 = $i66_070 + 1 | 0;
   if (($i66_070 | 0) >= ($55 | 0)) {
    break;
   } else {
    $37 = $55;
   }
  }
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 511]($dd);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $sub_ptr_lhs_cast29_i = 0, $frm_nxt_182_i = 0, $nchar16_t_081_i = 0, $1 = 0, $conv15_i = 0, $sub_ptr_rhs_cast55_i = 0, $3 = 0, $4 = 0, $sub_ptr_rhs_cast112_i = 0, $5 = 0, $6 = 0, $7 = 0, $nchar16_t_1_i = 0, $frm_nxt_2_i = 0, $inc187_i = 0, $frm_nxt_1_lcssa_i = 0, $retval_0_i = 0, label = 0;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
   $sub_ptr_lhs_cast29_i = $frm_end;
   $nchar16_t_081_i = 0;
   $frm_nxt_182_i = $frm;
   L3 : while (1) {
    $1 = HEAP8[$frm_nxt_182_i >> 0] | 0;
    $conv15_i = $1 & 255;
    do {
     if ($1 << 24 >> 24 > -1) {
      $frm_nxt_2_i = $frm_nxt_182_i + 1 | 0;
      $nchar16_t_1_i = $nchar16_t_081_i;
     } else {
      if (($1 & 255) >>> 0 < 194 >>> 0) {
       $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
       break L1;
      }
      if (($1 & 255) >>> 0 < 224 >>> 0) {
       if (($sub_ptr_lhs_cast29_i - $frm_nxt_182_i | 0) < 2) {
        $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
        break L1;
       }
       if (!((HEAP8[$frm_nxt_182_i + 1 >> 0] & -64) << 24 >> 24 == -128)) {
        $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
        break L1;
       }
       $frm_nxt_2_i = $frm_nxt_182_i + 2 | 0;
       $nchar16_t_1_i = $nchar16_t_081_i;
       break;
      }
      if (($1 & 255) >>> 0 < 240 >>> 0) {
       $sub_ptr_rhs_cast55_i = $frm_nxt_182_i;
       if (($sub_ptr_lhs_cast29_i - $sub_ptr_rhs_cast55_i | 0) < 3) {
        $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
        break L1;
       }
       $3 = HEAP8[$frm_nxt_182_i + 1 >> 0] | 0;
       $4 = HEAP8[$frm_nxt_182_i + 2 >> 0] | 0;
       if (($conv15_i | 0) == 224) {
        if (!(($3 & -32) << 24 >> 24 == -96)) {
         label = 14;
         break L3;
        }
       } else if (($conv15_i | 0) == 237) {
        if (!(($3 & -32) << 24 >> 24 == -128)) {
         label = 16;
         break L3;
        }
       } else {
        if (!(($3 & -64) << 24 >> 24 == -128)) {
         label = 18;
         break L3;
        }
       }
       if (!(($4 & -64) << 24 >> 24 == -128)) {
        $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
        break L1;
       }
       $frm_nxt_2_i = $frm_nxt_182_i + 3 | 0;
       $nchar16_t_1_i = $nchar16_t_081_i;
       break;
      }
      if (!(($1 & 255) >>> 0 < 245 >>> 0)) {
       $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
       break L1;
      }
      $sub_ptr_rhs_cast112_i = $frm_nxt_182_i;
      if (($sub_ptr_lhs_cast29_i - $sub_ptr_rhs_cast112_i | 0) < 4 | ($mx - $nchar16_t_081_i | 0) >>> 0 < 2 >>> 0) {
       $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
       break L1;
      }
      $5 = HEAP8[$frm_nxt_182_i + 1 >> 0] | 0;
      $6 = HEAP8[$frm_nxt_182_i + 2 >> 0] | 0;
      $7 = HEAP8[$frm_nxt_182_i + 3 >> 0] | 0;
      if (($conv15_i | 0) == 240) {
       if (!(($5 + 112 & 255) >>> 0 < 48 >>> 0)) {
        label = 25;
        break L3;
       }
      } else if (($conv15_i | 0) == 244) {
       if (!(($5 & -16) << 24 >> 24 == -128)) {
        label = 27;
        break L3;
       }
      } else {
       if (!(($5 & -64) << 24 >> 24 == -128)) {
        label = 29;
        break L3;
       }
      }
      if (!(($6 & -64) << 24 >> 24 == -128 & ($7 & -64) << 24 >> 24 == -128)) {
       $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
       break L1;
      }
      if ((($5 & 255) << 12 & 196608 | $conv15_i << 18 & 1835008) >>> 0 > 1114111 >>> 0) {
       $frm_nxt_1_lcssa_i = $frm_nxt_182_i;
       break L1;
      }
      $frm_nxt_2_i = $frm_nxt_182_i + 4 | 0;
      $nchar16_t_1_i = $nchar16_t_081_i + 1 | 0;
     }
    } while (0);
    $inc187_i = $nchar16_t_1_i + 1 | 0;
    if ($frm_nxt_2_i >>> 0 < $frm_end >>> 0 & $inc187_i >>> 0 < $mx >>> 0) {
     $nchar16_t_081_i = $inc187_i;
     $frm_nxt_182_i = $frm_nxt_2_i;
    } else {
     $frm_nxt_1_lcssa_i = $frm_nxt_2_i;
     break L1;
    }
   }
   if ((label | 0) == 14) {
    $retval_0_i = $sub_ptr_rhs_cast55_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 16) {
    $retval_0_i = $sub_ptr_rhs_cast55_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 18) {
    $retval_0_i = $sub_ptr_rhs_cast55_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 25) {
    $retval_0_i = $sub_ptr_rhs_cast112_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 27) {
    $retval_0_i = $sub_ptr_rhs_cast112_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 29) {
    $retval_0_i = $sub_ptr_rhs_cast112_i - $frm | 0;
    return $retval_0_i | 0;
   }
  } else {
   $frm_nxt_1_lcssa_i = $frm;
  }
 } while (0);
 $retval_0_i = $frm_nxt_1_lcssa_i - $frm | 0;
 return $retval_0_i | 0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $7 = 0, $8 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $11 = 0, $13 = 0, $__shared_owners__i2 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 112 | 0;
 $__oe = sp + 120 | 0;
 $ref_tmp = sp + 128 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0 >> 0] = HEAP8[11152] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11153] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11154] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11155] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11156] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11157] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep >> 0] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 12, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 16) {
   $7 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($7 << 24 >> 24 | 0) == 45 | ($7 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $7 << 24 >> 24 == 48) {
    $8 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($8 << 24 >> 24 | 0) == 120 | ($8 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $11 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$11 >> 2] | 0, HEAP32[$11 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $13 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $13 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $18 = $__s | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $20 = HEAP32[$__op >> 2] | 0;
  $21 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $19, $arraydecay11, $20, $21, $__iob, $__fl);
  $$etemp$1$0 = 84;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 8 >> 2] & 511]($13 | 0);
 $18 = $__s | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = HEAP32[$__op >> 2] | 0;
 $21 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $19, $arraydecay11, $20, $21, $__iob, $__fl);
 $$etemp$1$0 = 84;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $7 = 0, $8 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $11 = 0, $13 = 0, $__shared_owners__i2 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 136 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 112 | 0;
 $__oe = sp + 120 | 0;
 $ref_tmp = sp + 128 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0 >> 0] = HEAP8[11152] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11153] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11154] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11155] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11156] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11157] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep >> 0] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 12, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i7 | 0) == 16) {
   $7 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($7 << 24 >> 24 | 0) == 45 | ($7 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $7 << 24 >> 24 == 48) {
    $8 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($8 << 24 >> 24 | 0) == 120 | ($8 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $11 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$11 >> 2] | 0, HEAP32[$11 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $13 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $13 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $18 = $__s | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $20 = HEAP32[$__op >> 2] | 0;
  $21 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $19, $arraydecay11, $20, $21, $__iob, $__fl);
  $$etemp$1$0 = 84;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 8 >> 2] & 511]($13 | 0);
 $18 = $__s | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = HEAP32[$__op >> 2] | 0;
 $21 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $19, $arraydecay11, $20, $21, $__iob, $__fl);
 $$etemp$1$0 = 84;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $$etemp$4$0 = 0, $$etemp$4$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 232 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 208 | 0;
 $__oe = sp + 216 | 0;
 $ref_tmp = sp + 224 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else {
   HEAP8[$scevgep >> 0] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 23, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $__v$0, HEAP32[tempVarArgs + 8 >> 2] = $__v$1, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 16) {
   $6 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
  $$etemp$4$0 = 172;
  $$etemp$4$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
 $$etemp$4$0 = 172;
 $$etemp$4$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $$etemp$4$0 = 0, $$etemp$4$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 200 | 0;
 $__oe = sp + 208 | 0;
 $ref_tmp = sp + 216 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep >> 0] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 22, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $__v$0, HEAP32[tempVarArgs + 8 >> 2] = $__v$1, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i7 | 0) == 16) {
   $6 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
  $$etemp$4$0 = 164;
  $$etemp$4$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
 $$etemp$4$0 = 164;
 $$etemp$4$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZL17getPolyMergeValuePtS_PKtRiS2_i($pa, $pb, $verts, $ea, $eb, $nvp) {
 $pa = $pa | 0;
 $pb = $pb | 0;
 $verts = $verts | 0;
 $ea = $ea | 0;
 $eb = $eb | 0;
 $nvp = $nvp | 0;
 var $i_05_i = 0, $inc_i = 0, $retval_0_i = 0, $i_05_i85 = 0, $inc_i88 = 0, $retval_0_i96 = 0, $retval_0_i90 = 0, $2 = 0, $i_0102 = 0, $3 = 0, $5 = 0, $cmp6 = 0, $_ = 0, $_97 = 0, $j_0 = 0, $6 = 0, $add13 = 0, $7 = 0, $cmp18 = 0, $8 = 0, $9 = 0, $mul = 0, $mul47 = 0, $mul50 = 0, $conv_i65 = 0, $conv2_i66 = 0, $conv6_i71 = 0, $mul_i73 = 0, $conv14_i77 = 0, $mul64 = 0, $mul67 = 0, $mul70 = 0, $conv2_i = 0, $conv6_i = 0, $mul_i = 0, $mul85 = 0, $sub89 = 0, $sub100 = 0, $retval_0 = 0, label = 0, $i_0102$looptemp = 0;
 L1 : do {
  if (($nvp | 0) > 0) {
   $i_05_i = 0;
   while (1) {
    $inc_i = $i_05_i + 1 | 0;
    if ((HEAP16[$pa + ($i_05_i << 1) >> 1] | 0) == -1) {
     $retval_0_i = $i_05_i;
     break;
    }
    if (($inc_i | 0) < ($nvp | 0)) {
     $i_05_i = $inc_i;
    } else {
     $retval_0_i = $nvp;
     break;
    }
   }
   $i_05_i85 = 0;
   while (1) {
    $inc_i88 = $i_05_i85 + 1 | 0;
    if ((HEAP16[$pb + ($i_05_i85 << 1) >> 1] | 0) == -1) {
     $retval_0_i90 = $i_05_i85;
     $retval_0_i96 = $retval_0_i;
     break L1;
    }
    if (($inc_i88 | 0) < ($nvp | 0)) {
     $i_05_i85 = $inc_i88;
    } else {
     $retval_0_i90 = $nvp;
     $retval_0_i96 = $retval_0_i;
     break;
    }
   }
  } else {
   $retval_0_i90 = $nvp;
   $retval_0_i96 = $nvp;
  }
 } while (0);
 if (($retval_0_i96 - 2 + $retval_0_i90 | 0) > ($nvp | 0)) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 HEAP32[$ea >> 2] = -1;
 HEAP32[$eb >> 2] = -1;
 if (($retval_0_i96 | 0) > 0) {
  $i_0102 = 0;
  $2 = -1;
 } else {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 while (1) {
  $3 = HEAP16[$pa + ($i_0102 << 1) >> 1] | 0;
  $i_0102$looptemp = $i_0102;
  $i_0102 = $i_0102 + 1 | 0;
  $5 = HEAP16[$pa + ((($i_0102 | 0) == ($retval_0_i96 | 0) ? 0 : $i_0102) << 1) >> 1] | 0;
  $cmp6 = ($3 & 65535) >>> 0 > ($5 & 65535) >>> 0;
  $_ = $cmp6 ? $5 : $3;
  $_97 = $cmp6 ? $3 : $5;
  $j_0 = 0;
  while (1) {
   if (($j_0 | 0) >= ($retval_0_i90 | 0)) {
    $8 = $2;
    break;
   }
   $6 = HEAP16[$pb + ($j_0 << 1) >> 1] | 0;
   $add13 = $j_0 + 1 | 0;
   $7 = HEAP16[$pb + ((($add13 | 0) % ($retval_0_i90 | 0) | 0) << 1) >> 1] | 0;
   $cmp18 = ($6 & 65535) >>> 0 > ($7 & 65535) >>> 0;
   if ($_ << 16 >> 16 == ($cmp18 ? $7 : $6) << 16 >> 16 & $_97 << 16 >> 16 == ($cmp18 ? $6 : $7) << 16 >> 16) {
    label = 12;
    break;
   } else {
    $j_0 = $add13;
   }
  }
  if ((label | 0) == 12) {
   label = 0;
   HEAP32[$ea >> 2] = $i_0102$looptemp;
   HEAP32[$eb >> 2] = $j_0;
   $8 = $j_0;
  }
  if (($i_0102 | 0) >= ($retval_0_i96 | 0)) {
   break;
  } else {
   $2 = $8;
  }
 }
 $9 = HEAP32[$ea >> 2] | 0;
 if (($9 | 0) == -1 | ($8 | 0) == -1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $mul = (HEAPU16[$pa + ((($retval_0_i96 - 1 + $9 | 0) % ($retval_0_i96 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
 $mul47 = (HEAPU16[$pa + ($9 << 1) >> 1] | 0) * 3 | 0;
 $mul50 = (HEAPU16[$pb + ((($8 + 2 | 0) % ($retval_0_i90 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
 $conv_i65 = HEAPU16[$verts + ($mul47 << 1) >> 1] | 0;
 $conv2_i66 = HEAPU16[$verts + ($mul << 1) >> 1] | 0;
 $conv6_i71 = HEAPU16[$verts + ($mul + 2 << 1) >> 1] | 0;
 $mul_i73 = Math_imul((HEAPU16[$verts + ($mul50 + 2 << 1) >> 1] | 0) - $conv6_i71 | 0, $conv_i65 - $conv2_i66 | 0) | 0;
 $conv14_i77 = HEAPU16[$verts + ($mul47 + 2 << 1) >> 1] | 0;
 if (($mul_i73 - (Math_imul($conv14_i77 - $conv6_i71 | 0, (HEAPU16[$verts + ($mul50 << 1) >> 1] | 0) - $conv2_i66 | 0) | 0) | 0) >= 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $mul64 = (HEAPU16[$pb + ((($retval_0_i90 - 1 + $8 | 0) % ($retval_0_i90 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
 $mul67 = (HEAPU16[$pb + ($8 << 1) >> 1] | 0) * 3 | 0;
 $mul70 = (HEAPU16[$pa + ((($9 + 2 | 0) % ($retval_0_i96 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
 $conv2_i = HEAPU16[$verts + ($mul64 << 1) >> 1] | 0;
 $conv6_i = HEAPU16[$verts + ($mul64 + 2 << 1) >> 1] | 0;
 $mul_i = Math_imul((HEAPU16[$verts + ($mul70 + 2 << 1) >> 1] | 0) - $conv6_i | 0, (HEAPU16[$verts + ($mul67 << 1) >> 1] | 0) - $conv2_i | 0) | 0;
 if (($mul_i - (Math_imul((HEAPU16[$verts + ($mul67 + 2 << 1) >> 1] | 0) - $conv6_i | 0, (HEAPU16[$verts + ($mul70 << 1) >> 1] | 0) - $conv2_i | 0) | 0) | 0) >= 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $mul85 = (HEAPU16[$pa + ((($9 + 1 | 0) % ($retval_0_i96 | 0) | 0) << 1) >> 1] | 0) * 3 | 0;
 $sub89 = $conv_i65 - (HEAPU16[$verts + ($mul85 << 1) >> 1] | 0) | 0;
 $sub100 = $conv14_i77 - (HEAPU16[$verts + ($mul85 + 2 << 1) >> 1] | 0) | 0;
 $retval_0 = (Math_imul($sub100, $sub100) | 0) + (Math_imul($sub89, $sub89) | 0) | 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $8 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $$etemp$4$0 = 0, $$etemp$4$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 88 | 0;
 $ref_tmp = sp + 96 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else {
   HEAP8[$scevgep >> 0] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 23, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $__v$0, HEAP32[tempVarArgs + 8 >> 2] = $__v$1, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 16) {
   $6 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $8 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $8, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $8, $19, $20, $__iob, $__fl);
  $$etemp$4$0 = 43;
  $$etemp$4$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $8, $19, $20, $__iob, $__fl);
 $$etemp$4$0 = 43;
 $$etemp$4$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg_result, $this, $__s, $__iob, $__fl, $__v$0, $__v$1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v$0 = $__v$0 | 0;
 $__v$1 = $__v$1 | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $arraydecay = 0, $add_ptr = 0, $__fmtflags__i = 0, $0 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $8 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $$etemp$4$0 = 0, $$etemp$4$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 104 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 88 | 0;
 $ref_tmp = sp + 96 | 0;
 HEAP32[$__fmt >> 2] = 37;
 HEAP32[$__fmt + 4 >> 2] = 0;
 $arraydecay = $__fmt;
 $add_ptr = $arraydecay + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $0 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($0 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $arraydecay + 2 | 0;
 }
 if (($0 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 HEAP8[$__fmtp_addr_113_i_ph + 1 >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 2 | 0;
 $and9_i = $0 & 74;
 do {
  if (($and9_i | 0) == 8) {
   if (($0 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else {
   HEAP8[$scevgep >> 0] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 22, HEAP32[5446] | 0, $arraydecay, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $__v$0, HEAP32[tempVarArgs + 8 >> 2] = $__v$1, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 16) {
   $6 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $8 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $8, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $8, $19, $20, $__iob, $__fl);
  $$etemp$4$0 = 41;
  $$etemp$4$1 = 0;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $8, $19, $20, $__iob, $__fl);
 $$etemp$4$0 = 41;
 $$etemp$4$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZN9dtNavMesh4initEPK15dtNavMeshParams($this, $params) {
 $this = $this | 0;
 $params = $params | 0;
 var $0 = 0, $1 = 0, $maxTiles = 0, $7 = 0, $m_maxTiles = 0, $dec_i48 = 0, $or_i50 = 0, $or2_i52 = 0, $or4_i54 = 0, $or6_i56 = 0, $inc_i59 = 0, $m_tileLutSize = 0, $_call = 0, $call_i_i = 0, $m_tiles = 0, $call_i_i1 = 0, $m_posLookup = 0, $m_nextFree = 0, $17 = 0, $18 = 0, $arrayidx3363 = 0, $i_062_in = 0, $i_062 = 0, $dec_i36 = 0, $or_i38 = 0, $or2_i40 = 0, $or4_i42 = 0, $or6_i44 = 0, $inc_i47 = 0, $shl_i17 = 0, $shr_i18 = 0, $shl3_i21 = 0, $shr4_i22 = 0, $shl7_i26 = 0, $shr8_i27 = 0, $shl12_i31 = 0, $or16_i35 = 0, $dec_i = 0, $or_i14 = 0, $or2_i = 0, $or4_i = 0, $or6_i = 0, $inc_i = 0, $shl_i = 0, $shr_i = 0, $shl3_i = 0, $shr4_i = 0, $shl7_i = 0, $shr8_i = 0, $shl12_i = 0, $or16_i = 0, $sub43 = 0, $cond_i = 0, $retval_0 = 0;
 $0 = $this;
 $1 = $params;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 HEAP32[$0 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 HEAP32[$0 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 HEAP32[$0 + 24 >> 2] = HEAP32[$1 + 24 >> 2];
 HEAPF32[$this + 28 >> 2] = +HEAPF32[$params >> 2];
 HEAPF32[$this + 32 >> 2] = +HEAPF32[$params + 4 >> 2];
 HEAPF32[$this + 36 >> 2] = +HEAPF32[$params + 8 >> 2];
 HEAPF32[$this + 40 >> 2] = +HEAPF32[$params + 12 >> 2];
 HEAPF32[$this + 44 >> 2] = +HEAPF32[$params + 16 >> 2];
 $maxTiles = $params + 20 | 0;
 $7 = HEAP32[$maxTiles >> 2] | 0;
 $m_maxTiles = $this + 48 | 0;
 HEAP32[$m_maxTiles >> 2] = $7;
 $dec_i48 = (($7 | 0) / 4 | 0) - 1 | 0;
 $or_i50 = $dec_i48 >>> 1 | $dec_i48;
 $or2_i52 = $or_i50 >>> 2 | $or_i50;
 $or4_i54 = $or2_i52 >>> 4 | $or2_i52;
 $or6_i56 = $or4_i54 >>> 8 | $or4_i54;
 $inc_i59 = ($or6_i56 >>> 16 | $or6_i56) + 1 | 0;
 $m_tileLutSize = $this + 52 | 0;
 $_call = ($inc_i59 | 0) == 0 ? 1 : $inc_i59;
 HEAP32[$m_tileLutSize >> 2] = $_call;
 HEAP32[$this + 56 >> 2] = $_call - 1;
 $call_i_i = _malloc($7 * 60 | 0) | 0;
 $m_tiles = $this + 68 | 0;
 HEAP32[$m_tiles >> 2] = $call_i_i;
 if (($call_i_i | 0) == 0) {
  $retval_0 = -2147483644;
  return $retval_0 | 0;
 }
 $call_i_i1 = _malloc(HEAP32[$m_tileLutSize >> 2] << 2) | 0;
 $m_posLookup = $this + 60 | 0;
 HEAP32[$m_posLookup >> 2] = $call_i_i1;
 if (($call_i_i1 | 0) == 0) {
  $retval_0 = -2147483644;
  return $retval_0 | 0;
 }
 _memset(HEAP32[$m_tiles >> 2] | 0, 0, (HEAP32[$m_maxTiles >> 2] | 0) * 60 | 0 | 0) | 0;
 _memset(HEAP32[$m_posLookup >> 2] | 0, 0, HEAP32[$m_tileLutSize >> 2] << 2 | 0) | 0;
 $m_nextFree = $this + 64 | 0;
 HEAP32[$m_nextFree >> 2] = 0;
 $17 = HEAP32[$m_maxTiles >> 2] | 0;
 if (($17 | 0) > 0) {
  $18 = HEAP32[$m_tiles >> 2] | 0;
  $i_062_in = $17;
  $arrayidx3363 = 0;
  while (1) {
   $i_062 = $i_062_in - 1 | 0;
   HEAP32[$18 + ($i_062 * 60 | 0) >> 2] = 1;
   HEAP32[$18 + ($i_062 * 60 | 0) + 56 >> 2] = $arrayidx3363;
   if (($i_062 | 0) > 0) {
    $i_062_in = $i_062;
    $arrayidx3363 = $18 + ($i_062 * 60 | 0) | 0;
   } else {
    break;
   }
  }
  HEAP32[$m_nextFree >> 2] = $18;
 }
 $dec_i36 = (HEAP32[$maxTiles >> 2] | 0) - 1 | 0;
 $or_i38 = $dec_i36 >>> 1 | $dec_i36;
 $or2_i40 = $or_i38 >>> 2 | $or_i38;
 $or4_i42 = $or2_i40 >>> 4 | $or2_i40;
 $or6_i44 = $or4_i42 >>> 8 | $or4_i42;
 $inc_i47 = ($or6_i44 >>> 16 | $or6_i44) + 1 | 0;
 $shl_i17 = ($inc_i47 >>> 0 > 65535 >>> 0) << 4;
 $shr_i18 = $inc_i47 >>> ($shl_i17 >>> 0);
 $shl3_i21 = ($shr_i18 >>> 0 > 255 >>> 0) << 3;
 $shr4_i22 = $shr_i18 >>> ($shl3_i21 >>> 0);
 $shl7_i26 = ($shr4_i22 >>> 0 > 15 >>> 0) << 2;
 $shr8_i27 = $shr4_i22 >>> ($shl7_i26 >>> 0);
 $shl12_i31 = ($shr8_i27 >>> 0 > 3 >>> 0) << 1;
 $or16_i35 = $shl3_i21 | $shl_i17 | $shl7_i26 | $shl12_i31 | $shr8_i27 >>> ($shl12_i31 >>> 0) >>> 1;
 HEAP32[$this + 76 >> 2] = $or16_i35;
 $dec_i = (HEAP32[$params + 24 >> 2] | 0) - 1 | 0;
 $or_i14 = $dec_i >>> 1 | $dec_i;
 $or2_i = $or_i14 >>> 2 | $or_i14;
 $or4_i = $or2_i >>> 4 | $or2_i;
 $or6_i = $or4_i >>> 8 | $or4_i;
 $inc_i = ($or6_i >>> 16 | $or6_i) + 1 | 0;
 $shl_i = ($inc_i >>> 0 > 65535 >>> 0) << 4;
 $shr_i = $inc_i >>> ($shl_i >>> 0);
 $shl3_i = ($shr_i >>> 0 > 255 >>> 0) << 3;
 $shr4_i = $shr_i >>> ($shl3_i >>> 0);
 $shl7_i = ($shr4_i >>> 0 > 15 >>> 0) << 2;
 $shr8_i = $shr4_i >>> ($shl7_i >>> 0);
 $shl12_i = ($shr8_i >>> 0 > 3 >>> 0) << 1;
 $or16_i = $shl3_i | $shl_i | $shl7_i | $shl12_i | $shr8_i >>> ($shl12_i >>> 0) >>> 1;
 HEAP32[$this + 80 >> 2] = $or16_i;
 $sub43 = 32 - $or16_i35 - $or16_i | 0;
 $cond_i = $sub43 >>> 0 > 31 >>> 0 ? 31 : $sub43;
 HEAP32[$this + 72 >> 2] = $cond_i;
 $retval_0 = $cond_i >>> 0 < 10 >>> 0 ? -2147483640 : 1073741824;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $7 = 0, $8 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 72 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 48 | 0;
 $__oe = sp + 56 | 0;
 $ref_tmp = sp + 64 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0 >> 0] = HEAP8[11152] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11153] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11154] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11155] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11156] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11157] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else {
   HEAP8[$scevgep >> 0] = 117;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 12, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else if (($and_i7 | 0) == 16) {
   $7 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($7 << 24 >> 24 | 0) == 45 | ($7 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $7 << 24 >> 24 == 48) {
    $8 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($8 << 24 >> 24 | 0) == 120 | ($8 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__fmt = 0, $__nar = 0, $__o = 0, $__op = 0, $__oe = 0, $ref_tmp = 0, $0 = 0, $add_ptr = 0, $__fmtflags__i = 0, $1 = 0, $__fmtp_addr_0_i = 0, $__fmtp_addr_113_i_ph = 0, $scevgep = 0, $and9_i = 0, $arraydecay2 = 0, $call_i6 = 0, $call5 = 0, $add_ptr7 = 0, $and_i7 = 0, $7 = 0, $8 = 0, $retval_0_i = 0, $arraydecay11 = 0, $__locale__i_i = 0, $__locale_2_i_i8 = 0, $10 = 0, $12 = 0, $__shared_owners__i2 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 72 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__fmt = sp | 0;
 $__nar = sp + 8 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 48 | 0;
 $__oe = sp + 56 | 0;
 $ref_tmp = sp + 64 | 0;
 $0 = $__fmt | 0;
 HEAP8[$0 >> 0] = HEAP8[11152] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11153] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11154] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11155] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11156] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11157] | 0;
 $add_ptr = $__fmt + 1 | 0;
 $__fmtflags__i = $__iob + 4 | 0;
 $1 = HEAP32[$__fmtflags__i >> 2] | 0;
 if (($1 & 2048 | 0) == 0) {
  $__fmtp_addr_0_i = $add_ptr;
 } else {
  HEAP8[$add_ptr >> 0] = 43;
  $__fmtp_addr_0_i = $__fmt + 2 | 0;
 }
 if (($1 & 512 | 0) == 0) {
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i;
 } else {
  HEAP8[$__fmtp_addr_0_i >> 0] = 35;
  $__fmtp_addr_113_i_ph = $__fmtp_addr_0_i + 1 | 0;
 }
 HEAP8[$__fmtp_addr_113_i_ph >> 0] = 108;
 $scevgep = $__fmtp_addr_113_i_ph + 1 | 0;
 $and9_i = $1 & 74;
 do {
  if (($and9_i | 0) == 8) {
   if (($1 & 16384 | 0) == 0) {
    HEAP8[$scevgep >> 0] = 120;
    break;
   } else {
    HEAP8[$scevgep >> 0] = 88;
    break;
   }
  } else if (($and9_i | 0) == 64) {
   HEAP8[$scevgep >> 0] = 111;
  } else {
   HEAP8[$scevgep >> 0] = 100;
  }
 } while (0);
 $arraydecay2 = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i6 = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i6;
  }
 }
 $call5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2, 12, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr7 = $__nar + $call5 | 0;
 $and_i7 = HEAP32[$__fmtflags__i >> 2] & 176;
 do {
  if (($and_i7 | 0) == 16) {
   $7 = HEAP8[$arraydecay2 >> 0] | 0;
   if (($7 << 24 >> 24 | 0) == 45 | ($7 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call5 | 0) > 1 & $7 << 24 >> 24 == 48) {
    $8 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($8 << 24 >> 24 | 0) == 120 | ($8 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 22;
    }
   } else {
    label = 22;
   }
  } else if (($and_i7 | 0) == 32) {
   $retval_0_i = $add_ptr7;
  } else {
   label = 22;
  }
 } while (0);
 if ((label | 0) == 22) {
  $retval_0_i = $arraydecay2;
 }
 $arraydecay11 = $__o | 0;
 $__locale__i_i = $ref_tmp | 0;
 $__locale_2_i_i8 = HEAP32[$__iob + 28 >> 2] | 0;
 HEAP32[$__locale__i_i >> 2] = $__locale_2_i_i8;
 $10 = $__locale_2_i_i8 + 4 | 0;
 tempValue = HEAP32[$10 >> 2] | 0, HEAP32[$10 >> 2] = tempValue + 1, tempValue;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2, $retval_0_i, $add_ptr7, $arraydecay11, $__op, $__oe, $ref_tmp);
 $12 = HEAP32[$__locale__i_i >> 2] | 0;
 $__shared_owners__i2 = $12 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i2 >> 2] | 0, HEAP32[$__shared_owners__i2 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $17 = $__s | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  $19 = HEAP32[$__op >> 2] | 0;
  $20 = HEAP32[$__oe >> 2] | 0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 511]($12 | 0);
 $17 = $__s | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = HEAP32[$__op >> 2] | 0;
 $20 = HEAP32[$__oe >> 2] | 0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $18, $arraydecay11, $19, $20, $__iob, $__fl);
 STACKTOP = sp;
 return;
}
function __Z15findNearestPolyffffffNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($cx, $cy, $cz, $ex, $ey, $ez, $callback) {
 $cx = +$cx;
 $cy = +$cy;
 $cz = +$cz;
 $ex = +$ex;
 $ey = +$ey;
 $ez = +$ez;
 $callback = $callback | 0;
 var $p = 0, $filter = 0, $ref = 0, $0 = 0, $arrayinit_begin = 0, $m_includeFlags_i1 = 0, $m_excludeFlags_i2 = 0, $i_03_i = 0, $call = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and10_i_i = 0, $and11_i_i = 0, $9 = 0, $11 = 0, $header10 = 0, $verts = 0, $retval_0_i_ph = 0, $i_013 = 0, $14 = 0, $conv16 = 0.0, $conv18 = 0.0, $cond_i_i_i = 0, $call24 = 0, $$etemp$2$0 = 0, $$etemp$2$1 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, tempVarArgs = 0, sp = 0, $i_013$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 $p = sp + 512 | 0;
 $filter = sp + 528 | 0;
 $ref = sp + 792 | 0;
 _emscripten_run_script(7064);
 $0 = sp | 0;
 $arrayinit_begin = $p | 0;
 HEAPF32[$arrayinit_begin >> 2] = $cx;
 HEAPF32[$p + 4 >> 2] = $cy;
 HEAPF32[$p + 8 >> 2] = $cz;
 $m_includeFlags_i1 = $filter + 256 | 0;
 HEAP16[$m_includeFlags_i1 >> 1] = -1;
 $m_excludeFlags_i2 = $filter + 258 | 0;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $i_03_i = 0;
 do {
  HEAPF32[$filter + ($i_03_i << 2) >> 2] = 1.0;
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 HEAP16[$m_includeFlags_i1 >> 1] = 3;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 HEAP32[$ref >> 2] = 0;
 $call = __ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin, $ex, $ey, $ez, $filter, $ref, 0) | 0;
 L4 : do {
  if (($call | 0) < 0) {
   _printf(6056, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $call, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  } else {
   $3 = HEAP32[4912] | 0;
   $4 = HEAP32[$ref >> 2] | 0;
   if (($4 | 0) == 0) {
    $retval_0_i_ph = -2147483648;
   } else {
    $5 = HEAP32[$3 + 76 >> 2] | 0;
    $6 = HEAP32[$3 + 80 >> 2] | 0;
    $and10_i_i = $4 >>> ($6 >>> 0) & (1 << $5) - 1;
    $and11_i_i = (1 << $6) - 1 & $4;
    if ($and10_i_i >>> 0 < (HEAP32[$3 + 48 >> 2] | 0) >>> 0) {
     $9 = HEAP32[$3 + 68 >> 2] | 0;
     if ((HEAP32[$9 + ($and10_i_i * 60 | 0) >> 2] | 0) == ((1 << HEAP32[$3 + 72 >> 2]) - 1 & $4 >>> (($6 + $5 | 0) >>> 0) | 0)) {
      $11 = HEAP32[$9 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
      if (($11 | 0) == 0) {
       $retval_0_i_ph = -2147483640;
      } else {
       if ($and11_i_i >>> 0 < (HEAP32[$11 + 24 >> 2] | 0) >>> 0) {
        $header10 = $9 + ($and10_i_i * 60 | 0) + 8 | 0;
        if ((HEAP32[$11 + 28 >> 2] | 0) <= 0) {
         break;
        }
        $verts = $9 + ($and10_i_i * 60 | 0) + 16 | 0;
        $i_013 = 0;
        while (1) {
         $14 = HEAP32[$verts >> 2] | 0;
         $i_013$looptemp = $i_013;
         $i_013 = $i_013 + 1 | 0;
         $conv16 = +HEAPF32[$14 + ($i_013 << 2) >> 2];
         $conv18 = +HEAPF32[$14 + ($i_013$looptemp + 2 << 2) >> 2];
         _sprintf($0 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[$14 + ($i_013$looptemp << 2) >> 2], HEAPF64[tempVarArgs + 8 >> 3] = $conv16, HEAPF64[tempVarArgs + 16 >> 3] = $conv18, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         _emscripten_run_script($0 | 0);
         if (($i_013 | 0) >= (HEAP32[(HEAP32[$header10 >> 2] | 0) + 28 >> 2] | 0)) {
          break L4;
         }
        }
       } else {
        $retval_0_i_ph = -2147483640;
       }
      }
     } else {
      $retval_0_i_ph = -2147483640;
     }
    } else {
     $retval_0_i_ph = -2147483640;
    }
   }
   _printf(6e3, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $4, HEAP32[tempVarArgs + 8 >> 2] = $retval_0_i_ph, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
 } while (0);
 if ((HEAP8[$callback >> 0] & 1) == 0) {
  $cond_i_i_i = $callback + 1 | 0;
  $call24 = _sprintf($0 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$2$0 = 260;
  $$etemp$2$1 = 0;
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
  $call24 = _sprintf($0 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$2$0 = 260;
  $$etemp$2$1 = 0;
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 }
}
function __Z24getNavHeightfieldRegionsNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($callback) {
 $callback = $callback | 0;
 var $0 = 0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $y_037 = 0, $9 = 0, $10 = 0, $mul18 = 0.0, $11 = 0, $12 = 0, $x_034 = 0, $add = 0.0, $add19 = 0.0, $add22 = 0, $bf_load = 0, $bf_clear = 0, $add27 = 0, $conv47 = 0.0, $conv49 = 0.0, $conv56 = 0.0, $conv61 = 0.0, $17 = 0, $i_031 = 0, $conv48 = 0.0, $inc = 0, $_pre39 = 0, $21 = 0, $inc75 = 0, $22 = 0, $23 = 0, $cond_i_i_i = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1536 | 0;
 $0 = HEAP32[4922] | 0;
 if (($0 | 0) == 0) {
  _puts(208) | 0;
  STACKTOP = sp;
  return;
 }
 $1 = +HEAPF32[$0 + 52 >> 2];
 $2 = +HEAPF32[$0 + 56 >> 2];
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = sp + 1024 | 0;
 _sprintf($5 | 0, 6176, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAPF64[tempVarArgs >> 3] = $1, HEAPF64[tempVarArgs + 8 >> 3] = $2, HEAP32[tempVarArgs + 16 >> 2] = $3, HEAP32[tempVarArgs + 24 >> 2] = $4, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $6 = sp | 0;
 _sprintf($6 | 0, 7600, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $5, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($6 | 0);
 _emscripten_run_script(7064);
 if ((HEAP32[(HEAP32[4922] | 0) + 4 >> 2] | 0) > 0) {
  $y_037 = 0;
  do {
   _printf(6144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $y_037, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $9 = HEAP32[4922] | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   if (($10 | 0) > 0) {
    $mul18 = $1 * +($y_037 | 0);
    $x_034 = 0;
    $12 = $9;
    $11 = $10;
    while (1) {
     $add = $1 * +($x_034 | 0) + +HEAPF32[$12 + 28 >> 2];
     $add19 = $mul18 + +HEAPF32[$12 + 36 >> 2];
     $add22 = (Math_imul($11, $y_037) | 0) + $x_034 | 0;
     $bf_load = HEAP32[(HEAP32[$12 + 60 >> 2] | 0) + ($add22 << 2) >> 2] | 0;
     $bf_clear = $bf_load & 16777215;
     $add27 = $bf_clear + ($bf_load >>> 24) | 0;
     if ($bf_clear >>> 0 < $add27 >>> 0) {
      $conv47 = $add;
      $conv49 = $add19;
      $conv56 = $1 + $add19;
      $conv61 = $1 + $add;
      $i_031 = $bf_clear;
      $17 = $12;
      while (1) {
       $conv48 = +HEAPF32[$17 + 32 >> 2] + $2 * +(HEAPU16[(HEAP32[$17 + 64 >> 2] | 0) + ($i_031 << 3) >> 1] | 0 | 0);
       _sprintf($5 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $conv47, HEAPF64[tempVarArgs + 8 >> 3] = $conv48, HEAPF64[tempVarArgs + 16 >> 3] = $conv49, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _emscripten_run_script($5 | 0);
       _sprintf($5 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $conv47, HEAPF64[tempVarArgs + 8 >> 3] = $conv48, HEAPF64[tempVarArgs + 16 >> 3] = $conv56, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _emscripten_run_script($5 | 0);
       _sprintf($5 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $conv61, HEAPF64[tempVarArgs + 8 >> 3] = $conv48, HEAPF64[tempVarArgs + 16 >> 3] = $conv56, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _emscripten_run_script($5 | 0);
       _sprintf($5 | 0, 6808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $conv61, HEAPF64[tempVarArgs + 8 >> 3] = $conv48, HEAPF64[tempVarArgs + 16 >> 3] = $conv49, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _emscripten_run_script($5 | 0);
       $inc = $i_031 + 1 | 0;
       $_pre39 = HEAP32[4922] | 0;
       if ($inc >>> 0 < $add27 >>> 0) {
        $i_031 = $inc;
        $17 = $_pre39;
       } else {
        $21 = $_pre39;
        break;
       }
      }
     } else {
      $21 = $12;
     }
     $inc75 = $x_034 + 1 | 0;
     $22 = HEAP32[$21 >> 2] | 0;
     if (($inc75 | 0) < ($22 | 0)) {
      $x_034 = $inc75;
      $12 = $21;
      $11 = $22;
     } else {
      $23 = $21;
      break;
     }
    }
   } else {
    $23 = $9;
   }
   $y_037 = $y_037 + 1 | 0;
  } while (($y_037 | 0) < (HEAP32[$23 + 4 >> 2] | 0));
 }
 if ((HEAP8[$callback >> 0] & 1) == 0) {
  $cond_i_i_i = $callback + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
 }
 _sprintf($5 | 0, 6720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($5 | 0);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $sub_ptr_lhs_cast29_i = 0, $frm_nxt_177_i = 0, $nchar32_t_076_i = 0, $1 = 0, $conv15_i = 0, $sub_ptr_rhs_cast53_i = 0, $3 = 0, $4 = 0, $sub_ptr_rhs_cast110_i = 0, $5 = 0, $6 = 0, $7 = 0, $frm_nxt_2_i = 0, $inc_i = 0, $frm_nxt_1_lcssa_i = 0, $retval_0_i = 0, label = 0;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
   $sub_ptr_lhs_cast29_i = $frm_end;
   $nchar32_t_076_i = 0;
   $frm_nxt_177_i = $frm;
   L3 : while (1) {
    $1 = HEAP8[$frm_nxt_177_i >> 0] | 0;
    $conv15_i = $1 & 255;
    do {
     if ($1 << 24 >> 24 > -1) {
      $frm_nxt_2_i = $frm_nxt_177_i + 1 | 0;
     } else {
      if (($1 & 255) >>> 0 < 194 >>> 0) {
       $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
       break L1;
      }
      if (($1 & 255) >>> 0 < 224 >>> 0) {
       if (($sub_ptr_lhs_cast29_i - $frm_nxt_177_i | 0) < 2) {
        $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
        break L1;
       }
       if (!((HEAP8[$frm_nxt_177_i + 1 >> 0] & -64) << 24 >> 24 == -128)) {
        $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
        break L1;
       }
       $frm_nxt_2_i = $frm_nxt_177_i + 2 | 0;
       break;
      }
      if (($1 & 255) >>> 0 < 240 >>> 0) {
       $sub_ptr_rhs_cast53_i = $frm_nxt_177_i;
       if (($sub_ptr_lhs_cast29_i - $sub_ptr_rhs_cast53_i | 0) < 3) {
        $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
        break L1;
       }
       $3 = HEAP8[$frm_nxt_177_i + 1 >> 0] | 0;
       $4 = HEAP8[$frm_nxt_177_i + 2 >> 0] | 0;
       if (($conv15_i | 0) == 224) {
        if (!(($3 & -32) << 24 >> 24 == -96)) {
         label = 14;
         break L3;
        }
       } else if (($conv15_i | 0) == 237) {
        if (!(($3 & -32) << 24 >> 24 == -128)) {
         label = 16;
         break L3;
        }
       } else {
        if (!(($3 & -64) << 24 >> 24 == -128)) {
         label = 18;
         break L3;
        }
       }
       if (!(($4 & -64) << 24 >> 24 == -128)) {
        $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
        break L1;
       }
       $frm_nxt_2_i = $frm_nxt_177_i + 3 | 0;
       break;
      }
      if (!(($1 & 255) >>> 0 < 245 >>> 0)) {
       $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
       break L1;
      }
      $sub_ptr_rhs_cast110_i = $frm_nxt_177_i;
      if (($sub_ptr_lhs_cast29_i - $sub_ptr_rhs_cast110_i | 0) < 4) {
       $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
       break L1;
      }
      $5 = HEAP8[$frm_nxt_177_i + 1 >> 0] | 0;
      $6 = HEAP8[$frm_nxt_177_i + 2 >> 0] | 0;
      $7 = HEAP8[$frm_nxt_177_i + 3 >> 0] | 0;
      if (($conv15_i | 0) == 240) {
       if (!(($5 + 112 & 255) >>> 0 < 48 >>> 0)) {
        label = 25;
        break L3;
       }
      } else if (($conv15_i | 0) == 244) {
       if (!(($5 & -16) << 24 >> 24 == -128)) {
        label = 27;
        break L3;
       }
      } else {
       if (!(($5 & -64) << 24 >> 24 == -128)) {
        label = 29;
        break L3;
       }
      }
      if (!(($6 & -64) << 24 >> 24 == -128 & ($7 & -64) << 24 >> 24 == -128)) {
       $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
       break L1;
      }
      if ((($5 & 255) << 12 & 196608 | $conv15_i << 18 & 1835008) >>> 0 > 1114111 >>> 0) {
       $frm_nxt_1_lcssa_i = $frm_nxt_177_i;
       break L1;
      }
      $frm_nxt_2_i = $frm_nxt_177_i + 4 | 0;
     }
    } while (0);
    $inc_i = $nchar32_t_076_i + 1 | 0;
    if ($frm_nxt_2_i >>> 0 < $frm_end >>> 0 & $inc_i >>> 0 < $mx >>> 0) {
     $nchar32_t_076_i = $inc_i;
     $frm_nxt_177_i = $frm_nxt_2_i;
    } else {
     $frm_nxt_1_lcssa_i = $frm_nxt_2_i;
     break L1;
    }
   }
   if ((label | 0) == 14) {
    $retval_0_i = $sub_ptr_rhs_cast53_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 16) {
    $retval_0_i = $sub_ptr_rhs_cast53_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 18) {
    $retval_0_i = $sub_ptr_rhs_cast53_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 25) {
    $retval_0_i = $sub_ptr_rhs_cast110_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 27) {
    $retval_0_i = $sub_ptr_rhs_cast110_i - $frm | 0;
    return $retval_0_i | 0;
   } else if ((label | 0) == 29) {
    $retval_0_i = $sub_ptr_rhs_cast110_i - $frm | 0;
    return $retval_0_i | 0;
   }
  } else {
   $frm_nxt_1_lcssa_i = $frm;
  }
 } while (0);
 $retval_0_i = $frm_nxt_1_lcssa_i - $frm | 0;
 return $retval_0_i | 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $sub_ptr_lhs_cast67_i = 0, $sub_ptr_lhs_cast12_i = 0, $_frm_nxt_0 = 0, $_to_nxt_0 = 0, $1 = 0, $conv_i = 0, $arrayidx_i = 0, $conv73_i = 0, $and85_i = 0, $add101_i = 0, $_frm_nxt_1 = 0, $_to_nxt_1 = 0, $incdec_ptr165_i = 0, $_frm_nxt_2 = 0, $_to_nxt_2 = 0, $retval_0_i = 0;
 $sub_ptr_lhs_cast67_i = $frm_end;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast12_i = $to_end;
   $_to_nxt_0 = $to;
   $_frm_nxt_0 = $frm;
   while (1) {
    $1 = HEAP16[$_frm_nxt_0 >> 1] | 0;
    $conv_i = $1 & 65535;
    do {
     if (($1 & 65535) >>> 0 < 128 >>> 0) {
      if (($sub_ptr_lhs_cast12_i - $_to_nxt_0 | 0) < 1) {
       $retval_0_i = 1;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_2 = $_frm_nxt_0;
       break L1;
      }
      HEAP8[$_to_nxt_0 >> 0] = $1;
      $_to_nxt_1 = $_to_nxt_0 + 1 | 0;
      $_frm_nxt_1 = $_frm_nxt_0;
     } else {
      if (($1 & 65535) >>> 0 < 2048 >>> 0) {
       if (($sub_ptr_lhs_cast12_i - $_to_nxt_0 | 0) < 2) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_2 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $conv_i >>> 6 | 192;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $conv_i & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 2 | 0;
       $_frm_nxt_1 = $_frm_nxt_0;
       break;
      }
      if (($1 & 65535) >>> 0 < 55296 >>> 0) {
       if (($sub_ptr_lhs_cast12_i - $_to_nxt_0 | 0) < 3) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_2 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $conv_i >>> 12 | 224;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $conv_i >>> 6 & 63 | 128;
       HEAP8[$_to_nxt_0 + 2 >> 0] = $conv_i & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 3 | 0;
       $_frm_nxt_1 = $_frm_nxt_0;
       break;
      }
      if (!(($1 & 65535) >>> 0 < 56320 >>> 0)) {
       if (($1 & 65535) >>> 0 < 57344 >>> 0) {
        $retval_0_i = 2;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_2 = $_frm_nxt_0;
        break L1;
       }
       if (($sub_ptr_lhs_cast12_i - $_to_nxt_0 | 0) < 3) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_2 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $conv_i >>> 12 | 224;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $conv_i >>> 6 & 63 | 128;
       HEAP8[$_to_nxt_0 + 2 >> 0] = $conv_i & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 3 | 0;
       $_frm_nxt_1 = $_frm_nxt_0;
       break;
      }
      if (($sub_ptr_lhs_cast67_i - $_frm_nxt_0 | 0) < 4) {
       $retval_0_i = 1;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_2 = $_frm_nxt_0;
       break L1;
      }
      $arrayidx_i = $_frm_nxt_0 + 2 | 0;
      $conv73_i = HEAPU16[$arrayidx_i >> 1] | 0;
      if (($conv73_i & 64512 | 0) != 56320) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_2 = $_frm_nxt_0;
       break L1;
      }
      if (($sub_ptr_lhs_cast12_i - $_to_nxt_0 | 0) < 4) {
       $retval_0_i = 1;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_2 = $_frm_nxt_0;
       break L1;
      }
      $and85_i = $conv_i & 960;
      if ((($and85_i << 10) + 65536 | 0) >>> 0 > 1114111 >>> 0) {
       $retval_0_i = 2;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_2 = $_frm_nxt_0;
       break L1;
      }
      $add101_i = ($and85_i >>> 6) + 1 | 0;
      HEAP8[$_to_nxt_0 >> 0] = $add101_i >>> 2 | 240;
      HEAP8[$_to_nxt_0 + 1 >> 0] = $conv_i >>> 2 & 15 | $add101_i << 4 & 48 | 128;
      HEAP8[$_to_nxt_0 + 2 >> 0] = $conv_i << 4 & 48 | $conv73_i >>> 6 & 15 | 128;
      HEAP8[$_to_nxt_0 + 3 >> 0] = $conv73_i & 63 | 128;
      $_to_nxt_1 = $_to_nxt_0 + 4 | 0;
      $_frm_nxt_1 = $arrayidx_i;
     }
    } while (0);
    $incdec_ptr165_i = $_frm_nxt_1 + 2 | 0;
    if ($incdec_ptr165_i >>> 0 < $frm_end >>> 0) {
     $_to_nxt_0 = $_to_nxt_1;
     $_frm_nxt_0 = $incdec_ptr165_i;
    } else {
     $retval_0_i = 0;
     $_to_nxt_2 = $_to_nxt_1;
     $_frm_nxt_2 = $incdec_ptr165_i;
     break;
    }
   }
  } else {
   $retval_0_i = 0;
   $_to_nxt_2 = $to;
   $_frm_nxt_2 = $frm;
  }
 } while (0);
 HEAP32[$frm_nxt >> 2] = $frm + ($_frm_nxt_2 - $frm >> 1 << 1);
 HEAP32[$to_nxt >> 2] = $to + ($_to_nxt_2 - $to);
 return $retval_0_i | 0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $agg_tmp = 0, $__nm = 0, $2 = 0, $__locale_2_i_i25 = 0, $6 = 0, $sub_i_i_i = 0, $14 = 0, $15 = 0, $exception_i_i_i = 0, $17 = 0, $18 = 0, $vtable_i = 0, $__size__i_i_i = 0, $26 = 0, $__data__i1_i_i = 0, $__data__i_i_i = 0, $__data__i1_i_i12_pre_phi = 0, $__data__i_i_i13_pre_phi = 0, $cond_i_i19_ph = 0, $__sbuf__i = 0, $28 = 0, $cond_i_i19 = 0, $tobool_i_i_i11 = 0, $cond_i7_i = 0, $cond_i6_i = 0, $31 = 0, $32 = 0, $__nout__i_i = 0, $33 = 0, $retval_0_i_i = 0, $53 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $agg_tmp = sp + 16 | 0;
 $__nm = sp + 24 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
  FUNCTION_TABLE_viiiiii[$2 & 63]($agg_result, $this, $agg_tmp, $__iob, $__fl, $__v & 1);
  STACKTOP = sp;
  return;
 }
 $__locale_2_i_i25 = HEAP32[$__iob + 28 >> 2] | 0;
 $6 = $__locale_2_i_i25 + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5814] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23256;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5815] | 0) - 1 | 0;
 $14 = HEAP32[$__locale_2_i_i25 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i25 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $15 = HEAP32[$14 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($15 | 0) != 0) {
   $17 = $15;
   $18 = $__locale_2_i_i25 + 4 | 0;
   if (((tempValue = HEAP32[$18 >> 2] | 0, HEAP32[$18 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i25 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i25);
   }
   $vtable_i = HEAP32[$15 >> 2] | 0;
   if ($__v) {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 24 >> 2] & 127]($__nm, $17);
   } else {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 28 >> 2] & 127]($__nm, $17);
   }
   $__size__i_i_i = $__nm;
   $26 = HEAP8[$__size__i_i_i >> 0] | 0;
   if (($26 & 1) == 0) {
    $__data__i_i_i = $__nm + 4 | 0;
    $cond_i_i19_ph = $__data__i_i_i;
    $__data__i_i_i13_pre_phi = $__data__i_i_i;
    $__data__i1_i_i12_pre_phi = $__nm + 8 | 0;
   } else {
    $__data__i1_i_i = $__nm + 8 | 0;
    $cond_i_i19_ph = HEAP32[$__data__i1_i_i >> 2] | 0;
    $__data__i_i_i13_pre_phi = $__nm + 4 | 0;
    $__data__i1_i_i12_pre_phi = $__data__i1_i_i;
   }
   $__sbuf__i = $__s | 0;
   $cond_i_i19 = $cond_i_i19_ph;
   $28 = $26;
   while (1) {
    $tobool_i_i_i11 = ($28 & 1) == 0;
    if ($tobool_i_i_i11) {
     $cond_i6_i = ($28 & 255) >>> 1;
     $cond_i7_i = $__data__i_i_i13_pre_phi;
    } else {
     $cond_i6_i = HEAP32[$__data__i_i_i13_pre_phi >> 2] | 0;
     $cond_i7_i = HEAP32[$__data__i1_i_i12_pre_phi >> 2] | 0;
    }
    if (($cond_i_i19 | 0) == ($cond_i7_i + ($cond_i6_i << 2) | 0)) {
     break;
    }
    $31 = HEAP32[$cond_i_i19 >> 2] | 0;
    $32 = HEAP32[$__sbuf__i >> 2] | 0;
    if (($32 | 0) != 0) {
     $__nout__i_i = $32 + 24 | 0;
     $33 = HEAP32[$__nout__i_i >> 2] | 0;
     if (($33 | 0) == (HEAP32[$32 + 28 >> 2] | 0)) {
      $retval_0_i_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 52 >> 2] & 63]($32, $31) | 0;
     } else {
      HEAP32[$__nout__i_i >> 2] = $33 + 4;
      HEAP32[$33 >> 2] = $31;
      $retval_0_i_i = $31;
     }
     if (($retval_0_i_i | 0) == -1) {
      HEAP32[$__sbuf__i >> 2] = 0;
     }
    }
    $cond_i_i19 = $cond_i_i19 + 4 | 0;
    $28 = HEAP8[$__size__i_i_i >> 0] | 0;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i >> 2];
   if ($tobool_i_i_i11) {
    STACKTOP = sp;
    return;
   }
   $53 = HEAP32[$__nm + 8 >> 2] | 0;
   if (($53 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   _free($53);
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $agg_tmp = 0, $__nm = 0, $2 = 0, $__locale_2_i_i24 = 0, $6 = 0, $sub_i_i_i = 0, $14 = 0, $15 = 0, $exception_i_i_i = 0, $17 = 0, $18 = 0, $vtable_i = 0, $__size__i_i_i = 0, $26 = 0, $__data__i_i_i = 0, $arrayidx_i_i_i = 0, $__data__i_i_i12_pre_phi = 0, $arrayidx_i_i_i14_pre_phi = 0, $cond_i_i21_ph = 0, $__sbuf__i = 0, $__size__i2_i_i = 0, $28 = 0, $cond_i_i21 = 0, $tobool_i_i_i11 = 0, $cond_i7_i = 0, $cond_i6_i = 0, $31 = 0, $32 = 0, $__nout__i_i = 0, $33 = 0, $52 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $agg_tmp = sp + 16 | 0;
 $__nm = sp + 24 | 0;
 if ((HEAP32[$__iob + 4 >> 2] & 1 | 0) == 0) {
  $2 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$agg_tmp >> 2] = HEAP32[$__s >> 2];
  FUNCTION_TABLE_viiiiii[$2 & 63]($agg_result, $this, $agg_tmp, $__iob, $__fl, $__v & 1);
  STACKTOP = sp;
  return;
 }
 $__locale_2_i_i24 = HEAP32[$__iob + 28 >> 2] | 0;
 $6 = $__locale_2_i_i24 + 4 | 0;
 tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5816] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23264;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5817] | 0) - 1 | 0;
 $14 = HEAP32[$__locale_2_i_i24 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i24 + 12 >> 2] | 0) - $14 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $15 = HEAP32[$14 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($15 | 0) != 0) {
   $17 = $15;
   $18 = $__locale_2_i_i24 + 4 | 0;
   if (((tempValue = HEAP32[$18 >> 2] | 0, HEAP32[$18 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i24 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i24);
   }
   $vtable_i = HEAP32[$15 >> 2] | 0;
   if ($__v) {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 24 >> 2] & 127]($__nm, $17);
   } else {
    FUNCTION_TABLE_vii[HEAP32[$vtable_i + 28 >> 2] & 127]($__nm, $17);
   }
   $__size__i_i_i = $__nm;
   $26 = HEAP8[$__size__i_i_i >> 0] | 0;
   if (($26 & 1) == 0) {
    $arrayidx_i_i_i = $__nm + 1 | 0;
    $cond_i_i21_ph = $arrayidx_i_i_i;
    $arrayidx_i_i_i14_pre_phi = $arrayidx_i_i_i;
    $__data__i_i_i12_pre_phi = $__nm + 8 | 0;
   } else {
    $__data__i_i_i = $__nm + 8 | 0;
    $cond_i_i21_ph = HEAP32[$__data__i_i_i >> 2] | 0;
    $arrayidx_i_i_i14_pre_phi = $__nm + 1 | 0;
    $__data__i_i_i12_pre_phi = $__data__i_i_i;
   }
   $__sbuf__i = $__s | 0;
   $__size__i2_i_i = $__nm + 4 | 0;
   $cond_i_i21 = $cond_i_i21_ph;
   $28 = $26;
   while (1) {
    $tobool_i_i_i11 = ($28 & 1) == 0;
    if ($tobool_i_i_i11) {
     $cond_i6_i = ($28 & 255) >>> 1;
     $cond_i7_i = $arrayidx_i_i_i14_pre_phi;
    } else {
     $cond_i6_i = HEAP32[$__size__i2_i_i >> 2] | 0;
     $cond_i7_i = HEAP32[$__data__i_i_i12_pre_phi >> 2] | 0;
    }
    if (($cond_i_i21 | 0) == ($cond_i7_i + $cond_i6_i | 0)) {
     break;
    }
    $31 = HEAP8[$cond_i_i21 >> 0] | 0;
    $32 = HEAP32[$__sbuf__i >> 2] | 0;
    do {
     if (($32 | 0) != 0) {
      $__nout__i_i = $32 + 24 | 0;
      $33 = HEAP32[$__nout__i_i >> 2] | 0;
      if (($33 | 0) != (HEAP32[$32 + 28 >> 2] | 0)) {
       HEAP32[$__nout__i_i >> 2] = $33 + 1;
       HEAP8[$33 >> 0] = $31;
       break;
      }
      if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 52 >> 2] & 63]($32, $31 & 255) | 0) == -1) {
       HEAP32[$__sbuf__i >> 2] = 0;
      }
     }
    } while (0);
    $cond_i_i21 = $cond_i_i21 + 1 | 0;
    $28 = HEAP8[$__size__i_i_i >> 0] | 0;
   }
   HEAP32[$agg_result >> 2] = HEAP32[$__sbuf__i >> 2];
   if ($tobool_i_i_i11) {
    STACKTOP = sp;
    return;
   }
   $52 = HEAP32[$__nm + 8 >> 2] | 0;
   if (($52 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   _free($52);
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $1 = 0, $2 = 0, $cond_i = 0, $4 = 0, $5 = 0, $6 = 0, $cond_i56 = 0, $9 = 0, $10 = 0, $add_ptr = 0, $__first_addr_05_i = 0, $incdec_ptr_i = 0, $__first_addr_0_lcssa_i = 0, $sub_ptr_sub31 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $19 = 0, $cond_i46 = 0, $21 = 0, $22 = 0, $23 = 0, $retval_0 = 0;
 if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) {
  if ((HEAP8[$__in_units >> 0] | 0) == 0) {
   $retval_0 = -1;
   return $retval_0 | 0;
  }
  HEAP8[$__in_units >> 0] = 0;
  $1 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $1 + 1;
  HEAP8[$1 >> 0] = 46;
  $2 = HEAP8[$__grouping >> 0] | 0;
  if (($2 & 1) == 0) {
   $cond_i = ($2 & 255) >>> 1;
  } else {
   $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i | 0) == 0) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $4 = HEAP32[$__g_end >> 2] | 0;
  if (($4 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $5 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $4 + 4;
  HEAP32[$4 >> 2] = $5;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
  $6 = HEAP8[$__grouping >> 0] | 0;
  if (($6 & 1) == 0) {
   $cond_i56 = ($6 & 255) >>> 1;
  } else {
   $cond_i56 = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i56 | 0) != 0) {
   if ((HEAP8[$__in_units >> 0] | 0) == 0) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   $9 = HEAP32[$__g_end >> 2] | 0;
   if (($9 - $__g | 0) >= 160) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $10 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $9 + 4;
   HEAP32[$9 >> 2] = $10;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 }
 $add_ptr = $__atoms + 32 | 0;
 $__first_addr_05_i = $__atoms;
 while (1) {
  $incdec_ptr_i = $__first_addr_05_i + 1 | 0;
  if ((HEAP8[$__first_addr_05_i >> 0] | 0) == $__ct << 24 >> 24) {
   $__first_addr_0_lcssa_i = $__first_addr_05_i;
   break;
  }
  if (($incdec_ptr_i | 0) == ($add_ptr | 0)) {
   $__first_addr_0_lcssa_i = $add_ptr;
   break;
  } else {
   $__first_addr_05_i = $incdec_ptr_i;
  }
 }
 $sub_ptr_sub31 = $__first_addr_0_lcssa_i - $__atoms | 0;
 if (($sub_ptr_sub31 | 0) > 31) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $12 = HEAP8[19528 + $sub_ptr_sub31 >> 0] | 0;
 if (($sub_ptr_sub31 | 0) == 25 | ($sub_ptr_sub31 | 0) == 24) {
  $13 = HEAP32[$__a_end >> 2] | 0;
  if (($13 | 0) != ($__a | 0)) {
   if ((HEAP8[$13 - 1 >> 0] & 95 | 0) != (HEAP8[$__exp >> 0] & 127 | 0)) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
  }
  HEAP32[$__a_end >> 2] = $13 + 1;
  HEAP8[$13 >> 0] = $12;
  $retval_0 = 0;
  return $retval_0 | 0;
 } else if (($sub_ptr_sub31 | 0) == 22 | ($sub_ptr_sub31 | 0) == 23) {
  HEAP8[$__exp >> 0] = 80;
  $16 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = $12;
  $retval_0 = 0;
  return $retval_0 | 0;
 } else {
  $17 = HEAP8[$__exp >> 0] | 0;
  if (($12 & 95 | 0) == ($17 << 24 >> 24 | 0)) {
   HEAP8[$__exp >> 0] = $17 | -128;
   if ((HEAP8[$__in_units >> 0] | 0) != 0) {
    HEAP8[$__in_units >> 0] = 0;
    $19 = HEAP8[$__grouping >> 0] | 0;
    if (($19 & 1) == 0) {
     $cond_i46 = ($19 & 255) >>> 1;
    } else {
     $cond_i46 = HEAP32[$__grouping + 4 >> 2] | 0;
    }
    if (($cond_i46 | 0) != 0) {
     $21 = HEAP32[$__g_end >> 2] | 0;
     if (($21 - $__g | 0) < 160) {
      $22 = HEAP32[$__dc >> 2] | 0;
      HEAP32[$__g_end >> 2] = $21 + 4;
      HEAP32[$21 >> 2] = $22;
     }
    }
   }
  }
  $23 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $23 + 1;
  HEAP8[$23 >> 0] = $12;
  if (($sub_ptr_sub31 | 0) > 21) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__nar = 0, $__o = 0, $0 = 0, $arraydecay = 0, $call_i = 0, $call3 = 0, $add_ptr = 0, $and_i = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $__locale_2_i_i11 = 0, $9 = 0, $sub_i_i_i = 0, $17 = 0, $18 = 0, $exception_i_i_i = 0, $21 = 0, $arraydecay9 = 0, $add_ptr13 = 0, $__op_0 = 0, $34 = 0, $35 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__nar = sp + 24 | 0;
 $__o = sp + 48 | 0;
 $0 = sp + 16 | 0;
 HEAP8[$0 >> 0] = HEAP8[11160] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11161] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11162] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11163] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11164] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11165] | 0;
 $arraydecay = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay, 20, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr = $__nar + $call3 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 176;
 do {
  if (($and_i | 0) == 32) {
   $retval_0_i = $add_ptr;
  } else if (($and_i | 0) == 16) {
   $6 = HEAP8[$arraydecay >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call3 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 12;
    }
   } else {
    label = 12;
   }
  } else {
   label = 12;
  }
 } while (0);
 if ((label | 0) == 12) {
  $retval_0_i = $arraydecay;
 }
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 $9 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$9 >> 2] | 0, HEAP32[$9 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $17 = HEAP32[$__locale_2_i_i11 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i11 + 12 >> 2] | 0) - $17 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $18 = HEAP32[$17 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($18 | 0) != 0) {
   $21 = $__locale_2_i_i11 + 4 | 0;
   if (((tempValue = HEAP32[$21 >> 2] | 0, HEAP32[$21 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i11 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i11);
   }
   $arraydecay9 = $__o | 0;
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 48 >> 2] & 31]($18, $arraydecay, $add_ptr, $arraydecay9) | 0;
   $add_ptr13 = $__o + ($call3 << 2) | 0;
   if (($retval_0_i | 0) == ($add_ptr | 0)) {
    $__op_0 = $add_ptr13;
    $34 = $__s | 0;
    $35 = HEAP32[$34 >> 2] | 0;
    __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $35, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
    $$etemp$3$0 = 148;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   $__op_0 = $__o + ($retval_0_i - $__nar << 2) | 0;
   $34 = $__s | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $35, $arraydecay9, $__op_0, $add_ptr13, $__iob, $__fl);
   $$etemp$3$0 = 148;
   $$etemp$3$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $1 = 0, $2 = 0, $cond_i = 0, $4 = 0, $5 = 0, $6 = 0, $cond_i56 = 0, $9 = 0, $10 = 0, $add_ptr = 0, $__first_addr_05_i = 0, $incdec_ptr_i = 0, $__first_addr_0_lcssa_i = 0, $sub_ptr_sub28 = 0, $sub_ptr_div29 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $cond_i46 = 0, $20 = 0, $21 = 0, $22 = 0, $retval_0 = 0;
 if (($__ct | 0) == ($__decimal_point | 0)) {
  if ((HEAP8[$__in_units >> 0] | 0) == 0) {
   $retval_0 = -1;
   return $retval_0 | 0;
  }
  HEAP8[$__in_units >> 0] = 0;
  $1 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $1 + 1;
  HEAP8[$1 >> 0] = 46;
  $2 = HEAP8[$__grouping >> 0] | 0;
  if (($2 & 1) == 0) {
   $cond_i = ($2 & 255) >>> 1;
  } else {
   $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i | 0) == 0) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $4 = HEAP32[$__g_end >> 2] | 0;
  if (($4 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $5 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $4 + 4;
  HEAP32[$4 >> 2] = $5;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 if (($__ct | 0) == ($__thousands_sep | 0)) {
  $6 = HEAP8[$__grouping >> 0] | 0;
  if (($6 & 1) == 0) {
   $cond_i56 = ($6 & 255) >>> 1;
  } else {
   $cond_i56 = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  if (($cond_i56 | 0) != 0) {
   if ((HEAP8[$__in_units >> 0] | 0) == 0) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   $9 = HEAP32[$__g_end >> 2] | 0;
   if (($9 - $__g | 0) >= 160) {
    $retval_0 = 0;
    return $retval_0 | 0;
   }
   $10 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $9 + 4;
   HEAP32[$9 >> 2] = $10;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 }
 $add_ptr = $__atoms + 128 | 0;
 $__first_addr_05_i = $__atoms;
 while (1) {
  $incdec_ptr_i = $__first_addr_05_i + 4 | 0;
  if ((HEAP32[$__first_addr_05_i >> 2] | 0) == ($__ct | 0)) {
   $__first_addr_0_lcssa_i = $__first_addr_05_i;
   break;
  }
  if (($incdec_ptr_i | 0) == ($add_ptr | 0)) {
   $__first_addr_0_lcssa_i = $add_ptr;
   break;
  } else {
   $__first_addr_05_i = $incdec_ptr_i;
  }
 }
 $sub_ptr_sub28 = $__first_addr_0_lcssa_i - $__atoms | 0;
 $sub_ptr_div29 = $sub_ptr_sub28 >> 2;
 if (($sub_ptr_sub28 | 0) > 124) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $12 = HEAP8[19528 + $sub_ptr_div29 >> 0] | 0;
 if (($sub_ptr_div29 | 0) == 25 | ($sub_ptr_div29 | 0) == 24) {
  $13 = HEAP32[$__a_end >> 2] | 0;
  if (($13 | 0) != ($__a | 0)) {
   if ((HEAP8[$13 - 1 >> 0] & 95 | 0) != (HEAP8[$__exp >> 0] & 127 | 0)) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
  }
  HEAP32[$__a_end >> 2] = $13 + 1;
  HEAP8[$13 >> 0] = $12;
  $retval_0 = 0;
  return $retval_0 | 0;
 } else if (($sub_ptr_div29 | 0) == 22 | ($sub_ptr_div29 | 0) == 23) {
  HEAP8[$__exp >> 0] = 80;
 } else {
  $16 = HEAP8[$__exp >> 0] | 0;
  if (($12 & 95 | 0) == ($16 << 24 >> 24 | 0)) {
   HEAP8[$__exp >> 0] = $16 | -128;
   if ((HEAP8[$__in_units >> 0] | 0) != 0) {
    HEAP8[$__in_units >> 0] = 0;
    $18 = HEAP8[$__grouping >> 0] | 0;
    if (($18 & 1) == 0) {
     $cond_i46 = ($18 & 255) >>> 1;
    } else {
     $cond_i46 = HEAP32[$__grouping + 4 >> 2] | 0;
    }
    if (($cond_i46 | 0) != 0) {
     $20 = HEAP32[$__g_end >> 2] | 0;
     if (($20 - $__g | 0) < 160) {
      $21 = HEAP32[$__dc >> 2] | 0;
      HEAP32[$__g_end >> 2] = $20 + 4;
      HEAP32[$20 >> 2] = $21;
     }
    }
   }
  }
 }
 $22 = HEAP32[$__a_end >> 2] | 0;
 HEAP32[$__a_end >> 2] = $22 + 1;
 HEAP8[$22 >> 0] = $12;
 if (($sub_ptr_sub28 | 0) > 84) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg_result, $this, $__s, $__iob, $__fl, $__v) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $__p_i_i_i_i = 0, $__nar = 0, $__o = 0, $0 = 0, $arraydecay = 0, $call_i = 0, $call3 = 0, $add_ptr = 0, $and_i = 0, $6 = 0, $7 = 0, $retval_0_i = 0, $8 = 0, $__locale_2_i_i11 = 0, $9 = 0, $sub_i_i_i = 0, $17 = 0, $18 = 0, $exception_i_i_i = 0, $21 = 0, $add_ptr13 = 0, $__op_0 = 0, $34 = 0, $35 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, label = 0, tempParam = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__nar = sp + 24 | 0;
 $__o = sp + 48 | 0;
 $0 = sp + 16 | 0;
 HEAP8[$0 >> 0] = HEAP8[11160] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[11161] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[11162] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[11163] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[11164] | 0;
 HEAP8[$0 + 5 >> 0] = HEAP8[11165] | 0;
 $arraydecay = $__nar | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay, 20, HEAP32[5446] | 0, $0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $__v, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $add_ptr = $__nar + $call3 | 0;
 $and_i = HEAP32[$__iob + 4 >> 2] & 176;
 do {
  if (($and_i | 0) == 32) {
   $retval_0_i = $add_ptr;
  } else if (($and_i | 0) == 16) {
   $6 = HEAP8[$arraydecay >> 0] | 0;
   if (($6 << 24 >> 24 | 0) == 45 | ($6 << 24 >> 24 | 0) == 43) {
    $retval_0_i = $__nar + 1 | 0;
    break;
   }
   if (($call3 | 0) > 1 & $6 << 24 >> 24 == 48) {
    $7 = HEAP8[$__nar + 1 >> 0] | 0;
    if (($7 << 24 >> 24 | 0) == 120 | ($7 << 24 >> 24 | 0) == 88) {
     $retval_0_i = $__nar + 2 | 0;
    } else {
     label = 12;
    }
   } else {
    label = 12;
   }
  } else {
   label = 12;
  }
 } while (0);
 if ((label | 0) == 12) {
  $retval_0_i = $arraydecay;
 }
 $8 = $__o | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 $9 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$9 >> 2] | 0, HEAP32[$9 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $17 = HEAP32[$__locale_2_i_i11 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i11 + 12 >> 2] | 0) - $17 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $18 = HEAP32[$17 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($18 | 0) != 0) {
   $21 = $__locale_2_i_i11 + 4 | 0;
   if (((tempValue = HEAP32[$21 >> 2] | 0, HEAP32[$21 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i11 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i11);
   }
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 32 >> 2] & 31]($18, $arraydecay, $add_ptr, $8) | 0;
   $add_ptr13 = $__o + $call3 | 0;
   if (($retval_0_i | 0) == ($add_ptr | 0)) {
    $__op_0 = $add_ptr13;
    $34 = $__s | 0;
    $35 = HEAP32[$34 >> 2] | 0;
    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $35, $8, $__op_0, $add_ptr13, $__iob, $__fl);
    $$etemp$3$0 = 37;
    $$etemp$3$1 = 0;
    STACKTOP = sp;
    return;
   }
   $__op_0 = $__o + ($retval_0_i - $__nar) | 0;
   $34 = $__s | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $35, $8, $__op_0, $add_ptr13, $__iob, $__fl);
   $$etemp$3$0 = 37;
   $$etemp$3$1 = 0;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function _wcsrtombs($s, $ws, $n) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 var $buf = 0, $0 = 0, $arraydecay = 0, $1 = 0, $2 = 0, $ws2_047 = 0, $n_addr_046 = 0, $call = 0, $call_pn = 0, $n_addr_1 = 0, $incdec_ptr = 0, $3 = 0, $4 = 0, $s_addr_065 = 0, $n_addr_264 = 0, $5 = 0, $s_addr_0_lcssa = 0, $n_addr_2_lcssa = 0, $arraydecay30 = 0, $call12 = 0, $6 = 0, $n_addr_3 = 0, $s_addr_1 = 0, $incdec_ptr20 = 0, $7 = 0, $s_addr_258 = 0, $n_addr_457 = 0, $8 = 0, $call31 = 0, $11 = 0, $n_addr_5 = 0, $s_addr_3 = 0, $incdec_ptr49 = 0, $n_addr_452 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $buf = sp | 0;
 if (($s | 0) == 0) {
  $0 = HEAP32[$ws >> 2] | 0;
  $arraydecay = $buf | 0;
  $1 = HEAP32[$0 >> 2] | 0;
  if (($1 | 0) == 0) {
   $retval_0 = 0;
   STACKTOP = sp;
   return $retval_0 | 0;
  } else {
   $n_addr_046 = 0;
   $ws2_047 = $0;
   $2 = $1;
  }
  while (1) {
   if ($2 >>> 0 > 127 >>> 0) {
    $call = _wcrtomb($arraydecay, $2) | 0;
    if (($call | 0) == -1) {
     $retval_0 = -1;
     label = 26;
     break;
    } else {
     $call_pn = $call;
    }
   } else {
    $call_pn = 1;
   }
   $n_addr_1 = $call_pn + $n_addr_046 | 0;
   $incdec_ptr = $ws2_047 + 4 | 0;
   $3 = HEAP32[$incdec_ptr >> 2] | 0;
   if (($3 | 0) == 0) {
    $retval_0 = $n_addr_1;
    label = 26;
    break;
   } else {
    $n_addr_046 = $n_addr_1;
    $ws2_047 = $incdec_ptr;
    $2 = $3;
   }
  }
  if ((label | 0) == 26) {
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 }
 L14 : do {
  if ($n >>> 0 > 3 >>> 0) {
   $n_addr_264 = $n;
   $s_addr_065 = $s;
   $4 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $5 = HEAP32[$4 >> 2] | 0;
    if (($5 | 0) == 0) {
     $n_addr_2_lcssa = $n_addr_264;
     $s_addr_0_lcssa = $s_addr_065;
     break L14;
    }
    if ($5 >>> 0 > 127 >>> 0) {
     $call12 = _wcrtomb($s_addr_065, $5) | 0;
     if (($call12 | 0) == -1) {
      $retval_0 = -1;
      break;
     }
     $s_addr_1 = $s_addr_065 + $call12 | 0;
     $n_addr_3 = $n_addr_264 - $call12 | 0;
     $6 = $4;
    } else {
     HEAP8[$s_addr_065 >> 0] = $5;
     $s_addr_1 = $s_addr_065 + 1 | 0;
     $n_addr_3 = $n_addr_264 - 1 | 0;
     $6 = HEAP32[$ws >> 2] | 0;
    }
    $incdec_ptr20 = $6 + 4 | 0;
    HEAP32[$ws >> 2] = $incdec_ptr20;
    if ($n_addr_3 >>> 0 > 3 >>> 0) {
     $n_addr_264 = $n_addr_3;
     $s_addr_065 = $s_addr_1;
     $4 = $incdec_ptr20;
    } else {
     $n_addr_2_lcssa = $n_addr_3;
     $s_addr_0_lcssa = $s_addr_1;
     break L14;
    }
   }
   STACKTOP = sp;
   return $retval_0 | 0;
  } else {
   $n_addr_2_lcssa = $n;
   $s_addr_0_lcssa = $s;
  }
 } while (0);
 L26 : do {
  if (($n_addr_2_lcssa | 0) == 0) {
   $n_addr_452 = 0;
  } else {
   $arraydecay30 = $buf | 0;
   $n_addr_457 = $n_addr_2_lcssa;
   $s_addr_258 = $s_addr_0_lcssa;
   $7 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $8 = HEAP32[$7 >> 2] | 0;
    if (($8 | 0) == 0) {
     label = 24;
     break;
    }
    if ($8 >>> 0 > 127 >>> 0) {
     $call31 = _wcrtomb($arraydecay30, $8) | 0;
     if (($call31 | 0) == -1) {
      $retval_0 = -1;
      label = 26;
      break;
     }
     if ($n_addr_457 >>> 0 < $call31 >>> 0) {
      label = 20;
      break;
     }
     _wcrtomb($s_addr_258, HEAP32[$7 >> 2] | 0) | 0;
     $s_addr_3 = $s_addr_258 + $call31 | 0;
     $n_addr_5 = $n_addr_457 - $call31 | 0;
     $11 = $7;
    } else {
     HEAP8[$s_addr_258 >> 0] = $8;
     $s_addr_3 = $s_addr_258 + 1 | 0;
     $n_addr_5 = $n_addr_457 - 1 | 0;
     $11 = HEAP32[$ws >> 2] | 0;
    }
    $incdec_ptr49 = $11 + 4 | 0;
    HEAP32[$ws >> 2] = $incdec_ptr49;
    if (($n_addr_5 | 0) == 0) {
     $n_addr_452 = 0;
     break L26;
    } else {
     $n_addr_457 = $n_addr_5;
     $s_addr_258 = $s_addr_3;
     $7 = $incdec_ptr49;
    }
   }
   if ((label | 0) == 20) {
    $retval_0 = $n - $n_addr_457 | 0;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if ((label | 0) == 24) {
    HEAP8[$s_addr_258 >> 0] = 0;
    $n_addr_452 = $n_addr_457;
    break;
   } else if ((label | 0) == 26) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 HEAP32[$ws >> 2] = 0;
 $retval_0 = $n - $n_addr_452 | 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZN14dtNavMeshQuery29finalizeSlicedFindPathPartialEPKjiPjPii($this, $existing, $existingSize, $path, $pathCount) {
 $this = $this | 0;
 $existing = $existing | 0;
 $existingSize = $existingSize | 0;
 $path = $path | 0;
 $pathCount = $pathCount | 0;
 var $m_query = 0, $status = 0, $0 = 0, $2 = 0, $m_nodePool = 0, $i_0_in = 0, $i_0 = 0, $4 = 0, $5 = 0, $add_i_i = 0, $add2_i_i = 0, $xor4_i_i = 0, $add7_i_i = 0, $i_05_i = 0, $8 = 0, $m_next_i = 0, $conv8_in_i = 0, $conv8_i = 0, $i_0_i = 0, $arrayidx2_i = 0, $prev_0 = 0, $node_2 = 0, $12 = 0, $bf_load = 0, $bf_clear = 0, $retval_0_i27 = 0, $retval_0_i21 = 0, $node_3 = 0, $n_0 = 0, $inc31 = 0, $bf_clear42 = 0, $arrayidx_i = 0, $n_1 = 0, $and = 0, $retval_0 = 0, label = 0;
 HEAP32[$pathCount >> 2] = 0;
 if (($existingSize | 0) == 0) {
  $retval_0 = -2147483648;
  return $retval_0 | 0;
 }
 $m_query = $this + 4 | 0;
 $status = $m_query | 0;
 $0 = HEAP32[$status >> 2] | 0;
 if (($0 | 0) < 0) {
  _memset($m_query | 0, 0, 48) | 0;
  $retval_0 = -2147483648;
  return $retval_0 | 0;
 }
 $2 = HEAP32[$this + 16 >> 2] | 0;
 L8 : do {
  if (($2 | 0) == (HEAP32[$this + 20 >> 2] | 0)) {
   HEAP32[$path >> 2] = $2;
   $n_1 = 1;
  } else {
   $m_nodePool = $this + 56 | 0;
   $i_0_in = $existingSize;
   L10 : while (1) {
    $i_0 = $i_0_in - 1 | 0;
    if (($i_0_in | 0) <= 0) {
     label = 13;
     break;
    }
    $4 = HEAP32[$m_nodePool >> 2] | 0;
    $5 = HEAP32[$existing + ($i_0 << 2) >> 2] | 0;
    $add_i_i = $5 + ~($5 << 15) | 0;
    $add2_i_i = ($add_i_i >>> 10 ^ $add_i_i) * 9 | 0;
    $xor4_i_i = $add2_i_i >>> 6 ^ $add2_i_i;
    $add7_i_i = $xor4_i_i + ~($xor4_i_i << 11) | 0;
    $i_05_i = HEAP16[(HEAP32[$4 + 4 >> 2] | 0) + (((HEAP32[$4 + 16 >> 2] | 0) - 1 & ($add7_i_i >>> 16 ^ $add7_i_i)) << 1) >> 1] | 0;
    if ($i_05_i << 16 >> 16 == -1) {
     $i_0_in = $i_0;
     continue;
    }
    $8 = HEAP32[$4 >> 2] | 0;
    $m_next_i = $4 + 8 | 0;
    $conv8_in_i = $i_05_i;
    while (1) {
     $conv8_i = $conv8_in_i & 65535;
     if ((HEAP32[$8 + ($conv8_i * 28 | 0) + 24 >> 2] | 0) == ($5 | 0)) {
      break;
     }
     $i_0_i = HEAP16[(HEAP32[$m_next_i >> 2] | 0) + ($conv8_i << 1) >> 1] | 0;
     if ($i_0_i << 16 >> 16 == -1) {
      $i_0_in = $i_0;
      continue L10;
     } else {
      $conv8_in_i = $i_0_i;
     }
    }
    $arrayidx2_i = $8 + ($conv8_i * 28 | 0) | 0;
    if (($arrayidx2_i | 0) == 0) {
     $i_0_in = $i_0;
    } else {
     $node_2 = $arrayidx2_i;
     $prev_0 = 0;
     break;
    }
   }
   if ((label | 0) == 13) {
    HEAP32[$status >> 2] = $0 | 64;
    $node_2 = HEAP32[$this + 8 >> 2] | 0;
    $prev_0 = 0;
   }
   while (1) {
    $12 = $node_2 + 20 | 0;
    $bf_load = HEAP32[$12 >> 2] | 0;
    $bf_clear = $bf_load & 1073741823;
    if (($bf_clear | 0) == 0) {
     $retval_0_i27 = 0;
    } else {
     $retval_0_i27 = (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) + (($bf_clear - 1 | 0) * 28 | 0) | 0;
    }
    if (($prev_0 | 0) == 0) {
     $retval_0_i21 = 0;
    } else {
     $retval_0_i21 = (($prev_0 - (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
    }
    HEAP32[$12 >> 2] = $bf_load & -1073741824 | $retval_0_i21;
    if (($retval_0_i27 | 0) == 0) {
     $n_0 = 0;
     $node_3 = $node_2;
     break;
    } else {
     $prev_0 = $node_2;
     $node_2 = $retval_0_i27;
    }
   }
   while (1) {
    $inc31 = $n_0 + 1 | 0;
    HEAP32[$path + ($n_0 << 2) >> 2] = HEAP32[$node_3 + 24 >> 2];
    if (($inc31 | 0) >= 32) {
     break;
    }
    $bf_clear42 = HEAP32[$node_3 + 20 >> 2] & 1073741823;
    if (($bf_clear42 | 0) == 0) {
     $n_1 = $inc31;
     break L8;
    }
    $arrayidx_i = (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) + (($bf_clear42 - 1 | 0) * 28 | 0) | 0;
    if (($arrayidx_i | 0) == 0) {
     $n_1 = $inc31;
     break L8;
    } else {
     $n_0 = $inc31;
     $node_3 = $arrayidx_i;
    }
   }
   HEAP32[$status >> 2] = HEAP32[$status >> 2] | 16;
   $n_1 = $inc31;
  }
 } while (0);
 $and = HEAP32[$status >> 2] & 16777215;
 _memset($m_query | 0, 0, 48) | 0;
 HEAP32[$pathCount >> 2] = $n_1;
 $retval_0 = $and | 1073741824;
 return $retval_0 | 0;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $4 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $6 = 0, $7 = 0, $number_to_static_ptr26_i = 0, $found_our_static_ptr2 = 0, $10 = 0, $found_any_static_type5 = 0, $11 = 0, $12 = 0, $add_ptr = 0, $13 = 0, $shr_i30 = 0, $offset_to_base_0_i35 = 0, $18 = 0, $path_dst_ptr_to_static_ptr = 0, $__flags = 0, $search_done = 0, $21 = 0, $p_0 = 0, $28 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $32 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $found_our_static_ptr2 = $info + 52 | 0;
  $10 = HEAP8[$found_our_static_ptr2 >> 0] | 0;
  $found_any_static_type5 = $info + 53 | 0;
  $11 = HEAP8[$found_any_static_type5 >> 0] | 0;
  $12 = HEAP32[$this + 12 >> 2] | 0;
  $add_ptr = $this + 16 + ($12 << 3) | 0;
  HEAP8[$found_our_static_ptr2 >> 0] = 0;
  HEAP8[$found_any_static_type5 >> 0] = 0;
  $13 = HEAP32[$this + 20 >> 2] | 0;
  $shr_i30 = $13 >> 8;
  if (($13 & 1 | 0) == 0) {
   $offset_to_base_0_i35 = $shr_i30;
  } else {
   $offset_to_base_0_i35 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $shr_i30 >> 2] | 0;
  }
  $18 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 20 >> 2] & 63]($18, $info, $dst_ptr, $current_ptr + $offset_to_base_0_i35 | 0, ($13 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
  L6 : do {
   if (($12 | 0) > 1) {
    $path_dst_ptr_to_static_ptr = $info + 24 | 0;
    $__flags = $this + 8 | 0;
    $search_done = $info + 54 | 0;
    $21 = $current_ptr;
    $p_0 = $this + 24 | 0;
    do {
     if ((HEAP8[$search_done >> 0] | 0) != 0) {
      break L6;
     }
     if ((HEAP8[$found_our_static_ptr2 >> 0] | 0) == 0) {
      if ((HEAP8[$found_any_static_type5 >> 0] | 0) != 0) {
       if ((HEAP32[$__flags >> 2] & 1 | 0) == 0) {
        break L6;
       }
      }
     } else {
      if ((HEAP32[$path_dst_ptr_to_static_ptr >> 2] | 0) == 1) {
       break L6;
      }
      if ((HEAP32[$__flags >> 2] & 2 | 0) == 0) {
       break L6;
      }
     }
     HEAP8[$found_our_static_ptr2 >> 0] = 0;
     HEAP8[$found_any_static_type5 >> 0] = 0;
     $28 = HEAP32[$p_0 + 4 >> 2] | 0;
     $shr_i = $28 >> 8;
     if (($28 & 1 | 0) == 0) {
      $offset_to_base_0_i = $shr_i;
     } else {
      $offset_to_base_0_i = HEAP32[(HEAP32[$21 >> 2] | 0) + $shr_i >> 2] | 0;
     }
     $32 = HEAP32[$p_0 >> 2] | 0;
     FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 63]($32, $info, $dst_ptr, $current_ptr + $offset_to_base_0_i | 0, ($28 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
     $p_0 = $p_0 + 8 | 0;
    } while ($p_0 >>> 0 < $add_ptr >>> 0);
   }
  } while (0);
  HEAP8[$found_our_static_ptr2 >> 0] = $10;
  HEAP8[$found_any_static_type5 >> 0] = $11;
  return;
 }
 HEAP8[$info + 53 >> 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 >> 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $4 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($4 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 if (($4 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $6 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($6 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $7 = $path_below;
 } else {
  $7 = $6;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($7 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 >> 0] = 1;
 return;
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $__extbuf = 0, $__1buf = 0, $__enxt = 0, $__inxt = 0, $__last_consumed_is_next_ = 0, $__last_consumed_ = 0, $1 = 0, $2 = 0, $_sroa_speculated = 0, $__file_ = 0, $__i_025 = 0, $call8 = 0, $__st_ = 0, $__cv_ = 0, $arraydecay = 0, $add_ptr18 = 0, $__file_26 = 0, $__nread_0 = 0, $6 = 0, $7 = 0, $8$0 = 0, $8$1 = 0, $9 = 0, $add_ptr = 0, $call_i = 0, $13 = 0, $call27 = 0, $__nread_2 = 0, $__file_49 = 0, $__i43_0 = 0, $dec = 0, $18 = 0, $19 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 16 | 0;
 $__inxt = sp + 24 | 0;
 $__last_consumed_is_next_ = $this + 52 | 0;
 if ((HEAP8[$__last_consumed_is_next_ >> 0] | 0) != 0) {
  $__last_consumed_ = $this + 48 | 0;
  $1 = HEAP32[$__last_consumed_ >> 2] | 0;
  if (!$__consume) {
   $retval_0 = $1;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  HEAP32[$__last_consumed_ >> 2] = -1;
  HEAP8[$__last_consumed_is_next_ >> 0] = 0;
  $retval_0 = $1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $2 = HEAP32[$this + 44 >> 2] | 0;
 $_sroa_speculated = ($2 | 0) > 1 ? $2 : 1;
 L8 : do {
  if (($_sroa_speculated | 0) > 0) {
   $__file_ = $this + 32 | 0;
   $__i_025 = 0;
   while (1) {
    $call8 = _fgetc(HEAP32[$__file_ >> 2] | 0) | 0;
    if (($call8 | 0) == -1) {
     $retval_0 = -1;
     break;
    }
    HEAP8[$__extbuf + $__i_025 >> 0] = $call8;
    $__i_025 = $__i_025 + 1 | 0;
    if (($__i_025 | 0) >= ($_sroa_speculated | 0)) {
     break L8;
    }
   }
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 } while (0);
 L15 : do {
  if ((HEAP8[$this + 53 >> 0] | 0) == 0) {
   $__st_ = $this + 40 | 0;
   $__cv_ = $this + 36 | 0;
   $arraydecay = $__extbuf | 0;
   $add_ptr18 = $__1buf + 1 | 0;
   $__file_26 = $this + 32 | 0;
   $__nread_0 = $_sroa_speculated;
   while (1) {
    $6 = HEAP32[$__st_ >> 2] | 0;
    $7 = $6;
    $8$0 = HEAP32[$7 >> 2] | 0;
    $8$1 = HEAP32[$7 + 4 >> 2] | 0;
    $9 = HEAP32[$__cv_ >> 2] | 0;
    $add_ptr = $__extbuf + $__nread_0 | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 63]($9, $6, $arraydecay, $add_ptr, $__enxt, $__1buf, $add_ptr18, $__inxt) | 0;
    if (($call_i | 0) == 2) {
     $retval_0 = -1;
     label = 23;
     break;
    } else if (($call_i | 0) == 3) {
     label = 14;
     break;
    } else if (($call_i | 0) != 1) {
     $__nread_2 = $__nread_0;
     break L15;
    }
    $13 = HEAP32[$__st_ >> 2] | 0;
    HEAP32[$13 >> 2] = $8$0;
    HEAP32[$13 + 4 >> 2] = $8$1;
    if (($__nread_0 | 0) == 8) {
     $retval_0 = -1;
     label = 23;
     break;
    }
    $call27 = _fgetc(HEAP32[$__file_26 >> 2] | 0) | 0;
    if (($call27 | 0) == -1) {
     $retval_0 = -1;
     label = 23;
     break;
    }
    HEAP8[$add_ptr >> 0] = $call27;
    $__nread_0 = $__nread_0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP8[$__1buf >> 0] = HEAP8[$arraydecay >> 0] | 0;
    $__nread_2 = $__nread_0;
    break;
   } else if ((label | 0) == 23) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  } else {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread_2 = $_sroa_speculated;
  }
 } while (0);
 do {
  if ($__consume) {
   $18 = HEAP8[$__1buf >> 0] | 0;
   HEAP32[$this + 48 >> 2] = $18 & 255;
   $19 = $18;
  } else {
   $__file_49 = $this + 32 | 0;
   $__i43_0 = $__nread_2;
   while (1) {
    if (($__i43_0 | 0) <= 0) {
     label = 21;
     break;
    }
    $dec = $__i43_0 - 1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $dec >> 0] | 0, HEAP32[$__file_49 >> 2] | 0) | 0) == -1) {
     $retval_0 = -1;
     label = 23;
     break;
    } else {
     $__i43_0 = $dec;
    }
   }
   if ((label | 0) == 21) {
    $19 = HEAP8[$__1buf >> 0] | 0;
    break;
   } else if ((label | 0) == 23) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = $19 & 255;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZL9subdivideP10BoundsItemiiiiRiP19rcChunkyTriMeshNodeiS1_PiPKi($items, $imin, $imax, $curNode, $nodes, $maxNodes, $curTri, $outTris, $inTris) {
 $items = $items | 0;
 $imin = $imin | 0;
 $imax = $imax | 0;
 $curNode = $curNode | 0;
 $nodes = $nodes | 0;
 $maxNodes = $maxNodes | 0;
 $curTri = $curTri | 0;
 $outTris = $outTris | 0;
 $inTris = $inTris | 0;
 var $sub = 0, $0 = 0, $cmp1 = 0, $arraydecay = 0, $arraydecay3 = 0, $1 = 0.0, $2 = 0.0, $arrayidx7_i = 0, $3 = 0.0, $4 = 0.0, $arrayidx15_i = 0, $i_01_i = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $i_03_i = 0, $9 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $i_0_i = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $i4_06 = 0, $mul = 0, $23 = 0, $mul9 = 0, $cond_i = 0, $add = 0;
 $sub = $imax - $imin | 0;
 $0 = HEAP32[$curNode >> 2] | 0;
 if (($0 | 0) > ($maxNodes | 0)) {
  return;
 }
 HEAP32[$curNode >> 2] = $0 + 1;
 $cmp1 = ($sub | 0) > 256;
 $arraydecay = $nodes + ($0 * 24 | 0) | 0;
 $arraydecay3 = $nodes + ($0 * 24 | 0) + 8 | 0;
 $1 = +HEAPF32[$items + ($imin * 20 | 0) >> 2];
 HEAPF32[$arraydecay >> 2] = $1;
 $2 = +HEAPF32[$items + ($imin * 20 | 0) + 4 >> 2];
 $arrayidx7_i = $nodes + ($0 * 24 | 0) + 4 | 0;
 HEAPF32[$arrayidx7_i >> 2] = $2;
 $3 = +HEAPF32[$items + ($imin * 20 | 0) + 8 >> 2];
 HEAPF32[$arraydecay3 >> 2] = $3;
 $4 = +HEAPF32[$items + ($imin * 20 | 0) + 12 >> 2];
 $arrayidx15_i = $nodes + ($0 * 24 | 0) + 12 | 0;
 HEAPF32[$arrayidx15_i >> 2] = $4;
 $i_01_i = $imin + 1 | 0;
 if (($i_01_i | 0) < ($imax | 0)) {
  $i_03_i = $i_01_i;
  $8 = $1;
  $7 = $2;
  $6 = $3;
  $5 = $4;
  while (1) {
   $9 = +HEAPF32[$items + ($i_03_i * 20 | 0) >> 2];
   if ($9 < $8) {
    HEAPF32[$arraydecay >> 2] = $9;
    $10 = $9;
   } else {
    $10 = $8;
   }
   $11 = +HEAPF32[$items + ($i_03_i * 20 | 0) + 4 >> 2];
   if ($11 < $7) {
    HEAPF32[$arrayidx7_i >> 2] = $11;
    $12 = $11;
   } else {
    $12 = $7;
   }
   $13 = +HEAPF32[$items + ($i_03_i * 20 | 0) + 8 >> 2];
   if ($13 > $6) {
    HEAPF32[$arraydecay3 >> 2] = $13;
    $14 = $13;
   } else {
    $14 = $6;
   }
   $15 = +HEAPF32[$items + ($i_03_i * 20 | 0) + 12 >> 2];
   if ($15 > $5) {
    HEAPF32[$arrayidx15_i >> 2] = $15;
    $16 = $15;
   } else {
    $16 = $5;
   }
   $i_0_i = $i_03_i + 1 | 0;
   if (($i_0_i | 0) < ($imax | 0)) {
    $i_03_i = $i_0_i;
    $8 = $10;
    $7 = $12;
    $6 = $14;
    $5 = $16;
   } else {
    $20 = $14;
    $19 = $10;
    $18 = $16;
    $17 = $12;
    break;
   }
  }
 } else {
  $20 = $3;
  $19 = $1;
  $18 = $4;
  $17 = $2;
 }
 if ($cmp1) {
  $cond_i = $18 - $17 > $20 - $19 | 0;
  if (($cond_i | 0) == 1) {
   _qsort($items + ($imin * 20 | 0) | 0, $sub, 20, 54);
  } else if (($cond_i | 0) == 0) {
   _qsort($items + ($imin * 20 | 0) | 0, $sub, 20, 40);
  }
  $add = (($sub | 0) / 2 | 0) + $imin | 0;
  __ZL9subdivideP10BoundsItemiiiiRiP19rcChunkyTriMeshNodeiS1_PiPKi($items, $imin, $add, $curNode, $nodes, $maxNodes, $curTri, $outTris, $inTris);
  __ZL9subdivideP10BoundsItemiiiiRiP19rcChunkyTriMeshNodeiS1_PiPKi($items, $add, $imax, $curNode, $nodes, $maxNodes, $curTri, $outTris, $inTris);
  HEAP32[$nodes + ($0 * 24 | 0) + 16 >> 2] = $0 - (HEAP32[$curNode >> 2] | 0);
  return;
 } else {
  HEAP32[$nodes + ($0 * 24 | 0) + 16 >> 2] = HEAP32[$curTri >> 2];
  HEAP32[$nodes + ($0 * 24 | 0) + 20 >> 2] = $sub;
  if (($imax | 0) > ($imin | 0)) {
   $i4_06 = $imin;
  } else {
   return;
  }
  do {
   $mul = (HEAP32[$items + ($i4_06 * 20 | 0) + 16 >> 2] | 0) * 3 | 0;
   $23 = HEAP32[$curTri >> 2] | 0;
   $mul9 = $23 * 3 | 0;
   HEAP32[$curTri >> 2] = $23 + 1;
   HEAP32[$outTris + ($mul9 << 2) >> 2] = HEAP32[$inTris + ($mul << 2) >> 2];
   HEAP32[$outTris + ($mul9 + 1 << 2) >> 2] = HEAP32[$inTris + ($mul + 1 << 2) >> 2];
   HEAP32[$outTris + ($mul9 + 2 << 2) >> 2] = HEAP32[$inTris + ($mul + 2 << 2) >> 2];
   $i4_06 = $i4_06 + 1 | 0;
  } while (($i4_06 | 0) < ($imax | 0));
  return;
 }
}
function __ZNK14dtNavMeshQuery26closestPointOnPolyBoundaryEjPKfPf($this_0_0_val, $ref, $pos, $closest) {
 $this_0_0_val = $this_0_0_val | 0;
 $ref = $ref | 0;
 $pos = $pos | 0;
 $closest = $closest | 0;
 var $verts = 0, $edged = 0, $edget = 0, $0 = 0, $1 = 0, $and10_i_i = 0, $and11_i_i = 0, $4 = 0, $6 = 0, $8 = 0, $10 = 0, $11 = 0, $conv = 0, $12 = 0, $nv_033 = 0, $mul = 0, $mul6 = 0, $nv_0_lcssa = 0, $i14_028 = 0, $imin_027 = 0, $dmin_026 = 0.0, $20 = 0.0, $cmp19 = 0, $imin_1 = 0, $inc24 = 0, $imin_0_lcssa = 0, $mul26 = 0, $mul28 = 0, $21 = 0.0, $22 = 0.0, $24 = 0.0, $26 = 0.0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 120 | 0;
 $verts = sp | 0;
 $edged = sp + 72 | 0;
 $edget = sp + 96 | 0;
 if (($ref | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $0 = HEAP32[$this_0_0_val + 76 >> 2] | 0;
 $1 = HEAP32[$this_0_0_val + 80 >> 2] | 0;
 $and10_i_i = $ref >>> ($1 >>> 0) & (1 << $0) - 1;
 $and11_i_i = (1 << $1) - 1 & $ref;
 if (!($and10_i_i >>> 0 < (HEAP32[$this_0_0_val + 48 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $4 = HEAP32[$this_0_0_val + 68 >> 2] | 0;
 if ((HEAP32[$4 + ($and10_i_i * 60 | 0) >> 2] | 0) != ((1 << HEAP32[$this_0_0_val + 72 >> 2]) - 1 & $ref >>> (($1 + $0 | 0) >>> 0) | 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $6 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
 if (($6 | 0) == 0) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if (!($and11_i_i >>> 0 < (HEAP32[$6 + 24 >> 2] | 0) >>> 0)) {
  $retval_0 = -2147483640;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $8 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 12 >> 2] | 0;
 $10 = HEAP8[$8 + ($and11_i_i << 5) + 30 >> 0] | 0;
 if ($10 << 24 >> 24 == 0) {
  $nv_0_lcssa = 0;
 } else {
  $11 = HEAP32[$4 + ($and10_i_i * 60 | 0) + 16 >> 2] | 0;
  $conv = $10 & 255;
  $12 = $conv >>> 0 > 1 >>> 0;
  $nv_033 = 0;
  do {
   $mul = $nv_033 * 3 | 0;
   $mul6 = (HEAPU16[$8 + ($and11_i_i << 5) + 4 + ($nv_033 << 1) >> 1] | 0) * 3 | 0;
   HEAPF32[$verts + ($mul << 2) >> 2] = +HEAPF32[$11 + ($mul6 << 2) >> 2];
   HEAPF32[$verts + ($mul + 1 << 2) >> 2] = +HEAPF32[$11 + ($mul6 + 1 << 2) >> 2];
   HEAPF32[$verts + ($mul + 2 << 2) >> 2] = +HEAPF32[$11 + ($mul6 + 2 << 2) >> 2];
   $nv_033 = $nv_033 + 1 | 0;
  } while (($nv_033 | 0) < ($conv | 0));
  $nv_0_lcssa = $12 ? $conv : 1;
 }
 if (__Z24dtDistancePtPolyEdgesSqrPKfS0_iPfS1_($pos, $verts | 0, $nv_0_lcssa, $edged | 0, $edget | 0) | 0) {
  HEAPF32[$closest >> 2] = +HEAPF32[$pos >> 2];
  HEAPF32[$closest + 4 >> 2] = +HEAPF32[$pos + 4 >> 2];
  HEAPF32[$closest + 8 >> 2] = +HEAPF32[$pos + 8 >> 2];
  $retval_0 = 1073741824;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if (($nv_0_lcssa | 0) > 0) {
  $dmin_026 = 3.4028234663852886e+38;
  $imin_027 = -1;
  $i14_028 = 0;
  while (1) {
   $20 = +HEAPF32[$edged + ($i14_028 << 2) >> 2];
   $cmp19 = $20 < $dmin_026;
   $imin_1 = $cmp19 ? $i14_028 : $imin_027;
   $inc24 = $i14_028 + 1 | 0;
   if (($inc24 | 0) < ($nv_0_lcssa | 0)) {
    $dmin_026 = $cmp19 ? $20 : $dmin_026;
    $imin_027 = $imin_1;
    $i14_028 = $inc24;
   } else {
    $imin_0_lcssa = $imin_1;
    break;
   }
  }
 } else {
  $imin_0_lcssa = -1;
 }
 $mul26 = $imin_0_lcssa * 3 | 0;
 $mul28 = (($imin_0_lcssa + 1 | 0) % ($nv_0_lcssa | 0) | 0) * 3 | 0;
 $21 = +HEAPF32[$edget + ($imin_0_lcssa << 2) >> 2];
 $22 = +HEAPF32[$verts + ($mul26 << 2) >> 2];
 HEAPF32[$closest >> 2] = $22 + $21 * (+HEAPF32[$verts + ($mul28 << 2) >> 2] - $22);
 $24 = +HEAPF32[$verts + ($mul26 + 1 << 2) >> 2];
 HEAPF32[$closest + 4 >> 2] = $24 + $21 * (+HEAPF32[$verts + ($mul28 + 1 << 2) >> 2] - $24);
 $26 = +HEAPF32[$verts + ($mul26 + 2 << 2) >> 2];
 HEAPF32[$closest + 8 >> 2] = $26 + $21 * (+HEAPF32[$verts + ($mul28 + 2 << 2) >> 2] - $26);
 $retval_0 = 1073741824;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function _scanexp($f) {
 $f = $f | 0;
 var $rpos = 0, $0 = 0, $shend = 0, $cond = 0, $3 = 0, $conv7 = 0, $cond19 = 0, $c_0 = 0, $neg_0 = 0, $x_045 = 0, $c_144 = 0, $10 = 0, $c_1_be = 0, $cmp44 = 0, $phitmp$0 = 0, $phitmp$1 = 0, $y_0_lcssa$0 = 0, $y_0_lcssa$1 = 0, $c_2_lcssa = 0, $y_040$0 = 0, $y_040$1 = 0, $c_239 = 0, $13 = 0, $c_2_be = 0, $$etemp$2$1 = 0, $16 = 0, $c_3_be = 0, $tobool115 = 0, $retval_0$0 = 0, $retval_0$1 = 0, $mul71$0 = 0, $mul71$1 = 0, $add73$0 = 0, $sub74$0 = 0, $sub74$1 = 0, $sub117$0 = 0;
 $rpos = $f + 4 | 0;
 $0 = HEAP32[$rpos >> 2] | 0;
 $shend = $f + 100 | 0;
 if ($0 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
  HEAP32[$rpos >> 2] = $0 + 1;
  $cond = HEAPU8[$0 >> 0] | 0;
 } else {
  $cond = ___shgetc($f) | 0;
 }
 if (($cond | 0) == 45 | ($cond | 0) == 43) {
  $3 = HEAP32[$rpos >> 2] | 0;
  $conv7 = ($cond | 0) == 45 | 0;
  if ($3 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
   HEAP32[$rpos >> 2] = $3 + 1;
   $cond19 = HEAPU8[$3 >> 0] | 0;
  } else {
   $cond19 = ___shgetc($f) | 0;
  }
  if (($cond19 - 48 | 0) >>> 0 > 9 >>> 0) {
   if ((HEAP32[$shend >> 2] | 0) == 0) {
    $neg_0 = $conv7;
    $c_0 = $cond19;
   } else {
    HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
    $neg_0 = $conv7;
    $c_0 = $cond19;
   }
  } else {
   $neg_0 = $conv7;
   $c_0 = $cond19;
  }
 } else {
  $neg_0 = 0;
  $c_0 = $cond;
 }
 if (($c_0 - 48 | 0) >>> 0 > 9 >>> 0) {
  if ((HEAP32[$shend >> 2] | 0) == 0) {
   $retval_0$1 = -2147483648;
   $retval_0$0 = 0;
   return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
  }
  HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
  $retval_0$1 = -2147483648;
  $retval_0$0 = 0;
  return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
 } else {
  $c_144 = $c_0;
  $x_045 = 0;
 }
 while (1) {
  $x_045 = $c_144 - 48 + ($x_045 * 10 | 0) | 0;
  $10 = HEAP32[$rpos >> 2] | 0;
  if ($10 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
   HEAP32[$rpos >> 2] = $10 + 1;
   $c_1_be = HEAPU8[$10 >> 0] | 0;
  } else {
   $c_1_be = ___shgetc($f) | 0;
  }
  $cmp44 = ($c_1_be - 48 | 0) >>> 0 < 10 >>> 0;
  if (!($cmp44 & ($x_045 | 0) < 214748364)) {
   break;
  } else {
   $c_144 = $c_1_be;
  }
 }
 $phitmp$0 = $x_045;
 $phitmp$1 = ($x_045 | 0) < 0 | 0 ? -1 : 0;
 if ($cmp44) {
  $c_239 = $c_1_be;
  $y_040$1 = $phitmp$1;
  $y_040$0 = $phitmp$0;
  while (1) {
   $mul71$0 = ___muldi3($y_040$0, $y_040$1, 10, 0) | 0;
   $mul71$1 = tempRet0;
   $add73$0 = _i64Add($c_239, ($c_239 | 0) < 0 | 0 ? -1 : 0, -48, -1) | 0;
   $sub74$0 = _i64Add($add73$0, tempRet0, $mul71$0, $mul71$1) | 0;
   $sub74$1 = tempRet0;
   $13 = HEAP32[$rpos >> 2] | 0;
   if ($13 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
    HEAP32[$rpos >> 2] = $13 + 1;
    $c_2_be = HEAPU8[$13 >> 0] | 0;
   } else {
    $c_2_be = ___shgetc($f) | 0;
   }
   $$etemp$2$1 = 21474836;
   if (($c_2_be - 48 | 0) >>> 0 < 10 >>> 0 & (($sub74$1 | 0) < ($$etemp$2$1 | 0) | ($sub74$1 | 0) == ($$etemp$2$1 | 0) & $sub74$0 >>> 0 < 2061584302 >>> 0)) {
    $c_239 = $c_2_be;
    $y_040$1 = $sub74$1;
    $y_040$0 = $sub74$0;
   } else {
    $c_2_lcssa = $c_2_be;
    $y_0_lcssa$1 = $sub74$1;
    $y_0_lcssa$0 = $sub74$0;
    break;
   }
  }
 } else {
  $c_2_lcssa = $c_1_be;
  $y_0_lcssa$1 = $phitmp$1;
  $y_0_lcssa$0 = $phitmp$0;
 }
 if (($c_2_lcssa - 48 | 0) >>> 0 < 10 >>> 0) {
  do {
   $16 = HEAP32[$rpos >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$shend >> 2] | 0) >>> 0) {
    HEAP32[$rpos >> 2] = $16 + 1;
    $c_3_be = HEAPU8[$16 >> 0] | 0;
   } else {
    $c_3_be = ___shgetc($f) | 0;
   }
  } while (($c_3_be - 48 | 0) >>> 0 < 10 >>> 0);
 }
 if ((HEAP32[$shend >> 2] | 0) != 0) {
  HEAP32[$rpos >> 2] = (HEAP32[$rpos >> 2] | 0) - 1;
 }
 $tobool115 = ($neg_0 | 0) != 0;
 $sub117$0 = _i64Subtract(0, 0, $y_0_lcssa$0, $y_0_lcssa$1) | 0;
 $retval_0$1 = $tobool115 ? tempRet0 : $y_0_lcssa$1;
 $retval_0$0 = $tobool115 ? $sub117$0 : $y_0_lcssa$0;
 return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $__extbuf = 0, $__1buf = 0, $__enxt = 0, $__inxt = 0, $__last_consumed_is_next_ = 0, $__last_consumed_ = 0, $1 = 0, $2 = 0, $_sroa_speculated = 0, $__file_ = 0, $__i_024 = 0, $call8 = 0, $__st_ = 0, $__cv_ = 0, $arraydecay = 0, $add_ptr19 = 0, $__file_27 = 0, $__nread_0 = 0, $6 = 0, $7 = 0, $8$0 = 0, $8$1 = 0, $9 = 0, $add_ptr = 0, $call_i = 0, $13 = 0, $call28 = 0, $__nread_2 = 0, $__file_52 = 0, $__i45_0 = 0, $dec = 0, $18 = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 16 | 0;
 $__inxt = sp + 24 | 0;
 $__last_consumed_is_next_ = $this + 52 | 0;
 if ((HEAP8[$__last_consumed_is_next_ >> 0] | 0) != 0) {
  $__last_consumed_ = $this + 48 | 0;
  $1 = HEAP32[$__last_consumed_ >> 2] | 0;
  if (!$__consume) {
   $retval_0 = $1;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  HEAP32[$__last_consumed_ >> 2] = -1;
  HEAP8[$__last_consumed_is_next_ >> 0] = 0;
  $retval_0 = $1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $2 = HEAP32[$this + 44 >> 2] | 0;
 $_sroa_speculated = ($2 | 0) > 1 ? $2 : 1;
 L8 : do {
  if (($_sroa_speculated | 0) > 0) {
   $__file_ = $this + 32 | 0;
   $__i_024 = 0;
   while (1) {
    $call8 = _fgetc(HEAP32[$__file_ >> 2] | 0) | 0;
    if (($call8 | 0) == -1) {
     $retval_0 = -1;
     break;
    }
    HEAP8[$__extbuf + $__i_024 >> 0] = $call8;
    $__i_024 = $__i_024 + 1 | 0;
    if (($__i_024 | 0) >= ($_sroa_speculated | 0)) {
     break L8;
    }
   }
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 } while (0);
 L15 : do {
  if ((HEAP8[$this + 53 >> 0] | 0) == 0) {
   $__st_ = $this + 40 | 0;
   $__cv_ = $this + 36 | 0;
   $arraydecay = $__extbuf | 0;
   $add_ptr19 = $__1buf + 4 | 0;
   $__file_27 = $this + 32 | 0;
   $__nread_0 = $_sroa_speculated;
   while (1) {
    $6 = HEAP32[$__st_ >> 2] | 0;
    $7 = $6;
    $8$0 = HEAP32[$7 >> 2] | 0;
    $8$1 = HEAP32[$7 + 4 >> 2] | 0;
    $9 = HEAP32[$__cv_ >> 2] | 0;
    $add_ptr = $__extbuf + $__nread_0 | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 63]($9, $6, $arraydecay, $add_ptr, $__enxt, $__1buf, $add_ptr19, $__inxt) | 0;
    if (($call_i | 0) == 3) {
     label = 14;
     break;
    } else if (($call_i | 0) == 2) {
     $retval_0 = -1;
     label = 22;
     break;
    } else if (($call_i | 0) != 1) {
     $__nread_2 = $__nread_0;
     break L15;
    }
    $13 = HEAP32[$__st_ >> 2] | 0;
    HEAP32[$13 >> 2] = $8$0;
    HEAP32[$13 + 4 >> 2] = $8$1;
    if (($__nread_0 | 0) == 8) {
     $retval_0 = -1;
     label = 22;
     break;
    }
    $call28 = _fgetc(HEAP32[$__file_27 >> 2] | 0) | 0;
    if (($call28 | 0) == -1) {
     $retval_0 = -1;
     label = 22;
     break;
    }
    HEAP8[$add_ptr >> 0] = $call28;
    $__nread_0 = $__nread_0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP32[$__1buf >> 2] = HEAP8[$arraydecay >> 0] | 0;
    $__nread_2 = $__nread_0;
    break;
   } else if ((label | 0) == 22) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0] | 0;
   $__nread_2 = $_sroa_speculated;
  }
 } while (0);
 if ($__consume) {
  $18 = HEAP32[$__1buf >> 2] | 0;
  HEAP32[$this + 48 >> 2] = $18;
  $retval_0 = $18;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $__file_52 = $this + 32 | 0;
 $__i45_0 = $__nread_2;
 while (1) {
  if (($__i45_0 | 0) <= 0) {
   break;
  }
  $dec = $__i45_0 - 1 | 0;
  if ((_ungetc(HEAP8[$__extbuf + $dec >> 0] | 0, HEAP32[$__file_52 >> 2] | 0) | 0) == -1) {
   $retval_0 = -1;
   label = 22;
   break;
  } else {
   $__i45_0 = $dec;
  }
 }
 if ((label | 0) == 22) {
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $retval_0 = HEAP32[$__1buf >> 2] | 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z21rcCreateChunkyTriMeshPKfPKiiiP15rcChunkyTriMesh($verts, $tris, $ntris, $cm) {
 $verts = $verts | 0;
 $tris = $tris | 0;
 $ntris = $ntris | 0;
 $cm = $cm | 0;
 var $curTri = 0, $curNode = 0, $mul = 0, $0$0 = 0, $7 = 0, $nodes = 0, $8$0 = 0, $15 = 0, $16$0 = 0, $call_i7 = 0, $23 = 0, $i_063 = 0, $mul14 = 0, $mul18 = 0, $25 = 0.0, $arrayidx21 = 0, $arrayidx22 = 0, $26 = 0.0, $arrayidx28 = 0, $arrayidx30 = 0, $mul35 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $mul35_1 = 0, $35 = 0.0, $36 = 0, $maxTrisPerChunk = 0, $37 = 0, $38 = 0, $i79_060 = 0, $40 = 0, $41 = 0, $42 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $curTri = sp | 0;
 $curNode = sp + 8 | 0;
 $mul = (($ntris + 255 | 0) / 256 | 0) << 2;
 $0$0 = _llvm_umul_with_overflow_i32($mul | 0, 24) | 0;
 $7 = __Znwj(tempRet0 ? -1 : $0$0) | 0;
 $nodes = $cm | 0;
 HEAP32[$nodes >> 2] = $7;
 $8$0 = _llvm_umul_with_overflow_i32($ntris * 3 | 0 | 0, 4) | 0;
 $15 = __Znwj(tempRet0 ? -1 : $8$0) | 0;
 HEAP32[$cm + 8 >> 2] = $15;
 HEAP32[$cm + 12 >> 2] = $ntris;
 $16$0 = _llvm_umul_with_overflow_i32($ntris | 0, 20) | 0;
 $call_i7 = __Znwj(tempRet0 ? -1 : $16$0) | 0;
 $23 = $call_i7;
 if (($ntris | 0) > 0) {
  $i_063 = 0;
  do {
   $mul14 = $i_063 * 3 | 0;
   HEAP32[$23 + ($i_063 * 20 | 0) + 16 >> 2] = $i_063;
   $mul18 = (HEAP32[$tris + ($mul14 << 2) >> 2] | 0) * 3 | 0;
   $25 = +HEAPF32[$verts + ($mul18 << 2) >> 2];
   $arrayidx21 = $23 + ($i_063 * 20 | 0) + 8 | 0;
   HEAPF32[$arrayidx21 >> 2] = $25;
   $arrayidx22 = $23 + ($i_063 * 20 | 0) | 0;
   HEAPF32[$arrayidx22 >> 2] = $25;
   $26 = +HEAPF32[$verts + ($mul18 + 2 << 2) >> 2];
   $arrayidx28 = $23 + ($i_063 * 20 | 0) + 12 | 0;
   HEAPF32[$arrayidx28 >> 2] = $26;
   $arrayidx30 = $23 + ($i_063 * 20 | 0) + 4 | 0;
   HEAPF32[$arrayidx30 >> 2] = $26;
   $mul35 = (HEAP32[$tris + ($mul14 + 1 << 2) >> 2] | 0) * 3 | 0;
   $28 = +HEAPF32[$verts + ($mul35 << 2) >> 2];
   if ($28 < $25) {
    HEAPF32[$arrayidx22 >> 2] = $28;
    $29 = $28;
   } else {
    $29 = $25;
   }
   $30 = +HEAPF32[$verts + ($mul35 + 2 << 2) >> 2];
   if ($30 < $26) {
    HEAPF32[$arrayidx30 >> 2] = $30;
    $31 = $30;
   } else {
    $31 = $26;
   }
   if ($28 > $25) {
    HEAPF32[$arrayidx21 >> 2] = $28;
    $32 = $28;
   } else {
    $32 = $25;
   }
   if ($30 > $26) {
    HEAPF32[$arrayidx28 >> 2] = $30;
    $33 = $30;
   } else {
    $33 = $26;
   }
   $mul35_1 = (HEAP32[$tris + ($mul14 + 2 << 2) >> 2] | 0) * 3 | 0;
   $35 = +HEAPF32[$verts + ($mul35_1 << 2) >> 2];
   if ($35 < $29) {
    HEAPF32[$arrayidx22 >> 2] = $35;
   }
   $42 = +HEAPF32[$verts + ($mul35_1 + 2 << 2) >> 2];
   if ($42 < $31) {
    HEAPF32[$arrayidx30 >> 2] = $42;
   }
   if ($35 > $32) {
    HEAPF32[$arrayidx21 >> 2] = $35;
   }
   if ($42 > $33) {
    HEAPF32[$arrayidx28 >> 2] = $42;
   }
   $i_063 = $i_063 + 1 | 0;
  } while (($i_063 | 0) < ($ntris | 0));
 }
 HEAP32[$curTri >> 2] = 0;
 HEAP32[$curNode >> 2] = 0;
 __ZL9subdivideP10BoundsItemiiiiRiP19rcChunkyTriMeshNodeiS1_PiPKi($23, 0, $ntris, $curNode, $7, $mul, $curTri, $15, $tris);
 if (($call_i7 | 0) != 0) {
  _free($call_i7);
 }
 $36 = HEAP32[$curNode >> 2] | 0;
 HEAP32[$cm + 4 >> 2] = $36;
 $maxTrisPerChunk = $cm + 16 | 0;
 HEAP32[$maxTrisPerChunk >> 2] = 0;
 if (($36 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $37 = HEAP32[$nodes >> 2] | 0;
 $i79_060 = 0;
 $38 = 0;
 while (1) {
  if ((HEAP32[$37 + ($i79_060 * 24 | 0) + 16 >> 2] | 0) > -1) {
   $40 = HEAP32[$37 + ($i79_060 * 24 | 0) + 20 >> 2] | 0;
   if (($40 | 0) > ($38 | 0)) {
    HEAP32[$maxTrisPerChunk >> 2] = $40;
    $41 = $40;
   } else {
    $41 = $38;
   }
  } else {
   $41 = $38;
  }
  $i79_060 = $i79_060 + 1 | 0;
  if (($i79_060 | 0) >= ($36 | 0)) {
   break;
  } else {
   $38 = $41;
  }
 }
 STACKTOP = sp;
 return;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $__s_0, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg_result = $agg_result | 0;
 $__s_0 = $__s_0 | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $__sp = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_div = 0, $__width__i = 0, $1 = 0, $__ns_0 = 0, $sub_ptr_lhs_cast4 = 0, $sub_ptr_sub6 = 0, $sub_ptr_div7 = 0, $and_i_i_i1 = 0, $5 = 0, $__p_0_i2_ph = 0, $d_addr_04_i_i = 0, $n_addr_03_i_i = 0, $__size__i_i_i = 0, $cond_i_i = 0, $12 = 0, $19 = 0, $sub_ptr_sub29 = 0, $sub_ptr_div30 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp | 0;
 if (($__s_0 | 0) == 0) {
  HEAP32[$agg_result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $sub_ptr_lhs_cast = $__oe;
 $sub_ptr_rhs_cast = $__ob;
 $sub_ptr_div = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast >> 2;
 $__width__i = $__iob + 12 | 0;
 $1 = HEAP32[$__width__i >> 2] | 0;
 $__ns_0 = ($1 | 0) > ($sub_ptr_div | 0) ? $1 - $sub_ptr_div | 0 : 0;
 $sub_ptr_lhs_cast4 = $__op;
 $sub_ptr_sub6 = $sub_ptr_lhs_cast4 - $sub_ptr_rhs_cast | 0;
 $sub_ptr_div7 = $sub_ptr_sub6 >> 2;
 if (($sub_ptr_sub6 | 0) > 0) {
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $__ob, $sub_ptr_div7) | 0) != ($sub_ptr_div7 | 0)) {
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 }
 do {
  if (($__ns_0 | 0) > 0) {
   if ($__ns_0 >>> 0 > 1073741807 >>> 0) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
   }
   if ($__ns_0 >>> 0 < 2 >>> 0) {
    HEAP8[$__sp >> 0] = $__ns_0 << 1;
    $__p_0_i2_ph = $__sp + 4 | 0;
   } else {
    $and_i_i_i1 = $__ns_0 + 4 & -4;
    $5 = __Znwj($and_i_i_i1 << 2) | 0;
    HEAP32[$__sp + 8 >> 2] = $5;
    HEAP32[$__sp >> 2] = $and_i_i_i1 | 1;
    HEAP32[$__sp + 4 >> 2] = $__ns_0;
    $__p_0_i2_ph = $5;
   }
   $n_addr_03_i_i = $__ns_0;
   $d_addr_04_i_i = $__p_0_i2_ph;
   while (1) {
    $n_addr_03_i_i = $n_addr_03_i_i - 1 | 0;
    HEAP32[$d_addr_04_i_i >> 2] = $__fl;
    if (($n_addr_03_i_i | 0) == 0) {
     break;
    } else {
     $d_addr_04_i_i = $d_addr_04_i_i + 4 | 0;
    }
   }
   HEAP32[$__p_0_i2_ph + ($__ns_0 << 2) >> 2] = 0;
   $__size__i_i_i = $__sp;
   if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
    $cond_i_i = $__sp + 4 | 0;
   } else {
    $cond_i_i = HEAP32[$__sp + 8 >> 2] | 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $cond_i_i, $__ns_0) | 0) == ($__ns_0 | 0)) {
    if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
     break;
    }
    $19 = HEAP32[$__sp + 8 >> 2] | 0;
    if (($19 | 0) == 0) {
     break;
    }
    _free($19);
    break;
   }
   HEAP32[$agg_result >> 2] = 0;
   if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
    STACKTOP = sp;
    return;
   }
   $12 = HEAP32[$__sp + 8 >> 2] | 0;
   if (($12 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   _free($12);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $sub_ptr_sub29 = $sub_ptr_lhs_cast - $sub_ptr_lhs_cast4 | 0;
 $sub_ptr_div30 = $sub_ptr_sub29 >> 2;
 if (($sub_ptr_sub29 | 0) > 0) {
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $__op, $sub_ptr_div30) | 0) != ($sub_ptr_div30 | 0)) {
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 }
 HEAP32[$__width__i >> 2] = 0;
 HEAP32[$agg_result >> 2] = $__s_0;
 STACKTOP = sp;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $info_i = 0, $info = 0, $3 = 0, $5 = 0, $add_ptr_i = 0, $8 = 0, $9 = 0, $dst_ptr_leading_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr_i = 0, $path_dst_ptr_to_static_ptr_i = 0, $path_dynamic_ptr_to_static_ptr_i = 0, $path_dynamic_ptr_to_dst_ptr_i = 0, $number_to_dst_ptr_i = 0, $16 = 0, $dst_ptr_0_i = 0, $26 = 0, $retval_1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $info_i = sp | 0;
 $info = sp + 56 | 0;
 if (($this | 0) == ($thrown_type | 0)) {
  $retval_1 = 1;
  STACKTOP = sp;
  return $retval_1 | 0;
 }
 if (($thrown_type | 0) == 0) {
  $retval_1 = 0;
  STACKTOP = sp;
  return $retval_1 | 0;
 }
 $3 = $thrown_type;
 $5 = HEAP32[$thrown_type >> 2] | 0;
 $add_ptr_i = $3 + (HEAP32[$5 - 8 >> 2] | 0) | 0;
 $8 = HEAP32[$5 - 4 >> 2] | 0;
 $9 = $8;
 HEAP32[$info_i >> 2] = 19472;
 HEAP32[$info_i + 4 >> 2] = $3;
 HEAP32[$info_i + 8 >> 2] = 19488;
 $dst_ptr_leading_to_static_ptr_i = $info_i + 16 | 0;
 $dst_ptr_not_leading_to_static_ptr_i = $info_i + 20 | 0;
 $path_dst_ptr_to_static_ptr_i = $info_i + 24 | 0;
 $path_dynamic_ptr_to_static_ptr_i = $info_i + 28 | 0;
 $path_dynamic_ptr_to_dst_ptr_i = $info_i + 32 | 0;
 $number_to_dst_ptr_i = $info_i + 40 | 0;
 _memset($info_i + 12 | 0, 0, 43) | 0;
 do {
  if (($8 | 0) == 19472) {
   HEAP32[$info_i + 48 >> 2] = 1;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[4868] | 0) + 20 >> 2] & 63]($9, $info_i, $add_ptr_i, $add_ptr_i, 1, 0);
   if ((HEAP32[$path_dst_ptr_to_static_ptr_i >> 2] | 0) == 1) {
    $dst_ptr_0_i = $add_ptr_i;
   } else {
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
  } else {
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 31]($9, $info_i, $add_ptr_i, 1, 0);
   $16 = HEAP32[$info_i + 36 >> 2] | 0;
   if (($16 | 0) == 1) {
    if ((HEAP32[$path_dst_ptr_to_static_ptr_i >> 2] | 0) != 1) {
     if (!((HEAP32[$number_to_dst_ptr_i >> 2] | 0) == 0 & (HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1 & (HEAP32[$path_dynamic_ptr_to_dst_ptr_i >> 2] | 0) == 1)) {
      $retval_1 = 0;
      STACKTOP = sp;
      return $retval_1 | 0;
     }
    }
    $dst_ptr_0_i = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
    break;
   } else if (($16 | 0) == 0) {
    if ((HEAP32[$number_to_dst_ptr_i >> 2] | 0) == 1 & (HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1 & (HEAP32[$path_dynamic_ptr_to_dst_ptr_i >> 2] | 0) == 1) {
     $dst_ptr_0_i = HEAP32[$dst_ptr_not_leading_to_static_ptr_i >> 2] | 0;
     break;
    } else {
     $retval_1 = 0;
    }
    STACKTOP = sp;
    return $retval_1 | 0;
   } else {
    $retval_1 = 0;
    STACKTOP = sp;
    return $retval_1 | 0;
   }
  }
 } while (0);
 $26 = $dst_ptr_0_i;
 if (($dst_ptr_0_i | 0) == 0) {
  $retval_1 = 0;
  STACKTOP = sp;
  return $retval_1 | 0;
 }
 _memset($info | 0, 0, 56) | 0;
 HEAP32[$info >> 2] = $26;
 HEAP32[$info + 8 >> 2] = $this;
 HEAP32[$info + 12 >> 2] = -1;
 HEAP32[$info + 48 >> 2] = 1;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$dst_ptr_0_i >> 2] | 0) + 28 >> 2] & 63]($26, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
 if ((HEAP32[$info + 24 >> 2] | 0) != 1) {
  $retval_1 = 0;
  STACKTOP = sp;
  return $retval_1 | 0;
 }
 HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
 $retval_1 = 1;
 STACKTOP = sp;
 return $retval_1 | 0;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $s_addr_0_i = 0, $sub_ptr_rhs_cast_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $__size__i_i_i = 0, $1 = 0, $2 = 0, $4 = 0, $cond_i_i = 0, $cond_i16_i = 0, $tobool11_i = 0, $dec12_in_i = 0, $d_addr_017_i = 0, $n_addr_116_i = 0, $s_addr_015_i = 0, $cond_i_i10 = 0, $mul_i = 0, $_sroa_speculated_i = 0, $cond_i = 0, $10 = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0;
 $s_addr_0_i = $__s;
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_rhs_cast_i = $__s;
 $sub_ptr_sub_i = $s_addr_0_i - $sub_ptr_rhs_cast_i | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 $__size__i_i_i = $this;
 $1 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($1 & 1) == 0) {
  $cond_i_i = 1;
  $4 = $1;
 } else {
  $2 = HEAP32[$this >> 2] | 0;
  $cond_i_i = ($2 & -2) - 1 | 0;
  $4 = $2 & 255;
 }
 if (!($sub_ptr_div_i >>> 0 > $cond_i_i >>> 0)) {
  if (($4 & 1) == 0) {
   $cond_i16_i = $this + 4 | 0;
  } else {
   $cond_i16_i = HEAP32[$this + 8 >> 2] | 0;
  }
  $tobool11_i = ($sub_ptr_div_i | 0) == 0;
  if ($cond_i16_i - $sub_ptr_rhs_cast_i >> 2 >>> 0 < $sub_ptr_div_i >>> 0) {
   if (!$tobool11_i) {
    $dec12_in_i = $sub_ptr_div_i;
    do {
     $dec12_in_i = $dec12_in_i - 1 | 0;
     HEAP32[$cond_i16_i + ($dec12_in_i << 2) >> 2] = HEAP32[$__s + ($dec12_in_i << 2) >> 2];
    } while (($dec12_in_i | 0) != 0);
   }
  } else {
   if (!$tobool11_i) {
    $s_addr_015_i = $__s;
    $n_addr_116_i = $sub_ptr_div_i;
    $d_addr_017_i = $cond_i16_i;
    while (1) {
     $n_addr_116_i = $n_addr_116_i - 1 | 0;
     HEAP32[$d_addr_017_i >> 2] = HEAP32[$s_addr_015_i >> 2];
     if (($n_addr_116_i | 0) == 0) {
      break;
     } else {
      $s_addr_015_i = $s_addr_015_i + 4 | 0;
      $d_addr_017_i = $d_addr_017_i + 4 | 0;
     }
    }
   }
  }
  HEAP32[$cond_i16_i + ($sub_ptr_div_i << 2) >> 2] = 0;
  if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
   HEAP8[$__size__i_i_i >> 0] = $sub_ptr_sub_i >>> 1;
   return;
  } else {
   HEAP32[$this + 4 >> 2] = $sub_ptr_div_i;
   return;
  }
 }
 if ((1073741806 - $cond_i_i | 0) >>> 0 < ($sub_ptr_div_i - $cond_i_i | 0) >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if (($4 & 1) == 0) {
  $cond_i_i10 = $this + 4 | 0;
 } else {
  $cond_i_i10 = HEAP32[$this + 8 >> 2] | 0;
 }
 if ($cond_i_i >>> 0 < 536870887 >>> 0) {
  $mul_i = $cond_i_i << 1;
  $_sroa_speculated_i = $sub_ptr_div_i >>> 0 < $mul_i >>> 0 ? $mul_i : $sub_ptr_div_i;
  if ($_sroa_speculated_i >>> 0 < 2 >>> 0) {
   $cond_i = 2;
  } else {
   $cond_i = $_sroa_speculated_i + 4 & -4;
  }
 } else {
  $cond_i = 1073741807;
 }
 $10 = __Znwj($cond_i << 2) | 0;
 if (($sub_ptr_div_i | 0) != 0) {
  $s_addr_03_i_i = $__s;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $10;
  while (1) {
   $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
   HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
   if (($n_addr_04_i_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
    $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
   }
  }
 }
 if (!(($cond_i_i | 0) == 1 | ($cond_i_i10 | 0) == 0)) {
  _free($cond_i_i10);
 }
 HEAP32[$this + 8 >> 2] = $10;
 HEAP32[$this >> 2] = $cond_i | 1;
 HEAP32[$this + 4 >> 2] = $sub_ptr_div_i;
 HEAP32[$10 + ($sub_ptr_div_i << 2) >> 2] = 0;
 return;
}
function runPostSets() {
 HEAP32[4456] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4458] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4460] = __ZTISt9exception;
 HEAP32[4462] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4464] = __ZTISt9exception;
 HEAP32[4466] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4468] = __ZTISt9exception;
 HEAP32[4470] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4474] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4476] = __ZTISt9exception;
 HEAP32[4478] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4512] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4516] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4580] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4584] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4604] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4606] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4642] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4646] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4682] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4686] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4706] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4708] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4710] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4712] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4716] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4720] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4724] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4726] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4728] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4730] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4732] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4734] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4736] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4762] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4766] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4786] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4790] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4794] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4798] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4800] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4802] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4804] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4838] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4840] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4842] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4844] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4848] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4852] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4854] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4856] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4860] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4864] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4868] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4872] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
 HEAP32[4876] = __ZTVN10__cxxabiv117__class_type_infoE + 8;
 HEAP32[4878] = __ZTVN10__cxxabiv120__si_class_type_infoE + 8;
}
function __ZN14dtNavMeshQuery4initEPK9dtNavMeshi($this, $nav, $maxNodes) {
 $this = $this | 0;
 $nav = $nav | 0;
 $maxNodes = $maxNodes | 0;
 var $m_nodePool = 0, $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, $call_i_i = 0, $10 = 0, $dec_i = 0, $or_i = 0, $or2_i = 0, $or4_i = 0, $or6_i = 0, $m_tinyNodePool = 0, $14 = 0, $call_i_i2 = 0, $15 = 0, $m_openList = 0, $19 = 0, $21 = 0, $23 = 0, $call_i_i13 = 0, $m_heap_i14 = 0, $call_i_i_i = 0, $retval_0 = 0, label = 0;
 HEAP32[$this >> 2] = $nav;
 $m_nodePool = $this + 56 | 0;
 $0 = HEAP32[$m_nodePool >> 2] | 0;
 do {
  if (($0 | 0) == 0) {
   label = 12;
  } else {
   if ((HEAP32[$0 + 12 >> 2] | 0) >= ($maxNodes | 0)) {
    _memset(HEAP32[$0 + 4 >> 2] | 0, -1 | 0, HEAP32[$0 + 16 >> 2] << 1 | 0) | 0;
    HEAP32[$0 + 20 >> 2] = 0;
    break;
   }
   $2 = HEAP32[$0 >> 2] | 0;
   if (($2 | 0) != 0) {
    _free($2);
   }
   $4 = HEAP32[$0 + 8 >> 2] | 0;
   if (($4 | 0) != 0) {
    _free($4);
   }
   $6 = HEAP32[$0 + 4 >> 2] | 0;
   if (($6 | 0) != 0) {
    _free($6);
   }
   $8 = HEAP32[$m_nodePool >> 2] | 0;
   if (($8 | 0) != 0) {
    _free($8);
   }
   HEAP32[$m_nodePool >> 2] = 0;
   label = 12;
  }
 } while (0);
 do {
  if ((label | 0) == 12) {
   $call_i_i = _malloc(24) | 0;
   if (($call_i_i | 0) != 0) {
    $10 = $call_i_i;
    $dec_i = (($maxNodes | 0) / 4 | 0) - 1 | 0;
    $or_i = $dec_i >>> 1 | $dec_i;
    $or2_i = $or_i >>> 2 | $or_i;
    $or4_i = $or2_i >>> 4 | $or2_i;
    $or6_i = $or4_i >>> 8 | $or4_i;
    __ZN10dtNodePoolC2Eii($10, $maxNodes, ($or6_i >>> 16 | $or6_i) + 1 | 0);
    HEAP32[$m_nodePool >> 2] = $10;
    break;
   }
   HEAP32[$m_nodePool >> 2] = 0;
   $retval_0 = -2147483644;
   return $retval_0 | 0;
  }
 } while (0);
 $m_tinyNodePool = $this + 52 | 0;
 $14 = HEAP32[$m_tinyNodePool >> 2] | 0;
 do {
  if (($14 | 0) == 0) {
   $call_i_i2 = _malloc(24) | 0;
   if (($call_i_i2 | 0) != 0) {
    $15 = $call_i_i2;
    __ZN10dtNodePoolC2Eii($15, 64, 32);
    HEAP32[$m_tinyNodePool >> 2] = $15;
    break;
   }
   HEAP32[$m_tinyNodePool >> 2] = 0;
   $retval_0 = -2147483644;
   return $retval_0 | 0;
  } else {
   _memset(HEAP32[$14 + 4 >> 2] | 0, -1 | 0, HEAP32[$14 + 16 >> 2] << 1 | 0) | 0;
   HEAP32[$14 + 20 >> 2] = 0;
  }
 } while (0);
 $m_openList = $this + 60 | 0;
 $19 = HEAP32[$m_openList >> 2] | 0;
 if (($19 | 0) != 0) {
  if ((HEAP32[$19 + 4 >> 2] | 0) >= ($maxNodes | 0)) {
   HEAP32[$19 + 8 >> 2] = 0;
   $retval_0 = 1073741824;
   return $retval_0 | 0;
  }
  $21 = HEAP32[$19 >> 2] | 0;
  if (($21 | 0) == 0) {
   $23 = $19;
  } else {
   _free($21);
   $23 = HEAP32[$m_openList >> 2] | 0;
  }
  if (($23 | 0) != 0) {
   _free($23);
  }
  HEAP32[$m_openList >> 2] = 0;
 }
 $call_i_i13 = _malloc(12) | 0;
 if (($call_i_i13 | 0) == 0) {
  HEAP32[$m_openList >> 2] = 0;
  $retval_0 = -2147483644;
  return $retval_0 | 0;
 }
 $m_heap_i14 = $call_i_i13;
 HEAP32[$m_heap_i14 >> 2] = 0;
 HEAP32[$call_i_i13 + 4 >> 2] = $maxNodes;
 HEAP32[$call_i_i13 + 8 >> 2] = 0;
 if (($maxNodes | 0) <= 0) {
  ___assert_fail(3176, 9584, 125, 10576);
  return 0;
 }
 $call_i_i_i = _malloc(($maxNodes << 2) + 4 | 0) | 0;
 HEAP32[$m_heap_i14 >> 2] = $call_i_i_i;
 if (($call_i_i_i | 0) == 0) {
  ___assert_fail(2176, 9584, 128, 10576);
  return 0;
 }
 HEAP32[$m_openList >> 2] = $call_i_i13;
 $retval_0 = 1073741824;
 return $retval_0 | 0;
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result, $__s_0, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg_result = $agg_result | 0;
 $__s_0 = $__s_0 | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $__sp = 0, $sub_ptr_lhs_cast = 0, $sub_ptr_rhs_cast = 0, $sub_ptr_sub = 0, $__width__i = 0, $1 = 0, $__ns_0 = 0, $sub_ptr_lhs_cast4 = 0, $sub_ptr_sub6 = 0, $conv_i_i = 0, $__size__i9_i = 0, $and_i_i_i1 = 0, $call_i_i_i = 0, $or_i_i = 0, $__size__i_i_i_pre_phi = 0, $6 = 0, $__p_0_i = 0, $cond_i_i = 0, $12 = 0, $17 = 0, $sub_ptr_sub28 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp | 0;
 if (($__s_0 | 0) == 0) {
  HEAP32[$agg_result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $sub_ptr_lhs_cast = $__oe;
 $sub_ptr_rhs_cast = $__ob;
 $sub_ptr_sub = $sub_ptr_lhs_cast - $sub_ptr_rhs_cast | 0;
 $__width__i = $__iob + 12 | 0;
 $1 = HEAP32[$__width__i >> 2] | 0;
 $__ns_0 = ($1 | 0) > ($sub_ptr_sub | 0) ? $1 - $sub_ptr_sub | 0 : 0;
 $sub_ptr_lhs_cast4 = $__op;
 $sub_ptr_sub6 = $sub_ptr_lhs_cast4 - $sub_ptr_rhs_cast | 0;
 if (($sub_ptr_sub6 | 0) > 0) {
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $__ob, $sub_ptr_sub6) | 0) != ($sub_ptr_sub6 | 0)) {
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 }
 do {
  if (($__ns_0 | 0) > 0) {
   if ($__ns_0 >>> 0 < 11 >>> 0) {
    $conv_i_i = $__ns_0 << 1 & 255;
    $__size__i9_i = $__sp;
    HEAP8[$__size__i9_i >> 0] = $conv_i_i;
    $__p_0_i = $__sp + 1 | 0;
    $6 = $conv_i_i;
    $__size__i_i_i_pre_phi = $__size__i9_i;
   } else {
    $and_i_i_i1 = $__ns_0 + 16 & -16;
    $call_i_i_i = __Znwj($and_i_i_i1) | 0;
    HEAP32[$__sp + 8 >> 2] = $call_i_i_i;
    $or_i_i = $and_i_i_i1 | 1;
    HEAP32[$__sp >> 2] = $or_i_i;
    HEAP32[$__sp + 4 >> 2] = $__ns_0;
    $__p_0_i = $call_i_i_i;
    $6 = $or_i_i & 255;
    $__size__i_i_i_pre_phi = $__sp;
   }
   _memset($__p_0_i | 0, $__fl | 0, $__ns_0 | 0) | 0;
   HEAP8[$__p_0_i + $__ns_0 >> 0] = 0;
   if (($6 & 1) == 0) {
    $cond_i_i = $__sp + 1 | 0;
   } else {
    $cond_i_i = HEAP32[$__sp + 8 >> 2] | 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $cond_i_i, $__ns_0) | 0) == ($__ns_0 | 0)) {
    if ((HEAP8[$__size__i_i_i_pre_phi >> 0] & 1) == 0) {
     break;
    }
    $17 = HEAP32[$__sp + 8 >> 2] | 0;
    if (($17 | 0) == 0) {
     break;
    }
    _free($17);
    break;
   }
   HEAP32[$agg_result >> 2] = 0;
   if ((HEAP8[$__size__i_i_i_pre_phi >> 0] & 1) == 0) {
    STACKTOP = sp;
    return;
   }
   $12 = HEAP32[$__sp + 8 >> 2] | 0;
   if (($12 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   _free($12);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $sub_ptr_sub28 = $sub_ptr_lhs_cast - $sub_ptr_lhs_cast4 | 0;
 if (($sub_ptr_sub28 | 0) > 0) {
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__s_0 >> 2] | 0) + 48 >> 2] & 127]($__s_0, $__op, $sub_ptr_sub28) | 0) != ($sub_ptr_sub28 | 0)) {
   HEAP32[$agg_result >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 }
 HEAP32[$__width__i >> 2] = 0;
 HEAP32[$agg_result >> 2] = $__s_0;
 STACKTOP = sp;
 return;
}
function __Z11duAppendArcP11duDebugDrawfffffffffj($dd, $x0, $y0, $z0, $x1, $y1, $z1, $as0, $col) {
 $dd = $dd | 0;
 $x0 = +$x0;
 $y0 = +$y0;
 $z0 = +$z0;
 $x1 = +$x1;
 $y1 = +$y1;
 $z1 = +$z1;
 $as0 = +$as0;
 $col = $col | 0;
 var $p = 0, $q = 0, $p35 = 0, $q36 = 0, $sub = 0.0, $sub1 = 0.0, $sub2 = 0.0, $mul6 = 0.0, $add_i = 0.0, $mul8_i = 0.0, $add9_i = 0.0, $add12_i = 0.0, $0 = 0, $i_0120 = 0, $prev_sroa_0_0_load114119 = 0.0, $add9_i115118 = 0.0, $add12_i116117 = 0.0, $add8 = 0.0, $sub_i = 0.0, $arraydecay27 = 0, $arraydecay29 = 0, $arraydecay38 = 0, $arraydecay40 = 0, sp = 0, $add12_i116117$looptemp = 0.0, $add9_i115118$looptemp = 0.0, $prev_sroa_0_0_load114119$looptemp = 0.0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $p = sp | 0;
 $q = sp + 16 | 0;
 $p35 = sp + 32 | 0;
 $q36 = sp + 48 | 0;
 if (($dd | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $sub = $x1 - $x0;
 $sub1 = $y1 - $y0;
 $sub2 = $z1 - $z0;
 $mul6 = +Math_sqrt($sub * $sub + $sub1 * $sub1 + $sub2 * $sub2) * .25;
 $add_i = $sub * .05000000074505806 + $x0;
 $mul8_i = $mul6 * .19000005722045898;
 $add9_i = $sub1 * .05000000074505806 + $y0 + $mul8_i;
 $add12_i = $sub2 * .05000000074505806 + $z0;
 $0 = $dd;
 $add12_i116117 = $add12_i;
 $add9_i115118 = $add9_i;
 $prev_sroa_0_0_load114119 = $add_i;
 $i_0120 = 1;
 do {
  $add8 = +($i_0120 | 0) * .11249999701976776 + .05000000074505806;
  $prev_sroa_0_0_load114119$looptemp = $prev_sroa_0_0_load114119;
  $prev_sroa_0_0_load114119 = $sub * $add8 + $x0;
  $sub_i = $add8 * 2.0 + -1.0;
  $add9_i115118$looptemp = $add9_i115118;
  $add9_i115118 = $sub1 * $add8 + $y0 + $mul6 * (1.0 - $sub_i * $sub_i);
  $add12_i116117$looptemp = $add12_i116117;
  $add12_i116117 = $sub2 * $add8 + $z0;
  FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 31]($dd, $prev_sroa_0_0_load114119$looptemp, $add9_i115118$looptemp, $add12_i116117$looptemp, $col);
  FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 31]($dd, $prev_sroa_0_0_load114119, $add9_i115118, $add12_i116117, $col);
  $i_0120 = $i_0120 + 1 | 0;
 } while (($i_0120 | 0) < 9);
 if ($as0 > .0010000000474974513) {
  $arraydecay27 = $p | 0;
  HEAPF32[$arraydecay27 >> 2] = $add_i;
  HEAPF32[$p + 4 >> 2] = $add9_i;
  HEAPF32[$p + 8 >> 2] = $add12_i;
  $arraydecay29 = $q | 0;
  HEAPF32[$arraydecay29 >> 2] = $sub * .10000000149011612 + $x0;
  HEAPF32[$q + 4 >> 2] = $sub1 * .10000000149011612 + $y0 + $mul6 * .35999995470046997;
  HEAPF32[$q + 8 >> 2] = $sub2 * .10000000149011612 + $z0;
  __Z15appendArrowHeadP11duDebugDrawPKfS2_fj($dd, $arraydecay27, $arraydecay29, $as0, $col);
 }
 $arraydecay38 = $p35 | 0;
 HEAPF32[$arraydecay38 >> 2] = $sub * .949999988079071 + $x0;
 HEAPF32[$p35 + 4 >> 2] = $sub1 * .949999988079071 + $y0 + $mul8_i;
 HEAPF32[$p35 + 8 >> 2] = $sub2 * .949999988079071 + $z0;
 $arraydecay40 = $q36 | 0;
 HEAPF32[$arraydecay40 >> 2] = $sub * .8999999761581421 + $x0;
 HEAPF32[$q36 + 4 >> 2] = $sub1 * .8999999761581421 + $y0 + $mul6 * .3600000739097595;
 HEAPF32[$q36 + 8 >> 2] = $sub2 * .8999999761581421 + $z0;
 __Z15appendArrowHeadP11duDebugDrawPKfS2_fj($dd, $arraydecay38, $arraydecay40, .6000000238418579, $col);
 STACKTOP = sp;
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $0 = 0, $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $is_dst_type_derived_from_static_type = 0, $found_our_static_ptr = 0, $found_any_static_type = 0, $10 = 0, $is_dst_type_derived_from_static_type13_0_off034 = 0, $number_to_dst_ptr = 0, $18 = 0, label = 0;
 $0 = $this | 0;
 if (($0 | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if (($0 | 0) != (HEAP32[$info >> 2] | 0)) {
  $18 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$18 >> 2] | 0) + 24 >> 2] & 31]($18, $info, $current_ptr, $path_below, $use_strcmp);
  return;
 }
 if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
  $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
  if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) != ($current_ptr | 0)) {
   HEAP32[$info + 32 >> 2] = $path_below;
   $is_dst_type_derived_from_static_type = $info + 44 | 0;
   if ((HEAP32[$is_dst_type_derived_from_static_type >> 2] | 0) == 4) {
    return;
   }
   $found_our_static_ptr = $info + 52 | 0;
   HEAP8[$found_our_static_ptr >> 0] = 0;
   $found_any_static_type = $info + 53 | 0;
   HEAP8[$found_any_static_type >> 0] = 0;
   $10 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($10, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
   if ((HEAP8[$found_any_static_type >> 0] | 0) == 0) {
    $is_dst_type_derived_from_static_type13_0_off034 = 0;
    label = 13;
   } else {
    if ((HEAP8[$found_our_static_ptr >> 0] | 0) == 0) {
     $is_dst_type_derived_from_static_type13_0_off034 = 1;
     label = 13;
    }
   }
   do {
    if ((label | 0) == 13) {
     HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
     $number_to_dst_ptr = $info + 40 | 0;
     HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) {
      if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
       HEAP8[$info + 54 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type13_0_off034) {
        break;
       }
      } else {
       label = 16;
      }
     } else {
      label = 16;
     }
     if ((label | 0) == 16) {
      if ($is_dst_type_derived_from_static_type13_0_off034) {
       break;
      }
     }
     HEAP32[$is_dst_type_derived_from_static_type >> 2] = 4;
     return;
    }
   } while (0);
   HEAP32[$is_dst_type_derived_from_static_type >> 2] = 3;
   return;
  }
 }
 if (($path_below | 0) != 1) {
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg_result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $fmt_i_i = 0, $mb_i = 0, $__nb_i = 0, $__nar = 0, $arraydecay = 0, $5 = 0, $6 = 0, $arrayinit_element_i_i = 0, $arrayinit_element2_i_i = 0, $__loc__i_i = 0, $call_i_i = 0, $call1_i_i = 0, $add_ptr5_i = 0, $12 = 0, $13 = 0, $__first_addr_04_i_i = 0, $14 = 0, $__nout__i_i_i_i = 0, $15 = 0, $retval_0_i_i_i_i = 0, $19 = 0, $incdec_ptr_i_i = 0, $20 = 0, $21 = 0, $$etemp$12$0 = 0, $$etemp$12$1 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $fmt_i_i = sp | 0;
 $mb_i = sp + 112 | 0;
 $__nb_i = sp + 120 | 0;
 $__nar = sp + 128 | 0;
 $arraydecay = $__nar | 0;
 $5 = sp + 8 | 0;
 $6 = $fmt_i_i | 0;
 HEAP8[$6 >> 0] = 37;
 $arrayinit_element_i_i = $fmt_i_i + 1 | 0;
 HEAP8[$arrayinit_element_i_i >> 0] = $__fmt;
 $arrayinit_element2_i_i = $fmt_i_i + 2 | 0;
 HEAP8[$arrayinit_element2_i_i >> 0] = $__mod;
 HEAP8[$fmt_i_i + 3 >> 0] = 0;
 if (!($__mod << 24 >> 24 == 0)) {
  HEAP8[$arrayinit_element_i_i >> 0] = $__mod;
  HEAP8[$arrayinit_element2_i_i >> 0] = $__fmt;
 }
 $__loc__i_i = $this + 8 | 0;
 _strftime_l($5 | 0, 100, $6 | 0, $__tm | 0, HEAP32[$__loc__i_i >> 2] | 0) | 0;
 HEAP32[$mb_i >> 2] = 0;
 HEAP32[$mb_i + 4 >> 2] = 0;
 HEAP32[$__nb_i >> 2] = $5;
 $call_i_i = _uselocale(HEAP32[$__loc__i_i >> 2] | 0) | 0;
 $call1_i_i = _mbsrtowcs($arraydecay, $__nb_i, 100, $mb_i) | 0;
 if (($call_i_i | 0) != 0) {
  _uselocale($call_i_i | 0) | 0;
 }
 if (($call1_i_i | 0) == -1) {
  __ZNSt3__121__throw_runtime_errorEPKc(5976);
 }
 $add_ptr5_i = $__nar + ($call1_i_i << 2) | 0;
 $12 = HEAP32[$__s >> 2] | 0;
 if (($call1_i_i | 0) == 0) {
  $20 = $12;
  $21 = $agg_result | 0;
  HEAP32[$21 >> 2] = $20;
  $$etemp$12$0 = 400;
  $$etemp$12$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $__first_addr_04_i_i = $arraydecay;
  $13 = $12;
 }
 while (1) {
  $14 = HEAP32[$__first_addr_04_i_i >> 2] | 0;
  if (($13 | 0) == 0) {
   $19 = 0;
  } else {
   $__nout__i_i_i_i = $13 + 24 | 0;
   $15 = HEAP32[$__nout__i_i_i_i >> 2] | 0;
   if (($15 | 0) == (HEAP32[$13 + 28 >> 2] | 0)) {
    $retval_0_i_i_i_i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$13 >> 2] | 0) + 52 >> 2] & 63]($13, $14) | 0;
   } else {
    HEAP32[$__nout__i_i_i_i >> 2] = $15 + 4;
    HEAP32[$15 >> 2] = $14;
    $retval_0_i_i_i_i = $14;
   }
   $19 = ($retval_0_i_i_i_i | 0) == -1 ? 0 : $13;
  }
  $incdec_ptr_i_i = $__first_addr_04_i_i + 4 | 0;
  if (($incdec_ptr_i_i | 0) == ($add_ptr5_i | 0)) {
   $20 = $19;
   break;
  } else {
   $__first_addr_04_i_i = $incdec_ptr_i_i;
   $13 = $19;
  }
 }
 $21 = $agg_result | 0;
 HEAP32[$21 >> 2] = $20;
 $$etemp$12$0 = 400;
 $$etemp$12$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $0 = 0, $cmp = 0, $cmp1 = 0, $3 = 0, $cond_i = 0, $5 = 0, $6 = 0, $add_ptr = 0, $__first_addr_05_i = 0, $incdec_ptr_i = 0, $__first_addr_0_lcssa_i = 0, $sub_ptr_sub18 = 0, $sub_ptr_div19 = 0, $9 = 0, $10 = 0, $retval_0 = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $cmp = ($0 | 0) == ($__a | 0);
 do {
  if ($cmp) {
   $cmp1 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
   if (!$cmp1) {
    if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
     break;
    }
   }
   HEAP32[$__a_end >> 2] = $__a + 1;
   HEAP8[$__a >> 0] = $cmp1 ? 43 : 45;
   HEAP32[$__dc >> 2] = 0;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 } while (0);
 $3 = HEAP8[$__grouping >> 0] | 0;
 if (($3 & 1) == 0) {
  $cond_i = ($3 & 255) >>> 1;
 } else {
  $cond_i = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 if (($cond_i | 0) != 0 & ($__ct | 0) == ($__thousands_sep | 0)) {
  $5 = HEAP32[$__g_end >> 2] | 0;
  if (($5 - $__g | 0) >= 160) {
   $retval_0 = 0;
   return $retval_0 | 0;
  }
  $6 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $5 + 4;
  HEAP32[$5 >> 2] = $6;
  HEAP32[$__dc >> 2] = 0;
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $add_ptr = $__atoms + 104 | 0;
 $__first_addr_05_i = $__atoms;
 while (1) {
  $incdec_ptr_i = $__first_addr_05_i + 4 | 0;
  if ((HEAP32[$__first_addr_05_i >> 2] | 0) == ($__ct | 0)) {
   $__first_addr_0_lcssa_i = $__first_addr_05_i;
   break;
  }
  if (($incdec_ptr_i | 0) == ($add_ptr | 0)) {
   $__first_addr_0_lcssa_i = $add_ptr;
   break;
  } else {
   $__first_addr_05_i = $incdec_ptr_i;
  }
 }
 $sub_ptr_sub18 = $__first_addr_0_lcssa_i - $__atoms | 0;
 $sub_ptr_div19 = $sub_ptr_sub18 >> 2;
 if (($sub_ptr_sub18 | 0) > 92) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 if (($__base | 0) == 8 | ($__base | 0) == 10) {
  if (($sub_ptr_div19 | 0) >= ($__base | 0)) {
   $retval_0 = -1;
   return $retval_0 | 0;
  }
 } else if (($__base | 0) == 16) {
  if (($sub_ptr_sub18 | 0) >= 88) {
   if ($cmp) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if (($0 - $__a | 0) >= 3) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   if ((HEAP8[$0 - 1 >> 0] | 0) != 48) {
    $retval_0 = -1;
    return $retval_0 | 0;
   }
   HEAP32[$__dc >> 2] = 0;
   $9 = HEAP8[19528 + $sub_ptr_div19 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $9;
   $retval_0 = 0;
   return $retval_0 | 0;
  }
 }
 $10 = HEAP8[19528 + $sub_ptr_div19 >> 0] | 0;
 HEAP32[$__a_end >> 2] = $0 + 1;
 HEAP8[$0 >> 0] = $10;
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $sub_ptr_lhs_cast13_i = 0, $_frm_nxt_0 = 0, $_to_nxt_0 = 0, $1 = 0, $sub_ptr_sub39_i = 0, $_to_nxt_1 = 0, $incdec_ptr84_i = 0, $_frm_nxt_1 = 0, $_to_nxt_2 = 0, $retval_0_i = 0;
 L1 : do {
  if ($frm >>> 0 < $frm_end >>> 0) {
   $sub_ptr_lhs_cast13_i = $to_end;
   $_to_nxt_0 = $to;
   $_frm_nxt_0 = $frm;
   while (1) {
    $1 = HEAP32[$_frm_nxt_0 >> 2] | 0;
    if (($1 & -2048 | 0) == 55296 | $1 >>> 0 > 1114111 >>> 0) {
     $retval_0_i = 2;
     $_to_nxt_2 = $_to_nxt_0;
     $_frm_nxt_1 = $_frm_nxt_0;
     break L1;
    }
    do {
     if ($1 >>> 0 < 128 >>> 0) {
      if (($sub_ptr_lhs_cast13_i - $_to_nxt_0 | 0) < 1) {
       $retval_0_i = 1;
       $_to_nxt_2 = $_to_nxt_0;
       $_frm_nxt_1 = $_frm_nxt_0;
       break L1;
      }
      HEAP8[$_to_nxt_0 >> 0] = $1;
      $_to_nxt_1 = $_to_nxt_0 + 1 | 0;
     } else {
      if ($1 >>> 0 < 2048 >>> 0) {
       if (($sub_ptr_lhs_cast13_i - $_to_nxt_0 | 0) < 2) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_1 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $1 >>> 6 | 192;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $1 & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 2 | 0;
       break;
      }
      $sub_ptr_sub39_i = $sub_ptr_lhs_cast13_i - $_to_nxt_0 | 0;
      if ($1 >>> 0 < 65536 >>> 0) {
       if (($sub_ptr_sub39_i | 0) < 3) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_1 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $1 >>> 12 | 224;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $1 >>> 6 & 63 | 128;
       HEAP8[$_to_nxt_0 + 2 >> 0] = $1 & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 3 | 0;
       break;
      } else {
       if (($sub_ptr_sub39_i | 0) < 4) {
        $retval_0_i = 1;
        $_to_nxt_2 = $_to_nxt_0;
        $_frm_nxt_1 = $_frm_nxt_0;
        break L1;
       }
       HEAP8[$_to_nxt_0 >> 0] = $1 >>> 18 | 240;
       HEAP8[$_to_nxt_0 + 1 >> 0] = $1 >>> 12 & 63 | 128;
       HEAP8[$_to_nxt_0 + 2 >> 0] = $1 >>> 6 & 63 | 128;
       HEAP8[$_to_nxt_0 + 3 >> 0] = $1 & 63 | 128;
       $_to_nxt_1 = $_to_nxt_0 + 4 | 0;
       break;
      }
     }
    } while (0);
    $incdec_ptr84_i = $_frm_nxt_0 + 4 | 0;
    if ($incdec_ptr84_i >>> 0 < $frm_end >>> 0) {
     $_to_nxt_0 = $_to_nxt_1;
     $_frm_nxt_0 = $incdec_ptr84_i;
    } else {
     $retval_0_i = 0;
     $_to_nxt_2 = $_to_nxt_1;
     $_frm_nxt_1 = $incdec_ptr84_i;
     break;
    }
   }
  } else {
   $retval_0_i = 0;
   $_to_nxt_2 = $to;
   $_frm_nxt_1 = $frm;
  }
 } while (0);
 HEAP32[$frm_nxt >> 2] = $frm + ($_frm_nxt_1 - $frm >> 2 << 2);
 HEAP32[$to_nxt >> 2] = $to + ($_to_nxt_2 - $to);
 return $retval_0_i | 0;
}
function __Z17setPolyUnwalkablefffffft($posX, $posY, $posZ, $extendX, $extendY, $extendZ, $flags) {
 $posX = +$posX;
 $posY = +$posY;
 $posZ = +$posZ;
 $extendX = +$extendX;
 $extendY = +$extendY;
 $extendZ = +$extendZ;
 $flags = $flags | 0;
 var $filter = 0, $startPos = 0, $nearestPos = 0, $ref = 0, $m_includeFlags_i1 = 0, $m_excludeFlags_i2 = 0, $i_03_i = 0, $arrayinit_begin2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $and10_i_i = 0, $and11_i_i = 0, $9 = 0, $11 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $filter = sp | 0;
 $startPos = sp + 264 | 0;
 $nearestPos = sp + 280 | 0;
 $ref = sp + 296 | 0;
 $m_includeFlags_i1 = $filter + 256 | 0;
 HEAP16[$m_includeFlags_i1 >> 1] = -1;
 $m_excludeFlags_i2 = $filter + 258 | 0;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $i_03_i = 0;
 do {
  HEAPF32[$filter + ($i_03_i << 2) >> 2] = 1.0;
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 HEAP16[$m_includeFlags_i1 >> 1] = 3;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $arrayinit_begin2 = $startPos | 0;
 HEAPF32[$arrayinit_begin2 >> 2] = $posX;
 HEAPF32[$startPos + 4 >> 2] = $posY;
 HEAPF32[$startPos + 8 >> 2] = $posZ;
 HEAP32[$ref >> 2] = 0;
 if ((__ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin2, $extendX, $extendY, $extendZ, $filter, $ref, $nearestPos | 0) | 0) < 0) {
  _printf(5664, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $posX, HEAPF64[tempVarArgs + 8 >> 3] = $posY, HEAPF64[tempVarArgs + 16 >> 3] = $posZ, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 _printf(5520, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$ref >> 2], tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $3 = HEAP32[4912] | 0;
 $4 = HEAP32[$ref >> 2] | 0;
 if (($4 | 0) == 0) {
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $5 = HEAP32[$3 + 76 >> 2] | 0;
 $6 = HEAP32[$3 + 80 >> 2] | 0;
 $and10_i_i = $4 >>> ($6 >>> 0) & (1 << $5) - 1;
 $and11_i_i = (1 << $6) - 1 & $4;
 if (!($and10_i_i >>> 0 < (HEAP32[$3 + 48 >> 2] | 0) >>> 0)) {
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $9 = HEAP32[$3 + 68 >> 2] | 0;
 if ((HEAP32[$9 + ($and10_i_i * 60 | 0) >> 2] | 0) != ((1 << HEAP32[$3 + 72 >> 2]) - 1 & $4 >>> (($6 + $5 | 0) >>> 0) | 0)) {
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $11 = HEAP32[$9 + ($and10_i_i * 60 | 0) + 8 >> 2] | 0;
 if (($11 | 0) == 0) {
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if (!($and11_i_i >>> 0 < (HEAP32[$11 + 24 >> 2] | 0) >>> 0)) {
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 HEAP16[(HEAP32[$9 + ($and10_i_i * 60 | 0) + 12 >> 2] | 0) + ($and11_i_i << 5) + 28 >> 1] = $flags;
 $$etemp$1$0 = 260;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __Z30duDebugDrawHeightfieldWalkableP11duDebugDrawRK13rcHeightfield($dd, $hf) {
 $dd = $dd | 0;
 $hf = $hf | 0;
 var $fcol = 0, $arraydecay = 0, $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $arraydecay3 = 0, $cmp634 = 0, $arrayidx8 = 0, $spans = 0, $arrayidx34 = 0, $y_037 = 0, $mul10 = 0.0, $mul12 = 0, $x_035 = 0, $add = 0.0, $add11 = 0.0, $s_031 = 0, $add39 = 0.0, $add47 = 0.0, $s_033 = 0, $bf_load = 0, $bf_lshr = 0, $10 = 0, $mul13_i = 0, $or_i_i3 = 0, $or4_i_i = 0, $14 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $fcol = sp | 0;
 if (($dd | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $arraydecay = $hf + 8 | 0;
 $0 = +HEAPF32[$hf + 32 >> 2];
 $1 = +HEAPF32[$hf + 36 >> 2];
 $2 = HEAP32[$hf >> 2] | 0;
 $3 = HEAP32[$hf + 4 >> 2] | 0;
 $arraydecay3 = $fcol | 0;
 HEAP32[$arraydecay3 >> 2] = -394759;
 HEAP32[$fcol + 4 >> 2] = -9013642;
 HEAP32[$fcol + 8 >> 2] = -7631989;
 HEAP32[$fcol + 12 >> 2] = -4737097;
 HEAP32[$fcol + 16 >> 2] = -7631989;
 HEAP32[$fcol + 20 >> 2] = -4737097;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$dd >> 2] | 0) + 16 >> 2] & 31]($dd, 3, 1.0);
 if (($3 | 0) > 0) {
  $cmp634 = ($2 | 0) > 0;
  $arrayidx8 = $hf + 16 | 0;
  $spans = $hf + 40 | 0;
  $arrayidx34 = $hf + 12 | 0;
  $y_037 = 0;
  do {
   if ($cmp634) {
    $mul10 = $0 * +($y_037 | 0);
    $mul12 = Math_imul($y_037, $2) | 0;
    $x_035 = 0;
    do {
     $add = $0 * +($x_035 | 0) + +HEAPF32[$arraydecay >> 2];
     $add11 = $mul10 + +HEAPF32[$arrayidx8 >> 2];
     $s_031 = HEAP32[(HEAP32[$spans >> 2] | 0) + ($x_035 + $mul12 << 2) >> 2] | 0;
     if (($s_031 | 0) != 0) {
      $add39 = $0 + $add;
      $add47 = $0 + $add11;
      $s_033 = $s_031;
      do {
       $bf_load = HEAP32[$s_033 >> 2] | 0;
       $bf_lshr = $bf_load >>> 26;
       if (($bf_lshr | 0) == 63) {
        HEAP32[$arraydecay3 >> 2] = -6258624;
       } else if (($bf_lshr | 0) == 0) {
        HEAP32[$arraydecay3 >> 2] = -12566464;
       } else {
        $10 = $bf_load >>> 28;
        $mul13_i = (($bf_load >>> 27 & 1 | $10 & 2) * 63 | 0) + 63 | 0;
        $or_i_i3 = $mul13_i | (($10 & 1 | $bf_load >>> 29 & 2) * 16128 | 0) + 16128;
        $or4_i_i = (($mul13_i & 255) * 200 | 0) >>> 8 | (($or_i_i3 >>> 8 & 255) * 200 | 0) & 65280 | ((($or_i_i3 | (Math_imul($bf_load >>> 30 & 2 | $bf_lshr & 1, 4128768) | 0) + 4128768) >>> 16 & 255) * 200 | 0) >>> 8 << 16 | -16777216;
        HEAP32[$arraydecay3 >> 2] = $or4_i_i;
       }
       $14 = +HEAPF32[$arrayidx34 >> 2];
       __Z11duAppendBoxP11duDebugDrawffffffPKj($dd, $add, $14 + $1 * +($bf_load & 8191 | 0), $add11, $add39, $14 + $1 * +($bf_load >>> 13 & 8191 | 0), $add47, $arraydecay3);
       $s_033 = HEAP32[$s_033 + 4 >> 2] | 0;
      } while (($s_033 | 0) != 0);
     }
     $x_035 = $x_035 + 1 | 0;
    } while (($x_035 | 0) < ($2 | 0));
   }
   $y_037 = $y_037 + 1 | 0;
  } while (($y_037 | 0) < ($3 | 0));
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$dd >> 2] | 0) + 36 >> 2] & 511]($dd);
 STACKTOP = sp;
 return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg_result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i_i5 = 0, $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $sub_i_i_i12 = 0, $18 = 0, $19 = 0, $exception_i_i_i24 = 0, $21 = 0, $22 = 0, $call_i30 = 0, $call_i33 = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i_i5 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $5 = $__locale_2_i_i10 + 12 | 0;
 $7 = $__locale_2_i_i10 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] & 31]($9, 19528, 19560, $__atoms) | 0;
   if (!((HEAP32[5814] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i5 >> 2] = 23256;
    HEAP32[$__p_i_i_i_i5 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i5 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i5);
   }
   $sub_i_i_i12 = (HEAP32[5815] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i_i12 >>> 0) {
    $19 = HEAP32[$18 + ($sub_i_i_i12 << 2) >> 2] | 0;
    if (($19 | 0) != 0) {
     $21 = $19;
     $22 = $19;
     $call_i30 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 255]($21) | 0;
     HEAP32[$__decimal_point >> 2] = $call_i30;
     $call_i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     HEAP32[$__thousands_sep >> 2] = $call_i33;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     $27 = $__locale_2_i_i10 + 4 | 0;
     if (((tempValue = HEAP32[$27 >> 2] | 0, HEAP32[$27 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = sp;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i24 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i24 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i24 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg_result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i_i5 = 0, $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $sub_i_i_i12 = 0, $18 = 0, $19 = 0, $exception_i_i_i24 = 0, $21 = 0, $22 = 0, $call_i30 = 0, $call_i33 = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i_i5 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $5 = $__locale_2_i_i10 + 12 | 0;
 $7 = $__locale_2_i_i10 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] & 31]($9, 19528, 19560, $__atoms) | 0;
   if (!((HEAP32[5816] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i5 >> 2] = 23264;
    HEAP32[$__p_i_i_i_i5 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i5 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i5);
   }
   $sub_i_i_i12 = (HEAP32[5817] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i_i12 >>> 0) {
    $19 = HEAP32[$18 + ($sub_i_i_i12 << 2) >> 2] | 0;
    if (($19 | 0) != 0) {
     $21 = $19;
     $22 = $19;
     $call_i30 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 12 >> 2] & 255]($21) | 0;
     HEAP8[$__decimal_point >> 0] = $call_i30;
     $call_i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     HEAP8[$__thousands_sep >> 0] = $call_i33;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     $27 = $__locale_2_i_i10 + 4 | 0;
     if (((tempValue = HEAP32[$27 >> 2] | 0, HEAP32[$27 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = sp;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i24 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i24 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i24 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNK14dtNavMeshQuery12appendVertexEPKfhjPfPhPjPii($pos, $flags, $ref, $straightPath, $straightPathFlags, $straightPathRefs, $straightPathCount, $maxStraightPath) {
 $pos = $pos | 0;
 $flags = $flags | 0;
 $ref = $ref | 0;
 $straightPath = $straightPath | 0;
 $straightPathFlags = $straightPathFlags | 0;
 $straightPathRefs = $straightPathRefs | 0;
 $straightPathCount = $straightPathCount | 0;
 $maxStraightPath = $maxStraightPath | 0;
 var $0 = 0, $1 = 0, $arrayidx = 0, $4 = 0, $5 = 0.0, $sub_i_i = 0.0, $arrayidx2_i_i = 0, $sub4_i_i = 0.0, $arrayidx5_i_i = 0, $sub7_i_i = 0.0, $arrayidx4_i_pre_phi = 0, $arrayidx2_i_pre_phi = 0, $14 = 0.0, $15 = 0, $mul10 = 0, $inc = 0, $retval_0 = 0;
 $0 = HEAP32[$straightPathCount >> 2] | 0;
 do {
  if (($0 | 0) > 0) {
   $1 = $0 * 3 | 0;
   $arrayidx = $straightPath + ($1 - 3 << 2) | 0;
   if ((HEAP8[24344] | 0) == 0) {
    if ((___cxa_guard_acquire(24344) | 0) != 0) {
     HEAPF32[2874] = 3.725290298461914e-9;
     $4;
    }
   }
   $5 = +HEAPF32[$pos >> 2];
   $sub_i_i = $5 - +HEAPF32[$arrayidx >> 2];
   $arrayidx2_i_i = $pos + 4 | 0;
   $sub4_i_i = +HEAPF32[$arrayidx2_i_i >> 2] - +HEAPF32[$straightPath + ($1 - 2 << 2) >> 2];
   $arrayidx5_i_i = $pos + 8 | 0;
   $sub7_i_i = +HEAPF32[$arrayidx5_i_i >> 2] - +HEAPF32[$straightPath + ($1 - 1 << 2) >> 2];
   if (!($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i + $sub7_i_i * $sub7_i_i < +HEAPF32[2874])) {
    $15 = HEAP32[$straightPathCount >> 2] | 0;
    $14 = $5;
    $arrayidx2_i_pre_phi = $arrayidx2_i_i;
    $arrayidx4_i_pre_phi = $arrayidx5_i_i;
    break;
   }
   if (($straightPathFlags | 0) != 0) {
    HEAP8[$straightPathFlags + ((HEAP32[$straightPathCount >> 2] | 0) - 1) >> 0] = $flags;
   }
   if (($straightPathRefs | 0) == 0) {
    $retval_0 = 536870912;
    return $retval_0 | 0;
   }
   HEAP32[$straightPathRefs + ((HEAP32[$straightPathCount >> 2] | 0) - 1 << 2) >> 2] = $ref;
   $retval_0 = 536870912;
   return $retval_0 | 0;
  } else {
   $15 = $0;
   $14 = +HEAPF32[$pos >> 2];
   $arrayidx2_i_pre_phi = $pos + 4 | 0;
   $arrayidx4_i_pre_phi = $pos + 8 | 0;
  }
 } while (0);
 $mul10 = $15 * 3 | 0;
 HEAPF32[$straightPath + ($mul10 << 2) >> 2] = $14;
 HEAPF32[$straightPath + ($mul10 + 1 << 2) >> 2] = +HEAPF32[$arrayidx2_i_pre_phi >> 2];
 HEAPF32[$straightPath + ($mul10 + 2 << 2) >> 2] = +HEAPF32[$arrayidx4_i_pre_phi >> 2];
 if (($straightPathFlags | 0) != 0) {
  HEAP8[$straightPathFlags + $15 >> 0] = $flags;
 }
 if (($straightPathRefs | 0) != 0) {
  HEAP32[$straightPathRefs + (HEAP32[$straightPathCount >> 2] << 2) >> 2] = $ref;
 }
 $inc = (HEAP32[$straightPathCount >> 2] | 0) + 1 | 0;
 HEAP32[$straightPathCount >> 2] = $inc;
 if ($flags << 24 >> 24 != 2 & ($inc | 0) < ($maxStraightPath | 0)) {
  $retval_0 = 536870912;
  return $retval_0 | 0;
 }
 $retval_0 = ($inc | 0) >= ($maxStraightPath | 0) ? 1073741840 : 1073741824;
 return $retval_0 | 0;
}
function ___cxx_global_array_dtor48($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0, $8 = 0, $11 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0, $32 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $50 = 0, $53 = 0, $56 = 0, $59 = 0, $62 = 0, $65 = 0, $68 = 0, $71 = 0;
 if (!((HEAP8[20556] & 1) == 0)) {
  $2 = HEAP32[5141] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[20544] & 1) == 0)) {
  $5 = HEAP32[5138] | 0;
  if (($5 | 0) != 0) {
   _free($5);
  }
 }
 if (!((HEAP8[20532] & 1) == 0)) {
  $8 = HEAP32[5135] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[20520] & 1) == 0)) {
  $11 = HEAP32[5132] | 0;
  if (($11 | 0) != 0) {
   _free($11);
  }
 }
 if (!((HEAP8[20508] & 1) == 0)) {
  $14 = HEAP32[5129] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[20496] & 1) == 0)) {
  $17 = HEAP32[5126] | 0;
  if (($17 | 0) != 0) {
   _free($17);
  }
 }
 if (!((HEAP8[20484] & 1) == 0)) {
  $20 = HEAP32[5123] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[20472] & 1) == 0)) {
  $23 = HEAP32[5120] | 0;
  if (($23 | 0) != 0) {
   _free($23);
  }
 }
 if (!((HEAP8[20460] & 1) == 0)) {
  $26 = HEAP32[5117] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if (!((HEAP8[20448] & 1) == 0)) {
  $29 = HEAP32[5114] | 0;
  if (($29 | 0) != 0) {
   _free($29);
  }
 }
 if (!((HEAP8[20436] & 1) == 0)) {
  $32 = HEAP32[5111] | 0;
  if (($32 | 0) != 0) {
   _free($32);
  }
 }
 if (!((HEAP8[20424] & 1) == 0)) {
  $35 = HEAP32[5108] | 0;
  if (($35 | 0) != 0) {
   _free($35);
  }
 }
 if (!((HEAP8[20412] & 1) == 0)) {
  $38 = HEAP32[5105] | 0;
  if (($38 | 0) != 0) {
   _free($38);
  }
 }
 if (!((HEAP8[20400] & 1) == 0)) {
  $41 = HEAP32[5102] | 0;
  if (($41 | 0) != 0) {
   _free($41);
  }
 }
 if (!((HEAP8[20388] & 1) == 0)) {
  $44 = HEAP32[5099] | 0;
  if (($44 | 0) != 0) {
   _free($44);
  }
 }
 if (!((HEAP8[20376] & 1) == 0)) {
  $47 = HEAP32[5096] | 0;
  if (($47 | 0) != 0) {
   _free($47);
  }
 }
 if (!((HEAP8[20364] & 1) == 0)) {
  $50 = HEAP32[5093] | 0;
  if (($50 | 0) != 0) {
   _free($50);
  }
 }
 if (!((HEAP8[20352] & 1) == 0)) {
  $53 = HEAP32[5090] | 0;
  if (($53 | 0) != 0) {
   _free($53);
  }
 }
 if (!((HEAP8[20340] & 1) == 0)) {
  $56 = HEAP32[5087] | 0;
  if (($56 | 0) != 0) {
   _free($56);
  }
 }
 if (!((HEAP8[20328] & 1) == 0)) {
  $59 = HEAP32[5084] | 0;
  if (($59 | 0) != 0) {
   _free($59);
  }
 }
 if (!((HEAP8[20316] & 1) == 0)) {
  $62 = HEAP32[5081] | 0;
  if (($62 | 0) != 0) {
   _free($62);
  }
 }
 if (!((HEAP8[20304] & 1) == 0)) {
  $65 = HEAP32[5078] | 0;
  if (($65 | 0) != 0) {
   _free($65);
  }
 }
 if (!((HEAP8[20292] & 1) == 0)) {
  $68 = HEAP32[5075] | 0;
  if (($68 | 0) != 0) {
   _free($68);
  }
 }
 if ((HEAP8[20280] & 1) == 0) {
  return;
 }
 $71 = HEAP32[5072] | 0;
 if (($71 | 0) == 0) {
  return;
 }
 _free($71);
 return;
}
function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0, $8 = 0, $11 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0, $32 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $50 = 0, $53 = 0, $56 = 0, $59 = 0, $62 = 0, $65 = 0, $68 = 0, $71 = 0;
 if (!((HEAP8[21012] & 1) == 0)) {
  $2 = HEAP32[5255] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[21e3] & 1) == 0)) {
  $5 = HEAP32[5252] | 0;
  if (($5 | 0) != 0) {
   _free($5);
  }
 }
 if (!((HEAP8[20988] & 1) == 0)) {
  $8 = HEAP32[5249] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[20976] & 1) == 0)) {
  $11 = HEAP32[5246] | 0;
  if (($11 | 0) != 0) {
   _free($11);
  }
 }
 if (!((HEAP8[20964] & 1) == 0)) {
  $14 = HEAP32[5243] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[20952] & 1) == 0)) {
  $17 = HEAP32[5240] | 0;
  if (($17 | 0) != 0) {
   _free($17);
  }
 }
 if (!((HEAP8[20940] & 1) == 0)) {
  $20 = HEAP32[5237] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[20928] & 1) == 0)) {
  $23 = HEAP32[5234] | 0;
  if (($23 | 0) != 0) {
   _free($23);
  }
 }
 if (!((HEAP8[20916] & 1) == 0)) {
  $26 = HEAP32[5231] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if (!((HEAP8[20904] & 1) == 0)) {
  $29 = HEAP32[5228] | 0;
  if (($29 | 0) != 0) {
   _free($29);
  }
 }
 if (!((HEAP8[20892] & 1) == 0)) {
  $32 = HEAP32[5225] | 0;
  if (($32 | 0) != 0) {
   _free($32);
  }
 }
 if (!((HEAP8[20880] & 1) == 0)) {
  $35 = HEAP32[5222] | 0;
  if (($35 | 0) != 0) {
   _free($35);
  }
 }
 if (!((HEAP8[20868] & 1) == 0)) {
  $38 = HEAP32[5219] | 0;
  if (($38 | 0) != 0) {
   _free($38);
  }
 }
 if (!((HEAP8[20856] & 1) == 0)) {
  $41 = HEAP32[5216] | 0;
  if (($41 | 0) != 0) {
   _free($41);
  }
 }
 if (!((HEAP8[20844] & 1) == 0)) {
  $44 = HEAP32[5213] | 0;
  if (($44 | 0) != 0) {
   _free($44);
  }
 }
 if (!((HEAP8[20832] & 1) == 0)) {
  $47 = HEAP32[5210] | 0;
  if (($47 | 0) != 0) {
   _free($47);
  }
 }
 if (!((HEAP8[20820] & 1) == 0)) {
  $50 = HEAP32[5207] | 0;
  if (($50 | 0) != 0) {
   _free($50);
  }
 }
 if (!((HEAP8[20808] & 1) == 0)) {
  $53 = HEAP32[5204] | 0;
  if (($53 | 0) != 0) {
   _free($53);
  }
 }
 if (!((HEAP8[20796] & 1) == 0)) {
  $56 = HEAP32[5201] | 0;
  if (($56 | 0) != 0) {
   _free($56);
  }
 }
 if (!((HEAP8[20784] & 1) == 0)) {
  $59 = HEAP32[5198] | 0;
  if (($59 | 0) != 0) {
   _free($59);
  }
 }
 if (!((HEAP8[20772] & 1) == 0)) {
  $62 = HEAP32[5195] | 0;
  if (($62 | 0) != 0) {
   _free($62);
  }
 }
 if (!((HEAP8[20760] & 1) == 0)) {
  $65 = HEAP32[5192] | 0;
  if (($65 | 0) != 0) {
   _free($65);
  }
 }
 if (!((HEAP8[20748] & 1) == 0)) {
  $68 = HEAP32[5189] | 0;
  if (($68 | 0) != 0) {
   _free($68);
  }
 }
 if ((HEAP8[20736] & 1) == 0) {
  return;
 }
 $71 = HEAP32[5186] | 0;
 if (($71 | 0) == 0) {
  return;
 }
 _free($71);
 return;
}
function ___cxx_global_array_dtor73($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0;
 if (!((HEAP8[21300] & 1) == 0)) {
  $2 = HEAP32[5327] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[21288] & 1) == 0)) {
  $4 = HEAP32[5324] | 0;
  if (($4 | 0) != 0) {
   _free($4);
  }
 }
 if (!((HEAP8[21276] & 1) == 0)) {
  $6 = HEAP32[5321] | 0;
  if (($6 | 0) != 0) {
   _free($6);
  }
 }
 if (!((HEAP8[21264] & 1) == 0)) {
  $8 = HEAP32[5318] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[21252] & 1) == 0)) {
  $10 = HEAP32[5315] | 0;
  if (($10 | 0) != 0) {
   _free($10);
  }
 }
 if (!((HEAP8[21240] & 1) == 0)) {
  $12 = HEAP32[5312] | 0;
  if (($12 | 0) != 0) {
   _free($12);
  }
 }
 if (!((HEAP8[21228] & 1) == 0)) {
  $14 = HEAP32[5309] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[21216] & 1) == 0)) {
  $16 = HEAP32[5306] | 0;
  if (($16 | 0) != 0) {
   _free($16);
  }
 }
 if (!((HEAP8[21204] & 1) == 0)) {
  $18 = HEAP32[5303] | 0;
  if (($18 | 0) != 0) {
   _free($18);
  }
 }
 if (!((HEAP8[21192] & 1) == 0)) {
  $20 = HEAP32[5300] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[21180] & 1) == 0)) {
  $22 = HEAP32[5297] | 0;
  if (($22 | 0) != 0) {
   _free($22);
  }
 }
 if (!((HEAP8[21168] & 1) == 0)) {
  $24 = HEAP32[5294] | 0;
  if (($24 | 0) != 0) {
   _free($24);
  }
 }
 if (!((HEAP8[21156] & 1) == 0)) {
  $26 = HEAP32[5291] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if (!((HEAP8[21144] & 1) == 0)) {
  $28 = HEAP32[5288] | 0;
  if (($28 | 0) != 0) {
   _free($28);
  }
 }
 if (!((HEAP8[21132] & 1) == 0)) {
  $30 = HEAP32[5285] | 0;
  if (($30 | 0) != 0) {
   _free($30);
  }
 }
 if (!((HEAP8[21120] & 1) == 0)) {
  $32 = HEAP32[5282] | 0;
  if (($32 | 0) != 0) {
   _free($32);
  }
 }
 if (!((HEAP8[21108] & 1) == 0)) {
  $34 = HEAP32[5279] | 0;
  if (($34 | 0) != 0) {
   _free($34);
  }
 }
 if (!((HEAP8[21096] & 1) == 0)) {
  $36 = HEAP32[5276] | 0;
  if (($36 | 0) != 0) {
   _free($36);
  }
 }
 if (!((HEAP8[21084] & 1) == 0)) {
  $38 = HEAP32[5273] | 0;
  if (($38 | 0) != 0) {
   _free($38);
  }
 }
 if (!((HEAP8[21072] & 1) == 0)) {
  $40 = HEAP32[5270] | 0;
  if (($40 | 0) != 0) {
   _free($40);
  }
 }
 if (!((HEAP8[21060] & 1) == 0)) {
  $42 = HEAP32[5267] | 0;
  if (($42 | 0) != 0) {
   _free($42);
  }
 }
 if (!((HEAP8[21048] & 1) == 0)) {
  $44 = HEAP32[5264] | 0;
  if (($44 | 0) != 0) {
   _free($44);
  }
 }
 if (!((HEAP8[21036] & 1) == 0)) {
  $46 = HEAP32[5261] | 0;
  if (($46 | 0) != 0) {
   _free($46);
  }
 }
 if ((HEAP8[21024] & 1) == 0) {
  return;
 }
 $48 = HEAP32[5258] | 0;
 if (($48 | 0) == 0) {
  return;
 }
 _free($48);
 return;
}
function ___cxx_global_array_dtor45($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0;
 if (!((HEAP8[21756] & 1) == 0)) {
  $2 = HEAP32[5441] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[21744] & 1) == 0)) {
  $4 = HEAP32[5438] | 0;
  if (($4 | 0) != 0) {
   _free($4);
  }
 }
 if (!((HEAP8[21732] & 1) == 0)) {
  $6 = HEAP32[5435] | 0;
  if (($6 | 0) != 0) {
   _free($6);
  }
 }
 if (!((HEAP8[21720] & 1) == 0)) {
  $8 = HEAP32[5432] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[21708] & 1) == 0)) {
  $10 = HEAP32[5429] | 0;
  if (($10 | 0) != 0) {
   _free($10);
  }
 }
 if (!((HEAP8[21696] & 1) == 0)) {
  $12 = HEAP32[5426] | 0;
  if (($12 | 0) != 0) {
   _free($12);
  }
 }
 if (!((HEAP8[21684] & 1) == 0)) {
  $14 = HEAP32[5423] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[21672] & 1) == 0)) {
  $16 = HEAP32[5420] | 0;
  if (($16 | 0) != 0) {
   _free($16);
  }
 }
 if (!((HEAP8[21660] & 1) == 0)) {
  $18 = HEAP32[5417] | 0;
  if (($18 | 0) != 0) {
   _free($18);
  }
 }
 if (!((HEAP8[21648] & 1) == 0)) {
  $20 = HEAP32[5414] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[21636] & 1) == 0)) {
  $22 = HEAP32[5411] | 0;
  if (($22 | 0) != 0) {
   _free($22);
  }
 }
 if (!((HEAP8[21624] & 1) == 0)) {
  $24 = HEAP32[5408] | 0;
  if (($24 | 0) != 0) {
   _free($24);
  }
 }
 if (!((HEAP8[21612] & 1) == 0)) {
  $26 = HEAP32[5405] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if (!((HEAP8[21600] & 1) == 0)) {
  $28 = HEAP32[5402] | 0;
  if (($28 | 0) != 0) {
   _free($28);
  }
 }
 if (!((HEAP8[21588] & 1) == 0)) {
  $30 = HEAP32[5399] | 0;
  if (($30 | 0) != 0) {
   _free($30);
  }
 }
 if (!((HEAP8[21576] & 1) == 0)) {
  $32 = HEAP32[5396] | 0;
  if (($32 | 0) != 0) {
   _free($32);
  }
 }
 if (!((HEAP8[21564] & 1) == 0)) {
  $34 = HEAP32[5393] | 0;
  if (($34 | 0) != 0) {
   _free($34);
  }
 }
 if (!((HEAP8[21552] & 1) == 0)) {
  $36 = HEAP32[5390] | 0;
  if (($36 | 0) != 0) {
   _free($36);
  }
 }
 if (!((HEAP8[21540] & 1) == 0)) {
  $38 = HEAP32[5387] | 0;
  if (($38 | 0) != 0) {
   _free($38);
  }
 }
 if (!((HEAP8[21528] & 1) == 0)) {
  $40 = HEAP32[5384] | 0;
  if (($40 | 0) != 0) {
   _free($40);
  }
 }
 if (!((HEAP8[21516] & 1) == 0)) {
  $42 = HEAP32[5381] | 0;
  if (($42 | 0) != 0) {
   _free($42);
  }
 }
 if (!((HEAP8[21504] & 1) == 0)) {
  $44 = HEAP32[5378] | 0;
  if (($44 | 0) != 0) {
   _free($44);
  }
 }
 if (!((HEAP8[21492] & 1) == 0)) {
  $46 = HEAP32[5375] | 0;
  if (($46 | 0) != 0) {
   _free($46);
  }
 }
 if ((HEAP8[21480] & 1) == 0) {
  return;
 }
 $48 = HEAP32[5372] | 0;
 if (($48 | 0) == 0) {
  return;
 }
 _free($48);
 return;
}
function __ZL12getEdgeFlagsPKfS0_S0_i($va, $vb, $vpoly, $npoly) {
 $va = $va | 0;
 $vb = $vb | 0;
 $vpoly = $vpoly | 0;
 $npoly = $npoly | 0;
 var $2 = 0, $va_val = 0.0, $va_idx_val = 0.0, $3 = 0.0, $vb_idx = 0, $j_045 = 0, $i_044 = 0, $mul = 0, $mul1 = 0, $arrayidx_val9 = 0.0, $arrayidx_idx10_val = 0.0, $sub_i13 = 0.0, $sub4_i14 = 0.0, $add_i19 = 0.0, $add14_i22 = 0.0, $cmp_i23 = 0, $t_0_i26 = 0.0, $t_1_i32 = 0.0, $sub25_i35 = 0.0, $sub30_i38 = 0.0, $vb_val = 0.0, $vb_idx_val = 0.0, $add14_i = 0.0, $t_0_i = 0.0, $t_1_i = 0.0, $sub25_i = 0.0, $sub30_i = 0.0, $inc = 0, $retval_0 = 0, label = 0;
 if ((HEAP8[24336] | 0) == 0) {
  if ((___cxa_guard_acquire(24336) | 0) != 0) {
   HEAPF32[2872] = 10000001111620804.0e-22;
   $2;
  }
 }
 if (($npoly | 0) <= 0) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $va_val = +HEAPF32[$va >> 2];
 $va_idx_val = +HEAPF32[$va + 8 >> 2];
 $3 = +HEAPF32[2872];
 $vb_idx = $vb + 8 | 0;
 $i_044 = 0;
 $j_045 = $npoly - 1 | 0;
 while (1) {
  $mul = $j_045 * 3 | 0;
  $mul1 = $i_044 * 3 | 0;
  $arrayidx_val9 = +HEAPF32[$vpoly + ($mul << 2) >> 2];
  $arrayidx_idx10_val = +HEAPF32[$vpoly + ($mul + 2 << 2) >> 2];
  $sub_i13 = +HEAPF32[$vpoly + ($mul1 << 2) >> 2] - $arrayidx_val9;
  $sub4_i14 = +HEAPF32[$vpoly + ($mul1 + 2 << 2) >> 2] - $arrayidx_idx10_val;
  $add_i19 = $sub_i13 * $sub_i13 + $sub4_i14 * $sub4_i14;
  $add14_i22 = ($va_val - $arrayidx_val9) * $sub_i13 + ($va_idx_val - $arrayidx_idx10_val) * $sub4_i14;
  $cmp_i23 = $add_i19 > 0.0;
  if ($cmp_i23) {
   $t_0_i26 = $add14_i22 / $add_i19;
  } else {
   $t_0_i26 = $add14_i22;
  }
  if ($t_0_i26 < 0.0) {
   $t_1_i32 = 0.0;
  } else {
   if ($t_0_i26 > 1.0) {
    $t_1_i32 = 1.0;
   } else {
    $t_1_i32 = $t_0_i26;
   }
  }
  $sub25_i35 = $arrayidx_val9 + $sub_i13 * $t_1_i32 - $va_val;
  $sub30_i38 = $arrayidx_idx10_val + $sub4_i14 * $t_1_i32 - $va_idx_val;
  if ($sub25_i35 * $sub25_i35 + $sub30_i38 * $sub30_i38 < $3) {
   $vb_val = +HEAPF32[$vb >> 2];
   $vb_idx_val = +HEAPF32[$vb_idx >> 2];
   $add14_i = ($vb_val - $arrayidx_val9) * $sub_i13 + ($vb_idx_val - $arrayidx_idx10_val) * $sub4_i14;
   if ($cmp_i23) {
    $t_0_i = $add14_i / $add_i19;
   } else {
    $t_0_i = $add14_i;
   }
   if ($t_0_i < 0.0) {
    $t_1_i = 0.0;
   } else {
    if ($t_0_i > 1.0) {
     $t_1_i = 1.0;
    } else {
     $t_1_i = $t_0_i;
    }
   }
   $sub25_i = $arrayidx_val9 + $sub_i13 * $t_1_i - $vb_val;
   $sub30_i = $arrayidx_idx10_val + $sub4_i14 * $t_1_i - $vb_idx_val;
   if ($sub25_i * $sub25_i + $sub30_i * $sub30_i < $3) {
    $retval_0 = 1;
    label = 19;
    break;
   }
  }
  $inc = $i_044 + 1 | 0;
  if (($inc | 0) < ($npoly | 0)) {
   $j_045 = $i_044;
   $i_044 = $inc;
  } else {
   $retval_0 = 0;
   label = 19;
   break;
  }
 }
 if ((label | 0) == 19) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i12 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $18 = 0, $add_ptr_i = 0, $call_i4 = 0, $sub_ptr_sub_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i12 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i12 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i12 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i12 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i12 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i12 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i12);
   }
   $18 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i) | 0;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $18, $call_i4, $call_i4 + 288 | 0, $9, $__err, 0) | 0) - $call_i4 | 0;
   if (($sub_ptr_sub_i | 0) >= 288) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 12 | 0;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i12 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $18 = 0, $add_ptr_i = 0, $call_i4 = 0, $sub_ptr_sub_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i12 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i12 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i12 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i12 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i12 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i12 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i12);
   }
   $18 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr_i >> 2] | 0) + 4 >> 2] & 255]($add_ptr_i) | 0;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $18, $call_i4, $call_i4 + 288 | 0, $9, $__err, 0) | 0) - $call_i4 | 0;
   if (($sub_ptr_sub_i | 0) >= 288) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   HEAP32[$__tm + 16 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 12 | 0;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i11 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $18 = 0, $add_ptr_i = 0, $call_i4 = 0, $sub_ptr_sub_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i11 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i11 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i11 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i11 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i11);
   }
   $18 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $18, $call_i4, $call_i4 + 168 | 0, $9, $__err, 0) | 0) - $call_i4 | 0;
   if (($sub_ptr_sub_i | 0) >= 168) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 7 | 0;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i11 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $18 = 0, $add_ptr_i = 0, $call_i4 = 0, $sub_ptr_sub_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i11 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i11 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i11 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i11 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i11 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i11 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i11);
   }
   $18 = HEAP32[$__e >> 2] | 0;
   $add_ptr_i = $this + 8 | 0;
   $call_i4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$add_ptr_i >> 2] >> 2] & 255]($add_ptr_i) | 0;
   $sub_ptr_sub_i = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $18, $call_i4, $call_i4 + 168 | 0, $9, $__err, 0) | 0) - $call_i4 | 0;
   if (($sub_ptr_sub_i | 0) >= 168) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   HEAP32[$__tm + 24 >> 2] = (($sub_ptr_sub_i | 0) / 12 | 0 | 0) % 7 | 0;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $__size__i_i = 0, $0 = 0, $tobool_i_i = 0, $cond_i = 0, $sub = 0, $2 = 0, $4 = 0, $cond_i_i = 0, $tobool_i_i30_i = 0, $cond_i35_i = 0, $add_i = 0, $cond_i_i_i = 0, $mul_i_i = 0, $_sroa_speculated_i_i = 0, $cond_i25_i = 0, $call_i_i_i_i = 0, $or_i_i_i = 0, $8 = 0, $cond_i22_i = 0, $add8_i = 0;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i >> 0] | 0;
 $tobool_i_i = ($0 & 1) == 0;
 if ($tobool_i_i) {
  $cond_i = ($0 & 255) >>> 1;
 } else {
  $cond_i = HEAP32[$this + 4 >> 2] | 0;
 }
 if (!($cond_i >>> 0 < $__n >>> 0)) {
  if ($tobool_i_i) {
   HEAP8[$this + 1 + $__n >> 0] = 0;
   HEAP8[$__size__i_i >> 0] = $__n << 1;
   return;
  } else {
   HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
   HEAP32[$this + 4 >> 2] = $__n;
   return;
  }
 }
 $sub = $__n - $cond_i | 0;
 if (($cond_i | 0) == ($__n | 0)) {
  return;
 }
 if ($tobool_i_i) {
  $cond_i_i = 10;
  $4 = $0;
 } else {
  $2 = HEAP32[$this >> 2] | 0;
  $cond_i_i = ($2 & -2) - 1 | 0;
  $4 = $2 & 255;
 }
 $tobool_i_i30_i = ($4 & 1) == 0;
 if ($tobool_i_i30_i) {
  $cond_i35_i = ($4 & 255) >>> 1;
 } else {
  $cond_i35_i = HEAP32[$this + 4 >> 2] | 0;
 }
 if (($cond_i_i - $cond_i35_i | 0) >>> 0 < $sub >>> 0) {
  $add_i = $cond_i35_i + $sub | 0;
  if ((-17 - $cond_i_i | 0) >>> 0 < ($add_i - $cond_i_i | 0) >>> 0) {
   __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  }
  if ($tobool_i_i30_i) {
   $cond_i_i_i = $this + 1 | 0;
  } else {
   $cond_i_i_i = HEAP32[$this + 8 >> 2] | 0;
  }
  if ($cond_i_i >>> 0 < 2147483623 >>> 0) {
   $mul_i_i = $cond_i_i << 1;
   $_sroa_speculated_i_i = $add_i >>> 0 < $mul_i_i >>> 0 ? $mul_i_i : $add_i;
   if ($_sroa_speculated_i_i >>> 0 < 11 >>> 0) {
    $cond_i25_i = 11;
   } else {
    $cond_i25_i = $_sroa_speculated_i_i + 16 & -16;
   }
  } else {
   $cond_i25_i = -17;
  }
  $call_i_i_i_i = __Znwj($cond_i25_i) | 0;
  if (($cond_i35_i | 0) != 0) {
   _memcpy($call_i_i_i_i | 0, $cond_i_i_i | 0, $cond_i35_i) | 0;
  }
  if (!(($cond_i_i | 0) == 10 | ($cond_i_i_i | 0) == 0)) {
   _free($cond_i_i_i);
  }
  HEAP32[$this + 8 >> 2] = $call_i_i_i_i;
  $or_i_i_i = $cond_i25_i | 1;
  HEAP32[$this >> 2] = $or_i_i_i;
  $8 = $or_i_i_i & 255;
 } else {
  $8 = $4;
 }
 if (($8 & 1) == 0) {
  $cond_i22_i = $this + 1 | 0;
 } else {
  $cond_i22_i = HEAP32[$this + 8 >> 2] | 0;
 }
 _memset($cond_i22_i + $cond_i35_i | 0, 0, $sub | 0) | 0;
 $add8_i = $cond_i35_i + $sub | 0;
 if ((HEAP8[$__size__i_i >> 0] & 1) == 0) {
  HEAP8[$__size__i_i >> 0] = $add8_i << 1;
 } else {
  HEAP32[$this + 4 >> 2] = $add8_i;
 }
 HEAP8[$cond_i22_i + $add8_i >> 0] = 0;
 return;
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg_result, $__iob, $__atoms, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i_i4 = 0, $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $sub_i_i_i11 = 0, $18 = 0, $19 = 0, $exception_i_i_i23 = 0, $21 = 0, $call_i29 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i_i4 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $5 = $__locale_2_i_i10 + 12 | 0;
 $7 = $__locale_2_i_i10 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 48 >> 2] & 31]($9, 19528, 19554, $__atoms) | 0;
   if (!((HEAP32[5814] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i4 >> 2] = 23256;
    HEAP32[$__p_i_i_i_i4 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i4 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23256, $__p_i_i_i_i4);
   }
   $sub_i_i_i11 = (HEAP32[5815] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i_i11 >>> 0) {
    $19 = HEAP32[$18 + ($sub_i_i_i11 << 2) >> 2] | 0;
    if (($19 | 0) != 0) {
     $21 = $19;
     $call_i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     HEAP32[$__thousands_sep >> 2] = $call_i29;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     $26 = $__locale_2_i_i10 + 4 | 0;
     if (((tempValue = HEAP32[$26 >> 2] | 0, HEAP32[$26 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = sp;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i23 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i23 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i23 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg_result, $__iob, $__atoms, $__thousands_sep) {
 $agg_result = $agg_result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $__p_i_i_i_i4 = 0, $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $sub_i_i_i11 = 0, $18 = 0, $19 = 0, $exception_i_i_i23 = 0, $21 = 0, $call_i29 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__p_i_i_i_i4 = sp | 0;
 $__p_i_i_i_i = sp + 16 | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $5 = $__locale_2_i_i10 + 12 | 0;
 $7 = $__locale_2_i_i10 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ((HEAP32[$5 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 32 >> 2] & 31]($9, 19528, 19554, $__atoms) | 0;
   if (!((HEAP32[5816] | 0) == -1)) {
    HEAP32[$__p_i_i_i_i4 >> 2] = 23264;
    HEAP32[$__p_i_i_i_i4 + 4 >> 2] = 34;
    HEAP32[$__p_i_i_i_i4 + 8 >> 2] = 0;
    __ZNSt3__111__call_onceERVmPvPFvS2_E(23264, $__p_i_i_i_i4);
   }
   $sub_i_i_i11 = (HEAP32[5817] | 0) - 1 | 0;
   $18 = HEAP32[$7 >> 2] | 0;
   if ((HEAP32[$5 >> 2] | 0) - $18 >> 2 >>> 0 > $sub_i_i_i11 >>> 0) {
    $19 = HEAP32[$18 + ($sub_i_i_i11 << 2) >> 2] | 0;
    if (($19 | 0) != 0) {
     $21 = $19;
     $call_i29 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 16 >> 2] & 255]($21) | 0;
     HEAP8[$__thousands_sep >> 0] = $call_i29;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 20 >> 2] & 127]($agg_result, $21);
     $26 = $__locale_2_i_i10 + 4 | 0;
     if (((tempValue = HEAP32[$26 >> 2] | 0, HEAP32[$26 >> 2] = tempValue + -1, tempValue) | 0) != 0) {
      STACKTOP = sp;
      return;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
     STACKTOP = sp;
     return;
    }
   }
   $exception_i_i_i23 = ___cxa_allocate_exception(4) | 0;
   HEAP32[$exception_i_i_i23 >> 2] = 11608;
   ___cxa_throw($exception_i_i_i23 | 0, 17848, 212);
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24224] | 0) != 0) {
  $5 = HEAP32[5568] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24224) | 0) == 0) {
  $5 = HEAP32[5568] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24144] | 0) == 0) {
  if ((___cxa_guard_acquire(24144) | 0) != 0) {
   _memset(20280, 0, 288) | 0;
   _atexit(76, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20280, 4176);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20292, 4128);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20304, 4096);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20316, 3856);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20328, 2504);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20340, 3648);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20352, 3592);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20364, 3552);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20376, 3488);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20388, 3456);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20400, 3376);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20412, 3248);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20424, 3192);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20436, 2952);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20448, 2920);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20460, 2600);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20472, 2504);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20484, 2488);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20496, 2328);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20508, 2256);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20520, 2184);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20532, 2160);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20544, 2096);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20556, 1920);
 HEAP32[5568] = 20280;
 $5 = HEAP32[5568] | 0;
 return $5 | 0;
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24280] | 0) != 0) {
  $5 = HEAP32[5590] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24280) | 0) == 0) {
  $5 = HEAP32[5590] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24168] | 0) == 0) {
  if ((___cxa_guard_acquire(24168) | 0) != 0) {
   _memset(21024, 0, 288) | 0;
   _atexit(74, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21024, 1872);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21036, 1792);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21048, 1752);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21060, 1712);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21072, 1672);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21084, 1624);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21096, 1584);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21108, 1512);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21120, 1384);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21132, 1328);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21144, 1272);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21156, 1192);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21168, 1168);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21180, 1160);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21192, 1144);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21204, 1120);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21216, 1672);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21228, 1064);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21240, 1048);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21252, 904);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21264, 864);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21276, 832);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21288, 728);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21300, 696);
 HEAP32[5590] = 21024;
 $5 = HEAP32[5590] | 0;
 return $5 | 0;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $3 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0, $6 = 0, $add_ptr = 0, $7 = 0, $shr_i16 = 0, $offset_to_base_0_i21 = 0, $12 = 0, $search_done = 0, $15 = 0, $p_0 = 0, $16 = 0, $shr_i = 0, $offset_to_base_0_i = 0, $20 = 0, $incdec_ptr6 = 0, label = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
  $3 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
  if (($3 | 0) == 0) {
   HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   return;
  }
  if (($3 | 0) != ($adjustedPtr | 0)) {
   $number_to_static_ptr11_i = $info + 36 | 0;
   HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   return;
  }
  $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
  if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
   return;
  }
  HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
  return;
 }
 $6 = HEAP32[$this + 12 >> 2] | 0;
 $add_ptr = $this + 16 + ($6 << 3) | 0;
 $7 = HEAP32[$this + 20 >> 2] | 0;
 $shr_i16 = $7 >> 8;
 if (($7 & 1 | 0) == 0) {
  $offset_to_base_0_i21 = $shr_i16;
 } else {
  $offset_to_base_0_i21 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $shr_i16 >> 2] | 0;
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($12, $info, $adjustedPtr + $offset_to_base_0_i21 | 0, ($7 & 2 | 0) != 0 ? $path_below : 2);
 if (($6 | 0) <= 1) {
  return;
 }
 $search_done = $info + 54 | 0;
 $15 = $adjustedPtr;
 $p_0 = $this + 24 | 0;
 while (1) {
  $16 = HEAP32[$p_0 + 4 >> 2] | 0;
  $shr_i = $16 >> 8;
  if (($16 & 1 | 0) == 0) {
   $offset_to_base_0_i = $shr_i;
  } else {
   $offset_to_base_0_i = HEAP32[(HEAP32[$15 >> 2] | 0) + $shr_i >> 2] | 0;
  }
  $20 = HEAP32[$p_0 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 63]($20, $info, $adjustedPtr + $offset_to_base_0_i | 0, ($16 & 2 | 0) != 0 ? $path_below : 2);
  if ((HEAP8[$search_done >> 0] | 0) != 0) {
   label = 16;
   break;
  }
  $incdec_ptr6 = $p_0 + 8 | 0;
  if ($incdec_ptr6 >>> 0 < $add_ptr >>> 0) {
   $p_0 = $incdec_ptr6;
  } else {
   label = 16;
   break;
  }
 }
 if ((label | 0) == 16) {
  return;
 }
}
function ___shgetc($f) {
 $f = $f | 0;
 var $c_i = 0, $shlim = 0, $0 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $flags_i_i = 0, $15 = 0, $16 = 0, $20 = 0, $conv_i = 0, $21 = 0, $_pre = 0, $_pre24_pre_pre = 0, $sub8 = 0, $_pre24_pre = 0, $_pre24 = 0, $shcnt28 = 0, $arrayidx = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $c_i = sp | 0;
 $shlim = $f + 104 | 0;
 $0 = HEAP32[$shlim >> 2] | 0;
 if (($0 | 0) == 0) {
  label = 3;
 } else {
  if ((HEAP32[$f + 108 >> 2] | 0) < ($0 | 0)) {
   label = 3;
  }
 }
 L3 : do {
  if ((label | 0) == 3) {
   $2 = $f;
   $3 = $f + 8 | 0;
   do {
    if ((HEAP32[$3 >> 2] | 0) == 0) {
     $5 = $f + 74 | 0;
     $6 = HEAP8[$5 >> 0] | 0;
     HEAP8[$5 >> 0] = $6 - 1 & 255 | $6;
     $7 = $f + 20 | 0;
     $9 = $f + 44 | 0;
     if ((HEAP32[$7 >> 2] | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) {
      FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 127]($2, 0, 0) | 0;
     }
     HEAP32[$f + 16 >> 2] = 0;
     HEAP32[$f + 28 >> 2] = 0;
     HEAP32[$7 >> 2] = 0;
     $flags_i_i = $f | 0;
     $15 = HEAP32[$flags_i_i >> 2] | 0;
     if (($15 & 20 | 0) == 0) {
      $16 = HEAP32[$9 >> 2] | 0;
      HEAP32[$3 >> 2] = $16;
      HEAP32[$f + 4 >> 2] = $16;
      break;
     }
     if (($15 & 4 | 0) == 0) {
      break L3;
     }
     HEAP32[$flags_i_i >> 2] = $15 | 32;
     break L3;
    }
   } while (0);
   if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 127]($2, $c_i, 1) | 0) == 1) {
    $20 = HEAP8[$c_i >> 0] | 0;
    $conv_i = $20 & 255;
    $21 = HEAP32[$shlim >> 2] | 0;
    $_pre = HEAP32[$3 >> 2] | 0;
    $_pre24_pre_pre = HEAP32[$f + 4 >> 2] | 0;
    if (($21 | 0) == 0) {
     $_pre24_pre = $_pre24_pre_pre;
     label = 15;
    } else {
     $sub8 = $21 - (HEAP32[$f + 108 >> 2] | 0) - 1 | 0;
     if (($_pre - $_pre24_pre_pre | 0) > ($sub8 | 0)) {
      HEAP32[$f + 100 >> 2] = $_pre24_pre_pre + $sub8;
      $_pre24 = $_pre24_pre_pre;
     } else {
      $_pre24_pre = $_pre24_pre_pre;
      label = 15;
     }
    }
    if ((label | 0) == 15) {
     HEAP32[$f + 100 >> 2] = $_pre;
     $_pre24 = $_pre24_pre;
    }
    if (($_pre | 0) != 0) {
     $shcnt28 = $f + 108 | 0;
     HEAP32[$shcnt28 >> 2] = $_pre + 1 - $_pre24 + (HEAP32[$shcnt28 >> 2] | 0);
    }
    $arrayidx = $_pre24 - 1 | 0;
    if ((HEAP8[$arrayidx >> 0] | 0) == $20 << 24 >> 24) {
     $retval_0 = $conv_i;
     STACKTOP = sp;
     return $retval_0 | 0;
    }
    HEAP8[$arrayidx >> 0] = $20;
    $retval_0 = $conv_i;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 HEAP32[$f + 100 >> 2] = 0;
 $retval_0 = -1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $call_i4 = 0, $__t_0_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5910] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23640;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23640, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5911] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i10 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i10 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i10 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
   }
   $call_i4 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $9, 4) | 0;
   if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   if (($call_i4 | 0) < 69) {
    $__t_0_i = $call_i4 + 2e3 | 0;
   } else {
    $__t_0_i = ($call_i4 - 69 | 0) >>> 0 < 31 >>> 0 ? $call_i4 + 1900 | 0 : $call_i4;
   }
   HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $__p_i_i_i_i = 0, $__locale_2_i_i10 = 0, $0 = 0, $sub_i_i_i = 0, $8 = 0, $9 = 0, $exception_i_i_i = 0, $12 = 0, $call_i4 = 0, $__t_0_i = 0, $21 = 0, $22 = 0, $23 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $__p_i_i_i_i = sp | 0;
 $__locale_2_i_i10 = HEAP32[$__iob + 28 >> 2] | 0;
 $0 = $__locale_2_i_i10 + 4 | 0;
 tempValue = HEAP32[$0 >> 2] | 0, HEAP32[$0 >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5912] | 0) == -1)) {
  HEAP32[$__p_i_i_i_i >> 2] = 23648;
  HEAP32[$__p_i_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23648, $__p_i_i_i_i);
 }
 $sub_i_i_i = (HEAP32[5913] | 0) - 1 | 0;
 $8 = HEAP32[$__locale_2_i_i10 + 8 >> 2] | 0;
 if ((HEAP32[$__locale_2_i_i10 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $12 = $__locale_2_i_i10 + 4 | 0;
   if (((tempValue = HEAP32[$12 >> 2] | 0, HEAP32[$12 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale_2_i_i10 >> 2] | 0) + 8 >> 2] & 511]($__locale_2_i_i10);
   }
   $call_i4 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, HEAP32[$__e >> 2] | 0, $__err, $9, 4) | 0;
   if ((HEAP32[$__err >> 2] & 4 | 0) != 0) {
    $21 = $__b | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $agg_result | 0;
    HEAP32[$23 >> 2] = $22;
    STACKTOP = sp;
    return;
   }
   if (($call_i4 | 0) < 69) {
    $__t_0_i = $call_i4 + 2e3 | 0;
   } else {
    $__t_0_i = ($call_i4 - 69 | 0) >>> 0 < 31 >>> 0 ? $call_i4 + 1900 | 0 : $call_i4;
   }
   HEAP32[$__tm + 20 >> 2] = $__t_0_i - 1900;
   $21 = $__b | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $agg_result | 0;
   HEAP32[$23 >> 2] = $22;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i_i | 0, 17848, 212);
}
function __ZN14dtNavMeshQuery22finalizeSlicedFindPathEPjPii($this, $path, $pathCount, $maxPath) {
 $this = $this | 0;
 $path = $path | 0;
 $pathCount = $pathCount | 0;
 $maxPath = $maxPath | 0;
 var $m_query = 0, $status = 0, $0 = 0, $2 = 0, $3 = 0, $4 = 0, $m_nodePool = 0, $prev_0 = 0, $node_0 = 0, $6 = 0, $bf_load = 0, $bf_clear = 0, $retval_0_i22 = 0, $retval_0_i16 = 0, $node_1 = 0, $n_0 = 0, $inc26 = 0, $bf_clear37 = 0, $arrayidx_i = 0, $n_1 = 0, $and = 0, $retval_0 = 0;
 HEAP32[$pathCount >> 2] = 0;
 $m_query = $this + 4 | 0;
 $status = $m_query | 0;
 $0 = HEAP32[$status >> 2] | 0;
 if (($0 | 0) < 0) {
  _memset($m_query | 0, 0, 48) | 0;
  $retval_0 = -2147483648;
  return $retval_0 | 0;
 }
 $2 = HEAP32[$this + 16 >> 2] | 0;
 $3 = HEAP32[$this + 20 >> 2] | 0;
 L5 : do {
  if (($2 | 0) == ($3 | 0)) {
   HEAP32[$path >> 2] = $2;
   $n_1 = 1;
  } else {
   $4 = HEAP32[$this + 8 >> 2] | 0;
   if ((HEAP32[$4 + 24 >> 2] | 0) != ($3 | 0)) {
    HEAP32[$status >> 2] = $0 | 64;
   }
   $m_nodePool = $this + 56 | 0;
   $node_0 = $4;
   $prev_0 = 0;
   while (1) {
    $6 = $node_0 + 20 | 0;
    $bf_load = HEAP32[$6 >> 2] | 0;
    $bf_clear = $bf_load & 1073741823;
    if (($bf_clear | 0) == 0) {
     $retval_0_i22 = 0;
    } else {
     $retval_0_i22 = (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) + (($bf_clear - 1 | 0) * 28 | 0) | 0;
    }
    if (($prev_0 | 0) == 0) {
     $retval_0_i16 = 0;
    } else {
     $retval_0_i16 = (($prev_0 - (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) | 0) / 28 | 0) + 1 & 1073741823;
    }
    HEAP32[$6 >> 2] = $bf_load & -1073741824 | $retval_0_i16;
    if (($retval_0_i22 | 0) == 0) {
     $n_0 = 0;
     $node_1 = $node_0;
     break;
    } else {
     $prev_0 = $node_0;
     $node_0 = $retval_0_i22;
    }
   }
   while (1) {
    $inc26 = $n_0 + 1 | 0;
    HEAP32[$path + ($n_0 << 2) >> 2] = HEAP32[$node_1 + 24 >> 2];
    if (($inc26 | 0) >= ($maxPath | 0)) {
     break;
    }
    $bf_clear37 = HEAP32[$node_1 + 20 >> 2] & 1073741823;
    if (($bf_clear37 | 0) == 0) {
     $n_1 = $inc26;
     break L5;
    }
    $arrayidx_i = (HEAP32[HEAP32[$m_nodePool >> 2] >> 2] | 0) + (($bf_clear37 - 1 | 0) * 28 | 0) | 0;
    if (($arrayidx_i | 0) == 0) {
     $n_1 = $inc26;
     break L5;
    } else {
     $n_0 = $inc26;
     $node_1 = $arrayidx_i;
    }
   }
   HEAP32[$status >> 2] = HEAP32[$status >> 2] | 16;
   $n_1 = $inc26;
  }
 } while (0);
 $and = HEAP32[$status >> 2] & 16777215;
 _memset($m_query | 0, 0, 48) | 0;
 HEAP32[$pathCount >> 2] = $n_1;
 $retval_0 = $and | 1073741824;
 return $retval_0 | 0;
}
function __Z24dtDistancePtPolyEdgesSqrPKfS0_iPfS1_($pt, $verts, $nverts, $ed, $et) {
 $pt = $pt | 0;
 $verts = $verts | 0;
 $nverts = $nverts | 0;
 $ed = $ed | 0;
 $et = $et | 0;
 var $arrayidx4 = 0, $i_028 = 0, $j_027 = 0, $c_0_off026 = 0, $mul = 0, $arrayidx = 0, $mul1 = 0, $arrayidx2 = 0, $0 = 0.0, $1 = 0.0, $arrayidx6 = 0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $c_1_off0 = 0, $arrayidx24 = 0, $sub_i = 0.0, $sub4_i = 0.0, $add_i = 0.0, $add14_i = 0.0, $storemerge_i = 0.0, $9 = 0.0, $sub25_i = 0.0, $sub30_i = 0.0, $inc = 0, $c_0_off0_lcssa = 0;
 if (($nverts | 0) <= 0) {
  $c_0_off0_lcssa = 0;
  return $c_0_off0_lcssa | 0;
 }
 $arrayidx4 = $pt + 8 | 0;
 $c_0_off026 = 0;
 $j_027 = $nverts - 1 | 0;
 $i_028 = 0;
 while (1) {
  $mul = $i_028 * 3 | 0;
  $arrayidx = $verts + ($mul << 2) | 0;
  $mul1 = $j_027 * 3 | 0;
  $arrayidx2 = $verts + ($mul1 << 2) | 0;
  $0 = +HEAPF32[$verts + ($mul + 2 << 2) >> 2];
  $1 = +HEAPF32[$arrayidx4 >> 2];
  $arrayidx6 = $verts + ($mul1 + 2 << 2) | 0;
  $2 = +HEAPF32[$arrayidx6 >> 2];
  if ($0 > $1 ^ $2 > $1) {
   $3 = +HEAPF32[$pt >> 2];
   $4 = +HEAPF32[$arrayidx2 >> 2];
   $5 = +HEAPF32[$arrayidx >> 2];
   if ($3 < $5 + ($1 - $0) * ($4 - $5) / ($2 - $0)) {
    $c_1_off0 = $c_0_off026 ^ 1;
    $8 = $5;
    $7 = $4;
    $6 = $3;
   } else {
    $c_1_off0 = $c_0_off026;
    $8 = $5;
    $7 = $4;
    $6 = $3;
   }
  } else {
   $c_1_off0 = $c_0_off026;
   $8 = +HEAPF32[$arrayidx >> 2];
   $7 = +HEAPF32[$arrayidx2 >> 2];
   $6 = +HEAPF32[$pt >> 2];
  }
  $arrayidx24 = $et + ($j_027 << 2) | 0;
  $sub_i = $8 - $7;
  $sub4_i = $0 - $2;
  $add_i = $sub_i * $sub_i + $sub4_i * $sub4_i;
  $add14_i = $sub_i * ($6 - $7) + $sub4_i * ($1 - $2);
  if ($add_i > 0.0) {
   $storemerge_i = $add14_i / $add_i;
  } else {
   $storemerge_i = $add14_i;
  }
  HEAPF32[$arrayidx24 >> 2] = $storemerge_i;
  if ($storemerge_i < 0.0) {
   HEAPF32[$arrayidx24 >> 2] = 0.0;
   $9 = 0.0;
  } else {
   if ($storemerge_i > 1.0) {
    HEAPF32[$arrayidx24 >> 2] = 1.0;
    $9 = 1.0;
   } else {
    $9 = $storemerge_i;
   }
  }
  $sub25_i = +HEAPF32[$arrayidx2 >> 2] + $sub_i * $9 - +HEAPF32[$pt >> 2];
  $sub30_i = $sub4_i * $9 + +HEAPF32[$arrayidx6 >> 2] - +HEAPF32[$arrayidx4 >> 2];
  HEAPF32[$ed + ($j_027 << 2) >> 2] = $sub25_i * $sub25_i + $sub30_i * $sub30_i;
  $inc = $i_028 + 1 | 0;
  if (($inc | 0) < ($nverts | 0)) {
   $c_0_off026 = $c_1_off0;
   $j_027 = $i_028;
   $i_028 = $inc;
  } else {
   $c_0_off0_lcssa = $c_1_off0;
   break;
  }
 }
 return $c_0_off0_lcssa | 0;
}
function __Z16findNearestPointffffffNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($cx, $cy, $cz, $ex, $ey, $ez, $callback) {
 $cx = +$cx;
 $cy = +$cy;
 $cz = +$cz;
 $ex = +$ex;
 $ey = +$ey;
 $ez = +$ez;
 $callback = $callback | 0;
 var $p = 0, $filter = 0, $ref = 0, $nearestPos = 0, $0 = 0, $arrayinit_begin = 0, $m_includeFlags_i1 = 0, $m_excludeFlags_i2 = 0, $i_03_i = 0, $arraydecay6 = 0, $cmp_i = 0, $cond_i_i_i = 0, $conv = 0.0, $conv14 = 0.0, $conv16 = 0.0, $$etemp$2$0 = 0, $$etemp$2$1 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 816 | 0;
 $p = sp + 512 | 0;
 $filter = sp + 528 | 0;
 $ref = sp + 792 | 0;
 $nearestPos = sp + 800 | 0;
 _emscripten_run_script(7064);
 $0 = sp | 0;
 $arrayinit_begin = $p | 0;
 HEAPF32[$arrayinit_begin >> 2] = $cx;
 HEAPF32[$p + 4 >> 2] = $cy;
 HEAPF32[$p + 8 >> 2] = $cz;
 $m_includeFlags_i1 = $filter + 256 | 0;
 HEAP16[$m_includeFlags_i1 >> 1] = -1;
 $m_excludeFlags_i2 = $filter + 258 | 0;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $i_03_i = 0;
 do {
  HEAPF32[$filter + ($i_03_i << 2) >> 2] = 1.0;
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 HEAP16[$m_includeFlags_i1 >> 1] = 3;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 HEAP32[$ref >> 2] = 0;
 $arraydecay6 = $nearestPos | 0;
 $cmp_i = (__ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin, $ex, $ey, $ez, $filter, $ref, $arraydecay6) | 0) < 0;
 if ((HEAP8[$callback >> 0] & 1) == 0) {
  $cond_i_i_i = $callback + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$callback + 8 >> 2] | 0;
 }
 if ($cmp_i) {
  _sprintf($0 | 0, 6432, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$2$0 = 260;
  $$etemp$2$1 = 0;
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $conv = +HEAPF32[$arraydecay6 >> 2];
  $conv14 = +HEAPF32[$nearestPos + 4 >> 2];
  $conv16 = +HEAPF32[$nearestPos + 8 >> 2];
  _sprintf($0 | 0, 5768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $cond_i_i_i, HEAPF64[tempVarArgs + 8 >> 3] = $conv, HEAPF64[tempVarArgs + 16 >> 3] = $conv14, HEAPF64[tempVarArgs + 24 >> 3] = $conv16, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _emscripten_run_script($0 | 0);
  $$etemp$2$0 = 260;
  $$etemp$2$1 = 0;
  $$etemp$3$0 = 512;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 }
}
function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $wc_addr = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $conv = 0, $sub = 0, $n_addr_0 = 0, $c_0 = 0, $s_0 = 0, $6 = 0, $shr24 = 0, $7 = 0, $n_addr_1 = 0, $c_1 = 0, $s_1 = 0, $c_2 = 0, $call = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $wc_addr = sp | 0;
 HEAP32[$wc_addr >> 2] = $wc;
 $0 = (($st | 0) == 0 ? 19600 : $st) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 L1 : do {
  if (($src | 0) == 0) {
   if (($1 | 0) == 0) {
    $retval_0 = 0;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  } else {
   if (($wc | 0) == 0) {
    $2 = $wc_addr;
    HEAP32[$wc_addr >> 2] = $2;
    $3 = $2;
   } else {
    $3 = $wc;
   }
   if (($n | 0) == 0) {
    $retval_0 = -2;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
   do {
    if (($1 | 0) == 0) {
     $4 = HEAP8[$src >> 0] | 0;
     $conv = $4 & 255;
     if ($4 << 24 >> 24 > -1) {
      HEAP32[$3 >> 2] = $conv;
      $retval_0 = $4 << 24 >> 24 != 0 | 0;
      STACKTOP = sp;
      return $retval_0 | 0;
     } else {
      $sub = $conv - 194 | 0;
      if ($sub >>> 0 > 50 >>> 0) {
       break L1;
      }
      $s_0 = $src + 1 | 0;
      $c_0 = HEAP32[10656 + ($sub << 2) >> 2] | 0;
      $n_addr_0 = $n - 1 | 0;
      break;
     }
    } else {
     $s_0 = $src;
     $c_0 = $1;
     $n_addr_0 = $n;
    }
   } while (0);
   L19 : do {
    if (($n_addr_0 | 0) == 0) {
     $c_2 = $c_0;
    } else {
     $6 = HEAP8[$s_0 >> 0] | 0;
     $shr24 = ($6 & 255) >>> 3;
     if (($shr24 - 16 | $shr24 + ($c_0 >> 26)) >>> 0 > 7 >>> 0) {
      break L1;
     } else {
      $s_1 = $s_0;
      $c_1 = $c_0;
      $n_addr_1 = $n_addr_0;
      $7 = $6;
     }
     while (1) {
      $s_1 = $s_1 + 1 | 0;
      $c_1 = ($7 & 255) - 128 | $c_1 << 6;
      $n_addr_1 = $n_addr_1 - 1 | 0;
      if (($c_1 | 0) >= 0) {
       break;
      }
      if (($n_addr_1 | 0) == 0) {
       $c_2 = $c_1;
       break L19;
      }
      $7 = HEAP8[$s_1 >> 0] | 0;
      if (!(($7 & -64) << 24 >> 24 == -128)) {
       break L1;
      }
     }
     HEAP32[$0 >> 2] = 0;
     HEAP32[$3 >> 2] = $c_1;
     $retval_0 = $n - $n_addr_1 | 0;
     STACKTOP = sp;
     return $retval_0 | 0;
    }
   } while (0);
   HEAP32[$0 >> 2] = $c_2;
   $retval_0 = -2;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[$0 >> 2] = 0;
 $call = ___errno_location() | 0;
 HEAP32[$call >> 2] = 84;
 $retval_0 = -1;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZL12overlapEdgesPKfPKiiii($pts, $edges, $nedges, $s1, $t1) {
 $pts = $pts | 0;
 $edges = $edges | 0;
 $nedges = $nedges | 0;
 $s1 = $s1 | 0;
 $t1 = $t1 | 0;
 var $mul14 = 0, $arrayidx15 = 0, $mul16 = 0, $arrayidx17 = 0, $arrayidx15_idx = 0, $arrayidx17_idx = 0, $i_023 = 0, $mul = 0, $0 = 0, $1 = 0, $mul10 = 0, $mul12 = 0, $arrayidx11_val = 0.0, $arrayidx11_idx_val = 0.0, $arrayidx15_val = 0.0, $arrayidx15_idx_val = 0.0, $arrayidx17_val = 0.0, $arrayidx17_idx_val = 0.0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $sub12_i_i = 0.0, $sub12_i28_i = 0.0, $sub12_i18_i = 0.0, $inc = 0, $retval_0 = 0, label = 0;
 if (($nedges | 0) <= 0) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 $mul14 = $s1 * 3 | 0;
 $arrayidx15 = $pts + ($mul14 << 2) | 0;
 $mul16 = $t1 * 3 | 0;
 $arrayidx17 = $pts + ($mul16 << 2) | 0;
 $arrayidx15_idx = $pts + ($mul14 + 2 << 2) | 0;
 $arrayidx17_idx = $pts + ($mul16 + 2 << 2) | 0;
 $i_023 = 0;
 while (1) {
  $mul = $i_023 << 2;
  $0 = HEAP32[$edges + ($mul << 2) >> 2] | 0;
  $1 = HEAP32[$edges + (($mul | 1) << 2) >> 2] | 0;
  if (!(($0 | 0) == ($s1 | 0) | ($0 | 0) == ($t1 | 0) | ($1 | 0) == ($s1 | 0) | ($1 | 0) == ($t1 | 0))) {
   $mul10 = $0 * 3 | 0;
   $mul12 = $1 * 3 | 0;
   $arrayidx11_val = +HEAPF32[$pts + ($mul10 << 2) >> 2];
   $arrayidx11_idx_val = +HEAPF32[$pts + ($mul10 + 2 << 2) >> 2];
   $arrayidx15_val = +HEAPF32[$arrayidx15 >> 2];
   $arrayidx15_idx_val = +HEAPF32[$arrayidx15_idx >> 2];
   $arrayidx17_val = +HEAPF32[$arrayidx17 >> 2];
   $arrayidx17_idx_val = +HEAPF32[$arrayidx17_idx >> 2];
   $sub_i_i = +HEAPF32[$pts + ($mul12 << 2) >> 2] - $arrayidx11_val;
   $sub4_i_i = +HEAPF32[$pts + ($mul12 + 2 << 2) >> 2] - $arrayidx11_idx_val;
   $sub12_i_i = $sub_i_i * ($arrayidx17_idx_val - $arrayidx11_idx_val) - $sub4_i_i * ($arrayidx17_val - $arrayidx11_val);
   $sub12_i28_i = $sub_i_i * ($arrayidx15_idx_val - $arrayidx11_idx_val) - $sub4_i_i * ($arrayidx15_val - $arrayidx11_val);
   if ($sub12_i28_i * $sub12_i_i < 0.0) {
    $sub12_i18_i = ($arrayidx11_idx_val - $arrayidx15_idx_val) * ($arrayidx17_val - $arrayidx15_val) - ($arrayidx11_val - $arrayidx15_val) * ($arrayidx17_idx_val - $arrayidx15_idx_val);
    if ($sub12_i18_i * ($sub12_i28_i + $sub12_i18_i - $sub12_i_i) < 0.0) {
     $retval_0 = 1;
     label = 7;
     break;
    }
   }
  }
  $inc = $i_023 + 1 | 0;
  if (($inc | 0) < ($nedges | 0)) {
   $i_023 = $inc;
  } else {
   $retval_0 = 0;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg_result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $fmt_i = 0, $__nar = 0, $2 = 0, $3 = 0, $arrayinit_element_i = 0, $arrayinit_element2_i = 0, $call5_i = 0, $add_ptr_i = 0, $6 = 0, $7 = 0, $__first_addr_04_i_i = 0, $8 = 0, $__nout__i_i_i_i = 0, $9 = 0, $cmp_i1_i_i_i = 0, $13 = 0, $incdec_ptr_i_i = 0, $14 = 0, $15 = 0, $$etemp$3$0 = 0, $$etemp$3$1 = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 tempParam = $__s;
 $__s = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__s >> 2] = HEAP32[tempParam >> 2];
 $fmt_i = sp | 0;
 $__nar = sp + 8 | 0;
 $2 = $__nar | 0;
 $3 = $fmt_i | 0;
 HEAP8[$3 >> 0] = 37;
 $arrayinit_element_i = $fmt_i + 1 | 0;
 HEAP8[$arrayinit_element_i >> 0] = $__fmt;
 $arrayinit_element2_i = $fmt_i + 2 | 0;
 HEAP8[$arrayinit_element2_i >> 0] = $__mod;
 HEAP8[$fmt_i + 3 >> 0] = 0;
 if (!($__mod << 24 >> 24 == 0)) {
  HEAP8[$arrayinit_element_i >> 0] = $__mod;
  HEAP8[$arrayinit_element2_i >> 0] = $__fmt;
 }
 $call5_i = _strftime_l($2 | 0, 100, $3 | 0, $__tm | 0, HEAP32[$this + 8 >> 2] | 0) | 0;
 $add_ptr_i = $__nar + $call5_i | 0;
 $6 = HEAP32[$__s >> 2] | 0;
 if (($call5_i | 0) == 0) {
  $14 = $6;
  $15 = $agg_result | 0;
  HEAP32[$15 >> 2] = $14;
  $$etemp$3$0 = 100;
  $$etemp$3$1 = 0;
  STACKTOP = sp;
  return;
 } else {
  $__first_addr_04_i_i = $2;
  $7 = $6;
 }
 while (1) {
  $8 = HEAP8[$__first_addr_04_i_i >> 0] | 0;
  do {
   if (($7 | 0) == 0) {
    $13 = 0;
   } else {
    $__nout__i_i_i_i = $7 + 24 | 0;
    $9 = HEAP32[$__nout__i_i_i_i >> 2] | 0;
    if (($9 | 0) == (HEAP32[$7 + 28 >> 2] | 0)) {
     $cmp_i1_i_i_i = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$7 >> 2] | 0) + 52 >> 2] & 63]($7, $8 & 255) | 0) == -1;
     $13 = $cmp_i1_i_i_i ? 0 : $7;
     break;
    } else {
     HEAP32[$__nout__i_i_i_i >> 2] = $9 + 1;
     HEAP8[$9 >> 0] = $8;
     $13 = $7;
     break;
    }
   }
  } while (0);
  $incdec_ptr_i_i = $__first_addr_04_i_i + 1 | 0;
  if (($incdec_ptr_i_i | 0) == ($add_ptr_i | 0)) {
   $14 = $13;
   break;
  } else {
   $__first_addr_04_i_i = $incdec_ptr_i_i;
   $7 = $13;
  }
 }
 $15 = $agg_result | 0;
 HEAP32[$15 >> 2] = $14;
 $$etemp$3$0 = 100;
 $$etemp$3$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $__loc__i = 0, $2 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $__cv_ = 0, $11 = 0, $__st_ = 0, $__always_noconv_ = 0, $16 = 0, $vtable_i = 0, $vfn_i = 0, $17 = 0, $call_i = 0, $frombool = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = sp | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 13328;
 $__loc__i = $this + 4 | 0;
 __ZNSt3__16localeC2Ev($__loc__i);
 _memset($this + 8 | 0, 0, 24) | 0;
 HEAP32[$0 >> 2] = 13696;
 HEAP32[$this + 32 >> 2] = $__fp;
 $2 = HEAP32[$__loc__i >> 2] | 0;
 $__shared_owners__i_i = $2 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5834] | 0) == -1)) {
  HEAP32[$__p_i_i_i >> 2] = 23336;
  HEAP32[$__p_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23336, $__p_i_i_i);
 }
 $sub_i_i = (HEAP32[5835] | 0) - 1 | 0;
 $8 = HEAP32[$2 + 8 >> 2] | 0;
 if ((HEAP32[$2 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $__cv_ = $this + 36 | 0;
   $11 = $9;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    HEAP32[$__cv_ >> 2] = $11;
    $__st_ = $this + 40 | 0;
    HEAP32[$__st_ >> 2] = $__st;
    $__always_noconv_ = $this + 44 | 0;
    $16 = $9;
    $vtable_i = HEAP32[$16 >> 2] | 0;
    $vfn_i = $vtable_i + 28 | 0;
    $17 = HEAP32[$vfn_i >> 2] | 0;
    $call_i = FUNCTION_TABLE_ii[$17 & 255]($11) | 0;
    $frombool = $call_i & 1;
    HEAP8[$__always_noconv_ >> 0] = $frombool;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 511]($2 | 0);
   HEAP32[$__cv_ >> 2] = $11;
   $__st_ = $this + 40 | 0;
   HEAP32[$__st_ >> 2] = $__st;
   $__always_noconv_ = $this + 44 | 0;
   $16 = $9;
   $vtable_i = HEAP32[$16 >> 2] | 0;
   $vfn_i = $vtable_i + 28 | 0;
   $17 = HEAP32[$vfn_i >> 2] | 0;
   $call_i = FUNCTION_TABLE_ii[$17 & 255]($11) | 0;
   $frombool = $call_i & 1;
   HEAP8[$__always_noconv_ >> 0] = $frombool;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i | 0, 17848, 212);
}
function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $__p_i_i_i = 0, $0 = 0, $__loc__i = 0, $2 = 0, $__shared_owners__i_i = 0, $sub_i_i = 0, $8 = 0, $9 = 0, $exception_i_i = 0, $__cv_ = 0, $11 = 0, $__st_ = 0, $__always_noconv_ = 0, $16 = 0, $vtable_i = 0, $vfn_i = 0, $17 = 0, $call_i = 0, $frombool = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i_i = sp | 0;
 $0 = $this | 0;
 HEAP32[$0 >> 2] = 13400;
 $__loc__i = $this + 4 | 0;
 __ZNSt3__16localeC2Ev($__loc__i);
 _memset($this + 8 | 0, 0, 24) | 0;
 HEAP32[$0 >> 2] = 13768;
 HEAP32[$this + 32 >> 2] = $__fp;
 $2 = HEAP32[$__loc__i >> 2] | 0;
 $__shared_owners__i_i = $2 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
 if (!((HEAP32[5836] | 0) == -1)) {
  HEAP32[$__p_i_i_i >> 2] = 23344;
  HEAP32[$__p_i_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(23344, $__p_i_i_i);
 }
 $sub_i_i = (HEAP32[5837] | 0) - 1 | 0;
 $8 = HEAP32[$2 + 8 >> 2] | 0;
 if ((HEAP32[$2 + 12 >> 2] | 0) - $8 >> 2 >>> 0 > $sub_i_i >>> 0) {
  $9 = HEAP32[$8 + ($sub_i_i << 2) >> 2] | 0;
  if (($9 | 0) != 0) {
   $__cv_ = $this + 36 | 0;
   $11 = $9;
   if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
    HEAP32[$__cv_ >> 2] = $11;
    $__st_ = $this + 40 | 0;
    HEAP32[$__st_ >> 2] = $__st;
    $__always_noconv_ = $this + 44 | 0;
    $16 = $9;
    $vtable_i = HEAP32[$16 >> 2] | 0;
    $vfn_i = $vtable_i + 28 | 0;
    $17 = HEAP32[$vfn_i >> 2] | 0;
    $call_i = FUNCTION_TABLE_ii[$17 & 255]($11) | 0;
    $frombool = $call_i & 1;
    HEAP8[$__always_noconv_ >> 0] = $frombool;
    STACKTOP = sp;
    return;
   }
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 511]($2 | 0);
   HEAP32[$__cv_ >> 2] = $11;
   $__st_ = $this + 40 | 0;
   HEAP32[$__st_ >> 2] = $__st;
   $__always_noconv_ = $this + 44 | 0;
   $16 = $9;
   $vtable_i = HEAP32[$16 >> 2] | 0;
   $vfn_i = $vtable_i + 28 | 0;
   $17 = HEAP32[$vfn_i >> 2] | 0;
   $call_i = FUNCTION_TABLE_ii[$17 & 255]($11) | 0;
   $frombool = $call_i & 1;
   HEAP8[$__always_noconv_ >> 0] = $frombool;
   STACKTOP = sp;
   return;
  }
 }
 $exception_i_i = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception_i_i >> 2] = 11608;
 ___cxa_throw($exception_i_i | 0, 17848, 212);
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec_0, $ec_1, $what_arg) {
 $this = $this | 0;
 $ec_0 = $ec_0 | 0;
 $ec_1 = $ec_1 | 0;
 $what_arg = $what_arg | 0;
 var $ec = 0, $tmpcast = 0, $ref_tmp = 0, $agg_tmp = 0, $call_i_i = 0, $and_i_i_i_i = 0, $call_i_i_i_i = 0, $__p_0_i_i = 0, $1 = 0, $tobool_i_i_i_i_i = 0, $cond_i_i_i_i = 0, $call_i_i1 = 0, $call_i = 0, $add_ptr_i_i = 0, $11 = 0, $13 = 0, $14 = 0, $15$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $ec = sp | 0;
 $tmpcast = $ec;
 HEAP32[$ec >> 2] = $ec_0;
 HEAP32[$tmpcast + 4 >> 2] = $ec_1;
 $ref_tmp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $agg_tmp = STACKTOP;
 STACKTOP = STACKTOP + 12 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 $call_i_i = _strlen($what_arg | 0) | 0;
 if ($call_i_i >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($call_i_i >>> 0 < 11 >>> 0) {
  HEAP8[$agg_tmp >> 0] = $call_i_i << 1;
  $__p_0_i_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i_i = $call_i_i + 16 & -16;
  $call_i_i_i_i = __Znwj($and_i_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i_i;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $call_i_i;
  $__p_0_i_i = $call_i_i_i_i;
 }
 _memcpy($__p_0_i_i | 0, $what_arg | 0, $call_i_i) | 0;
 HEAP8[$__p_0_i_i + $call_i_i >> 0] = 0;
 __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($ref_tmp, $tmpcast, $agg_tmp);
 $1 = $this | 0;
 HEAP32[$1 >> 2] = 11640;
 $tobool_i_i_i_i_i = (HEAP8[$ref_tmp >> 0] & 1) == 0;
 if ($tobool_i_i_i_i_i) {
  $cond_i_i_i_i = $ref_tmp + 1 | 0;
 } else {
  $cond_i_i_i_i = HEAP32[$ref_tmp + 8 >> 2] | 0;
 }
 $call_i_i1 = _strlen($cond_i_i_i_i | 0) | 0;
 $call_i = __Znwj($call_i_i1 + 13 | 0) | 0;
 HEAP32[$call_i + 4 >> 2] = $call_i_i1;
 HEAP32[$call_i >> 2] = $call_i_i1;
 $add_ptr_i_i = $call_i + 12 | 0;
 HEAP32[$this + 4 >> 2] = $add_ptr_i_i;
 HEAP32[$call_i + 8 >> 2] = 0;
 _memcpy($add_ptr_i_i | 0, $cond_i_i_i_i | 0, $call_i_i1 + 1 | 0) | 0;
 if (!$tobool_i_i_i_i_i) {
  $11 = HEAP32[$ref_tmp + 8 >> 2] | 0;
  if (($11 | 0) != 0) {
   _free($11);
  }
 }
 if (!((HEAP8[$agg_tmp >> 0] & 1) == 0)) {
  $13 = HEAP32[$agg_tmp + 8 >> 2] | 0;
  if (($13 | 0) != 0) {
   _free($13);
  }
 }
 HEAP32[$1 >> 2] = 13664;
 $14 = $this + 8 | 0;
 $15$1 = HEAP32[$ec + 4 >> 2] | 0;
 HEAP32[$14 >> 2] = HEAP32[$ec >> 2];
 HEAP32[$14 + 4 >> 2] = $15$1;
 STACKTOP = sp;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this) {
 $this = $this | 0;
 var $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $cond_i10 = 0, $cond_i33 = 0, $mul_i_i29 = 0, $call_i_i_sink = 0, $9 = 0, $10 = 0, $12 = 0, $__now_long_0_off0 = 0, $__was_long_0_off0 = 0, $__p_0 = 0, $__new_data_1 = 0, $cond_i19 = 0, $add27 = 0, $d_addr_05_i = 0, $n_addr_04_i = 0, $s_addr_03_i = 0;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i >> 0] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 1;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 if (($3 & 1) == 0) {
  $cond_i10 = ($3 & 255) >>> 1;
 } else {
  $cond_i10 = HEAP32[$this + 4 >> 2] | 0;
 }
 if ($cond_i10 >>> 0 < 2 >>> 0) {
  $cond_i33 = 1;
 } else {
  $cond_i33 = ($cond_i10 + 4 & -4) - 1 | 0;
 }
 if (($cond_i33 | 0) == ($cond_i | 0)) {
  return;
 }
 do {
  if (($cond_i33 | 0) == 1) {
   $__new_data_1 = $this + 4 | 0;
   $__p_0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long_0_off0 = 1;
   $__now_long_0_off0 = 0;
   $12 = $3;
  } else {
   $mul_i_i29 = ($cond_i33 << 2) + 4 | 0;
   if ($cond_i33 >>> 0 > $cond_i >>> 0) {
    $call_i_i_sink = __Znwj($mul_i_i29) | 0;
   } else {
    $call_i_i_sink = __Znwj($mul_i_i29) | 0;
   }
   $9 = $call_i_i_sink;
   $10 = HEAP8[$__size__i_i >> 0] | 0;
   if (($10 & 1) == 0) {
    $__new_data_1 = $9;
    $__p_0 = $this + 4 | 0;
    $__was_long_0_off0 = 0;
    $__now_long_0_off0 = 1;
    $12 = $10;
    break;
   } else {
    $__new_data_1 = $9;
    $__p_0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long_0_off0 = 1;
    $__now_long_0_off0 = 1;
    $12 = $10;
    break;
   }
  }
 } while (0);
 if (($12 & 1) == 0) {
  $cond_i19 = ($12 & 255) >>> 1;
 } else {
  $cond_i19 = HEAP32[$this + 4 >> 2] | 0;
 }
 $add27 = $cond_i19 + 1 | 0;
 if (($add27 | 0) != 0) {
  $s_addr_03_i = $__p_0;
  $n_addr_04_i = $add27;
  $d_addr_05_i = $__new_data_1;
  while (1) {
   $n_addr_04_i = $n_addr_04_i - 1 | 0;
   HEAP32[$d_addr_05_i >> 2] = HEAP32[$s_addr_03_i >> 2];
   if (($n_addr_04_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i = $s_addr_03_i + 4 | 0;
    $d_addr_05_i = $d_addr_05_i + 4 | 0;
   }
  }
 }
 if (!($__was_long_0_off0 ^ 1 | ($__p_0 | 0) == 0)) {
  _free($__p_0);
 }
 if ($__now_long_0_off0) {
  HEAP32[$this >> 2] = $cond_i33 + 1 | 1;
  HEAP32[$this + 4 >> 2] = $cond_i10;
  HEAP32[$this + 8 >> 2] = $__new_data_1;
  return;
 } else {
  HEAP8[$__size__i_i >> 0] = $cond_i10 << 1;
  return;
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond = 0, $2 = 0, $d_addr_05_i = 0, $n_addr_04_i = 0, $s_addr_03_i = 0, $sub18 = 0, $d_addr_05_i3 = 0, $n_addr_04_i4 = 0, $s_addr_03_i5 = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ((HEAP8[$this >> 0] & 1) == 0) {
  $cond_i = $this + 4 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 if ($__old_cap >>> 0 < 536870887 >>> 0) {
  $add = $__delta_cap + $__old_cap | 0;
  $mul = $__old_cap << 1;
  $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
  if ($_sroa_speculated >>> 0 < 2 >>> 0) {
   $cond = 2;
  } else {
   $cond = $_sroa_speculated + 4 & -4;
  }
 } else {
  $cond = 1073741807;
 }
 $2 = __Znwj($cond << 2) | 0;
 if (($__n_copy | 0) != 0) {
  $s_addr_03_i = $cond_i;
  $n_addr_04_i = $__n_copy;
  $d_addr_05_i = $2;
  while (1) {
   $n_addr_04_i = $n_addr_04_i - 1 | 0;
   HEAP32[$d_addr_05_i >> 2] = HEAP32[$s_addr_03_i >> 2];
   if (($n_addr_04_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i = $s_addr_03_i + 4 | 0;
    $d_addr_05_i = $d_addr_05_i + 4 | 0;
   }
  }
 }
 $sub18 = $__old_sz - $__n_del | 0;
 if (($sub18 | 0) != ($__n_copy | 0)) {
  $s_addr_03_i5 = $cond_i + ($__n_del + $__n_copy << 2) | 0;
  $n_addr_04_i4 = $sub18 - $__n_copy | 0;
  $d_addr_05_i3 = $2 + ($__n_add + $__n_copy << 2) | 0;
  while (1) {
   $n_addr_04_i4 = $n_addr_04_i4 - 1 | 0;
   HEAP32[$d_addr_05_i3 >> 2] = HEAP32[$s_addr_03_i5 >> 2];
   if (($n_addr_04_i4 | 0) == 0) {
    break;
   } else {
    $s_addr_03_i5 = $s_addr_03_i5 + 4 | 0;
    $d_addr_05_i3 = $d_addr_05_i3 + 4 | 0;
   }
  }
 }
 if (($__old_cap | 0) == 1 | ($cond_i | 0) == 0) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $2;
  $or_i = $cond | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  return;
 }
 _free($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $2;
 $or_i = $cond | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 return;
}
function __Z35rcFilterLowHangingWalkableObstaclesP9rcContextiR13rcHeightfield($ctx, $walkableClimb, $solid) {
 $ctx = $ctx | 0;
 $walkableClimb = $walkableClimb | 0;
 $solid = $solid | 0;
 var $m_timerEnabled_i = 0, $3 = 0, $4 = 0, $spans = 0, $x_029_us = 0, $s_022_us = 0, $s_027_us = 0, $previousArea_026_us = 0, $previousWalkable_0_off025_us = 0, $ps_024_us = 0, $bf_load_us = 0, $cmp6_us = 0, $sub_us = 0, $bf_set_us = 0, $bf_load21_us = 0, $y_031_us = 0, $mul_us = 0, $ps_024_us$looptemp = 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 10);
 }
 $3 = HEAP32[$solid >> 2] | 0;
 $4 = HEAP32[$solid + 4 >> 2] | 0;
 if (($4 | 0) > 0) {
  $spans = $solid + 40 | 0;
  if (($3 | 0) > 0) {
   $y_031_us = 0;
   do {
    $mul_us = Math_imul($y_031_us, $3) | 0;
    $x_029_us = 0;
    do {
     $s_022_us = HEAP32[(HEAP32[$spans >> 2] | 0) + ($x_029_us + $mul_us << 2) >> 2] | 0;
     if (($s_022_us | 0) != 0) {
      $ps_024_us = 0;
      $previousWalkable_0_off025_us = 1;
      $previousArea_026_us = 0;
      $s_027_us = $s_022_us;
      while (1) {
       $ps_024_us$looptemp = $ps_024_us;
       $ps_024_us = $s_027_us;
       $bf_load_us = HEAP32[$ps_024_us >> 2] | 0;
       $cmp6_us = $bf_load_us >>> 0 > 67108863 >>> 0;
       if ($cmp6_us | $previousWalkable_0_off025_us) {
        $bf_load21_us = $bf_load_us;
       } else {
        $sub_us = ($bf_load_us >>> 13 & 8191) - ((HEAP32[$ps_024_us$looptemp >> 2] | 0) >>> 13 & 8191) | 0;
        if (((($sub_us | 0) < 0 ? -$sub_us | 0 : $sub_us) | 0) > ($walkableClimb | 0)) {
         $bf_load21_us = $bf_load_us;
        } else {
         $bf_set_us = $bf_load_us & 67108863 | $previousArea_026_us;
         HEAP32[$ps_024_us >> 2] = $bf_set_us;
         $bf_load21_us = $bf_set_us;
        }
       }
       $s_027_us = HEAP32[$s_027_us + 4 >> 2] | 0;
       if (($s_027_us | 0) == 0) {
        break;
       } else {
        $previousWalkable_0_off025_us = $cmp6_us ^ 1;
        $previousArea_026_us = $bf_load21_us & -67108864;
       }
      }
     }
     $x_029_us = $x_029_us + 1 | 0;
    } while (($x_029_us | 0) < ($3 | 0));
    $y_031_us = $y_031_us + 1 | 0;
   } while (($y_031_us | 0) < ($4 | 0));
  }
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 10);
 return;
}
function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__1buf = 0, $__extbe = 0, $__e = 0, $cmp_i = 0, $arraydecay = 0, $add_ptr = 0, $__cv_ = 0, $__st_ = 0, $add_ptr10 = 0, $sub_ptr_rhs_cast = 0, $__file_30 = 0, $pbase_0 = 0, $3 = 0, $call_i = 0, $cmp26 = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 16 | 0;
 $__e = sp + 24 | 0;
 $cmp_i = ($__c | 0) == -1;
 L1 : do {
  if (!$cmp_i) {
   HEAP32[$__1buf >> 2] = $__c;
   if ((HEAP8[$this + 44 >> 0] | 0) != 0) {
    if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = sp;
    return $retval_0 | 0;
   }
   $arraydecay = $__extbuf | 0;
   HEAP32[$__extbe >> 2] = $arraydecay;
   $add_ptr = $__1buf + 4 | 0;
   $__cv_ = $this + 36 | 0;
   $__st_ = $this + 40 | 0;
   $add_ptr10 = $__extbuf + 8 | 0;
   $sub_ptr_rhs_cast = $__extbuf;
   $__file_30 = $this + 32 | 0;
   $pbase_0 = $__1buf;
   while (1) {
    $3 = HEAP32[$__cv_ >> 2] | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, HEAP32[$__st_ >> 2] | 0, $pbase_0, $add_ptr, $__e, $arraydecay, $add_ptr10, $__extbe) | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($pbase_0 | 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    if (($call_i | 0) == 3) {
     label = 7;
     break;
    }
    $cmp26 = ($call_i | 0) == 1;
    if (!($call_i >>> 0 < 2 >>> 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
    if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_30 >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    if ($cmp26) {
     $pbase_0 = $cmp26 ? HEAP32[$__e >> 2] | 0 : $pbase_0;
    } else {
     break L1;
    }
   }
   if ((label | 0) == 7) {
    if ((_fwrite($pbase_0 | 0, 1, 1, HEAP32[$__file_30 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if ((label | 0) == 12) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = $cmp_i ? 0 : $__c;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__1buf = 0, $__extbe = 0, $__e = 0, $cmp_i = 0, $arraydecay = 0, $add_ptr = 0, $__cv_ = 0, $__st_ = 0, $add_ptr10 = 0, $sub_ptr_rhs_cast = 0, $__file_30 = 0, $pbase_0 = 0, $2 = 0, $call_i = 0, $cmp26 = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 16 | 0;
 $__e = sp + 24 | 0;
 $cmp_i = ($__c | 0) == -1;
 L1 : do {
  if (!$cmp_i) {
   HEAP8[$__1buf >> 0] = $__c;
   if ((HEAP8[$this + 44 >> 0] | 0) != 0) {
    if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = sp;
    return $retval_0 | 0;
   }
   $arraydecay = $__extbuf | 0;
   HEAP32[$__extbe >> 2] = $arraydecay;
   $add_ptr = $__1buf + 1 | 0;
   $__cv_ = $this + 36 | 0;
   $__st_ = $this + 40 | 0;
   $add_ptr10 = $__extbuf + 8 | 0;
   $sub_ptr_rhs_cast = $__extbuf;
   $__file_30 = $this + 32 | 0;
   $pbase_0 = $__1buf;
   while (1) {
    $2 = HEAP32[$__cv_ >> 2] | 0;
    $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] & 63]($2, HEAP32[$__st_ >> 2] | 0, $pbase_0, $add_ptr, $__e, $arraydecay, $add_ptr10, $__extbe) | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($pbase_0 | 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    if (($call_i | 0) == 3) {
     label = 7;
     break;
    }
    $cmp26 = ($call_i | 0) == 1;
    if (!($call_i >>> 0 < 2 >>> 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
    if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_30 >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
     $retval_0 = -1;
     label = 12;
     break;
    }
    if ($cmp26) {
     $pbase_0 = $cmp26 ? HEAP32[$__e >> 2] | 0 : $pbase_0;
    } else {
     break L1;
    }
   }
   if ((label | 0) == 7) {
    if ((_fwrite($pbase_0 | 0, 1, 1, HEAP32[$__file_30 >> 2] | 0) | 0) == 1) {
     break;
    } else {
     $retval_0 = -1;
    }
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if ((label | 0) == 12) {
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = $cmp_i ? 0 : $__c;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZN7dtCrowd5purgeEv($this) {
 $this = $this | 0;
 var $m_maxAgents = 0, $0 = 0, $m_agents = 0, $1 = 0, $2 = 0, $3 = 0, $i_04 = 0, $4 = 0, $6 = 0, $7 = 0, $inc = 0, $_lcssa = 0, $m_activeAgents = 0, $9 = 0, $m_agentAnims = 0, $11 = 0, $m_pathResult = 0, $13 = 0, $m_grid = 0, $15 = 0, $16 = 0, $18 = 0, $m_obstacleQuery = 0, $21 = 0, $22 = 0, $24 = 0, $m_navquery = 0, $27 = 0;
 $m_maxAgents = $this | 0;
 $0 = HEAP32[$m_maxAgents >> 2] | 0;
 $m_agents = $this + 4 | 0;
 $1 = HEAP32[$m_agents >> 2] | 0;
 if (($0 | 0) > 0) {
  $i_04 = 0;
  $3 = $1;
  $2 = $0;
  while (1) {
   $4 = HEAP32[$3 + ($i_04 * 608 | 0) + 28 >> 2] | 0;
   if (($4 | 0) == 0) {
    $7 = $2;
    $6 = $3;
   } else {
    _free($4);
    $7 = HEAP32[$m_maxAgents >> 2] | 0;
    $6 = HEAP32[$m_agents >> 2] | 0;
   }
   $inc = $i_04 + 1 | 0;
   if (($inc | 0) < ($7 | 0)) {
    $i_04 = $inc;
    $3 = $6;
    $2 = $7;
   } else {
    $_lcssa = $6;
    break;
   }
  }
 } else {
  $_lcssa = $1;
 }
 if (($_lcssa | 0) != 0) {
  _free($_lcssa | 0);
 }
 HEAP32[$m_agents >> 2] = 0;
 HEAP32[$m_maxAgents >> 2] = 0;
 $m_activeAgents = $this + 8 | 0;
 $9 = HEAP32[$m_activeAgents >> 2] | 0;
 if (($9 | 0) != 0) {
  _free($9);
 }
 HEAP32[$m_activeAgents >> 2] = 0;
 $m_agentAnims = $this + 12 | 0;
 $11 = HEAP32[$m_agentAnims >> 2] | 0;
 if (($11 | 0) != 0) {
  _free($11 | 0);
 }
 HEAP32[$m_agentAnims >> 2] = 0;
 $m_pathResult = $this + 712 | 0;
 $13 = HEAP32[$m_pathResult >> 2] | 0;
 if (($13 | 0) != 0) {
  _free($13);
 }
 HEAP32[$m_pathResult >> 2] = 0;
 $m_grid = $this + 708 | 0;
 $15 = HEAP32[$m_grid >> 2] | 0;
 if (($15 | 0) != 0) {
  $16 = HEAP32[$15 + 24 >> 2] | 0;
  if (($16 | 0) != 0) {
   _free($16);
  }
  $18 = HEAP32[$15 + 12 >> 2] | 0;
  if (($18 | 0) != 0) {
   _free($18);
  }
  _free($15);
 }
 HEAP32[$m_grid >> 2] = 0;
 $m_obstacleQuery = $this + 704 | 0;
 $21 = HEAP32[$m_obstacleQuery >> 2] | 0;
 if (($21 | 0) != 0) {
  $22 = HEAP32[$21 + 44 >> 2] | 0;
  if (($22 | 0) != 0) {
   _free($22);
  }
  $24 = HEAP32[$21 + 56 >> 2] | 0;
  if (($24 | 0) != 0) {
   _free($24);
  }
  _free($21);
 }
 HEAP32[$m_obstacleQuery >> 2] = 0;
 $m_navquery = $this + 1e3 | 0;
 $27 = HEAP32[$m_navquery >> 2] | 0;
 if (($27 | 0) == 0) {
  HEAP32[$m_navquery >> 2] = 0;
  return;
 }
 __ZN14dtNavMeshQueryD2Ev($27);
 _free($27);
 HEAP32[$m_navquery >> 2] = 0;
 return;
}
function __ZL8clipPolyPKfiPffff($in, $n, $out, $pnx, $pnz, $pd) {
 $in = $in | 0;
 $n = $n | 0;
 $out = $out | 0;
 $pnx = +$pnx;
 $pnz = +$pnz;
 $pd = +$pd;
 var $d = 0, $i_059 = 0, $mul = 0, $sub = 0, $3 = 0.0, $m_057 = 0, $i9_056 = 0, $j_055 = 0, $4 = 0.0, $cmp16 = 0, $div = 0.0, $mul25 = 0, $5 = 0.0, $mul28 = 0, $mul37 = 0, $7 = 0.0, $9 = 0.0, $m_1 = 0, $mul73 = 0, $mul76 = 0, $m_2 = 0, $inc94 = 0, $m_0_lcssa = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $d = sp | 0;
 if (($n | 0) > 0) {
  $i_059 = 0;
 } else {
  $m_0_lcssa = 0;
  $$etemp$1$0 = 48;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $m_0_lcssa | 0;
 }
 do {
  $mul = $i_059 * 3 | 0;
  HEAPF32[$d + ($i_059 << 2) >> 2] = +HEAPF32[$in + ($mul << 2) >> 2] * $pnx + +HEAPF32[$in + ($mul + 2 << 2) >> 2] * $pnz + $pd;
  $i_059 = $i_059 + 1 | 0;
 } while (($i_059 | 0) < ($n | 0));
 $sub = $n - 1 | 0;
 $j_055 = $sub;
 $i9_056 = 0;
 $m_057 = 0;
 $3 = +HEAPF32[$d + ($sub << 2) >> 2];
 while (1) {
  $4 = +HEAPF32[$d + ($i9_056 << 2) >> 2];
  $cmp16 = $4 >= 0.0;
  if ($3 >= 0.0 ^ $cmp16) {
   $div = $3 / ($3 - $4);
   $mul25 = $j_055 * 3 | 0;
   $5 = +HEAPF32[$in + ($mul25 << 2) >> 2];
   $mul28 = $i9_056 * 3 | 0;
   $mul37 = $m_057 * 3 | 0;
   HEAPF32[$out + ($mul37 << 2) >> 2] = $5 + $div * (+HEAPF32[$in + ($mul28 << 2) >> 2] - $5);
   $7 = +HEAPF32[$in + ($mul25 + 1 << 2) >> 2];
   HEAPF32[$out + ($mul37 + 1 << 2) >> 2] = $7 + $div * (+HEAPF32[$in + ($mul28 + 1 << 2) >> 2] - $7);
   $9 = +HEAPF32[$in + ($mul25 + 2 << 2) >> 2];
   HEAPF32[$out + ($mul37 + 2 << 2) >> 2] = $9 + $div * (+HEAPF32[$in + ($mul28 + 2 << 2) >> 2] - $9);
   $m_1 = $m_057 + 1 | 0;
  } else {
   $m_1 = $m_057;
  }
  if ($cmp16) {
   $mul73 = $i9_056 * 3 | 0;
   $mul76 = $m_1 * 3 | 0;
   HEAPF32[$out + ($mul76 << 2) >> 2] = +HEAPF32[$in + ($mul73 << 2) >> 2];
   HEAPF32[$out + ($mul76 + 1 << 2) >> 2] = +HEAPF32[$in + ($mul73 + 1 << 2) >> 2];
   HEAPF32[$out + ($mul76 + 2 << 2) >> 2] = +HEAPF32[$in + ($mul73 + 2 << 2) >> 2];
   $m_2 = $m_1 + 1 | 0;
  } else {
   $m_2 = $m_1;
  }
  $inc94 = $i9_056 + 1 | 0;
  if (($inc94 | 0) < ($n | 0)) {
   $j_055 = $i9_056;
   $i9_056 = $inc94;
   $m_057 = $m_2;
   $3 = $4;
  } else {
   $m_0_lcssa = $m_2;
   break;
  }
 }
 $$etemp$1$0 = 48;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return $m_0_lcssa | 0;
}
function __Z16bareGeomValidatev() {
 var $0 = 0, $1 = 0, $m_mesh_i = 0, $2 = 0, $m_chunkyMesh_i = 0, $3 = 0, $4 = 0, $6 = 0, $_pre_i = 0, $9 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $call22_i = 0, $22 = 0, $24 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[4914] | 0;
 $1 = HEAP32[4898] | 0;
 $m_mesh_i = $0 + 4 | 0;
 $2 = HEAP32[$m_mesh_i >> 2] | 0;
 if (($2 | 0) != 0) {
  $m_chunkyMesh_i = $0 | 0;
  $3 = HEAP32[$m_chunkyMesh_i >> 2] | 0;
  if (($3 | 0) == 0) {
   HEAP32[$m_chunkyMesh_i >> 2] = 0;
   $9 = $2;
   label = 9;
  } else {
   $4 = HEAP32[$3 >> 2] | 0;
   if (($4 | 0) != 0) {
    _free($4);
   }
   $6 = HEAP32[$3 + 8 >> 2] | 0;
   if (($6 | 0) != 0) {
    _free($6);
   }
   _free($3);
   $_pre_i = HEAP32[$m_mesh_i >> 2] | 0;
   HEAP32[$m_chunkyMesh_i >> 2] = 0;
   if (($_pre_i | 0) != 0) {
    $9 = $_pre_i;
    label = 9;
   }
  }
  if ((label | 0) == 9) {
   $10 = HEAP32[$9 + 264 >> 2] | 0;
   if (($10 | 0) != 0) {
    _free($10);
   }
   $12 = HEAP32[$9 + 272 >> 2] | 0;
   if (($12 | 0) != 0) {
    _free($12);
   }
   $14 = HEAP32[$9 + 268 >> 2] | 0;
   if (($14 | 0) != 0) {
    _free($14);
   }
   if (($9 | 0) != 0) {
    _free($9 | 0);
   }
  }
  HEAP32[$m_mesh_i >> 2] = 0;
 }
 HEAP32[$0 + 9248 >> 2] = 0;
 HEAP32[$0 + 50212 >> 2] = 0;
 HEAP32[$m_mesh_i >> 2] = $1;
 if (($1 | 0) == 0) {
  __ZN9rcContext3logE13rcLogCategoryPKcz(0, 3, 8096, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  STACKTOP = sp;
  return;
 } else {
  $18 = HEAP32[$1 + 280 >> 2] | 0;
  _printf(7880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$1 + 276 >> 2], HEAP32[tempVarArgs + 8 >> 2] = $18, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $19 = HEAP32[$m_mesh_i >> 2] | 0;
  __Z12rcCalcBoundsPKfiPfS1_(HEAP32[$19 + 264 >> 2] | 0, HEAP32[$19 + 276 >> 2] | 0, $0 + 8 | 0, $0 + 20 | 0);
  $call22_i = __Znwj(20) | 0;
  $22 = $call22_i;
  HEAP32[$call22_i >> 2] = 0;
  HEAP32[$call22_i + 8 >> 2] = 0;
  HEAP32[$0 >> 2] = $22;
  $24 = HEAP32[$m_mesh_i >> 2] | 0;
  __Z21rcCreateChunkyTriMeshPKfPKiiiP15rcChunkyTriMesh(HEAP32[$24 + 264 >> 2] | 0, HEAP32[$24 + 268 >> 2] | 0, HEAP32[$24 + 280 >> 2] | 0, $22);
  STACKTOP = sp;
  return;
 }
}
function __Z22crowdRequestMoveTargetifff($agentIdx, $posX, $posY, $posZ) {
 $agentIdx = $agentIdx | 0;
 $posX = +$posX;
 $posY = +$posY;
 $posZ = +$posZ;
 var $pos = 0, $m_targetRef = 0, $m_targetPos = 0, $filter = 0, $arrayinit_begin = 0, $m_includeFlags_i1 = 0, $m_excludeFlags_i2 = 0, $i_03_i = 0, $arraydecay2 = 0, $2 = 0, $3 = 0, $5 = 0, $retval_0 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $pos = sp | 0;
 $m_targetRef = sp + 16 | 0;
 $m_targetPos = sp + 24 | 0;
 $filter = sp + 40 | 0;
 $arrayinit_begin = $pos | 0;
 HEAPF32[$arrayinit_begin >> 2] = $posX;
 HEAPF32[$pos + 4 >> 2] = $posY;
 HEAPF32[$pos + 8 >> 2] = $posZ;
 HEAP32[$m_targetRef >> 2] = 0;
 $m_includeFlags_i1 = $filter + 256 | 0;
 HEAP16[$m_includeFlags_i1 >> 1] = -1;
 $m_excludeFlags_i2 = $filter + 258 | 0;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $i_03_i = 0;
 do {
  HEAPF32[$filter + ($i_03_i << 2) >> 2] = 1.0;
  $i_03_i = $i_03_i + 1 | 0;
 } while (($i_03_i | 0) < 64);
 HEAP16[$m_includeFlags_i1 >> 1] = 3;
 HEAP16[$m_excludeFlags_i2 >> 1] = 0;
 $arraydecay2 = $m_targetPos | 0;
 if ((__ZNK14dtNavMeshQuery15findNearestPolyEPKfS1_PK13dtQueryFilterPjPf(HEAP32[4910] | 0, $arrayinit_begin, 2.0, 4.0, 2.0, $filter, $m_targetRef, $arraydecay2) | 0) < 0) {
  $retval_0 = 0;
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $2 = HEAP32[4920] | 0;
 $3 = HEAP32[$m_targetRef >> 2] | 0;
 if (($agentIdx | 0) < 0) {
  $retval_0 = 1;
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP32[$2 >> 2] | 0) < ($agentIdx | 0) | ($3 | 0) == 0) {
  $retval_0 = 1;
  $$etemp$1$0 = 260;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $5 = HEAP32[$2 + 4 >> 2] | 0;
 HEAP32[$5 + ($agentIdx * 608 | 0) + 580 >> 2] = $3;
 HEAPF32[$5 + ($agentIdx * 608 | 0) + 584 >> 2] = +HEAPF32[$arraydecay2 >> 2];
 HEAPF32[$5 + ($agentIdx * 608 | 0) + 588 >> 2] = +HEAPF32[$m_targetPos + 4 >> 2];
 HEAPF32[$5 + ($agentIdx * 608 | 0) + 592 >> 2] = +HEAPF32[$m_targetPos + 8 >> 2];
 HEAP32[$5 + ($agentIdx * 608 | 0) + 596 >> 2] = 0;
 HEAP8[$5 + ($agentIdx * 608 | 0) + 600 >> 0] = 0;
 HEAP8[$5 + ($agentIdx * 608 | 0) + 576 >> 0] = 3;
 $retval_0 = 1;
 $$etemp$1$0 = 260;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $__ndflt = 0, $this4_i_i_i = 0, $0 = 0, $cond_i_i_i4049 = 0, $cond_i = 0, $add_ptr = 0, $__wb_addr_04_i = 0, $7 = 0, $9 = 0, $10 = 0, $cond_i_i_i = 0, $call10 = 0, $call16 = 0, $add_ptr17 = 0, $__nb_addr_04_i = 0, $20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp | 0;
 $this4_i_i_i = $__ndflt;
 _memset($this4_i_i_i | 0, 0, 12) | 0;
 $0 = HEAP8[$__dflt >> 0] | 0;
 if (($0 & 1) == 0) {
  $cond_i = ($0 & 255) >>> 1;
  $cond_i_i_i4049 = $__dflt + 1 | 0;
 } else {
  $cond_i = HEAP32[$__dflt + 4 >> 2] | 0;
  $cond_i_i_i4049 = HEAP32[$__dflt + 8 >> 2] | 0;
 }
 $add_ptr = $cond_i_i_i4049 + $cond_i | 0;
 if ($cond_i_i_i4049 >>> 0 < $add_ptr >>> 0) {
  $__wb_addr_04_i = $cond_i_i_i4049;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt, HEAP8[$__wb_addr_04_i >> 0] | 0);
   $__wb_addr_04_i = $__wb_addr_04_i + 1 | 0;
  } while ($__wb_addr_04_i >>> 0 < $add_ptr >>> 0);
  $7 = ($__c | 0) == -1 ? -1 : $__c << 1;
  if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
   $9 = $7;
   label = 10;
  } else {
   $cond_i_i_i = HEAP32[$__ndflt + 8 >> 2] | 0;
   $10 = $7;
  }
 } else {
  $9 = ($__c | 0) == -1 ? -1 : $__c << 1;
  label = 10;
 }
 if ((label | 0) == 10) {
  $cond_i_i_i = $__ndflt + 1 | 0;
  $10 = $9;
 }
 $call10 = _catgets($10 | 0, $__set | 0, $__msgid | 0, $cond_i_i_i | 0) | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 $call16 = _strlen($call10 | 0) | 0;
 $add_ptr17 = $call10 + $call16 | 0;
 if (($call16 | 0) > 0) {
  $__nb_addr_04_i = $call10;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg_result, HEAP8[$__nb_addr_04_i >> 0] | 0);
   $__nb_addr_04_i = $__nb_addr_04_i + 1 | 0;
  } while ($__nb_addr_04_i >>> 0 < $add_ptr17 >>> 0);
 }
 if ((HEAP8[$this4_i_i_i >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $20 = HEAP32[$__ndflt + 8 >> 2] | 0;
 if (($20 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($20);
 STACKTOP = sp;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__size__i = 0, $0 = 0, $tobool_i = 0, $1 = 0, $4 = 0, $__cap_0 = 0, $__sz_0 = 0, $cond_i_i = 0, $add_i = 0, $mul_i = 0, $_sroa_speculated_i = 0, $cond_i = 0, $call_i_i_i = 0, $6 = 0, $add16 = 0, $__p_0_sum_pre_phi = 0, $call12_pn = 0, $__p_0 = 0, $incdec_ptr = 0;
 $__size__i = $this;
 $0 = HEAP8[$__size__i >> 0] | 0;
 $tobool_i = ($0 & 1) != 0;
 if ($tobool_i) {
  $1 = HEAP32[$this >> 2] | 0;
  $__sz_0 = HEAP32[$this + 4 >> 2] | 0;
  $__cap_0 = ($1 & -2) - 1 | 0;
  $4 = $1 & 255;
 } else {
  $__sz_0 = ($0 & 255) >>> 1;
  $__cap_0 = 10;
  $4 = $0;
 }
 do {
  if (($__sz_0 | 0) == ($__cap_0 | 0)) {
   if (($__cap_0 | 0) == -17) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
   }
   if (($4 & 1) == 0) {
    $cond_i_i = $this + 1 | 0;
   } else {
    $cond_i_i = HEAP32[$this + 8 >> 2] | 0;
   }
   if ($__cap_0 >>> 0 < 2147483623 >>> 0) {
    $add_i = $__cap_0 + 1 | 0;
    $mul_i = $__cap_0 << 1;
    $_sroa_speculated_i = $add_i >>> 0 < $mul_i >>> 0 ? $mul_i : $add_i;
    if ($_sroa_speculated_i >>> 0 < 11 >>> 0) {
     $cond_i = 11;
    } else {
     $cond_i = $_sroa_speculated_i + 16 & -16;
    }
   } else {
    $cond_i = -17;
   }
   $call_i_i_i = __Znwj($cond_i) | 0;
   _memcpy($call_i_i_i | 0, $cond_i_i | 0, $__cap_0) | 0;
   if (!(($__cap_0 | 0) == 10 | ($cond_i_i | 0) == 0)) {
    _free($cond_i_i);
   }
   HEAP32[$this + 8 >> 2] = $call_i_i_i;
   HEAP32[$this >> 2] = $cond_i | 1;
   $6 = $call_i_i_i;
  } else {
   if ($tobool_i) {
    $6 = HEAP32[$this + 8 >> 2] | 0;
    break;
   }
   HEAP8[$__size__i >> 0] = ($__sz_0 << 1) + 2;
   $call12_pn = $this + 1 | 0;
   $__p_0_sum_pre_phi = $__sz_0 + 1 | 0;
   $__p_0 = $call12_pn + $__sz_0 | 0;
   HEAP8[$__p_0 >> 0] = $__c;
   $incdec_ptr = $call12_pn + $__p_0_sum_pre_phi | 0;
   HEAP8[$incdec_ptr >> 0] = 0;
   return;
  }
 } while (0);
 $add16 = $__sz_0 + 1 | 0;
 HEAP32[$this + 4 >> 2] = $add16;
 $call12_pn = $6;
 $__p_0_sum_pre_phi = $add16;
 $__p_0 = $call12_pn + $__sz_0 | 0;
 HEAP8[$__p_0 >> 0] = $__c;
 $incdec_ptr = $call12_pn + $__p_0_sum_pre_phi | 0;
 HEAP8[$incdec_ptr >> 0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $cond_i = 0, $add = 0, $mul = 0, $_sroa_speculated = 0, $cond = 0, $call_i_i = 0, $__data__i = 0, $or_i = 0, $__cap__i = 0, $add44 = 0, $__size__i = 0, $arrayidx = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ((HEAP8[$this >> 0] & 1) == 0) {
  $cond_i = $this + 1 | 0;
 } else {
  $cond_i = HEAP32[$this + 8 >> 2] | 0;
 }
 if ($__old_cap >>> 0 < 2147483623 >>> 0) {
  $add = $__delta_cap + $__old_cap | 0;
  $mul = $__old_cap << 1;
  $_sroa_speculated = $add >>> 0 < $mul >>> 0 ? $mul : $add;
  if ($_sroa_speculated >>> 0 < 11 >>> 0) {
   $cond = 11;
  } else {
   $cond = $_sroa_speculated + 16 & -16;
  }
 } else {
  $cond = -17;
 }
 $call_i_i = __Znwj($cond) | 0;
 if (($__n_copy | 0) != 0) {
  _memcpy($call_i_i | 0, $cond_i | 0, $__n_copy) | 0;
 }
 if (($__n_add | 0) != 0) {
  _memcpy($call_i_i + $__n_copy | 0, $__p_new_stuff | 0, $__n_add) | 0;
 }
 if (($__old_sz | 0) != ($__n_copy | 0)) {
  _memcpy($call_i_i + ($__n_add + $__n_copy) | 0, $cond_i + $__n_copy | 0, $__old_sz - $__n_copy | 0) | 0;
 }
 if (($__old_cap | 0) == 10 | ($cond_i | 0) == 0) {
  $__data__i = $this + 8 | 0;
  HEAP32[$__data__i >> 2] = $call_i_i;
  $or_i = $cond | 1;
  $__cap__i = $this | 0;
  HEAP32[$__cap__i >> 2] = $or_i;
  $add44 = $__old_sz + $__n_add | 0;
  $__size__i = $this + 4 | 0;
  HEAP32[$__size__i >> 2] = $add44;
  $arrayidx = $call_i_i + $add44 | 0;
  HEAP8[$arrayidx >> 0] = 0;
  return;
 }
 _free($cond_i);
 $__data__i = $this + 8 | 0;
 HEAP32[$__data__i >> 2] = $call_i_i;
 $or_i = $cond | 1;
 $__cap__i = $this | 0;
 HEAP32[$__cap__i >> 2] = $or_i;
 $add44 = $__old_sz + $__n_add | 0;
 $__size__i = $this + 4 | 0;
 HEAP32[$__size__i >> 2] = $add44;
 $arrayidx = $call_i_i + $add44 | 0;
 HEAP8[$arrayidx >> 0] = 0;
 return;
}
function __Z11duAppendBoxP11duDebugDrawffffffPKj($dd, $minx, $miny, $minz, $maxx, $maxy, $maxz, $fcol) {
 $dd = $dd | 0;
 $minx = +$minx;
 $miny = +$miny;
 $minz = +$minz;
 $maxx = +$maxx;
 $maxy = +$maxy;
 $maxz = +$maxz;
 $fcol = $fcol | 0;
 var $verts = 0, $1 = 0, $i_039 = 0, $in_038 = 0, $arrayidx23 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $verts = sp | 0;
 if (($dd | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 HEAPF32[$verts >> 2] = $minx;
 HEAPF32[$verts + 4 >> 2] = $miny;
 HEAPF32[$verts + 8 >> 2] = $minz;
 HEAPF32[$verts + 12 >> 2] = $maxx;
 HEAPF32[$verts + 16 >> 2] = $miny;
 HEAPF32[$verts + 20 >> 2] = $minz;
 HEAPF32[$verts + 24 >> 2] = $maxx;
 HEAPF32[$verts + 28 >> 2] = $miny;
 HEAPF32[$verts + 32 >> 2] = $maxz;
 HEAPF32[$verts + 36 >> 2] = $minx;
 HEAPF32[$verts + 40 >> 2] = $miny;
 HEAPF32[$verts + 44 >> 2] = $maxz;
 HEAPF32[$verts + 48 >> 2] = $minx;
 HEAPF32[$verts + 52 >> 2] = $maxy;
 HEAPF32[$verts + 56 >> 2] = $minz;
 HEAPF32[$verts + 60 >> 2] = $maxx;
 HEAPF32[$verts + 64 >> 2] = $maxy;
 HEAPF32[$verts + 68 >> 2] = $minz;
 HEAPF32[$verts + 72 >> 2] = $maxx;
 HEAPF32[$verts + 76 >> 2] = $maxy;
 HEAPF32[$verts + 80 >> 2] = $maxz;
 HEAPF32[$verts + 84 >> 2] = $minx;
 HEAPF32[$verts + 88 >> 2] = $maxy;
 HEAPF32[$verts + 92 >> 2] = $maxz;
 $1 = $dd;
 $in_038 = 11544;
 $i_039 = 0;
 while (1) {
  $arrayidx23 = $fcol + ($i_039 << 2) | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 31]($dd, $verts + (((HEAPU8[$in_038 >> 0] | 0) * 3 | 0) << 2) | 0, HEAP32[$arrayidx23 >> 2] | 0);
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 31]($dd, $verts + (((HEAPU8[$in_038 + 1 >> 0] | 0) * 3 | 0) << 2) | 0, HEAP32[$arrayidx23 >> 2] | 0);
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 31]($dd, $verts + (((HEAPU8[$in_038 + 2 >> 0] | 0) * 3 | 0) << 2) | 0, HEAP32[$arrayidx23 >> 2] | 0);
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 31]($dd, $verts + (((HEAPU8[$in_038 + 3 >> 0] | 0) * 3 | 0) << 2) | 0, HEAP32[$arrayidx23 >> 2] | 0);
  $i_039 = $i_039 + 1 | 0;
  if (($i_039 | 0) >= 6) {
   break;
  } else {
   $in_038 = $in_038 + 4 | 0;
  }
 }
 STACKTOP = sp;
 return;
}
function __Z27duDebugDrawHeightfieldSolidP11duDebugDrawRK13rcHeightfield($dd, $hf) {
 $dd = $dd | 0;
 $hf = $hf | 0;
 var $fcol = 0, $arraydecay = 0, $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $arraydecay3 = 0, $cmp631 = 0, $arrayidx8 = 0, $spans = 0, $arrayidx16 = 0, $y_034 = 0, $mul10 = 0.0, $mul12 = 0, $x_032 = 0, $add = 0.0, $add11 = 0.0, $s_028 = 0, $add20 = 0.0, $add27 = 0.0, $s_030 = 0, $9 = 0.0, $bf_load = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $fcol = sp | 0;
 if (($dd | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $arraydecay = $hf + 8 | 0;
 $0 = +HEAPF32[$hf + 32 >> 2];
 $1 = +HEAPF32[$hf + 36 >> 2];
 $2 = HEAP32[$hf >> 2] | 0;
 $3 = HEAP32[$hf + 4 >> 2] | 0;
 $arraydecay3 = $fcol | 0;
 HEAP32[$arraydecay3 >> 2] = -394759;
 HEAP32[$fcol + 4 >> 2] = -7631989;
 HEAP32[$fcol + 8 >> 2] = -5987164;
 HEAP32[$fcol + 12 >> 2] = -2565928;
 HEAP32[$fcol + 16 >> 2] = -5987164;
 HEAP32[$fcol + 20 >> 2] = -2565928;
 FUNCTION_TABLE_viif[HEAP32[(HEAP32[$dd >> 2] | 0) + 16 >> 2] & 31]($dd, 3, 1.0);
 if (($3 | 0) > 0) {
  $cmp631 = ($2 | 0) > 0;
  $arrayidx8 = $hf + 16 | 0;
  $spans = $hf + 40 | 0;
  $arrayidx16 = $hf + 12 | 0;
  $y_034 = 0;
  do {
   if ($cmp631) {
    $mul10 = $0 * +($y_034 | 0);
    $mul12 = Math_imul($y_034, $2) | 0;
    $x_032 = 0;
    do {
     $add = $0 * +($x_032 | 0) + +HEAPF32[$arraydecay >> 2];
     $add11 = $mul10 + +HEAPF32[$arrayidx8 >> 2];
     $s_028 = HEAP32[(HEAP32[$spans >> 2] | 0) + ($x_032 + $mul12 << 2) >> 2] | 0;
     if (($s_028 | 0) != 0) {
      $add20 = $0 + $add;
      $add27 = $0 + $add11;
      $s_030 = $s_028;
      do {
       $9 = +HEAPF32[$arrayidx16 >> 2];
       $bf_load = HEAP32[$s_030 >> 2] | 0;
       __Z11duAppendBoxP11duDebugDrawffffffPKj($dd, $add, $9 + $1 * +($bf_load & 8191 | 0), $add11, $add20, $9 + $1 * +($bf_load >>> 13 & 8191 | 0), $add27, $arraydecay3);
       $s_030 = HEAP32[$s_030 + 4 >> 2] | 0;
      } while (($s_030 | 0) != 0);
     }
     $x_032 = $x_032 + 1 | 0;
    } while (($x_032 | 0) < ($2 | 0));
   }
   $y_034 = $y_034 + 1 | 0;
  } while (($y_034 | 0) < ($3 | 0));
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$dd >> 2] | 0) + 36 >> 2] & 511]($dd);
 STACKTOP = sp;
 return;
}
function __Z15appendArrowHeadP11duDebugDrawPKfS2_fj($dd, $p, $q, $s, $col) {
 $dd = $dd | 0;
 $p = $p | 0;
 $q = $q | 0;
 $s = +$s;
 $col = $col | 0;
 var $0 = 0.0, $1 = 0.0, $sub_i = 0.0, $arrayidx2_i = 0, $2 = 0.0, $3 = 0.0, $sub4_i = 0.0, $arrayidx5_i = 0, $4 = 0.0, $5 = 0.0, $sub7_i = 0.0, $sub_i29 = 0.0, $sub5_i = 0.0, $sub9_i = 0.0, $div_i = 0.0, $mul10_i = 0.0, $mul12_i = 0.0, $mul14_i = 0.0, $mul4_i39 = 0.0, $6 = 0, $8 = 0, $mul = 0.0, $div = 0.0, $mul19 = 0.0, $div23 = 0.0, $mul27 = 0.0, $div31 = 0.0;
 if (($dd | 0) == 0) {
  return;
 }
 $0 = +HEAPF32[$p >> 2];
 $1 = +HEAPF32[$q >> 2];
 $sub_i = $0 - $1;
 $arrayidx2_i = $p + 4 | 0;
 $2 = +HEAPF32[$arrayidx2_i >> 2];
 $3 = +HEAPF32[$q + 4 >> 2];
 $sub4_i = $2 - $3;
 $arrayidx5_i = $p + 8 | 0;
 $4 = +HEAPF32[$arrayidx5_i >> 2];
 $5 = +HEAPF32[$q + 8 >> 2];
 $sub7_i = $4 - $5;
 if ($sub_i * $sub_i + $sub4_i * $sub4_i + $sub7_i * $sub7_i < 10000001111620804.0e-22) {
  return;
 }
 $sub_i29 = $1 - $0;
 $sub5_i = $3 - $2;
 $sub9_i = $5 - $4;
 $div_i = 1.0 / +Math_sqrt($sub_i29 * $sub_i29 + $sub5_i * $sub5_i + $sub9_i * $sub9_i);
 $mul10_i = $sub_i29 * $div_i;
 $mul12_i = $sub5_i * $div_i;
 $mul14_i = $sub9_i * $div_i;
 $mul4_i39 = $mul12_i * 0.0;
 $6 = $dd;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] & 31]($dd, $p, $col);
 $8 = $dd;
 $mul = $mul10_i * $s;
 $div = ($mul14_i - $mul4_i39) * $s / 3.0;
 $mul19 = $mul12_i * $s;
 $div23 = ($mul10_i * 0.0 - $mul14_i * 0.0) * $s / 3.0;
 $mul27 = $mul14_i * $s;
 $div31 = ($mul4_i39 - $mul10_i) * $s / 3.0;
 FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 31]($dd, $mul + +HEAPF32[$p >> 2] + $div, $mul19 + +HEAPF32[$arrayidx2_i >> 2] + $div23, $mul27 + +HEAPF32[$arrayidx5_i >> 2] + $div31, $col);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] & 31]($dd, $p, $col);
 FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 31]($dd, $mul + +HEAPF32[$p >> 2] - $div, $mul19 + +HEAPF32[$arrayidx2_i >> 2] - $div23, $mul27 + +HEAPF32[$arrayidx5_i >> 2] - $div31, $col);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this) {
 $this = $this | 0;
 var $__size__i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i = 0, $cond_i27 = 0, $cond_i33 = 0, $add = 0, $__new_data_0 = 0, $9 = 0, $11 = 0, $__now_long_0_off0 = 0, $__was_long_0_off0 = 0, $__p_0 = 0, $__new_data_1 = 0, $cond_i10 = 0;
 $__size__i_i = $this;
 $0 = HEAP8[$__size__i_i >> 0] | 0;
 if (($0 & 1) == 0) {
  $cond_i = 10;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 if (($3 & 1) == 0) {
  $cond_i27 = ($3 & 255) >>> 1;
 } else {
  $cond_i27 = HEAP32[$this + 4 >> 2] | 0;
 }
 if ($cond_i27 >>> 0 < 11 >>> 0) {
  $cond_i33 = 10;
 } else {
  $cond_i33 = ($cond_i27 + 16 & -16) - 1 | 0;
 }
 if (($cond_i33 | 0) == ($cond_i | 0)) {
  return;
 }
 do {
  if (($cond_i33 | 0) == 10) {
   $__new_data_1 = $this + 1 | 0;
   $__p_0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long_0_off0 = 1;
   $__now_long_0_off0 = 0;
   $11 = $3;
  } else {
   $add = $cond_i33 + 1 | 0;
   if ($cond_i33 >>> 0 > $cond_i >>> 0) {
    $__new_data_0 = __Znwj($add) | 0;
   } else {
    $__new_data_0 = __Znwj($add) | 0;
   }
   $9 = HEAP8[$__size__i_i >> 0] | 0;
   if (($9 & 1) == 0) {
    $__new_data_1 = $__new_data_0;
    $__p_0 = $this + 1 | 0;
    $__was_long_0_off0 = 0;
    $__now_long_0_off0 = 1;
    $11 = $9;
    break;
   } else {
    $__new_data_1 = $__new_data_0;
    $__p_0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long_0_off0 = 1;
    $__now_long_0_off0 = 1;
    $11 = $9;
    break;
   }
  }
 } while (0);
 if (($11 & 1) == 0) {
  $cond_i10 = ($11 & 255) >>> 1;
 } else {
  $cond_i10 = HEAP32[$this + 4 >> 2] | 0;
 }
 _memcpy($__new_data_1 | 0, $__p_0 | 0, $cond_i10 + 1 | 0) | 0;
 if (!($__was_long_0_off0 ^ 1 | ($__p_0 | 0) == 0)) {
  _free($__p_0);
 }
 if ($__now_long_0_off0) {
  HEAP32[$this >> 2] = $cond_i33 + 1 | 1;
  HEAP32[$this + 4 >> 2] = $cond_i27;
  HEAP32[$this + 8 >> 2] = $__new_data_1;
  return;
 } else {
  HEAP8[$__size__i_i >> 0] = $cond_i27 << 1;
  return;
 }
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__enxt = 0, $__ci = 0, $__inxt = 0, $__last_consumed_is_next_ = 0, $tobool = 0, $1 = 0, $__last_consumed_12 = 0, $3 = 0, $arraydecay = 0, $call_i = 0, $__file_ = 0, $8 = 0, $incdec_ptr = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 16 | 0;
 $__inxt = sp + 24 | 0;
 $__last_consumed_is_next_ = $this + 52 | 0;
 $tobool = (HEAP8[$__last_consumed_is_next_ >> 0] | 0) != 0;
 if (($__c | 0) == -1) {
  if ($tobool) {
   $retval_0 = -1;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  $1 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$__last_consumed_is_next_ >> 0] = ($1 | 0) != -1 | 0;
  $retval_0 = $1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $__last_consumed_12 = $this + 48 | 0;
 L8 : do {
  if ($tobool) {
   HEAP32[$__ci >> 2] = HEAP32[$__last_consumed_12 >> 2];
   $3 = HEAP32[$this + 36 >> 2] | 0;
   $arraydecay = $__extbuf | 0;
   $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $arraydecay, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($call_i | 0) == 2 | ($call_i | 0) == 1) {
    $retval_0 = -1;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if (($call_i | 0) == 3) {
    HEAP8[$arraydecay >> 0] = HEAP32[$__last_consumed_12 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   }
   $__file_ = $this + 32 | 0;
   while (1) {
    $8 = HEAP32[$__enxt >> 2] | 0;
    if (!($8 >>> 0 > $arraydecay >>> 0)) {
     break L8;
    }
    $incdec_ptr = $8 - 1 | 0;
    HEAP32[$__enxt >> 2] = $incdec_ptr;
    if ((_ungetc(HEAP8[$incdec_ptr >> 0] | 0, HEAP32[$__file_ >> 2] | 0) | 0) == -1) {
     $retval_0 = -1;
     break;
    }
   }
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[$__last_consumed_12 >> 2] = $__c;
 HEAP8[$__last_consumed_is_next_ >> 0] = 1;
 $retval_0 = $__c;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $__extbuf = 0, $__enxt = 0, $__ci = 0, $__inxt = 0, $__last_consumed_is_next_ = 0, $tobool = 0, $1 = 0, $__last_consumed_12 = 0, $3 = 0, $arraydecay = 0, $call_i = 0, $__file_ = 0, $8 = 0, $incdec_ptr = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 16 | 0;
 $__inxt = sp + 24 | 0;
 $__last_consumed_is_next_ = $this + 52 | 0;
 $tobool = (HEAP8[$__last_consumed_is_next_ >> 0] | 0) != 0;
 if (($__c | 0) == -1) {
  if ($tobool) {
   $retval_0 = -1;
   STACKTOP = sp;
   return $retval_0 | 0;
  }
  $1 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$__last_consumed_is_next_ >> 0] = ($1 | 0) != -1 | 0;
  $retval_0 = $1;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $__last_consumed_12 = $this + 48 | 0;
 L8 : do {
  if ($tobool) {
   HEAP8[$__ci >> 0] = HEAP32[$__last_consumed_12 >> 2];
   $3 = HEAP32[$this + 36 >> 2] | 0;
   $arraydecay = $__extbuf | 0;
   $call_i = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $arraydecay, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($call_i | 0) == 2 | ($call_i | 0) == 1) {
    $retval_0 = -1;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else if (($call_i | 0) == 3) {
    HEAP8[$arraydecay >> 0] = HEAP32[$__last_consumed_12 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   }
   $__file_ = $this + 32 | 0;
   while (1) {
    $8 = HEAP32[$__enxt >> 2] | 0;
    if (!($8 >>> 0 > $arraydecay >>> 0)) {
     break L8;
    }
    $incdec_ptr = $8 - 1 | 0;
    HEAP32[$__enxt >> 2] = $incdec_ptr;
    if ((_ungetc(HEAP8[$incdec_ptr >> 0] | 0, HEAP32[$__file_ >> 2] | 0) | 0) == -1) {
     $retval_0 = -1;
     break;
    }
   }
   STACKTOP = sp;
   return $retval_0 | 0;
  }
 } while (0);
 HEAP32[$__last_consumed_12 >> 2] = $__c;
 HEAP8[$__last_consumed_is_next_ >> 0] = 1;
 $retval_0 = $__c;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z12rcCalcBoundsPKfiPfS1_($verts, $nv, $bmin, $bmax) {
 $verts = $verts | 0;
 $nv = $nv | 0;
 $bmin = $bmin | 0;
 $bmax = $bmax | 0;
 var $arrayidx2_i = 0, $arrayidx3_i = 0, $arrayidx4_i = 0, $arrayidx5_i = 0, $arrayidx3_i21 = 0, $arrayidx5_i23 = 0, $i_026 = 0, $mul = 0, $arrayidx = 0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $arrayidx4_i13 = 0, $9 = 0.0, $10 = 0.0, $arrayidx8_i17 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0;
 HEAPF32[$bmin >> 2] = +HEAPF32[$verts >> 2];
 $arrayidx2_i = $verts + 4 | 0;
 $arrayidx3_i = $bmin + 4 | 0;
 HEAPF32[$arrayidx3_i >> 2] = +HEAPF32[$arrayidx2_i >> 2];
 $arrayidx4_i = $verts + 8 | 0;
 $arrayidx5_i = $bmin + 8 | 0;
 HEAPF32[$arrayidx5_i >> 2] = +HEAPF32[$arrayidx4_i >> 2];
 HEAPF32[$bmax >> 2] = +HEAPF32[$verts >> 2];
 $arrayidx3_i21 = $bmax + 4 | 0;
 HEAPF32[$arrayidx3_i21 >> 2] = +HEAPF32[$arrayidx2_i >> 2];
 $arrayidx5_i23 = $bmax + 8 | 0;
 HEAPF32[$arrayidx5_i23 >> 2] = +HEAPF32[$arrayidx4_i >> 2];
 if (($nv | 0) > 1) {
  $i_026 = 1;
 } else {
  return;
 }
 do {
  $mul = $i_026 * 3 | 0;
  $arrayidx = $verts + ($mul << 2) | 0;
  $6 = +HEAPF32[$bmin >> 2];
  $7 = +HEAPF32[$arrayidx >> 2];
  HEAPF32[$bmin >> 2] = $6 < $7 ? $6 : $7;
  $8 = +HEAPF32[$arrayidx3_i >> 2];
  $arrayidx4_i13 = $verts + ($mul + 1 << 2) | 0;
  $9 = +HEAPF32[$arrayidx4_i13 >> 2];
  HEAPF32[$arrayidx3_i >> 2] = $8 < $9 ? $8 : $9;
  $10 = +HEAPF32[$arrayidx5_i >> 2];
  $arrayidx8_i17 = $verts + ($mul + 2 << 2) | 0;
  $11 = +HEAPF32[$arrayidx8_i17 >> 2];
  HEAPF32[$arrayidx5_i >> 2] = $10 < $11 ? $10 : $11;
  $12 = +HEAPF32[$bmax >> 2];
  $13 = +HEAPF32[$arrayidx >> 2];
  HEAPF32[$bmax >> 2] = $12 > $13 ? $12 : $13;
  $14 = +HEAPF32[$arrayidx3_i21 >> 2];
  $15 = +HEAPF32[$arrayidx4_i13 >> 2];
  HEAPF32[$arrayidx3_i21 >> 2] = $14 > $15 ? $14 : $15;
  $16 = +HEAPF32[$arrayidx5_i23 >> 2];
  $17 = +HEAPF32[$arrayidx8_i17 >> 2];
  HEAPF32[$arrayidx5_i23 >> 2] = $16 > $17 ? $16 : $17;
  $i_026 = $i_026 + 1 | 0;
 } while (($i_026 | 0) < ($nv | 0));
 return;
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $0 = 0, $call_i = 0, $call3$0 = 0, $call3$1 = 0, $5 = 0, $$etemp$0$1 = 0, $$etemp$1$1 = 0, $$etemp$2$1 = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call = ___errno_location() | 0;
 $0 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call3$0 = _strtoll_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
 $call3$1 = tempRet0;
 $5 = HEAP32[$call >> 2] | 0;
 if (($5 | 0) == 0) {
  HEAP32[$call >> 2] = $0;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 do {
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$etemp$2$1 = 0;
   if (($call3$1 | 0) > ($$etemp$2$1 | 0) | ($call3$1 | 0) == ($$etemp$2$1 | 0) & $call3$0 >>> 0 > 0 >>> 0) {
    $retval_0 = 2147483647;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  } else {
   $$etemp$0$1 = -1;
   if (($call3$1 | 0) < ($$etemp$0$1 | 0) | ($call3$1 | 0) == ($$etemp$0$1 | 0) & $call3$0 >>> 0 < -2147483648 >>> 0) {
    HEAP32[$__err >> 2] = 4;
    break;
   }
   $$etemp$1$1 = 0;
   if (($call3$1 | 0) > ($$etemp$1$1 | 0) | ($call3$1 | 0) == ($$etemp$1$1 | 0) & $call3$0 >>> 0 > 2147483647 >>> 0) {
    HEAP32[$__err >> 2] = 4;
    $retval_0 = 2147483647;
    STACKTOP = sp;
    return $retval_0 | 0;
   } else {
    $retval_0 = $call3$0;
    STACKTOP = sp;
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = -2147483648;
 STACKTOP = sp;
 return $retval_0 | 0;
}
function __Z23rcMarkWalkableTrianglesP9rcContextfPKfiPKiiPh($walkableSlopeAngle, $verts, $tris, $nt, $areas) {
 $walkableSlopeAngle = +$walkableSlopeAngle;
 $verts = $verts | 0;
 $tris = $tris | 0;
 $nt = $nt | 0;
 $areas = $areas | 0;
 var $call = 0.0, $i_017 = 0, $mul2 = 0, $mul4 = 0, $mul7 = 0, $mul10 = 0, $arrayidx5_val = 0.0, $arrayidx5_idx_val = 0.0, $arrayidx5_idx9_val = 0.0, $sub_i_i = 0.0, $sub5_i_i = 0.0, $sub9_i_i = 0.0, $sub_i4_i = 0.0, $sub5_i7_i = 0.0, $sub9_i11_i = 0.0, $sub_i16_i = 0.0, $sub12_i_i = 0.0, $sub20_i_i = 0.0;
 $call = +Math_cos($walkableSlopeAngle / 180.0 * 3.1415927410125732);
 if (($nt | 0) > 0) {
  $i_017 = 0;
 } else {
  return;
 }
 do {
  $mul2 = $i_017 * 3 | 0;
  $mul4 = (HEAP32[$tris + ($mul2 << 2) >> 2] | 0) * 3 | 0;
  $mul7 = (HEAP32[$tris + ($mul2 + 1 << 2) >> 2] | 0) * 3 | 0;
  $mul10 = (HEAP32[$tris + ($mul2 + 2 << 2) >> 2] | 0) * 3 | 0;
  $arrayidx5_val = +HEAPF32[$verts + ($mul4 << 2) >> 2];
  $arrayidx5_idx_val = +HEAPF32[$verts + ($mul4 + 1 << 2) >> 2];
  $arrayidx5_idx9_val = +HEAPF32[$verts + ($mul4 + 2 << 2) >> 2];
  $sub_i_i = +HEAPF32[$verts + ($mul7 << 2) >> 2] - $arrayidx5_val;
  $sub5_i_i = +HEAPF32[$verts + ($mul7 + 1 << 2) >> 2] - $arrayidx5_idx_val;
  $sub9_i_i = +HEAPF32[$verts + ($mul7 + 2 << 2) >> 2] - $arrayidx5_idx9_val;
  $sub_i4_i = +HEAPF32[$verts + ($mul10 << 2) >> 2] - $arrayidx5_val;
  $sub5_i7_i = +HEAPF32[$verts + ($mul10 + 1 << 2) >> 2] - $arrayidx5_idx_val;
  $sub9_i11_i = +HEAPF32[$verts + ($mul10 + 2 << 2) >> 2] - $arrayidx5_idx9_val;
  $sub_i16_i = $sub5_i_i * $sub9_i11_i - $sub9_i_i * $sub5_i7_i;
  $sub12_i_i = $sub9_i_i * $sub_i4_i - $sub_i_i * $sub9_i11_i;
  $sub20_i_i = $sub_i_i * $sub5_i7_i - $sub5_i_i * $sub_i4_i;
  if (1.0 / +Math_sqrt($sub20_i_i * $sub20_i_i + ($sub_i16_i * $sub_i16_i + $sub12_i_i * $sub12_i_i)) * $sub12_i_i > $call) {
   HEAP8[$areas + $i_017 >> 0] = 63;
  }
  $i_017 = $i_017 + 1 | 0;
 } while (($i_017 | 0) < ($nt | 0));
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $call_i = 0, $__size__i_i_i = 0, $0 = 0, $1 = 0, $3 = 0, $cond_i_i = 0, $cond_i21_i = 0, $cond_i_i_i = 0, $mul_i_i = 0, $_sroa_speculated_i_i = 0, $cond_i13_i = 0, $call_i_i_i_i = 0;
 $call_i = _strlen($__s | 0) | 0;
 $__size__i_i_i = $this;
 $0 = HEAP8[$__size__i_i_i >> 0] | 0;
 if (($0 & 1) == 0) {
  $cond_i_i = 10;
  $3 = $0;
 } else {
  $1 = HEAP32[$this >> 2] | 0;
  $cond_i_i = ($1 & -2) - 1 | 0;
  $3 = $1 & 255;
 }
 if (!($call_i >>> 0 > $cond_i_i >>> 0)) {
  if (($3 & 1) == 0) {
   $cond_i21_i = $this + 1 | 0;
  } else {
   $cond_i21_i = HEAP32[$this + 8 >> 2] | 0;
  }
  _memmove($cond_i21_i | 0, $__s | 0, $call_i | 0) | 0;
  HEAP8[$cond_i21_i + $call_i >> 0] = 0;
  if ((HEAP8[$__size__i_i_i >> 0] & 1) == 0) {
   HEAP8[$__size__i_i_i >> 0] = $call_i << 1;
   return;
  } else {
   HEAP32[$this + 4 >> 2] = $call_i;
   return;
  }
 }
 if ((-18 - $cond_i_i | 0) >>> 0 < ($call_i - $cond_i_i | 0) >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if (($3 & 1) == 0) {
  $cond_i_i_i = $this + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$this + 8 >> 2] | 0;
 }
 if ($cond_i_i >>> 0 < 2147483623 >>> 0) {
  $mul_i_i = $cond_i_i << 1;
  $_sroa_speculated_i_i = $mul_i_i >>> 0 > $call_i >>> 0 ? $mul_i_i : $call_i;
  if ($_sroa_speculated_i_i >>> 0 < 11 >>> 0) {
   $cond_i13_i = 11;
  } else {
   $cond_i13_i = $_sroa_speculated_i_i + 16 & -16;
  }
 } else {
  $cond_i13_i = -17;
 }
 $call_i_i_i_i = __Znwj($cond_i13_i) | 0;
 if (($call_i | 0) != 0) {
  _memcpy($call_i_i_i_i | 0, $__s | 0, $call_i) | 0;
 }
 if (!(($cond_i_i | 0) == 10 | ($cond_i_i_i | 0) == 0)) {
  _free($cond_i_i_i);
 }
 HEAP32[$this + 8 >> 2] = $call_i_i_i_i;
 HEAP32[$this >> 2] = $cond_i13_i | 1;
 HEAP32[$this + 4 >> 2] = $call_i;
 HEAP8[$call_i_i_i_i + $call_i >> 0] = 0;
 return;
}
function __ZN10dtNodePool7getNodeEj($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $add_i = 0, $add2_i = 0, $xor4_i = 0, $add7_i = 0, $and = 0, $m_first = 0, $i_016 = 0, $2 = 0, $m_next = 0, $conv19_in = 0, $conv19 = 0, $m_nodeCount = 0, $5 = 0, $idxprom16 = 0, $7 = 0, $arrayidx23 = 0, $retval_0 = 0;
 $add_i = ~($id << 15) + $id | 0;
 $add2_i = ($add_i >>> 10 ^ $add_i) * 9 | 0;
 $xor4_i = $add2_i >>> 6 ^ $add2_i;
 $add7_i = $xor4_i + ~($xor4_i << 11) | 0;
 $and = (HEAP32[$this + 16 >> 2] | 0) - 1 & ($add7_i >>> 16 ^ $add7_i);
 $m_first = $this + 4 | 0;
 $i_016 = HEAP16[(HEAP32[$m_first >> 2] | 0) + ($and << 1) >> 1] | 0;
 L1 : do {
  if (!($i_016 << 16 >> 16 == -1)) {
   $2 = HEAP32[$this >> 2] | 0;
   $m_next = $this + 8 | 0;
   $conv19_in = $i_016;
   while (1) {
    $conv19 = $conv19_in & 65535;
    if ((HEAP32[$2 + ($conv19 * 28 | 0) + 24 >> 2] | 0) == ($id | 0)) {
     break;
    }
    $conv19_in = HEAP16[(HEAP32[$m_next >> 2] | 0) + ($conv19 << 1) >> 1] | 0;
    if ($conv19_in << 16 >> 16 == -1) {
     break L1;
    }
   }
   $retval_0 = $2 + ($conv19 * 28 | 0) | 0;
   return $retval_0 | 0;
  }
 } while (0);
 $m_nodeCount = $this + 20 | 0;
 $5 = HEAP32[$m_nodeCount >> 2] | 0;
 if (($5 | 0) >= (HEAP32[$this + 12 >> 2] | 0)) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAP32[$m_nodeCount >> 2] = $5 + 1;
 $idxprom16 = $5 & 65535;
 $7 = HEAP32[$this >> 2] | 0;
 HEAPF32[$7 + ($idxprom16 * 28 | 0) + 12 >> 2] = 0.0;
 HEAPF32[$7 + ($idxprom16 * 28 | 0) + 16 >> 2] = 0.0;
 HEAP32[$7 + ($idxprom16 * 28 | 0) + 24 >> 2] = $id;
 HEAP32[$7 + ($idxprom16 * 28 | 0) + 20 >> 2] = 0;
 $arrayidx23 = (HEAP32[$m_first >> 2] | 0) + ($and << 1) | 0;
 HEAP16[(HEAP32[$this + 8 >> 2] | 0) + ($idxprom16 << 1) >> 1] = HEAP16[$arrayidx23 >> 1] | 0;
 HEAP16[$arrayidx23 >> 1] = $5;
 $retval_0 = $7 + ($idxprom16 * 28 | 0) | 0;
 return $retval_0 | 0;
}
function __ZL12circumCirclePKfS0_S0_PfRf($p1, $p2, $p3, $c, $r) {
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 $p3 = $p3 | 0;
 $c = $c | 0;
 $r = $r | 0;
 var $1 = 0.0, $arrayidx2_i = 0, $arrayidx3_i = 0, $3 = 0.0, $arrayidx8_i = 0, $sub12_i = 0.0, $cmp = 0, $6 = 0.0, $7 = 0.0, $add_i = 0.0, $8 = 0.0, $9 = 0.0, $add_i13 = 0.0, $10 = 0.0, $11 = 0.0, $add_i8 = 0.0, $mul15 = 0.0, $div = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $div32 = 0.0, $sub_i_i = 0.0, $sub4_i_i = 0.0, $storemerge = 0.0;
 $1 = +HEAPF32[$p1 >> 2];
 $arrayidx2_i = $p2 + 8 | 0;
 $arrayidx3_i = $p1 + 8 | 0;
 $3 = +HEAPF32[$arrayidx3_i >> 2];
 $arrayidx8_i = $p3 + 8 | 0;
 $sub12_i = (+HEAPF32[$p2 >> 2] - $1) * (+HEAPF32[$arrayidx8_i >> 2] - $3) - (+HEAPF32[$arrayidx2_i >> 2] - $3) * (+HEAPF32[$p3 >> 2] - $1);
 $cmp = +Math_abs(+$sub12_i) > 9.999999974752427e-7;
 $6 = +HEAPF32[$p1 >> 2];
 if ($cmp) {
  $7 = +HEAPF32[$arrayidx3_i >> 2];
  $add_i = $6 * $6 + $7 * $7;
  $8 = +HEAPF32[$p2 >> 2];
  $9 = +HEAPF32[$arrayidx2_i >> 2];
  $add_i13 = $8 * $8 + $9 * $9;
  $10 = +HEAPF32[$p3 >> 2];
  $11 = +HEAPF32[$arrayidx8_i >> 2];
  $add_i8 = $10 * $10 + $11 * $11;
  $mul15 = $sub12_i * 2.0;
  $div = ($add_i * ($9 - $11) + $add_i13 * ($11 - $7) + ($7 - $9) * $add_i8) / $mul15;
  HEAPF32[$c >> 2] = $div;
  $12 = +HEAPF32[$p3 >> 2];
  $13 = +HEAPF32[$p2 >> 2];
  $14 = +HEAPF32[$p1 >> 2];
  $div32 = ($add_i8 * ($13 - $14) + ($add_i * ($12 - $13) + $add_i13 * ($14 - $12))) / $mul15;
  HEAPF32[$c + 8 >> 2] = $div32;
  $sub_i_i = +HEAPF32[$p1 >> 2] - $div;
  $sub4_i_i = +HEAPF32[$arrayidx3_i >> 2] - $div32;
  $storemerge = +Math_sqrt($sub_i_i * $sub_i_i + $sub4_i_i * $sub4_i_i);
  HEAPF32[$r >> 2] = $storemerge;
  return;
 } else {
  HEAPF32[$c >> 2] = $6;
  HEAPF32[$c + 8 >> 2] = +HEAPF32[$arrayidx3_i >> 2];
  $storemerge = 0.0;
  HEAPF32[$r >> 2] = $storemerge;
  return;
 }
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $f_i_i_i = 0, $call = 0, $0 = 0, $call_i = 0, $rpos_i_i_i = 0, $rend_i_i_i = 0, $shcnt_i_i = 0, $call_i_i_i = 0.0, $add_i_i_i = 0, $cond_i_i_i = 0, $8 = 0, $retval_0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f_i_i_i = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 $call = ___errno_location() | 0;
 $0 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 _memset($f_i_i_i | 0, 0, 108) | 0;
 $rpos_i_i_i = $f_i_i_i + 4 | 0;
 HEAP32[$rpos_i_i_i >> 2] = $__a;
 $rend_i_i_i = $f_i_i_i + 8 | 0;
 HEAP32[$rend_i_i_i >> 2] = -1;
 HEAP32[$f_i_i_i + 44 >> 2] = $__a;
 HEAP32[$f_i_i_i + 76 >> 2] = -1;
 HEAP32[$f_i_i_i + 104 >> 2] = 0;
 $shcnt_i_i = $f_i_i_i + 108 | 0;
 HEAP32[$shcnt_i_i >> 2] = ~$__a;
 HEAP32[$f_i_i_i + 100 >> 2] = -1;
 $call_i_i_i = +___floatscan($f_i_i_i, 2);
 $add_i_i_i = (HEAP32[$rpos_i_i_i >> 2] | 0) - (HEAP32[$rend_i_i_i >> 2] | 0) + (HEAP32[$shcnt_i_i >> 2] | 0) | 0;
 if (($add_i_i_i | 0) == 0) {
  $cond_i_i_i = $__a;
 } else {
  $cond_i_i_i = $__a + $add_i_i_i | 0;
 }
 $8 = HEAP32[$call >> 2] | 0;
 if (($8 | 0) == 0) {
  HEAP32[$call >> 2] = $0;
 }
 if (($cond_i_i_i | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 if (($8 | 0) != 34) {
  $retval_0 = $call_i_i_i;
  STACKTOP = sp;
  return +$retval_0;
 }
 HEAP32[$__err >> 2] = 4;
 $retval_0 = $call_i_i_i;
 STACKTOP = sp;
 return +$retval_0;
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $f_i_i_i = 0, $call = 0, $0 = 0, $call_i = 0, $rpos_i_i_i = 0, $rend_i_i_i = 0, $shcnt_i_i = 0, $call_i_i_i = 0.0, $add_i_i_i = 0, $cond_i_i_i = 0, $8 = 0, $retval_0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f_i_i_i = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 $call = ___errno_location() | 0;
 $0 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 _memset($f_i_i_i | 0, 0, 108) | 0;
 $rpos_i_i_i = $f_i_i_i + 4 | 0;
 HEAP32[$rpos_i_i_i >> 2] = $__a;
 $rend_i_i_i = $f_i_i_i + 8 | 0;
 HEAP32[$rend_i_i_i >> 2] = -1;
 HEAP32[$f_i_i_i + 44 >> 2] = $__a;
 HEAP32[$f_i_i_i + 76 >> 2] = -1;
 HEAP32[$f_i_i_i + 104 >> 2] = 0;
 $shcnt_i_i = $f_i_i_i + 108 | 0;
 HEAP32[$shcnt_i_i >> 2] = ~$__a;
 HEAP32[$f_i_i_i + 100 >> 2] = -1;
 $call_i_i_i = +___floatscan($f_i_i_i, 2);
 $add_i_i_i = (HEAP32[$rpos_i_i_i >> 2] | 0) - (HEAP32[$rend_i_i_i >> 2] | 0) + (HEAP32[$shcnt_i_i >> 2] | 0) | 0;
 if (($add_i_i_i | 0) == 0) {
  $cond_i_i_i = $__a;
 } else {
  $cond_i_i_i = $__a + $add_i_i_i | 0;
 }
 $8 = HEAP32[$call >> 2] | 0;
 if (($8 | 0) == 0) {
  HEAP32[$call >> 2] = $0;
 }
 if (($cond_i_i_i | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 if (($8 | 0) != 34) {
  $retval_0 = $call_i_i_i;
  STACKTOP = sp;
  return +$retval_0;
 }
 HEAP32[$__err >> 2] = 4;
 $retval_0 = $call_i_i_i;
 STACKTOP = sp;
 return +$retval_0;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $4 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $6 = 0, $7 = 0, $number_to_static_ptr26_i = 0, $10 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $10 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($10, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  return;
 }
 HEAP8[$info + 53 >> 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 >> 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $4 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($4 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 if (($4 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $6 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($6 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $7 = $path_below;
 } else {
  $7 = $6;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($7 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 >> 0] = 1;
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24232] | 0) != 0) {
  $5 = HEAP32[5570] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24232) | 0) == 0) {
  $5 = HEAP32[5570] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24152] | 0) == 0) {
  if ((___cxa_guard_acquire(24152) | 0) != 0) {
   _memset(20568, 0, 168) | 0;
   _atexit(248, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20568, 616);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20580, 560);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20592, 10288);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20604, 10224);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20616, 10096);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20628, 10048);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20640, 9992);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20652, 9904);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20664, 9864);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20676, 9824);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20688, 9792);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20700, 9752);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20712, 9656);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20724, 9624);
 HEAP32[5570] = 20568;
 $5 = HEAP32[5570] | 0;
 return $5 | 0;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24288] | 0) != 0) {
  $5 = HEAP32[5592] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24288) | 0) == 0) {
  $5 = HEAP32[5592] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24176] | 0) == 0) {
  if ((___cxa_guard_acquire(24176) | 0) != 0) {
   _memset(21312, 0, 168) | 0;
   _atexit(92, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21312, 9400);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21324, 9320);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21336, 9256);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21348, 9216);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21360, 9176);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21372, 9080);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21384, 9048);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21396, 8912);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21408, 8880);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21420, 8760);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21432, 8720);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21444, 8688);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21456, 8568);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21468, 8528);
 HEAP32[5592] = 21312;
 $5 = HEAP32[5592] | 0;
 return $5 | 0;
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $f_i_i_i = 0, $call = 0, $0 = 0, $call_i = 0, $rpos_i_i_i = 0, $rend_i_i_i = 0, $shcnt_i_i = 0, $call_i_i_i = 0.0, $add_i_i_i = 0, $cond_i_i_i = 0, $8 = 0, $retval_0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f_i_i_i = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 $call = ___errno_location() | 0;
 $0 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 _memset($f_i_i_i | 0, 0, 108) | 0;
 $rpos_i_i_i = $f_i_i_i + 4 | 0;
 HEAP32[$rpos_i_i_i >> 2] = $__a;
 $rend_i_i_i = $f_i_i_i + 8 | 0;
 HEAP32[$rend_i_i_i >> 2] = -1;
 HEAP32[$f_i_i_i + 44 >> 2] = $__a;
 HEAP32[$f_i_i_i + 76 >> 2] = -1;
 HEAP32[$f_i_i_i + 104 >> 2] = 0;
 $shcnt_i_i = $f_i_i_i + 108 | 0;
 HEAP32[$shcnt_i_i >> 2] = ~$__a;
 HEAP32[$f_i_i_i + 100 >> 2] = -1;
 $call_i_i_i = +___floatscan($f_i_i_i, 2);
 $add_i_i_i = (HEAP32[$rpos_i_i_i >> 2] | 0) - (HEAP32[$rend_i_i_i >> 2] | 0) + (HEAP32[$shcnt_i_i >> 2] | 0) | 0;
 if (($add_i_i_i | 0) == 0) {
  $cond_i_i_i = $__a;
 } else {
  $cond_i_i_i = $__a + $add_i_i_i | 0;
 }
 $8 = HEAP32[$call >> 2] | 0;
 if (($8 | 0) == 0) {
  HEAP32[$call >> 2] = $0;
 }
 if (($cond_i_i_i | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0.0;
  STACKTOP = sp;
  return +$retval_0;
 }
 if (($8 | 0) == 34) {
  HEAP32[$__err >> 2] = 4;
 }
 $retval_0 = $call_i_i_i;
 STACKTOP = sp;
 return +$retval_0;
}
function __Z30rcFilterWalkableLowHeightSpansP9rcContextiR13rcHeightfield($ctx, $walkableHeight, $solid) {
 $ctx = $ctx | 0;
 $walkableHeight = $walkableHeight | 0;
 $solid = $solid | 0;
 var $m_timerEnabled_i = 0, $3 = 0, $4 = 0, $spans = 0, $x_023_us = 0, $s_019_us = 0, $s_021_us = 0, $6 = 0, $bf_load_us = 0, $tobool6_us = 0, $cond_us = 0, $y_025_us = 0, $mul_us = 0;
 $m_timerEnabled_i = $ctx + 5 | 0;
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) != 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 20 >> 2] & 127]($ctx, 8);
 }
 $3 = HEAP32[$solid >> 2] | 0;
 $4 = HEAP32[$solid + 4 >> 2] | 0;
 if (($4 | 0) > 0) {
  $spans = $solid + 40 | 0;
  if (($3 | 0) > 0) {
   $y_025_us = 0;
   do {
    $mul_us = Math_imul($y_025_us, $3) | 0;
    $x_023_us = 0;
    do {
     $s_019_us = HEAP32[(HEAP32[$spans >> 2] | 0) + ($x_023_us + $mul_us << 2) >> 2] | 0;
     if (($s_019_us | 0) != 0) {
      $s_021_us = $s_019_us;
      do {
       $6 = $s_021_us;
       $bf_load_us = HEAP32[$6 >> 2] | 0;
       $s_021_us = HEAP32[$s_021_us + 4 >> 2] | 0;
       $tobool6_us = ($s_021_us | 0) == 0;
       if ($tobool6_us) {
        $cond_us = 65535;
       } else {
        $cond_us = HEAP32[$s_021_us >> 2] & 8191;
       }
       if (($cond_us - ($bf_load_us >>> 13 & 8191) | 0) <= ($walkableHeight | 0)) {
        HEAP32[$6 >> 2] = $bf_load_us & 67108863;
       }
      } while (!$tobool6_us);
     }
     $x_023_us = $x_023_us + 1 | 0;
    } while (($x_023_us | 0) < ($3 | 0));
    $y_025_us = $y_025_us + 1 | 0;
   } while (($y_025_us | 0) < ($4 | 0));
  }
 }
 if ((HEAP8[$m_timerEnabled_i >> 0] | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$ctx >> 2] | 0) + 24 >> 2] & 127]($ctx, 8);
 return;
}
function ___cxx_global_array_dtor97($0) {
 $0 = $0 | 0;
 var $2 = 0, $5 = 0, $8 = 0, $11 = 0, $14 = 0, $17 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0, $32 = 0, $35 = 0, $38 = 0, $41 = 0;
 if (!((HEAP8[20724] & 1) == 0)) {
  $2 = HEAP32[5183] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[20712] & 1) == 0)) {
  $5 = HEAP32[5180] | 0;
  if (($5 | 0) != 0) {
   _free($5);
  }
 }
 if (!((HEAP8[20700] & 1) == 0)) {
  $8 = HEAP32[5177] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[20688] & 1) == 0)) {
  $11 = HEAP32[5174] | 0;
  if (($11 | 0) != 0) {
   _free($11);
  }
 }
 if (!((HEAP8[20676] & 1) == 0)) {
  $14 = HEAP32[5171] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[20664] & 1) == 0)) {
  $17 = HEAP32[5168] | 0;
  if (($17 | 0) != 0) {
   _free($17);
  }
 }
 if (!((HEAP8[20652] & 1) == 0)) {
  $20 = HEAP32[5165] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[20640] & 1) == 0)) {
  $23 = HEAP32[5162] | 0;
  if (($23 | 0) != 0) {
   _free($23);
  }
 }
 if (!((HEAP8[20628] & 1) == 0)) {
  $26 = HEAP32[5159] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if (!((HEAP8[20616] & 1) == 0)) {
  $29 = HEAP32[5156] | 0;
  if (($29 | 0) != 0) {
   _free($29);
  }
 }
 if (!((HEAP8[20604] & 1) == 0)) {
  $32 = HEAP32[5153] | 0;
  if (($32 | 0) != 0) {
   _free($32);
  }
 }
 if (!((HEAP8[20592] & 1) == 0)) {
  $35 = HEAP32[5150] | 0;
  if (($35 | 0) != 0) {
   _free($35);
  }
 }
 if (!((HEAP8[20580] & 1) == 0)) {
  $38 = HEAP32[5147] | 0;
  if (($38 | 0) != 0) {
   _free($38);
  }
 }
 if ((HEAP8[20568] & 1) == 0) {
  return;
 }
 $41 = HEAP32[5144] | 0;
 if (($41 | 0) == 0) {
  return;
 }
 _free($41);
 return;
}
function ___cxx_global_array_dtor112($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0;
 if (!((HEAP8[21468] & 1) == 0)) {
  $2 = HEAP32[5369] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
 }
 if (!((HEAP8[21456] & 1) == 0)) {
  $4 = HEAP32[5366] | 0;
  if (($4 | 0) != 0) {
   _free($4);
  }
 }
 if (!((HEAP8[21444] & 1) == 0)) {
  $6 = HEAP32[5363] | 0;
  if (($6 | 0) != 0) {
   _free($6);
  }
 }
 if (!((HEAP8[21432] & 1) == 0)) {
  $8 = HEAP32[5360] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
 }
 if (!((HEAP8[21420] & 1) == 0)) {
  $10 = HEAP32[5357] | 0;
  if (($10 | 0) != 0) {
   _free($10);
  }
 }
 if (!((HEAP8[21408] & 1) == 0)) {
  $12 = HEAP32[5354] | 0;
  if (($12 | 0) != 0) {
   _free($12);
  }
 }
 if (!((HEAP8[21396] & 1) == 0)) {
  $14 = HEAP32[5351] | 0;
  if (($14 | 0) != 0) {
   _free($14);
  }
 }
 if (!((HEAP8[21384] & 1) == 0)) {
  $16 = HEAP32[5348] | 0;
  if (($16 | 0) != 0) {
   _free($16);
  }
 }
 if (!((HEAP8[21372] & 1) == 0)) {
  $18 = HEAP32[5345] | 0;
  if (($18 | 0) != 0) {
   _free($18);
  }
 }
 if (!((HEAP8[21360] & 1) == 0)) {
  $20 = HEAP32[5342] | 0;
  if (($20 | 0) != 0) {
   _free($20);
  }
 }
 if (!((HEAP8[21348] & 1) == 0)) {
  $22 = HEAP32[5339] | 0;
  if (($22 | 0) != 0) {
   _free($22);
  }
 }
 if (!((HEAP8[21336] & 1) == 0)) {
  $24 = HEAP32[5336] | 0;
  if (($24 | 0) != 0) {
   _free($24);
  }
 }
 if (!((HEAP8[21324] & 1) == 0)) {
  $26 = HEAP32[5333] | 0;
  if (($26 | 0) != 0) {
   _free($26);
  }
 }
 if ((HEAP8[21312] & 1) == 0) {
  return;
 }
 $28 = HEAP32[5330] | 0;
 if (($28 | 0) == 0) {
  return;
 }
 _free($28);
 return;
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg_result, $this, $__lo, $__hi) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $sub_ptr_rhs_cast_i_i_i_i = 0, $sub_ptr_sub_i_i_i_i = 0, $sub_ptr_div_i_i_i_i = 0, $and_i_i_i_i = 0, $0 = 0, $__p_0_ph_i_i = 0, $2 = 0, $__first_addr_016_i_i = 0, $__p_015_i_i = 0, $__p_0_lcssa_i_i = 0;
 $sub_ptr_rhs_cast_i_i_i_i = $__lo;
 $sub_ptr_sub_i_i_i_i = $__hi - $sub_ptr_rhs_cast_i_i_i_i | 0;
 $sub_ptr_div_i_i_i_i = $sub_ptr_sub_i_i_i_i >> 2;
 if ($sub_ptr_div_i_i_i_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($sub_ptr_div_i_i_i_i >>> 0 < 2 >>> 0) {
  HEAP8[$agg_result >> 0] = $sub_ptr_sub_i_i_i_i >>> 1;
  $__p_0_ph_i_i = $agg_result + 4 | 0;
 } else {
  $and_i_i_i_i = $sub_ptr_div_i_i_i_i + 4 & -4;
  $0 = __Znwj($and_i_i_i_i << 2) | 0;
  HEAP32[$agg_result + 8 >> 2] = $0;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_div_i_i_i_i;
  $__p_0_ph_i_i = $0;
 }
 if (($__lo | 0) == ($__hi | 0)) {
  $__p_0_lcssa_i_i = $__p_0_ph_i_i;
  HEAP32[$__p_0_lcssa_i_i >> 2] = 0;
  return;
 }
 $2 = $__hi - 4 - $sub_ptr_rhs_cast_i_i_i_i | 0;
 $__p_015_i_i = $__p_0_ph_i_i;
 $__first_addr_016_i_i = $__lo;
 while (1) {
  HEAP32[$__p_015_i_i >> 2] = HEAP32[$__first_addr_016_i_i >> 2];
  $__first_addr_016_i_i = $__first_addr_016_i_i + 4 | 0;
  if (($__first_addr_016_i_i | 0) == ($__hi | 0)) {
   break;
  } else {
   $__p_015_i_i = $__p_015_i_i + 4 | 0;
  }
 }
 $__p_0_lcssa_i_i = $__p_0_ph_i_i + (($2 >>> 2) + 1 << 2) | 0;
 HEAP32[$__p_0_lcssa_i_i >> 2] = 0;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $__end__i = 0, $1 = 0, $__begin__i = 0, $2 = 0, $3 = 0, $4 = 0, $i_013 = 0, $5 = 0, $__shared_owners__i = 0, $10 = 0, $11 = 0, $inc = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0;
 HEAP32[$this >> 2] = 12992;
 $__end__i = $this + 12 | 0;
 $1 = HEAP32[$__end__i >> 2] | 0;
 $__begin__i = $this + 8 | 0;
 $2 = HEAP32[$__begin__i >> 2] | 0;
 if (($1 | 0) == ($2 | 0)) {
  $12 = $1;
 } else {
  $i_013 = 0;
  $4 = $2;
  $3 = $1;
  while (1) {
   $5 = HEAP32[$4 + ($i_013 << 2) >> 2] | 0;
   if (($5 | 0) == 0) {
    $11 = $3;
    $10 = $4;
   } else {
    $__shared_owners__i = $5 + 4 | 0;
    if (((tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + -1, tempValue) | 0) == 0) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 8 >> 2] & 511]($5 | 0);
    }
    $11 = HEAP32[$__end__i >> 2] | 0;
    $10 = HEAP32[$__begin__i >> 2] | 0;
   }
   $inc = $i_013 + 1 | 0;
   if ($inc >>> 0 < $11 - $10 >> 2 >>> 0) {
    $i_013 = $inc;
    $4 = $10;
    $3 = $11;
   } else {
    $12 = $10;
    break;
   }
  }
 }
 if ((HEAP8[$this + 144 >> 0] & 1) == 0) {
  $15 = $12;
 } else {
  $14 = HEAP32[$this + 152 >> 2] | 0;
  if (($14 | 0) == 0) {
   $15 = $12;
  } else {
   _free($14);
   $15 = HEAP32[$__begin__i >> 2] | 0;
  }
 }
 if (($15 | 0) == 0) {
  return;
 }
 $16 = HEAP32[$__end__i >> 2] | 0;
 if (($16 | 0) != ($15 | 0)) {
  HEAP32[$__end__i >> 2] = $16 + (~(($16 - 4 - $15 | 0) >>> 2) << 2);
 }
 if (($this + 24 | 0) == ($15 | 0)) {
  HEAP8[$this + 136 >> 0] = 0;
  return;
 } else {
  _free($15);
  return;
 }
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $0 = 0, $call_i = 0, $call3$0 = 0, $call3$1 = 0, $5 = 0, $$etemp$0$1 = 0, $cmp17 = 0, $retval_0$0 = 0, $retval_0$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0$1 = 0;
  $retval_0$0 = 0;
  STACKTOP = sp;
  return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
 }
 $call = ___errno_location() | 0;
 $0 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call3$0 = _strtoll_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
 $call3$1 = tempRet0;
 $5 = HEAP32[$call >> 2] | 0;
 if (($5 | 0) == 0) {
  HEAP32[$call >> 2] = $0;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0$1 = 0;
  $retval_0$0 = 0;
  STACKTOP = sp;
  return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
 }
 if (($5 | 0) == 34) {
  HEAP32[$__err >> 2] = 4;
  $$etemp$0$1 = 0;
  $cmp17 = ($call3$1 | 0) > ($$etemp$0$1 | 0) | ($call3$1 | 0) == ($$etemp$0$1 | 0) & $call3$0 >>> 0 > 0 >>> 0;
  STACKTOP = sp;
  return (tempRet0 = $cmp17 ? 2147483647 : -2147483648, $cmp17 ? -1 : 0) | 0;
 } else {
  $retval_0$1 = $call3$1;
  $retval_0$0 = $call3$0;
  STACKTOP = sp;
  return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
 }
 return 0;
}
function __ZN10dtNodePoolC2Eii($this, $maxNodes, $hashSize) {
 $this = $this | 0;
 $maxNodes = $maxNodes | 0;
 $hashSize = $hashSize | 0;
 var $m_nodes = 0, $m_first = 0, $m_next = 0, $m_maxNodes = 0, $m_hashSize = 0, $dec_i = 0, $or_i = 0, $or2_i = 0, $or4_i = 0, $or6_i = 0, $0 = 0, $2 = 0, $call_i_i2 = 0;
 $m_nodes = $this | 0;
 HEAP32[$m_nodes >> 2] = 0;
 $m_first = $this + 4 | 0;
 HEAP32[$m_first >> 2] = 0;
 $m_next = $this + 8 | 0;
 HEAP32[$m_next >> 2] = 0;
 $m_maxNodes = $this + 12 | 0;
 HEAP32[$m_maxNodes >> 2] = $maxNodes;
 $m_hashSize = $this + 16 | 0;
 HEAP32[$m_hashSize >> 2] = $hashSize;
 HEAP32[$this + 20 >> 2] = 0;
 $dec_i = $hashSize - 1 | 0;
 $or_i = $dec_i >>> 1 | $dec_i;
 $or2_i = $or_i >>> 2 | $or_i;
 $or4_i = $or2_i >>> 4 | $or2_i;
 $or6_i = $or4_i >>> 8 | $or4_i;
 if ((($or6_i >>> 16 | $or6_i) + 1 | 0) != ($hashSize | 0)) {
  ___assert_fail(9696, 9584, 45, 10592);
 }
 if (($maxNodes | 0) <= 0) {
  ___assert_fail(7128, 9584, 46, 10592);
 }
 $0 = _malloc($maxNodes * 28 | 0) | 0;
 HEAP32[$m_nodes >> 2] = $0;
 $2 = _malloc(HEAP32[$m_maxNodes >> 2] << 1) | 0;
 HEAP32[$m_next >> 2] = $2;
 $call_i_i2 = _malloc($hashSize << 1) | 0;
 HEAP32[$m_first >> 2] = $call_i_i2;
 if ((HEAP32[$m_nodes >> 2] | 0) == 0) {
  ___assert_fail(6048, 9584, 52, 10592);
 }
 if ((HEAP32[$m_next >> 2] | 0) == 0) {
  ___assert_fail(4920, 9584, 53, 10592);
 }
 if (($call_i_i2 | 0) == 0) {
  ___assert_fail(4120, 9584, 54, 10592);
 } else {
  _memset($call_i_i2 | 0, -1 | 0, HEAP32[$m_hashSize >> 2] << 1 | 0) | 0;
  _memset(HEAP32[$m_next >> 2] | 0, -1 | 0, HEAP32[$m_maxNodes >> 2] << 1 | 0) | 0;
  return;
 }
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $2 = 0, $path_dst_ptr_to_static_ptr12_i = 0, $4 = 0, $5 = 0, $number_to_static_ptr26_i = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  return;
 }
 HEAP8[$info + 53 >> 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  return;
 }
 HEAP8[$info + 52 >> 0] = 1;
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $2 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($2 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($path_below | 0) == 1)) {
   return;
  }
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 if (($2 | 0) != ($dst_ptr | 0)) {
  $number_to_static_ptr26_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr26_i >> 2] = (HEAP32[$number_to_static_ptr26_i >> 2] | 0) + 1;
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr12_i = $info + 24 | 0;
 $4 = HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] | 0;
 if (($4 | 0) == 2) {
  HEAP32[$path_dst_ptr_to_static_ptr12_i >> 2] = $path_below;
  $5 = $path_below;
 } else {
  $5 = $4;
 }
 if (!((HEAP32[$info + 48 >> 2] | 0) == 1 & ($5 | 0) == 1)) {
  return;
 }
 HEAP8[$info + 54 >> 0] = 1;
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $1 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $arrayidx_i = 0;
 $s_addr_0_i = 7184;
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 7184 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[$agg_result >> 0] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = $agg_result + 4 | 0;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $1 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[$agg_result + 8 >> 2] = $1;
  HEAP32[$agg_result >> 2] = $and_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_div_i;
  $__p_0_i = $1;
 }
 if (($sub_ptr_div_i | 0) == 0) {
  $arrayidx_i = $__p_0_i + ($sub_ptr_div_i << 2) | 0;
  HEAP32[$arrayidx_i >> 2] = 0;
  return;
 } else {
  $s_addr_03_i_i = 7184;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
 }
 while (1) {
  $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($n_addr_04_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 $arrayidx_i = $__p_0_i + ($sub_ptr_div_i << 2) | 0;
 HEAP32[$arrayidx_i >> 2] = 0;
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $1 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0, $arrayidx_i = 0;
 $s_addr_0_i = 7368;
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 7368 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[$agg_result >> 0] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = $agg_result + 4 | 0;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $1 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[$agg_result + 8 >> 2] = $1;
  HEAP32[$agg_result >> 2] = $and_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_div_i;
  $__p_0_i = $1;
 }
 if (($sub_ptr_div_i | 0) == 0) {
  $arrayidx_i = $__p_0_i + ($sub_ptr_div_i << 2) | 0;
  HEAP32[$arrayidx_i >> 2] = 0;
  return;
 } else {
  $s_addr_03_i_i = 7368;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
 }
 while (1) {
  $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
  HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
  if (($n_addr_04_i_i | 0) == 0) {
   break;
  } else {
   $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
   $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
  }
 }
 $arrayidx_i = $__p_0_i + ($sub_ptr_div_i << 2) | 0;
 HEAP32[$arrayidx_i >> 2] = 0;
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $sub_ptr_lhs_cast = 0, $__l = 0, $cond_i = 0, $nwchar_t_020 = 0, $nbytes_019 = 0, $frm_addr_018 = 0, $call_i = 0, $call_i1 = 0, $frm_addr_1 = 0, $call_pn = 0, $nbytes_1 = 0, $inc4 = 0, $nbytes_0_lcssa = 0, label = 0;
 if (($mx | 0) == 0 | ($frm | 0) == ($frm_end | 0)) {
  $nbytes_0_lcssa = 0;
  return $nbytes_0_lcssa | 0;
 }
 $sub_ptr_lhs_cast = $frm_end;
 $__l = $this + 8 | 0;
 $cond_i = ($st | 0) != 0 ? $st : 19608;
 $frm_addr_018 = $frm;
 $nbytes_019 = 0;
 $nwchar_t_020 = 0;
 while (1) {
  $call_i = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
  $call_i1 = _mbrtowc(0, $frm_addr_018, $sub_ptr_lhs_cast - $frm_addr_018 | 0, $cond_i) | 0;
  if (($call_i | 0) != 0) {
   _uselocale($call_i | 0) | 0;
  }
  if (($call_i1 | 0) == 0) {
   $call_pn = 1;
   $frm_addr_1 = $frm_addr_018 + 1 | 0;
  } else if (($call_i1 | 0) == (-1 | 0) | ($call_i1 | 0) == (-2 | 0)) {
   $nbytes_0_lcssa = $nbytes_019;
   label = 10;
   break;
  } else {
   $call_pn = $call_i1;
   $frm_addr_1 = $frm_addr_018 + $call_i1 | 0;
  }
  $nbytes_1 = $call_pn + $nbytes_019 | 0;
  $inc4 = $nwchar_t_020 + 1 | 0;
  if ($inc4 >>> 0 >= $mx >>> 0 | ($frm_addr_1 | 0) == ($frm_end | 0)) {
   $nbytes_0_lcssa = $nbytes_1;
   label = 10;
   break;
  } else {
   $frm_addr_018 = $frm_addr_1;
   $nbytes_019 = $nbytes_1;
   $nwchar_t_020 = $inc4;
  }
 }
 if ((label | 0) == 10) {
  return $nbytes_0_lcssa | 0;
 }
 return 0;
}
function __Z20crowdGetActiveAgentsNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($callback) {
 $callback = $callback | 0;
 var $0 = 0, $1 = 0, $2 = 0, $m_agents_i = 0, $i_08_i = 0, $n_07_i = 0, $arrayidx_i = 0, $n_1_i = 0, $i_021 = 0, $5 = 0, $i11_019 = 0;
 $0 = _malloc(400) | 0;
 $1 = HEAP32[4920] | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) > 0) {
  $m_agents_i = $1 + 4 | 0;
  $n_07_i = 0;
  $i_08_i = 0;
  while (1) {
   $arrayidx_i = (HEAP32[$m_agents_i >> 2] | 0) + ($i_08_i * 608 | 0) | 0;
   if ((HEAP8[$arrayidx_i >> 0] | 0) != 0 & ($n_07_i | 0) < 100) {
    HEAP32[$0 + ($n_07_i << 2) >> 2] = $arrayidx_i;
    $n_1_i = $n_07_i + 1 | 0;
   } else {
    $n_1_i = $n_07_i;
   }
   $i_08_i = $i_08_i + 1 | 0;
   if (($i_08_i | 0) >= ($2 | 0)) {
    break;
   } else {
    $n_07_i = $n_1_i;
   }
  }
  if (($n_1_i | 0) > 0) {
   $i_021 = 0;
   do {
    $5 = HEAP32[$0 + ($i_021 << 2) >> 2] | 0;
    _agentPool_get(HEAP32[$5 + 500 >> 2] | 0, +(+HEAPF32[$5 + 408 >> 2]), +(+HEAPF32[$5 + 412 >> 2]), +(+HEAPF32[$5 + 416 >> 2]), +(+HEAPF32[$5 + 456 >> 2]), +(+HEAPF32[$5 + 460 >> 2]), +(+HEAPF32[$5 + 464 >> 2]), +(+HEAPF32[$5 + 468 >> 2]), HEAPU8[$5 >> 0] | 0, HEAPU8[$5 + 1 >> 0] | 0, HEAP32[$5 + 400 >> 2] | 0);
    $i_021 = $i_021 + 1 | 0;
   } while (($i_021 | 0) < ($n_1_i | 0));
   _flush_active_agents_callback();
   $i11_019 = 0;
   do {
    _agentPool_add($i11_019 | 0);
    $i11_019 = $i11_019 + 1 | 0;
   } while (($i11_019 | 0) < ($n_1_i | 0));
   _agentPool_clear();
   return 1;
  }
 }
 _flush_active_agents_callback();
 _agentPool_clear();
 return 1;
}
function __Z26updateCrowdAgentParametersifffffffhf($idx, $posX, $posY, $posZ, $radius, $height, $maxAcceleration, $maxSpeed, $updateFlags, $separationWeight) {
 $idx = $idx | 0;
 $posX = +$posX;
 $posY = +$posY;
 $posZ = +$posZ;
 $radius = +$radius;
 $height = +$height;
 $maxAcceleration = +$maxAcceleration;
 $maxSpeed = +$maxSpeed;
 $updateFlags = $updateFlags | 0;
 $separationWeight = +$separationWeight;
 var $ap_sroa_13 = 0, $1 = 0, $3 = 0, $params3_i = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $ap_sroa_13 = sp | 0;
 HEAP16[$ap_sroa_13 >> 1] = 0;
 $1 = HEAP32[4920] | 0;
 if (($idx | 0) < 0) {
  $$etemp$1$0 = 2;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$1 >> 2] | 0) < ($idx | 0)) {
  $$etemp$1$0 = 2;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $3 = HEAP32[$1 + 4 >> 2] | 0;
 $params3_i = $3 + ($idx * 608 | 0) + 468 | 0;
 HEAPF32[$params3_i >> 2] = $radius;
 HEAPF32[$3 + ($idx * 608 | 0) + 472 >> 2] = $height;
 HEAPF32[$3 + ($idx * 608 | 0) + 476 >> 2] = $maxAcceleration;
 HEAPF32[$3 + ($idx * 608 | 0) + 480 >> 2] = $maxSpeed;
 HEAPF32[$3 + ($idx * 608 | 0) + 484 >> 2] = $radius * 12.0;
 HEAPF32[$3 + ($idx * 608 | 0) + 488 >> 2] = $radius * 300.0;
 HEAPF32[$3 + ($idx * 608 | 0) + 492 >> 2] = $separationWeight;
 HEAP8[$3 + ($idx * 608 | 0) + 496 >> 0] = 0;
 HEAP8[$3 + ($idx * 608 | 0) + 497 >> 0] = 3;
 HEAP16[$params3_i + 30 >> 1] = HEAP16[$ap_sroa_13 >> 1] | 0;
 HEAP32[$3 + ($idx * 608 | 0) + 500 >> 2] = $idx;
 $$etemp$1$0 = 2;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $3 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0;
 if ((HEAP8[24248] | 0) != 0) {
  return 22296;
 }
 if ((___cxa_guard_acquire(24248) | 0) == 0) {
  return 22296;
 } else {
  $s_addr_0_i = 6680;
 }
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 6680 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  return 0;
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[22296] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = 22300;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $3 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[5576] = $3;
  HEAP32[5574] = $and_i_i_i | 1;
  HEAP32[5575] = $sub_ptr_div_i;
  $__p_0_i = $3;
 }
 if (($sub_ptr_div_i | 0) != 0) {
  $s_addr_03_i_i = 6680;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
  while (1) {
   $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
   HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
   if (($n_addr_04_i_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
    $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
   }
  }
 }
 HEAP32[$__p_0_i + ($sub_ptr_div_i << 2) >> 2] = 0;
 _atexit(210, 22296, ___dso_handle | 0) | 0;
 return 22296;
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $3 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0;
 if ((HEAP8[24256] | 0) != 0) {
  return 22312;
 }
 if ((___cxa_guard_acquire(24256) | 0) == 0) {
  return 22312;
 } else {
  $s_addr_0_i = 6088;
 }
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 6088 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  return 0;
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[22312] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = 22316;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $3 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[5580] = $3;
  HEAP32[5578] = $and_i_i_i | 1;
  HEAP32[5579] = $sub_ptr_div_i;
  $__p_0_i = $3;
 }
 if (($sub_ptr_div_i | 0) != 0) {
  $s_addr_03_i_i = 6088;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
  while (1) {
   $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
   HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
   if (($n_addr_04_i_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
    $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
   }
  }
 }
 HEAP32[$__p_0_i + ($sub_ptr_div_i << 2) >> 2] = 0;
 _atexit(210, 22312, ___dso_handle | 0) | 0;
 return 22312;
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $3 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0;
 if ((HEAP8[24264] | 0) != 0) {
  return 22328;
 }
 if ((___cxa_guard_acquire(24264) | 0) == 0) {
  return 22328;
 } else {
  $s_addr_0_i = 6224;
 }
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 6224 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  return 0;
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[22328] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = 22332;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $3 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[5584] = $3;
  HEAP32[5582] = $and_i_i_i | 1;
  HEAP32[5583] = $sub_ptr_div_i;
  $__p_0_i = $3;
 }
 if (($sub_ptr_div_i | 0) != 0) {
  $s_addr_03_i_i = 6224;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
  while (1) {
   $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
   HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
   if (($n_addr_04_i_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
    $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
   }
  }
 }
 HEAP32[$__p_0_i + ($sub_ptr_div_i << 2) >> 2] = 0;
 _atexit(210, 22328, ___dso_handle | 0) | 0;
 return 22328;
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $s_addr_0_i = 0, $sub_ptr_sub_i = 0, $sub_ptr_div_i = 0, $and_i_i_i = 0, $3 = 0, $__p_0_i = 0, $d_addr_05_i_i = 0, $n_addr_04_i_i = 0, $s_addr_03_i_i = 0;
 if ((HEAP8[24272] | 0) != 0) {
  return 22344;
 }
 if ((___cxa_guard_acquire(24272) | 0) == 0) {
  return 22344;
 } else {
  $s_addr_0_i = 6456;
 }
 while (1) {
  if ((HEAP32[$s_addr_0_i >> 2] | 0) == 0) {
   break;
  } else {
   $s_addr_0_i = $s_addr_0_i + 4 | 0;
  }
 }
 $sub_ptr_sub_i = $s_addr_0_i - 6456 | 0;
 $sub_ptr_div_i = $sub_ptr_sub_i >> 2;
 if ($sub_ptr_div_i >>> 0 > 1073741807 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  return 0;
 }
 if ($sub_ptr_div_i >>> 0 < 2 >>> 0) {
  HEAP8[22344] = $sub_ptr_sub_i >>> 1;
  $__p_0_i = 22348;
 } else {
  $and_i_i_i = $sub_ptr_div_i + 4 & -4;
  $3 = __Znwj($and_i_i_i << 2) | 0;
  HEAP32[5588] = $3;
  HEAP32[5586] = $and_i_i_i | 1;
  HEAP32[5587] = $sub_ptr_div_i;
  $__p_0_i = $3;
 }
 if (($sub_ptr_div_i | 0) != 0) {
  $s_addr_03_i_i = 6456;
  $n_addr_04_i_i = $sub_ptr_div_i;
  $d_addr_05_i_i = $__p_0_i;
  while (1) {
   $n_addr_04_i_i = $n_addr_04_i_i - 1 | 0;
   HEAP32[$d_addr_05_i_i >> 2] = HEAP32[$s_addr_03_i_i >> 2];
   if (($n_addr_04_i_i | 0) == 0) {
    break;
   } else {
    $s_addr_03_i_i = $s_addr_03_i_i + 4 | 0;
    $d_addr_05_i_i = $d_addr_05_i_i + 4 | 0;
   }
  }
 }
 HEAP32[$__p_0_i + ($sub_ptr_div_i << 2) >> 2] = 0;
 _atexit(210, 22344, ___dso_handle | 0) | 0;
 return 22344;
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $1 = 0, $call_i = 0, $call5$0 = 0, $call5$1 = 0, $6 = 0, $$etemp$0$1 = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call = ___errno_location() | 0;
 $1 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call5$0 = _strtoull_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
 $call5$1 = tempRet0;
 $6 = HEAP32[$call >> 2] | 0;
 if (($6 | 0) == 0) {
  HEAP32[$call >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($6 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > 65535 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0 & 65535;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $1 = 0, $call_i = 0, $call5$0 = 0, $call5$1 = 0, $6 = 0, $$etemp$0$1 = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call = ___errno_location() | 0;
 $1 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call5$0 = _strtoull_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
 $call5$1 = tempRet0;
 $6 = HEAP32[$call >> 2] | 0;
 if (($6 | 0) == 0) {
  HEAP32[$call >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($6 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > -1 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $1 = 0, $call_i = 0, $call5$0 = 0, $call5$1 = 0, $6 = 0, $$etemp$0$1 = 0, $retval_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $call = ___errno_location() | 0;
 $1 = HEAP32[$call >> 2] | 0;
 HEAP32[$call >> 2] = 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 $call5$0 = _strtoull_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
 $call5$1 = tempRet0;
 $6 = HEAP32[$call >> 2] | 0;
 if (($6 | 0) == 0) {
  HEAP32[$call >> 2] = $1;
 }
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = 0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 $$etemp$0$1 = 0;
 if (($6 | 0) == 34 | ($call5$1 >>> 0 > $$etemp$0$1 >>> 0 | $call5$1 >>> 0 == $$etemp$0$1 >>> 0 & $call5$0 >>> 0 > -1 >>> 0)) {
  HEAP32[$__err >> 2] = 4;
  $retval_0 = -1;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else {
  $retval_0 = $call5$0;
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 return 0;
}
function __Z28dtClosestHeightPointTrianglePKfS0_S0_S0_Rf($p_val, $p_2_val, $a_val, $a_1_val, $a_2_val, $b, $c, $h) {
 $p_val = +$p_val;
 $p_2_val = +$p_2_val;
 $a_val = +$a_val;
 $a_1_val = +$a_1_val;
 $a_2_val = +$a_2_val;
 $b = $b | 0;
 $c = $c | 0;
 $h = $h | 0;
 var $sub_i = 0.0, $sub9_i = 0.0, $sub_i47 = 0.0, $sub9_i54 = 0.0, $sub_i38 = 0.0, $sub9_i45 = 0.0, $add_i37 = 0.0, $add_i32 = 0.0, $add_i27 = 0.0, $add_i22 = 0.0, $add_i = 0.0, $div = 0.0, $mul21 = 0.0, $mul25 = 0.0, $retval_0 = 0;
 $sub_i = +HEAPF32[$c >> 2] - $a_val;
 $sub9_i = +HEAPF32[$c + 8 >> 2] - $a_2_val;
 $sub_i47 = +HEAPF32[$b >> 2] - $a_val;
 $sub9_i54 = +HEAPF32[$b + 8 >> 2] - $a_2_val;
 $sub_i38 = $p_val - $a_val;
 $sub9_i45 = $p_2_val - $a_2_val;
 $add_i37 = $sub_i * $sub_i + $sub9_i * $sub9_i;
 $add_i32 = $sub_i * $sub_i47 + $sub9_i * $sub9_i54;
 $add_i27 = $sub_i * $sub_i38 + $sub9_i * $sub9_i45;
 $add_i22 = $sub_i47 * $sub_i47 + $sub9_i54 * $sub9_i54;
 $add_i = $sub_i47 * $sub_i38 + $sub9_i54 * $sub9_i45;
 $div = 1.0 / ($add_i37 * $add_i22 - $add_i32 * $add_i32);
 $mul21 = $div * ($add_i22 * $add_i27 - $add_i32 * $add_i);
 $mul25 = $div * ($add_i37 * $add_i - $add_i32 * $add_i27);
 if ($mul25 < -9999999747378752.0e-20 | $mul21 < -9999999747378752.0e-20 | $mul21 + $mul25 > 1.000100016593933) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 HEAPF32[$h >> 2] = $mul25 * (+HEAPF32[$b + 4 >> 2] - $a_1_val) + ($mul21 * (+HEAPF32[$c + 4 >> 2] - $a_1_val) + $a_1_val);
 $retval_0 = 1;
 return $retval_0 | 0;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $path_dynamic_ptr_to_static_ptr_i = 0, $dst_ptr_not_leading_to_static_ptr = 0, $number_to_dst_ptr = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) == ($this | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   return;
  }
  $path_dynamic_ptr_to_static_ptr_i = $info + 28 | 0;
  if ((HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] | 0) == 1) {
   return;
  }
  HEAP32[$path_dynamic_ptr_to_static_ptr_i >> 2] = $path_below;
  return;
 }
 if ((HEAP32[$info >> 2] | 0) != ($this | 0)) {
  return;
 }
 if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
  $dst_ptr_not_leading_to_static_ptr = $info + 20 | 0;
  if ((HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] | 0) != ($current_ptr | 0)) {
   HEAP32[$info + 32 >> 2] = $path_below;
   HEAP32[$dst_ptr_not_leading_to_static_ptr >> 2] = $current_ptr;
   $number_to_dst_ptr = $info + 40 | 0;
   HEAP32[$number_to_dst_ptr >> 2] = (HEAP32[$number_to_dst_ptr >> 2] | 0) + 1;
   if ((HEAP32[$info + 36 >> 2] | 0) == 1) {
    if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
     HEAP8[$info + 54 >> 0] = 1;
    }
   }
   HEAP32[$info + 44 >> 2] = 4;
   return;
  }
 }
 if (($path_below | 0) != 1) {
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 return;
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg_result, $this, $__lo, $__hi) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $sub_ptr_sub_i_i_i_i = 0, $and_i_i_i_i = 0, $call_i_i_i_i = 0, $__p_0_ph_i_i = 0, $__first_addr_014_i_i = 0, $__p_013_i_i = 0, $__p_0_lcssa_i_i = 0;
 $sub_ptr_sub_i_i_i_i = $__hi - $__lo | 0;
 if ($sub_ptr_sub_i_i_i_i >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($sub_ptr_sub_i_i_i_i >>> 0 < 11 >>> 0) {
  HEAP8[$agg_result >> 0] = $sub_ptr_sub_i_i_i_i << 1;
  $__p_0_ph_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i = $sub_ptr_sub_i_i_i_i + 16 & -16;
  $call_i_i_i_i = __Znwj($and_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $sub_ptr_sub_i_i_i_i;
  $__p_0_ph_i_i = $call_i_i_i_i;
 }
 if (($__lo | 0) == ($__hi | 0)) {
  $__p_0_lcssa_i_i = $__p_0_ph_i_i;
  HEAP8[$__p_0_lcssa_i_i >> 0] = 0;
  return;
 } else {
  $__p_013_i_i = $__p_0_ph_i_i;
  $__first_addr_014_i_i = $__lo;
 }
 while (1) {
  HEAP8[$__p_013_i_i >> 0] = HEAP8[$__first_addr_014_i_i >> 0] | 0;
  $__first_addr_014_i_i = $__first_addr_014_i_i + 1 | 0;
  if (($__first_addr_014_i_i | 0) == ($__hi | 0)) {
   break;
  } else {
   $__p_013_i_i = $__p_013_i_i + 1 | 0;
  }
 }
 $__p_0_lcssa_i_i = $__p_0_ph_i_i + $sub_ptr_sub_i_i_i_i | 0;
 HEAP8[$__p_0_lcssa_i_i >> 0] = 0;
 return;
}
function __ZN10emscripten8internal7InvokerIvJffffffiNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvffffffiS8_EffffffiPNS0_11BindingTypeIS8_EUt_E($fn, $args, $args1, $args3, $args5, $args7, $args9, $args11, $args13) {
 $fn = $fn | 0;
 $args = +$args;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 $args7 = +$args7;
 $args9 = +$args9;
 $args11 = $args11 | 0;
 $args13 = $args13 | 0;
 var $agg_tmp = 0, $0 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp = sp | 0;
 $0 = HEAP32[$args13 >> 2] | 0;
 if ($0 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($0 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_tmp >> 0] = $0 << 1;
  $__p_0_i_i_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i_i_i = $0 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $0;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $args13 + 4 | 0, $0) | 0;
 HEAP8[$__p_0_i_i_i + $0 >> 0] = 0;
 FUNCTION_TABLE_vffffffii[$fn & 31]($args, $args1, $args3, $args5, $args7, $args9, $args11, $agg_tmp);
 if ((HEAP8[$agg_tmp >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $2 = HEAP32[$agg_tmp + 8 >> 2] | 0;
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($2);
 STACKTOP = sp;
 return;
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $__p2 = 0, $call = 0, $1 = 0, $call_i = 0, $call5$0 = 0, $6 = 0, $retval_0$0 = 0, $retval_0$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__p2 = sp | 0;
 do {
  if (($__a | 0) == ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $retval_0$1 = 0;
   $retval_0$0 = 0;
  } else {
   if ((HEAP8[$__a >> 0] | 0) == 45) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = 0;
    $retval_0$0 = 0;
    break;
   }
   $call = ___errno_location() | 0;
   $1 = HEAP32[$call >> 2] | 0;
   HEAP32[$call >> 2] = 0;
   if ((HEAP8[24208] | 0) == 0) {
    if ((___cxa_guard_acquire(24208) | 0) != 0) {
     $call_i = _newlocale(2147483647, 896, 0) | 0;
     HEAP32[5446] = $call_i;
    }
   }
   $call5$0 = _strtoull_l($__a | 0, $__p2 | 0, $__base | 0, HEAP32[5446] | 0) | 0;
   $6 = HEAP32[$call >> 2] | 0;
   if (($6 | 0) == 0) {
    HEAP32[$call >> 2] = $1;
   }
   if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = 0;
    $retval_0$0 = 0;
    break;
   }
   if (($6 | 0) == 34) {
    HEAP32[$__err >> 2] = 4;
    $retval_0$1 = -1;
    $retval_0$0 = -1;
   } else {
    $retval_0$1 = tempRet0;
    $retval_0$0 = $call5$0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return (tempRet0 = $retval_0$1, $retval_0$0) | 0;
}
function __ZN10emscripten8internal7InvokerIvJffffffNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvffffffS8_EffffffPNS0_11BindingTypeIS8_EUt_E($fn, $args, $args1, $args3, $args5, $args7, $args9, $args11) {
 $fn = $fn | 0;
 $args = +$args;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 $args7 = +$args7;
 $args9 = +$args9;
 $args11 = $args11 | 0;
 var $agg_tmp = 0, $0 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp = sp | 0;
 $0 = HEAP32[$args11 >> 2] | 0;
 if ($0 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($0 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_tmp >> 0] = $0 << 1;
  $__p_0_i_i_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i_i_i = $0 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $0;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $args11 + 4 | 0, $0) | 0;
 HEAP8[$__p_0_i_i_i + $0 >> 0] = 0;
 FUNCTION_TABLE_vffffffi[$fn & 31]($args, $args1, $args3, $args5, $args7, $args9, $agg_tmp);
 if ((HEAP8[$agg_tmp >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $2 = HEAP32[$agg_tmp + 8 >> 2] | 0;
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($2);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $__lo2_addr_010 = 0, $__lo1_addr_09 = 0, $0 = 0, $1 = 0, $incdec_ptr = 0, $incdec_ptr10 = 0, $__lo1_addr_0_lcssa = 0, $retval_0 = 0, label = 0;
 L1 : do {
  if (($__lo2 | 0) == ($__hi2 | 0)) {
   $__lo1_addr_0_lcssa = $__lo1;
  } else {
   $__lo1_addr_09 = $__lo1;
   $__lo2_addr_010 = $__lo2;
   while (1) {
    if (($__lo1_addr_09 | 0) == ($__hi1 | 0)) {
     $retval_0 = -1;
     label = 7;
     break;
    }
    $0 = HEAP8[$__lo1_addr_09 >> 0] | 0;
    $1 = HEAP8[$__lo2_addr_010 >> 0] | 0;
    if ($0 << 24 >> 24 < $1 << 24 >> 24) {
     $retval_0 = -1;
     label = 7;
     break;
    }
    if ($1 << 24 >> 24 < $0 << 24 >> 24) {
     $retval_0 = 1;
     label = 7;
     break;
    }
    $incdec_ptr = $__lo1_addr_09 + 1 | 0;
    $incdec_ptr10 = $__lo2_addr_010 + 1 | 0;
    if (($incdec_ptr10 | 0) == ($__hi2 | 0)) {
     $__lo1_addr_0_lcssa = $incdec_ptr;
     break L1;
    } else {
     $__lo1_addr_09 = $incdec_ptr;
     $__lo2_addr_010 = $incdec_ptr10;
    }
   }
   if ((label | 0) == 7) {
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($__lo1_addr_0_lcssa | 0) != ($__hi1 | 0) | 0;
 return $retval_0 | 0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $add_ptr = 0, $call = 0, $6 = 0, $cond_i_i1016 = 0, $cond_i = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 20 >> 2] & 255]($add_ptr) | 0;
 $6 = HEAP8[$call >> 0] | 0;
 if (($6 & 1) == 0) {
  $cond_i = ($6 & 255) >>> 1;
  $cond_i_i1016 = $call + 4 | 0;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
  $cond_i_i1016 = HEAP32[$call + 8 >> 2] | 0;
 }
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, HEAP32[$__b >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i1016, $cond_i_i1016 + ($cond_i << 2) | 0);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $add_ptr = 0, $call = 0, $6 = 0, $cond_i_i1117 = 0, $cond_i = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 $add_ptr = $this + 8 | 0;
 $call = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$add_ptr >> 2] | 0) + 20 >> 2] & 255]($add_ptr) | 0;
 $6 = HEAP8[$call >> 0] | 0;
 if (($6 & 1) == 0) {
  $cond_i = ($6 & 255) >>> 1;
  $cond_i_i1117 = $call + 1 | 0;
 } else {
  $cond_i = HEAP32[$call + 4 >> 2] | 0;
  $cond_i_i1117 = HEAP32[$call + 8 >> 2] | 0;
 }
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, HEAP32[$__b >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, $cond_i_i1117, $cond_i_i1117 + $cond_i | 0);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $__lo2_addr_011 = 0, $__lo1_addr_010 = 0, $0 = 0, $1 = 0, $incdec_ptr = 0, $incdec_ptr7 = 0, $__lo1_addr_0_lcssa = 0, $retval_0 = 0, label = 0;
 L1 : do {
  if (($__lo2 | 0) == ($__hi2 | 0)) {
   $__lo1_addr_0_lcssa = $__lo1;
  } else {
   $__lo1_addr_010 = $__lo1;
   $__lo2_addr_011 = $__lo2;
   while (1) {
    if (($__lo1_addr_010 | 0) == ($__hi1 | 0)) {
     $retval_0 = -1;
     label = 7;
     break;
    }
    $0 = HEAP32[$__lo1_addr_010 >> 2] | 0;
    $1 = HEAP32[$__lo2_addr_011 >> 2] | 0;
    if (($0 | 0) < ($1 | 0)) {
     $retval_0 = -1;
     label = 7;
     break;
    }
    if (($1 | 0) < ($0 | 0)) {
     $retval_0 = 1;
     label = 7;
     break;
    }
    $incdec_ptr = $__lo1_addr_010 + 4 | 0;
    $incdec_ptr7 = $__lo2_addr_011 + 4 | 0;
    if (($incdec_ptr7 | 0) == ($__hi2 | 0)) {
     $__lo1_addr_0_lcssa = $incdec_ptr;
     break L1;
    } else {
     $__lo1_addr_010 = $incdec_ptr;
     $__lo2_addr_011 = $incdec_ptr7;
    }
   }
   if ((label | 0) == 7) {
    return $retval_0 | 0;
   }
  }
 } while (0);
 $retval_0 = ($__lo1_addr_0_lcssa | 0) != ($__hi1 | 0) | 0;
 return $retval_0 | 0;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $__extbuf = 0, $__extbe = 0, $__cv_ = 0, $__st_ = 0, $arraydecay = 0, $add_ptr = 0, $sub_ptr_rhs_cast = 0, $__file_ = 0, $0 = 0, $call_i = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp | 0;
 $__extbe = sp + 8 | 0;
 $__cv_ = $this + 36 | 0;
 $__st_ = $this + 40 | 0;
 $arraydecay = $__extbuf | 0;
 $add_ptr = $__extbuf + 8 | 0;
 $sub_ptr_rhs_cast = $__extbuf;
 $__file_ = $this + 32 | 0;
 while (1) {
  $0 = HEAP32[$__cv_ >> 2] | 0;
  $call_i = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] & 63]($0, HEAP32[$__st_ >> 2] | 0, $arraydecay, $add_ptr, $__extbe) | 0;
  $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
  if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_ >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
   $retval_0 = -1;
   label = 5;
   break;
  }
  if (($call_i | 0) == 2) {
   $retval_0 = -1;
   label = 5;
   break;
  } else if (($call_i | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) {
  $retval_0 = ((_fflush(HEAP32[$__file_ >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else if ((label | 0) == 5) {
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $__extbuf = 0, $__extbe = 0, $__cv_ = 0, $__st_ = 0, $arraydecay = 0, $add_ptr = 0, $sub_ptr_rhs_cast = 0, $__file_ = 0, $0 = 0, $call_i = 0, $sub_ptr_sub = 0, $retval_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp | 0;
 $__extbe = sp + 8 | 0;
 $__cv_ = $this + 36 | 0;
 $__st_ = $this + 40 | 0;
 $arraydecay = $__extbuf | 0;
 $add_ptr = $__extbuf + 8 | 0;
 $sub_ptr_rhs_cast = $__extbuf;
 $__file_ = $this + 32 | 0;
 while (1) {
  $0 = HEAP32[$__cv_ >> 2] | 0;
  $call_i = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] & 63]($0, HEAP32[$__st_ >> 2] | 0, $arraydecay, $add_ptr, $__extbe) | 0;
  $sub_ptr_sub = (HEAP32[$__extbe >> 2] | 0) - $sub_ptr_rhs_cast | 0;
  if ((_fwrite($arraydecay | 0, 1, $sub_ptr_sub | 0, HEAP32[$__file_ >> 2] | 0) | 0) != ($sub_ptr_sub | 0)) {
   $retval_0 = -1;
   label = 5;
   break;
  }
  if (($call_i | 0) == 2) {
   $retval_0 = -1;
   label = 5;
   break;
  } else if (($call_i | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) {
  $retval_0 = ((_fflush(HEAP32[$__file_ >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = sp;
  return $retval_0 | 0;
 } else if ((label | 0) == 5) {
  STACKTOP = sp;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $__s = 0, $0 = 0, $vbase_offset = 0, $2 = 0, $__ok__i7 = 0, $9 = 0, $vbase_offset9_pre = 0, $11 = 0, $vbase_offset18 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__s = sp | 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $__ok__i7 = $__s | 0;
 HEAP8[$__ok__i7 >> 0] = 0;
 HEAP32[$__s + 4 >> 2] = $this;
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) == 0) {
  $9 = HEAP32[$2 + ($vbase_offset + 72) >> 2] | 0;
  if (($9 | 0) == 0) {
   $vbase_offset9_pre = $vbase_offset;
  } else {
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($9);
   $vbase_offset9_pre = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
  }
  HEAP8[$__ok__i7 >> 0] = 1;
  $11 = HEAP32[$2 + ($vbase_offset9_pre + 24) >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 255]($11) | 0) == -1) {
   $vbase_offset18 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
   __ZNSt3__18ios_base5clearEj($2 + $vbase_offset18 | 0, HEAP32[$2 + ($vbase_offset18 + 16) >> 2] | 1);
  }
 }
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $__s = 0, $0 = 0, $vbase_offset = 0, $2 = 0, $__ok__i7 = 0, $9 = 0, $vbase_offset9_pre = 0, $11 = 0, $vbase_offset18 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $__s = sp | 0;
 $0 = $this;
 $vbase_offset = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
 $2 = $this;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $__ok__i7 = $__s | 0;
 HEAP8[$__ok__i7 >> 0] = 0;
 HEAP32[$__s + 4 >> 2] = $this;
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) == 0) {
  $9 = HEAP32[$2 + ($vbase_offset + 72) >> 2] | 0;
  if (($9 | 0) == 0) {
   $vbase_offset9_pre = $vbase_offset;
  } else {
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9);
   $vbase_offset9_pre = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
  }
  HEAP8[$__ok__i7 >> 0] = 1;
  $11 = HEAP32[$2 + ($vbase_offset9_pre + 24) >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] & 255]($11) | 0) == -1) {
   $vbase_offset18 = HEAP32[(HEAP32[$0 >> 2] | 0) - 12 >> 2] | 0;
   __ZNSt3__18ios_base5clearEj($2 + $vbase_offset18 | 0, HEAP32[$2 + ($vbase_offset18 + 16) >> 2] | 1);
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $3 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0, $6 = 0;
 if (($this | 0) != (HEAP32[$info + 8 >> 2] | 0)) {
  $6 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, $info, $adjustedPtr, $path_below);
  return;
 }
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $3 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($3 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  return;
 }
 if (($3 | 0) != ($adjustedPtr | 0)) {
  $number_to_static_ptr11_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
  HEAP32[$info + 24 >> 2] = 2;
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
 if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
  return;
 }
 HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
 return;
}
function __Z14duAppendCircleP11duDebugDrawffffj($dd, $x, $y, $z, $r, $col) {
 $dd = $dd | 0;
 $x = +$x;
 $y = +$y;
 $z = +$z;
 $r = +$r;
 $col = $col | 0;
 var $0 = 0, $i_024 = 0, $mul3 = 0.0, $call = 0.0, $mul4 = 0, $call5 = 0.0, $j_023 = 0, $i9_022 = 0, $mul13 = 0, $mul25 = 0, $inc36 = 0;
 if (($dd | 0) == 0) {
  return;
 }
 if (!(HEAP8[11536] | 0)) {
  HEAP8[11536] = 1;
  $i_024 = 0;
  do {
   $mul3 = +($i_024 | 0) / 40.0 * 3.1415927410125732 * 2.0;
   $call = +Math_cos($mul3);
   $mul4 = $i_024 << 1;
   HEAPF32[22448 + ($mul4 << 2) >> 2] = $call;
   $call5 = +Math_sin($mul3);
   HEAPF32[22448 + (($mul4 | 1) << 2) >> 2] = $call5;
   $i_024 = $i_024 + 1 | 0;
  } while (($i_024 | 0) < 40);
 }
 $0 = $dd;
 $i9_022 = 0;
 $j_023 = 39;
 while (1) {
  $mul13 = $j_023 << 1;
  FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[22448 + ($mul13 << 2) >> 2] * $r + $x, $y, +HEAPF32[22448 + (($mul13 | 1) << 2) >> 2] * $r + $z, $col);
  $mul25 = $i9_022 << 1;
  FUNCTION_TABLE_vifffi[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 31]($dd, +HEAPF32[22448 + ($mul25 << 2) >> 2] * $r + $x, $y, +HEAPF32[22448 + (($mul25 | 1) << 2) >> 2] * $r + $z, $col);
  $inc36 = $i9_022 + 1 | 0;
  if (($inc36 | 0) < 40) {
   $j_023 = $i9_022;
   $i9_022 = $inc36;
  } else {
   break;
  }
 }
 return;
}
function __ZN11DebugDrawGL6vertexEPKfjS1_($this, $pos, $color, $uv) {
 $this = $this | 0;
 $pos = $pos | 0;
 $color = $color | 0;
 $uv = $uv | 0;
 var $0 = 0, $1 = 0.0, $3 = 0.0, $5 = 0.0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 $0 = sp | 0;
 $1 = +HEAPF32[$pos >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $1, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $3 = +HEAPF32[$pos + 4 >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $3, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $5 = +HEAPF32[$pos + 8 >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $5, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 _sprintf($0 | 0, 3728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $1, HEAPF64[tempVarArgs + 8 >> 3] = $3, HEAPF64[tempVarArgs + 16 >> 3] = $5, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($0 | 0);
 $$etemp$1$0 = 1024;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZN14dtNavMeshQueryD2Ev($this) {
 $this = $this | 0;
 var $m_tinyNodePool = 0, $0 = 0, $1 = 0, $3 = 0, $5 = 0, $m_nodePool = 0, $7 = 0, $8 = 0, $10 = 0, $12 = 0, $m_openList = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0;
 $m_tinyNodePool = $this + 52 | 0;
 $0 = HEAP32[$m_tinyNodePool >> 2] | 0;
 if (($0 | 0) != 0) {
  $1 = HEAP32[$0 >> 2] | 0;
  if (($1 | 0) != 0) {
   _free($1);
  }
  $3 = HEAP32[$0 + 8 >> 2] | 0;
  if (($3 | 0) != 0) {
   _free($3);
  }
  $5 = HEAP32[$0 + 4 >> 2] | 0;
  if (($5 | 0) != 0) {
   _free($5);
  }
 }
 $m_nodePool = $this + 56 | 0;
 $7 = HEAP32[$m_nodePool >> 2] | 0;
 if (($7 | 0) != 0) {
  $8 = HEAP32[$7 >> 2] | 0;
  if (($8 | 0) != 0) {
   _free($8);
  }
  $10 = HEAP32[$7 + 8 >> 2] | 0;
  if (($10 | 0) != 0) {
   _free($10);
  }
  $12 = HEAP32[$7 + 4 >> 2] | 0;
  if (($12 | 0) != 0) {
   _free($12);
  }
 }
 $m_openList = $this + 60 | 0;
 $14 = HEAP32[$m_openList >> 2] | 0;
 if (($14 | 0) != 0) {
  $15 = HEAP32[$14 >> 2] | 0;
  if (($15 | 0) != 0) {
   _free($15);
  }
 }
 $17 = HEAP32[$m_tinyNodePool >> 2] | 0;
 if (($17 | 0) != 0) {
  _free($17);
 }
 $19 = HEAP32[$m_nodePool >> 2] | 0;
 if (($19 | 0) != 0) {
  _free($19);
 }
 $21 = HEAP32[$m_openList >> 2] | 0;
 if (($21 | 0) == 0) {
  return;
 }
 _free($21);
 return;
}
function __ZN11DebugDrawGL6vertexEPKfj($this, $pos, $color) {
 $this = $this | 0;
 $pos = $pos | 0;
 $color = $color | 0;
 var $0 = 0, $1 = 0.0, $3 = 0.0, $5 = 0.0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 $0 = sp | 0;
 $1 = +HEAPF32[$pos >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $1, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $3 = +HEAPF32[$pos + 4 >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $3, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 $5 = +HEAPF32[$pos + 8 >> 2];
 if (((HEAPF32[tempDoublePtr >> 2] = $5, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 _sprintf($0 | 0, 3728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $1, HEAPF64[tempVarArgs + 8 >> 3] = $3, HEAPF64[tempVarArgs + 16 >> 3] = $5, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($0 | 0);
 $$etemp$1$0 = 1024;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZN10emscripten8internal7InvokerIbJNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFbS8_EPNS0_11BindingTypeIS8_EUt_E($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $agg_tmp = 0, $0 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0, $call = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp = sp | 0;
 $0 = HEAP32[$args >> 2] | 0;
 if ($0 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  return 0;
 }
 if ($0 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_tmp >> 0] = $0 << 1;
  $__p_0_i_i_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i_i_i = $0 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $0;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $args + 4 | 0, $0) | 0;
 HEAP8[$__p_0_i_i_i + $0 >> 0] = 0;
 $call = FUNCTION_TABLE_ii[$fn & 255]($agg_tmp) | 0;
 if ((HEAP8[$agg_tmp >> 0] & 1) == 0) {
  STACKTOP = sp;
  return $call | 0;
 }
 $2 = HEAP32[$agg_tmp + 8 >> 2] | 0;
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return $call | 0;
 }
 _free($2);
 STACKTOP = sp;
 return $call | 0;
}
function __Z13dtFreeNavMeshP9dtNavMesh($navmesh) {
 $navmesh = $navmesh | 0;
 var $m_maxTiles_i = 0, $0 = 0, $m_tiles_i = 0, $1 = 0, $2 = 0, $i_07_i = 0, $4 = 0, $_pre8_i = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0;
 if (($navmesh | 0) == 0) {
  return;
 }
 $m_maxTiles_i = $navmesh + 48 | 0;
 $0 = HEAP32[$m_maxTiles_i >> 2] | 0;
 if (($0 | 0) > 0) {
  $m_tiles_i = $navmesh + 68 | 0;
  $i_07_i = 0;
  $2 = HEAP32[$m_tiles_i >> 2] | 0;
  $1 = $0;
  while (1) {
   if ((HEAP32[$2 + ($i_07_i * 60 | 0) + 52 >> 2] & 1 | 0) == 0) {
    $7 = $2;
    $6 = $1;
   } else {
    $4 = HEAP32[$2 + ($i_07_i * 60 | 0) + 44 >> 2] | 0;
    if (($4 | 0) == 0) {
     $5 = $2;
     $_pre8_i = $1;
    } else {
     _free($4);
     $5 = HEAP32[$m_tiles_i >> 2] | 0;
     $_pre8_i = HEAP32[$m_maxTiles_i >> 2] | 0;
    }
    HEAP32[$5 + ($i_07_i * 60 | 0) + 44 >> 2] = 0;
    HEAP32[$5 + ($i_07_i * 60 | 0) + 48 >> 2] = 0;
    $7 = $5;
    $6 = $_pre8_i;
   }
   $i_07_i = $i_07_i + 1 | 0;
   if (($i_07_i | 0) >= ($6 | 0)) {
    break;
   } else {
    $2 = $7;
    $1 = $6;
   }
  }
 }
 $8 = HEAP32[$navmesh + 60 >> 2] | 0;
 if (($8 | 0) != 0) {
  _free($8);
 }
 $10 = HEAP32[$navmesh + 68 >> 2] | 0;
 if (($10 | 0) != 0) {
  _free($10);
 }
 _free($navmesh);
 return;
}
function __ZNKSt3__119__iostream_category7messageEi($agg_result, $this, $ev) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $call_i = 0, $call_i_i_i = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0, $call_i_i_i1 = 0;
 if (($ev | 0) == 1) {
  $call_i_i_i1 = __Znwj(48) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i1;
  HEAP32[$agg_result >> 2] = 49;
  HEAP32[$agg_result + 4 >> 2] = 35;
  _memcpy($call_i_i_i1 | 0, 9408, 35) | 0;
  HEAP8[$call_i_i_i1 + 35 >> 0] = 0;
  return;
 }
 $call_i = _strerror($ev | 0) | 0;
 $call_i_i_i = _strlen($call_i | 0) | 0;
 if ($call_i_i_i >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($call_i_i_i >>> 0 < 11 >>> 0) {
  HEAP8[$agg_result >> 0] = $call_i_i_i << 1;
  $__p_0_i_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i_i = $call_i_i_i + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $call_i_i_i;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $call_i | 0, $call_i_i_i) | 0;
 HEAP8[$__p_0_i_i_i + $call_i_i_i >> 0] = 0;
 return;
}
function __ZN11DebugDrawGL6vertexEfffjff($this, $x, $y, $z, $color, $u, $v) {
 $this = $this | 0;
 $x = +$x;
 $y = +$y;
 $z = +$z;
 $color = $color | 0;
 $u = +$u;
 $v = +$v;
 var $0 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 $0 = sp | 0;
 if (((HEAPF32[tempDoublePtr >> 2] = $x, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if (((HEAPF32[tempDoublePtr >> 2] = $y, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if (((HEAPF32[tempDoublePtr >> 2] = $z, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 _sprintf($0 | 0, 3728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $x, HEAPF64[tempVarArgs + 8 >> 3] = $y, HEAPF64[tempVarArgs + 16 >> 3] = $z, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($0 | 0);
 $$etemp$1$0 = 1024;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZN10emscripten8internal7InvokerIvJNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvS8_EPNS0_11BindingTypeIS8_EUt_E($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $agg_tmp = 0, $0 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $agg_tmp = sp | 0;
 $0 = HEAP32[$args >> 2] | 0;
 if ($0 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($0 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_tmp >> 0] = $0 << 1;
  $__p_0_i_i_i = $agg_tmp + 1 | 0;
 } else {
  $and_i_i_i_i_i = $0 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_tmp + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_tmp >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_tmp + 4 >> 2] = $0;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $args + 4 | 0, $0) | 0;
 HEAP8[$__p_0_i_i_i + $0 >> 0] = 0;
 FUNCTION_TABLE_vi[$fn & 511]($agg_tmp);
 if ((HEAP8[$agg_tmp >> 0] & 1) == 0) {
  STACKTOP = sp;
  return;
 }
 $2 = HEAP32[$agg_tmp + 8 >> 2] | 0;
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _free($2);
 STACKTOP = sp;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__ninp_ = 0, $__einp_ = 0, $__i_08 = 0, $__s_addr_07 = 0, $1 = 0, $call4 = 0, $storemerge = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $__einp_ = $this + 16 | 0;
 $__s_addr_07 = $__s;
 $__i_08 = 0;
 while (1) {
  $1 = HEAP32[$__ninp_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__einp_ >> 2] | 0) >>> 0) {
   HEAP32[$__ninp_ >> 2] = $1 + 4;
   $storemerge = HEAP32[$1 >> 2] | 0;
  } else {
   $call4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($this) | 0;
   if (($call4 | 0) == -1) {
    $__i_0_lcssa = $__i_08;
    label = 7;
    break;
   } else {
    $storemerge = $call4;
   }
  }
  HEAP32[$__s_addr_07 >> 2] = $storemerge;
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 4 | 0;
   $__i_08 = $inc;
  } else {
   $__i_0_lcssa = $inc;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __Z17bareGeomAddVertexfffi($x, $y, $z, $cap) {
 $x = +$x;
 $y = +$y;
 $z = +$z;
 $cap = $cap | 0;
 var $0 = 0, $m_vertCount_i = 0, $1 = 0, $2$0 = 0, $call_i_i = 0, $9 = 0, $10 = 0, $m_verts9_pre_i = 0, $13 = 0, $14 = 0, $mul12_i = 0, $m_scale_i = 0;
 $0 = HEAP32[4898] | 0;
 $m_vertCount_i = $0 + 276 | 0;
 $1 = HEAP32[$m_vertCount_i >> 2] | 0;
 if (($1 | 0) < ($cap | 0)) {
  $14 = $1;
  $13 = HEAP32[$0 + 264 >> 2] | 0;
 } else {
  $2$0 = _llvm_umul_with_overflow_i32((($cap | 0) == 0 ? 24 : $cap * 6 | 0) | 0, 4) | 0;
  $call_i_i = __Znwj(tempRet0 ? -1 : $2$0) | 0;
  $9 = $call_i_i;
  $10 = HEAP32[$m_vertCount_i >> 2] | 0;
  $m_verts9_pre_i = $0 + 264 | 0;
  if (($10 | 0) != 0) {
   _memcpy($call_i_i | 0, HEAP32[$m_verts9_pre_i >> 2] | 0, $10 * 12 | 0) | 0;
  }
  HEAP32[$m_verts9_pre_i >> 2] = $9;
  $14 = $10;
  $13 = $9;
 }
 $mul12_i = $14 * 3 | 0;
 $m_scale_i = $0 + 260 | 0;
 HEAPF32[$13 + ($mul12_i << 2) >> 2] = +HEAPF32[$m_scale_i >> 2] * $x;
 HEAPF32[$13 + ($mul12_i + 1 << 2) >> 2] = +HEAPF32[$m_scale_i >> 2] * $y;
 HEAPF32[$13 + ($mul12_i + 2 << 2) >> 2] = +HEAPF32[$m_scale_i >> 2] * $z;
 HEAP32[$m_vertCount_i >> 2] = $14 + 1;
 return;
}
function __ZN11DebugDrawGL6vertexEfffj($this, $x, $y, $z, $color) {
 $this = $this | 0;
 $x = +$x;
 $y = +$y;
 $z = +$z;
 $color = $color | 0;
 var $0 = 0, $$etemp$1$0 = 0, $$etemp$1$1 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 $0 = sp | 0;
 if (((HEAPF32[tempDoublePtr >> 2] = $x, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if (((HEAPF32[tempDoublePtr >> 2] = $y, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 if (((HEAPF32[tempDoublePtr >> 2] = $z, HEAP32[tempDoublePtr >> 2] | 0) & 2147483647) >>> 0 > 2139095040 >>> 0) {
  $$etemp$1$0 = 1024;
  $$etemp$1$1 = 0;
  STACKTOP = sp;
  return;
 }
 _sprintf($0 | 0, 3728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAPF64[tempVarArgs >> 3] = $x, HEAPF64[tempVarArgs + 8 >> 3] = $y, HEAPF64[tempVarArgs + 16 >> 3] = $z, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _emscripten_run_script($0 | 0);
 $$etemp$1$0 = 1024;
 $$etemp$1$1 = 0;
 STACKTOP = sp;
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $dst_ptr_leading_to_static_ptr_i = 0, $1 = 0, $path_dst_ptr_to_static_ptr6_i = 0, $number_to_static_ptr11_i = 0;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  return;
 }
 $dst_ptr_leading_to_static_ptr_i = $info + 16 | 0;
 $1 = HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] | 0;
 if (($1 | 0) == 0) {
  HEAP32[$dst_ptr_leading_to_static_ptr_i >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  return;
 }
 if (($1 | 0) != ($adjustedPtr | 0)) {
  $number_to_static_ptr11_i = $info + 36 | 0;
  HEAP32[$number_to_static_ptr11_i >> 2] = (HEAP32[$number_to_static_ptr11_i >> 2] | 0) + 1;
  HEAP32[$info + 24 >> 2] = 2;
  HEAP8[$info + 54 >> 0] = 1;
  return;
 }
 $path_dst_ptr_to_static_ptr6_i = $info + 24 | 0;
 if ((HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] | 0) != 2) {
  return;
 }
 HEAP32[$path_dst_ptr_to_static_ptr6_i >> 2] = $path_below;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__ninp_ = 0, $__einp_ = 0, $__i_08 = 0, $__s_addr_07 = 0, $1 = 0, $call4 = 0, $storemerge = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $__einp_ = $this + 16 | 0;
 $__s_addr_07 = $__s;
 $__i_08 = 0;
 while (1) {
  $1 = HEAP32[$__ninp_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__einp_ >> 2] | 0) >>> 0) {
   HEAP32[$__ninp_ >> 2] = $1 + 1;
   $storemerge = HEAP8[$1 >> 0] | 0;
  } else {
   $call4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 255]($this) | 0;
   if (($call4 | 0) == -1) {
    $__i_0_lcssa = $__i_08;
    label = 8;
    break;
   }
   $storemerge = $call4 & 255;
  }
  HEAP8[$__s_addr_07 >> 0] = $storemerge;
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 1 | 0;
   $__i_08 = $inc;
  } else {
   $__i_0_lcssa = $inc;
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__size__i6_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0;
 $__size__i6_i_i = $this + 16 | 0;
 if ((HEAP8[$__size__i6_i_i >> 0] & 1) == 0) {
  $1 = $agg_result;
  HEAP32[$1 >> 2] = HEAP32[$__size__i6_i_i >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$__size__i6_i_i + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$__size__i6_i_i + 8 >> 2];
  return;
 }
 $2 = HEAP32[$this + 24 >> 2] | 0;
 $3 = HEAP32[$this + 20 >> 2] | 0;
 if ($3 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($3 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_result >> 0] = $3 << 1;
  $__p_0_i_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i_i = $3 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $3;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $2 | 0, $3) | 0;
 HEAP8[$__p_0_i_i_i + $3 >> 0] = 0;
 return;
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__size__i6_i_i = 0, $1 = 0, $2 = 0, $3 = 0, $and_i_i_i_i_i = 0, $call_i_i_i_i_i = 0, $__p_0_i_i_i = 0;
 $__size__i6_i_i = $this + 12 | 0;
 if ((HEAP8[$__size__i6_i_i >> 0] & 1) == 0) {
  $1 = $agg_result;
  HEAP32[$1 >> 2] = HEAP32[$__size__i6_i_i >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$__size__i6_i_i + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$__size__i6_i_i + 8 >> 2];
  return;
 }
 $2 = HEAP32[$this + 20 >> 2] | 0;
 $3 = HEAP32[$this + 16 >> 2] | 0;
 if ($3 >>> 0 > 4294967279 >>> 0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
 }
 if ($3 >>> 0 < 11 >>> 0) {
  HEAP8[$agg_result >> 0] = $3 << 1;
  $__p_0_i_i_i = $agg_result + 1 | 0;
 } else {
  $and_i_i_i_i_i = $3 + 16 & -16;
  $call_i_i_i_i_i = __Znwj($and_i_i_i_i_i) | 0;
  HEAP32[$agg_result + 8 >> 2] = $call_i_i_i_i_i;
  HEAP32[$agg_result >> 2] = $and_i_i_i_i_i | 1;
  HEAP32[$agg_result + 4 >> 2] = $3;
  $__p_0_i_i_i = $call_i_i_i_i_i;
 }
 _memcpy($__p_0_i_i_i | 0, $2 | 0, $3) | 0;
 HEAP8[$__p_0_i_i_i + $3 >> 0] = 0;
 return;
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this_0_0_val, $x) {
 $this_0_0_val = $this_0_0_val | 0;
 $x = $x | 0;
 var $__p_i_i = 0, $__state__i_i = 0, $sub_i = 0, $4 = 0, $5 = 0, $exception_i = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p_i_i = sp | 0;
 $__state__i_i = $x | 0;
 if (!((HEAP32[$__state__i_i >> 2] | 0) == -1)) {
  HEAP32[$__p_i_i >> 2] = $x;
  HEAP32[$__p_i_i + 4 >> 2] = 34;
  HEAP32[$__p_i_i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($__state__i_i, $__p_i_i);
 }
 $sub_i = (HEAP32[$x + 4 >> 2] | 0) - 1 | 0;
 $4 = HEAP32[$this_0_0_val + 8 >> 2] | 0;
 if (!((HEAP32[$this_0_0_val + 12 >> 2] | 0) - $4 >> 2 >>> 0 > $sub_i >>> 0)) {
  $exception_i = ___cxa_allocate_exception(4) | 0;
  $6 = $exception_i;
  HEAP32[$6 >> 2] = 11608;
  ___cxa_throw($exception_i | 0, 17848, 212);
  return 0;
 }
 $5 = HEAP32[$4 + ($sub_i << 2) >> 2] | 0;
 if (($5 | 0) == 0) {
  $exception_i = ___cxa_allocate_exception(4) | 0;
  $6 = $exception_i;
  HEAP32[$6 >> 2] = 11608;
  ___cxa_throw($exception_i | 0, 17848, 212);
  return 0;
 } else {
  STACKTOP = sp;
  return $5 | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__nout_ = 0, $__eout_ = 0, $__s_addr_07 = 0, $__i_06 = 0, $1 = 0, $3 = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__nout_ = $this + 24 | 0;
 $__eout_ = $this + 28 | 0;
 $__i_06 = 0;
 $__s_addr_07 = $__s;
 while (1) {
  $1 = HEAP32[$__nout_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__eout_ >> 2] | 0) >>> 0) {
   $3 = HEAP32[$__s_addr_07 >> 2] | 0;
   HEAP32[$__nout_ >> 2] = $1 + 4;
   HEAP32[$1 >> 2] = $3;
  } else {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$__s_addr_07 >> 2] | 0) | 0) == -1) {
    $__i_0_lcssa = $__i_06;
    label = 7;
    break;
   }
  }
  $inc = $__i_06 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__i_06 = $inc;
   $__s_addr_07 = $__s_addr_07 + 4 | 0;
  } else {
   $__i_0_lcssa = $inc;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $__nout_ = 0, $__eout_ = 0, $__s_addr_07 = 0, $__i_06 = 0, $1 = 0, $3 = 0, $inc = 0, $__i_0_lcssa = 0, label = 0;
 $0 = $this;
 if (($__n | 0) <= 0) {
  $__i_0_lcssa = 0;
  return $__i_0_lcssa | 0;
 }
 $__nout_ = $this + 24 | 0;
 $__eout_ = $this + 28 | 0;
 $__i_06 = 0;
 $__s_addr_07 = $__s;
 while (1) {
  $1 = HEAP32[$__nout_ >> 2] | 0;
  if ($1 >>> 0 < (HEAP32[$__eout_ >> 2] | 0) >>> 0) {
   $3 = HEAP8[$__s_addr_07 >> 0] | 0;
   HEAP32[$__nout_ >> 2] = $1 + 1;
   HEAP8[$1 >> 0] = $3;
  } else {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$__s_addr_07 >> 0] | 0) | 0) == -1) {
    $__i_0_lcssa = $__i_06;
    label = 7;
    break;
   }
  }
  $inc = $__i_06 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__i_06 = $inc;
   $__s_addr_07 = $__s_addr_07 + 1 | 0;
  } else {
   $__i_0_lcssa = $inc;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  return $__i_0_lcssa | 0;
 }
 return 0;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $__os_ = 0, $ref = 0, $vbase_offset = 0, $2 = 0, $ref23 = 0, $13 = 0, $ref34 = 0, $vbase_offset37 = 0, $19 = 0;
 $__os_ = $this + 4 | 0;
 $ref = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset = HEAP32[(HEAP32[$ref >> 2] | 0) - 12 >> 2] | 0;
 $2 = $ref;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) != 0) {
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 4) >> 2] & 8192 | 0) == 0) {
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  return;
 }
 $ref23 = HEAP32[$__os_ >> 2] | 0;
 $13 = HEAP32[$ref23 + ((HEAP32[(HEAP32[$ref23 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
 if (!((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 255]($13) | 0) == -1)) {
  return;
 }
 $ref34 = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset37 = HEAP32[(HEAP32[$ref34 >> 2] | 0) - 12 >> 2] | 0;
 $19 = $ref34;
 __ZNSt3__18ios_base5clearEj($19 + $vbase_offset37 | 0, HEAP32[$19 + ($vbase_offset37 + 16) >> 2] | 1);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $__os_ = 0, $ref = 0, $vbase_offset = 0, $2 = 0, $ref23 = 0, $13 = 0, $ref34 = 0, $vbase_offset37 = 0, $19 = 0;
 $__os_ = $this + 4 | 0;
 $ref = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset = HEAP32[(HEAP32[$ref >> 2] | 0) - 12 >> 2] | 0;
 $2 = $ref;
 if ((HEAP32[$2 + ($vbase_offset + 24) >> 2] | 0) == 0) {
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 16) >> 2] | 0) != 0) {
  return;
 }
 if ((HEAP32[$2 + ($vbase_offset + 4) >> 2] & 8192 | 0) == 0) {
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  return;
 }
 $ref23 = HEAP32[$__os_ >> 2] | 0;
 $13 = HEAP32[$ref23 + ((HEAP32[(HEAP32[$ref23 >> 2] | 0) - 12 >> 2] | 0) + 24) >> 2] | 0;
 if (!((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 255]($13) | 0) == -1)) {
  return;
 }
 $ref34 = HEAP32[$__os_ >> 2] | 0;
 $vbase_offset37 = HEAP32[(HEAP32[$ref34 >> 2] | 0) - 12 >> 2] | 0;
 $19 = $ref34;
 __ZNSt3__18ios_base5clearEj($19 + $vbase_offset37 | 0, HEAP32[$19 + ($vbase_offset37 + 16) >> 2] | 1);
 return;
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev() {
 __embind_register_void(17808, 3784);
 __embind_register_bool(17816, 7872, 1, 1, 0);
 __embind_register_integer(__ZTIc | 0, 6448, 1, -128 | 0, 127);
 __embind_register_integer(__ZTIa | 0, 5432, 1, -128 | 0, 127);
 __embind_register_integer(__ZTIh | 0, 4400, 1, 0, 255);
 __embind_register_integer(__ZTIs | 0, 3616, 2, -32768 | 0, 32767);
 __embind_register_integer(__ZTIt | 0, 2560, 2, 0, 65535);
 __embind_register_integer(__ZTIi | 0, 1808, 4, -2147483648 | 0, 2147483647);
 __embind_register_integer(__ZTIj | 0, 1208, 4, 0, -1 | 0);
 __embind_register_integer(__ZTIl | 0, 776, 4, -2147483648 | 0, 2147483647);
 __embind_register_integer(__ZTIm | 0, 9920, 4, 0, -1 | 0);
 __embind_register_float(__ZTIf | 0, 9264, 4);
 __embind_register_float(__ZTId | 0, 8576, 8);
 __embind_register_std_string(19120, 8192);
 __embind_register_std_string(19096, 7960);
 __embind_register_std_wstring(19072, 4, 7824);
 __embind_register_emval(19408, 7584);
 __embind_register_memory_view(19416, 7464);
 return;
}
function __Z19bareGeomAddTriangleiiii($a, $b, $c, $cap) {
 $a = $a | 0;
 $b = $b | 0;
 $c = $c | 0;
 $cap = $cap | 0;
 var $0 = 0, $m_triCount_i = 0, $1 = 0, $2$0 = 0, $call_i_i = 0, $9 = 0, $10 = 0, $m_tris9_pre_i = 0, $13 = 0, $14 = 0, $mul12_i = 0;
 $0 = HEAP32[4898] | 0;
 $m_triCount_i = $0 + 280 | 0;
 $1 = HEAP32[$m_triCount_i >> 2] | 0;
 if (($1 | 0) < ($cap | 0)) {
  $14 = $1;
  $13 = HEAP32[$0 + 268 >> 2] | 0;
 } else {
  $2$0 = _llvm_umul_with_overflow_i32((($cap | 0) == 0 ? 24 : $cap * 6 | 0) | 0, 4) | 0;
  $call_i_i = __Znwj(tempRet0 ? -1 : $2$0) | 0;
  $9 = $call_i_i;
  $10 = HEAP32[$m_triCount_i >> 2] | 0;
  $m_tris9_pre_i = $0 + 268 | 0;
  if (($10 | 0) != 0) {
   _memcpy($call_i_i | 0, HEAP32[$m_tris9_pre_i >> 2] | 0, $10 * 12 | 0) | 0;
  }
  HEAP32[$m_tris9_pre_i >> 2] = $9;
  $14 = $10;
  $13 = $9;
 }
 $mul12_i = $14 * 3 | 0;
 HEAP32[$13 + ($mul12_i << 2) >> 2] = $a;
 HEAP32[$13 + ($mul12_i + 1 << 2) >> 2] = $b;
 HEAP32[$13 + ($mul12_i + 2 << 2) >> 2] = $c;
 HEAP32[$m_triCount_i >> 2] = (HEAP32[$m_triCount_i >> 2] | 0) + 1;
 return;
}
function _wcrtomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $call = 0, $retval_0 = 0;
 if (($s | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 128 >>> 0) {
  HEAP8[$s >> 0] = $wc;
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 2048 >>> 0) {
  HEAP8[$s >> 0] = $wc >>> 6 | 192;
  HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
  $retval_0 = 2;
  return $retval_0 | 0;
 }
 if ($wc >>> 0 < 55296 >>> 0 | ($wc & -8192 | 0) == 57344) {
  HEAP8[$s >> 0] = $wc >>> 12 | 224;
  HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
  $retval_0 = 3;
  return $retval_0 | 0;
 }
 if (($wc - 65536 | 0) >>> 0 < 1048576 >>> 0) {
  HEAP8[$s >> 0] = $wc >>> 18 | 240;
  HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
  $retval_0 = 4;
  return $retval_0 | 0;
 } else {
  $call = ___errno_location() | 0;
  HEAP32[$call >> 2] = 84;
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__fn__pre = 0, $__index__pre = 0, $i_05_i = 0, $__locale__i1 = 0, $6 = 0;
 HEAP32[$this >> 2] = 12328;
 $1 = HEAP32[$this + 40 >> 2] | 0;
 $__fn__pre = $this + 32 | 0;
 $__index__pre = $this + 36 | 0;
 if (($1 | 0) != 0) {
  $i_05_i = $1;
  do {
   $i_05_i = $i_05_i - 1 | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$__fn__pre >> 2] | 0) + ($i_05_i << 2) >> 2] & 31](0, $this, HEAP32[(HEAP32[$__index__pre >> 2] | 0) + ($i_05_i << 2) >> 2] | 0);
  } while (($i_05_i | 0) != 0);
 }
 $__locale__i1 = HEAP32[$this + 28 >> 2] | 0;
 $6 = $__locale__i1 + 4 | 0;
 if (((tempValue = HEAP32[$6 >> 2] | 0, HEAP32[$6 >> 2] = tempValue + -1, tempValue) | 0) == 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__locale__i1 >> 2] | 0) + 8 >> 2] & 511]($__locale__i1);
 }
 _free(HEAP32[$__fn__pre >> 2] | 0);
 _free(HEAP32[$__index__pre >> 2] | 0);
 _free(HEAP32[$this + 48 >> 2] | 0);
 _free(HEAP32[$this + 60 >> 2] | 0);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $$etemp$1 = 0, $st$2$0 = 0, $st$3$1 = 0;
 if ((HEAP8[24304] | 0) != 0) {
  return 22384;
 }
 if ((___cxa_guard_acquire(24304) | 0) == 0) {
  return 22384;
 }
 HEAP8[22384] = 16;
 $$etemp$1 = 22385;
 $st$2$0 = $$etemp$1 | 0;
 tempBigInt = 623865125;
 HEAP8[$st$2$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 3 >> 0] = tempBigInt;
 $st$3$1 = $$etemp$1 + 4 | 0;
 tempBigInt = 2032480100;
 HEAP8[$st$3$1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 3 >> 0] = tempBigInt;
 HEAP8[22393] = 0;
 _atexit(274, 22384, ___dso_handle | 0) | 0;
 return 22384;
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $$etemp$1 = 0, $st$2$0 = 0, $st$3$1 = 0;
 if ((HEAP8[24328] | 0) != 0) {
  return 22432;
 }
 if ((___cxa_guard_acquire(24328) | 0) == 0) {
  return 22432;
 }
 HEAP8[22432] = 16;
 $$etemp$1 = 22433;
 $st$2$0 = $$etemp$1 | 0;
 tempBigInt = 624576549;
 HEAP8[$st$2$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$2$0 + 3 >> 0] = tempBigInt;
 $st$3$1 = $$etemp$1 + 4 | 0;
 tempBigInt = 1394948685;
 HEAP8[$st$3$1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$st$3$1 + 3 >> 0] = tempBigInt;
 HEAP8[22441] = 0;
 _atexit(274, 22432, ___dso_handle | 0) | 0;
 return 22432;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 var $call = 0, $call3 = 0, $3 = 0, $memptr_adj_i_i_i_i_i = 0, $5 = 0, $memptr_ptr_i_i_i_i_i = 0, $10 = 0, $call6 = 0, $call8 = 0, $call19 = 0;
 $call;
 if ((HEAP32[$flag >> 2] | 0) == 1) {
  do {
   _pthread_cond_wait(23096, 23072) | 0;
  } while ((HEAP32[$flag >> 2] | 0) == 1);
 }
 if ((HEAP32[$flag >> 2] | 0) != 0) {
  $call19;
  return;
 }
 HEAP32[$flag >> 2] = 1;
 $call3;
 $3 = $arg + 4 | 0;
 $memptr_adj_i_i_i_i_i = HEAP32[$3 + 4 >> 2] | 0;
 $5 = (HEAP32[$arg >> 2] | 0) + ($memptr_adj_i_i_i_i_i >> 1) | 0;
 $memptr_ptr_i_i_i_i_i = HEAP32[$3 >> 2] | 0;
 if (($memptr_adj_i_i_i_i_i & 1 | 0) == 0) {
  $10 = $memptr_ptr_i_i_i_i_i;
 } else {
  $10 = HEAP32[(HEAP32[$5 >> 2] | 0) + $memptr_ptr_i_i_i_i_i >> 2] | 0;
 }
 FUNCTION_TABLE_vi[$10 & 511]($5);
 $call6;
 HEAP32[$flag >> 2] = -1;
 $call8;
 _pthread_cond_broadcast(23096) | 0;
 return;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $vec_addr_08 = 0, $low_addr_07 = 0, $0 = 0, $call_i = 0, $cond_off0 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
  $vec_addr_08 = $vec;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128 >>> 0) {
   $call_i = ___ctype_b_loc() | 0;
   $cond_off0 = HEAP16[(HEAP32[$call_i >> 2] | 0) + ($0 << 1) >> 1] | 0;
  } else {
   $cond_off0 = 0;
  }
  HEAP16[$vec_addr_08 >> 1] = $cond_off0;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
   $vec_addr_08 = $vec_addr_08 + 2 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $1 = 0, $__i_08 = 0, $__s_addr_07 = 0, $inc = 0, $retval_0 = 0, label = 0;
 if ((HEAP8[$this + 44 >> 0] | 0) != 0) {
  $retval_0 = _fwrite($__s | 0, 4, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
  return $retval_0 | 0;
 }
 $1 = $this;
 if (($__n | 0) > 0) {
  $__s_addr_07 = $__s;
  $__i_08 = 0;
 } else {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 while (1) {
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$1 >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$__s_addr_07 >> 2] | 0) | 0) == -1) {
   $retval_0 = $__i_08;
   label = 6;
   break;
  }
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 4 | 0;
   $__i_08 = $inc;
  } else {
   $retval_0 = $inc;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 6) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $1 = 0, $__i_08 = 0, $__s_addr_07 = 0, $inc = 0, $retval_0 = 0, label = 0;
 if ((HEAP8[$this + 44 >> 0] | 0) != 0) {
  $retval_0 = _fwrite($__s | 0, 1, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
  return $retval_0 | 0;
 }
 $1 = $this;
 if (($__n | 0) > 0) {
  $__s_addr_07 = $__s;
  $__i_08 = 0;
 } else {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 while (1) {
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$1 >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$__s_addr_07 >> 0] | 0) | 0) == -1) {
   $retval_0 = $__i_08;
   label = 6;
   break;
  }
  $inc = $__i_08 + 1 | 0;
  if (($inc | 0) < ($__n | 0)) {
   $__s_addr_07 = $__s_addr_07 + 1 | 0;
   $__i_08 = $inc;
  } else {
   $retval_0 = $inc;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 6) {
  return $retval_0 | 0;
 }
 return 0;
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $call_i = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 L1 : do {
  if (($low | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $low;
  } else {
   $low_addr_08 = $low;
   while (1) {
    $0 = HEAP32[$low_addr_08 >> 2] | 0;
    if (!($0 >>> 0 < 128 >>> 0)) {
     $low_addr_0_lcssa = $low_addr_08;
     break L1;
    }
    $call_i = ___ctype_b_loc() | 0;
    $incdec_ptr = $low_addr_08 + 4 | 0;
    if ((HEAP16[(HEAP32[$call_i >> 2] | 0) + ($0 << 1) >> 1] & $m) << 16 >> 16 == 0) {
     $low_addr_0_lcssa = $low_addr_08;
     break L1;
    }
    if (($incdec_ptr | 0) == ($high | 0)) {
     $low_addr_0_lcssa = $high;
     break;
    } else {
     $low_addr_08 = $incdec_ptr;
    }
   }
  }
 } while (0);
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $call_i = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0, label = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_08 >> 2] | 0;
  if ($0 >>> 0 < 128 >>> 0) {
   $call_i = ___ctype_b_loc() | 0;
   if (!((HEAP16[(HEAP32[$call_i >> 2] | 0) + ($0 << 1) >> 1] & $m) << 16 >> 16 == 0)) {
    $low_addr_0_lcssa = $low_addr_08;
    label = 7;
    break;
   }
  }
  $incdec_ptr = $low_addr_08 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   label = 7;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 if ((label | 0) == 7) {
  return $low_addr_0_lcssa | 0;
 }
 return 0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result, $this, HEAP32[$__b >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11064, 11096);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $__b;
 $__b = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__b >> 2] = HEAP32[tempParam >> 2];
 tempParam = $__e;
 $__e = STACKTOP;
 STACKTOP = STACKTOP + 4 | 0;
 STACKTOP = STACKTOP + 7 & -8;
 HEAP32[$__e >> 2] = HEAP32[tempParam >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result, $this, HEAP32[$__b >> 2] | 0, HEAP32[$__e >> 2] | 0, $__iob, $__err, $__tm, 11144, 11152);
 STACKTOP = sp;
 return;
}
function __Z16debugDrawNavMeshh($flags) {
 $flags = $flags | 0;
 var $0 = 0, $1 = 0, $2 = 0, $m_maxTiles_i_i = 0, $3 = 0, $m_tiles_i_i = 0, $4 = 0, $i_09_i = 0, $5 = 0, $7 = 0;
 $0 = HEAP32[4950] | 0;
 $1 = $0 | 0;
 $2 = HEAP32[4912] | 0;
 if (($0 | 0) == 0) {
  return;
 }
 $m_maxTiles_i_i = $2 + 48 | 0;
 $3 = HEAP32[$m_maxTiles_i_i >> 2] | 0;
 if (($3 | 0) <= 0) {
  return;
 }
 $m_tiles_i_i = $2 + 68 | 0;
 $i_09_i = 0;
 $4 = $3;
 while (1) {
  $5 = HEAP32[$m_tiles_i_i >> 2] | 0;
  if ((HEAP32[$5 + ($i_09_i * 60 | 0) + 8 >> 2] | 0) == 0) {
   $7 = $4;
  } else {
   __ZL12drawMeshTileP11duDebugDrawRK9dtNavMeshPK14dtNavMeshQueryPK10dtMeshTileh($1, $2, 0, $5 + ($i_09_i * 60 | 0) | 0, $flags);
   $7 = HEAP32[$m_maxTiles_i_i >> 2] | 0;
  }
  $i_09_i = $i_09_i + 1 | 0;
  if (($i_09_i | 0) >= ($7 | 0)) {
   break;
  } else {
   $4 = $7;
  }
 }
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv() {
 var $exception = 0, $0 = 0, $call_i1_i = 0, $add_ptr_i_i = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 $0 = $exception;
 HEAP32[$0 >> 2] = 11704;
 $call_i1_i = __Znwj(19) | 0;
 HEAP32[$call_i1_i + 4 >> 2] = 6;
 HEAP32[$call_i1_i >> 2] = 6;
 $add_ptr_i_i = $call_i1_i + 12 | 0;
 HEAP32[$exception + 4 >> 2] = $add_ptr_i_i;
 HEAP32[$call_i1_i + 8 >> 2] = 0;
 HEAP8[$add_ptr_i_i >> 0] = HEAP8[1376] | 0;
 HEAP8[$add_ptr_i_i + 1 >> 0] = HEAP8[1377] | 0;
 HEAP8[$add_ptr_i_i + 2 >> 0] = HEAP8[1378] | 0;
 HEAP8[$add_ptr_i_i + 3 >> 0] = HEAP8[1379] | 0;
 HEAP8[$add_ptr_i_i + 4 >> 0] = HEAP8[1380] | 0;
 HEAP8[$add_ptr_i_i + 5 >> 0] = HEAP8[1381] | 0;
 HEAP8[$add_ptr_i_i + 6 >> 0] = HEAP8[1382] | 0;
 HEAP32[$0 >> 2] = 11672;
 ___cxa_throw($exception | 0, 17880, 120);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $call_i = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08 >> 0] | 0;
  if ($0 << 24 >> 24 > -1) {
   $call_i = ___ctype_toupper_loc() | 0;
   $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($0 << 24 >> 24 << 2) >> 2] & 255;
  } else {
   $cond = $0;
  }
  HEAP8[$low_addr_08 >> 0] = $cond;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_08 = 0, $0 = 0, $call_i = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08 >> 0] | 0;
  if ($0 << 24 >> 24 > -1) {
   $call_i = ___ctype_tolower_loc() | 0;
   $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($0 << 24 >> 24 << 2) >> 2] & 255;
  } else {
   $cond = $0;
  }
  HEAP8[$low_addr_08 >> 0] = $cond;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZN9rcContext3logE13rcLogCategoryPKcz($this, $category, $format, varrp) {
 $this = $this | 0;
 $category = $category | 0;
 $format = $format | 0;
 varrp = varrp | 0;
 var $msg = 0, $ap = 0, $1 = 0, $arraydecay2 = 0, $call = 0, $len_0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 $msg = sp | 0;
 $ap = sp + 512 | 0;
 if ((HEAP8[$this + 4 >> 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $1 = $msg | 0;
 $arraydecay2 = $ap;
 HEAP32[$arraydecay2 >> 2] = varrp;
 HEAP32[$arraydecay2 + 4 >> 2] = 0;
 $call = _vsnprintf($1 | 0, 512, $format | 0, $ap | 0) | 0;
 if (($call | 0) > 511) {
  HEAP8[$msg + 511 >> 0] = 0;
  $len_0 = 511;
 } else {
  $len_0 = $call;
 }
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 63]($this, $category, $1, $len_0);
 STACKTOP = sp;
 return;
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $3 = 0, $dest_addr_08 = 0, $low_addr_07 = 0, $4 = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 }
 $3 = (($high - 4 - $low | 0) >>> 2) + 1 | 0;
 $low_addr_07 = $low;
 $dest_addr_08 = $dest;
 while (1) {
  $4 = HEAP32[$low_addr_07 >> 2] | 0;
  HEAP8[$dest_addr_08 >> 0] = $4 >>> 0 < 128 >>> 0 ? $4 & 255 : $dfault;
  $low_addr_07 = $low_addr_07 + 4 | 0;
  if (($low_addr_07 | 0) == ($high | 0)) {
   break;
  } else {
   $dest_addr_08 = $dest_addr_08 + 1 | 0;
  }
 }
 $low_addr_0_lcssa = $low + ($3 << 2) | 0;
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_07 = 0, $0 = 0, $call_i = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128 >>> 0) {
   $call_i = ___ctype_toupper_loc() | 0;
   $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($0 << 2) >> 2] | 0;
  } else {
   $cond = $0;
  }
  HEAP32[$low_addr_07 >> 2] = $cond;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $low_addr_07 = 0, $0 = 0, $call_i = 0, $cond = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_07 = $low;
 }
 while (1) {
  $0 = HEAP32[$low_addr_07 >> 2] | 0;
  if ($0 >>> 0 < 128 >>> 0) {
   $call_i = ___ctype_tolower_loc() | 0;
   $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($0 << 2) >> 2] | 0;
  } else {
   $cond = $0;
  }
  HEAP32[$low_addr_07 >> 2] = $cond;
  $incdec_ptr = $low_addr_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_07 = $incdec_ptr;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $call_i = 0, $0 = 0, $__cv_ = 0, $call_i1 = 0, $__encoding_ = 0, $3 = 0, $frombool = 0;
 $call_i = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[$__loc >> 2] | 0, 23336) | 0;
 $0 = $call_i;
 $__cv_ = $this + 36 | 0;
 HEAP32[$__cv_ >> 2] = $0;
 $call_i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$call_i >> 2] | 0) + 24 >> 2] & 255]($0) | 0;
 $__encoding_ = $this + 44 | 0;
 HEAP32[$__encoding_ >> 2] = $call_i1;
 $3 = HEAP32[$__cv_ >> 2] | 0;
 $frombool = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 255]($3) | 0) & 1;
 HEAP8[$this + 53 >> 0] = $frombool;
 if ((HEAP32[$__encoding_ >> 2] | 0) > 8) {
  __ZNSt3__121__throw_runtime_errorEPKc(736);
 } else {
  return;
 }
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $call_i = 0, $0 = 0, $__cv_ = 0, $call_i1 = 0, $__encoding_ = 0, $3 = 0, $frombool = 0;
 $call_i = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[$__loc >> 2] | 0, 23344) | 0;
 $0 = $call_i;
 $__cv_ = $this + 36 | 0;
 HEAP32[$__cv_ >> 2] = $0;
 $call_i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$call_i >> 2] | 0) + 24 >> 2] & 255]($0) | 0;
 $__encoding_ = $this + 44 | 0;
 HEAP32[$__encoding_ >> 2] = $call_i1;
 $3 = HEAP32[$__cv_ >> 2] | 0;
 $frombool = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 255]($3) | 0) & 1;
 HEAP8[$this + 53 >> 0] = $frombool;
 if ((HEAP32[$__encoding_ >> 2] | 0) > 8) {
  __ZNSt3__121__throw_runtime_errorEPKc(736);
 } else {
  return;
 }
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $4 = 0, $__shared_owners__i_i = 0, $6 = 0, $__shared_owners__i = 0;
 if ((HEAP8[24192] | 0) == 0) {
  if ((___cxa_guard_acquire(24192) | 0) != 0) {
   if ((HEAP8[24200] | 0) == 0) {
    if ((___cxa_guard_acquire(24200) | 0) != 0) {
     __ZNSt3__16locale5__impC2Ej(22056, 1);
     HEAP32[5442] = 22056;
    }
   }
   $4 = HEAP32[5442] | 0;
   HEAP32[5444] = $4;
   $__shared_owners__i_i = $4 + 4 | 0;
   tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + 1, tempValue;
  }
 }
 $6 = HEAP32[5444] | 0;
 HEAP32[$this >> 2] = $6;
 $__shared_owners__i = $6 + 4 | 0;
 tempValue = HEAP32[$__shared_owners__i >> 2] | 0, HEAP32[$__shared_owners__i >> 2] = tempValue + 1, tempValue;
 return;
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $dest_addr_09 = 0, $low_addr_08 = 0, $0 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_08 = $low;
  $dest_addr_09 = $dest;
 }
 while (1) {
  $0 = HEAP8[$low_addr_08 >> 0] | 0;
  HEAP8[$dest_addr_09 >> 0] = $0 << 24 >> 24 > -1 ? $0 : $dfault;
  $incdec_ptr = $low_addr_08 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_08 = $incdec_ptr;
   $dest_addr_09 = $dest_addr_09 + 1 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return $10$0 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg_result, $this, $0, $1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $__off__i = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $0;
 $0 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $2 = $agg_result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $__off__i = $agg_result + 8 | 0;
 HEAP32[$__off__i >> 2] = -1;
 HEAP32[$__off__i + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg_result, $this, $0, $1) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $__off__i = 0, tempParam = 0, sp = 0;
 sp = STACKTOP;
 tempParam = $0;
 $0 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[tempParam >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[tempParam + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[tempParam + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[tempParam + 12 >> 2];
 $2 = $agg_result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $__off__i = $agg_result + 8 | 0;
 HEAP32[$__off__i >> 2] = -1;
 HEAP32[$__off__i + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}
function __Z19requestMoveVelocityifff($agentIdx, $velX, $velY, $velZ) {
 $agentIdx = $agentIdx | 0;
 $velX = +$velX;
 $velY = +$velY;
 $velZ = +$velZ;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[4920] | 0;
 if (($agentIdx | 0) < 0) {
  return;
 }
 if ((HEAP32[$0 >> 2] | 0) < ($agentIdx | 0)) {
  return;
 }
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$2 + ($agentIdx * 608 | 0) + 580 >> 2] = 0;
 HEAPF32[$2 + ($agentIdx * 608 | 0) + 584 >> 2] = $velX;
 HEAPF32[$2 + ($agentIdx * 608 | 0) + 588 >> 2] = $velY;
 HEAPF32[$2 + ($agentIdx * 608 | 0) + 592 >> 2] = $velZ;
 HEAP32[$2 + ($agentIdx * 608 | 0) + 596 >> 2] = 0;
 HEAP8[$2 + ($agentIdx * 608 | 0) + 600 >> 0] = 0;
 HEAP8[$2 + ($agentIdx * 608 | 0) + 576 >> 0] = 6;
 return;
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $dest_addr_06 = 0, $low_addr_05 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_05 = $low;
  $dest_addr_06 = $dest;
 }
 while (1) {
  HEAP32[$dest_addr_06 >> 2] = HEAP8[$low_addr_05 >> 0] | 0;
  $incdec_ptr = $low_addr_05 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_05 = $incdec_ptr;
   $dest_addr_06 = $dest_addr_06 + 4 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $dest_addr_06 = 0, $low_addr_05 = 0, $incdec_ptr = 0, $low_addr_0_lcssa = 0;
 if (($low | 0) == ($high | 0)) {
  $low_addr_0_lcssa = $low;
  return $low_addr_0_lcssa | 0;
 } else {
  $low_addr_05 = $low;
  $dest_addr_06 = $dest;
 }
 while (1) {
  HEAP8[$dest_addr_06 >> 0] = HEAP8[$low_addr_05 >> 0] | 0;
  $incdec_ptr = $low_addr_05 + 1 | 0;
  if (($incdec_ptr | 0) == ($high | 0)) {
   $low_addr_0_lcssa = $high;
   break;
  } else {
   $low_addr_05 = $incdec_ptr;
   $dest_addr_06 = $dest_addr_06 + 1 | 0;
  }
 }
 return $low_addr_0_lcssa | 0;
}
function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if ((num | 0) == 0) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $__h_08 = 0, $__p_07 = 0, $add = 0, $and = 0, $xor = 0, $incdec_ptr = 0, $__h_0_lcssa = 0;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h_0_lcssa = 0;
  return $__h_0_lcssa | 0;
 } else {
  $__p_07 = $__lo;
  $__h_08 = 0;
 }
 while (1) {
  $add = (HEAP32[$__p_07 >> 2] | 0) + ($__h_08 << 4) | 0;
  $and = $add & -268435456;
  $xor = ($and >>> 24 | $and) ^ $add;
  $incdec_ptr = $__p_07 + 4 | 0;
  if (($incdec_ptr | 0) == ($__hi | 0)) {
   $__h_0_lcssa = $xor;
   break;
  } else {
   $__p_07 = $incdec_ptr;
   $__h_08 = $xor;
  }
 }
 return $__h_0_lcssa | 0;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $__h_08 = 0, $__p_07 = 0, $add = 0, $and = 0, $xor = 0, $incdec_ptr = 0, $__h_0_lcssa = 0;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h_0_lcssa = 0;
  return $__h_0_lcssa | 0;
 } else {
  $__p_07 = $__lo;
  $__h_08 = 0;
 }
 while (1) {
  $add = (HEAP8[$__p_07 >> 0] | 0) + ($__h_08 << 4) | 0;
  $and = $add & -268435456;
  $xor = ($and >>> 24 | $and) ^ $add;
  $incdec_ptr = $__p_07 + 1 | 0;
  if (($incdec_ptr | 0) == ($__hi | 0)) {
   $__h_0_lcssa = $xor;
   break;
  } else {
   $__p_07 = $incdec_ptr;
   $__h_08 = $xor;
  }
 }
 return $__h_0_lcssa | 0;
}
function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}
function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 var $tobool = 0, $exception = 0;
 $tobool = (HEAP32[$this + 24 >> 2] | 0) == 0;
 if ($tobool) {
  HEAP32[$this + 16 >> 2] = $state | 1;
 } else {
  HEAP32[$this + 16 >> 2] = $state;
 }
 if ((($tobool & 1 | $state) & HEAP32[$this + 20 >> 2] | 0) == 0) {
  return;
 }
 $exception = ___cxa_allocate_exception(16) | 0;
 if ((HEAP8[24216] | 0) == 0) {
  if ((___cxa_guard_acquire(24216) | 0) != 0) {
   HEAP32[5448] = 13168;
  }
 }
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($exception, 1, 21792, 7112);
 HEAP32[$exception >> 2] = 12352;
 ___cxa_throw($exception | 0, 18424, 50);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24240] | 0) != 0) {
  $5 = HEAP32[5572] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24240) | 0) == 0) {
  $5 = HEAP32[5572] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24160] | 0) == 0) {
  if ((___cxa_guard_acquire(24160) | 0) != 0) {
   _memset(20736, 0, 288) | 0;
   _atexit(258, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20736, 4568);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(20748, 4488);
 HEAP32[5572] = 20736;
 $5 = HEAP32[5572] | 0;
 return $5 | 0;
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $5 = 0;
 if ((HEAP8[24296] | 0) != 0) {
  $5 = HEAP32[5594] | 0;
  return $5 | 0;
 }
 if ((___cxa_guard_acquire(24296) | 0) == 0) {
  $5 = HEAP32[5594] | 0;
  return $5 | 0;
 }
 if ((HEAP8[24184] | 0) == 0) {
  if ((___cxa_guard_acquire(24184) | 0) != 0) {
   _memset(21480, 0, 288) | 0;
   _atexit(80, 0, ___dso_handle | 0) | 0;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21480, 4296);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(21492, 4264);
 HEAP32[5594] = 21480;
 $5 = HEAP32[5594] | 0;
 return $5 | 0;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vsnprintf($__s | 0, $__n | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = sp;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = sp;
 return $call3 | 0;
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, varrp) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vasprintf($__s | 0, $__format | 0, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = sp;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = sp;
 return $call3 | 0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $exception = 0, $call_i_i = 0, $call_i1_i = 0, $add_ptr_i_i = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 HEAP32[$exception >> 2] = 11640;
 $call_i_i = _strlen($msg | 0) | 0;
 $call_i1_i = __Znwj($call_i_i + 13 | 0) | 0;
 HEAP32[$call_i1_i + 4 >> 2] = $call_i_i;
 HEAP32[$call_i1_i >> 2] = $call_i_i;
 $add_ptr_i_i = $call_i1_i + 12 | 0;
 HEAP32[$exception + 4 >> 2] = $add_ptr_i_i;
 HEAP32[$call_i1_i + 8 >> 2] = 0;
 _memcpy($add_ptr_i_i | 0, $msg | 0, $call_i_i + 1 | 0) | 0;
 ___cxa_throw($exception | 0, 17864, 90);
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $ref_tmp = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $ref_tmp = sp | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 31]($ref_tmp, $this, $code);
 if ((HEAP32[$ref_tmp + 4 >> 2] | 0) != (HEAP32[$condition + 4 >> 2] | 0)) {
  $6 = 0;
  STACKTOP = sp;
  return $6 | 0;
 }
 $6 = (HEAP32[$ref_tmp >> 2] | 0) == (HEAP32[$condition >> 2] | 0);
 STACKTOP = sp;
 return $6 | 0;
}
function __Znwj($size) {
 $size = $size | 0;
 var $_size = 0, $call = 0, $0 = 0, $exception = 0, label = 0;
 $_size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $call = _malloc($_size) | 0;
  if (($call | 0) != 0) {
   label = 10;
   break;
  }
  $0 = (tempValue = HEAP32[6034] | 0, HEAP32[6034] = tempValue + 0, tempValue);
  if (($0 | 0) == 0) {
   break;
  }
  FUNCTION_TABLE_v[$0 & 63]();
 }
 if ((label | 0) == 10) {
  return $call | 0;
 }
 $exception = ___cxa_allocate_exception(4) | 0;
 HEAP32[$exception >> 2] = 11576;
 ___cxa_throw($exception | 0, 17832, 52);
 return 0;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, varrp) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 varrp = varrp | 0;
 var $__va = 0, $arraydecay1 = 0, $call = 0, $call3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp | 0;
 $arraydecay1 = $__va;
 HEAP32[$arraydecay1 >> 2] = varrp;
 HEAP32[$arraydecay1 + 4 >> 2] = 0;
 $call = _uselocale($__l | 0) | 0;
 $call3 = _vsscanf($__s | 0, 6216, $__va | 0) | 0;
 if (($call | 0) == 0) {
  STACKTOP = sp;
  return $call3 | 0;
 }
 _uselocale($call | 0) | 0;
 STACKTOP = sp;
 return $call3 | 0;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__data__i10_i = 0, $d_addr_04_i_i = 0, $n_addr_03_i_i = 0;
 HEAP8[$agg_result >> 0] = 2;
 $__data__i10_i = $agg_result + 4 | 0;
 $n_addr_03_i_i = 1;
 $d_addr_04_i_i = $__data__i10_i;
 while (1) {
  $n_addr_03_i_i = $n_addr_03_i_i - 1 | 0;
  HEAP32[$d_addr_04_i_i >> 2] = 45;
  if (($n_addr_03_i_i | 0) == 0) {
   break;
  } else {
   $d_addr_04_i_i = $d_addr_04_i_i + 4 | 0;
  }
 }
 HEAP32[$__data__i10_i + 4 >> 2] = 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__data__i10_i = 0, $d_addr_04_i_i = 0, $n_addr_03_i_i = 0;
 HEAP8[$agg_result >> 0] = 2;
 $__data__i10_i = $agg_result + 4 | 0;
 $n_addr_03_i_i = 1;
 $d_addr_04_i_i = $__data__i10_i;
 while (1) {
  $n_addr_03_i_i = $n_addr_03_i_i - 1 | 0;
  HEAP32[$d_addr_04_i_i >> 2] = 45;
  if (($n_addr_03_i_i | 0) == 0) {
   break;
  } else {
   $d_addr_04_i_i = $d_addr_04_i_i + 4 | 0;
  }
 }
 HEAP32[$__data__i10_i + 4 >> 2] = 0;
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $__l = 0, $call_i1 = 0, $3 = 0, $call_i8 = 0, $retval_0 = 0;
 $__l = $this + 8 | 0;
 $call_i1 = _uselocale(HEAP32[$__l >> 2] | 0) | 0;
 if (($call_i1 | 0) != 0) {
  _uselocale($call_i1 | 0) | 0;
 }
 $3 = HEAP32[$__l >> 2] | 0;
 if (($3 | 0) == 0) {
  $retval_0 = 1;
  return $retval_0 | 0;
 }
 $call_i8 = _uselocale($3 | 0) | 0;
 if (($call_i8 | 0) == 0) {
  $retval_0 = 0;
  return $retval_0 | 0;
 }
 _uselocale($call_i8 | 0) | 0;
 $retval_0 = 0;
 return $retval_0 | 0;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv() {
 var $exception = 0, $0 = 0, $call_i1_i = 0, $add_ptr_i_i = 0;
 $exception = ___cxa_allocate_exception(8) | 0;
 $0 = $exception;
 HEAP32[$0 >> 2] = 11704;
 $call_i1_i = __Znwj(25) | 0;
 HEAP32[$call_i1_i + 4 >> 2] = 12;
 HEAP32[$call_i1_i >> 2] = 12;
 $add_ptr_i_i = $call_i1_i + 12 | 0;
 HEAP32[$exception + 4 >> 2] = $add_ptr_i_i;
 HEAP32[$call_i1_i + 8 >> 2] = 0;
 _memcpy($add_ptr_i_i | 0, 1496, 13) | 0;
 HEAP32[$0 >> 2] = 11672;
 ___cxa_throw($exception | 0, 17880, 120);
}
function __Z14rcFreePolyMeshP10rcPolyMesh($pmesh) {
 $pmesh = $pmesh | 0;
 var $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 if (($pmesh | 0) == 0) {
  return;
 }
 $0 = HEAP32[$pmesh >> 2] | 0;
 if (($0 | 0) != 0) {
  _free($0);
 }
 $2 = HEAP32[$pmesh + 4 >> 2] | 0;
 if (($2 | 0) != 0) {
  _free($2);
 }
 $4 = HEAP32[$pmesh + 8 >> 2] | 0;
 if (($4 | 0) != 0) {
  _free($4);
 }
 $6 = HEAP32[$pmesh + 12 >> 2] | 0;
 if (($6 | 0) != 0) {
  _free($6);
 }
 $8 = HEAP32[$pmesh + 16 >> 2] | 0;
 if (($8 | 0) != 0) {
  _free($8);
 }
 _free($pmesh);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s_i_i = 0, $arrayidx_i_i = 0;
 HEAP8[$agg_result >> 0] = 10;
 $__s_i_i = $agg_result;
 $arrayidx_i_i = $__s_i_i + 1 | 0;
 HEAP8[$arrayidx_i_i >> 0] = HEAP8[7312] | 0;
 HEAP8[$arrayidx_i_i + 1 >> 0] = HEAP8[7313] | 0;
 HEAP8[$arrayidx_i_i + 2 >> 0] = HEAP8[7314] | 0;
 HEAP8[$arrayidx_i_i + 3 >> 0] = HEAP8[7315] | 0;
 HEAP8[$arrayidx_i_i + 4 >> 0] = HEAP8[7316] | 0;
 HEAP8[$__s_i_i + 6 >> 0] = 0;
 return;
}
function __ZN10emscripten8internal7InvokerIvJifffffffhfEE6invokeEPFvifffffffhfEifffffffhf($fn, $args, $args1, $args3, $args5, $args7, $args9, $args11, $args13, $args15, $args17) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 $args7 = +$args7;
 $args9 = +$args9;
 $args11 = +$args11;
 $args13 = +$args13;
 $args15 = $args15 | 0;
 $args17 = +$args17;
 FUNCTION_TABLE_vifffffffif[$fn & 31]($args, $args1, $args3, $args5, $args7, $args9, $args11, $args13, $args15, $args17);
 return;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13328;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13400;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s_i_i = 0, $0 = 0;
 HEAP8[$agg_result >> 0] = 8;
 $__s_i_i = $agg_result;
 $0 = $__s_i_i + 1 | 0;
 tempBigInt = 1702195828;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 HEAP8[$__s_i_i + 5 >> 0] = 0;
 return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $call_i = 0, $2 = 0, $frombool = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 255]($this) | 0;
 $call_i = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[$__loc >> 2] | 0, 23336) | 0;
 $2 = $call_i;
 HEAP32[$this + 36 >> 2] = $2;
 $frombool = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$call_i >> 2] | 0) + 28 >> 2] & 255]($2) | 0) & 1;
 HEAP8[$this + 44 >> 0] = $frombool;
 return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $call_i = 0, $2 = 0, $frombool = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 255]($this) | 0;
 $call_i = __ZNKSt3__16locale9use_facetERNS0_2idE(HEAP32[$__loc >> 2] | 0, 23344) | 0;
 $2 = $call_i;
 HEAP32[$this + 36 >> 2] = $2;
 $frombool = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$call_i >> 2] | 0) + 28 >> 2] & 255]($2) | 0) & 1;
 HEAP8[$this + 44 >> 0] = $frombool;
 return;
}
function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13328;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13400;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13328;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0, $6 = 0;
 HEAP32[$this >> 2] = 13400;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  $6 = $this;
  _free($6);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 $6 = $this;
 _free($6);
 return;
}
function __ZN10emscripten8internal7InvokerIiJfffffffhfEE6invokeEPFifffffffhfEfffffffhf($fn, $args, $args1, $args3, $args5, $args7, $args9, $args11, $args13, $args15) {
 $fn = $fn | 0;
 $args = +$args;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 $args7 = +$args7;
 $args9 = +$args9;
 $args11 = +$args11;
 $args13 = $args13 | 0;
 $args15 = +$args15;
 return FUNCTION_TABLE_ifffffffif[$fn & 31]($args, $args1, $args3, $args5, $args7, $args9, $args11, $args13, $args15) | 0;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 var $__imp__i_i = 0, $1 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp__i_i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i_i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  $6 = $this;
  _free($6);
  return;
 }
 _free((HEAP32[$__imp__i_i >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 $6 = $this;
 _free($6);
 return;
}
function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  $6 = $this;
  _free($6);
  return;
 }
 _free((HEAP32[$__imp__i >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 $6 = $this;
 _free($6);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0;
 HEAP32[$this >> 2] = 13328;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0;
 HEAP32[$this >> 2] = 13328;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0;
 HEAP32[$this >> 2] = 13400;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0, $__shared_owners__i_i = 0;
 HEAP32[$this >> 2] = 13400;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $__shared_owners__i_i = $1 + 4 | 0;
 if (((tempValue = HEAP32[$__shared_owners__i_i >> 2] | 0, HEAP32[$__shared_owners__i_i >> 2] = tempValue + -1, tempValue) | 0) != 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 511]($1 | 0);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $call_i_i_i1 = 0;
 if ((HEAP8[24312] | 0) != 0) {
  return 22400;
 }
 if ((___cxa_guard_acquire(24312) | 0) == 0) {
  return 22400;
 }
 $call_i_i_i1 = __Znwj(16) | 0;
 HEAP32[5602] = $call_i_i_i1;
 HEAP32[5600] = 17;
 HEAP32[5601] = 11;
 _memcpy($call_i_i_i1 | 0, 6160, 11) | 0;
 HEAP8[$call_i_i_i1 + 11 >> 0] = 0;
 _atexit(274, 22400, ___dso_handle | 0) | 0;
 return 22400;
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $call_i_i_i1 = 0;
 if ((HEAP8[24320] | 0) != 0) {
  return 22416;
 }
 if ((___cxa_guard_acquire(24320) | 0) == 0) {
  return 22416;
 }
 $call_i_i_i1 = __Znwj(32) | 0;
 HEAP32[5606] = $call_i_i_i1;
 HEAP32[5604] = 33;
 HEAP32[5605] = 20;
 _memcpy($call_i_i_i1 | 0, 6384, 20) | 0;
 HEAP8[$call_i_i_i1 + 20 >> 0] = 0;
 _atexit(274, 22416, ___dso_handle | 0) | 0;
 return 22416;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $__l = 0, $1 = 0, $call_i = 0;
 HEAP32[$this >> 2] = 12736;
 $__l = $this + 8 | 0;
 $1 = HEAP32[$__l >> 2] | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 if (($1 | 0) == (HEAP32[5446] | 0)) {
  return;
 }
 _freelocale(HEAP32[$__l >> 2] | 0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg_result, $this, $0$0, $0$1, $1, $2) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0$0 = $0$0 | 0;
 $0$1 = $0$1 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $__off__i = 0;
 $3 = $agg_result;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 $__off__i = $agg_result + 8 | 0;
 HEAP32[$__off__i >> 2] = -1;
 HEAP32[$__off__i + 4 >> 2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg_result, $this, $0$0, $0$1, $1, $2) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $0$0 = $0$0 | 0;
 $0$1 = $0$1 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $__off__i = 0;
 $3 = $agg_result;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 $__off__i = $agg_result + 8 | 0;
 HEAP32[$__off__i >> 2] = -1;
 HEAP32[$__off__i + 4 >> 2] = -1;
 return;
}
function __ZN11DebugDrawGL5beginE21duDebugDrawPrimitivesf($this, $prim, $size) {
 $this = $this | 0;
 $prim = $prim | 0;
 $size = +$size;
 if (($prim | 0) == 1) {
  _emscripten_run_script(6608);
  return;
 } else if (($prim | 0) == 3) {
  _emscripten_run_script(4504);
  return;
 } else if (($prim | 0) == 2) {
  _emscripten_run_script(5552);
  return;
 } else if (($prim | 0) == 0) {
  _emscripten_run_script(8032);
  return;
 } else {
  return;
 }
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $cond_i_i_i = 0, $call2 = 0;
 if ((HEAP8[$__nm >> 0] & 1) == 0) {
  $cond_i_i_i = $__nm + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$__nm + 8 >> 2] | 0;
 }
 $call2 = _catopen($cond_i_i_i | 0, 1) | 0;
 return $call2 >>> ((($call2 | 0) != -1 | 0) >>> 0) | 0;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $cond_i_i_i = 0, $call2 = 0;
 if ((HEAP8[$__nm >> 0] & 1) == 0) {
  $cond_i_i_i = $__nm + 1 | 0;
 } else {
  $cond_i_i_i = HEAP32[$__nm + 8 >> 2] | 0;
 }
 $call2 = _catopen($cond_i_i_i | 0, 1) | 0;
 return $call2 >>> ((($call2 | 0) != -1 | 0) >>> 0) | 0;
}
function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else {
  _memcpy(dest, src, num) | 0;
 }
 return dest | 0;
}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}
function _emscripten_replace_memory(_HEAP8, _HEAP16, _HEAP32, _HEAPU8, _HEAPU16, _HEAPU32, _HEAPF32, _HEAPF64) {
 _HEAP8 = _HEAP8;
 _HEAP16 = _HEAP16;
 _HEAP32 = _HEAP32;
 _HEAPU8 = _HEAPU8;
 _HEAPU16 = _HEAPU16;
 _HEAPU32 = _HEAPU32;
 _HEAPF32 = _HEAPF32;
 _HEAPF64 = _HEAPF64;
 HEAP8 = _HEAP8;
 HEAP16 = _HEAP16;
 HEAP32 = _HEAP32;
 HEAPU8 = _HEAPU8;
 HEAPU16 = _HEAPU16;
 HEAPU32 = _HEAPU32;
 HEAPF32 = _HEAPF32;
 HEAPF64 = _HEAPF64;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $7 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) < 0) {
  _free((HEAP32[$__imp__i >> 2] | 0) - 12 | 0);
  $7 = $this;
  _free($7);
  return;
 } else {
  $7 = $this;
  _free($7);
  return;
 }
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $7 = 0;
 HEAP32[$this >> 2] = 11704;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) < 0) {
  _free((HEAP32[$__imp__i >> 2] | 0) - 12 | 0);
  $7 = $this;
  _free($7);
  return;
 } else {
  $7 = $this;
  _free($7);
  return;
 }
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $7 = 0;
 HEAP32[$this >> 2] = 11704;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) < 0) {
  _free((HEAP32[$__imp__i >> 2] | 0) - 12 | 0);
  $7 = $this;
  _free($7);
  return;
 } else {
  $7 = $this;
  _free($7);
  return;
 }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $__ninp_ = 0, $2 = 0, $retval_0 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 255]($this) | 0) == -1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $2 = HEAP32[$__ninp_ >> 2] | 0;
 HEAP32[$__ninp_ >> 2] = $2 + 4;
 $retval_0 = HEAP32[$2 >> 2] | 0;
 return $retval_0 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $__ninp_ = 0, $2 = 0, $retval_0 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 255]($this) | 0) == -1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $__ninp_ = $this + 12 | 0;
 $2 = HEAP32[$__ninp_ >> 2] | 0;
 HEAP32[$__ninp_ >> 2] = $2 + 1;
 $retval_0 = HEAPU8[$2 >> 0] | 0;
 return $retval_0 | 0;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $__loc_ = 0, $0 = 0, $call_i = 0;
 $__loc_ = $this | 0;
 $0 = HEAP32[$__loc_ >> 2] | 0;
 if ((HEAP8[24208] | 0) == 0) {
  if ((___cxa_guard_acquire(24208) | 0) != 0) {
   $call_i = _newlocale(2147483647, 896, 0) | 0;
   HEAP32[5446] = $call_i;
  }
 }
 if (($0 | 0) == (HEAP32[5446] | 0)) {
  return;
 }
 _freelocale(HEAP32[$__loc_ >> 2] | 0);
 return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 var $__imp__i_i = 0, $1 = 0, $5 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp__i_i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i_i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  return;
 }
 _free((HEAP32[$__imp__i_i >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $0 = 0;
 $0 = $agg_result;
 tempBigInt = 67109634;
 HEAP8[$0 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 1 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 2 >> 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$0 + 3 >> 0] = tempBigInt;
 return;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp__i = 0, $1 = 0, $5 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp__i = $this + 4 | 0;
 $1 = (HEAP32[$__imp__i >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  return;
 }
 _free((HEAP32[$__imp__i >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp_ = 0, $1 = 0, $5 = 0;
 HEAP32[$this >> 2] = 11640;
 $__imp_ = $this + 4 | 0;
 $1 = (HEAP32[$__imp_ >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  return;
 }
 _free((HEAP32[$__imp_ >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this | 0;
 var $__imp_ = 0, $1 = 0, $5 = 0;
 HEAP32[$this >> 2] = 11704;
 $__imp_ = $this + 4 | 0;
 $1 = (HEAP32[$__imp_ >> 2] | 0) - 4 | 0;
 if (((tempValue = HEAP32[$1 >> 2] | 0, HEAP32[$1 >> 2] = tempValue + -1, tempValue) - 1 | 0) >= 0) {
  $5 = $this | 0;
  return;
 }
 _free((HEAP32[$__imp_ >> 2] | 0) - 12 | 0);
 $5 = $this | 0;
 return;
}
function __ZN10emscripten8internal7InvokerIvJfffffftEE6invokeEPFvfffffftEfffffft($fn, $args, $args1, $args3, $args5, $args7, $args9, $args11) {
 $fn = $fn | 0;
 $args = +$args;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 $args7 = +$args7;
 $args9 = +$args9;
 $args11 = $args11 | 0;
 FUNCTION_TABLE_vffffffi[$fn & 31]($args, $args1, $args3, $args5, $args7, $args9, $args11);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $call_i = 0;
 HEAP32[$to_nxt >> 2] = $to;
 $call_i = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 if (($call_i | 0) == 0) {
  return 0;
 }
 _uselocale($call_i | 0) | 0;
 return 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___getTypeName($ti) {
 $ti = $ti | 0;
 var $0 = 0, $add_i = 0, $call1_i = 0, $retval_0_i = 0;
 $0 = HEAP32[$ti + 4 >> 2] | 0;
 $add_i = (_strlen($0 | 0) | 0) + 1 | 0;
 $call1_i = _malloc($add_i) | 0;
 if (($call1_i | 0) == 0) {
  $retval_0_i = 0;
  return $retval_0_i | 0;
 }
 _memcpy($call1_i | 0, $0 | 0, $add_i) | 0;
 $retval_0_i = $call1_i;
 return $retval_0_i | 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $0 = 0, $call_i1 = 0, $cond = 0;
 $0 = HEAP32[$this + 8 >> 2] | 0;
 if (($0 | 0) == 0) {
  $cond = 1;
 } else {
  $call_i1 = _uselocale($0 | 0) | 0;
  if (($call_i1 | 0) == 0) {
   $cond = 4;
  } else {
   _uselocale($call_i1 | 0) | 0;
   $cond = 4;
  }
 }
 return $cond | 0;
}
function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}
function _llvm_ctlz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[ctlz_i8 + (x >>> 24) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[ctlz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[ctlz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[ctlz_i8 + (x & 255) >> 0] | 0) + 24 | 0;
}
function __Z12bareGeomInitv() {
 var $call = 0, $call1 = 0;
 $call = __Znwj(50216) | 0;
 HEAP32[$call >> 2] = 0;
 HEAP32[$call + 4 >> 2] = 0;
 HEAP32[$call + 9248 >> 2] = 0;
 HEAP32[$call + 50212 >> 2] = 0;
 HEAP32[4914] = $call;
 $call1 = __Znwj(284) | 0;
 HEAPF32[$call1 + 260 >> 2] = 1.0;
 _memset($call1 + 264 | 0, 0, 20) | 0;
 HEAP32[4898] = $call1;
 return;
}
function __ZL12compareItemZPKvS0_($va, $vb) {
 $va = $va | 0;
 $vb = $vb | 0;
 var $1 = 0, $3 = 0, $retval_0 = 0;
 $1 = HEAP16[$va + 4 >> 1] | 0;
 $3 = HEAP16[$vb + 4 >> 1] | 0;
 if (($1 & 65535) >>> 0 < ($3 & 65535) >>> 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $retval_0 = ($1 & 65535) >>> 0 > ($3 & 65535) >>> 0 | 0;
 return $retval_0 | 0;
}
function __ZL12compareItemYPKvS0_($va, $vb) {
 $va = $va | 0;
 $vb = $vb | 0;
 var $1 = 0, $3 = 0, $retval_0 = 0;
 $1 = HEAP16[$va + 2 >> 1] | 0;
 $3 = HEAP16[$vb + 2 >> 1] | 0;
 if (($1 & 65535) >>> 0 < ($3 & 65535) >>> 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $retval_0 = ($1 & 65535) >>> 0 > ($3 & 65535) >>> 0 | 0;
 return $retval_0 | 0;
}
function dynCall_viifffffffif(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 FUNCTION_TABLE_viifffffffif[index & 31](a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZL12compareItemXPKvS0_($va, $vb) {
 $va = $va | 0;
 $vb = $vb | 0;
 var $0 = 0, $1 = 0, $retval_0 = 0;
 $0 = HEAP16[$va >> 1] | 0;
 $1 = HEAP16[$vb >> 1] | 0;
 if (($0 & 65535) >>> 0 < ($1 & 65535) >>> 0) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $retval_0 = ($0 & 65535) >>> 0 > ($1 & 65535) >>> 0 | 0;
 return $retval_0 | 0;
}
function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(23744);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(23832);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(23376);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(23464);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $call_i = 0, $cond = 0;
 if (!($c >>> 0 < 128 >>> 0)) {
  $cond = 0;
  return $cond | 0;
 }
 $call_i = ___ctype_b_loc() | 0;
 $cond = (HEAP16[(HEAP32[$call_i >> 2] | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0;
 return $cond | 0;
}
function dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viiiiiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $2 = 0;
 if ((HEAP32[$code + 4 >> 2] | 0) != ($this | 0)) {
  $2 = 0;
  return $2 | 0;
 }
 $2 = (HEAP32[$code >> 2] | 0) == ($condition | 0);
 return $2 | 0;
}
function dynCall_iifffffffif(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return FUNCTION_TABLE_iifffffffif[index & 31](a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $call_i = 0, $cond = 0;
 if (!($c << 24 >> 24 > -1)) {
  $cond = $c;
  return $cond | 0;
 }
 $call_i = ___ctype_tolower_loc() | 0;
 $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($c << 24 >> 24 << 2) >> 2] & 255;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $call_i = 0, $cond = 0;
 if (!($c << 24 >> 24 > -1)) {
  $cond = $c;
  return $cond | 0;
 }
 $call_i = ___ctype_toupper_loc() | 0;
 $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + (($c & 255) << 2) >> 2] & 255;
 return $cond | 0;
}
function dynCall_vifffffffif(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 FUNCTION_TABLE_vifffffffif[index & 31](a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0, $6 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 $6 = $0 + $5 | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 4) | 0);
 if (($6 | 0) == 0) {
  return;
 }
 _free($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0, $6 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 $6 = $0 + $5 | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 4) | 0);
 if (($6 | 0) == 0) {
  return;
 }
 _free($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0, $6 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 $6 = $0 + $5 | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 8) | 0);
 if (($6 | 0) == 0) {
  return;
 }
 _free($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $5 = 0, $6 = 0;
 $0 = $this;
 $5 = HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0;
 $6 = $0 + $5 | 0;
 __ZNSt3__18ios_baseD2Ev($0 + ($5 + 8) | 0);
 if (($6 | 0) == 0) {
  return;
 }
 _free($6);
 return;
}
function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $call_i = 0, $cond = 0;
 if (!($c >>> 0 < 128 >>> 0)) {
  $cond = $c;
  return $cond | 0;
 }
 $call_i = ___ctype_toupper_loc() | 0;
 $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($c << 2) >> 2] | 0;
 return $cond | 0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $call_i = 0, $cond = 0;
 if (!($c >>> 0 < 128 >>> 0)) {
  $cond = $c;
  return $cond | 0;
 }
 $call_i = ___ctype_tolower_loc() | 0;
 $cond = HEAP32[(HEAP32[$call_i >> 2] | 0) + ($c << 2) >> 2] | 0;
 return $cond | 0;
}
function _strncpy(pdest, psrc, num) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 num = num | 0;
 var padding = 0, i = 0;
 while ((i | 0) < (num | 0)) {
  HEAP8[pdest + i >> 0] = padding ? 0 : HEAP8[psrc + i >> 0] | 0;
  padding = padding ? 1 : (HEAP8[psrc + i >> 0] | 0) == 0;
  i = i + 1 | 0;
 }
 return pdest | 0;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $sub_ptr_sub = 0;
 $sub_ptr_sub = $end - $frm | 0;
 return ($sub_ptr_sub >>> 0 < $mx >>> 0 ? $sub_ptr_sub : $mx) | 0;
}
function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 12152;
 if (!((HEAP8[$this + 16 >> 0] & 1) == 0)) {
  $2 = HEAP32[$this + 24 >> 2] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
  if (($this | 0) == 0) {
   return;
  }
 }
 _free($this);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 12200;
 if (!((HEAP8[$this + 12 >> 0] & 1) == 0)) {
  $2 = HEAP32[$this + 20 >> 2] | 0;
  if (($2 | 0) != 0) {
   _free($2);
  }
  if (($this | 0) == 0) {
   return;
  }
 }
 _free($this);
 return;
}
function dynCall_viffffffii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viffffffii[index & 31](a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function dynCall_ifffffffif(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return FUNCTION_TABLE_ifffffffif[index & 31](+a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_viifffffffif_9(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(9, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(8, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_7(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(7, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_6(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(6, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_5(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(5, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(4, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_3(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(3, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_2(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(2, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_1(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(1, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function jsCall_viifffffffif_0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = +a9;
 a10 = a10 | 0;
 a11 = +a11;
 jsCall(0, a1 | 0, a2 | 0, +a3, +a4, +a5, +a6, +a7, +a8, +a9, a10 | 0, +a11);
}
function __ZL12compareItemYPKvS0_275($va, $vb) {
 $va = $va | 0;
 $vb = $vb | 0;
 var $1 = 0.0, $3 = 0.0, $retval_0 = 0;
 $1 = +HEAPF32[$va + 4 >> 2];
 $3 = +HEAPF32[$vb + 4 >> 2];
 if ($1 < $3) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $retval_0 = $1 > $3 | 0;
 return $retval_0 | 0;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 13104;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) != 0) {
  if ((HEAP8[$this + 12 >> 0] | 0) != 0) {
   _free($1);
  }
  if (($this | 0) == 0) {
   return;
  }
 }
 _free($this);
 return;
}
function __ZN10emscripten8internal7InvokerIvJiiiiEE6invokeEPFviiiiEiiii($fn, $args, $args1, $args3, $args5) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args3 = $args3 | 0;
 $args5 = $args5 | 0;
 FUNCTION_TABLE_viiii[$fn & 63]($args, $args1, $args3, $args5);
 return;
}
function __ZL12compareItemXPKvS0_276($va, $vb) {
 $va = $va | 0;
 $vb = $vb | 0;
 var $0 = 0.0, $1 = 0.0, $retval_0 = 0;
 $0 = +HEAPF32[$va >> 2];
 $1 = +HEAPF32[$vb >> 2];
 if ($0 < $1) {
  $retval_0 = -1;
  return $retval_0 | 0;
 }
 $retval_0 = $0 > $1 | 0;
 return $retval_0 | 0;
}
function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s_i_i = 0;
 HEAP8[$agg_result >> 0] = 2;
 $__s_i_i = $agg_result;
 HEAP8[$__s_i_i + 1 >> 0] = 45;
 HEAP8[$__s_i_i + 2 >> 0] = 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 var $__s_i_i = 0;
 HEAP8[$agg_result >> 0] = 2;
 $__s_i_i = $agg_result;
 HEAP8[$__s_i_i + 1 >> 0] = 45;
 HEAP8[$__s_i_i + 2 >> 0] = 0;
 return;
}
function __ZN10emscripten8internal7InvokerIbJifffEE6invokeEPFbifffEifff($fn, $args, $args1, $args3, $args5) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 return FUNCTION_TABLE_iifff[$fn & 31]($args, $args1, $args3, $args5) | 0;
}
function jsCall_viiiiiiiii_9(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_8(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_7(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_6(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_5(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_4(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_3(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_2(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_1(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function jsCall_viiiiiiiii_0(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}
function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 127](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function __ZN10emscripten8internal7InvokerIvJifffEE6invokeEPFvifffEifff($fn, $args, $args1, $args3, $args5) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = +$args5;
 FUNCTION_TABLE_vifff[$fn & 31]($args, $args1, $args3, $args5);
 return;
}
function __ZN10emscripten8internal7InvokerIvJfffiEE6invokeEPFvfffiEfffi($fn, $args, $args1, $args3, $args5) {
 $fn = $fn | 0;
 $args = +$args;
 $args1 = +$args1;
 $args3 = +$args3;
 $args5 = $args5 | 0;
 FUNCTION_TABLE_vfffi[$fn & 31]($args, $args1, $args3, $args5);
 return;
}
function jsCall_iifffffffif_9(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(9, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(8, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_7(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(7, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_6(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(6, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_5(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(5, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(4, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_3(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(3, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_2(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(2, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_1(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(1, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function jsCall_iifffffffif_0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 return jsCall(0, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10) | 0;
}
function dynCall_viiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 FUNCTION_TABLE_viiiiiid[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function dynCall_viffffffi(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 FUNCTION_TABLE_viffffffi[index & 31](a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function dynCall_vffffffii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_vffffffii[index & 31](+a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}
function __Z16removeCrowdAgenti($idx) {
 $idx = $idx | 0;
 var $0 = 0;
 $0 = HEAP32[4920] | 0;
 if (!(($idx | 0) > -1)) {
  return;
 }
 if ((HEAP32[$0 >> 2] | 0) <= ($idx | 0)) {
  return;
 }
 HEAP8[(HEAP32[$0 + 4 >> 2] | 0) + ($idx * 608 | 0) >> 0] = 0;
 return;
}
function jsCall_iiiiiiiii_9(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_8(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_7(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_6(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_5(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_4(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_3(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_2(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_1(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function jsCall_iiiiiiiii_0(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}
function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}
function jsCall_vifffffffif_9(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(9, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(8, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_7(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(7, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_6(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(6, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_5(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(5, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(4, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_3(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(3, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_2(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(2, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_1(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(1, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function jsCall_vifffffffif_0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = +a8;
 a9 = a9 | 0;
 a10 = +a10;
 jsCall(0, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, +a8, a9 | 0, +a10);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 if ((HEAP8[$this >> 0] & 1) == 0) {
  return;
 }
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  return;
 }
 _free($1);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 if ((HEAP8[$this >> 0] & 1) == 0) {
  return;
 }
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  return;
 }
 _free($1);
 return;
}
function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 12152;
 if ((HEAP8[$this + 16 >> 0] & 1) == 0) {
  return;
 }
 $2 = HEAP32[$this + 24 >> 2] | 0;
 if (($2 | 0) == 0) {
  return;
 }
 _free($2);
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 12200;
 if ((HEAP8[$this + 12 >> 0] & 1) == 0) {
  return;
 }
 $2 = HEAP32[$this + 20 >> 2] | 0;
 if (($2 | 0) == 0) {
  return;
 }
 _free($2);
 return;
}
function jsCall_viiiiiiii_9(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_8(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_7(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_6(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_5(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_4(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_3(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_2(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_1(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function jsCall_viiiiiiii_0(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 13104;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (($1 | 0) == 0) {
  return;
 }
 if ((HEAP8[$this + 12 >> 0] | 0) == 0) {
  return;
 }
 _free($1);
 return;
}
function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function dynCall_vifffiff(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 FUNCTION_TABLE_vifffiff[index & 31](a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_viffffffii_9(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(9, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_8(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(8, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_7(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(7, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_6(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(6, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_5(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(5, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_4(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(4, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_3(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(3, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_2(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(2, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_1(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(1, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function jsCall_viffffffii_0(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 jsCall(0, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, a9 | 0);
}
function dynCall_viiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 FUNCTION_TABLE_viiiiid[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_ifffffffif_9(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(9, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_8(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(8, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_7(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(7, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_6(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(6, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_5(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(5, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_4(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(4, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_3(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(3, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_2(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(2, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_1(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(1, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function jsCall_ifffffffif_0(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = +a9;
 return jsCall(0, +a1, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0, +a9) | 0;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg_result, $this, $ev) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg_result >> 2] = $ev;
 HEAP32[$agg_result + 4 >> 2] = $this;
 return;
}
function dynCall_vffffffi(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 FUNCTION_TABLE_vffffffi[index & 31](+a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $0) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $0 = $0 | 0;
 return ($this | 0) == ($thrown_type | 0) | 0;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}
function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_viiiiiii_9(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_8(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_7(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_6(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_5(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_4(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_3(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_2(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_1(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function jsCall_viiiiiii_0(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}
function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function jsCall_viiiiiid_9(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_8(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_7(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_6(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_5(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_4(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_3(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_2(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_1(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viiiiiid_0(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}
function jsCall_viffffffi_9(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(9, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_8(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(8, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_7(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(7, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_6(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(6, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_5(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(5, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_4(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(4, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_3(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(3, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_2(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(2, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_1(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(1, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_viffffffi_0(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 jsCall(0, a1 | 0, +a2, +a3, +a4, +a5, +a6, +a7, a8 | 0);
}
function jsCall_vffffffii_9(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(9, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_8(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(8, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_7(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(7, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_6(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(6, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_5(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(5, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_4(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(4, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_3(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(3, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_2(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(2, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_1(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(1, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function jsCall_vffffffii_0(a1, a2, a3, a4, a5, a6, a7, a8) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 a8 = a8 | 0;
 jsCall(0, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0, a8 | 0);
}
function dynCall_iiifff(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return FUNCTION_TABLE_iiifff[index & 31](a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return $1$0 | 0;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 511]($this);
 return;
}
function b31(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = +p7;
 p8 = +p8;
 p9 = p9 | 0;
 p10 = +p10;
 abort(31);
}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}
function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 4) | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 4) | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 8) | 0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) - 12 >> 2] | 0) + 8) | 0);
 return;
}
function dynCall_viifff(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 FUNCTION_TABLE_viifff[index & 31](a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function dynCall_vifffi(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 FUNCTION_TABLE_vifffi[index & 31](a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function __ZN10emscripten8internal7InvokerIbJifEE6invokeEPFbifEif($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 return FUNCTION_TABLE_iif[$fn & 31]($args, $args1) | 0;
}
function jsCall_viiiiii_9(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_8(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_7(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_6(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_5(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_4(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_3(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_2(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_1(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function jsCall_viiiiii_0(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function jsCall_vifffiff_9(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(9, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_8(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(8, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_7(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(7, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_6(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(6, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_5(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(5, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_4(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(4, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_3(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(3, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_2(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(2, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_1(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(1, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function jsCall_vifffiff_0(a1, a2, a3, a4, a5, a6, a7) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 jsCall(0, a1 | 0, +a2, +a3, +a4, a5 | 0, +a6, +a7);
}
function b4(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = +p7;
 p8 = p8 | 0;
 p9 = +p9;
 abort(4);
 return 0;
}
function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function __GLOBAL__I_a() {
 var $div_i = 0.0;
 $div_i = +HEAPF32[122] * .5;
 HEAPF32[118] = $div_i;
 HEAPF32[120] = $div_i * .5;
 __ZN38EmscriptenBindingInitializer_my_moduleC2Ev();
 return;
}
function jsCall_viiiiid_9(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_8(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_7(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_6(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_5(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_4(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_3(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_2(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_1(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function jsCall_viiiiid_0(a1, a2, a3, a4, a5, a6) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}
function b24(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(24);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function _rand_r(seedp) {
 seedp = seedp | 0;
 var val = 0;
 val = (Math_imul(HEAP32[seedp >> 2] | 0, 31010991) | 0) + 1735287159 & 2147483647;
 HEAP32[seedp >> 2] = val;
 return val | 0;
}
function jsCall_vffffffi_9(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(9, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_8(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(8, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_7(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(7, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_6(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(6, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_5(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(5, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_4(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(4, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_3(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(3, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_2(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(2, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_1(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(1, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function jsCall_vffffffi_0(a1, a2, a3, a4, a5, a6, a7) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 a7 = a7 | 0;
 jsCall(0, +a1, +a2, +a3, +a4, +a5, +a6, a7 | 0);
}
function dynCall_iifff(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return FUNCTION_TABLE_iifff[index & 31](a1 | 0, +a2, +a3, +a4) | 0;
}
function b17(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = +p7;
 p8 = p8 | 0;
 p9 = +p9;
 abort(17);
}
function b35(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(35);
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function jsCall_iiiiii_9(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_8(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_7(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_6(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_5(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_4(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_3(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_2(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_1(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function jsCall_iiiiii_0(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 HEAP32[$this + 4 >> 2] = (tempValue = HEAP32[5842] | 0, HEAP32[5842] = tempValue + 1, tempValue) + 1;
 return;
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 >>> 0 ? $c & 255 : $dfault) | 0;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function b38(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = +p0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 p8 = +p8;
 abort(38);
 return 0;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg_result, $this) {
 $agg_result = $agg_result | 0;
 $this = $this | 0;
 _memset($agg_result | 0, 0, 12) | 0;
 return;
}
function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 127](a1 | 0, a2 | 0, a3 | 0) | 0;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function dynCall_vifff(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 FUNCTION_TABLE_vifff[index & 31](a1 | 0, +a2, +a3, +a4);
}
function dynCall_vfffi(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 FUNCTION_TABLE_vfffi[index & 31](+a1, +a2, +a3, a4 | 0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}
function b18(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(18);
}
function b13(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(13);
}
function jsCall_viiiii_9(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_8(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_7(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_6(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_5(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_4(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_3(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_2(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_1(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function jsCall_viiiii_0(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}
function dynCall_iiif(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return FUNCTION_TABLE_iiif[index & 31](a1 | 0, a2 | 0, +a3) | 0;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}
function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}
function jsCall_iiifff_9(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(9, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_8(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(8, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_7(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(7, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_6(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(6, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_5(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(5, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_4(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(4, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_3(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(3, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_2(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(2, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_1(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(1, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function jsCall_iiifff_0(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 return jsCall(0, a1 | 0, a2 | 0, +a3, +a4, +a5) | 0;
}
function __Z28debugDrawHeightfieldWalkablev() {
 __Z30duDebugDrawHeightfieldWalkableP11duDebugDrawRK13rcHeightfield(HEAP32[4950] | 0, HEAP32[4906] | 0);
 return;
}
function __Z26debugDrawRegionConnectionsv() {
 __Z28duDebugDrawRegionConnectionsP11duDebugDrawRK12rcContourSetf(HEAP32[4950] | 0, HEAP32[4918] | 0, .5);
 return;
}
function __ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 FUNCTION_TABLE_vi[$fn & 511]($args);
 return;
}
function __ZN10emscripten8internal7InvokerIvJhEE6invokeEPFvhEh($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 FUNCTION_TABLE_vi[$fn & 511]($args);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 7 & -8;
 return ret | 0;
}
function __ZN10emscripten8internal7InvokerIbJfEE6invokeEPFbfEf($fn, $args) {
 $fn = $fn | 0;
 $args = +$args;
 return FUNCTION_TABLE_if[$fn & 31]($args) | 0;
}
function dynCall_viif(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 FUNCTION_TABLE_viif[index & 31](a1 | 0, a2 | 0, +a3);
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZN10emscripten8internal7InvokerIvJfEE6invokeEPFvfEf($fn, $args) {
 $fn = $fn | 0;
 $args = +$args;
 FUNCTION_TABLE_vf[$fn & 63]($args);
 return;
}
function __Z25debugDrawHeightfieldSolidv() {
 __Z27duDebugDrawHeightfieldSolidP11duDebugDrawRK13rcHeightfield(HEAP32[4950] | 0, HEAP32[4906] | 0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}
function jsCall_iiiii_9(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_8(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_7(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_6(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_5(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_4(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_3(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_2(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_1(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function jsCall_iiiii_0(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}
function b30(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 abort(30);
}
function b22(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(22);
}
function b20(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = +p0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(20);
}
function jsCall_viifff_9(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(9, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_8(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(8, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_7(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(7, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_6(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(6, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_5(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(5, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_4(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(4, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_3(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(3, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_2(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(2, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_1(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(1, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_viifff_0(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 jsCall(0, a1 | 0, a2 | 0, +a3, +a4, +a5);
}
function jsCall_vifffi_9(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(9, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_8(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(8, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_7(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(7, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_6(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(6, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_5(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(5, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_4(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(4, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_3(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(3, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_2(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(2, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_1(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(1, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function jsCall_vifffi_0(a1, a2, a3, a4, a5) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 a5 = a5 | 0;
 jsCall(0, a1 | 0, +a2, +a3, +a4, a5 | 0);
}
function b23(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = +p6;
 abort(23);
}
function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr >> 0] | 0) {
  curr = curr + 1 | 0;
 }
 return curr - ptr | 0;
}
function __Z20debugDrawRawContoursv() {
 __Z22duDebugDrawRawContoursP11duDebugDrawRK12rcContourSetf(HEAP32[4950] | 0, HEAP32[4918] | 0, .5);
 return;
}
function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if ((__THREW__ | 0) == 0) {
  __THREW__ = threw;
  threwValue = value;
 }
}
function __Z23debugDrawNavMeshPortalsv() {
 __Z25duDebugDrawNavMeshPortalsP11duDebugDrawRK9dtNavMesh(HEAP32[4950] | 0, HEAP32[4912] | 0);
 return;
}
function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __Z17debugDrawContoursv() {
 __Z19duDebugDrawContoursP11duDebugDrawRK12rcContourSetf(HEAP32[4950] | 0, HEAP32[4918] | 0, .5);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function jsCall_viiii_9(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_8(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_7(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_6(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_5(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_4(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_3(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_2(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_1(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function jsCall_viiii_0(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}
function dynCall_iif(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iif[index & 31](a1 | 0, +a2) | 0;
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function b26(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = p4 | 0;
 p5 = +p5;
 p6 = +p6;
 abort(26);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}
function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}
function jsCall_iifff_9(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(9, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_8(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(8, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_7(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(7, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_6(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(6, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_5(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(5, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_4(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(4, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_3(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(3, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_2(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(2, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_1(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(1, a1 | 0, +a2, +a3, +a4) | 0;
}
function jsCall_iifff_0(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 return jsCall(0, a1 | 0, +a2, +a3, +a4) | 0;
}
function b19(p0, p1, p2, p3, p4, p5, p6) {
 p0 = +p0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 p6 = p6 | 0;
 abort(19);
}
function b15(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(15);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1 | 0;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}
function b12(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(12);
}
function dynCall_vif(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vif[index & 31](a1 | 0, +a2);
}
function b32(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(32);
 return 0;
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function jsCall_iiii_9(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(9, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_8(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(8, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_7(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(7, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_6(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(6, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_5(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(5, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_4(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(4, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_3(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(3, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_2(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(2, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_1(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(1, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function jsCall_iiii_0(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return jsCall(0, a1 | 0, a2 | 0, a3 | 0) | 0;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZN10emscripten8internal7InvokerIbJEE6invokeEPFbvE($fn) {
 $fn = $fn | 0;
 return FUNCTION_TABLE_i[$fn & 31]() | 0;
}
function jsCall_vifff_9(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(9, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_8(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(8, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_7(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(7, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_6(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(6, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_5(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(5, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_4(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(4, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_3(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(3, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_2(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(2, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_1(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(1, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vifff_0(a1, a2, a3, a4) {
 a1 = a1 | 0;
 a2 = +a2;
 a3 = +a3;
 a4 = +a4;
 jsCall(0, a1 | 0, +a2, +a3, +a4);
}
function jsCall_vfffi_9(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(9, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_8(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(8, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_7(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(7, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_6(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(6, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_5(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(5, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_4(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(4, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_3(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(3, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_2(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(2, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_1(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(1, +a1, +a2, +a3, a4 | 0);
}
function jsCall_vfffi_0(a1, a2, a3, a4) {
 a1 = +a1;
 a2 = +a2;
 a3 = +a3;
 a4 = a4 | 0;
 jsCall(0, +a1, +a2, +a3, a4 | 0);
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZN10emscripten8internal7InvokerIvJEE6invokeEPFvvE($fn) {
 $fn = $fn | 0;
 FUNCTION_TABLE_v[$fn & 63]();
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZN11DebugDrawGLD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}
function jsCall_iiif_9(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(9, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_8(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(8, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_7(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(7, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_6(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(6, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_5(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(5, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_4(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(4, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_3(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(3, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_2(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(2, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_1(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(1, a1 | 0, a2 | 0, +a3) | 0;
}
function jsCall_iiif_0(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 return jsCall(0, a1 | 0, a2 | 0, +a3) | 0;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 if (($this | 0) == 0) {
  return;
 }
 _free($this);
 return;
}
function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 255](a1 | 0) | 0;
}
function b28(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 abort(28);
 return 0;
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}
function __Z11crowdUpdatef($dt) {
 $dt = +$dt;
 __ZN7dtCrowd18updateWithoutDebugEf(HEAP32[4920] | 0, $dt);
 return 1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1 | 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1 | 0;
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}
function __GLOBAL__I_a699() {
 __ZNSt3__18ios_base4InitC2Ev();
 _atexit(160, 24096, ___dso_handle | 0) | 0;
 return;
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}
function jsCall_viii_9(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(9, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_8(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(8, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_7(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(7, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_6(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(6, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_5(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(5, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_4(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(4, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_3(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(3, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_2(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(2, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_1(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(1, a1 | 0, a2 | 0, a3 | 0);
}
function jsCall_viii_0(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 jsCall(0, a1 | 0, a2 | 0, a3 | 0);
}
function b0(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(0);
}
function dynCall_if(index, a1) {
 index = index | 0;
 a1 = +a1;
 return FUNCTION_TABLE_if[index & 31](+a1) | 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}
function b36(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(36);
 return 0;
}
function jsCall_viif_9(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(9, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_8(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(8, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_7(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(7, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_6(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(6, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_5(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(5, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_4(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(4, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_3(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(3, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_2(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(2, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_1(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(1, a1 | 0, a2 | 0, +a3);
}
function jsCall_viif_0(a1, a2, a3) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 jsCall(0, a1 | 0, a2 | 0, +a3);
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}
function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 511](a1 | 0);
}
function b11(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 abort(11);
}
function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZN11DebugDrawGL9depthMaskEb($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 return;
}
function __GLOBAL__I_a553() {
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev();
 return;
}
function b7(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 p4 = p4 | 0;
 abort(7);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}
function __ZN11DebugDrawGL7textureEb($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}
function __ZN11DebugDrawGL3endEv($this) {
 $this = $this | 0;
 _emscripten_run_script(2616);
 return;
}
function dynCall_vf(index, a1) {
 index = index | 0;
 a1 = +a1;
 FUNCTION_TABLE_vf[index & 63](+a1);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}
function jsCall_iii_9(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(9, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_8(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(8, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_7(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(7, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_6(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(6, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_5(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(5, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_4(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(4, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_3(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(3, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_2(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(2, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_1(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(1, a1 | 0, a2 | 0) | 0;
}
function jsCall_iii_0(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 return jsCall(0, a1 | 0, a2 | 0) | 0;
}
function b9(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 abort(9);
 return 0;
}
function b39(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(39);
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}
function __Z24set_detailSampleMaxErrorf($val) {
 $val = +$val;
 HEAPF32[114] = $val;
 return;
}
function jsCall_iif_9(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(9, a1 | 0, +a2) | 0;
}
function jsCall_iif_8(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(8, a1 | 0, +a2) | 0;
}
function jsCall_iif_7(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(7, a1 | 0, +a2) | 0;
}
function jsCall_iif_6(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(6, a1 | 0, +a2) | 0;
}
function jsCall_iif_5(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(5, a1 | 0, +a2) | 0;
}
function jsCall_iif_4(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(4, a1 | 0, +a2) | 0;
}
function jsCall_iif_3(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(3, a1 | 0, +a2) | 0;
}
function jsCall_iif_2(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(2, a1 | 0, +a2) | 0;
}
function jsCall_iif_1(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(1, a1 | 0, +a2) | 0;
}
function jsCall_iif_0(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 return jsCall(0, a1 | 0, +a2) | 0;
}
function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 31]() | 0;
}
function b10(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(10);
 return 0;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 8232;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}
function b27(p0, p1, p2, p3) {
 p0 = +p0;
 p1 = +p1;
 p2 = +p2;
 p3 = p3 | 0;
 abort(27);
}
function b14(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = +p2;
 p3 = +p3;
 abort(14);
}
function __Z20set_detailSampleDistf($val) {
 $val = +$val;
 HEAPF32[116] = $val;
 return;
}
function b16(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 abort(16);
 return 0;
}
function __Z19set_regionMergeSizef($val) {
 $val = +$val;
 HEAPF32[108] = $val;
 return;
}
function jsCall_vii_9(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(9, a1 | 0, a2 | 0);
}
function jsCall_vii_8(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(8, a1 | 0, a2 | 0);
}
function jsCall_vii_7(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(7, a1 | 0, a2 | 0);
}
function jsCall_vii_6(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(6, a1 | 0, a2 | 0);
}
function jsCall_vii_5(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(5, a1 | 0, a2 | 0);
}
function jsCall_vii_4(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(4, a1 | 0, a2 | 0);
}
function jsCall_vii_3(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(3, a1 | 0, a2 | 0);
}
function jsCall_vii_2(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(2, a1 | 0, a2 | 0);
}
function jsCall_vii_1(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(1, a1 | 0, a2 | 0);
}
function jsCall_vii_0(a1, a2) {
 a1 = a1 | 0;
 a2 = a2 | 0;
 jsCall(0, a1 | 0, a2 | 0);
}
function __Z17set_regionMinSizef($val) {
 $val = +$val;
 HEAPF32[106] = $val;
 return;
}
function __Z17set_agentMaxSlopef($val) {
 $val = +$val;
 HEAPF32[124] = $val;
 return;
}
function __Z17set_agentMaxClimbf($val) {
 $val = +$val;
 HEAPF32[126] = $val;
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}
function __Z16set_vertsPerPolyf($val) {
 $val = +$val;
 HEAPF32[104] = $val;
 return;
}
function __Z16set_edgeMaxErrorf($val) {
 $val = +$val;
 HEAPF32[112] = $val;
 return;
}
function __Z15set_agentRadiusf($val) {
 $val = +$val;
 HEAPF32[122] = $val;
 return;
}
function __Z15set_agentHeightf($val) {
 $val = +$val;
 HEAPF32[128] = $val;
 return;
}
function __Z14set_edgeMaxLenf($val) {
 $val = +$val;
 HEAPF32[110] = $val;
 return;
}
function __Z14set_cellHeightf($val) {
 $val = +$val;
 HEAPF32[120] = $val;
 return;
}
function jsCall_vif_9(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(9, a1 | 0, +a2);
}
function jsCall_vif_8(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(8, a1 | 0, +a2);
}
function jsCall_vif_7(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(7, a1 | 0, +a2);
}
function jsCall_vif_6(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(6, a1 | 0, +a2);
}
function jsCall_vif_5(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(5, a1 | 0, +a2);
}
function jsCall_vif_4(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(4, a1 | 0, +a2);
}
function jsCall_vif_3(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(3, a1 | 0, +a2);
}
function jsCall_vif_2(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(2, a1 | 0, +a2);
}
function jsCall_vif_1(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(1, a1 | 0, +a2);
}
function jsCall_vif_0(a1, a2) {
 a1 = a1 | 0;
 a2 = +a2;
 jsCall(0, a1 | 0, +a2);
}
function __Z12set_cellSizef($val) {
 $val = +$val;
 HEAPF32[118] = $val;
 return;
}
function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 63]();
}
function b33(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(33);
}
function __ZNSt3__110moneypunctIwLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}
function b37(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 abort(37);
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 5112;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 1520;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}
function b25(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(25);
 return 0;
}
function __ZNSt3__18messagesIwED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__18messagesIcED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17collateIwED1Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt3__17collateIcED1Ev($this) {
 $this = $this | 0;
 return;
}
function jsCall_ii_9(a1) {
 a1 = a1 | 0;
 return jsCall(9, a1 | 0) | 0;
}
function jsCall_ii_8(a1) {
 a1 = a1 | 0;
 return jsCall(8, a1 | 0) | 0;
}
function jsCall_ii_7(a1) {
 a1 = a1 | 0;
 return jsCall(7, a1 | 0) | 0;
}
function jsCall_ii_6(a1) {
 a1 = a1 | 0;
 return jsCall(6, a1 | 0) | 0;
}
function jsCall_ii_5(a1) {
 a1 = a1 | 0;
 return jsCall(5, a1 | 0) | 0;
}
function jsCall_ii_4(a1) {
 a1 = a1 | 0;
 return jsCall(4, a1 | 0) | 0;
}
function jsCall_ii_3(a1) {
 a1 = a1 | 0;
 return jsCall(3, a1 | 0) | 0;
}
function jsCall_ii_2(a1) {
 a1 = a1 | 0;
 return jsCall(2, a1 | 0) | 0;
}
function jsCall_ii_1(a1) {
 a1 = a1 | 0;
 return jsCall(1, a1 | 0) | 0;
}
function jsCall_ii_0(a1) {
 a1 = a1 | 0;
 return jsCall(0, a1 | 0) | 0;
}
function b21(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(21);
 return 0;
}
function setTempRet9(value) {
 value = value | 0;
 tempRet9 = value;
}
function setTempRet8(value) {
 value = value | 0;
 tempRet8 = value;
}
function setTempRet7(value) {
 value = value | 0;
 tempRet7 = value;
}
function setTempRet6(value) {
 value = value | 0;
 tempRet6 = value;
}
function setTempRet5(value) {
 value = value | 0;
 tempRet5 = value;
}
function setTempRet4(value) {
 value = value | 0;
 tempRet4 = value;
}
function setTempRet3(value) {
 value = value | 0;
 tempRet3 = value;
}
function setTempRet2(value) {
 value = value | 0;
 tempRet2 = value;
}
function setTempRet1(value) {
 value = value | 0;
 tempRet1 = value;
}
function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}
function __ZN11duDebugDrawD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}
function __Z4initv() {
 return (_getThreeJSMeshes() | 0) != 0 | 0;
}
function jsCall_if_9(a1) {
 a1 = +a1;
 return jsCall(9, +a1) | 0;
}
function jsCall_if_8(a1) {
 a1 = +a1;
 return jsCall(8, +a1) | 0;
}
function jsCall_if_7(a1) {
 a1 = +a1;
 return jsCall(7, +a1) | 0;
}
function jsCall_if_6(a1) {
 a1 = +a1;
 return jsCall(6, +a1) | 0;
}
function jsCall_if_5(a1) {
 a1 = +a1;
 return jsCall(5, +a1) | 0;
}
function jsCall_if_4(a1) {
 a1 = +a1;
 return jsCall(4, +a1) | 0;
}
function jsCall_if_3(a1) {
 a1 = +a1;
 return jsCall(3, +a1) | 0;
}
function jsCall_if_2(a1) {
 a1 = +a1;
 return jsCall(2, +a1) | 0;
}
function jsCall_if_1(a1) {
 a1 = +a1;
 return jsCall(1, +a1) | 0;
}
function jsCall_if_0(a1) {
 a1 = +a1;
 return jsCall(0, +a1) | 0;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}
function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}
function jsCall_vi_9(a1) {
 a1 = a1 | 0;
 jsCall(9, a1 | 0);
}
function jsCall_vi_8(a1) {
 a1 = a1 | 0;
 jsCall(8, a1 | 0);
}
function jsCall_vi_7(a1) {
 a1 = a1 | 0;
 jsCall(7, a1 | 0);
}
function jsCall_vi_6(a1) {
 a1 = a1 | 0;
 jsCall(6, a1 | 0);
}
function jsCall_vi_5(a1) {
 a1 = a1 | 0;
 jsCall(5, a1 | 0);
}
function jsCall_vi_4(a1) {
 a1 = a1 | 0;
 jsCall(4, a1 | 0);
}
function jsCall_vi_3(a1) {
 a1 = a1 | 0;
 jsCall(3, a1 | 0);
}
function jsCall_vi_2(a1) {
 a1 = a1 | 0;
 jsCall(2, a1 | 0);
}
function jsCall_vi_1(a1) {
 a1 = a1 | 0;
 jsCall(1, a1 | 0);
}
function jsCall_vi_0(a1) {
 a1 = a1 | 0;
 jsCall(0, a1 | 0);
}
function b5(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(5);
}
function b1(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(1);
}
function jsCall_vf_9(a1) {
 a1 = +a1;
 jsCall(9, +a1);
}
function jsCall_vf_8(a1) {
 a1 = +a1;
 jsCall(8, +a1);
}
function jsCall_vf_7(a1) {
 a1 = +a1;
 jsCall(7, +a1);
}
function jsCall_vf_6(a1) {
 a1 = +a1;
 jsCall(6, +a1);
}
function jsCall_vf_5(a1) {
 a1 = +a1;
 jsCall(5, +a1);
}
function jsCall_vf_4(a1) {
 a1 = +a1;
 jsCall(4, +a1);
}
function jsCall_vf_3(a1) {
 a1 = +a1;
 jsCall(3, +a1);
}
function jsCall_vf_2(a1) {
 a1 = +a1;
 jsCall(2, +a1);
}
function jsCall_vf_1(a1) {
 a1 = +a1;
 jsCall(1, +a1);
}
function jsCall_vf_0(a1) {
 a1 = +a1;
 jsCall(0, +a1);
}
function b6(p0) {
 p0 = p0 | 0;
 abort(6);
 return 0;
}
function _rand() {
 return _rand_r(___rand_seed) | 0;
}
function b8(p0) {
 p0 = +p0;
 abort(8);
 return 0;
}
function jsCall_i_9() {
 return jsCall(9) | 0;
}
function jsCall_i_8() {
 return jsCall(8) | 0;
}
function jsCall_i_7() {
 return jsCall(7) | 0;
}
function jsCall_i_6() {
 return jsCall(6) | 0;
}
function jsCall_i_5() {
 return jsCall(5) | 0;
}
function jsCall_i_4() {
 return jsCall(4) | 0;
}
function jsCall_i_3() {
 return jsCall(3) | 0;
}
function jsCall_i_2() {
 return jsCall(2) | 0;
}
function jsCall_i_1() {
 return jsCall(1) | 0;
}
function jsCall_i_0() {
 return jsCall(0) | 0;
}
function getTempRet9() {
 return tempRet9 | 0;
}
function getTempRet8() {
 return tempRet8 | 0;
}
function getTempRet7() {
 return tempRet7 | 0;
}
function getTempRet6() {
 return tempRet6 | 0;
}
function getTempRet5() {
 return tempRet5 | 0;
}
function getTempRet4() {
 return tempRet4 | 0;
}
function getTempRet3() {
 return tempRet3 | 0;
}
function getTempRet2() {
 return tempRet2 | 0;
}
function getTempRet1() {
 return tempRet1 | 0;
}
function getTempRet0() {
 return tempRet0 | 0;
}
function stackSave() {
 return STACKTOP | 0;
}
function b3(p0) {
 p0 = p0 | 0;
 abort(3);
}
function b29() {
 abort(29);
 return 0;
}
function b2(p0) {
 p0 = +p0;
 abort(2);
}
function jsCall_v_9() {
 jsCall(9);
}
function jsCall_v_8() {
 jsCall(8);
}
function jsCall_v_7() {
 jsCall(7);
}
function jsCall_v_6() {
 jsCall(6);
}
function jsCall_v_5() {
 jsCall(5);
}
function jsCall_v_4() {
 jsCall(4);
}
function jsCall_v_3() {
 jsCall(3);
}
function jsCall_v_2() {
 jsCall(2);
}
function jsCall_v_1() {
 jsCall(1);
}
function jsCall_v_0() {
 jsCall(0);
}
function b34() {
 abort(34);
}

// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_viiiii = [b0,b0,jsCall_viiiii_0,b0,jsCall_viiiii_1,b0,jsCall_viiiii_2,b0,jsCall_viiiii_3,b0,jsCall_viiiii_4,b0,jsCall_viiiii_5,b0,jsCall_viiiii_6,b0,jsCall_viiiii_7,b0,jsCall_viiiii_8,b0,jsCall_viiiii_9,b0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b0,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b0,__ZN10emscripten8internal7InvokerIvJiiiiEE6invokeEPFviiiiEiiii
  ,b0,b0,b0];
  
  var FUNCTION_TABLE_vif = [b1,b1,jsCall_vif_0,b1,jsCall_vif_1,b1,jsCall_vif_2,b1,jsCall_vif_3,b1,jsCall_vif_4,b1,jsCall_vif_5,b1,jsCall_vif_6,b1,jsCall_vif_7,b1,jsCall_vif_8,b1,jsCall_vif_9,b1,__ZN10emscripten8internal7InvokerIvJfEE6invokeEPFvfEf,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1];
  
  var FUNCTION_TABLE_vf = [b2,b2,jsCall_vf_0,b2,jsCall_vf_1,b2,jsCall_vf_2,b2,jsCall_vf_3,b2,jsCall_vf_4,b2,jsCall_vf_5,b2,jsCall_vf_6,b2,jsCall_vf_7,b2,jsCall_vf_8,b2,jsCall_vf_9,b2,__Z19set_regionMergeSizef,b2,__Z12set_cellSizef,b2,__Z24set_detailSampleMaxErrorf,b2,__Z16set_vertsPerPolyf
  ,b2,__Z14set_edgeMaxLenf,b2,__Z17set_agentMaxClimbf,b2,__Z17set_agentMaxSlopef,b2,__Z14set_cellHeightf,b2,__Z17set_regionMinSizef,b2,__Z15set_agentRadiusf,b2,__Z15set_agentHeightf,b2,__Z16set_edgeMaxErrorf,b2,__Z20set_detailSampleDistf,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2];
  
  var FUNCTION_TABLE_vi = [b3,b3,jsCall_vi_0,b3,jsCall_vi_1,b3,jsCall_vi_2,b3,jsCall_vi_3,b3,jsCall_vi_4,b3,jsCall_vi_5,b3,jsCall_vi_6,b3,jsCall_vi_7,b3,jsCall_vi_8,b3,jsCall_vi_9,b3,__ZNSt3__18messagesIwED0Ev,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt12length_errorD0Ev
  ,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev,b3,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,b3,__ZNSt3__16locale2id6__initEv,b3,__ZNSt3__110__stdinbufIwED0Ev,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt11logic_errorD0Ev,b3,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__Z24getNavHeightfieldRegionsNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b3,__ZNSt3__17collateIcED1Ev,b3,__ZNSt3__18ios_base7failureD2Ev,b3,__ZNSt9bad_allocD2Ev,b3,__ZNSt3__16locale5facetD0Ev,b3,__ZNSt3__15ctypeIcED0Ev,b3,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev
  ,b3,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,b3,__ZN11duDebugDrawD2Ev,b3,__ZNSt3__18messagesIcED1Ev,b3,__ZNSt3__16locale5facet16__on_zero_sharedEv,b3,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,___cxx_global_array_dtor73,b3,___cxx_global_array_dtor48,b3,__ZNSt3__110moneypunctIwLb0EED0Ev,b3,___cxx_global_array_dtor45,b3,__ZNSt3__16locale5__impD2Ev,b3,__ZNSt3__18numpunctIcED2Ev,b3,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,b3,__ZNSt3__18numpunctIcED0Ev
  ,b3,__ZNSt13runtime_errorD2Ev,b3,___cxx_global_array_dtor112,b3,__ZNSt3__17collateIwED1Ev,b3,__ZNSt3__110moneypunctIcLb0EED1Ev,b3,__ZNSt3__18numpunctIwED2Ev,b3,__ZNSt3__15ctypeIwED0Ev,b3,_free,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,b3,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,b3,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,b3,__ZNSt3__17collateIwED0Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZN10emscripten8internal7InvokerIvJEE6invokeEPFvvE
  ,b3,__ZNSt11logic_errorD2Ev,b3,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__114error_categoryD2Ev,b3,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b3,__ZNSt3__110moneypunctIwLb0EED1Ev,b3,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,b3,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__18ios_baseD0Ev,b3,__ZNSt3__110moneypunctIcLb1EED0Ev,b3,__ZNSt9bad_allocD0Ev,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b3,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev
  ,b3,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b3,__Z16debugDrawNavMeshh,b3,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,b3,__ZNSt3__18ios_base7failureD0Ev,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__18ios_base4InitD2Ev,b3,__ZNSt3__110moneypunctIwLb1EED0Ev,b3,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,b3,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b3,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b3,__ZN11DebugDrawGL3endEv,b3,__ZNSt3__16locale5__impD0Ev,b3,__ZN11DebugDrawGLD0Ev,b3,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev
  ,b3,__ZNSt8bad_castD0Ev,b3,__ZNSt3__112__do_nothingEPv,b3,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,b3,__ZNSt3__110moneypunctIcLb0EED0Ev,b3,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__17collateIcED0Ev,b3,__ZNSt3__111__stdoutbufIcED0Ev,b3,__ZNSt3__16locale5facetD2Ev,b3,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,b3,__ZNSt3__112system_errorD0Ev,b3,__Z18getNavMeshVerticesNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b3,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b3,__ZNSt3__18numpunctIwED0Ev
  ,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev,b3,__ZNSt8bad_castD2Ev,b3,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b3,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__112system_errorD2Ev,b3,__Z14getRandomPointNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b3,__Z16removeCrowdAgenti,b3,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,b3,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__18messagesIcED0Ev,b3,__ZNSt3__18ios_baseD2Ev,b3,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,b3,__ZNSt3__110__stdinbufIcED0Ev,b3,__ZNSt3__119__iostream_categoryD0Ev
  ,b3,__ZNSt3__110moneypunctIwLb1EED1Ev,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b3,__ZNSt3__110moneypunctIcLb1EED1Ev,b3,__ZNSt3__111__stdoutbufIwED0Ev,b3,___cxx_global_array_dtor97,b3,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,b3,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,b3,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,b3,___cxx_global_array_dtor,b3,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZN10__cxxabiv117__class_type_infoD0Ev,b3,__ZNSt3__18messagesIwED1Ev,b3,__ZN10__cxxabiv116__shim_type_infoD2Ev,b3,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev
  ,b3,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,b3,__ZNSt3__15ctypeIcED2Ev,b3,__ZNSt13runtime_errorD0Ev,b3,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3];
  
  var FUNCTION_TABLE_iifffffffif = [b4,b4,jsCall_iifffffffif_0,b4,jsCall_iifffffffif_1,b4,jsCall_iifffffffif_2,b4,jsCall_iifffffffif_3,b4,jsCall_iifffffffif_4,b4,jsCall_iifffffffif_5,b4,jsCall_iifffffffif_6,b4,jsCall_iifffffffif_7,b4,jsCall_iifffffffif_8,b4,jsCall_iifffffffif_9,b4,__ZN10emscripten8internal7InvokerIiJfffffffhfEE6invokeEPFifffffffhfEfffffffhf,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4];
  
  var FUNCTION_TABLE_vii = [b5,b5,jsCall_vii_0,b5,jsCall_vii_1,b5,jsCall_vii_2,b5,jsCall_vii_3,b5,jsCall_vii_4,b5,jsCall_vii_5,b5,jsCall_vii_6,b5,jsCall_vii_7,b5,jsCall_vii_8,b5,jsCall_vii_9,b5,__ZNKSt3__18numpunctIcE12do_falsenameEv,b5,__ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi,b5,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,b5,__ZN10emscripten8internal7InvokerIvJhEE6invokeEPFvhEh
  ,b5,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,b5,__ZN10emscripten8internal7InvokerIvJNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvS8_EPNS0_11BindingTypeIS8_EUt_E,b5,__ZNKSt3__18numpunctIwE11do_groupingEv,b5,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b5,__ZNKSt3__18numpunctIcE11do_groupingEv,b5,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b5,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,b5,__ZNKSt3__18messagesIcE8do_closeEi,b5,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,b5,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,b5,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,b5,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,b5,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv
  ,b5,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,b5,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,b5,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b5,__ZNKSt3__18numpunctIwE11do_truenameEv,b5,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,b5,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,b5,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,b5,__ZN11DebugDrawGL7textureEb,b5,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b5,__ZNKSt3__18numpunctIcE11do_truenameEv,b5,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b5,__ZN11DebugDrawGL9depthMaskEb,b5,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE
  ,b5,__ZNKSt3__18messagesIwE8do_closeEi,b5,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,b5,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b5,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,b5,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,b5,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,b5,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,b5,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,b5,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5];
  
  var FUNCTION_TABLE_ii = [b6,b6,jsCall_ii_0,b6,jsCall_ii_1,b6,jsCall_ii_2,b6,jsCall_ii_3,b6,jsCall_ii_4,b6,jsCall_ii_5,b6,jsCall_ii_6,b6,jsCall_ii_7,b6,jsCall_ii_8,b6,jsCall_ii_9,b6,__ZNKSt3__120__time_get_c_storageIwE3__rEv,b6,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv
  ,b6,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b6,__ZNKSt3__120__time_get_c_storageIwE3__cEv,b6,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b6,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,b6,__ZNSt3__110__stdinbufIcE5uflowEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,b6,__ZNKSt3__120__time_get_c_storageIwE3__xEv,b6,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,b6,__Z19initWithFileContentNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b6,__ZNKSt8bad_cast4whatEv,b6,__ZNKSt13runtime_error4whatEv
  ,b6,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b6,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__xEv,b6,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,b6,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b6,__ZNSt3__111__stdoutbufIwE4syncEv,b6,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b6,__ZN10emscripten8internal7InvokerIbJEE6invokeEPFbvE,b6,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,b6,__ZNSt3__110__stdinbufIwE9underflowEv
  ,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt9bad_alloc4whatEv,b6,__ZNKSt3__119__iostream_category4nameEv,b6,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b6,__Z12initWithFileNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,b6,__ZNSt3__110__stdinbufIwE5uflowEv,b6,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b6,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b6,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,b6,__ZNSt3__111__stdoutbufIcE4syncEv,b6,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b6,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__rEv,b6,__ZNSt3__110__stdinbufIcE9underflowEv
  ,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b6,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,b6,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,b6,__Z20crowdGetActiveAgentsNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b6,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b6,__ZNKSt11logic_error4whatEv,b6,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b6,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b6,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,b6,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,b6,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,b6,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b6,__ZNKSt3__120__time_get_c_storageIcE3__cEv
  ,b6,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b6,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b6,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
  
  var FUNCTION_TABLE_vifffi = [b7,b7,jsCall_vifffi_0,b7,jsCall_vifffi_1,b7,jsCall_vifffi_2,b7,jsCall_vifffi_3,b7,jsCall_vifffi_4,b7,jsCall_vifffi_5,b7,jsCall_vifffi_6,b7,jsCall_vifffi_7,b7,jsCall_vifffi_8,b7,jsCall_vifffi_9,b7,__ZN10emscripten8internal7InvokerIvJfffiEE6invokeEPFvfffiEfffi,b7,__ZN11DebugDrawGL6vertexEfffj,b7,b7,b7,b7
  ,b7,b7,b7];
  
  var FUNCTION_TABLE_if = [b8,b8,jsCall_if_0,b8,jsCall_if_1,b8,jsCall_if_2,b8,jsCall_if_3,b8,jsCall_if_4,b8,jsCall_if_5,b8,jsCall_if_6,b8,jsCall_if_7,b8,jsCall_if_8,b8,jsCall_if_9,b8,__Z11crowdUpdatef,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8];
  
  var FUNCTION_TABLE_iifff = [b9,b9,jsCall_iifff_0,b9,jsCall_iifff_1,b9,jsCall_iifff_2,b9,jsCall_iifff_3,b9,jsCall_iifff_4,b9,jsCall_iifff_5,b9,jsCall_iifff_6,b9,jsCall_iifff_7,b9,jsCall_iifff_8,b9,jsCall_iifff_9,b9,__Z22crowdRequestMoveTargetifff,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9];
  
  var FUNCTION_TABLE_iiii = [b10,b10,jsCall_iiii_0,b10,jsCall_iiii_1,b10,jsCall_iiii_2,b10,jsCall_iiii_3,b10,jsCall_iiii_4,b10,jsCall_iiii_5,b10,jsCall_iiii_6,b10,jsCall_iiii_7,b10,jsCall_iiii_8,b10,jsCall_iiii_9,b10,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b10,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b10,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b10,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv
  ,b10,__ZNKSt3__15ctypeIwE9do_narrowEwc,b10,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b10,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,b10,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b10,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b10,__ZNKSt3__15ctypeIwE5do_isEtw,b10,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,b10,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b10,__ZNKSt3__15ctypeIcE9do_narrowEcc,b10,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b10,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b10,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,b10,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b10,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,b10,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc
  ,b10,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b10,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b10,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,b10,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10];
  
  var FUNCTION_TABLE_viifff = [b11,b11,jsCall_viifff_0,b11,jsCall_viifff_1,b11,jsCall_viifff_2,b11,jsCall_viifff_3,b11,jsCall_viifff_4,b11,jsCall_viifff_5,b11,jsCall_viifff_6,b11,jsCall_viifff_7,b11,jsCall_viifff_8,b11,jsCall_viifff_9,b11,__ZN10emscripten8internal7InvokerIvJifffEE6invokeEPFvifffEifff,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11];
  
  var FUNCTION_TABLE_viiiiid = [b12,b12,jsCall_viiiiid_0,b12,jsCall_viiiiid_1,b12,jsCall_viiiiid_2,b12,jsCall_viiiiid_3,b12,jsCall_viiiiid_4,b12,jsCall_viiiiid_5,b12,jsCall_viiiiid_6,b12,jsCall_viiiiid_7,b12,jsCall_viiiiid_8,b12,jsCall_viiiiid_9,b12,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b12,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,b12,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b12,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd
  ,b12,b12,b12];
  
  var FUNCTION_TABLE_viiiiiiii = [b13,b13,jsCall_viiiiiiii_0,b13,jsCall_viiiiiiii_1,b13,jsCall_viiiiiiii_2,b13,jsCall_viiiiiiii_3,b13,jsCall_viiiiiiii_4,b13,jsCall_viiiiiiii_5,b13,jsCall_viiiiiiii_6,b13,jsCall_viiiiiiii_7,b13,jsCall_viiiiiiii_8,b13,jsCall_viiiiiiii_9,b13,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b13,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b13,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,b13,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe
  ,b13,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b13,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13];
  
  var FUNCTION_TABLE_vifff = [b14,b14,jsCall_vifff_0,b14,jsCall_vifff_1,b14,jsCall_vifff_2,b14,jsCall_vifff_3,b14,jsCall_vifff_4,b14,jsCall_vifff_5,b14,jsCall_vifff_6,b14,jsCall_vifff_7,b14,jsCall_vifff_8,b14,jsCall_vifff_9,b14,__Z19requestMoveVelocityifff,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14];
  
  var FUNCTION_TABLE_viiiiii = [b15,b15,jsCall_viiiiii_0,b15,jsCall_viiiiii_1,b15,jsCall_viiiiii_2,b15,jsCall_viiiiii_3,b15,jsCall_viiiiii_4,b15,jsCall_viiiiii_5,b15,jsCall_viiiiii_6,b15,jsCall_viiiiii_7,b15,jsCall_viiiiii_8,b15,jsCall_viiiiii_9,b15,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b15,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b15,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb
  ,b15,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b15,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,b15,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b15,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,b15,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b15,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b15,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b15,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15];
  
  var FUNCTION_TABLE_iiif = [b16,b16,jsCall_iiif_0,b16,jsCall_iiif_1,b16,jsCall_iiif_2,b16,jsCall_iiif_3,b16,jsCall_iiif_4,b16,jsCall_iiif_5,b16,jsCall_iiif_6,b16,jsCall_iiif_7,b16,jsCall_iiif_8,b16,jsCall_iiif_9,b16,__ZN10emscripten8internal7InvokerIbJifEE6invokeEPFbifEif,b16,b16,b16,b16,b16,b16
  ,b16,b16,b16];
  
  var FUNCTION_TABLE_vifffffffif = [b17,b17,jsCall_vifffffffif_0,b17,jsCall_vifffffffif_1,b17,jsCall_vifffffffif_2,b17,jsCall_vifffffffif_3,b17,jsCall_vifffffffif_4,b17,jsCall_vifffffffif_5,b17,jsCall_vifffffffif_6,b17,jsCall_vifffffffif_7,b17,jsCall_vifffffffif_8,b17,jsCall_vifffffffif_9,b17,__Z26updateCrowdAgentParametersifffffffhf,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17];
  
  var FUNCTION_TABLE_viffffffii = [b18,b18,jsCall_viffffffii_0,b18,jsCall_viffffffii_1,b18,jsCall_viffffffii_2,b18,jsCall_viffffffii_3,b18,jsCall_viffffffii_4,b18,jsCall_viffffffii_5,b18,jsCall_viffffffii_6,b18,jsCall_viffffffii_7,b18,jsCall_viffffffii_8,b18,jsCall_viffffffii_9,b18,__ZN10emscripten8internal7InvokerIvJffffffiNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvffffffiS8_EffffffiPNS0_11BindingTypeIS8_EUt_E,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18];
  
  var FUNCTION_TABLE_vffffffi = [b19,b19,jsCall_vffffffi_0,b19,jsCall_vffffffi_1,b19,jsCall_vffffffi_2,b19,jsCall_vffffffi_3,b19,jsCall_vffffffi_4,b19,jsCall_vffffffi_5,b19,jsCall_vffffffi_6,b19,jsCall_vffffffi_7,b19,jsCall_vffffffi_8,b19,jsCall_vffffffi_9,b19,__Z16findNearestPointffffffNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b19,__Z17setPolyUnwalkablefffffft,b19,__Z15findNearestPolyffffffNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b19,b19
  ,b19,b19,b19];
  
  var FUNCTION_TABLE_vffffffii = [b20,b20,jsCall_vffffffii_0,b20,jsCall_vffffffii_1,b20,jsCall_vffffffii_2,b20,jsCall_vffffffii_3,b20,jsCall_vffffffii_4,b20,jsCall_vffffffii_5,b20,jsCall_vffffffii_6,b20,jsCall_vffffffii_7,b20,jsCall_vffffffii_8,b20,jsCall_vffffffii_9,b20,__Z8findPathffffffiNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b20,b20,b20,b20,b20,b20
  ,b20,b20,b20];
  
  var FUNCTION_TABLE_iif = [b21,b21,jsCall_iif_0,b21,jsCall_iif_1,b21,jsCall_iif_2,b21,jsCall_iif_3,b21,jsCall_iif_4,b21,jsCall_iif_5,b21,jsCall_iif_6,b21,jsCall_iif_7,b21,jsCall_iif_8,b21,jsCall_iif_9,b21,__ZN10emscripten8internal7InvokerIbJfEE6invokeEPFbfEf,b21,__Z9initCrowdif,b21,b21,b21,b21
  ,b21,b21,b21];
  
  var FUNCTION_TABLE_viiiiiii = [b22,b22,jsCall_viiiiiii_0,b22,jsCall_viiiiiii_1,b22,jsCall_viiiiiii_2,b22,jsCall_viiiiiii_3,b22,jsCall_viiiiiii_4,b22,jsCall_viiiiiii_5,b22,jsCall_viiiiiii_6,b22,jsCall_viiiiiii_7,b22,jsCall_viiiiiii_8,b22,jsCall_viiiiiii_9,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE
  ,b22,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b22,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b22,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx
  ,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,b22,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm
  ,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,b22,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
  ,b22,b22,b22,b22,b22,b22,b22,b22,b22];
  
  var FUNCTION_TABLE_viiiiiid = [b23,b23,jsCall_viiiiiid_0,b23,jsCall_viiiiiid_1,b23,jsCall_viiiiiid_2,b23,jsCall_viiiiiid_3,b23,jsCall_viiiiiid_4,b23,jsCall_viiiiiid_5,b23,jsCall_viiiiiid_6,b23,jsCall_viiiiiid_7,b23,jsCall_viiiiiid_8,b23,jsCall_viiiiiid_9,b23,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b23,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b23,b23,b23,b23
  ,b23,b23,b23];
  
  var FUNCTION_TABLE_viiiiiiiii = [b24,b24,jsCall_viiiiiiiii_0,b24,jsCall_viiiiiiiii_1,b24,jsCall_viiiiiiiii_2,b24,jsCall_viiiiiiiii_3,b24,jsCall_viiiiiiiii_4,b24,jsCall_viiiiiiiii_5,b24,jsCall_viiiiiiiii_6,b24,jsCall_viiiiiiiii_7,b24,jsCall_viiiiiiiii_8,b24,jsCall_viiiiiiiii_9,b24,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b24,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b24,b24,b24,b24
  ,b24,b24,b24];
  
  var FUNCTION_TABLE_iii = [b25,b25,jsCall_iii_0,b25,jsCall_iii_1,b25,jsCall_iii_2,b25,jsCall_iii_3,b25,jsCall_iii_4,b25,jsCall_iii_5,b25,jsCall_iii_6,b25,jsCall_iii_7,b25,jsCall_iii_8,b25,jsCall_iii_9,b25,__ZNSt3__110__stdinbufIcE9pbackfailEi,b25,__ZNKSt3__15ctypeIwE8do_widenEc,b25,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,b25,__ZNKSt3__15ctypeIcE8do_widenEc
  ,b25,__ZNKSt3__15ctypeIcE10do_toupperEc,b25,__ZNSt3__110__stdinbufIwE9pbackfailEj,b25,__ZL12compareItemZPKvS0_,b25,__ZNSt3__111__stdoutbufIcE8overflowEi,b25,__ZNKSt3__15ctypeIwE10do_toupperEw,b25,__ZL12compareItemXPKvS0_276,b25,__ZL12compareItemXPKvS0_,b25,__ZNKSt3__15ctypeIcE10do_tolowerEc,b25,__ZL12compareItemYPKvS0_,b25,__ZN10emscripten8internal7InvokerIbJNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFbS8_EPNS0_11BindingTypeIS8_EUt_E,b25,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b25,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,b25,__ZL12compareItemYPKvS0_275,b25,__ZNKSt3__15ctypeIwE10do_tolowerEw,b25,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi
  ,b25,__ZNSt3__111__stdoutbufIwE8overflowEj,b25,b25,b25];
  
  var FUNCTION_TABLE_vifffiff = [b26,b26,jsCall_vifffiff_0,b26,jsCall_vifffiff_1,b26,jsCall_vifffiff_2,b26,jsCall_vifffiff_3,b26,jsCall_vifffiff_4,b26,jsCall_vifffiff_5,b26,jsCall_vifffiff_6,b26,jsCall_vifffiff_7,b26,jsCall_vifffiff_8,b26,jsCall_vifffiff_9,b26,__ZN11DebugDrawGL6vertexEfffjff,b26,b26,b26,b26,b26,b26
  ,b26,b26,b26];
  
  var FUNCTION_TABLE_vfffi = [b27,b27,jsCall_vfffi_0,b27,jsCall_vfffi_1,b27,jsCall_vfffi_2,b27,jsCall_vfffi_3,b27,jsCall_vfffi_4,b27,jsCall_vfffi_5,b27,jsCall_vfffi_6,b27,jsCall_vfffi_7,b27,jsCall_vfffi_8,b27,jsCall_vfffi_9,b27,__Z17bareGeomAddVertexfffi,b27,b27,b27,b27,b27,b27
  ,b27,b27,b27];
  
  var FUNCTION_TABLE_iiifff = [b28,b28,jsCall_iiifff_0,b28,jsCall_iiifff_1,b28,jsCall_iiifff_2,b28,jsCall_iiifff_3,b28,jsCall_iiifff_4,b28,jsCall_iiifff_5,b28,jsCall_iiifff_6,b28,jsCall_iiifff_7,b28,jsCall_iiifff_8,b28,jsCall_iiifff_9,b28,__ZN10emscripten8internal7InvokerIbJifffEE6invokeEPFbifffEifff,b28,b28,b28,b28,b28,b28
  ,b28,b28,b28];
  
  var FUNCTION_TABLE_i = [b29,b29,jsCall_i_0,b29,jsCall_i_1,b29,jsCall_i_2,b29,jsCall_i_3,b29,jsCall_i_4,b29,jsCall_i_5,b29,jsCall_i_6,b29,jsCall_i_7,b29,jsCall_i_8,b29,jsCall_i_9,b29,__Z5buildv,b29,__Z4initv,b29,b29,b29,b29
  ,b29,b29,b29];
  
  var FUNCTION_TABLE_viffffffi = [b30,b30,jsCall_viffffffi_0,b30,jsCall_viffffffi_1,b30,jsCall_viffffffi_2,b30,jsCall_viffffffi_3,b30,jsCall_viffffffi_4,b30,jsCall_viffffffi_5,b30,jsCall_viffffffi_6,b30,jsCall_viffffffi_7,b30,jsCall_viffffffi_8,b30,jsCall_viffffffi_9,b30,__ZN10emscripten8internal7InvokerIvJfffffftEE6invokeEPFvfffffftEfffffft,b30,__ZN10emscripten8internal7InvokerIvJffffffNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFvffffffS8_EffffffPNS0_11BindingTypeIS8_EUt_E,b30,b30,b30,b30
  ,b30,b30,b30];
  
  var FUNCTION_TABLE_viifffffffif = [b31,b31,jsCall_viifffffffif_0,b31,jsCall_viifffffffif_1,b31,jsCall_viifffffffif_2,b31,jsCall_viifffffffif_3,b31,jsCall_viifffffffif_4,b31,jsCall_viifffffffif_5,b31,jsCall_viifffffffif_6,b31,jsCall_viifffffffif_7,b31,jsCall_viifffffffif_8,b31,jsCall_viifffffffif_9,b31,__ZN10emscripten8internal7InvokerIvJifffffffhfEE6invokeEPFvifffffffhfEifffffffhf,b31,b31,b31,b31,b31,b31
  ,b31,b31,b31];
  
  var FUNCTION_TABLE_iiiiii = [b32,b32,jsCall_iiiiii_0,b32,jsCall_iiiiii_1,b32,jsCall_iiiiii_2,b32,jsCall_iiiiii_3,b32,jsCall_iiiiii_4,b32,jsCall_iiiiii_5,b32,jsCall_iiiiii_6,b32,jsCall_iiiiii_7,b32,jsCall_iiiiii_8,b32,jsCall_iiiiii_9,b32,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b32,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b32,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b32,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j
  ,b32,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b32,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b32,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b32,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b32,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,b32,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b32,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b32,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b32,b32,b32,b32,b32,b32,b32,b32,b32,b32,b32,b32,b32,b32
  ,b32,b32,b32,b32,b32];
  
  var FUNCTION_TABLE_viii = [b33,b33,jsCall_viii_0,b33,jsCall_viii_1,b33,jsCall_viii_2,b33,jsCall_viii_3,b33,jsCall_viii_4,b33,jsCall_viii_5,b33,jsCall_viii_6,b33,jsCall_viii_7,b33,jsCall_viii_8,b33,jsCall_viii_9,b33,__ZN11DebugDrawGL6vertexEPKfj,b33,__ZNKSt3__114error_category23default_error_conditionEi,b33,__ZNKSt3__119__iostream_category7messageEi,b33,b33
  ,b33,b33,b33];
  
  var FUNCTION_TABLE_v = [b34,b34,jsCall_v_0,b34,jsCall_v_1,b34,jsCall_v_2,b34,jsCall_v_3,b34,jsCall_v_4,b34,jsCall_v_5,b34,jsCall_v_6,b34,jsCall_v_7,b34,jsCall_v_8,b34,jsCall_v_9,b34,__Z12bareGeomInitv,b34,__Z23debugDrawNavMeshPortalsv,b34,__Z16bareGeomValidatev,b34,__Z28debugDrawHeightfieldWalkablev
  ,b34,__Z17debugDrawContoursv,b34,__Z26debugDrawRegionConnectionsv,b34,__Z20debugDrawRawContoursv,b34,__Z25debugDrawHeightfieldSolidv,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34,b34
  ,b34,b34,b34,b34,b34];
  
  var FUNCTION_TABLE_iiiiiiiii = [b35,b35,jsCall_iiiiiiiii_0,b35,jsCall_iiiiiiiii_1,b35,jsCall_iiiiiiiii_2,b35,jsCall_iiiiiiiii_3,b35,jsCall_iiiiiiiii_4,b35,jsCall_iiiiiiiii_5,b35,jsCall_iiiiiiiii_6,b35,jsCall_iiiiiiiii_7,b35,jsCall_iiiiiiiii_8,b35,jsCall_iiiiiiiii_9,b35,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,b35,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b35,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,b35,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_
  ,b35,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b35,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,b35,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,b35,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35,b35
  ,b35,b35,b35,b35,b35];
  
  var FUNCTION_TABLE_iiiii = [b36,b36,jsCall_iiiii_0,b36,jsCall_iiiii_1,b36,jsCall_iiiii_2,b36,jsCall_iiiii_3,b36,jsCall_iiiii_4,b36,jsCall_iiiii_5,b36,jsCall_iiiii_6,b36,jsCall_iiiii_7,b36,jsCall_iiiii_8,b36,jsCall_iiiii_9,b36,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,b36,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,b36,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b36,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw
  ,b36,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b36];
  
  var FUNCTION_TABLE_viif = [b37,b37,jsCall_viif_0,b37,jsCall_viif_1,b37,jsCall_viif_2,b37,jsCall_viif_3,b37,jsCall_viif_4,b37,jsCall_viif_5,b37,jsCall_viif_6,b37,jsCall_viif_7,b37,jsCall_viif_8,b37,jsCall_viif_9,b37,__ZN11DebugDrawGL5beginE21duDebugDrawPrimitivesf,b37,b37,b37,b37,b37,b37
  ,b37,b37,b37];
  
  var FUNCTION_TABLE_ifffffffif = [b38,b38,jsCall_ifffffffif_0,b38,jsCall_ifffffffif_1,b38,jsCall_ifffffffif_2,b38,jsCall_ifffffffif_3,b38,jsCall_ifffffffif_4,b38,jsCall_ifffffffif_5,b38,jsCall_ifffffffif_6,b38,jsCall_ifffffffif_7,b38,jsCall_ifffffffif_8,b38,jsCall_ifffffffif_9,b38,__Z13addCrowdAgentfffffffhf,b38,b38,b38,b38,b38,b38
  ,b38,b38,b38];
  
  var FUNCTION_TABLE_viiii = [b39,b39,jsCall_viiii_0,b39,jsCall_viiii_1,b39,jsCall_viiii_2,b39,jsCall_viiii_3,b39,jsCall_viiii_4,b39,jsCall_viiii_5,b39,jsCall_viiii_6,b39,jsCall_viiii_7,b39,jsCall_viiii_8,b39,jsCall_viiii_9,b39,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b39,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b39,__Z19bareGeomAddTriangleiiii,b39,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi
  ,b39,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b39,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b39,__ZN11DebugDrawGL6vertexEPKfjS1_,b39,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,b39,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39,b39
  ,b39,b39,b39,b39,b39];
  

  return { _strlen: _strlen, __GLOBAL__I_a553: __GLOBAL__I_a553, _free: _free, _rand_r: _rand_r, _realloc: _realloc, _strncpy: _strncpy, _memmove: _memmove, __GLOBAL__I_a: __GLOBAL__I_a, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _emscripten_replace_memory: _emscripten_replace_memory, __GLOBAL__I_a699: __GLOBAL__I_a699, ___getTypeName: ___getTypeName, _rand: _rand, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, getTempRet0: getTempRet0, getTempRet1: getTempRet1, getTempRet2: getTempRet2, getTempRet3: getTempRet3, getTempRet4: getTempRet4, getTempRet5: getTempRet5, getTempRet6: getTempRet6, getTempRet7: getTempRet7, getTempRet8: getTempRet8, getTempRet9: getTempRet9, dynCall_viiiii: dynCall_viiiii, dynCall_vif: dynCall_vif, dynCall_vf: dynCall_vf, dynCall_vi: dynCall_vi, dynCall_iifffffffif: dynCall_iifffffffif, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_vifffi: dynCall_vifffi, dynCall_if: dynCall_if, dynCall_iifff: dynCall_iifff, dynCall_iiii: dynCall_iiii, dynCall_viifff: dynCall_viifff, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_vifff: dynCall_vifff, dynCall_viiiiii: dynCall_viiiiii, dynCall_iiif: dynCall_iiif, dynCall_vifffffffif: dynCall_vifffffffif, dynCall_viffffffii: dynCall_viffffffii, dynCall_vffffffi: dynCall_vffffffi, dynCall_vffffffii: dynCall_vffffffii, dynCall_iif: dynCall_iif, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_iii: dynCall_iii, dynCall_vifffiff: dynCall_vifffiff, dynCall_vfffi: dynCall_vfffi, dynCall_iiifff: dynCall_iiifff, dynCall_i: dynCall_i, dynCall_viffffffi: dynCall_viffffffi, dynCall_viifffffffif: dynCall_viifffffffif, dynCall_iiiiii: dynCall_iiiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viif: dynCall_viif, dynCall_ifffffffif: dynCall_ifffffffif, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "jsCall": jsCall, "invoke_viiiii": invoke_viiiii, "invoke_vif": invoke_vif, "invoke_vf": invoke_vf, "invoke_vi": invoke_vi, "invoke_iifffffffif": invoke_iifffffffif, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_vifffi": invoke_vifffi, "invoke_if": invoke_if, "invoke_iifff": invoke_iifff, "invoke_iiii": invoke_iiii, "invoke_viifff": invoke_viifff, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_vifff": invoke_vifff, "invoke_viiiiii": invoke_viiiiii, "invoke_iiif": invoke_iiif, "invoke_vifffffffif": invoke_vifffffffif, "invoke_viffffffii": invoke_viffffffii, "invoke_vffffffi": invoke_vffffffi, "invoke_vffffffii": invoke_vffffffii, "invoke_iif": invoke_iif, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_iii": invoke_iii, "invoke_vifffiff": invoke_vifffiff, "invoke_vfffi": invoke_vfffi, "invoke_iiifff": invoke_iiifff, "invoke_i": invoke_i, "invoke_viffffffi": invoke_viffffffi, "invoke_viifffffffif": invoke_viifffffffif, "invoke_iiiiii": invoke_iiiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viif": invoke_viif, "invoke_ifffffffif": invoke_ifffffffif, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "__embind_register_std_string": __embind_register_std_string, "__embind_register_std_wstring": __embind_register_std_wstring, "_strtoull": _strtoull, "_fflush": _fflush, "_flush_active_agents_callback": _flush_active_agents_callback, "_fputc": _fputc, "_llvm_stackrestore": _llvm_stackrestore, "_fwrite": _fwrite, "_send": _send, "_fputs": _fputs, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "__embind_register_emval": __embind_register_emval, "_isspace": _isspace, "_read": _read, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "_fsync": _fsync, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "__embind_register_memory_view": __embind_register_memory_view, "___resumeException": ___resumeException, "___cxa_end_catch": ___cxa_end_catch, "_llvm_va_end": _llvm_va_end, "_cosf": _cosf, "_getThreeJSMeshes": _getThreeJSMeshes, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "__embind_register_void": __embind_register_void, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_close": _close, "_isdigit_l": _isdigit_l, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "__embind_register_integer": __embind_register_integer, "_ftell": _ftell, "_exit": _exit, "_sprintf": _sprintf, "_asprintf": _asprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_atan2f": _atan2f, "_catopen": _catopen, "_catgets": _catgets, "_fmod": _fmod, "__isLeapYear": __isLeapYear, "__embind_register_float": __embind_register_float, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "__embind_register_function": __embind_register_function, "___cxa_begin_catch": ___cxa_begin_catch, "_sinf": _sinf, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_agentPool_add": _agentPool_add, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_llvm_stacksave": _llvm_stacksave, "_mkport": _mkport, "_copysign": _copysign, "_agentPool_clear": _agentPool_clear, "__exit": __exit, "_strftime": _strftime, "_fabsf": _fabsf, "_floorf": _floorf, "___cxa_throw": ___cxa_throw, "_agentPool_get": _agentPool_get, "_printf": _printf, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_sqrtf": _sqrtf, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_puts": _puts, "_strtoll_l": _strtoll_l, "_fgetc": _fgetc, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_emscripten_run_script": _emscripten_run_script, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "__embind_register_bool": __embind_register_bool, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_fread": _fread, "_strftime_l": _strftime_l, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__reallyNegative": __reallyNegative, "__addDays": __addDays, "_fabs": _fabs, "_fseek": _fseek, "_write": _write, "___cxa_allocate_exception": ___cxa_allocate_exception, "_ceilf": _ceilf, "_vasprintf": _vasprintf, "_llvm_invariant_start": _llvm_invariant_start, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "___rand_seed": ___rand_seed, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTIm": __ZTIm, "__ZTIh": __ZTIh, "__ZTIj": __ZTIj, "__ZTId": __ZTId, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTIc": __ZTIc, "_stderr": _stderr, "__ZTIi": __ZTIi, "_stdout": _stdout, "__ZTIf": __ZTIf, "__ZTIs": __ZTIs, "__ZTISt9exception": __ZTISt9exception, "__ZTIa": __ZTIa, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "___dso_handle": ___dso_handle, "__ZTIl": __ZTIl, "__ZTIt": __ZTIt }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var __GLOBAL__I_a553 = Module["__GLOBAL__I_a553"] = asm["__GLOBAL__I_a553"];
var _free = Module["_free"] = asm["_free"];
var _rand_r = Module["_rand_r"] = asm["_rand_r"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var __GLOBAL__I_a699 = Module["__GLOBAL__I_a699"] = asm["__GLOBAL__I_a699"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var _rand = Module["_rand"] = asm["_rand"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vif = Module["dynCall_vif"] = asm["dynCall_vif"];
var dynCall_vf = Module["dynCall_vf"] = asm["dynCall_vf"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_iifffffffif = Module["dynCall_iifffffffif"] = asm["dynCall_iifffffffif"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_vifffi = Module["dynCall_vifffi"] = asm["dynCall_vifffi"];
var dynCall_if = Module["dynCall_if"] = asm["dynCall_if"];
var dynCall_iifff = Module["dynCall_iifff"] = asm["dynCall_iifff"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viifff = Module["dynCall_viifff"] = asm["dynCall_viifff"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_vifff = Module["dynCall_vifff"] = asm["dynCall_vifff"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiif = Module["dynCall_iiif"] = asm["dynCall_iiif"];
var dynCall_vifffffffif = Module["dynCall_vifffffffif"] = asm["dynCall_vifffffffif"];
var dynCall_viffffffii = Module["dynCall_viffffffii"] = asm["dynCall_viffffffii"];
var dynCall_vffffffi = Module["dynCall_vffffffi"] = asm["dynCall_vffffffi"];
var dynCall_vffffffii = Module["dynCall_vffffffii"] = asm["dynCall_vffffffii"];
var dynCall_iif = Module["dynCall_iif"] = asm["dynCall_iif"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_vifffiff = Module["dynCall_vifffiff"] = asm["dynCall_vifffiff"];
var dynCall_vfffi = Module["dynCall_vfffi"] = asm["dynCall_vfffi"];
var dynCall_iiifff = Module["dynCall_iiifff"] = asm["dynCall_iiifff"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_viffffffi = Module["dynCall_viffffffi"] = asm["dynCall_viffffffi"];
var dynCall_viifffffffif = Module["dynCall_viifffffffif"] = asm["dynCall_viifffffffif"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viif = Module["dynCall_viif"] = asm["dynCall_viif"];
var dynCall_ifffffffif = Module["dynCall_ifffffffif"] = asm["dynCall_ifffffffif"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}
/*global Module, asm*/
/*global _malloc, _free, _memcpy*/
/*global FUNCTION_TABLE, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64*/
/*global readLatin1String*/
/*global __emval_register, _emval_handle_array, __emval_decref*/
/*global ___getTypeName*/
/*jslint sub:true*/ /* The symbols 'fromWireType' and 'toWireType' must be accessed via array notation to be closure-safe since craftInvokerFunction crafts functions as strings that can't be closured. */
var InternalError = Module['InternalError'] = extendError(Error, 'InternalError');
var BindingError = Module['BindingError'] = extendError(Error, 'BindingError');
var UnboundTypeError = Module['UnboundTypeError'] = extendError(BindingError, 'UnboundTypeError');

function throwInternalError(message) {
    throw new InternalError(message);
}

function throwBindingError(message) {
    throw new BindingError(message);
}

function throwUnboundTypeError(message, types) {
    var unboundTypes = [];
    var seen = {};
    function visit(type) {
        if (seen[type]) {
            return;
        }
        if (registeredTypes[type]) {
            return;
        }
        if (typeDependencies[type]) {
            typeDependencies[type].forEach(visit);
            return;
        }
        unboundTypes.push(type);
        seen[type] = true;
    }
    types.forEach(visit);

    throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
}

// Creates a function overload resolution table to the given method 'methodName' in the given prototype,
// if the overload table doesn't yet exist.
function ensureOverloadTable(proto, methodName, humanName) {
    if (undefined === proto[methodName].overloadTable) {
        var prevFunc = proto[methodName];
        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
        proto[methodName] = function() {
            // TODO This check can be removed in -O3 level "unsafe" optimizations.
            if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
            }
            return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
        };
        // Move the previous function into the overload table.
        proto[methodName].overloadTable = [];
        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
    }
}

/* Registers a symbol (function, class, enum, ...) as part of the Module JS object so that
   hand-written code is able to access that symbol via 'Module.name'.
   name: The name of the symbol that's being exposed.
   value: The object itself to expose (function, class, ...)
   numArguments: For functions, specifies the number of arguments the function takes in. For other types, unused and undefined.

   To implement support for multiple overloads of a function, an 'overload selector' function is used. That selector function chooses
   the appropriate overload to call from an function overload table. This selector function is only used if multiple overloads are
   actually registered, since it carries a slight performance penalty. */
function exposePublicSymbol(name, value, numArguments) {
    if (Module.hasOwnProperty(name)) {
        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
            throwBindingError("Cannot register public name '" + name + "' twice");
        }

        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
        // that routes between the two.
        ensureOverloadTable(Module, name, name);
        if (Module.hasOwnProperty(numArguments)) {
            throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
        }
        // Add the new function into the overload table.
        Module[name].overloadTable[numArguments] = value;
    }
    else {
        Module[name] = value;
        if (undefined !== numArguments) {
            Module[name].numArguments = numArguments;
        }
    }
}

function replacePublicSymbol(name, value, numArguments) {
    if (!Module.hasOwnProperty(name)) {
        throwInternalError('Replacing nonexistant public symbol');
    }
    // If there's an overload table for this symbol, replace the symbol in the overload table instead.
    if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
        Module[name].overloadTable[numArguments] = value;
    }
    else {
        Module[name] = value;
    }
}

// from https://github.com/imvu/imvujs/blob/master/src/error.js
function extendError(baseErrorType, errorName) {
    var errorClass = createNamedFunction(errorName, function(message) {
        this.name = errorName;
        this.message = message;

        var stack = (new Error(message)).stack;
        if (stack !== undefined) {
            this.stack = this.toString() + '\n' +
                stack.replace(/^Error(:[^\n]*)?\n/, '');
        }
    });
    errorClass.prototype = Object.create(baseErrorType.prototype);
    errorClass.prototype.constructor = errorClass;
    errorClass.prototype.toString = function() {
        if (this.message === undefined) {
            return this.name;
        } else {
            return this.name + ': ' + this.message;
        }
    };

    return errorClass;
}


// from https://github.com/imvu/imvujs/blob/master/src/function.js
function createNamedFunction(name, body) {
    name = makeLegalFunctionName(name);
    /*jshint evil:true*/
    return new Function(
        "body",
        "return function " + name + "() {\n" +
        "    \"use strict\";" +
        "    return body.apply(this, arguments);\n" +
        "};\n"
    )(body);
}

function _embind_repr(v) {
    var t = typeof v;
    if (t === 'object' || t === 'array' || t === 'function') {
        return v.toString();
    } else {
        return '' + v;
    }
}

// typeID -> { toWireType: ..., fromWireType: ... }
var registeredTypes = {};

// typeID -> [callback]
var awaitingDependencies = {};

// typeID -> [dependentTypes]
var typeDependencies = {};

// class typeID -> {pointerType: ..., constPointerType: ...}
var registeredPointers = {};

function registerType(rawType, registeredInstance) {
    if (!('argPackAdvance' in registeredInstance)) {
        throw new TypeError('registerType registeredInstance requires argPackAdvance');
    }

    var name = registeredInstance.name;
    if (!rawType) {
        throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
    }
    if (registeredTypes.hasOwnProperty(rawType)) {
        throwBindingError("Cannot register type '" + name + "' twice");
    }

    registeredTypes[rawType] = registeredInstance;
    delete typeDependencies[rawType];

    if (awaitingDependencies.hasOwnProperty(rawType)) {
        var callbacks = awaitingDependencies[rawType];
        delete awaitingDependencies[rawType];
        callbacks.forEach(function(cb) {
            cb();
        });
    }
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
    myTypes.forEach(function(type) {
        typeDependencies[type] = dependentTypes;
    });

    function onComplete(typeConverters) {
        var myTypeConverters = getTypeConverters(typeConverters);
        if (myTypeConverters.length !== myTypes.length) {
            throwInternalError('Mismatched type converter count');
        }
        for (var i = 0; i < myTypes.length; ++i) {
            registerType(myTypes[i], myTypeConverters[i]);
        }
    }

    var typeConverters = new Array(dependentTypes.length);
    var unregisteredTypes = [];
    var registered = 0;
    dependentTypes.forEach(function(dt, i) {
        if (registeredTypes.hasOwnProperty(dt)) {
            typeConverters[i] = registeredTypes[dt];
        } else {
            unregisteredTypes.push(dt);
            if (!awaitingDependencies.hasOwnProperty(dt)) {
                awaitingDependencies[dt] = [];
            }
            awaitingDependencies[dt].push(function() {
                typeConverters[i] = registeredTypes[dt];
                ++registered;
                if (registered === unregisteredTypes.length) {
                    onComplete(typeConverters);
                }
            });
        }
    });
    if (0 === unregisteredTypes.length) {
        onComplete(typeConverters);
    }
}

var __charCodes = (function() {
    var codes = new Array(256);
    for (var i = 0; i < 256; ++i) {
        codes[i] = String.fromCharCode(i);
    }
    return codes;
})();

function readLatin1String(ptr) {
    var ret = "";
    var c = ptr;
    while (HEAPU8[c]) {
        ret += __charCodes[HEAPU8[c++]];
    }
    return ret;
}

function getTypeName(type) {
    var ptr = ___getTypeName(type);
    var rv = readLatin1String(ptr);
    _free(ptr);
    return rv;
}

function heap32VectorToArray(count, firstElement) {
    var array = [];
    for (var i = 0; i < count; i++) {
        array.push(HEAP32[(firstElement >> 2) + i]);
    }
    return array;
}

function requireRegisteredType(rawType, humanName) {
    var impl = registeredTypes[rawType];
    if (undefined === impl) {
        throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
    }
    return impl;
}

function __embind_register_void(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'argPackAdvance': 0,
        'fromWireType': function() {
            return undefined;
        },
        'toWireType': function(destructors, o) {
            // TODO: assert if anything else is given?
            return undefined;
        },
    });
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
    var shift = getShiftFromSize(size);

    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'fromWireType': function(wt) {
            // ambiguous emscripten ABI: sometimes return values are
            // true or false, and sometimes integers (0 or 1)
            return !!wt;
        },
        'toWireType': function(destructors, o) {
            return o ? trueValue : falseValue;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': function(pointer) {
            // TODO: if heap is fixed (like in asm.js) this could be executed outside
            var heap;
            if (size === 1) {
                heap = HEAP8;
            } else if (size === 2) {
                heap = HEAP16;
            } else if (size === 4) {
                heap = HEAP32;
            } else {
                throw new TypeError("Unknown boolean type size: " + name);
            }
            return this['fromWireType'](heap[pointer >> shift]);
        },
        destructorFunction: null, // This type does not need a destructor
    });
}

function getShiftFromSize(size) {
    switch (size) {
        case 1: return 0;
        case 2: return 1;
        case 4: return 2;
        case 8: return 3;
        default:
            throw new TypeError('Unknown type size: ' + size);
    }
}

function integerReadValueFromPointer(name, shift, signed) {
    switch (shift) {
        case 0: return function(pointer) {
            var heap = signed ? HEAP8 : HEAPU8;
            return this['fromWireType'](heap[pointer]);
        };
        case 1: return function(pointer) {
            var heap = signed ? HEAP16 : HEAPU16;
            return this['fromWireType'](heap[pointer >> 1]);
        };
        case 2: return function(pointer) {
            var heap = signed ? HEAP32 : HEAPU32;
            return this['fromWireType'](heap[pointer >> 2]);
        };
        default:
            throw new TypeError("Unknown integer type: " + name);
    }
}

function floatReadValueFromPointer(name, shift) {
    switch (shift) {
        case 2: return function(pointer) {
            return this['fromWireType'](HEAPF32[pointer >> 2]);
        };
        case 3: return function(pointer) {
            return this['fromWireType'](HEAPF64[pointer >> 3]);
        };
        default:
            throw new TypeError("Unknown float type: " + name);
    }
}

// When converting a number from JS to C++ side, the valid range of the number is
// [minRange, maxRange], inclusive.
function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
    name = readLatin1String(name);
    if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
        maxRange = 4294967295;
    }

    var shift = getShiftFromSize(size);

    registerType(primitiveType, {
        name: name,
        'fromWireType': function(value) {
            return value;
        },
        'toWireType': function(destructors, value) {
            // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
            // avoid the following two if()s and assume value is of proper type.
            if (typeof value !== "number" && typeof value !== "boolean") {
                throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
            }
            if (value < minRange || value > maxRange) {
                throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
            }
            return value | 0;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
        destructorFunction: null, // This type does not need a destructor
    });
}



function __embind_register_float(rawType, name, size) {
    var shift = getShiftFromSize(size);
    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'fromWireType': function(value) {
            return value;
        },
        'toWireType': function(destructors, value) {
            // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
            // avoid the following if() and assume value is of proper type.
            if (typeof value !== "number" && typeof value !== "boolean") {
                throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
            }
            return value;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': floatReadValueFromPointer(name, shift),
        destructorFunction: null, // This type does not need a destructor
    });
}

// For types whose wire types are 32-bit pointers.
function simpleReadValueFromPointer(pointer) {
    return this['fromWireType'](HEAPU32[pointer >> 2]);
}

function __embind_register_std_string(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'fromWireType': function(value) {
            var length = HEAPU32[value >> 2];
            var a = new Array(length);
            for (var i = 0; i < length; ++i) {
                a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
            }
            _free(value);
            return a.join('');
        },
        'toWireType': function(destructors, value) {
            if (value instanceof ArrayBuffer) {
                value = new Uint8Array(value);
            }

            function getTAElement(ta, index) {
                return ta[index];
            }
            function getStringElement(string, index) {
                return string.charCodeAt(index);
            }
            var getElement;
            if (value instanceof Uint8Array) {
                getElement = getTAElement;
            } else if (value instanceof Int8Array) {
                getElement = getTAElement;
            } else if (typeof value === 'string') {
                getElement = getStringElement;
            } else {
                throwBindingError('Cannot pass non-string to std::string');
            }

            // assumes 4-byte alignment
            var length = value.length;
            var ptr = _malloc(4 + length);
            HEAPU32[ptr >> 2] = length;
            for (var i = 0; i < length; ++i) {
                var charCode = getElement(value, i);
                if (charCode > 255) {
                    _free(ptr);
                    throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                }
                HEAPU8[ptr + 4 + i] = charCode;
            }
            if (destructors !== null) {
                destructors.push(_free, ptr);
            }
            return ptr;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': simpleReadValueFromPointer,
        destructorFunction: function(ptr) { _free(ptr); },
    });
}

function __embind_register_std_wstring(rawType, charSize, name) {
    name = readLatin1String(name);
    var HEAP, shift;
    if (charSize === 2) {
        HEAP = HEAPU16;
        shift = 1;
    } else if (charSize === 4) {
        HEAP = HEAPU32;
        shift = 2;
    }
    registerType(rawType, {
        name: name,
        'fromWireType': function(value) {
            var length = HEAPU32[value >> 2];
            var a = new Array(length);
            var start = (value + 4) >> shift;
            for (var i = 0; i < length; ++i) {
                a[i] = String.fromCharCode(HEAP[start + i]);
            }
            _free(value);
            return a.join('');
        },
        'toWireType': function(destructors, value) {
            // assumes 4-byte alignment
            var length = value.length;
            var ptr = _malloc(4 + length * charSize);
            HEAPU32[ptr >> 2] = length;
            var start = (ptr + 4) >> shift;
            for (var i = 0; i < length; ++i) {
                HEAP[start + i] = value.charCodeAt(i);
            }
            if (destructors !== null) {
                destructors.push(_free, ptr);
            }
            return ptr;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': simpleReadValueFromPointer,
        destructorFunction: function(ptr) { _free(ptr); },
    });
}

function __embind_register_emval(rawType, name) {
    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'fromWireType': function(handle) {
            var rv = _emval_handle_array[handle].value;
            __emval_decref(handle);
            return rv;
        },
        'toWireType': function(destructors, value) {
            return __emval_register(value);
        },
        'argPackAdvance': 8,
        'readValueFromPointer': simpleReadValueFromPointer,
        destructorFunction: null, // This type does not need a destructor
    });
}

function __embind_register_memory_view(rawType, name) {
    var typeMapping = [
        Int8Array,
        Uint8Array,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array,
    ];

    name = readLatin1String(name);
    registerType(rawType, {
        name: name,
        'fromWireType': function(handle) {
            var type = HEAPU32[handle >> 2];
            var size = HEAPU32[(handle >> 2) + 1]; // in elements
            var data = HEAPU32[(handle >> 2) + 2]; // byte offset into emscripten heap
            var TA = typeMapping[type];
            return new TA(HEAP8.buffer, data, size);
        },
        'argPackAdvance': 16,
        'readValueFromPointer': function(ptr) {
            return this['fromWireType'](ptr);
        },
    });
}

function runDestructors(destructors) {
    while (destructors.length) {
        var ptr = destructors.pop();
        var del = destructors.pop();
        del(ptr);
    }
}

// Function implementation of operator new, per
// http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf
// 13.2.2
// ES3
function new_(constructor, argumentList) {
    if (!(constructor instanceof Function)) {
        throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
    }

    /*
     * Previously, the following line was just:

     function dummy() {};

     * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
     * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
     * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
     * to write a test for this behavior.  -NRD 2013.02.22
     */
    var dummy = createNamedFunction(constructor.name, function(){});
    dummy.prototype = constructor.prototype;
    var obj = new dummy;

    var r = constructor.apply(obj, argumentList);
    return (r instanceof Object) ? r : obj;
}

// The path to interop from JS code to C++ code:
// (hand-written JS code) -> (autogenerated JS invoker) -> (template-generated C++ invoker) -> (target C++ function)
// craftInvokerFunction generates the JS invoker function for each function exposed to JS through embind.
function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
    // humanName: a human-readable string name for the function to be generated.
    // argTypes: An array that contains the embind type objects for all types in the function signature.
    //    argTypes[0] is the type object for the function return value.
    //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
    //    argTypes[2...] are the actual function parameters.
    // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
    // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
    // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
    var argCount = argTypes.length;

    if (argCount < 2) {
        throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
    }

    var isClassMethodFunc = (argTypes[1] !== null && classType !== null);

    // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
// TODO: This omits argument count check - enable only at -O3 or similar.
//    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
//       return FUNCTION_TABLE[fn];
//    }

    var argsList = "";
    var argsListWired = "";
    for(var i = 0; i < argCount-2; ++i) {
        argsList += (i!==0?", ":"")+"arg"+i;
        argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
    }

    var invokerFnBody =
        "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
        "if (arguments.length !== "+(argCount - 2)+") {\n" +
            "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
        "}\n";

    // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
    // TODO: Remove this completely once all function invokers are being dynamically generated.
    var needsDestructorStack = false;

    for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
            needsDestructorStack = true;
            break;
        }
    }

    if (needsDestructorStack) {
        invokerFnBody +=
            "var destructors = [];\n";
    }

    var dtorStack = needsDestructorStack ? "destructors" : "null";
    var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
    var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];

    if (isClassMethodFunc) {
        invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
    }

    for(var i = 0; i < argCount-2; ++i) {
        invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
        args1.push("argType"+i);
        args2.push(argTypes[i+2]);
    }

    if (isClassMethodFunc) {
        argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
    }

    var returns = (argTypes[0].name !== "void");

    invokerFnBody +=
        (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";

    if (needsDestructorStack) {
        invokerFnBody += "runDestructors(destructors);\n";
    } else {
        for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
            var paramName = (i === 1 ? "thisWired" : ("arg"+(i-2)+"Wired"));
            if (argTypes[i].destructorFunction !== null) {
                invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                args1.push(paramName+"_dtor");
                args2.push(argTypes[i].destructorFunction);
            }
        }
    }

    if (returns) {
        invokerFnBody += "return retType.fromWireType(rv);\n";
    }
    invokerFnBody += "}\n";

    args1.push(invokerFnBody);

    var invokerFunction = new_(Function, args1).apply(null, args2);
    return invokerFunction;
}

function requireFunction(signature, rawFunction) {
    signature = readLatin1String(signature);
    var fp;
    // asm.js does not define FUNCTION_TABLE
    if (typeof FUNCTION_TABLE === "undefined") {
        // asm.js does not give direct access to the function tables,
        // and thus we must go through the dynCall interface which allows
        // calling into a signature's function table by pointer value.
        //
        // https://github.com/dherman/asm.js/issues/83
        //
        // This has three main penalties:
        // - dynCall is another function call in the path from JavaScript to C++.
        // - JITs may not predict through the function table indirection at runtime.
        // - Function.prototype.bind generally benchmarks poorly relative to
        //   function objects, but using 'arguments' would confound JITs and
        //   possibly allocate.
        var dc = asm['dynCall_' + signature];
        if (dc === undefined) {
            // We will always enter this branch if the signature
            // contains 'f' and PRECISE_F32 is not enabled.
            //
            // Try again, replacing 'f' with 'd'.
            dc = asm['dynCall_' + signature.replace(/f/g, 'd')];
            if (dc === undefined) {
                throwBindingError("No dynCall invoker for signature: " + signature);
            }
        }
        fp = dc.bind(undefined, rawFunction);
    } else {
        fp = FUNCTION_TABLE[rawFunction];
    }

    if (typeof fp !== "function") {
        throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
    }
    return fp;
}

function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
    var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
    name = readLatin1String(name);
    
    rawInvoker = requireFunction(signature, rawInvoker);

    exposePublicSymbol(name, function() {
        throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
    }, argCount - 1);

    whenDependentTypesAreResolved([], argTypes, function(argTypes) {
        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
        return [];
    });
}

var tupleRegistrations = {};

function __embind_register_value_array(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {
    tupleRegistrations[rawType] = {
        name: readLatin1String(name),
        rawConstructor: requireFunction(constructorSignature, rawConstructor),
        rawDestructor: requireFunction(destructorSignature, rawDestructor),
        elements: [],
    };
}

function __embind_register_value_array_element(
    rawTupleType,
    getterReturnType,
    getterSignature,
    getter,
    getterContext,
    setterArgumentType,
    setterSignature,
    setter,
    setterContext
) {
    tupleRegistrations[rawTupleType].elements.push({
        getterReturnType: getterReturnType,
        getter: requireFunction(getterSignature, getter),
        getterContext: getterContext,
        setterArgumentType: setterArgumentType,
        setter: requireFunction(setterSignature, setter),
        setterContext: setterContext,
    });
}

function __embind_finalize_value_array(rawTupleType) {
    var reg = tupleRegistrations[rawTupleType];
    delete tupleRegistrations[rawTupleType];
    var elements = reg.elements;
    var elementsLength = elements.length;
    var elementTypes = elements.map(function(elt) { return elt.getterReturnType; }).
                concat(elements.map(function(elt) { return elt.setterArgumentType; }));

    var rawConstructor = reg.rawConstructor;
    var rawDestructor = reg.rawDestructor;

    whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes) {
        elements.forEach(function(elt, i) {
            var getterReturnType = elementTypes[i];
            var getter = elt.getter;
            var getterContext = elt.getterContext;
            var setterArgumentType = elementTypes[i + elementsLength];
            var setter = elt.setter;
            var setterContext = elt.setterContext;
            elt.read = function(ptr) {
                return getterReturnType['fromWireType'](getter(getterContext, ptr));
            };
            elt.write = function(ptr, o) {
                var destructors = [];
                setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));
                runDestructors(destructors);
            };
        });

        return [{
            name: reg.name,
            'fromWireType': function(ptr) {
                var rv = new Array(elementsLength);
                for (var i = 0; i < elementsLength; ++i) {
                    rv[i] = elements[i].read(ptr);
                }
                rawDestructor(ptr);
                return rv;
            },
            'toWireType': function(destructors, o) {
                if (elementsLength !== o.length) {
                    throw new TypeError("Incorrect number of tuple elements for " + reg.name + ": expected=" + elementsLength + ", actual=" + o.length);
                }
                var ptr = rawConstructor();
                for (var i = 0; i < elementsLength; ++i) {
                    elements[i].write(ptr, o[i]);
                }
                if (destructors !== null) {
                    destructors.push(rawDestructor, ptr);
                }
                return ptr;
            },
            'argPackAdvance': 8,
            'readValueFromPointer': simpleReadValueFromPointer,
            destructorFunction: rawDestructor,
        }];
    });
}

var structRegistrations = {};

function __embind_register_value_object(
    rawType,
    name,
    constructorSignature,
    rawConstructor,
    destructorSignature,
    rawDestructor
) {
    structRegistrations[rawType] = {
        name: readLatin1String(name),
        rawConstructor: requireFunction(constructorSignature, rawConstructor),
        rawDestructor: requireFunction(destructorSignature, rawDestructor),
        fields: [],
    };
}

function __embind_register_value_object_field(
    structType,
    fieldName,
    getterReturnType,
    getterSignature,
    getter,
    getterContext,
    setterArgumentType,
    setterSignature,
    setter,
    setterContext
) {
    structRegistrations[structType].fields.push({
        fieldName: readLatin1String(fieldName),
        getterReturnType: getterReturnType,
        getter: requireFunction(getterSignature, getter),
        getterContext: getterContext,
        setterArgumentType: setterArgumentType,
        setter: requireFunction(setterSignature, setter),
        setterContext: setterContext,
    });
}

function __embind_finalize_value_object(structType) {
    var reg = structRegistrations[structType];
    delete structRegistrations[structType];

    var rawConstructor = reg.rawConstructor;
    var rawDestructor = reg.rawDestructor;
    var fieldRecords = reg.fields;
    var fieldTypes = fieldRecords.map(function(field) { return field.getterReturnType; }).
              concat(fieldRecords.map(function(field) { return field.setterArgumentType; }));
    whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes) {
        var fields = {};
        fieldRecords.forEach(function(field, i) {
            var fieldName = field.fieldName;
            var getterReturnType = fieldTypes[i];
            var getter = field.getter;
            var getterContext = field.getterContext;
            var setterArgumentType = fieldTypes[i + fieldRecords.length];
            var setter = field.setter;
            var setterContext = field.setterContext;
            fields[fieldName] = {
                read: function(ptr) {
                    return getterReturnType['fromWireType'](
                        getter(getterContext, ptr));
                },
                write: function(ptr, o) {
                    var destructors = [];
                    setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));
                    runDestructors(destructors);
                }
            };
        });

        return [{
            name: reg.name,
            'fromWireType': function(ptr) {
                var rv = {};
                for (var i in fields) {
                    rv[i] = fields[i].read(ptr);
                }
                rawDestructor(ptr);
                return rv;
            },
            'toWireType': function(destructors, o) {
                // todo: Here we have an opportunity for -O3 level "unsafe" optimizations:
                // assume all fields are present without checking.
                for (var fieldName in fields) {
                    if (!(fieldName in o)) {
                        throw new TypeError('Missing field');
                    }
                }
                var ptr = rawConstructor();
                for (fieldName in fields) {
                    fields[fieldName].write(ptr, o[fieldName]);
                }
                if (destructors !== null) {
                    destructors.push(rawDestructor, ptr);
                }
                return ptr;
            },
            'argPackAdvance': 8,
            'readValueFromPointer': simpleReadValueFromPointer,
            destructorFunction: rawDestructor,
        }];
    });
}

var genericPointerToWireType = function(destructors, handle) {
    if (handle === null) {
        if (this.isReference) {
            throwBindingError('null is not a valid ' + this.name);
        }

        if (this.isSmartPointer) {
            var ptr = this.rawConstructor();
            if (destructors !== null) {
                destructors.push(this.rawDestructor, ptr);
            }
            return ptr;
        } else {
            return 0;
        }
    }

    if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
    }
    if (!handle.$$.ptr) {
        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
    }
    if (!this.isConst && handle.$$.ptrType.isConst) {
        throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
    }
    var handleClass = handle.$$.ptrType.registeredClass;
    var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);

    if (this.isSmartPointer) {
        // TODO: this is not strictly true
        // We could support BY_EMVAL conversions from raw pointers to smart pointers
        // because the smart pointer can hold a reference to the handle
        if (undefined === handle.$$.smartPtr) {
            throwBindingError('Passing raw pointer to smart pointer is illegal');
        }

        switch (this.sharingPolicy) {
            case 0: // NONE
                // no upcasting
                if (handle.$$.smartPtrType === this) {
                    ptr = handle.$$.smartPtr;
                } else {
                    throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
                }
                break;

            case 1: // INTRUSIVE
                ptr = handle.$$.smartPtr;
                break;

            case 2: // BY_EMVAL
                if (handle.$$.smartPtrType === this) {
                    ptr = handle.$$.smartPtr;
                } else {
                    var clonedHandle = handle['clone']();
                    ptr = this.rawShare(
                        ptr,
                        __emval_register(function() {
                            clonedHandle['delete']();
                        })
                    );
                    if (destructors !== null) {
                        destructors.push(this.rawDestructor, ptr);
                    }
                }
                break;

            default:
                throwBindingError('Unsupporting sharing policy');
        }
    }
    return ptr;
};

// If we know a pointer type is not going to have SmartPtr logic in it, we can
// special-case optimize it a bit (compare to genericPointerToWireType)
var constNoSmartPtrRawPointerToWireType = function(destructors, handle) {
    if (handle === null) {
        if (this.isReference) {
            throwBindingError('null is not a valid ' + this.name);
        }
        return 0;
    }

    if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
    }
    if (!handle.$$.ptr) {
        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
    }
    var handleClass = handle.$$.ptrType.registeredClass;
    var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
    return ptr;
};

// An optimized version for non-const method accesses - there we must additionally restrict that
// the pointer is not a const-pointer.
var nonConstNoSmartPtrRawPointerToWireType = function(destructors, handle) {
    if (handle === null) {
        if (this.isReference) {
            throwBindingError('null is not a valid ' + this.name);
        }
        return 0;
    }

    if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
    }
    if (!handle.$$.ptr) {
        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
    }
    if (handle.$$.ptrType.isConst) {
        throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
    }
    var handleClass = handle.$$.ptrType.registeredClass;
    var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
    return ptr;
};

function RegisteredPointer(
    name,
    registeredClass,
    isReference,
    isConst,

    // smart pointer properties
    isSmartPointer,
    pointeeType,
    sharingPolicy,
    rawGetPointee,
    rawConstructor,
    rawShare,
    rawDestructor
) {
    this.name = name;
    this.registeredClass = registeredClass;
    this.isReference = isReference;
    this.isConst = isConst;

    // smart pointer properties
    this.isSmartPointer = isSmartPointer;
    this.pointeeType = pointeeType;
    this.sharingPolicy = sharingPolicy;
    this.rawGetPointee = rawGetPointee;
    this.rawConstructor = rawConstructor;
    this.rawShare = rawShare;
    this.rawDestructor = rawDestructor;

    if (!isSmartPointer && registeredClass.baseClass === undefined) {
        if (isConst) {
            this['toWireType'] = constNoSmartPtrRawPointerToWireType;
            this.destructorFunction = null;
        } else {
            this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
            this.destructorFunction = null;
        }
    } else {
        this['toWireType'] = genericPointerToWireType;
        // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
        // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
        // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
        //       craftInvokerFunction altogether.
    }
}

RegisteredPointer.prototype.getPointee = function(ptr) {
    if (this.rawGetPointee) {
        ptr = this.rawGetPointee(ptr);
    }
    return ptr;
};

RegisteredPointer.prototype.destructor = function(ptr) {
    if (this.rawDestructor) {
        this.rawDestructor(ptr);
    }
};

RegisteredPointer.prototype['argPackAdvance'] = 8;
RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;

RegisteredPointer.prototype['fromWireType'] = function(ptr) {
    // ptr is a raw pointer (or a raw smartpointer)

    // rawPointer is a maybe-null raw pointer
    var rawPointer = this.getPointee(ptr);
    if (!rawPointer) {
        this.destructor(ptr);
        return null;
    }

    function makeDefaultHandle() {
        if (this.isSmartPointer) {
            return makeClassHandle(this.registeredClass.instancePrototype, {
                ptrType: this.pointeeType,
                ptr: rawPointer,
                smartPtrType: this,
                smartPtr: ptr,
            });
        } else {
            return makeClassHandle(this.registeredClass.instancePrototype, {
                ptrType: this,
                ptr: ptr,
            });
        }
    }

    var actualType = this.registeredClass.getActualType(rawPointer);
    var registeredPointerRecord = registeredPointers[actualType];
    if (!registeredPointerRecord) {
        return makeDefaultHandle.call(this);
    }

    var toType;
    if (this.isConst) {
        toType = registeredPointerRecord.constPointerType;
    } else {
        toType = registeredPointerRecord.pointerType;
    }
    var dp = downcastPointer(
        rawPointer,
        this.registeredClass,
        toType.registeredClass);
    if (dp === null) {
        return makeDefaultHandle.call(this);
    }
    if (this.isSmartPointer) {
        return makeClassHandle(toType.registeredClass.instancePrototype, {
            ptrType: toType,
            ptr: dp,
            smartPtrType: this,
            smartPtr: ptr,
        });
    } else {
        return makeClassHandle(toType.registeredClass.instancePrototype, {
            ptrType: toType,
            ptr: dp,
        });
    }
};

function makeClassHandle(prototype, record) {
    if (!record.ptrType || !record.ptr) {
        throwInternalError('makeClassHandle requires ptr and ptrType');
    }
    var hasSmartPtrType = !!record.smartPtrType;
    var hasSmartPtr = !!record.smartPtr;
    if (hasSmartPtrType !== hasSmartPtr) {
        throwInternalError('Both smartPtrType and smartPtr must be specified');
    }
    record.count = { value: 1 };
    return Object.create(prototype, {
        $$: {
            value: record,
        },
    });
}

// root of all pointer and smart pointer handles in embind
function ClassHandle() {
}

function getInstanceTypeName(handle) {
    return handle.$$.ptrType.registeredClass.name;
}

ClassHandle.prototype['isAliasOf'] = function(other) {
    if (!(this instanceof ClassHandle)) {
        return false;
    }
    if (!(other instanceof ClassHandle)) {
        return false;
    }

    var leftClass = this.$$.ptrType.registeredClass;
    var left = this.$$.ptr;
    var rightClass = other.$$.ptrType.registeredClass;
    var right = other.$$.ptr;

    while (leftClass.baseClass) {
        left = leftClass.upcast(left);
        leftClass = leftClass.baseClass;
    }

    while (rightClass.baseClass) {
        right = rightClass.upcast(right);
        rightClass = rightClass.baseClass;
    }

    return leftClass === rightClass && left === right;
};

function throwInstanceAlreadyDeleted(obj) {
    throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
}

ClassHandle.prototype['clone'] = function() {
    if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
    }

    var clone = Object.create(Object.getPrototypeOf(this), {
        $$: {
            value: shallowCopy(this.$$),
        }
    });

    clone.$$.count.value += 1;
    return clone;
};

function runDestructor(handle) {
    var $$ = handle.$$;
    if ($$.smartPtr) {
        $$.smartPtrType.rawDestructor($$.smartPtr);
    } else {
        $$.ptrType.registeredClass.rawDestructor($$.ptr);
    }
}

ClassHandle.prototype['delete'] = function ClassHandle_delete() {
    if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
    }
    if (this.$$.deleteScheduled) {
        throwBindingError('Object already scheduled for deletion');
    }

    this.$$.count.value -= 1;
    if (0 === this.$$.count.value) {
        runDestructor(this);
    }
    this.$$.smartPtr = undefined;
    this.$$.ptr = undefined;
};

var deletionQueue = [];

ClassHandle.prototype['isDeleted'] = function isDeleted() {
    return !this.$$.ptr;
};

ClassHandle.prototype['deleteLater'] = function deleteLater() {
    if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
    }
    if (this.$$.deleteScheduled) {
        throwBindingError('Object already scheduled for deletion');
    }
    deletionQueue.push(this);
    if (deletionQueue.length === 1 && delayFunction) {
        delayFunction(flushPendingDeletes);
    }
    this.$$.deleteScheduled = true;
    return this;
};

function flushPendingDeletes() {
    while (deletionQueue.length) {
        var obj = deletionQueue.pop();
        obj.$$.deleteScheduled = false;
        obj['delete']();
    }
}
Module['flushPendingDeletes'] = flushPendingDeletes;

var delayFunction;
Module['setDelayFunction'] = function setDelayFunction(fn) {
    delayFunction = fn;
    if (deletionQueue.length && delayFunction) {
        delayFunction(flushPendingDeletes);
    }
};

function RegisteredClass(
    name,
    constructor,
    instancePrototype,
    rawDestructor,
    baseClass,
    getActualType,
    upcast,
    downcast
) {
    this.name = name;
    this.constructor = constructor;
    this.instancePrototype = instancePrototype;
    this.rawDestructor = rawDestructor;
    this.baseClass = baseClass;
    this.getActualType = getActualType;
    this.upcast = upcast;
    this.downcast = downcast;
}

function shallowCopy(o) {
    var rv = {};
    for (var k in o) {
        rv[k] = o[k];
    }
    return rv;
}

function __embind_register_class(
    rawType,
    rawPointerType,
    rawConstPointerType,
    baseClassRawType,
    getActualTypeSignature,
    getActualType,
    upcastSignature,
    upcast,
    downcastSignature,
    downcast,
    name,
    destructorSignature,
    rawDestructor
) {
    name = readLatin1String(name);
    getActualType = requireFunction(getActualTypeSignature, getActualType);
    if (upcast) {
        upcast = requireFunction(upcastSignature, upcast);
    }
    if (downcast) {
        downcast = requireFunction(downcastSignature, downcast);
    }
    rawDestructor = requireFunction(destructorSignature, rawDestructor);
    var legalFunctionName = makeLegalFunctionName(name);

    exposePublicSymbol(legalFunctionName, function() {
        // this code cannot run if baseClassRawType is zero
        throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
    });

    whenDependentTypesAreResolved(
        [rawType, rawPointerType, rawConstPointerType],
        baseClassRawType ? [baseClassRawType] : [],
        function(base) {
            base = base[0];

            var baseClass;
            var basePrototype;
            if (baseClassRawType) {
                baseClass = base.registeredClass;
                basePrototype = baseClass.instancePrototype;
            } else {
                basePrototype = ClassHandle.prototype;
            }

            var constructor = createNamedFunction(legalFunctionName, function() {
                if (Object.getPrototypeOf(this) !== instancePrototype) {
                    throw new BindingError("Use 'new' to construct " + name);
                }
                if (undefined === registeredClass.constructor_body) {
                    throw new BindingError(name + " has no accessible constructor");
                }
                var body = registeredClass.constructor_body[arguments.length];
                if (undefined === body) {
                    throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
                }
                return body.apply(this, arguments);
            });

            var instancePrototype = Object.create(basePrototype, {
                constructor: { value: constructor },
            });

            constructor.prototype = instancePrototype;

            var registeredClass = new RegisteredClass(
                name,
                constructor,
                instancePrototype,
                rawDestructor,
                baseClass,
                getActualType,
                upcast,
                downcast);

            var referenceConverter = new RegisteredPointer(
                name,
                registeredClass,
                true,
                false,
                false);

            var pointerConverter = new RegisteredPointer(
                name + '*',
                registeredClass,
                false,
                false,
                false);

            var constPointerConverter = new RegisteredPointer(
                name + ' const*',
                registeredClass,
                false,
                true,
                false);

            registeredPointers[rawType] = {
                pointerType: pointerConverter,
                constPointerType: constPointerConverter
            };

            replacePublicSymbol(legalFunctionName, constructor);

            return [referenceConverter, pointerConverter, constPointerConverter];
        }
    );
}

function __embind_register_class_constructor(
    rawClassType,
    argCount,
    rawArgTypesAddr,
    invokerSignature,
    invoker,
    rawConstructor
) {
    var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
    invoker = requireFunction(invokerSignature, invoker);

    whenDependentTypesAreResolved([], [rawClassType], function(classType) {
        classType = classType[0];
        var humanName = 'constructor ' + classType.name;

        if (undefined === classType.registeredClass.constructor_body) {
            classType.registeredClass.constructor_body = [];
        }
        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
            throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount-1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
        }
        classType.registeredClass.constructor_body[argCount - 1] = function() {
            throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
        };

        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
            classType.registeredClass.constructor_body[argCount - 1] = function() {
                if (arguments.length !== argCount - 1) {
                    throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));
                }
                var destructors = [];
                var args = new Array(argCount);
                args[0] = rawConstructor;
                for (var i = 1; i < argCount; ++i) {
                    args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);
                }

                var ptr = invoker.apply(null, args);
                runDestructors(destructors);

                return argTypes[0]['fromWireType'](ptr);
            };
            return [];
        });
        return [];
    });
}

function downcastPointer(ptr, ptrClass, desiredClass) {
    if (ptrClass === desiredClass) {
        return ptr;
    }
    if (undefined === desiredClass.baseClass) {
        return null; // no conversion
    }

    var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
    if (rv === null) {
        return null;
    }
    return desiredClass.downcast(rv);
}

function upcastPointer(ptr, ptrClass, desiredClass) {
    while (ptrClass !== desiredClass) {
        if (!ptrClass.upcast) {
            throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
        }
        ptr = ptrClass.upcast(ptr);
        ptrClass = ptrClass.baseClass;
    }
    return ptr;
}

function validateThis(this_, classType, humanName) {
    if (!(this_ instanceof Object)) {
        throwBindingError(humanName + ' with invalid "this": ' + this_);
    }
    if (!(this_ instanceof classType.registeredClass.constructor)) {
        throwBindingError(humanName + ' incompatible with "this" of type ' + this_.constructor.name);
    }
    if (!this_.$$.ptr) {
        throwBindingError('cannot call emscripten binding method ' + humanName + ' on deleted object');
    }

    // todo: kill this
    return upcastPointer(
        this_.$$.ptr,
        this_.$$.ptrType.registeredClass,
        classType.registeredClass);
}

function __embind_register_class_function(
    rawClassType,
    methodName,
    argCount,
    rawArgTypesAddr, // [ReturnType, ThisType, Args...]
    invokerSignature,
    rawInvoker,
    context
) {
    var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
    methodName = readLatin1String(methodName);
    rawInvoker = requireFunction(invokerSignature, rawInvoker);

    whenDependentTypesAreResolved([], [rawClassType], function(classType) {
        classType = classType[0];
        var humanName = classType.name + '.' + methodName;

        var unboundTypesHandler = function() {
            throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
        };

        var proto = classType.registeredClass.instancePrototype;
        var method = proto[methodName];
        if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount-2)) {
            // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.
            unboundTypesHandler.argCount = argCount-2;
            unboundTypesHandler.className = classType.name;
            proto[methodName] = unboundTypesHandler;
        } else {
            // There was an existing function with the same name registered. Set up a function overload routing table.
            ensureOverloadTable(proto, methodName, humanName);
            proto[methodName].overloadTable[argCount-2] = unboundTypesHandler;
        }

        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {

            var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);

            // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
            // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.
            if (undefined === proto[methodName].overloadTable) {
                proto[methodName] = memberFunction;
            } else {
                proto[methodName].overloadTable[argCount-2] = memberFunction;
            }

            return [];
        });
        return [];
    });
}

function __embind_register_class_class_function(
    rawClassType,
    methodName,
    argCount,
    rawArgTypesAddr,
    invokerSignature,
    rawInvoker,
    fn
) {
    var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
    methodName = readLatin1String(methodName);
    rawInvoker = requireFunction(invokerSignature, rawInvoker);
    whenDependentTypesAreResolved([], [rawClassType], function(classType) {
        classType = classType[0];
        var humanName = classType.name + '.' + methodName;

        var unboundTypesHandler = function() {
                throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
            };

        var proto = classType.registeredClass.constructor;
        if (undefined === proto[methodName]) {
            // This is the first function to be registered with this name.
            unboundTypesHandler.argCount = argCount-1;
            proto[methodName] = unboundTypesHandler;
        } else {
            // There was an existing function with the same name registered. Set up a function overload routing table.
            ensureOverloadTable(proto, methodName, humanName);
            proto[methodName].overloadTable[argCount-1] = unboundTypesHandler;
        }

        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
            // Replace the initial unbound-types-handler stub with the proper function. If multiple overloads are registered,
            // the function handlers go into an overload table.
            var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
            var func = craftInvokerFunction(humanName, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn);
            if (undefined === proto[methodName].overloadTable) {
                proto[methodName] = func;
            } else {
                proto[methodName].overloadTable[argCount-1] = func;
            }
            return [];
        });
        return [];
    });
}

function __embind_register_class_property(
    classType,
    fieldName,
    getterReturnType,
    getterSignature,
    getter,
    getterContext,
    setterArgumentType,
    setterSignature,
    setter,
    setterContext
) {
    fieldName = readLatin1String(fieldName);
    getter = requireFunction(getterSignature, getter);

    whenDependentTypesAreResolved([], [classType], function(classType) {
        classType = classType[0];
        var humanName = classType.name + '.' + fieldName;
        var desc = {
            get: function() {
                throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
            },
            enumerable: true,
            configurable: true
        };
        if (setter) {
            desc.set = function() {
                throwUnboundTypeError('Cannot access ' + humanName + ' due to unbound types', [getterReturnType, setterArgumentType]);
            };
        } else {
            desc.set = function(v) {
                throwBindingError(humanName + ' is a read-only property');
            };
        }

        Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);

        whenDependentTypesAreResolved(
            [],
            (setter ? [getterReturnType, setterArgumentType] : [getterReturnType]),
        function(types) {
            var getterReturnType = types[0];
            var desc = {
                get: function() {
                    var ptr = validateThis(this, classType, humanName + ' getter');
                    return getterReturnType['fromWireType'](getter(getterContext, ptr));
                },
                enumerable: true
            };

            if (setter) {
                setter = requireFunction(setterSignature, setter);
                var setterArgumentType = types[1];
                desc.set = function(v) {
                    var ptr = validateThis(this, classType, humanName + ' setter');
                    var destructors = [];
                    setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, v));
                    runDestructors(destructors);
                };
            }

            Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
            return [];
        });

        return [];
    });
}

var char_0 = '0'.charCodeAt(0);
var char_9 = '9'.charCodeAt(0);
function makeLegalFunctionName(name) {
    name = name.replace(/[^a-zA-Z0-9_]/g, '$');
    var f = name.charCodeAt(0);
    if (f >= char_0 && f <= char_9) {
        return '_' + name;
    } else {
        return name;
    }
}

function __embind_register_smart_ptr(
    rawType,
    rawPointeeType,
    name,
    sharingPolicy,
    getPointeeSignature,
    rawGetPointee,
    constructorSignature,
    rawConstructor,
    shareSignature,
    rawShare,
    destructorSignature,
    rawDestructor
) {
    name = readLatin1String(name);
    rawGetPointee = requireFunction(getPointeeSignature, rawGetPointee);
    rawConstructor = requireFunction(constructorSignature, rawConstructor);
    rawShare = requireFunction(shareSignature, rawShare);
    rawDestructor = requireFunction(destructorSignature, rawDestructor);

    whenDependentTypesAreResolved([rawType], [rawPointeeType], function(pointeeType) {
        pointeeType = pointeeType[0];

        var registeredPointer = new RegisteredPointer(
            name,
            pointeeType.registeredClass,
            false,
            false,
            // smart pointer properties
            true,
            pointeeType,
            sharingPolicy,
            rawGetPointee,
            rawConstructor,
            rawShare,
            rawDestructor);
        return [registeredPointer];
    });
}

function __embind_register_enum(
    rawType,
    name,
    size,
    isSigned
) {
    var shift = getShiftFromSize(size);
    name = readLatin1String(name);

    function constructor() {
    }
    constructor.values = {};

    registerType(rawType, {
        name: name,
        constructor: constructor,
        'fromWireType': function(c) {
            return this.constructor.values[c];
        },
        'toWireType': function(destructors, c) {
            return c.value;
        },
        'argPackAdvance': 8,
        'readValueFromPointer': integerReadValueFromPointer(name, shift, isSigned),
        destructorFunction: null,
    });
    exposePublicSymbol(name, constructor);
}

function __embind_register_enum_value(
    rawEnumType,
    name,
    enumValue
) {
    var enumType = requireRegisteredType(rawEnumType, 'enum');
    name = readLatin1String(name);

    var Enum = enumType.constructor;

    var Value = Object.create(enumType.constructor.prototype, {
        value: {value: enumValue},
        constructor: {value: createNamedFunction(enumType.name + '_' + name, function() {})},
    });
    Enum.values[enumValue] = Value;
    Enum[name] = Value;
}

function __embind_register_constant(name, type, value) {
    name = readLatin1String(name);
    whenDependentTypesAreResolved([], [type], function(type) {
        type = type[0];
        Module[name] = type['fromWireType'](value);
        return [];
    });
}
/*global Module:true, Runtime*/
/*global HEAP32*/
/*global new_*/
/*global createNamedFunction*/
/*global readLatin1String, writeStringToMemory*/
/*global requireRegisteredType, throwBindingError, runDestructors*/
/*jslint sub:true*/ /* The symbols 'fromWireType' and 'toWireType' must be accessed via array notation to be closure-safe since craftInvokerFunction crafts functions as strings that can't be closured. */

var Module = Module || {};

var _emval_handle_array = [{}]; // reserve zero
var _emval_free_list = [];

// Public JS API

/** @expose */
Module.count_emval_handles = function() {
    var count = 0;
    for (var i = 1; i < _emval_handle_array.length; ++i) {
        if (_emval_handle_array[i] !== undefined) {
            ++count;
        }
    }
    return count;
};

/** @expose */
Module.get_first_emval = function() {
    for (var i = 1; i < _emval_handle_array.length; ++i) {
        if (_emval_handle_array[i] !== undefined) {
            return _emval_handle_array[i];
        }
    }
    return null;
};

// Private C++ API

var _emval_symbols = {}; // address -> string

function __emval_register_symbol(address) {
    _emval_symbols[address] = readLatin1String(address);
}

function getStringOrSymbol(address) {
    var symbol = _emval_symbols[address];
    if (symbol === undefined) {
        return readLatin1String(address);
    } else {
        return symbol;
    }
}

function requireHandle(handle) {
    if (!handle) {
        throwBindingError('Cannot use deleted val. handle = ' + handle);
    }
    return _emval_handle_array[handle].value;
}

function __emval_register(value) {
    var handle = _emval_free_list.length ?
        _emval_free_list.pop() :
        _emval_handle_array.length;

    _emval_handle_array[handle] = {refcount: 1, value: value};
    return handle;
}

function __emval_incref(handle) {
    if (handle) {
        _emval_handle_array[handle].refcount += 1;
    }
}

function __emval_decref(handle) {
    if (handle && 0 === --_emval_handle_array[handle].refcount) {
        _emval_handle_array[handle] = undefined;
        _emval_free_list.push(handle);
    }
}

function __emval_run_destructors(handle) {
    var destructors = _emval_handle_array[handle].value;
    runDestructors(destructors);
    __emval_decref(handle);
}

function __emval_new_array() {
    return __emval_register([]);
}

function __emval_new_object() {
    return __emval_register({});
}

function __emval_undefined() {
    return __emval_register(undefined);
}

function __emval_null() {
    return __emval_register(null);
}

function __emval_new_cstring(v) {
    return __emval_register(getStringOrSymbol(v));
}

function __emval_take_value(type, argv) {
    type = requireRegisteredType(type, '_emval_take_value');
    var v = type['readValueFromPointer'](argv);
    return __emval_register(v);
}

var __newers = {}; // arity -> function


function craftEmvalAllocator(argCount) {
    /*This function returns a new function that looks like this:
    function emval_allocator_3(constructor, argTypes, args) {
        var argType0 = requireRegisteredType(HEAP32[(argTypes >> 2)], "parameter 0");
        var arg0 = argType0.readValueFromPointer(args);
        var argType1 = requireRegisteredType(HEAP32[(argTypes >> 2) + 1], "parameter 1");
        var arg1 = argType1.readValueFromPointer(args + 8);
        var argType2 = requireRegisteredType(HEAP32[(argTypes >> 2) + 2], "parameter 2");
        var arg2 = argType2.readValueFromPointer(args + 16);
        var obj = new constructor(arg0, arg1, arg2);
        return __emval_register(obj);
    } */

    var argsList = "";
    for(var i = 0; i < argCount; ++i) {
        argsList += (i!==0?", ":"")+"arg"+i; // 'arg0, arg1, ..., argn'
    }

    var functionBody =
        "return function emval_allocator_"+argCount+"(constructor, argTypes, args) {\n";

    for(var i = 0; i < argCount; ++i) {
        functionBody +=
            "var argType"+i+" = requireRegisteredType(HEAP32[(argTypes >> 2) + "+i+"], \"parameter "+i+"\");\n" +
            "var arg"+i+" = argType"+i+".readValueFromPointer(args);\n" +
            "args += argType"+i+".argPackAdvance;\n";
    }
    functionBody +=
        "var obj = new constructor("+argsList+");\n" +
        "return __emval_register(obj);\n" +
        "}\n";

    /*jshint evil:true*/
    return (new Function("requireRegisteredType", "HEAP32", "__emval_register", functionBody))(
        requireRegisteredType, HEAP32, __emval_register);
}

function __emval_new(handle, argCount, argTypes, args) {
    handle = requireHandle(handle);

    var newer = __newers[argCount];
    if (!newer) {
        newer = craftEmvalAllocator(argCount);
        __newers[argCount] = newer;
    }

    return newer(handle, argTypes, args);
}

// appease jshint (technically this code uses eval)
var global = (function(){return Function;})()('return this')();

function __emval_get_global(name) {
    name = getStringOrSymbol(name);
    return __emval_register(global[name]);
}

function __emval_get_module_property(name) {
    name = getStringOrSymbol(name);
    return __emval_register(Module[name]);
}

function __emval_get_property(handle, key) {
    handle = requireHandle(handle);
    key = requireHandle(key);
    return __emval_register(handle[key]);
}

function __emval_set_property(handle, key, value) {
    handle = requireHandle(handle);
    key = requireHandle(key);
    value = requireHandle(value);
    handle[key] = value;
}

function __emval_as(handle, returnType, destructorsRef) {
    handle = requireHandle(handle);
    returnType = requireRegisteredType(returnType, 'emval::as');
    var destructors = [];
    var rd = __emval_register(destructors);
    HEAP32[destructorsRef >> 2] = rd;
    return returnType['toWireType'](destructors, handle);
}

function __emval_call(handle, argCount, argTypes, argv) {
    handle = requireHandle(handle);
    var types = lookupTypes(argCount, argTypes);

    var args = new Array(argCount);
    for (var i = 0; i < argCount; ++i) {
        var type = types[i];
        args[i] = type['readValueFromPointer'](argv);
        argv += type.argPackAdvance;
    }

    var rv = handle.apply(undefined, args);
    return __emval_register(rv);
}

function lookupTypes(argCount, argTypes, argWireTypes) {
    var a = new Array(argCount);
    for (var i = 0; i < argCount; ++i) {
        a[i] = requireRegisteredType(
            HEAP32[(argTypes >> 2) + i],
            "parameter " + i);
    }
    return a;
}

function allocateDestructors(destructorsRef) {
    var destructors = [];
    HEAP32[destructorsRef >> 2] = __emval_register(destructors);
    return destructors;
}

// Leave id 0 undefined.  It's not a big deal, but might be confusing
// to have null be a valid method caller.
var methodCallers = [undefined];

function addMethodCaller(caller) {
    var id = methodCallers.length;
    methodCallers.push(caller);
    return id;
}

function __emval_get_method_caller(argCount, argTypes) {
    var types = lookupTypes(argCount, argTypes);

    var retType = types[0];
    var signatureName = retType.name + "_$" + types.slice(1).map(function (t) { return t.name; }).join("_") + "$";

    var params = ["retType"];
    var args = [retType];

    var argsList = ""; // 'arg0, arg1, arg2, ... , argN'
    for (var i = 0; i < argCount - 1; ++i) {
        argsList += (i !== 0 ? ", " : "") + "arg" + i;
        params.push("argType" + i);
        args.push(types[1 + i]);
    }

    var functionBody =
        "return function (handle, name, destructors, args) {\n";

    for (var i = 0; i < argCount - 1; ++i) {
        functionBody +=
        "    var arg" + i + " = argType" + i + ".readValueFromPointer(args);\n" +
        "    args += argType" + i + ".argPackAdvance;\n";
    }
    functionBody +=
        "    var rv = handle[name](" + argsList + ");\n" +
        "    return retType.toWireType(destructors, rv);\n" +
        "};\n";

    params.push(functionBody);
    var invokerFunction = new_(Function, params).apply(null, args);
    return addMethodCaller(createNamedFunction(signatureName, invokerFunction));
}

function __emval_call_method(caller, handle, methodName, destructorsRef, args) {
    caller = methodCallers[caller];
    handle = requireHandle(handle);
    methodName = getStringOrSymbol(methodName);
    return caller(handle, methodName, allocateDestructors(destructorsRef), args);
}

function __emval_has_function(handle, name) {
    handle = requireHandle(handle);
    name = getStringOrSymbol(name);
    return handle[name] instanceof Function;
}


if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






